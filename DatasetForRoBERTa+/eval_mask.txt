private void initialize(Configuration conf) {<z>
.get(HEALTH_CHECK_SCRIPT_PROPERTY);<z>
,<z>
DEFAULT_HEALTH_CHECK_INTERVAL);<z>
= conf.getLong(HEALTH_CHECK_FAILURE_INTERVAL_PROPERTY,<z>
);<z>
.getStrings(HEALTH_CHECK_SCRIPT_ARGUMENTS_PROPERTY,<z>
);<z>
timer = new NodeHealthMonitorExecutor(args);<z>
getInstance() {<z>
) {<z>
PropertyEditorService();<z>
configureProviders(Activator.ID, "propertyEditorProvider");<z>
;<z>
private void setLineStyle(PictogramElement pe) {<z>
pe.getGraphicsAlgorithm() != null) {<z>
;<z>
ga.getLineStyle() != null) {<z>
Style style = ga.getStyle();<z>
) {<z>
lineStyle);<z>
} else {<z>
;<z>
else {<z>
);<z>
IOException, FileNotFoundException {<z>
getName();<z>
) == false) {<z>
prefix = "WebServerResources/Java";<z>
if (name.startsWith(prefix)) {<z>
);<z>
) + 1);<z>
destinationFolderWithPathFromJarEntry, destinationName);<z>
().exists()) {<z>
().mkdirs();<z>
();<z>
= null;<z>
= null;<z>
(jarFileName).getInputStream(jarEntry);<z>
);<z>
];<z>
int len;<z>
0) {<z>
.write(buf, 0, len);<z>
{<z>
) {<z>
();<z>
if (os != null) {<z>
.close();<z>
) {<z>
PARTNER + "\"";<z>
"&";<z>
PartnerConfig.SELLER + "\"";<z>
strOrderInfo += "&";<z>
) + "\"";<z>
;<z>
;<z>
+= "&";<z>
+ "\"";<z>
;<z>
+ "\"" + "10.00" + "\"";<z>
strOrderInfo += "&";<z>
"notify_url=" + "\""<z>
;<z>
return strOrderInfo;<z>
{<z>
0) == '#') {<z>
ch;<z>
== 'x') {<z>
.substring(2), 16);<z>
} else {<z>
, 10);<z>
(char) ch;<z>
) {<z>
else {<z>
.get(symbol);<z>
null) {<z>
;<z>
return "&" + symbol;<z>
(Tab collectionTab){<z>
.getMetaProperties();<z>
it = properties.iterator();<z>
hasNext()) {<z>
next();<z>
) ){<z>
();<z>
.empty(labelId)) continue;<z>
= labelId.replace(<z>
".tab.properties",<z>
) + "." + getMemberName());<z>
) property.setLabelId(result);<z>
, Launcher launcher, BuildListener listener)<z>
InterruptedException<z>
expandedTestResults, build, launcher, listener);<z>
getStd()<z>
stdCalculated)<z>
;<z>
);<z>
return std;<z>
final Map<Integer, PerspectiveDockable> children ){<z>
{<z>
convert( ConvertedPlaceholderListItem item ){<z>
null ){<z>
null;<z>
);<z>
id );<z>
( dockable != null ){<z>
);<z>
= item.getInt( "size" );<z>
;<z>
;<z>
.hold = hold;<z>
element.size = size;<z>
this );<z>
return element;<z>
null;<z>
);<z>
index, int idx)<z>
get(index);<z>
null)<z>
= get(idx);<z>
;<z>
double latitude, double longitude) {<z>
TRANSPORT_STOP_ZOOM, longitude);<z>
TRANSPORT_STOP_ZOOM, latitude);<z>
(TransportIndex index : transportIndexes) {<z>
<= y && index.bottom >= y) {<z>
;<z>
false;<z>
boolean isInOwnBankRegion(Player player) {<z>
+ player.getName() + ".Bank");<z>
ID)) {<z>
return true;<z>
return false;<z>
BBBody body) {<z>
(m_bodyCount < m_bodyCapacity);<z>
body.m_islandIndex = m_bodyCount;<z>
] = body;<z>
close() {<z>
(sessionFactory != null) {<z>
);<z>
sessionFactory = null;<z>
value) {<z>
) {<z>
: return UNKNOWN;<z>
case DERIVATIVE_VALUE: return DERIVATIVE;<z>
case ORIGINAL_VALUE: return ORIGINAL;<z>
null;<z>
start()<z>
++ % 4) == 0))<z>
true;<z>
Timer_forcedGarbageCollectionTimer.start();<z>
Timer_outstandingTimers.iterator();<z>
(timerIt.hasNext())<z>
);<z>
;<z>
gc();<z>
);<z>
(timerIt.hasNext())<z>
timerIt.next();<z>
t.start();<z>
.Timer_forcedGarbageCollectionTimer.end();<z>
.Timer_isGarbageCollecting = false;<z>
currentTimeMillis();<z>
(hasStarted)<z>
new RuntimeException("timer " + name + " has already been started!");<z>
= true;<z>
!G.v().Timer_isGarbageCollecting)<z>
).Timer_outstandingTimers.add(this);<z>
public void fnDayFromDate1args2() {<z>
query = new XQuery(<z>
;<z>
res = result(query);<z>
;<z>
assertStringValue(false, "17")<z>
void refreshLayout() {<z>
);<z>
(mfont);<z>
.panel().refreshLayout();<z>
ContextUpdates[] temp) {<z>
j++) {<z>
()))<z>
false;<z>
;<z>
public FileDialog (Shell parent, int style) {<z>
;<z>
) {<z>
) this.style |= SWT.SHEET;<z>
checkSubclass ();<z>
) {<z>
{<z>
return true;<z>
) {<z>
;<z>
(JpaAuthority) o;<z>
) : authority.entityId != null) {<z>
;<z>
return true;<z>
resolve, boolean coreType) {<z>
) {<z>
TaiPanPackage.PORT__LOCATION:<z>
getLocation();<z>
.PORT__BUILDINGS:<z>
();<z>
:<z>
return getRegister();<z>
, coreType);<z>
{<z>
{<z>
;<z>
} else {<z>
topBar.setVisibility(View.VISIBLE);<z>
(selectedSensor, topBar);<z>
quaternion)<z>
if (quaternion == null)<z>
);<z>
;<z>
);<z>
(this.w * quaternion.w);<z>
, Object data) {<z>
.getFirstDescendantOfType(ASTClassOrInterfaceType.class);<z>
.getImage())) {<z>
return data;<z>
= cit.getFirstDescendantOfType(ASTClassOrInterfaceType.class);<z>
if (cit == null) {<z>
;<z>
(ASTVariableDeclaratorId.class);<z>
;<z>
for (NameOccurrence no: usages) {<z>
) no.getLocation();<z>
().jjtGetParent();<z>
n instanceof ASTCastExpression) {<z>
addViolation(data, n);<z>
return null;<z>
{<z>
();<z>
persistentConstructor.setName(TinkerGenerationUtil.PERSISTENT_CONSTRUCTOR_NAME);<z>
PERSISTENT_CONSTRUCTOR_PARAM_NAME, new OJPathName("java.lang.Boolean"));<z>
;<z>
IASTExpression expression) {<z>
if (expression instanceof IASTIdExpression) {<z>
idExpression= (IASTIdExpression)expression;<z>
());<z>
IASTExpressionList) {<z>
(IASTExpressionList)expression;<z>
;<z>
< expressions.length; i++) {<z>
> 0) {<z>
COMMA_SPACE);<z>
);<z>
;<z>
) {<z>
)expression;<z>
(buffer, typeCast.getDeclSpecifier());<z>
(buffer);<z>
getInitializer());<z>
instanceof IASTArraySubscriptExpression)<z>
appendArraySubscriptExpression(buffer, (IASTArraySubscriptExpression) expression);<z>
(expression instanceof IASTBinaryExpression)<z>
IASTBinaryExpression) expression);<z>
(expression instanceof IASTCastExpression)<z>
) expression);<z>
instanceof IASTConditionalExpression)<z>
;<z>
)<z>
) expression);<z>
instanceof IASTFieldReference)<z>
(IASTFieldReference) expression);<z>
if (expression instanceof IASTFunctionCallExpression)<z>
, (IASTFunctionCallExpression) expression);<z>
IASTLiteralExpression)<z>
(IASTLiteralExpression) expression);<z>
if (expression instanceof IASTTypeIdExpression)<z>
) expression);<z>
instanceof IASTUnaryExpression)<z>
buffer, (IASTUnaryExpression) expression);<z>
instanceof ICASTTypeIdInitializerExpression)<z>
ICASTTypeIdInitializerExpression) expression);<z>
)<z>
;<z>
(expression instanceof ICPPASTNewExpression)<z>
, (ICPPASTNewExpression) expression);<z>
(expression instanceof IGNUASTCompoundStatementExpression)<z>
, (IGNUASTCompoundStatementExpression) expression);<z>
)<z>
) expression);<z>
return buffer;<z>
{<z>
.APPEND, persisted, getPreferencesHint());<z>
persisted);<z>
T getNamedObject(String name)<z>
.lock();<z>
.get(name);<z>
.unlock();<z>
File savePath, String name) {<z>
.getBaseName(name);<z>
);<z>
, name);<z>
= 1;<z>
100) {<z>
);<z>
i++;<z>
return f;<z>
loadFile(String _filename) throws IOException {<z>
String fileContents = "";<z>
fc = null;<z>
;<z>
null;<z>
.getSurveyDirName();<z>
+ _filename;<z>
+ _filename;<z>
( pathToSurveyWithData );<z>
{<z>
"");<z>
{<z>
);<z>
"Sending file without binary data", "");<z>
;<z>
null) {<z>
isEncryptionConfigured() )<z>
();<z>
.openDataInputStream();<z>
) {<z>
new AES();<z>
( inputStream ) );<z>
(Exception e) {<z>
.getInstance());<z>
);<z>
);<z>
();<z>
1) {<z>
) data);<z>
inputStream.read();<z>
.toString();<z>
} finally {<z>
!= null)<z>
();<z>
outputStream != null)<z>
outputStream.close();<z>
null)<z>
);<z>
fileContents;<z>
{<z>
;<z>
reduceOutClass = null;<z>
if(reducers == null)<z>
class);<z>
== null || reducers.length != 1) {<z>
errors.add(new PhaseError(<z>
;<z>
[0];<z>
;<z>
;<z>
= null;<z>
== Object.class)<z>
> 0) {<z>
).getPrototype();<z>
if(reduceOutProto == null)<z>
.add(new PhaseError("reduce out message prototype not defined"));<z>
.getClass();<z>
else {<z>
newInstance(reduceOutClass);<z>
();<z>
== null) {<z>
reduceOutProto);<z>
) {<z>
()));<z>
.getClass() != reduceOutClass) {<z>
errors.add(new PhaseError(<z>
" vs "<z>
);<z>
e) {<z>
PhaseError(e,<z>
reduceOutClass));<z>
(reduceOutProto != null)<z>
ReflectUtils.getSchema(reduceOutProto);<z>
.length == 0)) {<z>
mapOutClass;<z>
ObjectFactory.newInstance(reduceOutClass);<z>
reduceOutProto);<z>
} catch (Exception e) {<z>
,<z>
;<z>
void addServiceListener( ServiceListener serviceListener, String string )<z>
throw new UnsupportedOperationException();<z>
public boolean rejectPetition(L2PcInstance respondingAdmin, int petitionId)<z>
petitionId))<z>
return false;<z>
().get(petitionId);<z>
getResponder() != null)<z>
false;<z>
(respondingAdmin);<z>
));<z>
public ESTTrackReader( String fileName ) {<z>
FileInputStream( fileName );<z>
( fis );<z>
);<z>
();<z>
e ) {<z>
+ "] was not found." );<z>
( SecurityException e ) {<z>
+ "]." );<z>
) {<z>
() );<z>
Q> getBeanForPayload(SimpleProxyId<Q> id,<z>
) {<z>
@SuppressWarnings("unchecked")<z>
);<z>
null) {<z>
id, domainObject);<z>
return toReturn;<z>
String word) {<z>
> words = tab.get(fileName);<z>
words != null) {<z>
word.length() - 1));<z>
{<z>
remove(fileName);<z>
public void loadFromString(String contents) throws InvalidConfigurationException {<z>
(contents, "Contents cannot be null");<z>
<?, ?> input;<z>
load(contents);<z>
YAMLException e) {<z>
new InvalidConfigurationException(e);<z>
{<z>
("Top level is not a Map.");<z>
(contents);<z>
) > 0) {<z>
options().header(header);<z>
) {<z>
;<z>
) {<z>
);<z>
false;<z>
();<z>
public static LocationType getLocationType( String location )<z>
.startsWith( CLASSPATH.getSuffix() ) )<z>
return CLASSPATH;<z>
FILESYSTEM.getSuffix() ) )<z>
FILESYSTEM;<z>
WEBAPP;<z>
) {<z>
;<z>
{<z>
addMateriaVirtual(m)) {<z>
ret = false;<z>
ret;<z>
, int begin, int nelems)<z>
IOException {<z>
] values = (byte []) from;<z>
(offset);<z>
values, begin, nelems);<z>
{<z>
o1.getProperty(FilePropertyKey.BITRATE);<z>
getProperty(FilePropertyKey.BITRATE);<z>
bitRate1 instanceof Number) {<z>
instanceof Number) {<z>
;<z>
);<z>
;<z>
} else {<z>
1;<z>
{<z>
Number) ? -1 : 0;<z>
store) {<z>
;<z>
key, PreferenceConstantHelper.WIDTH), 40);<z>
, 40);<z>
();<z>
String name : map.keySet()) {<z>
key, name, PreferenceConstantHelper.COMPARTMENT_VISIBILITY);<z>
, map.get(name));<z>
;<z>
)) {<z>
, name, PreferenceConstantHelper.COMPARTMENT_NAME_VISIBILITY);<z>
);<z>
player, String[] args) {<z>
);<z>
if (args.length !=2) {<z>
);<z>
+ " incorrectly called /setvelocity");<z>
else {<z>
args[0]);<z>
.parseDouble(args[1]);<z>
0);<z>
Double change = velocity - oldVelocity;<z>
("#.##");<z>
decFormat.format(velocity));<z>
request = item + ".velocity";<z>
equals("")) {<z>
DynamicEconomy.prefix + Messages.itemDoesntExist);<z>
);<z>
{<z>
velocity);<z>
saveItemFile();<z>
"&2Velocity of &f" + item + " &2set to &f" + velocity);<z>
+ item + " to " + velocity);<z>
, 0);<z>
(RetrieveDocumentSetRequestType body) {<z>
= null;<z>
NullChecker.isNotNullish(body.getDocumentRequest())<z>
).get(0) != null) {<z>
.get(0).getHomeCommunityId();<z>
;<z>
RecognitionException {<z>
keepStackSize();<z>
backtracking==0 ) {<z>
);<z>
failed) return ;<z>
if ( state.backtracking==0 ) {<z>
));<z>
) {<z>
reportError(re);<z>
re);<z>
stackSize);<z>
{<z>
frame;<z>
(tb_frame != null)<z>
= tb_frame.getline();<z>
= Py.None;<z>
dataSet )<z>
dataSet == null )<z>
.VERSION_3_2_2 )<z>
.versionNumber < VersionUtil.VERSION_3_2_6 ) )<z>
null );<z>
(BluetoothSocket socket, String socketType) {<z>
);<z>
;<z>
= null;<z>
;<z>
;<z>
tmpOut = socket.getOutputStream();<z>
(IOException e) {<z>
D.dbge( "temp sockets not created", e);<z>
mmInStream = tmpIn;<z>
;<z>
{<z>
String response = verboiceStub.handleIncomingCall();<z>
;<z>
;<z>
= "1";<z>
= verboiceStub.handle(response, listenToMMMessages);<z>
= verboiceStub.handle(response, "someinvalidmotechid");<z>
;<z>
verboiceStub.handle(response, connectToCallCenterOption);<z>
);<z>
"*";<z>
connectToCallCenterOption);<z>
validateConnectToCallCenter(responseForConnectToCallCenterOption);<z>
,IPojo tmpPOJO)<z>
;<z>
Name = tmpName;<z>
Action;<z>
.draggedPOJO = tmpPOJO;<z>
<?> genericIfc) {<z>
;<z>
();<z>
= method.getGenericReturnType();<z>
genericIfc)) {<z>
instanceof ParameterizedType) {<z>
;<z>
();<z>
actualTypeArguments[0];<z>
WildcardType)) {<z>
typeArg;<z>
} else {<z>
return null;<z>
<?>) returnType, genericIfc);<z>
sort) {<z>
(sort == mLastSortMode) {<z>
;<z>
;<z>
picpath)<z>
Exception {<z>
;<z>
);<z>
ArrayList<QParameter>();<z>
;<z>
,<z>
oauth);<z>
)<z>
{<z>
();<z>
new_publish.setPublicKey( null );<z>
;<z>
void initializeFrom(ILaunchConfiguration configuration) {<z>
(<z>
configuration.getAttribute(<z>
.AUT_ID_KEY,<z>
AutLaunchConfigurationConstants.AUT_ID_DEFAULT_VALUE));<z>
) {<z>
"An error occurred while initializing AUT ID text field.", ce);<z>
Exception {<z>
7 + m_NumDecimals;<z>
= m_NumDecimals;<z>
;<z>
setDataset(inst.dataset());<z>
());<z>
= classifier.classifyInstance(withMissing);<z>
, 6));<z>
{<z>
if (inst.classIsMissing())<z>
Utils.padLeft("?", width));<z>
width, prec));<z>
predValue))<z>
));<z>
, prec));<z>
) || inst.classIsMissing())<z>
Utils.padLeft("?", width));<z>
;<z>
} else {<z>
, width));<z>
if (Utils.isMissingValue(predValue))<z>
"?", width));<z>
predValue), width));<z>
))<z>
(" " + " + ");<z>
append(" " + " ");<z>
(m_OutputDistribution) {<z>
if (Utils.isMissingValue(predValue)) {<z>
append(" " + "?");<z>
" ");<z>
dist = classifier.distributionForInstance(withMissing);<z>
n < dist.length; n++) {<z>
> 0)<z>
(",");<z>
if (n == (int) predValue)<z>
;<z>
);<z>
)<z>
;<z>
], prec));<z>
withMissing) + "\n");<z>
void clearCache() {<z>
_HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE) {<z>
class.getName());<z>
;<z>
;<z>
);<z>
FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);<z>
String processNoneSerializableArgument(Object argument)<z>
)<z>
create());<z>
toString() : "null";<z>
caller, ASTNode child) {<z>
{<z>
int childIndex = caller.getIndexOfChild(child);<z>
;<z>
).Define_boolean_isDest(this, caller);<z>
convertView, ViewGroup parent) {<z>
== null) {<z>
layout.textandicon, parent, false);<z>
();<z>
findViewById(R.id.textView);<z>
findViewById(R.id.imageView);<z>
setTag(vh);<z>
.getTag();<z>
mTitles[position]);<z>
.setImageDrawable(mIcons[position]);<z>
convertView;<z>
(Context context) {<z>
);<z>
;<z>
;<z>
.SURFACE_TYPE_PUSH_BUFFERS);<z>
toString() {<z>
new StringBuilder("<remove-list ");<z>
listFma).append("\" ");<z>
()) {<z>
this.doCacheClearFse).append("\" ");<z>
append("/>");<z>
sb.toString();<z>
public void onCreate(Bundle savedInstanceState) {<z>
savedInstanceState);<z>
layout.main_display);<z>
.context = this;<z>
listView1);<z>
(R.id.listView2);<z>
frameLayout1);<z>
);<z>
setOnTouchListener(listenerMoveOnTouch);<z>
pictureAdapter = new PictureAdapter(this, 50);<z>
);<z>
(pictureAdapter);<z>
;<z>
setOnItemClickListener(listenerOnPicture);<z>
.setOnItemSelectedListener(mOnItemSelectedListener);<z>
listenerMoveOnTouch);<z>
);<z>
.setOnItemClickListener(listenerAddPicture);<z>
listenerRemovePicture);<z>
;<z>
(this, this);<z>
relpath) {<z>
return loveAppRootOnSdCard + "/" + relpath;<z>
() {<z>
) & 0xffffffffL;<z>
long)readDWord() & 0xffffffffL;<z>
32) + l1;<z>
{<z>
;<z>
bis = new BlockingInputStream();<z>
= bis.getOutputStream();<z>
bos);<z>
);<z>
("Initializing ResourceInputStream done");<z>
high, final double low, final double close,<z>
) {<z>
.open = open;<z>
.high = high;<z>
low;<z>
.close = close;<z>
;<z>
{<z>
if (part instanceof XtextEditor) {<z>
);<z>
);<z>
{<z>
<AvailableBlock> availableBlocks = internalRetrieveSchedule(owner);<z>
schedule = new AvailableSchedule(availableBlocks);<z>
schedule;<z>
) {<z>
.longValue(), isField);<z>
) <= 0) {<z>
);<z>
RuntimeException("modul to large for long " + m);<z>
) {<z>
this.totalBins = totalBins;<z>
= maxValue;<z>
this.bins = new int[ totalBins ];<z>
capacity) {<z>
);<z>
capacity < 0) {<z>
IllegalArgumentException();<z>
limit = capacity;<z>
) throws GenericEntityException {<z>
= EntityCondition.makeCondition(UtilMisc.toList(<z>
)));<z>
;<z>
() {<z>
switch (modifier) {<z>
MILLISECOND:<z>
));<z>
DateTime.HOUR_OF_DAY_0:<z>
HOUR_OF_DAY));<z>
:<z>
);<z>
:<z>
);<z>
MONTH:<z>
.MONTH) + 1);<z>
DateTime.DAY_OF_MONTH_0:<z>
.get(Calendar.DAY_OF_MONTH));<z>
case DateTime.YEAR_4:<z>
YEAR);<z>
;<z>
> parseOrderBy(String value) {<z>
<Token> tokens = tokenize(value);<z>
CommonExpression> expressions = readExpressions(tokens);<z>
if (DUMP_EXPRESSION_INFO) {<z>
));<z>
CommonExpression, OrderByExpression>() {<z>
apply(CommonExpression input) {<z>
instanceof OrderByExpression) {<z>
(OrderByExpression) input;<z>
, Direction.ASCENDING);<z>
();<z>
boolean equals( Object o )<z>
o )<z>
;<z>
.getClass() )<z>
false;<z>
o;<z>
) )<z>
;<z>
.contentName != null )<z>
return false;<z>
pathToMenuItem ) : that.pathToMenuItem != null )<z>
;<z>
return true;<z>
final void rule__Document__Group__1() throws RecognitionException {<z>
;<z>
pushFollow(FOLLOW_rule__Document__Group__1__Impl_in_rule__Document__Group__14875);<z>
();<z>
--;<z>
pushFollow(FOLLOW_rule__Document__Group__2_in_rule__Document__Group__14878);<z>
);<z>
_fsp--;<z>
RecognitionException re) {<z>
re);<z>
(input,re);<z>
restoreStackSize(stackSize);<z>
String newName) {<z>
());<z>
setName(newName);<z>
index));<z>
() {<z>
isLoggable(Level.FINEST)) {<z>
getPIData() + "'");<z>
;<z>
[] args) {<z>
Object();<z>
Object();<z>
o2);<z>
doNothing(o3);<z>
value) {<z>
null) {<z>
containsKey(param)) {<z>
addElement(param);<z>
(param, value);<z>
{<z>
.remove(param) != null) {<z>
.removeElement(param);<z>
IMemento memento) {<z>
);<z>
)<z>
model.getCurrentPageId();<z>
&& currentPage.length() > 0) {<z>
memento.putString(IIntroConstants.MEMENTO_CURRENT_PAGE_ATT,<z>
);<z>
f)<z>
, BioException<z>
getFeatures();<z>
{<z>
new ChangeVetoException("Feature doesn't come from this sequence");<z>
) {<z>
ChangeVetoException("This isn't a normal BioSQL feature");<z>
);<z>
);<z>
) {<z>
.firePreChange(cev);<z>
((BioSQLFeature) f);<z>
removeFeature(f);<z>
);<z>
(float ax, float ay) {<z>
(!onScreen) {<z>
ax;<z>
;<z>
{<z>
null :<z>
();<z>
null) {<z>
info;<z>
lntab = null;<z>
;<z>
JDWPException exc) {<z>
();<z>
;<z>
<Location>(count);<z>
Location>>();<z>
= -1;<z>
= -1;<z>
++) {<z>
lntab.lines[i].lineCodeIndex;<z>
lines[i].lineNumber;<z>
].lineCodeIndex)) {<z>
{<z>
= lineNumber;<z>
(lowestLine == -1)) {<z>
;<z>
=<z>
, this, bci);<z>
.addBaseLineInfo(<z>
lineNumber, declaringType));<z>
lineLocations.add(loc);<z>
(lineNumber);<z>
lineMapper.get(key);<z>
) {<z>
;<z>
.put(key, mappedLocs);<z>
(loc);<z>
) {<z>
firstIndex = lntab.start;<z>
end;<z>
count > 0) {<z>
lineLocations.get(0);<z>
{<z>
= new LocationImpl(virtualMachine(), this,<z>
firstIndex);<z>
new SoftLocationXRefs(SDE.BASE_STRATUM_NAME,<z>
, lineLocations,<z>
;<z>
);<z>
info;<z>
<Adapter>() {<z>
caseDeriveReqt(DeriveReqt object) {<z>
();<z>
object) {<z>
);<z>
object) {<z>
;<z>
public Adapter caseSatisfy(Satisfy object) {<z>
);<z>
public Adapter caseTestCase(TestCase object) {<z>
;<z>
caseRequirement(Requirement object) {<z>
return createRequirementAdapter();<z>
(RequirementRelated object) {<z>
();<z>
(Trace object) {<z>
createTraceAdapter();<z>
{<z>
return createEObjectAdapter();<z>
{<z>
null) {<z>
;<z>
(object);<z>
;<z>
itemPropertyDescriptors;<z>
srcAbsPath,<z>
)<z>
, LockException,<z>
checkLive();<z>
srcAbsPath);<z>
(srcPath, ModeShapePermissions.REMOVE);<z>
destPath = absolutePathFor(destAbsPath);<z>
), ModeShapePermissions.ADD_NODE);<z>
srcPath.isRoot()) {<z>
);<z>
) {<z>
;<z>
"]")) {<z>
;<z>
.isAncestorOf(destPath)) {<z>
;<z>
RepositoryException(msg);<z>
)) {<z>
);<z>
);<z>
SessionCache sessionCache = cache();<z>
().isLockOwningSession()) {<z>
srcNode.getLock();<z>
getLockToken() == null) {<z>
JcrI18n.lockTokenNotHeld.text(srcAbsPath));<z>
)) {<z>
Lock newParentLock = destParentNode.getLock();<z>
) {<z>
;<z>
= srcNode.getParent();<z>
)) {<z>
)));<z>
()) {<z>
));<z>
);<z>
destAncestor = destParentNode;<z>
()) {<z>
.sharedSet();<z>
(srcPath);<z>
) {<z>
sharedNodeThatCreatesCircularity.path();<z>
unableToMoveNodeDueToCycle.text(srcAbsPath,<z>
)));<z>
= destAncestor.getParent();<z>
isRoot());<z>
mutable();<z>
mutableDestParent = destParentNode.mutable();<z>
(mutableDestParent)) {<z>
);<z>
else {<z>
;<z>
e) {<z>
);<z>
(msg);<z>
) {<z>
.getContent() == null) {<z>
(new LinkGrabberPanel());<z>
getUserMove(char mark)<z>
;<z>
;<z>
long redoRecoveryUpdates() throws IOException {<z>
) {<z>
;<z>
= 0;<z>
) {<z>
write(new byte[RECOVERY_FILE_HEADER_SIZE]);<z>
recoveryFile.setLength(recoveryFileSizeForPages(recoveryFileMinPageCount));<z>
return 0;<z>
(0);<z>
.readLong();<z>
();<z>
recoveryFile.readInt();<z>
(RECOVERY_FILE_HEADER_SIZE);<z>
new Adler32();<z>
, byte[]>();<z>
++) {<z>
();<z>
pageSize];<z>
) {<z>
;<z>
);<z>
;<z>
(Exception e) {<z>
"Redo buffer was not fully intact: ", e);<z>
;<z>
;<z>
.getValue() != expectedChecksum) {<z>
return nextTxId;<z>
.entrySet()) {<z>
e.getKey()));<z>
write(e.getValue());<z>
).sync();<z>
;<z>
{<z>
m_func = func;<z>
, this,<z>
|ScriptableObject.PERMANENT|ScriptableObject.READONLY);<z>
, this,<z>
ScriptableObject.PERMANENT|ScriptableObject.READONLY);<z>
("toString", this,<z>
ScriptableObject.READONLY);<z>
setObject(Object obj) {<z>
obj instanceof String) {<z>
(" ", "_")));<z>
} else {<z>
obj);<z>
{<z>
18;<z>
();<z>
= b;<z>
= b.getPosition().x;<z>
().y;<z>
b.z;<z>
< COUNT; i++) {<z>
i * 20 / 180));<z>
findByPrimaryKey(<z>
)<z>
.NoSuchGadgetException,<z>
.SystemException {<z>
).findByPrimaryKey(gadgetId);<z>
void quitListaCapas() {<z>
self != null) {<z>
)<z>
.removeLayer(l);<z>
);<z>
null;<z>
, Method method) throws IOException {<z>
{<z>
"firefox");<z>
firefox();<z>
("firefox");<z>
selenium.Platform.ANY);<z>
), capability);<z>
) {<z>
DesiredCapabilities.chrome();<z>
capability);<z>
contains("iexplore")) {<z>
);<z>
capability= DesiredCapabilities.internetExplorer();<z>
setBrowserName("iexplore");<z>
selenium.Platform.WINDOWS);<z>
;<z>
;<z>
URL(xGridUrl), capability);<z>
.deleteAllCookies();<z>
) {<z>
switch (value) {<z>
return BitNot;<z>
2: return Neg;<z>
: return Not;<z>
;<z>
return null;<z>
{<z>
!=null) {<z>
);<z>
if (p!=null) {<z>
input, editorID, activate);<z>
(editorPart);<z>
;<z>
;<z>
) {<z>
.createAndBindUi(this));<z>
;<z>
("HARD");<z>
float v2) {<z>
);<z>
= caps.glUniform3f;<z>
.checkFunctionAddress(function_pointer);<z>
;<z>
{<z>
result != null) {<z>
new HashSet<Object>();<z>
this.result.add(result);<z>
else {<z>
this.result = null;<z>
() {<z>
();<z>
());<z>
return deps;<z>
defaultOnCreateVersion(<z>
QName classRef,<z>
nodeRef,<z>
versionProperties,<z>
nodeDetails)<z>
= this.dictionaryService.getClass(classRef);<z>
)<z>
MLPropertyInterceptor.setMLAware(true);<z>
= classDefinition.getProperties();<z>
)<z>
(nodeRef, propertyName);<z>
);<z>
setMLAware(wasMLAware);<z>
AssociationDefinition> assocDefs = classDefinition.getAssociations();<z>
(classDefinition.isContainer())<z>
);<z>
(ChildAssociationRef childAssocRef : childAssocRefs)<z>
)))<z>
.getName(), childAssocRef);<z>
, RegexQNamePattern.MATCH_ALL);<z>
AssociationRef nodeAssocRef : nodeAssocRefs)<z>
containsKey(nodeAssocRef.getTypeQName()))<z>
.getName(), nodeAssocRef);<z>
context,<z>
,<z>
String relationship)<z>
{<z>
;<z>
return null;<z>
cacheFindSparePart (String serial) {<z>
);<z>
(n > 0) {<z>
i < n; i++)<z>
().equals(serial))<z>
;<z>
1;<z>
request, ServletResponse response)<z>
isCommitted())<z>
new IllegalStateException("Cannot perform forward - response is already committed");<z>
this.url);<z>
.FINE))<z>
;<z>
(String email, String password) throws InterruptedException {<z>
(topBar.MY_PROFILE_LINK);<z>
(FRIENDS.TAB_FRIENDS);<z>
;<z>
(FRIENDS.HARVESTING_GMAIL_BUTTON);<z>
;<z>
sleep(15);<z>
);<z>
handle : driver.getWindowHandles()) {<z>
).window(handle);<z>
);<z>
PASSWORD_TEXTBOX, password);<z>
;<z>
sleep(5);<z>
(HARVESTING.ALLOW_BUTTON);<z>
;<z>
)) {<z>
.switchTo().window(handle);<z>
loader) throws MalformedURLException<z>
;<z>
getScheme());<z>
= uri.getHost();<z>
getPort() != -1)<z>
port = uri.getPort();<z>
);<z>
!= null)<z>
parts = userinfo.split(":");<z>
;<z>
.length > 0)<z>
[1];<z>
("/([^/]+)(/(.*))?");<z>
.matcher(uri.getPath());<z>
))<z>
virtualhost = matcher.group(1);<z>
) != null)<z>
= matcher.group(3);<z>
(URISyntaxException e)<z>
e);<z>
);<z>
handler);<z>
List<Branch> branches, boolean canAdd,<z>
boolean noRepository) {<z>
;<z>
= canAdd;<z>
;<z>
final Vertex v,<z>
{<z>
ImageIcon>();<z>
);<z>
if (hi != null) {<z>
).isClStatus()) {<z>
;<z>
else {<z>
icons.add(HostBrowser.HOST_ICON_LARGE);<z>
isStandby(testOnly)) {<z>
add(HOST_STANDBY_ICON);<z>
;<z>
(v)) {<z>
;<z>
= (ServiceInfo) getInfo(v);<z>
{<z>
return null;<z>
(si.isFailed(testOnly)) {<z>
.isRunning(testOnly)) {<z>
SERVICE_RUNNING_FAILED_ICON);<z>
} else {<z>
);<z>
(testOnly)<z>
).allHostsDown()) {<z>
si.isRunning(testOnly)) {<z>
.add(SERVICE_STOPPING_ICON);<z>
else {<z>
.add(SERVICE_STOPPED_ICON);<z>
else {<z>
)) {<z>
(SERVICE_RUNNING_ICON);<z>
{<z>
SERVICE_STARTED_ICON);<z>
().isOrphaned()) {<z>
SERVICE_UNMANAGED_ICON);<z>
!= null<z>
!= null) {<z>
.add(SERVICE_MIGRATED_ICON);<z>
;<z>
)<z>
null)<z>
.JTextField();<z>
;<z>
;<z>
));<z>
(<z>
.Font.PLAIN, 10));<z>
;<z>
() {<z>
;<z>
0; y < N; y++)<z>
(!T[y]) {<z>
MAX_VALUE;<z>
int minX = -1;<z>
++)<z>
x][y]) {<z>
[y];<z>
= x;<z>
(minX < 0)<z>
{<z>
;<z>
;<z>
[slackX[y]][y]<z>
][y])) {<z>
+ " but is " + slackX[y]);<z>
;<z>
return result;<z>
public void undo() {<z>
;<z>
().setArgumentUpdatingDisabled(true);<z>
{<z>
.undo();<z>
getConnection());<z>
false);<z>
) {<z>
"";<z>
();<z>
!= null)<z>
.put(PARENT, remoteparent);<z>
remoteprevious != null)<z>
remoteprevious);<z>
return json.toString();<z>
{<z>
getLocalizedMessage());<z>
;<z>
) {<z>
info("user: "<z>
.getAuthentication()<z>
() + " create trial site with name "<z>
getName());<z>
encodePassword(<z>
.getSystemWideSalt()));<z>
siteDAO.create(newSite);<z>
) {<z>
;<z>
axis = algo.getAxis();<z>
axis;<z>
{<z>
if (objectName == null) {<z>
;<z>
, "");<z>
(byte b) throws JMSException<z>
checkWritable();<z>
;<z>
(b);<z>
final void rule__ParameterConnection__Group_2__1() throws RecognitionException {<z>
keepStackSize();<z>
FOLLOW_rule__ParameterConnection__Group_2__1__Impl_in_rule__ParameterConnection__Group_2__1195934);<z>
();<z>
state._fsp--;<z>
FOLLOW_rule__ParameterConnection__Group_2__2_in_rule__ParameterConnection__Group_2__1195937);<z>
;<z>
_fsp--;<z>
re) {<z>
);<z>
,re);<z>
stackSize);<z>
public Hits search(<z>
userId, String portletId, long groupId,<z>
, int end)<z>
SystemException {<z>
;<z>
companyId);<z>
(end);<z>
searchContext.setEntryClassNames(<z>
SearchEngineUtil.getEntryClassNames());<z>
{<z>
(new long[] {groupId});<z>
;<z>
(portletId)) {<z>
new String[] {portletId});<z>
setStart(start);<z>
searchContext.setUserId(userId);<z>
new AssetEntriesFacet(searchContext);<z>
setStatic(true);<z>
assetEntriesFacet);<z>
ScopeFacet(searchContext);<z>
;<z>
;<z>
);<z>
);<z>
{<z>
throw new SystemException(e);<z>
void setMetaValue(String key, String value) {<z>
ContentValues();<z>
key);<z>
value);<z>
synchronized (mCacheLock) {<z>
.replace(TABLE_META, META_KEY, values);<z>
<String> regions) {<z>
;<z>
);<z>
JTextField();<z>
toArray());<z>
createDisplayPanel());<z>
setResizable(false);<z>
();<z>
PropertyPrinter(PrintWriter out, boolean doCapitalize) {<z>
this.out = out;<z>
doCapitalize = doCapitalize;<z>
(out);<z>
);<z>
, String osArch) {<z>
allNativeLibInfo.length; i++) {<z>
i];<z>
)) {<z>
info;<z>
;<z>
;<z>
String url, File file) throws MalformedURLException<z>
(url)<z>
));<z>
(READ_TIMEOUT);<z>
;<z>
() {<z>
;<z>
"mergedown"));<z>
, tr("Merge this layer into another layer"));<z>
HelpUtil.ht("/Dialog/LayerList#MergeLayer"));<z>
updateEnabledState();<z>
(Criteria criteria)<z>
if (collSordersRelatedByCustomerId == null)<z>
)<z>
new ArrayList();<z>
);<z>
= SorderPeer.doSelectJoinCarrier(criteria);<z>
, getCustomerId());<z>
(!lastSordersRelatedByCustomerIdCriteria.equals(criteria))<z>
collSordersRelatedByCustomerId = SorderPeer.doSelectJoinCarrier(criteria);<z>
= criteria;<z>
return collSordersRelatedByCustomerId;<z>
{<z>
CRL_FILE_PATH);<z>
if (filePath == null) {<z>
throw new IseException("CRL file path not defined in config file");<z>
;<z>
public GenCommonBase getParent() {<z>
&& parent.eIsProxy()) {<z>
InternalEObject)parent;<z>
;<z>
(parent != oldParent) {<z>
))<z>
.GEN_NAVIGATOR_CHILD_REFERENCE__PARENT, oldParent, parent));<z>
return parent;<z>
>> split(T position)<z>
;<z>
(right))<z>
return null;<z>
, position, partitioner);<z>
, right, partitioner);<z>
);<z>
m)<z>
t;<z>
;<z>
;<z>
repcnt=0;<z>
0;<z>
m.initspeed;<z>
=mp_sngspd;<z>
=0;<z>
patdly2=0;<z>
mp_bpm=m.inittempo;<z>
=mp_bpm;<z>
deleted=false;<z>
forbid=false;<z>
0;<z>
;<z>
0;<z>
;<z>
globalvolume=64;<z>
t<pf.numchn;t++){<z>
false;<z>
mp_audio[t].tmpvolume=0;<z>
=0;<z>
t].wavecontrol=0;<z>
[t].glissando=0;<z>
[t].soffset=0;<z>
protected void prepareInsert(String insertQuery, PreparedStatement insert,<z>
{<z>
1) {<z>
.setId(getNextId());<z>
r.getId());<z>
(), 20));<z>
200));<z>
1));<z>
1));<z>
), 1));<z>
public VpnConnection withTags(Tag... tags) {<z>
);<z>
) {<z>
add(value);<z>
return this;<z>
theApplet) {<z>
pushMatrix();<z>
;<z>
;<z>
;<z>
theApplet.pushMatrix();<z>
popMatrix();<z>
QuoteObject> quotes, String enumSource)<z>
int quoteId = -1;<z>
enumSource = enumSource.toLowerCase();<z>
escapeString(enumSource) + "'");<z>
QuoteEnumerator qEnum = null;<z>
{<z>
= enums.get(0);<z>
) != quotes.size()) {<z>
delete(qEnum);<z>
= null;<z>
{<z>
.getNext();<z>
.update(qEnum);<z>
qEnum == null) {<z>
];<z>
(); i++)<z>
id;<z>
idList);<z>
getNext();<z>
(qEnum);<z>
rvQuote = null;<z>
i++) {<z>
quote = quotes.get(i);<z>
id == quoteId) {<z>
= quote;<z>
;<z>
) throws Throwable {<z>
= SpringMethodStat.current();<z>
;<z>
= springStat.getMethodStat(methodInfo, true);<z>
) {<z>
();<z>
= System.nanoTime();<z>
Throwable error = null;<z>
.proceed();<z>
;<z>
) {<z>
;<z>
e;<z>
finally {<z>
.nanoTime();<z>
;<z>
methodStat != null) {<z>
error, nanos);<z>
);<z>
String getVcsSpecificTagBaseUrlOrName() {<z>
if (StringUtils.isBlank(vcsTagBaseUrlOrName)) {<z>
"";<z>
(vcsTagBaseUrlOrName);<z>
.endsWith("/")) {<z>
.append("/");<z>
;<z>
(int topicId)<z>
;<z>
;<z>
().prepareStatement(<z>
);<z>
);<z>
executeQuery();<z>
()) {<z>
.getInt("first_post_id");<z>
= rs.getInt("last_post_id");<z>
close();<z>
;<z>
;<z>
null;<z>
().prepareStatement(<z>
.getSql("TopicModel.fixFirstLastPostId"));<z>
p.setInt(1, first);<z>
last);<z>
3, topicId);<z>
);<z>
catch (SQLException e) {<z>
;<z>
close(rs, p);<z>
i_instrument (StatsGenerator.ProfileObj object) {<z>
(SPACE_DIAG) {<z>
instanceof ExecTimeInfo) {<z>
).nodeCount = 0;<z>
maxSimultaneousNodes;<z>
ExecTimeInfo)object).maxStackSize = maxStackSize;<z>
StatsGenerator gen : statsGenerators) {<z>
(object);<z>
public Rect getSlotRect(int index) {<z>
, row;<z>
WIDE) {<z>
= index / mUnitCount;<z>
index - col * mUnitCount;<z>
} else {<z>
= index / mUnitCount;<z>
;<z>
(mSlotWidth + mSlotGap);<z>
+ mSlotGap);<z>
+ mSlotHeight);<z>
IConfiguration getParent() {<z>
if (DEBUG)<z>
("Bad multi access: MultiConfiguration.getParent()");<z>
return null;<z>
{<z>
new W3CEndpointReferenceBuilder();<z>
generateUUID());<z>
;<z>
AnnotationApiHelper(Elements elementUtils, Types typeUtils) {<z>
elementUtils;<z>
;<z>
= CollectionHelper.newHashMap();<z>
typeUtils.getPrimitiveType( TypeKind.BOOLEAN ) );<z>
getPrimitiveType( TypeKind.CHAR ) );<z>
.getPrimitiveType( TypeKind.BYTE ) );<z>
getPrimitiveType( TypeKind.SHORT ) );<z>
) );<z>
( TypeKind.LONG ) );<z>
.FLOAT ) );<z>
( TypeKind.DOUBLE ) );<z>
unmodifiableMap( tempPrimitiveMirrors );<z>
{<z>
type == null) {<z>
return null;<z>
HashSet();<z>
Set elems = getElements();<z>
();<z>
()) {<z>
) i.next();<z>
null) {<z>
nse.getTypeRefName();<z>
) {<z>
.add(nse);<z>
);<z>
{<z>
nse);<z>
return r;<z>
root) {<z>
v : view.varMap.values())<z>
.fixed = true;<z>
<DPOPTreeNode>();<z>
queue.add(root);<z>
while (!queue.isEmpty()) {<z>
(0);<z>
id).fixed = p.fixed;<z>
.children) {<z>
= (DPOPTreeNode) n;<z>
.add(dn);<z>
view.DPOPSolve();<z>
();<z>
.varMap.values()) {<z>
)) {<z>
id);<z>
{<z>
;<z>
(root);<z>
= false;<z>
queue.isEmpty()) {<z>
= queue.remove(0);<z>
;<z>
id)) {<z>
f = true;<z>
= sol.get(p.id);<z>
) {<z>
n;<z>
dn);<z>
!subsetlocking)<z>
();<z>
f;<z>
IResource root)<z>
instanceof IContainer)<z>
] members;<z>
members();<z>
)<z>
] instanceof IFile)<z>
(projectFiles, SWT.NONE);<z>
item.setData(members[i]);<z>
));<z>
].getName());<z>
) == null)<z>
IWorkbench workbench = PlatformUI.getWorkbench();<z>
= workbench.getSharedImages();<z>
sharedImages.getImage(ISharedImages.IMG_OBJ_FILE);<z>
null;<z>
)<z>
desc);<z>
();<z>
(desc, image);<z>
item.setImage(image);<z>
i]);<z>
CoreException e)<z>
;<z>
copy(CopyStyle style) {<z>
null ?<z>
copy(style));<z>
{<z>
null : arg.copy(style));<z>
setOffsetAndLength(this);<z>
CopyStyle.withLocations) {<z>
(this);<z>
copy;<z>
byte[] blues, int newSize) {<z>
[256];<z>
= new byte[256];<z>
= new byte[256];<z>
) {<z>
;<z>
i] = greens[i];<z>
i] = blues[i];<z>
i++) {<z>
);<z>
[index];<z>
i] = greens2[index];<z>
[i] = blues2[index];<z>
int calculateSizeForAdvances() {<z>
int total = 0;<z>
;<z>
for (final TextSpan span : spans) {<z>
();<z>
total) {<z>
;<z>
return total;<z>
LocatorSettings settings,<z>
LocationManager locationManager,<z>
locationProviderFactory,<z>
updatesIntentFactory) {<z>
settings = settings;<z>
= locationProviderFactory;<z>
= locationManager;<z>
activeLocationUpdate = updatesIntentFactory.buildActive();<z>
;<z>
locationManager);<z>
{<z>
new JPanel(new GridBagLayout());<z>
0, 0);<z>
.add(comp, constraints);<z>
(comp.getBackground());<z>
2, 2, 2));<z>
return compPanel;<z>
BufferedImage img) {<z>
img.getHeight());<z>
);<z>
, Font.PLAIN, 10));<z>
g.setColor(Color.BLACK);<z>
Graphics2D)g;<z>
);<z>
);<z>
{<z>
) + 1]);<z>
(E_IsBlank expr)<z>
());<z>
().visit(this);<z>
pop();<z>
{<z>
;<z>
= variable.getNodeMaker();<z>
);<z>
(filter);<z>
.FALSE);<z>
) {<z>
constant = (ConstantEx) arg;<z>
node = constant.getNode();<z>
FALSE);<z>
{<z>
;<z>
toString(String value) {<z>
StringBuilder();<z>
boolean isFirst = true;<z>
())) {<z>
!isFirst)<z>
;<z>
isFirst = false;<z>
equals(segment)) {<z>
);<z>
else {<z>
delegateToString(segment));<z>
;<z>
)<z>
)<z>
().size();<z>
)<z>
-1;<z>
boolean containsAll( TLongCollection collection ) {<z>
iterator();<z>
) ) {<z>
.next() ) ) {<z>
;<z>
return true;<z>
String userId) {<z>
;<z>
"fields", "id").build();<z>
@SuppressWarnings("unchecked")<z>
getForObject(uri, Map.class);<z>
get("data");<z>
;<z>
{<z>
entry.get("id"));<z>
;<z>
, int lineNumber, int pos, char ch)<z>
pointer = "^";<z>
)<z>
1];<z>
pos - 1; ++i)<z>
)' ';<z>
pointer = new String (bytes) + pointer;<z>
ch), line, pointer};<z>
("InvalidCharacter.1", parameters);<z>
undoActive) {<z>
.articleElement = ae;<z>
;<z>
;<z>
= ae.getDataParamGui();<z>
;<z>
info("GeoGebra " + GeoGebraConstants.VERSION_STRING + " "<z>
+ " "<z>
getUserAgent());<z>
initCommonObjects();<z>
);<z>
getCanvas();<z>
canvas.setWidth("1px");<z>
);<z>
setCoordinateSpaceHeight(1);<z>
setCoordinateSpaceWidth(1);<z>
= true;<z>
);<z>
EventTapWriter(@ServiceType("eventTap") ServiceSelector selector,<z>
,<z>
,<z>
,<z>
config)<z>
Preconditions.checkNotNull(selector, "selector is null");<z>
(httpClient, "httpClient is null");<z>
(eventCodec, "eventCodec is null");<z>
checkNotNull(executorService, "executorService is null");<z>
checkNotNull(config, "config is null");<z>
.selector = selector;<z>
;<z>
.eventsCodec = eventCodec;<z>
.executorService = executorService;<z>
);<z>
);<z>
(), config.getQueueSize());<z>
.TagStack.TagContext context)<z>
) ? "#" : "*";<z>
, context);<z>
TypeListNotQNameListRule()<z>
TYPE_LIST_NOT_QNAME_LIST, QNAME_PRODUCTION, NESTED_QNAME_PRODUCTION,<z>
;<z>
draw(Graphics2D g) {<z>
g);<z>
;<z>
= getScaleFactor();<z>
* factor;<z>
.getHeight() * factor;<z>
finalHeight / 2);<z>
scale(getScaleFactor());<z>
clamp(alpha);<z>
float) a);<z>
g.getComposite();<z>
setComposite(composite);<z>
getAffineTransform());<z>
setComposite(oldComposite);<z>
(g);<z>
public TaskSet getSelectedRegisteredTasks(Object obj) {<z>
target = null;<z>
) {<z>
.getDebugTarget();<z>
else if (obj instanceof IThread) {<z>
;<z>
instanceof IDebugTarget) {<z>
) obj;<z>
{<z>
) target).getTasks();<z>
;<z>
() {<z>
0) {<z>
+ myRealPart;<z>
) {<z>
"*I";<z>
signum(myImagPart) > 0 ?<z>
(myImagPart) + "*I)";<z>
)<z>
), idt );<z>
instanceof PooledDataSource)<z>
;<z>
attemptManagePooledDataSource( (PooledDataSource) idt );<z>
userName, String profileName)<z>
{<z>
{<z>
DEFAULT_PROFILE;<z>
claims;<z>
claimManager.getAllClaimUris();<z>
.api.UserStoreException e) {<z>
;<z>
, claims, profileName);<z>
)];<z>
i = 0;<z>
{<z>
();<z>
Claim();<z>
);<z>
());<z>
;<z>
getDisplayTag();<z>
user.api.UserStoreException e) {<z>
UserStoreException(e);<z>
.setDisplayTag(displayTag);<z>
] = claim;<z>
i++;<z>
return finalValues;<z>
get(String timeout) {<z>
;<z>
if (weakRef != null) {<z>
(weakRef, timeout);<z>
weakRef;<z>
UserAdmin useradmin) {<z>
super(name, useradmin);<z>
.useradmin = useradmin;<z>
, UserAdminHashtable.CREDENTIALS);<z>
) {<z>
);<z>
;<z>
.stringPropertyNames()) {<z>
isPassword(key)) {<z>
put(key, "#");<z>
;<z>
<LocaleRenderer> getLocalesList(final Activity activity) {<z>
;<z>
(mLocale);<z>
;<z>
);<z>
locales.remove("");<z>
<LocaleRenderer>();<z>
, mLocale);<z>
) {<z>
localesList, systemLocale);<z>
locales) {<z>
localesList, l);<z>
(!"".equals(mLocale)) {<z>
addLocaleDisplayNameToList(activity, localesList, "");<z>
LocaleRenderer(activity, null));<z>
;<z>
AbstractStep loadXMLUIClass(String transformerClassName)<z>
this.getClass().getClassLoader();<z>
= loader<z>
transformerClassName);<z>
stepClass<z>
;<z>
)<z>
, cnfe);<z>
Exception e)<z>
+<z>
;<z>
{<z>
= null;<z>
channel = null;<z>
= new ConnectionFactory();<z>
("192.168.23.28");<z>
factory.newConnection();<z>
= connection.createChannel();<z>
);<z>
String routingKey = "aee.*.acceptApp";<z>
);<z>
, "pippo");<z>
, "123456");<z>
Document asd = PaasUtilities.createBaseXML("manifest");<z>
;<z>
"x86");<z>
);<z>
"Require-Hz", "1000");<z>
asd, "Require-Cores", "1");<z>
));<z>
String message = PaasUtilities.XML2String(xml);<z>
, null, message.getBytes());<z>
message + "'");<z>
Exception e) {<z>
e.printStackTrace();<z>
) {<z>
();<z>
{}<z>
, Composite parent) {<z>
;<z>
new SelectionAdapter() {<z>
) {<z>
)<z>
getSelection())));<z>
);<z>
FILL_HORIZONTAL);<z>
= 2;<z>
;<z>
.FilterProperties.FilterProperties_.mandatory);<z>
"eef::Checkbox");<z>
null);<z>
parent;<z>
void mT__67() throws RecognitionException {<z>
T__67;<z>
DEFAULT_TOKEN_CHANNEL;<z>
"::");<z>
_type;<z>
= _channel;<z>
[] args) {<z>
AutoComplete test = new AutoComplete("wordlist.txt");<z>
);<z>
Scanner(System.in);<z>
= "";<z>
String c;<z>
"~")) {<z>
c;<z>
println("Input: " + word);<z>
] index = test.binarySearch(word);<z>
{<z>
);<z>
], index[1]);<z>
} else {<z>
"No suggestion for this input.");<z>
= "";<z>
("bub");<z>
);<z>
{<z>
Object();<z>
ServiceContainer<ApplicationConfiguration>( bundleContext );<z>
ServiceContainer<HttpService>( bundleContext );<z>
applicationReferences = new ApplicationReferencesContainer();<z>
this.bundleContext = bundleContext;<z>
t)<z>
if (t == null) t = "";<z>
t;<z>
void error( SAXParseException spe ) throws SAXException {<z>
+ ":";<z>
( msg, null );<z>
.getMessage(), null );<z>
(RenderRequest request, RenderResponse response,<z>
throws PortletException {<z>
());<z>
(pageName)) {<z>
"null or empty page name");<z>
)<z>
"/portlets/jsp/myCheckOutFiles/" + pageName);<z>
request, response);<z>
IOException ioe) {<z>
ioe);<z>
{<z>
.NODEZERO;<z>
.REGULAR;<z>
false;<z>
String serviceName = null;<z>
boolean force = false;<z>
) ? 0 : args.length;<z>
argsLen; i++) {<z>
= args[i];<z>
.equalsIgnoreCase(cmd)) {<z>
(++i < argsLen) {<z>
i];<z>
{<z>
null;<z>
cmd)) {<z>
isStandby = true;<z>
getName().equalsIgnoreCase(cmd)) {<z>
NODEZERO;<z>
{<z>
InstanceId.NODEONE;<z>
equalsIgnoreCase(cmd)) {<z>
;<z>
().equalsIgnoreCase(cmd)) {<z>
FORMATFORCE;<z>
equalsIgnoreCase(cmd)) {<z>
startOpt = StartupOption.REGULAR;<z>
cmd)) {<z>
.UPGRADE;<z>
) {<z>
;<z>
{<z>
= StartupOption.FINALIZE;<z>
.equalsIgnoreCase(cmd)) {<z>
.IMPORT;<z>
.equalsIgnoreCase(cmd)) {<z>
true;<z>
} else {<z>
;<z>
;<z>
downloadCappArchive(String filename, HttpServletResponse response)<z>
ApplicationAdminExceptionException {<z>
out = response.getOutputStream();<z>
);<z>
{<z>
"Content-Disposition", "fileName=" + filename + ".car");<z>
.getContentType());<z>
.getInputStream();<z>
int nextChar;<z>
read()) != -1) {<z>
(char) nextChar);<z>
);<z>
close();<z>
();<z>
{<z>
);<z>
(OperationContext context, ModelNode operation) throws OperationFailedException {<z>
removeResource(PathAddress.EMPTY_ADDRESS);<z>
context.isBooting()) {<z>
validationOp = AuthenticationValidatingHandler.createOperation(operation);<z>
INSTANCE, OperationContext.Stage.MODEL);<z>
String message) throws UnknownCommandException {<z>
isContainedInLine(message)) {<z>
new UnknownCommandException(command);<z>
public void putTextData( String data )<z>
selectedTypes,<z>
,<z>
LibraryType, XSDSchemaDirective> importedTypesMap,<z>
project, IFile parentXSDfFile) throws Exception {<z>
{<z>
selectedType,<z>
importedTypesMap);<z>
project);<z>
parentXSDfFile));<z>
(null));<z>
(project.getName());<z>
.refresh(project);<z>
.OK_STATUS;<z>
StyleHandle> getSameNameStyles(<z>
)<z>
getSlot( IAbstractThemeModel.STYLES_SLOT );<z>
iterator = slot.iterator( );<z>
( );<z>
.hasNext( ) )<z>
StyleHandle) iterator.next( );<z>
).equalsIgnoreCase( styleName ) )<z>
( style );<z>
sameNameList;<z>
HttpServletRequest request, HttpServletResponse response )<z>
ADBException, XMLStreamException, IOException {<z>
= new EC2Volume();<z>
( "VolumeId" );<z>
< volumeId.length )<z>
volumeId[0]);<z>
"Missing VolumeId parameter" ); return; }<z>
));<z>
(response, EC2response);<z>
BeanMetadataElement buildBeanMetadata(Metadata value, String defaultTypeName) {<z>
if (value instanceof ValueMetadata) {<z>
typedString = (ValueMetadata) value;<z>
= typedString.getType();<z>
null) {<z>
specifiedType = defaultTypeName;<z>
TypedStringValue(typedString.getStringValue(),<z>
);<z>
instanceof ComponentMetadata) {<z>
ComponentMetadata component = (ComponentMetadata) value;<z>
buildBeanDefinitionFor(component);<z>
if (value instanceof NullMetadata) {<z>
;<z>
(value instanceof RefMetadata) {<z>
;<z>
());<z>
) {<z>
(IdRefMetadata) value;<z>
));<z>
CollectionMetadata) {<z>
CollectionMetadata) value;<z>
();<z>
.getValues();<z>
coll;<z>
)) {<z>
.size());<z>
;<z>
coll = list;<z>
)) {<z>
>(values.size());<z>
;<z>
coll = set;<z>
)) {<z>
));<z>
;<z>
{<z>
+ type);<z>
{<z>
, collection.getValueType()));<z>
BeanMetadataElement) coll;<z>
if (value instanceof MapMetadata) {<z>
mapValue = (MapMetadata) value;<z>
getEntries();<z>
defaultKeyType = mapValue.getKeyType();<z>
;<z>
ManagedMap<BeanMetadataElement, BeanMetadataElement> managedMap =<z>
entries.size());<z>
defaultKeyType);<z>
);<z>
MapEntry mapEntry : entries) {<z>
(mapEntry.getKey(), defaultKeyType),<z>
));<z>
managedMap;<z>
) {<z>
propertiesValue = (PropsMetadata) value;<z>
.getEntries();<z>
new OrderedManagedProperties();<z>
MapEntry mapEntry : entries) {<z>
(mapEntry.getKey()),<z>
mapEntry.getValue()));<z>
);<z>
) {<z>
tigerseyelangplugins = getDSLDefinitionsExtendingWorkspaceProjects();<z>
> fileToIProject = getFileToWorkspaceProjects();<z>
;<z>
(IPluginElement teplugin : tigerseyelangplugins) {<z>
.WorkspaceDSL();<z>
teplugin;<z>
workspaceProject = fileToIProject<z>
.get(getPluginModelProjectLocationAsFile(teplugin<z>
);<z>
(wdsl);<z>
;<z>
(int size) {<z>
{<z>
, false);<z>
);<z>
Color.WHITE);<z>
;<z>
jtable.getModel())<z>
;<z>
).equals("trigger"))<z>
;<z>
{<z>
fRename.size(); i++) {<z>
;<z>
(element instanceof IResource) {<z>
(builder,<z>
) element, (RenameArguments) fRenameArguments<z>
(i));<z>
().buildDelta(builder);<z>
(final Composite parent) {<z>
SWT.NULL);<z>
(new GridLayout());<z>
(container, SWT.VERTICAL);<z>
;<z>
getSystemColor(SWT.COLOR_GRAY));<z>
, SWT.V_SCROLL);<z>
true, true));<z>
SWT.NONE);<z>
(4, false);<z>
= 10;<z>
.marginWidth = 0;<z>
);<z>
);<z>
;<z>
(true);<z>
outputsContainer.layout();<z>
SWT.DEFAULT).y-5);<z>
(sash, SWT.NONE);<z>
;<z>
0;<z>
0;<z>
setLayout(tableLayout);<z>
;<z>
.FILL, true, true));<z>
if (wizard.definition != null)<z>
definition);<z>
;<z>
e2, float velocityX, float velocityY) {<z>
if (useMultiImageFling) {<z>
;<z>
{<z>
result = false;<z>
) > 900) {<z>
) {<z>
KeyEvent.ACTION_DOWN,<z>
KeyEvent.KEYCODE_DPAD_RIGHT);<z>
KeyEvent.KEYCODE_DPAD_RIGHT, rightKey);<z>
.KEYCODE_DPAD_RIGHT);<z>
);<z>
result = true;<z>
> SWIPE_MIN_DISTANCE) {<z>
(KeyEvent.ACTION_DOWN,<z>
);<z>
KEYCODE_DPAD_LEFT, leftKey);<z>
.KEYCODE_DPAD_LEFT);<z>
KEYCODE_DPAD_LEFT, leftKey);<z>
= true;<z>
result;<z>
,<z>
IFile file) {<z>
parent);<z>
this.project = project;<z>
config;<z>
;<z>
.title = "Link to Spring configs";<z>
0);<z>
null) {<z>
'.');<z>
0) {<z>
(0, i);<z>
name);<z>
) throws ServletException,<z>
;<z>
(true);<z>
getCookie(request, AuthenticationEngine.LOGIN_CONTEXT_KEY_NAME);<z>
loginContextCookie != null) {<z>
("Login context cookie: " + loginContextCookie.getValue());<z>
else {<z>
;<z>
response);<z>
request);<z>
{<z>
);<z>
("request", request);<z>
("response", response);<z>
;<z>
).toString());<z>
else {<z>
, message)) {<z>
(USERNAME_KEY);<z>
username + " using old request/response");<z>
(HttpServletRequest) session.getAttribute("request");<z>
"response");<z>
LoginHandler.PRINCIPAL_NAME_KEY, username);<z>
AuthenticationEngine.returnToAuthenticationEngine(request, response);<z>
) {<z>
== null) {<z>
new IllegalStateException(<z>
;<z>
Message.Request.ViewerRequest.AddLog();<z>
this;<z>
Builder builder) {<z>
.id;<z>
;<z>
.type;<z>
;<z>
;<z>
) {<z>
app = app;<z>
sender = app.getSender();<z>
getReceiver();<z>
) {<z>
);<z>
;<z>
{<z>
) {<z>
( "Cannot visit instructions before visitCode has been called." );<z>
, String attributeValueText) {<z>
(type, false);<z>
if (attributeValueText.endsWith("nan"))<z>
attributeValue = Float.NaN;<z>
);<z>
public synchronized Object[] toArray() {<z>
[] = list.toArray();<z>
< copy.length; i++) {<z>
__tojava__(Object.class);<z>
return copy;<z>
y, int width, int height ){<z>
!= null ){<z>
);<z>
IParseRootNode node)<z>
(STANDARD_PREDEFINEDS, APPC_PREDEFINEDS));<z>
();<z>
optionStack.push(initialOptions);<z>
Scope>();<z>
scopeStack.push(new Scope());<z>
);<z>
(new Function(currentScope()));<z>
(Option.ADSAFE))<z>
.SAFE, true);<z>
))<z>
put(Option.BROWSER, false);<z>
;<z>
);<z>
(Option.DEBUG, false);<z>
DEVEL, false);<z>
Option.EVIL, false);<z>
false);<z>
, false);<z>
(Option.NOMEN, false);<z>
, false);<z>
Option.RHINO, false);<z>
;<z>
.put(Option.SUB, false);<z>
Option.UNDEF, false);<z>
.WINDOWS, false);<z>
"Array");<z>
);<z>
remove("Function");<z>
);<z>
);<z>
;<z>
.add("lib");<z>
);<z>
public AbstractCursorInputEvt getPreviousEventOf(AbstractCursorInputEvt te){<z>
);<z>
returnEvent = null;<z>
size(); i++) {<z>
allEvents.get(i);<z>
.equals(te)<z>
allEvents.size() >= 2)<z>
1 > 0<z>
(i-1) != null)<z>
-1);<z>
return returnEvent;<z>
savedInstanceState) {<z>
;<z>
;<z>
{ lang = "EN"; }<z>
settings = null;<z>
getStringArray(R.array.settings_array_pl); }<z>
;<z>
.settings, settings));<z>
= getListView();<z>
(true);<z>
(new OnItemClickListener() {<z>
View view, int position, long id) {<z>
switch (position) {<z>
case 0:<z>
();<z>
:<z>
;<z>
case 2:<z>
alertSounds();<z>
3:<z>
SnakeActivity.class);<z>
);<z>
, null));<z>
KEY_LANG, "EN"));<z>
.getString(KEY_SOUND, "1"));<z>
i);<z>
();<z>
;<z>
Check> checks, Calendar calendar, StatisticsFilterMode mode)<z>
();<z>
for(Check check : checks)<z>
;<z>
setTime(check.getCheckDate());<z>
())<z>
YEAR:<z>
Calendar.YEAR))<z>
.add(check);<z>
:<z>
)))<z>
add(check);<z>
filteredChecks;<z>
session) {<z>
isEmpty()) {<z>
.containsKey("attributes") ?<z>
session.redisMap :<z>
String, String>(session.redisMap);<z>
(toStore.containsKey("attributes"))<z>
));<z>
"[RedisSessionManager] storeSession - Storing session id={}", session.getClusterId());<z>
() {<z>
Object execute(Jedis jedis) {<z>
System.currentTimeMillis();<z>
("lastSaved", "" + session.lastSaved);<z>
) {<z>
void execute() throws JedisException {<z>
session.getClusterId();<z>
(key, toStore);<z>
ttl = session.getMaxInactiveInterval();<z>
if (ttl > 0) {<z>
, ttl);<z>
;<z>
);<z>
.clear();<z>
String desc) {<z>
{<z>
params.get(desc));<z>
null;<z>
parser,<z>
) {<z>
.path = path;<z>
;<z>
resultSubs;<z>
getViewId() {<z>
return (this.viewId);<z>
)<z>
getTimeSinceLastActivity() < 30*1000 ){<z>
0;<z>
++){<z>
.isWritten(i)){<z>
final String requester = requested[i];<z>
{<z>
!manager.requestExists(<z>
,<z>
*DiskManager.BLOCK_SIZE,<z>
( i ))){<z>
(i);<z>
;<z>
){<z>
if (Logger.isEnabled())<z>
,<z>
cleared +" requests" ));<z>
}else{<z>
() > 0 ){<z>
Logger.isEnabled())<z>
getTorrent(), LOGID, LogEvent.LT_WARNING,<z>
)+" reset fully requested" ));<z>
;<z>
deltaReader, IndexReader mainReader)<z>
IOException<z>
();<z>
true);<z>
(temp);<z>
true);<z>
);<z>
(!temp.isEmpty())<z>
.add(nodeRef);<z>
new LinkedHashSet<String>();<z>
);<z>
temp);<z>
false);<z>
temp);<z>
();<z>
addAll(containerRefs);<z>
.addAll(leafrefs);<z>
deletions.addAll(refs);<z>
(String id : refs)<z>
, deltaReader, true);<z>
;<z>
SlaveServer> slaveServers)<z>
throws KettleException {<z>
"recordset_name") != null)<z>
;<z>
id_jobentry, "recordset") != null)<z>
= rep.getStepAttributeString(id_jobentry, "recordset");<z>
!= null)<z>
);<z>
!= null)<z>
, "runLocal"));<z>
id_jobentry, "isAll") != null)<z>
;<z>
!= null)<z>
getStepAttributeString(id_jobentry, "isHash"));<z>
.getStepAttributeString(id_jobentry, "keep") != null)<z>
.getStepAttributeString(id_jobentry, "keep");<z>
) != null)<z>
rep.getStepAttributeString(id_jobentry, "keeper");<z>
(Exception e) {<z>
, e);<z>
selectElement(EObject[] elements) {<z>
getCurrent().getActiveShell();<z>
(SysmlDiagramEditorPlugin.getInstance()<z>
);<z>
, labelProvider);<z>
(Messages.SysmlModelingAssistantProviderMessage);<z>
SysmlModelingAssistantProviderTitle);<z>
);<z>
;<z>
EObject selected = null;<z>
{<z>
) dialog.getFirstResult();<z>
;<z>
)<z>
);<z>
notify();<z>
createKeySpace() throws CacheLoaderException {<z>
null;<z>
;<z>
;<z>
NotFoundException e) {<z>
);<z>
config.keySpace);<z>
"org.apache.cassandra.locator.SimpleStrategy");<z>
String>();<z>
);<z>
keySpace.setStrategy_options(strategy_options);<z>
new CfDef();<z>
.entryColumnFamily);<z>
keySpace);<z>
"BytesType");<z>
);<z>
();<z>
);<z>
keySpace);<z>
"Super");<z>
setComparator_type("LongType");<z>
("BytesType");<z>
;<z>
(keySpace);<z>
catch (Exception e) {<z>
CacheLoaderException("Could not create keyspace/column families", e);<z>
} finally {<z>
(cassandraClient);<z>
{<z>
36)) {<z>
"invalid base for atoi()");<z>
int b = 0;<z>
.length();<z>
string.charAt(b)))<z>
;<z>
e - 1)))<z>
--;<z>
;<z>
(b < e) {<z>
= string.charAt(b);<z>
'-' || sign == '+') {<z>
;<z>
(string.charAt(b)))<z>
b++;<z>
) {<z>
charAt(b) == '0') {<z>
1)) == 'X') {<z>
16;<z>
b += 2;<z>
else {<z>
if (base == 0)<z>
= 8;<z>
0)<z>
= 10;<z>
s = string;<z>
< string.length())<z>
string.substring(b, e);<z>
= Long.parseLong(s, base);<z>
&& result == -result))<z>
);<z>
if (sign == '-')<z>
result = -result;<z>
Integer.MAX_VALUE)<z>
Py.ValueError("invalid literal for __int__: " + string);<z>
return (int) result;<z>
(NumberFormatException exc) {<z>
+ string);<z>
catch (StringIndexOutOfBoundsException exc) {<z>
"invalid literal for __int__: " + string);<z>
,<z>
, int outEnd)<z>
throws UnknownCharacterException,<z>
char outputChar = REPLACE_CHAR;<z>
inputSize = 0;<z>
= outOff;<z>
inOff;<z>
{<z>
;<z>
savedByte == 0) {<z>
byteOff];<z>
;<z>
{<z>
byte1 = savedByte;<z>
= 0;<z>
;<z>
= convSingleByte(byte1);<z>
) {<z>
) {<z>
inputSize + 1 >= inEnd) {<z>
) byte1;<z>
inputSize;<z>
(byteOff < inEnd) {<z>
= input[byteOff];<z>
;<z>
!= 0) {<z>
byte1 = savedSecond & 0xff;<z>
savedSecond = 0;<z>
} else {<z>
+ inputSize] & 0xff;<z>
inputSize++;<z>
+ inputSize] & 0xff;<z>
++;<z>
-0x80);<z>
else {<z>
inEnd) {<z>
savedByte = (byte) byte1;<z>
+= inputSize;<z>
;<z>
+ inputSize] & 0xff;<z>
inputSize++;<z>
;<z>
outputChar == REPLACE_CHAR) {<z>
(subMode)<z>
subChars[0];<z>
;<z>
new UnknownCharacterException();<z>
outEnd)<z>
);<z>
;<z>
+= inputSize;<z>
;<z>
getGroupDefinitions(Element e) {<z>
<String, String>();<z>
Elements children = e.getChildElements();<z>
; i++) {<z>
);<z>
().equals("group")) {<z>
).trim();<z>
).trim();<z>
groups.put(id, smarts);<z>
groups;<z>
{<z>
isStaff((Player) sender)) {<z>
(args[0]);<z>
;<z>
, sender, "You do not have permission"); }<z>
e) { invalidArgLength(sender); }<z>
int y)<z>
p= adjustToContentArea(x, y);<z>
.x;<z>
y ;<z>
)) / 2;<z>
getHeight()) / 2;<z>
int ndlX = bgLeft + needleX ;<z>
+ needleY ;<z>
- ndlX;<z>
;<z>
* 180 ) / Math.PI );<z>
;<z>
= endAngle;<z>
( processedEndAngle - processedStartAngle );<z>
<= endAngle);<z>
) ;<z>
( ! initialArcFollowsTrigonometricDirection )<z>
;<z>
processedEndAngle;<z>
temp;<z>
processedStartAngle ) % 360 ;<z>
processedEndAngle ) % 360 ;<z>
newGaugeValue = 0;<z>
arcType = 0;<z>
false ;<z>
anglesHaveDifferentSigns )<z>
)<z>
;<z>
arcType = 1;<z>
angle <= processedEndAngle) )<z>
;<z>
arcType = 2;<z>
if ( isInsideArc )<z>
0;<z>
2 )<z>
if ( initialArcFollowsTrigonometricDirection )<z>
Math.abs ( angle - processedStartAngle );<z>
processedEndAngle );<z>
getMaxValue() * semiArcLength ) / totalArcLength ;<z>
>= processedStartAngle )<z>
initialArcFollowsTrigonometricDirection )<z>
= Math.abs ( angle - processedStartAngle);<z>
.abs ( angle - processedStartAngle);<z>
)<z>
Math.abs ( angle - processedEndAngle);<z>
( angle - processedEndAngle);<z>
/ totalArcLength ;<z>
newGaugeValue);<z>
.ByteArrayComparable parseFrom(<z>
.io.InputStream input,<z>
.google.protobuf.ExtensionRegistryLite extensionRegistry)<z>
.io.IOException {<z>
).mergeFrom(input, extensionRegistry)<z>
);<z>
, int[] a2)<z>
.length];<z>
, a1.length);<z>
length, a2.length);<z>
;<z>
() throws RecognitionException {<z>
;<z>
;<z>
= null;<z>
();<z>
;<z>
);<z>
{<z>
;<z>
(LA875_0==KEYWORD_83) ) {<z>
=2;<z>
nvae =<z>
, 875, 0, input);<z>
throw nvae;<z>
switch (alt875) {<z>
1 :<z>
));<z>
FOLLOW_ruleConnectedElement_in_ruleAccessConnectionEnd51472);<z>
);<z>
._fsp--;<z>
= this_ConnectedElement_0;<z>
afterParserOrEnumRuleCall();<z>
2 :<z>
).getProcessorSubprogramParserRuleCall_1());<z>
.FOLLOW_ruleProcessorSubprogram_in_ruleAccessConnectionEnd51499);<z>
ruleProcessorSubprogram();<z>
--;<z>
current = this_ProcessorSubprogram_1;<z>
afterParserOrEnumRuleCall();<z>
);<z>
{<z>
input,re);<z>
;<z>
return current;<z>
() throws SQLException {<z>
configPath = System.getenv("ENGINE_VARS");<z>
if (configPath == null) {<z>
configPath = "/etc/sysconfig/ovirt-engine";<z>
= new File(configPath);<z>
()) {<z>
.getAbsolutePath() + "\".");<z>
= new Properties();<z>
configReader = null;<z>
);<z>
(configReader);<z>
) {<z>
exception);<z>
;<z>
{<z>
.getAbsolutePath() + "\".", exception);<z>
(ENGINE_DB_DRIVER);<z>
== null) {<z>
;<z>
ENGINE_DB_URL);<z>
(url == null) {<z>
);<z>
= config.getProperty("ENGINE_DB_USER");<z>
{<z>
getAbsolutePath() + "\".");<z>
);<z>
password == null) {<z>
.getAbsolutePath() + "\".");<z>
.decode(password, "", "");<z>
) {<z>
);<z>
);<z>
catch (ClassNotFoundException exception) {<z>
driver + "\".", exception);<z>
;<z>
).addShutdownHook(<z>
() {<z>
run() {<z>
;<z>
,<z>
float newvalue, float default_value) {<z>
, obj,<z>
),<z>
Float.floatToIntBits(default_value));<z>
)<z>
;<z>
length() > 0)<z>
(text, style);<z>
;<z>
) {<z>
: ImAddressKeyType.values()) {<z>
.value.equals(v)) {<z>
;<z>
throw new IllegalArgumentException(v);<z>
boolean visit(QualifiedName node) {<z>
);<z>
getFullyQualifiedName()));<z>
);<z>
return false;<z>
public Object clone()<z>
(),<z>
Rectangle.getMaxY()), nodePtr);<z>
Exception e){<z>
();<z>
return null;<z>
throws Exception {<z>
null;<z>
DefaultHttpClient();<z>
* 1000);<z>
;<z>
(url);<z>
.execute(method);<z>
getEntity().getContent();<z>
"jpg";<z>
".gif")) {<z>
= "gif";<z>
".png")) {<z>
;<z>
"cover." + suffix);<z>
isWriteAllowed(newCoverFile)) {<z>
(newCoverFile.getPath()));<z>
path, "cover.backup." + suffix));<z>
;<z>
;<z>
mediaFileService.getCoverArt(mediaFile);<z>
if (coverFile != null) {<z>
(coverFile)) {<z>
;<z>
info("Renamed old image file " + coverFile);<z>
{<z>
);<z>
(mediaFile);<z>
{<z>
;<z>
client.getConnectionManager().shutdown();<z>
int getToolbarsHeight()<z>
.getOffsetHeight() : 0)<z>
? secondaryToolbar_.getOffsetHeight() : 0);<z>
public void switch907() {<z>
XQuery(<z>
);<z>
(query);<z>
;<z>
"XPST0003")<z>
Composite parent, MergeViewerSide side) {<z>
(side);<z>
fControl = createControl(parent);<z>
fControl);<z>
= new ForwardingViewerSelectionListener();<z>
).addSelectionChangedListener(fForwardingSelectionListener);<z>
int maxd, String path, boolean peers_only) {<z>
port);<z>
(true) {<z>
);<z>
.out.println("accepted connection");<z>
Thread(gs);<z>
;<z>
(IOException ex) {<z>
();<z>
public String nextTo(char d) {<z>
new StringBuffer();<z>
(;;) {<z>
;<z>
(c == '\r')) {<z>
{<z>
;<z>
sb.toString().trim();<z>
c);<z>
void write(FeatureCollectionResponse featureCollection, OutputStream output,<z>
IOException, ServiceException {<z>
) getFeature.getParameters()[0];<z>
);<z>
), featureCollection, ftRequest);<z>
ftRequest);<z>
rowInspector) throws HiveException {<z>
= leftEvaluator.initialize(rowInspector);<z>
if (desc.getIsList()) {<z>
) ((ListObjectInspector) leftInspector)<z>
.getListElementObjectInspector();<z>
} else {<z>
leftInspector;<z>
);<z>
);<z>
desc.getIsList()) {<z>
= ObjectInspectorFactory<z>
.getStandardListObjectInspector(structFieldObjectInspector);<z>
} else {<z>
resultObjectInspector = structFieldObjectInspector;<z>
resultObjectInspector;<z>
void handleException(Throwable exc)<z>
;<z>
exc);<z>
registry.getUserNotifier().notifyError("Thumbnail Retrieval Failure",<z>
;<z>
) {<z>
);<z>
++;<z>
} finally {<z>
sharedLock.unlock();<z>
add(channel);<z>
)<z>
){<z>
, par3, par4, par5EntityLiving);<z>
(par2, par3, par4) & 3;<z>
, i | 0);<z>
(Visitor<T> visitor) {<z>
before(size());<z>
(visitor);<z>
after();<z>
ConnectionException {<z>
.info("testtpsend_tpsendonly_service");<z>
(svcinfo.getBuffer(), 0);<z>
.getBuffer(), 0);<z>
, int noOfAccounts, boolean readDb) {<z>
.d(TAG, "buildUpdate()");<z>
), R.layout.saldo_appwidget);<z>
(context, Saldo.class);<z>
(context, 0, intent, 0);<z>
(R.id.layout_widget_launcher, pendingIntent);<z>
.createUri(appWidgetId);<z>
new Intent(context, WidgetService.class);<z>
;<z>
setData(uri);<z>
putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);<z>
intent, PendingIntent.FLAG_UPDATE_CURRENT);<z>
.id.layout_widget_btn_update, pendingIntent);<z>
new Intent(context, WidgetService.class);<z>
);<z>
intent.setData(uri);<z>
(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);<z>
0, intent, PendingIntent.FLAG_UPDATE_CURRENT);<z>
R.id.widget_arrow_up_btn, pendingIntent);<z>
WidgetService.class);<z>
;<z>
uri);<z>
putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);<z>
.FLAG_UPDATE_CURRENT);<z>
.id.widget_arrow_down_btn, pendingIntent);<z>
currentAccountIndex + 1, noOfAccounts));<z>
;<z>
context);<z>
(!readDb)<z>
return views;<z>
dbAdapter.open();<z>
Account account = dbAdapter.fetchAccount(accountId);<z>
account != null) {<z>
= new StringBuilder();<z>
());<z>
) {<z>
());<z>
append(": ");<z>
append(account.getName());<z>
;<z>
getBalance()));<z>
);<z>
(SQLException e) {<z>
e(TAG, "SQLException reading account in buildUpdate", e);<z>
{<z>
;<z>
;<z>
(String prefix, Properties setList) {<z>
;<z>
prefix = PropUtils.getScopedPropertyPrefix(prefix);<z>
ServerProperty);<z>
if (server == null) {<z>
DEFAULT_SERVER;<z>
;<z>
port == null) {<z>
port = DEFAULT_PORT;<z>
getValueForProperty(PropertyDescriptor propertyDescriptor, EDBObject object) {<z>
= propertyDescriptor.getWriteMethod();<z>
);<z>
(propertyName);<z>
[0];<z>
Map.class.isAssignableFrom(parameterType)) {<z>
= getGenericMapParameterClasses(setterMethod);<z>
object);<z>
)) {<z>
(setterMethod);<z>
object);<z>
(value == null) {<z>
return null;<z>
class.isAssignableFrom(parameterType)) {<z>
;<z>
;<z>
;<z>
)) {<z>
wrapper = new FileWrapper();<z>
;<z>
String content = (String) value;<z>
wrapper.setFilename(filename);<z>
);<z>
value = wrapper;<z>
;<z>
parameterType.equals(File.class)) {<z>
return null;<z>
containsKey(propertyName)) {<z>
parameterType.isEnum()) {<z>
= getEnumValue(parameterType, value);<z>
.class.isAssignableFrom(parameterType)) {<z>
createNumber((String) value);<z>
.remove(propertyName);<z>
value;<z>
Exception {<z>
));<z>
[]) ois.readObject());<z>
.getInstance("DES");<z>
.generateSecret(ks);<z>
c = Cipher.getInstance("DES/CFB8/NoPadding");<z>
;<z>
("ciphertext"), c);<z>
BufferedReader(new InputStreamReader(cis));<z>
br.readLine();<z>
;<z>
getPublicIP(Connection xmppConnection) {<z>
if (!xmppConnection.isConnected()) {<z>
;<z>
.publicip);<z>
;<z>
setType(Type.SET);<z>
xmppConnection<z>
.getPacketID()));<z>
rtpPacket);<z>
) collector<z>
getPacketReplyTimeout());<z>
);<z>
null;<z>
return null;<z>
Enumeration ifaces = null;<z>
);<z>
{<z>
();<z>
&&ifaces.hasMoreElements()) {<z>
nextElement();<z>
iface.getInetAddresses();<z>
(iaddresses.hasMoreElements()) {<z>
;<z>
())<z>
(response.getIp()) >= 0)<z>
;<z>
();<z>
String path) {<z>
new Trigger() {<z>
run() throws Exception {<z>
click(path);<z>
listener) throws LogConfigurationException<z>
;<z>
e) {<z>
);<z>
) {<z>
= title;<z>
).setTitle(genWindowTitle(title));<z>
(false);<z>
) {<z>
(bitField0_ & ~0x00000001);<z>
.BUILD_MESSAGE;<z>
this;<z>
public IContentAssistant getContentAssistant(ISourceViewer sourceViewer) {<z>
();<z>
sourceViewer));<z>
setContentAssistProcessor(new OcamlCompletionProcessor(ocamllexEditor,<z>
.DEFAULT_CONTENT_TYPE);<z>
;<z>
);<z>
);<z>
PROPOSAL_STACKED);<z>
IContentAssistant.CONTEXT_INFO_ABOVE);<z>
(new OcamlInformationControlCreator());<z>
return assistant;<z>
QName qname)<z>
(qname);<z>
).get(qname);<z>
statements)<z>
getPredicate().stringValue();<z>
value = statement.getObject();<z>
)<z>
PROV + "activity"))<z>
);<z>
));<z>
statements, ProvType.GENERATION);<z>
GENERATION);<z>
wgb);<z>
wgb);<z>
) throws IOException {<z>
ReceiveInteger4();<z>
.getLogLevel());<z>
.logDebug())<z>
+ ")");<z>
PSQLWarning(warnMsg);<z>
window, View view, MotionEvent event) {<z>
) == MotionEvent.ACTION_UP) {<z>
;<z>
codeCell(String title) {<z>
;<z>
setBorder(0);<z>
, 240, 240));<z>
t = this.p();<z>
) ? "CODE" : title) + "]",<z>
));<z>
t);<z>
());<z>
return cell;<z>
) {<z>
)) {<z>
(OntModelSpec.OWL_MEM);<z>
{<z>
"SPARQL: adding submodel ");<z>
);<z>
null) {<z>
.debug("Error: destination model for SPARQL Construct action not specified for this action");<z>
;<z>
getPropertyValue(WorkflowOntology.destinationModel));<z>
);<z>
WorkflowOntology.sparqlQuery);<z>
(QUERY_STR_PROPERTY))).getLexicalForm();<z>
;<z>
);<z>
.create(query,sourceModel);<z>
(tempModel);<z>
.add(tempModel);<z>
new ActionResultImpl();<z>
return null;<z>
final void mDISCARD() throws RecognitionException {<z>
int _type = DISCARD;<z>
;<z>
);<z>
.type = _type;<z>
channel = _channel;<z>
public OpenSaveResponse(<z>
.filespray.ArrayOfEspException exceptions,<z>
java.lang.String location,<z>
java.lang.String path,<z>
.lang.String name,<z>
.lang.String type,<z>
.String dateTime,<z>
viewable) {<z>
.exceptions = exceptions;<z>
= location;<z>
= path;<z>
name;<z>
;<z>
dateTime = dateTime;<z>
.viewable = viewable;<z>
IOException {<z>
fp += 2;<z>
stream.readShort();<z>
DataTools.swap(v) : v;<z>
(Integer result) {<z>
4) {<z>
internet_connection);<z>
result == 3) {<z>
string.invalid_ushahidi_instance);<z>
else if (result == 2) {<z>
.could_not_fetch_checkin);<z>
} else if (result == 1) {<z>
string.could_not_fetch_checkin);<z>
(result == 0) {<z>
);<z>
);<z>
Merchandize merchandize,Integer cantidad){<z>
.obtener(merchandize.getMerchandizeCodigo());<z>
m.getMerchandizePrecio();<z>
linea=2;<z>
;<z>
setCartCantidad(cantidad);<z>
nuevoShopCartDeta.setShopcart(nuevoShopCart);<z>
linea);<z>
);<z>
(precio);<z>
nuevoShopCartDeta);<z>
String urlencode(String value) {<z>
.encode(value, "utf-8");<z>
UnsupportedEncodingException e) {<z>
e("PTRR", "", e);<z>
return "notencoded";<z>
(EDataType eDataType, String initialValue) {<z>
initialValue);<z>
;<z>
;<z>
value) {<z>
entityManager = entityManagerFactory.createEntityManager();<z>
);<z>
.joinTransaction();<z>
value);<z>
.commit();<z>
result;<z>
(RollbackException e) {<z>
);<z>
;<z>
catch (Exception e) {<z>
);<z>
{<z>
userTransaction.getStatus() == Status.STATUS_ACTIVE)<z>
;<z>
{<z>
close();<z>
public void onChange(CmsSitemapChangeEvent changeEvent) {<z>
= changeEvent.getChange();<z>
) {<z>
case delete:<z>
));<z>
.removeChild(item);<z>
case undelete:<z>
case create:<z>
change.getEntryId());<z>
(newEntry);<z>
, newEntry.getPosition());<z>
:<z>
));<z>
)));<z>
case modify:<z>
{<z>
(change.getEntryId());<z>
getTreeItem(change.getEntryId());<z>
)moveEntry.getParentItem();<z>
;<z>
.removeChild(moveEntry);<z>
CmsSitemapTreeItem destParent = change.hasNewParent()<z>
getParentId())<z>
;<z>
() < destParent.getChildCount()) {<z>
entry.getPosition());<z>
else {<z>
addChild(moveEntry);<z>
);<z>
;<z>
;<z>
case remove:<z>
()));<z>
List<String> typeArguments) {<z>
!typeArguments.isEmpty()) {<z>
"<");<z>
true;<z>
: typeArguments) {<z>
) {<z>
false;<z>
else {<z>
;<z>
);<z>
;<z>
omg.CORBA.SystemException<z>
String newKey =<z>
contextMgr.getNewObjectKey( );<z>
theContext =<z>
,<z>
contextMgr );<z>
( newKey,<z>
;<z>
( tempContext != null )<z>
tempContext;<z>
.setServantManagerImpl( contextMgr );<z>
);<z>
.setRootNameService( this );<z>
=<z>
narrow(<z>
.getBytes( ),<z>
.id( )) );<z>
;<z>
SystemException e )<z>
e;<z>
( java.lang.Exception e )<z>
;<z>
public final void setHazelcastInstance( HazelcastInstance hazelcast) {<z>
m_externalHazelcast = true;<z>
m_hazelcastInstance = hazelcast;<z>
) {<z>
addAxioms ) {<z>
true;<z>
).accept( this );<z>
c = term;<z>
ATermUtils.EMPTY_LIST;<z>
desc : axiom.getClassExpressions() ) {<z>
.accept( this );<z>
classes.insert( result() );<z>
);<z>
ATermUtils.makeOr( classes ) );<z>
CmsDbContext dbc, String roleGroupName, boolean directUsersOnly)<z>
{<z>
());<z>
Object getAttribute(String name) {<z>
);<z>
null) {<z>
name);<z>
;<z>
objectType) throws JAXBException {<z>
.containsKey(objectType)) {<z>
objectType);<z>
jaxbContextHashMap.put(objectType, context);<z>
);<z>
();<z>
true);<z>
Marshaller.JAXB_ENCODING, "utf-8");<z>
marshaller;<z>
handleTimeout(EvalFunc evalFunc, Exception e) {<z>
);<z>
StatusReporter reporter = PigStatusReporter.getInstance();<z>
(reporter != null &&<z>
(), "MonitoredUDF Timeout") != null) {<z>
;<z>
public XMLBlockInfo(FSNamesystem fsn, Long blockId) {<z>
.fsn = fsn;<z>
blockId == null) {<z>
block = null;<z>
.inode = null;<z>
{<z>
);<z>
getINode(block);<z>
hit) {<z>
polypeptide;<z>
.equals("gene")) {<z>
getPolypeptideForGene(hit.getFeatureUniquename());<z>
().equals("protein")) {<z>
(hit.getFeatureUniquename());<z>
));<z>
polypeptide == null) {<z>
hit.getFeatureUniquename()));<z>
polypeptide, hit);<z>
{<z>
.modelToXml();<z>
XmlOptions opts = new XmlOptions();<z>
setSavePrettyPrint();<z>
4);<z>
setUseDefaultNamespace();<z>
"UTF-8");<z>
opts);<z>
public boolean visit(OracleUpdateSetListClause x) {<z>
"SET ");<z>
(x.getItems(), ", ");<z>
return false;<z>
option)<z>
())<z>
option.getBoxedType());<z>
distance, final boolean toroidal,<z>
result)<z>
result);<z>
.numObjs;<z>
.objs;<z>
distance*distance;<z>
radial)<z>
<numObjs;i++)<z>
double d = 0;<z>
[i]);<z>
d = tds(position, loc);<z>
;<z>
distsq))<z>
}<z>
)<z>
= getObjectLocation(objs[i]);<z>
0;<z>
= 0;<z>
)<z>
loc.x, position.x);<z>
, position.y);<z>
.x;<z>
.y;<z>
minx < 0) minx = -minx;<z>
= -miny;<z>
||<z>
>= distance || miny >= distance)))<z>
; i--; numObjs--; }<z>
result;<z>
{<z>
minValue) {<z>
(minValue < 0) {<z>
;<z>
= minValue;<z>
) {<z>
mMinValue;<z>
= mMaxValue - mMinValue > mSelectorIndices.length;<z>
(wrapSelectorWheel);<z>
initializeSelectorWheelIndices();<z>
updateInputTextView();<z>
tryComputeMaxWidth();<z>
final BroadcastReceiver mReceiver = new BroadcastReceiver() {<z>
(Context context, Intent intent) {<z>
);<z>
ACTION_FOUND.equals(action)) {<z>
);<z>
)) {<z>
device.getAddress());<z>
{<z>
;<z>
(R.string.select_device);<z>
.getCount() == 0) {<z>
);<z>
);<z>
Item i) {<z>
(short) i.getID());<z>
());<z>
());<z>
CmsContainerPageElementPanel element) {<z>
;<z>
return true;<z>
catch (Throwable t) {<z>
return false;<z>
IProject getProject() {<z>
getElement();<z>
) {<z>
(IProject) element;<z>
;<z>
private void configureAbbreviationSettings(<z>
type,<z>
,<z>
fullLabel,<z>
JLabel abbreviatedLabel,<z>
JPanel abbreviationsPanel,<z>
final AbbreviationSettings abbreviationSettings<z>
);<z>
) {<z>
, true);<z>
else {<z>
setText(abbreviationSettings.getFullLabel());<z>
;<z>
);<z>
) {<z>
getSize() > 1) {<z>
JComboBox dropDown = new JComboBox(model);<z>
.getElementAt(0)+"comboBox");<z>
addActionListener(new ActionListener() {<z>
ActionEvent e) {<z>
.getAbbreviatedLabel());<z>
== LabelType.CELL) {<z>
);<z>
) {<z>
setRowLabelAbbreviations(abbreviationSettings);<z>
{<z>
);<z>
);<z>
;<z>
} else {<z>
.getElementAt(0)));<z>
broadcast(FacesEvent event) throws AbortProcessingException {<z>
) {<z>
) event;<z>
getPage());<z>
);<z>
getDataTable();<z>
DataScrollerUtils.findDataScrollers(dataTable);<z>
: dataScrollers) {<z>
);<z>
null;<z>
(dataTable instanceof MetaComponentResolver) {<z>
(facesContext, dataTable, "body");<z>
) {<z>
facesContext);<z>
).add(dataTableId);<z>
);<z>
getRenderIds().contains(dataScrollerId)) {<z>
dataScrollerId);<z>
super.broadcast(event);<z>
createCommentsTextarea(Composite parent) {<z>
, DatabaseMessages.IndexPropertiesEditionPart_CommentsLabel);<z>
.FILL_HORIZONTAL);<z>
horizontalSpan = 3;<z>
.setLayoutData(commentsLabelData);<z>
| SWT.MULTI | SWT.V_SCROLL);<z>
;<z>
horizontalSpan = 2;<z>
= 80;<z>
commentsData.widthHint = 200;<z>
.setLayoutData(commentsData);<z>
{<z>
(FocusEvent e) {<z>
!= null)<z>
()));<z>
});<z>
.Index.Properties.comments);<z>
EditingUtils.setEEFtype(comments, "eef::Textarea");<z>
.SWT_KIND), null);<z>
return parent;<z>
PrintWriter objfile )<z>
);<z>
: ctxPath;<z>
"".equals(ctxPath) ) {<z>
;<z>
+ ">");<z>
.println("#########################################################");<z>
);<z>
"#########################################################");<z>
();<z>
getLoginConfig() != null) {<z>
.getLoginConfig().getLoginPage();<z>
{<z>
loginPage.lastIndexOf("/");<z>
"j_security_check";<z>
;<z>
.findServletMappings();<z>
) {<z>
, objfile );<z>
"</Object>");<z>
() {<z>
)) {<z>
);<z>
();<z>
T next() {<z>
null )<z>
--;<z>
.removeFirst();<z>
GateTalk.Session parseFrom(<z>
.ByteString data)<z>
protobuf.InvalidProtocolBufferException {<z>
;<z>
)<z>
();<z>
++seqCount;<z>
lastToken) {<z>
new Property[] {<z>
element_textarea)<z>
}, firstToken, lastToken);<z>
() {<z>
+ makeDescription() + "</html>");<z>
(myRepositories, GitRepository.class));<z>
));<z>
repositorySelector.setSelectedItem(myInitialRepository);<z>
() {<z>
{<z>
GitRepository)repositorySelector.getSelectedItem());<z>
new ArrayList<GitCommit>(commits));<z>
);<z>
);<z>
("Repository: ");<z>
(repoSelectorPanel);<z>
label, BorderLayout.WEST);<z>
;<z>
2) {<z>
);<z>
);<z>
descriptionLabel);<z>
SOUTH);<z>
return northPanel;<z>
(<z>
sequenceMediators) {<z>
;<z>
for (SequenceMediator sequenceMediator : sequenceMediators) {<z>
createSequenceInfo(sequenceMediator));<z>
new Comparator<SequenceInfo>() {<z>
(SequenceInfo info1, SequenceInfo info2) {<z>
);<z>
;<z>
[sequenceInfoList.size()]);<z>
int style) {<z>
.NO_REDRAW_RESIZE);<z>
GC gc = new GC(this);<z>
p = gc.stringExtent("Q");<z>
dispose();<z>
* 3;<z>
1.2);<z>
PaintListener() {<z>
void paintControl(PaintEvent event) {<z>
(event);<z>
;<z>
{<z>
ControlEvent e) {<z>
redraw();<z>
);<z>
) {<z>
KeyEvent e) {<z>
;<z>
});<z>
) {<z>
) {<z>
);<z>
{<z>
);<z>
);<z>
() {<z>
MouseEvent e) {<z>
onMouseMove(e);<z>
;<z>
{<z>
sites) {<z>
());<z>
"API Endpoint:" + site.getApiEndpoint());<z>
("Site URL:" + site.getSiteUrl());<z>
));<z>
(HttpServletResponse servletResponse) throws IOException<z>
SC_NO_CONTENT);<z>
feedback)<z>
.SC_OK);<z>
getWriter().write("Action was processed successfully. There was no result");<z>
Session session) {<z>
session instanceof SimpleSession) {<z>
).setExpired(true);<z>
onChange(session);<z>
) {<z>
();<z>
count;<z>
= elems;<z>
();<z>
) {<z>
null;<z>
int portNum = -1;<z>
) {<z>
+ reason );<z>
indexOf("[Serverport]") == 0 ) {<z>
split( ":" );<z>
if( split.length == 3 ) {<z>
split[1].trim();<z>
2].trim() );<z>
= -1; };<z>
.length == 2 ) {<z>
.trim();<z>
;<z>
};<z>
0) {<z>
);<z>
{<z>
+ ":" + portNum;<z>
else {<z>
null;<z>
, final ComputationTarget target, final ValueRequirement desiredValue) {<z>
(target);<z>
ValueProperties constraints = desiredValue.getConstraints();<z>
.SAMPLING_PERIOD);<z>
{<z>
null;<z>
.getValues(ValuePropertyNames.SCHEDULE_CALCULATOR);<z>
1) {<z>
return null;<z>
getValues(ValuePropertyNames.SAMPLING_FUNCTION);<z>
1) {<z>
null;<z>
(ValuePropertyNames.RETURN_CALCULATOR);<z>
{<z>
;<z>
.iterator().next();<z>
iterator().next();<z>
();<z>
);<z>
();<z>
ValueProperties.builder()<z>
.CURRENCY)<z>
.with(ValuePropertyNames.SAMPLING_PERIOD, samplingPeriodName)<z>
with(ValuePropertyNames.SCHEDULE_CALCULATOR, scheduleCalculatorName)<z>
samplingFunctionName)<z>
;<z>
;<z>
= OpenGammaCompilationContext.getHistoricalTimeSeriesResolver(context);<z>
conventionSource = OpenGammaCompilationContext.getConventionBundleSource(context);<z>
of(InMemoryConventionBundleMaster.SIMPLE_NAME_SCHEME, "USD_CAPM"));<z>
minus(samplingPeriodName);<z>
.MARKET_VALUE, _resolutionKey);<z>
null) {<z>
return null;<z>
startDate, true,<z>
, true));<z>
_resolutionKey);<z>
timeSeries == null) {<z>
;<z>
startDate, true,<z>
;<z>
return requirements;<z>
public IBrowserDescriptor getCurrentWebBrowser() {<z>
(browsers == null)<z>
();<z>
&& browsers.size() > 0)<z>
0);<z>
currentBrowser;<z>
)<z>
"bid");<z>
flush();<z>
);<z>
Integer)is.readObject();<z>
" received bid "+bid);<z>
bid, player_id);<z>
int temp= trumpObject.cur_player;<z>
) % trumpObject.NO_OF_PLAYERS;<z>
cur_player = temp;<z>
parent.num_threads++;<z>
e)<z>
protected void addNamespacePropertyDescriptorGen( Object object ) {<z>
.getRootAdapterFactory(),<z>
(),<z>
),<z>
),<z>
getXmlDocumentNode_Namespace(),<z>
));<z>
) {<z>
(MILLISECOND,<z>
));<z>
);<z>
.MINUTE));<z>
.HOUR_OF_DAY));<z>
);<z>
Integer(Calendar.WEEK_OF_YEAR));<z>
));<z>
new Integer(Calendar.YEAR));<z>
static String[] descriptorStringToParameterArray(String methodDescriptor) {<z>
= 1;<z>
;<z>
= -1;<z>
!= ')') {<z>
String type = null;<z>
charAt(i) == '[') {<z>
{<z>
arraystart = i;<z>
{<z>
{<z>
i;<z>
++;<z>
!= ';') {<z>
++i;<z>
== -1) {<z>
methodDescriptor.substring(start, i);<z>
{<z>
);<z>
{<z>
(arraystart == -1) {<z>
+ "";<z>
else {<z>
1);<z>
1;<z>
(type);<z>
i;<z>
new String[ret.size()];<z>
ret.size(); ++j) {<z>
ret.get(j);<z>
;<z>
Number getMinimumAccessibleValue() {<z>
this.getInternalFrame().getAccessibleContext();<z>
{<z>
a).getMinimumAccessibleValue();<z>
{<z>
return null;<z>
updateEvent(<z>
, java.lang.String title,<z>
.lang.String location,<z>
startDateMonth, int startDateDay, int startDateYear,<z>
,<z>
endDateYear, int durationHour, int durationMinute,<z>
type,<z>
,<z>
recurrence, int remindBy,<z>
, int secondReminder,<z>
.liferay.portal.service.ServiceContext serviceContext)<z>
kernel.exception.PortalException,<z>
portal.kernel.exception.SystemException {<z>
),<z>
;<z>
,<z>
,<z>
startDateYear, startDateHour, startDateMinute,<z>
endDateYear, durationHour,<z>
type, repeating,<z>
,<z>
);<z>
Object returnObj = null;<z>
(httpPrincipal, methodHandler);<z>
Exception e) {<z>
kernel.exception.PortalException) {<z>
.PortalException)e;<z>
exception.SystemException) {<z>
.SystemException)e;<z>
kernel.exception.SystemException(e);<z>
portlet.calendar.model.CalEvent)returnObj;<z>
exception.SystemException se) {<z>
, se);<z>
throw se;<z>
toString() {<z>
();<z>
append("EndpointQuery [component=");<z>
component);<z>
builder.append(", container=");<z>
);<z>
append(", endpoint=");<z>
builder.append(this.endpoint);<z>
(", ignoreParams=");<z>
;<z>
", itf=");<z>
this.itf);<z>
builder.append(", linkType=");<z>
.append(this.linkType);<z>
(", params=");<z>
(this.params);<z>
.append(", service=");<z>
service);<z>
;<z>
strategy);<z>
", subDomain=");<z>
append(this.subDomain);<z>
);<z>
;<z>
("]");<z>
return builder.toString();<z>
(Long nodeId) {<z>
;<z>
(NodeDao)Beans.getBean("nodeDao");<z>
(EdgeDao)Beans.getBean("edgeDao");<z>
getBean("questionDao");<z>
getBean("genericRO");<z>
) Beans.getBean("surveyDao");<z>
= nodeDao.loadById(nodeId);<z>
;<z>
;<z>
.findById(1L);<z>
final Exception exception)<z>
;<z>
exception;<z>
(Properties properties) {<z>
"startUpInstance(properties)");<z>
);<z>
instance != null) {<z>
;<z>
(useStatic) {<z>
;<z>
else {<z>
);<z>
throws IOException {<z>
= readCodeInteger();<z>
;<z>
bits));<z>
static public UsageGroup getUsageGroupingRule(PsiElement element) {<z>
= {null};<z>
ASTTreeProcessor treeProcessor = new ASTTreeProcessor();<z>
.add(new ASTNodeHandler() {<z>
TokenSet getTokenSet() {<z>
.create(<z>
,<z>
PlSqlElementTypes.INSERT_COMMAND,<z>
,<z>
.DELETE_COMMAND<z>
public boolean handleNode(@NotNull ASTNode node) {<z>
] = node.getPsi();<z>
true;<z>
;<z>
;<z>
getNode() == null) {<z>
null;<z>
{<z>
((SelectStatement) etype[0]);<z>
PlSqlElementTypes.INSERT_COMMAND) {<z>
etype[0]);<z>
DELETE_COMMAND) {<z>
(DeleteStatement) etype[0]);<z>
== PlSqlElementTypes.UPDATE_COMMAND) {<z>
etype[0]);<z>
null;<z>
{<z>
if (!InlineSQLHelperUtil.isEnabled()) {<z>
companyId);<z>
;<z>
append(_FILTER_SQL_COUNT_LAYOUTSETPROTOTYPE_WHERE);<z>
append(_FINDER_COLUMN_COMPANYID_COMPANYID_2);<z>
toString(),<z>
getName(),<z>
);<z>
;<z>
);<z>
(sql);<z>
addScalar(COUNT_COLUMN_NAME,<z>
.LONG);<z>
(q);<z>
companyId);<z>
q.uniqueResult();<z>
);<z>
(Exception e) {<z>
);<z>
);<z>
controlSize, Anchor anchor)<z>
;<z>
(0, 0, 0, 0);<z>
;<z>
;<z>
return location;<z>
(final VjoValidationCtx ctx,<z>
expr, final IExpr identifier,<z>
List<IExpr> args, final IJstNode mtdBinding,<z>
arguments) {<z>
)) {<z>
;<z>
.getOwnerType();<z>
final IJstType mtdOwnerType = method.getOwnerType();<z>
.isVisible(method, mtdOwnerType, callerType);<z>
(!visible) {<z>
,<z>
(), arguments));<z>
.size() > 0) {<z>
0);<z>
method = (JstMethod)mtdBinding;<z>
ctx, valuesExprArgs, method);<z>
(ctx, mtdBinding, args, expr);<z>
if(mtdBinding instanceof JstMethod){<z>
));<z>
) throws MuleException<z>
.debug("SUB doStop()");<z>
null)<z>
.setMessageListener(null);<z>
;<z>
JMSException e)<z>
force)<z>
getMessage());<z>
started = false;<z>
;<z>
) throws RecognitionException {<z>
();<z>
) {<z>
getIncludedAccess().getNameAssignment_2_0());<z>
FOLLOW_rule__Included__NameAssignment_2_0_in_rule__Included__Group_2__0__Impl11262);<z>
);<z>
;<z>
) return ;<z>
) {<z>
;<z>
re) {<z>
reportError(re);<z>
);<z>
);<z>
updateEntityActionState()<z>
);<z>
worldObj.getClosestVulnerablePlayerToEntity(this, 16D);<z>
(entityplayer != null)<z>
;<z>
0)<z>
();<z>
!= null)<z>
/= 3;<z>
true;<z>
if (makesSoundOnJump())<z>
;<z>
1.0F - rand.nextFloat() * 2.0F;<z>
moveForward = 1 * getSlimeSize();<z>
= false;<z>
(onGround)<z>
0.0F;<z>
{<z>
(notification);<z>
getFeatureID(HenshinPackage.class);<z>
featureId) {<z>
.RULE__MAPPINGS:<z>
notification.getEventType()) {<z>
ADD:<z>
:<z>
notification.getNewValue() instanceof Mapping) {<z>
;<z>
:<z>
Notification.REMOVE_MANY:<z>
{<z>
(Mapping) notification.getOldValue() );<z>
{<z>
eObj != null)<z>
eNotify(notification);<z>
super.notifyChanged(notification);<z>
IOException {<z>
))<z>
"response is committed");<z>
;<z>
{<z>
VerifyUtils<z>
);<z>
byte[] b = null;<z>
if (hasContent) {<z>
,<z>
.getBytes(characterEncoding);<z>
b.length));<z>
else {<z>
setHeader("Content-Length", "0");<z>
bufferedOutput.write(getHeadData());<z>
hasContent)<z>
bufferedOutput.write(b);<z>
{<z>
close();<z>
setCommitted(true);<z>
() {<z>
HTMLPaneSample panel = new HTMLPaneSample();<z>
;<z>
;<z>
public void setDimensionMasked(final boolean dimensionMasked)<z>
throws ValidationException {<z>
final boolean oldValue = this.isDimensionMasked();<z>
oldValue)<z>
dimensionMasked<z>
))<z>
throw new ValidationException(Resources<z>
get("cannotMaskNonDimension"));<z>
)<z>
intern(),<z>
);<z>
.getName());<z>
, oldValue,<z>
;<z>
(UUID ownerId) {<z>
CardType.ARTIFACT}, "{0}");<z>
;<z>
Constants.Duration.WhileOnBattlefield, false);<z>
Zone.BATTLEFIELD, effect));<z>
{<z>
available() >= len) {<z>
, off, len);<z>
} else {<z>
-1;<z>
, ClassInfo classInfo, EntityMappingsMocker.Default defaults) {<z>
indexBuilder;<z>
classInfo = classInfo;<z>
defaults = defaults;<z>
recursiveSetGeneratedBy(T node, JCTree source) {<z>
);<z>
MarkingScanner(source));<z>
node;<z>
public final String entryRuleIdOrInt() throws RecognitionException {<z>
null;<z>
= null;<z>
0 ) {<z>
));<z>
pushFollow(FOLLOW_ruleIdOrInt_in_entryRuleIdOrInt522);<z>
=ruleIdOrInt();<z>
._fsp--;<z>
current;<z>
) {<z>
.getText();<z>
; if (state.failed) return current;<z>
(RecognitionException re) {<z>
recover(input,re);<z>
);<z>
;<z>
) {<z>
();<z>
);<z>
prefs);<z>
;<z>
);<z>
);<z>
);<z>
updatePropertyFiles(prefs);<z>
;<z>
).savePluginPreferences();<z>
classpathChanged) {<z>
;<z>
;<z>
.addPropertyChangeListener(this);<z>
{<z>
(textComponent, SEARCH_MARKER);<z>
.isSelected()) {<z>
, SEARCH_MARKER);<z>
, XF390 dialog){<z>
);<z>
;<z>
= dialog;<z>
"HeaderTable");<z>
().getTableElement(tableID);<z>
"ActiveWhere");<z>
("UpdateCounter");<z>
)) {<z>
XFUtility.DEFAULT_UPDATE_COUNTER;<z>
wrkStr1;<z>
dom.Element workElement;<z>
) {<z>
NodeList nodeList = tableElement.getElementsByTagName("Key");<z>
nodeList.getLength(); i++) {<z>
;<z>
equals("PK")) {<z>
, ";" );<z>
{<z>
.nextToken();<z>
keyFieldList.add(wrkStr1);<z>
else {<z>
, ";" );<z>
workTokenizer.hasMoreTokens()) {<z>
workTokenizer.nextToken());<z>
";" );<z>
hasMoreTokens()) {<z>
add(workTokenizer.nextToken());<z>
dom.Element element;<z>
= tableElement.getElementsByTagName("Script");<z>
XFUtility.getSortedListModel(workList, "Order");<z>
sortList.size(); i++) {<z>
;<z>
, element));<z>
{<z>
) {<z>
MavenPackage.MAPPINGS__ENTRIES:<z>
();<z>
case MavenPackage.MAPPINGS__RULES:<z>
();<z>
.eIsSet(featureID);<z>
) throws IllegalStateException {<z>
bytes.reset();<z>
getFloat();<z>
e) {<z>
, e);<z>
{<z>
reset();<z>
latLonToLiteral(float lat, float lon) {<z>
, slon;<z>
lat;<z>
"+" + lat;<z>
< 0) slon = "" + lon;<z>
;<z>
("******* sphericalSystemDegree = " + sphericalSystemDegree);<z>
(slat + slon, sphericalSystemDegree);<z>
writeEventKindAndRequestId(int eventKind, int requestId)<z>
.writeByte(eventKind);<z>
);<z>
throws ParseException {<z>
jjtn000 = new AstFunction(JJTFUNCTION);<z>
jjtc000 = true;<z>
t0 = null;<z>
= null;<z>
):jj_ntk) {<z>
:<z>
jj_consume_token(NAMESPACE);<z>
;<z>
t1 = jj_consume_token(IDENTIFIER);<z>
null) {<z>
() - 1));<z>
t1.image);<z>
} else {<z>
.setLocalName(t1.image);<z>
jj_consume_token(LPAREN);<z>
jj_ntk():jj_ntk) {<z>
case INTEGER_LITERAL:<z>
:<z>
:<z>
case TRUE:<z>
:<z>
:<z>
case LPAREN:<z>
NOT0:<z>
:<z>
:<z>
:<z>
case IDENTIFIER:<z>
NAMESPACE:<z>
();<z>
true) {<z>
jj_ntk():jj_ntk) {<z>
COMMA:<z>
;<z>
;<z>
(COMMA);<z>
();<z>
jj_la1[35] = jj_gen;<z>
RPAREN);<z>
catch (Throwable jjte000) {<z>
jjtc000) {<z>
(jjtn000);<z>
= false;<z>
else {<z>
;<z>
(jjte000 instanceof RuntimeException) {<z>
) throw (RuntimeException)jjte000;}<z>
) {<z>
ParseException)jjte000;}<z>
throw (Error)jjte000;}<z>
{<z>
(jjtc000) {<z>
true);<z>
cal, boolean ignoreChanges)<z>
clear();<z>
) {<z>
.YEAR, year);<z>
MONTH, month - 1);<z>
;<z>
(!ignoreChanges) {<z>
YEAR);<z>
cal.get(Calendar.MONTH);<z>
= cal.get(Calendar.DATE);<z>
|| (calMonth + 1) != month ||<z>
day)<z>
+<z>
+<z>
(calMonth + 1) + "/" +<z>
month +<z>
+ day);<z>
.clear(Calendar.HOUR);<z>
);<z>
.SECOND);<z>
MILLISECOND);<z>
hour != UNSET && minute != UNSET) {<z>
;<z>
set(Calendar.MINUTE, minute);<z>
if (second != UNSET) {<z>
.set(Calendar.SECOND, second);<z>
) {<z>
MILLISECOND, milli);<z>
) {<z>
;<z>
i <= '9'; i++)<z>
= (byte) (i - '0');<z>
) {<z>
b.length)<z>
-1;<z>
i++, ptr++)<z>
ptr] != src[i])<z>
1;<z>
return ptr;<z>
fromProperties( Map<String, String> properties )<z>
);<z>
properties.get( "artifactId" );<z>
;<z>
get( "parent.artifactId" );<z>
null )<z>
new MavenProjectParent();<z>
;<z>
parentArtifactId );<z>
( properties.get( "parent.version" ) );<z>
.parent = parent;<z>
) throws RecognitionException {<z>
();<z>
FOLLOW_rule__XConstructorCall__Group_3_2__1__Impl_in_rule__XConstructorCall__Group_3_2__124115);<z>
();<z>
--;<z>
state.failed) return ;<z>
catch (RecognitionException re) {<z>
;<z>
recover(input,re);<z>
;<z>
()<z>
)<z>
;<z>
, Clazz.Role> getClassAndRoleForUser(<z>
)<z>
{<z>
query(<z>
Object[] { username },<z>
Role>>() {<z>
extractData(<z>
ResultSet rs)<z>
throws SQLException,<z>
dao.DataAccessException {<z>
> result =<z>
);<z>
.next()) {<z>
Clazz.Role role;<z>
(<z>
;<z>
IllegalArgumentException e) {<z>
(<z>
e);<z>
), role);<z>
result;<z>
e) {<z>
DataAccessException(<z>
+<z>
;<z>
,<z>
tmpMB) {<z>
moreAttr=true;<z>
{<z>
.getByte();<z>
AjpConstants.SC_A_ARE_DONE )<z>
return 200;<z>
( attributeCode == AjpConstants.SC_A_SSL_KEY_SIZE ) {<z>
(SSLSupport.KEY_SIZE_KEY,<z>
);<z>
== AjpConstants.SC_A_REQ_ATTRIBUTE ) {<z>
.getBytes( tmpMB );<z>
;<z>
;<z>
String v=tmpMB.toString();<z>
.SC_A_REQ_REMOTE_PORT)) {<z>
(v));<z>
(NumberFormatException nfe) {<z>
else {<z>
n, v );<z>
))<z>
"jk Attribute set " + n + "=" + v);<z>
(attributeCode) {<z>
.SC_A_CONTEXT :<z>
);<z>
:<z>
);<z>
AjpConstants.SC_A_REMOTE_USER :<z>
if( tomcatAuthentication ) {<z>
getBytes( tmpMB );<z>
{<z>
);<z>
SC_A_AUTH_TYPE :<z>
{<z>
getBytes( tmpMB );<z>
else {<z>
.getAuthType());<z>
AjpConstants.SC_A_QUERY_STRING :<z>
getBytes(req.queryString());<z>
AjpConstants.SC_A_JVM_ROUTE :<z>
.getBytes(req.instanceId());<z>
AjpConstants.SC_A_SSL_CERT :<z>
"https" );<z>
.SSL_CERT_NOTE);<z>
null) {<z>
();<z>
.SSL_CERT_NOTE, tmpMB2);<z>
(tmpMB2);<z>
case AjpConstants.SC_A_SSL_CIPHER :<z>
);<z>
;<z>
CIPHER_SUITE_KEY,<z>
toString());<z>
:<z>
scheme().setString( "https" );<z>
);<z>
(SSLSupport.SESSION_ID_KEY,<z>
.toString());<z>
case AjpConstants.SC_A_SECRET :<z>
getBytes(tmpMB);<z>
);<z>
)<z>
);<z>
;<z>
SC_A_STORED_METHOD:<z>
method());<z>
200;<z>
() {<z>
if(parser == null) {<z>
edit.parts.DurationNameEditPart.VISUAL_ID));<z>
;<z>
boolean includeUpper) {<z>
field);<z>
lowerTerm = lowerTerm;<z>
;<z>
= includeLower;<z>
includeUpper;<z>
RecognitionException {<z>
= keepStackSize();<z>
{<z>
().getRightCurlyBracketKeyword_11());<z>
if (state.failed) return ;<z>
backtracking==0 ) {<z>
getEdgeMappingAccess().getRightCurlyBracketKeyword_11());<z>
re) {<z>
(re);<z>
;<z>
);<z>
void startAnimation() {<z>
{<z>
{<z>
);<z>
);<z>
);<z>
timer.start();<z>
World world)<z>
(!Config.multiWorld)<z>
getBalance(currency);<z>
);<z>
, double max)<z>
interval;<z>
< 10)<z>
interval = 1;<z>
) / 10);<z>
;<z>
, FieldWriterType fieldType,<z>
logger) {<z>
fieldType, name, logger);<z>
= logger;<z>
{<z>
IllegalArgumentException("type cannot be null");<z>
genericType = type.isGenericType();<z>
genericType != null) {<z>
;<z>
type;<z>
> getMediaThumbnails() {<z>
MediaGroup group = getMediaGroup();<z>
) {<z>
;<z>
.getThumbnails();<z>
kSar hissar, String psetID) {<z>
);<z>
psetID;<z>
Title = "Load for Pset "+ psetID;<z>
.time.Second.class);<z>
+ psetID+" Load 1mn", t_ldavg1);<z>
);<z>
("Pset " + psetID+" Load 5mn", t_ldavg5);<z>
.data.time.Second.class);<z>
;<z>
Second.class);<z>
"Pset " + psetID+" cpus", t_ncpu);<z>
) throws SQLException {<z>
arg0, arg1);<z>
catch (SQLException e) {<z>
abort();<z>
e;<z>
(Throwable throwable) {<z>
writer = new StringWriter();<z>
));<z>
();<z>
public void collectMacroExpansions(int offset, int length,<z>
) {<z>
getChildren();<z>
(LocationCtx ctx : children) {<z>
.fOffsetInParent >= offset+length) {<z>
LocationCtxMacroExpansion) {<z>
> offset) {<z>
macroExpansion =<z>
).getMacroReference().getParent();<z>
;<z>
Object, Object> getEntityManagerProperties() {<z>
if (entityManagerProperties == null) {<z>
.getProperties();<z>
;<z>
protected void processResponse(Interaction resp,<z>
> roleMap,<z>
Map<String,String> typeVarMap,<z>
{<z>
util.InteractionUtil.isFaultResponse(resp)) {<z>
resp, locator);<z>
indent);<z>
+faultType+"();");<z>
else {<z>
;<z>
typeVarMap.get(type);<z>
newline(code, indent);<z>
"// TODO: Add code here to return response");<z>
code, indent);<z>
+name+" = ....;");<z>
int nLength)<z>
TraceCircularBuffer)<z>
TDebug.out(">TCircularBuffer.read(): called.");<z>
dumpInternalState();<z>
isOpen())<z>
0)<z>
min(nLength, availableRead());<z>
nLength); }<z>
); }<z>
return -1;<z>
(this)<z>
availableRead() < nLength)<z>
.out("executing trigger."); }<z>
execute();<z>
(!m_bBlockingRead)<z>
;<z>
int nRemainingBytes = nLength;<z>
while (nRemainingBytes > 0)<z>
== 0)<z>
wait();<z>
e)<z>
if (TDebug.TraceAllExceptions)<z>
);<z>
);<z>
while (nAvailable > 0)<z>
, m_nSize - getReadPos());<z>
abData, nOffset, nToRead);<z>
nToRead;<z>
nToRead;<z>
nAvailable -= nToRead;<z>
;<z>
();<z>
(TDebug.TraceCircularBuffer)<z>
("After read:");<z>
dumpInternalState();<z>
.out("< completed. Read " + nLength + " bytes");<z>
nLength;<z>
void setLinkTarget(String target) {<z>
;<z>
&& linkTargetField.isDisposed() == false) {<z>
target);<z>
int getRequestedScreenOrientation(){<z>
(SCREEN_ORIENTATION_KEY, SCREEN_ORIENTATION_DEFAULT_VALUE);<z>
return ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED;<z>
ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;<z>
equals("landscape")) return ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;<z>
SCREEN_ORIENTATION_SENSOR;<z>
return ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED;<z>
Material par2Material)<z>
par2Material);<z>
(1.0F);<z>
hashCode() {<z>
);<z>
31 * result + invalidationThreshold;<z>
^ (lifespan >>> 32));<z>
0);<z>
>> 32));<z>
return result;<z>
void rebalance(MyVertex newChild) {<z>
) {<z>
= newChild.getValue();<z>
getParent().getValue();<z>
).getParent().getValue();<z>
parentValue) {<z>
(parentValue < grandParentValue) {<z>
(newChild);<z>
else {<z>
= rebalanceRL(newChild);<z>
else {<z>
grandParentValue) {<z>
;<z>
else {<z>
);<z>
Vertex.RED) {<z>
Vertex.BLACK);<z>
) {<z>
;<z>
{<z>
).position() - 8;<z>
consumed;<z>
MESSAGE_WINDOW_OPEN);<z>
ByteBuffer buffer = pooled.getResource();<z>
(consumed);<z>
;<z>
getRemoteConnection().send(pooled);<z>
boolean resetSpan) {<z>
= -1;<z>
= -1;<z>
1;<z>
{<z>
plot.timeVariableAxisMinValue;<z>
} else {<z>
XYAxis axis;<z>
(plot.axisOrientation == AxisOrientationSetting.X_AXIS_AS_TIME) {<z>
getXAxis();<z>
{<z>
;<z>
));<z>
: "Miscaclulated desired span to be " + desiredSpan;<z>
.timeAxisSubsequentSetting == TimeAxisSubsequentBoundsSetting.JUMP) {<z>
plot.plotAbstraction.getCurrentMCTTime();<z>
;<z>
timeAxisSubsequentSetting == TimeAxisSubsequentBoundsSetting.SCRUNCH) {<z>
requestMinTime = plot.timeVariableAxisMinValue;<z>
.getCurrentMCTTime();<z>
} else {<z>
assert false : "Unknown time axis subsquent settings mode: " + plot.timeAxisSubsequentSetting;<z>
.timeVariableAxisMaxValue;<z>
= plot.timeVariableAxisMinValue;<z>
requestMaxTime);<z>
KnowledgeRuntimeLogger newFileLogger(KnowledgeRuntimeEventManager session,<z>
String fileName) {<z>
().newFileLogger( session,<z>
);<z>
setNodeList(<z>
EsdbgProtos.NodeInfo.Builder builderForValue) {<z>
{<z>
ensureNodeListIsMutable();<z>
());<z>
();<z>
else {<z>
;<z>
this;<z>
visitLabel( LabelHandle handle )<z>
new LabelItemDesign( );<z>
, handle );<z>
String text = handle.getText( );<z>
getTextKey( );<z>
( textKey, text );<z>
( );<z>
( action != null )<z>
);<z>
);<z>
labelItem );<z>
SNode node) {<z>
, node, "(");<z>
);<z>
.apply(editorCell);<z>
("");<z>
return editorCell;<z>
execute(ExecutionEvent event) throws ExecutionException {<z>
event);<z>
View) {<z>
View) part;<z>
= view.getCommonViewer();<z>
.doCommonViewerFilter(viewer);<z>
;<z>
() {<z>
getClass().getName();<z>
double[] components = getValueComponents();<z>
numComponents = components.length;<z>
= new StringBuffer();<z>
;<z>
;<z>
());<z>
;<z>
i++) {<z>
);<z>
repr.append(",");<z>
< numComponents; i++) {<z>
(incomingControlComponents[i]);<z>
",");<z>
) {<z>
outgoingControlComponents[i]);<z>
.append(",");<z>
outgoingControlComponents[numComponents - 1]);<z>
"]");<z>
);<z>
public boolean isAnyFaceletsVariableResolved()<z>
(_trackResolveVariables)<z>
)<z>
;<z>
(_targetBase != null)<z>
);<z>
return true;<z>
;<z>
evaluateIfTreeEmpty(Object input) {<z>
input);<z>
) {<z>
null) {<z>
i++) {<z>
ViewerFilter) fFilters.get(i);<z>
, elements);<z>
elements.length == 0;<z>
{<z>
.split("\\.");<z>
providerParts = _innermostProvider.split("\\.");<z>
"";<z>
0;<z>
{<z>
equals(dependentParts[i]))<z>
;<z>
;<z>
+ dependentParts[i];<z>
+ providerParts[i];<z>
outermostProvider);<z>
calculateTextPositions() {<z>
= getTextToDraw(-2);<z>
getTextToDraw(-1);<z>
;<z>
);<z>
);<z>
void rule__CSSRuleBracket__Group__0__Impl() throws RecognitionException {<z>
= keepStackSize();<z>
backtracking==0 ) {<z>
.getCSSRuleBracketAccess().getCSSRuleBracketAction_0());<z>
{<z>
);<z>
stackSize);<z>
(Type type)<z>
;<z>
baseType.getRawClass();<z>
isPrimitive())<z>
"'{0}' is an invalid @NormalScope bean because it's a Java primitive.",<z>
baseType));<z>
(rawType.isArray())<z>
(L.l("'{0}' is an invalid @NormalScope bean because it's a Java array.",<z>
;<z>
doObjectAction(JEditorPane editor, Element elem) {<z>
= getView(editor, elem);<z>
(view != null && view instanceof ObjectView) {<z>
;<z>
instanceof Accessible) {<z>
();<z>
{<z>
.getAccessibleAction();<z>
(aa != null) {<z>
;<z>
protected void initializeLayout( )<z>
layout = new GlimpseLayoutManagerMig( );<z>
;<z>
createSubmittedImageUrl(String value) {<z>
_SubmittedImageUrl_QNAME, String.class, null,<z>
);<z>
{<z>
();<z>
ret = false;<z>
(dataset);<z>
ret && iname != null)<z>
);<z>
{<z>
(<z>
),<z>
e);<z>
ret;<z>
String bits,<z>
, String file, String func,<z>
tid) {<z>
;<z>
(bpid);<z>
;<z>
addArgument(isHardware);<z>
);<z>
(func);<z>
expression);<z>
addArgument(ignoreCount);<z>
(tid);<z>
)<z>
= 0;<z>
length; i++)<z>
i] == null)<z>
=<z>
).elementAt(i);<z>
)))<z>
;<z>
++;<z>
return numTypes;<z>
) {<z>
.debug("Entering AdapterMpiImpl.findCandidates");<z>
null;<z>
context != null)) {<z>
);<z>
{<z>
;<z>
);<z>
(findCandidatesRequest, assertion);<z>
("Exiting AdapterMpiImpl.query - secured");<z>
;<z>
QSequenceLineSimplifier simplifier) {<z>
from = from;<z>
.contentBytes = contentBytes;<z>
.simplify(contentBytes);<z>
)<z>
);<z>
+ " " ) );<z>
;<z>
);<z>
;<z>
, Date startDate, Date endDate,<z>
String branch, String datePattern )<z>
();<z>
limparAtributos() {<z>
idSms = 0;<z>
= "";<z>
descricaoMensagem = "";<z>
.dtInicioValidade = null;<z>
dtTerminoValidade = null;<z>
loadFromFilename(String file) {<z>
index = new Index<String>();<z>
null;<z>
new FileReader(file));<z>
{<z>
;<z>
) {<z>
1));<z>
();<z>
{<z>
;<z>
} finally {<z>
null) {<z>
;<z>
IOException ioe) {<z>
;<z>
(Color color, float extraLeft, float extraBottom,<z>
float extraRight, float extraTop) {<z>
BACKGROUND, new Object[] { color,<z>
extraRight, extraTop } });<z>
static private UserRecord getUserRecord(Card card) {<z>
getUserTemplate(card.getInstanceId());<z>
card.getUserId()));<z>
= card.readUserRecord();<z>
user;<z>
} catch (Exception e) {<z>
return null;<z>
, final TypeCheckingContext typeCheckingContext) {<z>
result = null;<z>
SNode>();<z>
;<z>
SNode quotedNode_2 = null;<z>
null;<z>
= null;<z>
;<z>
);<z>
quotedNode_1;<z>
), false);<z>
quotedNode1_7 = quotedNode_2;<z>
;<z>
"argument", quotedNode1_7);<z>
false);<z>
quotedNode1_8 = quotedNode_3;<z>
.fromString("~Enum")));<z>
, quotedNode1_8);<z>
);<z>
;<z>
("~String")));<z>
, quotedNode1_9);<z>
(SNode) parameter_11;<z>
SNode quotedNode1_10;<z>
(_parameterValues_129834374.contains(quotedNode_5)) {<z>
(quotedNode_5, typeCheckingContext);<z>
{<z>
;<z>
quotedNode1_10 = quotedNode_5;<z>
(quotedNode1_10 != null) {<z>
);<z>
= quotedNode1_6;<z>
;<z>
(WellSample wellSample) {<z>
wellSample == null) {<z>
);<z>
wellSample);<z>
) throws Exception {<z>
new Document();<z>
);<z>
("jcr:data").getStream() ;<z>
;<z>
) {<z>
(LOG.isWarnEnabled()) {<z>
ex);<z>
catch (PDFSecurityException ex) {<z>
(LOG.isWarnEnabled()) {<z>
;<z>
ex) {<z>
)) {<z>
.warn("Error file not found " + ex);<z>
catch (IOException ex) {<z>
)) {<z>
"Error handling PDF document " + ex);<z>
.getPageImage(0, GraphicsRenderingHints.SCREEN,<z>
0.0f, 1.0f);<z>
dispose();<z>
return image;<z>
s, AffineTransform at) {<z>
{<z>
p2d = (Path2D) s;<z>
windingRule);<z>
= p2d.numTypes;<z>
.copyOf(p2d.pointTypes,<z>
p2d.pointTypes.length);<z>
.numCoords;<z>
;<z>
{<z>
s.getPathIterator(at);<z>
;<z>
.pointTypes = new byte[INIT_SIZE];<z>
2];<z>
;<z>
,<z>
> columnNames) {<z>
editable = getEditableColumnIndexes(typeDefinition, cols);<z>
size()]);<z>
)]);<z>
ed = new boolean[names.length];<z>
{<z>
ed[i] = true;<z>
headers, ed);<z>
Book getByIsbn(Long isbn) {<z>
)<z>
, isbn)<z>
(1)<z>
();<z>
catch (NoResultException e) {<z>
null;<z>
srcEnd, char destStart) {<z>
= srcStart;<z>
= srcEnd;<z>
= destStart;<z>
setScale(double scale) {<z>
;<z>
= scale;<z>
revalidate();<z>
;<z>
public void re00537() {<z>
new XQuery(<z>
ctx);<z>
res = result(query);<z>
result = res;<z>
assertBoolean(true)<z>
(Collection collection) throws SQLException<z>
int count_native = 0;<z>
int count_import = 0;<z>
();<z>
hasNext())<z>
= iterator.next();<z>
if (item.isOwningCollection(collection))<z>
;<z>
;<z>
null)<z>
);<z>
];<z>
counts[0] = count_native;<z>
= count_import;<z>
return counts;<z>
Date detectBBCDateFromZhContent(String content)<z>
modTime = null;<z>
= null;<z>
);<z>
if (m.find())<z>
(3)));<z>
(Exception e)<z>
;<z>
Object data,<z>
int zoomLevel) {<z>
() != null) {<z>
!= null && cancellable.getCanceled())<z>
.save(tile, zoomLevel,<z>
.getName(), cancellable, data);<z>
String periodStr) {<z>
if (periodStr == null) {<z>
return Days.ZERO;<z>
;<z>
);<z>
private void goToWriteStep() {<z>
mStep = WRITE_STEP;<z>
.getSimpleName()));<z>
.clear();<z>
void init() {<z>
() {<z>
public void rootAdded(SModelRootEvent event) {<z>
();<z>
getModel(node))) {<z>
BootstrapLanguages.generatorParametersLanguage()) {<z>
))) == null)) {<z>
node), "jetbrains.mps.lang.generator.structure.RootTemplateAnnotation", null));<z>
;<z>
private static User getUserFromSession(HttpSession session) {<z>
session == null)<z>
return null;<z>
Object u = session.getAttribute(SESSION_USER_ATTRIBUTE);<z>
(u instanceof User))<z>
return null;<z>
User) u;<z>
CCVertex3D vertex) {<z>
) + pos.y) * 3;<z>
index + 0, vertex.x);<z>
;<z>
(index + 2, vertex.z);<z>
{<z>
HashSet<T>();<z>
()) {<z>
);<z>
casValues = entry.getValue();<z>
: casValues.getExipration();<z>
, casValues.getNewValue(), actualExpiration);<z>
if (stored) {<z>
;<z>
return set;<z>
{<z>
Integer>();<z>
i < args.length; i++) {<z>
);<z>
}<z>
result;<z>
printHeader(Writer writer) {<z>
write(header.toString());<z>
) {<z>
(e);<z>
rule__XFeatureCall__Group__5__Impl() throws RecognitionException {<z>
= keepStackSize();<z>
{<z>
.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_5());<z>
int alt147=2;<z>
);<z>
(alt147) {<z>
case 1 :<z>
pushFollow(FOLLOW_rule__XFeatureCall__FeatureCallArgumentsAssignment_5_in_rule__XFeatureCall__Group__5__Impl37188);<z>
;<z>
._fsp--;<z>
if (state.failed) return ;<z>
0 ) {<z>
.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_5());<z>
RecognitionException re) {<z>
);<z>
;<z>
(stackSize);<z>
portlet.mobiledevicerules.model.MDRRule addRule(<z>
,<z>
String> nameMap,<z>
Locale, java.lang.String> descriptionMap,<z>
type,<z>
kernel.util.UnicodeProperties typeSettings,<z>
)<z>
.kernel.exception.PortalException,<z>
liferay.portal.kernel.exception.SystemException {<z>
return getService()<z>
, type,<z>
typeSettings, serviceContext);<z>
RecognitionException {<z>
(1);<z>
location(666,9);<z>
if (state.failed) return ;<z>
,16);<z>
(FOLLOW_constantExpression_in_synpred180_Java3800);<z>
constantExpression();<z>
--;<z>
failed) return ;<z>
location(666,35);<z>
state.failed) return ;<z>
(BindAsHostPrefix bindAsHostPrefix,<z>
(PROPERTY_S3_VIRTUAL_HOST_BUCKETS) boolean isVhostStyle,<z>
Named(PROPERTY_S3_SERVICE_PATH) String servicePath) {<z>
.bindAsHostPrefix = bindAsHostPrefix;<z>
isVhostStyle = isVhostStyle;<z>
servicePath = servicePath;<z>
Node newChild)<z>
;<z>
(newChild);<z>
void setOverflow(Overflow newOverflow) {<z>
Overflow oldOverflow = overflow;<z>
== null ? OVERFLOW_EDEFAULT : newOverflow;<z>
())<z>
);<z>
, Command command) {<z>
);<z>
= (GraphicalEditPart)createConnectionViewRequest.getSourceEditPart();<z>
;<z>
();<z>
= sourceEditPart.getDiagramPreferencesHint();<z>
).getSemanticHint();<z>
);<z>
.getTargetEditPart().getModel();<z>
, targetView);<z>
;<z>
ContainmentCircleViewCreateCommand circleCommand = null;<z>
targetView);<z>
{<z>
;<z>
.getParent().getModel();<z>
else {<z>
;<z>
circleCommand);<z>
null) {<z>
(), createConnectionViewRequest.getLocation());<z>
compoundCommand.add(setBoundsCommand);<z>
, preferencesHint, viewDescriptor, circleCommand);<z>
.add(dashedLineCmd);<z>
compoundCommand);<z>
= new Ignore.Strategy() {<z>
()<z>
return "SVN Ignore";<z>
String getIgnoresCaption()<z>
;<z>
()<z>
"svn_ignore_help";<z>
public Filter getFilter()<z>
return null;<z>
String path,<z>
<ProcessResult> requestCallback)<z>
requestCallback);<z>
path, String ignores,<z>
<ProcessResult> requestCallback)<z>
ignores, requestCallback);<z>
packageName, String level) {<z>
getLog(packageName);<z>
{<z>
;<z>
.getName());<z>
Log4JLogger) {<z>
).getLogger(), level);<z>
;<z>
if(logger instanceof Jdk14Logger) {<z>
;<z>
;<z>
return false;<z>
String tempFile) {<z>
, false, false);<z>
)) {<z>
);<z>
);<z>
);<z>
, tempFile);<z>
.Media.DESCRIPTION, tempFile);<z>
);<z>
IMAGE_TMP)) {<z>
);<z>
.putExtra(MediaStore.EXTRA_OUTPUT, mediaCaptureUri);<z>
FROM_MEDIA_CAPTURE);<z>
saveTileToFile(byte[] rawData) {<z>
.getXtile()<z>
().getTileType());<z>
;<z>
;<z>
e) {<z>
"Failed to save tile content: " + e.getLocalizedMessage());<z>
void setRequired(boolean required)<z>
this.required = required;<z>
if (required) {<z>
EditorUtil.MANDATORY_SYMBOL);<z>
setForeground(UIUtilities.REQUIRED_FIELDS_COLOR);<z>
.setToolTipText(label.getToolTipText());<z>
TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {<z>
SNode _nodeToCheck_1029348928467 = conceptReference;<z>
);<z>
false), typeCheckingContext), _info_12389875345);<z>
Collection<AssociationDefinitionModel> newAssocDefs, ClientState clientState,<z>
directives) {<z>
: newAssocDefs) {<z>
.update(assocDef, clientState, directives);<z>
(final String output) {<z>
= getXMLDocument(output);<z>
lock();<z>
xmlDocument = document;<z>
();<z>
document == null) {<z>
return false;<z>
getChildNode(document, "vms");<z>
"md5");<z>
getVMInfoMD5())) {<z>
;<z>
setVMInfoMD5(md5);<z>
);<z>
.getLength(); i++) {<z>
item(i);<z>
node.getNodeName())) {<z>
node);<z>
)) {<z>
node);<z>
))) {<z>
(getText(node));<z>
return true;<z>
{<z>
) {<z>
, mapRepositoryFile);<z>
);<z>
reduceTrans, reduceRepositoryReference, reduceRepositoryDir, reduceRepositoryFile);<z>
return null;<z>
createTable() {<z>
clientManager<z>
;<z>
KeySchemaElement().withAttributeName(<z>
N);<z>
KeySchema().withHashKeyElement(kse);<z>
new ProvisionedThroughput()<z>
);<z>
= new CreateTableRequest()<z>
).getTestTableName())<z>
(pt);<z>
.createTable(request);<z>
catch (AmazonServiceException ex) {<z>
UserPreferenceDemoActivity.clientManager<z>
.wipeCredentialsOnAuthError(ex);<z>
Object msg)<z>
Frame : "Expecting frame, got " + msg;<z>
msg;<z>
.body);<z>
frame.header.streamId);<z>
)<z>
attach(frame.connection);<z>
return message;<z>
(DataInput dataIn) throws IOException {<z>
ArrayList<JobLocation>();<z>
);<z>
++) {<z>
JobLocation();<z>
.readExternal(dataIn);<z>
.add(jobLocation);<z>
;<z>
session , Destination destination ,<z>
jmsSpec11) throws JMSException {<z>
(jmsSpec11) {<z>
session.createProducer(destination);<z>
else {<z>
.createSender((Queue)destination);<z>
void createPartControl( Composite parent ) {<z>
SOComposite(parent, SWT.NONE);<z>
composite.setLayout( new FillLayout());<z>
;<z>
;<z>
>[] getData() {<z>
res = new Map[vBucketMap.length];<z>
i < vBucketMap.length; i++) {<z>
());<z>
res;<z>
createActivity()<z>
return;<z>
= getRegistry();<z>
reg.getTaskBar().getFrame();<z>
activityDialog = new DownloadsDialog(f,<z>
.ACTIVITY);<z>
public TreeViewImpl() {<z>
tree.setSize("100%", "100%");<z>
tree.addItem(new TreeElement());<z>
tree);<z>
TreePresenter(this);<z>
() throws RecognitionException {<z>
;<z>
.backtracking==0 ) {<z>
);<z>
(FollowSets000.FOLLOW_rule__LetExpCS__InAssignment_4_in_rule__LetExpCS__Group__4__Impl16447);<z>
rule__LetExpCS__InAssignment_4();<z>
._fsp--;<z>
return ;<z>
0 ) {<z>
.getLetExpCSAccess().getInAssignment_4());<z>
re) {<z>
);<z>
input,re);<z>
stackSize);<z>
(int configurationState, int dataChannelState,<z>
notificationChannelState) {<z>
CONFIGURATION_STATE_OK) {<z>
) {<z>
(notificationChannelState == NOTIFICATION_CHANNEL_STATE_OK) {<z>
;<z>
} else if (notificationChannelState == NOTIFICATION_CHANNEL_STATE_MESSAGE_WAITING) {<z>
;<z>
NOTIFICATION_CHANNEL_STATE_NO_CONNECTION) {<z>
.NO_NOTIFICATIONS;<z>
} else if (dataChannelState == DATA_CHANNEL_STATE_NO_CONNECTION) {<z>
if (notificationChannelState == NOTIFICATION_CHANNEL_STATE_OK) {<z>
.NO_DATA;<z>
) {<z>
return OverallState.MESSAGE_WAITING;<z>
} else if (notificationChannelState == NOTIFICATION_CHANNEL_STATE_NO_CONNECTION) {<z>
return OverallState.NO_CONNECTION;<z>
) {<z>
;<z>
{<z>
OverallState.NOT_CONFIGURED;<z>
INVALID;<z>
) throws IOException {<z>
= hdfs.open(inputPath);<z>
InputStream inputFile;<z>
] = new byte[4096];<z>
.endsWith(LocalStore.COMPRESSION_SUFFIX)) {<z>
);<z>
inputFile).getNextEntry();<z>
} else {<z>
;<z>
= 0;<z>
)) > 0) {<z>
, bytesRead);<z>
) {<z>
toString());<z>
} finally {<z>
.close();<z>
(Integer vlanId) throws PersistenceException<z>
getSessionFactory().getCurrentSession();<z>
GET_ENTERPRISE_FROM_VLAN_ID);<z>
, vlanId);<z>
);<z>
HibernateException he)<z>
getMessage());<z>
boolean changed ) {<z>
;<z>
0, 0 );<z>
new Point( 0, 0 );<z>
getItems();<z>
++ ) {<z>
);<z>
itemsSize.x += thisItemBounds.width;<z>
itemsSize.y, thisItemBounds.height );<z>
.getControl();<z>
control != null ) {<z>
.DEFAULT );<z>
);<z>
);<z>
x, contentsSize.x );<z>
.y + contentsSize.y;<z>
== 0 ) {<z>
;<z>
height == 0 ) {<z>
;<z>
( wHint != SWT.DEFAULT ) {<z>
wHint;<z>
( hHint != SWT.DEFAULT ) {<z>
height = hHint;<z>
getBorderWidth();<z>
;<z>
2 * border;<z>
height );<z>
{<z>
= new ModelService();<z>
"name")).intern();<z>
resourceLocation;<z>
intern();<z>
.intern();<z>
).intern();<z>
("semaphore")).intern();<z>
).intern();<z>
;<z>
equalsIgnoreCase(serviceElement.getAttribute("auth"));<z>
equalsIgnoreCase(serviceElement.getAttribute("export"));<z>
.getAttribute("debug"));<z>
getAttribute("validate"));<z>
("use-transaction"));<z>
);<z>
));<z>
));<z>
int semaphoreWait = 300;<z>
.isEmpty(semaphoreWaitStr)) {<z>
= Integer.parseInt(semaphoreWaitStr);<z>
) {<z>
);<z>
= 300;<z>
.semaphoreWait = semaphoreWait;<z>
);<z>
int semaphoreSleep = 500;<z>
semaphoreSleepStr)) {<z>
.parseInt(semaphoreSleepStr);<z>
(NumberFormatException e) {<z>
, module);<z>
= 500;<z>
.semaphoreSleep = semaphoreSleep;<z>
getAttribute("max-retry"));<z>
1;<z>
) {<z>
= Integer.parseInt(maxRetryStr);<z>
} catch (NumberFormatException e) {<z>
, "Setting maxRetry to -1 (default)", module);<z>
maxRetry = -1;<z>
;<z>
;<z>
;<z>
isEmpty(timeoutStr)) {<z>
timeout = Integer.parseInt(timeoutStr);<z>
) {<z>
logWarning(e, "Setting timeout to 0 (default)", module);<z>
0;<z>
;<z>
= getCDATADef(serviceElement, "description");<z>
;<z>
service.contextInfo = FastMap.newInstance();<z>
createNotification(serviceElement, service);<z>
;<z>
this.createPermGroups(serviceElement, service);<z>
;<z>
);<z>
this.createAutoAttrDefs(serviceElement, service);<z>
createAttrDefs(serviceElement, service);<z>
(serviceElement, service);<z>
serviceElement, "metric");<z>
null) {<z>
getInstance(metricsElement);<z>
;<z>
protected void doStop() {<z>
);<z>
InterruptedException e) {<z>
throw new IllegalStateException(e);<z>
{<z>
;<z>
String[] hosts, boolean ack) {<z>
file;<z>
;<z>
= ack;<z>
= new Socket[hosts.length];<z>
hosts.length];<z>
(ack) {<z>
;<z>
];<z>
pageSize];<z>
nHosts = 0;<z>
{<z>
;<z>
void addMemberPropertyDescriptor(Object object) {<z>
itemPropertyDescriptors.add(createItemPropertyDescriptor(<z>
getResourceLocator(),<z>
),<z>
,<z>
);<z>
) {<z>
;<z>
xsp = jj_scanpos;<z>
(jj_scan_token(6)) {<z>
= xsp;<z>
)) {<z>
xsp;<z>
return true;<z>
return false;<z>
final AbstractTextNode text) {<z>
;<z>
javascriptContent =<z>
(content, arguments);<z>
.setContent(javascriptContent);<z>
(Notes notes) {<z>
_notes = notes;<z>
getSlideRecord().getSlideAtom();<z>
) {<z>
(0);<z>
else {<z>
notes._getSheetNumber());<z>
() {<z>
path) {<z>
endsWith(CONF_FILE_NAME_SUFFIX);<z>
String status, Object value){<z>
if (messagingService != null) {<z>
new HashMap<String, String>();<z>
));<z>
("messageId", MessagingConstants.USER_STATUS_CHANGE_EVENT);<z>
p.getInternalUserID());<z>
("status", status);<z>
("value", value.toString());<z>
Gson gson= new Gson();<z>
(map));<z>
this.room.getName());<z>
public boolean equals(Object obj) {<z>
(obj instanceof StaticFieldImport){<z>
;<z>
) &&<z>
other.getField()) &&<z>
)));<z>
return false;<z>
read(IPreferenceStore store, String prefsKey)<z>
, ?>>();<z>
new char[] { DELIMITER }));<z>
(st.hasMoreTokens())<z>
)));<z>
HashMap[maps.size()]);<z>
Writer output) {<z>
;<z>
new PrintWriter(System.out));<z>
FILENAME_PREFIX + fileName);<z>
(IOException e) {<z>
);<z>
public void selectSelectRecords()<z>
.setSelectedIndex(0);<z>
;<z>
{<z>
keepStackSize();<z>
);<z>
;<z>
.getFeatureGroupConnectionAccess().getColonKeyword_0_0_0_1());<z>
catch (RecognitionException re) {<z>
re);<z>
re);<z>
(stackSize);<z>
profile){<z>
);<z>
pathAttr != null){<z>
String pathValue = pathAttr.getAttributeValue();<z>
(pathValue);<z>
OMElement streamElement = profile.getFirstChildWithName(<z>
, "streamConfig"));<z>
{<z>
processStreamConfiguration(streamElement);<z>
else {<z>
= "The 'streamConfig' element is not specified";<z>
msg);<z>
{<z>
String msg = "The 'name' attribute of Profile is not specified";<z>
;<z>
static CoordinateReferenceSystem getDefaultCRS() {<z>
getPreferenceStore();<z>
store.getInt(PreferenceConstants.P_DEFAULT_CRS);<z>
return CRS.decode("EPSG:4326");<z>
+ i);<z>
} catch (FactoryException e) {<z>
.BAD_DEFAULT;<z>
data) throws DataDecodeException {<z>
format = getNumberFormat();<z>
{<z>
.parse(data.trim());<z>
if(number instanceof BigInteger) {<z>
;<z>
number instanceof BigDecimal) {<z>
(BigDecimal) number).toBigInteger();<z>
)));<z>
{<z>
format + ".", e);<z>
else {<z>
(data.trim());<z>
NumberFormatException e) {<z>
);<z>
newCertAndPrivateKey(final int daysOfValidity, final String password)<z>
= userDocUtils.getCurrentUser();<z>
= userDocUtils.getUserDocURL(userName);<z>
, password, passwordCryptoService);<z>
(String referer, String ipaClassifier, String otaClassifier)<z>
);<z>
) - 6) {<z>
;<z>
(otaClassifier)) {<z>
isEmpty(ipaClassifier)) {<z>
+ otaClassifier, "-" + ipaClassifier);<z>
+ otaClassifier, "");<z>
)) {<z>
".ipa";<z>
new URL(ipaUrl);<z>
);<z>
{<z>
{<z>
openConfirm(<z>
getShell(),<z>
InstallUpdateAction_confirm_save_title,<z>
UpdateJobMessages.InstallUpdateAction_confirm_save_msg)) {<z>
(false)) {<z>
openError(<z>
,<z>
.InstallUpdateAction_errorTitle,<z>
;<z>
applyUpdate();<z>
;<z>
catch (Throwable th) {<z>
.logError(th);<z>
(<z>
,<z>
.InstallUpdateAction_errorTitle,<z>
)));<z>
() {<z>
;<z>
.createAndBindUi(this));<z>
, final TableCellSWT cell) {<z>
();<z>
= null;<z>
);<z>
iconID != null) {<z>
();<z>
)) {<z>
(iconID,<z>
new ImageDownloaderListener() {<z>
void imageDownloaded(Image image,<z>
{<z>
returnedImmediately) {<z>
();<z>
;<z>
) {<z>
} else {<z>
;<z>
ImageLoader.isRealImage(imgIcon)) {<z>
);<z>
);<z>
.x<z>
, cellBounds.y<z>
/ 2));<z>
);<z>
{<z>
FINDER_CLASS_NAME_LIST_WITH_PAGINATION);<z>
clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);<z>
) {<z>
(MBMailingListModelImpl.ENTITY_CACHE_ENABLED,<z>
());<z>
(mbMailingList);<z>
RecognitionException {<z>
();<z>
getAdditiveExpressionAccess().getRightAssignment_1_2());<z>
(FOLLOW_rule__AdditiveExpression__RightAssignment_1_2_in_rule__AdditiveExpression__Group_1__2__Impl17812);<z>
rule__AdditiveExpression__RightAssignment_1_2();<z>
--;<z>
());<z>
catch (RecognitionException re) {<z>
);<z>
);<z>
restoreStackSize(stackSize);<z>
private boolean isNextLineValueLine (final ReaderHelper reader) throws IOException<z>
.hasNext() == false)<z>
return false;<z>
);<z>
== null)<z>
;<z>
)<z>
reader.pushBack(firstLine);<z>
;<z>
.pushBack(firstLine);<z>
return true;<z>
String getPlatformBititude() {<z>
(DartCore.is32Bit()) {<z>
;<z>
} else {<z>
;<z>
String extensionId) {<z>
hasNext();) {<z>
.next();<z>
;<z>
).equals(extensionId))<z>
extensionDelta;<z>
null;<z>
(String id) throws IllegalIDException, BioException {<z>
(Index) idToIndex.get(id);<z>
) {<z>
id + "'");<z>
;<z>
Class superclass, Vector vinterfaces, String className,<z>
) {<z>
;<z>
vinterfaces.size(); i++) {<z>
(i);<z>
;<z>
;<z>
PyObject mn = dict.__finditem__("__module__");<z>
== null) {<z>
"foo";<z>
} else {<z>
class);<z>
pythonModuleName, fullProxyName, dict);<z>
jm.build();<z>
bytes = new ByteArrayOutputStream();<z>
classfile.write(bytes);<z>
(fullProxyName, bytes);<z>
);<z>
) {<z>
);<z>
threads) throws CollectionException, UIMAException, IOException {<z>
) : null;<z>
;<z>
{<z>
(typeSystem);<z>
());<z>
if (threaded) {<z>
, arguments.isSerializeOutputPath());<z>
;<z>
} else {<z>
;<z>
pathToOutputFile)) : null;<z>
.write(output);<z>
{<z>
;<z>
bb) {<z>
= null;<z>
timeIdxBytePos ) return( null );<z>
MCepDatagram(bb, order );<z>
IOException e ) {<z>
return null;<z>
( d );<z>
toHumanReadableString(final Object object) {<z>
StringBuilder();<z>
) {<z>
== 0) {<z>
append(' ');<z>
);<z>
sb.toString();<z>
container,<z>
savedInstanceState) {<z>
.fragment_dashboard, container);<z>
setOnClickListener(new View.OnClickListener() {<z>
view) {<z>
;<z>
, ScheduleActivity.class));<z>
);<z>
OnClickListener() {<z>
public void onClick(View view) {<z>
("Sessions");<z>
);<z>
Sessions.CONTENT_URI);<z>
startActivity(intent2);<z>
);<z>
OnClickListener() {<z>
View view) {<z>
);<z>
, StarredActivity.class));<z>
;<z>
.setOnClickListener(new View.OnClickListener() {<z>
(View view) {<z>
"Speakers");<z>
Intent intent = new Intent(Intent.ACTION_VIEW,<z>
ScheduleContract.Speakers.CONTENT_URI);<z>
(intent);<z>
;<z>
.setOnClickListener(new View.OnClickListener() {<z>
) {<z>
fireTrackerEvent("Map");<z>
(), MapActivity.class));<z>
);<z>
{<z>
) {<z>
);<z>
getActivity(), TwitterActivity.class));<z>
});<z>
return root;<z>
InputStream inputStream ) throws DataException<z>
context.getBundleVersion( );<z>
, version, bundleVersion );<z>
);<z>
catch ( IOException e )<z>
;<z>
RemoteViews views, ArretFavori favori, Calendar calendar) {<z>
);<z>
"-> " + favori.direction);<z>
getIconeResource(favori.nomCourt));<z>
class);<z>
);<z>
, PendingIntent.FLAG_UPDATE_CURRENT);<z>
.id.widgetlayout, pendingIntent);<z>
Calendar.MINUTE);<z>
4);<z>
<DetailArretConteneur> prochainsDeparts;<z>
Calendar.MINUTE, 1);<z>
, calendar);<z>
).getHoraire() < now);<z>
("Prochains departs : " + prochainsDeparts);<z>
() > 0) {<z>
);<z>
) {<z>
* 60;<z>
heureProchain);<z>
LOG_YBO.debug("now : " + now);<z>
(now - heureProchain) < 30) {<z>
;<z>
} else {<z>
.color.blanc));<z>
views.setTextViewText(R.id.tempsRestant,<z>
;<z>
} else {<z>
tempsRestant, "");<z>
views.setTextViewText(<z>
id.tempsRestantFutur,<z>
()));<z>
) {<z>
, CCustomizations customizations) {<z>
decl.getLocation(), customizations);<z>
.getExistingClassRef();<z>
fullyQualifiedClassName!=null;<z>
hof049() {<z>
query = new XQuery(<z>
);<z>
;<z>
res;<z>
assertSerialization("<out>false true</out>", false)<z>
public void postToSentBox(String messagesFrom, String messagesBody,<z>
messageId, String messageDate) {<z>
"postToOutbox(): post failed messages to outbox");<z>
.put("messagesFrom", messagesFrom);<z>
);<z>
("messagesDate", messageDate);<z>
.put("messagesId", messageId);<z>
processSentMessages(context);<z>
statusIntent.putExtra("sentstatus", status);<z>
;<z>
() {<z>
clear();<z>
(-1);<z>
) throws RecognitionException {<z>
();<z>
getFGTRenameAccess().getNameIDTerminalRuleCall_0_0());<z>
,RULE_ID,FollowSets010.FOLLOW_RULE_ID_in_rule__FGTRename__NameAssignment_0231318);<z>
;<z>
) {<z>
;<z>
(input,re);<z>
);<z>
s) throws LoadException {<z>
)) {<z>
scan = new Scanner(s);<z>
throw new Exception();<z>
);<z>
());<z>
));<z>
;<z>
)) throw new Exception();<z>
.points(scan.nextInt());<z>
));<z>
;<z>
.points(scan.nextInt());<z>
.nextInt());<z>
();<z>
Exception();<z>
moves.removeAll();<z>
scan.next())<z>
;<z>
name = scan.nextLine();<z>
);<z>
p;<z>
t) {<z>
;<z>
null;<z>
void acceleration(BodyScoped bi){<z>
.mass;<z>
[2]/bi.mass;<z>
jj_3R_95() {<z>
xsp;<z>
= jj_scanpos;<z>
{<z>
jj_scanpos = xsp;<z>
;<z>
false;<z>
) {<z>
false;<z>
keyTable = map.keyTable;<z>
stashSize; ++nextIndex < n;) {<z>
) {<z>
;<z>
, boolean fixedSize) {<z>
fixedSize);<z>
getPixel(ThumbSize.SMALL, fixedSize);<z>
posterHeight = posterWidth;<z>
, 0, posterWidth, posterHeight);<z>
int hKey, byte[] subKey,<z>
int securityMask) {<z>
subKey, securityMask);<z>
) {<z>
result;<z>
== ERROR_FILE_NOT_FOUND) {<z>
logger().warning("Trying to recreate Windows registry node " +<z>
" at root 0x" +<z>
".");<z>
hKey, subKey)[NATIVE_HANDLE];<z>
handle);<z>
securityMask);<z>
[ERROR_CODE] != ERROR_ACCESS_DENIED) {<z>
= INIT_SLEEP_TIME;<z>
{<z>
.sleep(sleepTime);<z>
(InterruptedException e) {<z>
return result;<z>
2;<z>
= WindowsRegOpenKey(hKey, subKey, securityMask);<z>
(result[ERROR_CODE] == ERROR_SUCCESS) {<z>
return result;<z>
return result;<z>
shipmentDelivered(ShipmentDeliveredEvent event) {<z>
getShipmentId());<z>
;<z>
);<z>
, EObject eImpl, EClass eClass, EAttribute eID)<z>
throws IllegalArgumentException {<z>
;<z>
);<z>
()==0) ) {<z>
replace(ePrefix, "");<z>
Long.decode(sID);<z>
uID==0L) {<z>
= eNextIDMap.get(eURI);<z>
{<z>
= 1L;<z>
else {<z>
(eURI, eImpl, uID);<z>
return eCacheID(eURI,eImpl,uID);<z>
Exception<z>
"ANSI_X3.4-1968" );<z>
"iso-ir-6" );<z>
;<z>
"ISO_646.irv:1991" );<z>
);<z>
;<z>
;<z>
);<z>
;<z>
( "ISO646-US" );<z>
"US-ASCII" );<z>
( "us-ascii" );<z>
;<z>
tryToEncode( "us" );<z>
;<z>
;<z>
"csASCII" );<z>
;<z>
( "UNICODE" );<z>
tryToEncode( "unicode" );<z>
;<z>
( "big5" );<z>
( "bIg5" );<z>
);<z>
"bIG5" );<z>
"Cp1252" );<z>
tryToEncode( "cp1252" );<z>
( "CP1252" );<z>
;<z>
( "Pck" );<z>
) {<z>
.editpolicies.LayoutEditPolicy() {<z>
) {<z>
getModel();<z>
UMLVisualIDRegistry.getVisualID(childView)) {<z>
:<z>
VISUAL_ID:<z>
case ActionInputPinInSendSigActAppliedStereotypeEditPart.VISUAL_ID:<z>
{<z>
) {<z>
));<z>
.setBorder(null);<z>
;<z>
;<z>
{<z>
= new NonResizableEditPolicy();<z>
;<z>
getMoveChildrenCommand(Request request) {<z>
null;<z>
getCreateCommand(CreateRequest request) {<z>
;<z>
return lep;<z>
{<z>
if (hash == 0) {<z>
31;<z>
));<z>
.hashCode();<z>
+ getModuleId().hashCode();<z>
();<z>
hash;<z>
void refreshCustomizations() {<z>
;<z>
{<z>
() {<z>
CustomActionsSchema.getInstance();<z>
);<z>
);<z>
);<z>
move) throws IllegalMoveException<z>
new IllegalMoveException (move);<z>
= Move.getFromSqi(move);<z>
;<z>
= Move.isCapturing(move);<z>
stone = getStone(from);<z>
int colFrom = Chess.NO_COL;<z>
;<z>
ofSquare(from);<z>
&= (~m_bbPawns);<z>
!= 0L) {<z>
{<z>
getFirstSqi(bb2);<z>
);<z>
(tryMove);<z>
()) {<z>
(tryFrom));<z>
;<z>
if (bb != 0L) {<z>
== 0L) {<z>
.sqiToCol(from);<z>
0L) {<z>
);<z>
{<z>
(from);<z>
);<z>
;<z>
.BLACK);<z>
) fireMoveDone(move);<z>
return m;<z>
performAction() {<z>
.getClass());<z>
String title = "Case Properties";<z>
;<z>
title, true);<z>
currentCase = Case.getCurrentCase();<z>
String caseName = currentCase.getName();<z>
getCreatedDate();<z>
currentCase.getCaseDirectory();<z>
= currentCase.getRootObjectsCount();<z>
(currentCase.getSleuthkitCase());<z>
caseDir, imgPaths);<z>
cpf.setOKButtonActionListener(new ActionListener() {<z>
actionPerformed(ActionEvent e) {<z>
dispose();<z>
;<z>
);<z>
pack();<z>
.setResizable(false);<z>
();<z>
getSize().getWidth();<z>
getSize().getHeight();<z>
- h) / 2));<z>
);<z>
{<z>
, "Error displaying Case Properties window.", ex);<z>
( Assembler assembler )<z>
} } } );<z>
public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {<z>
= keepStackSize();<z>
{<z>
getValidIDParserRuleCall_1_1());<z>
(FOLLOW_ruleValidID_in_rule__QualifiedName__Group_1__1__Impl29383);<z>
);<z>
;<z>
) return ;<z>
{<z>
().getValidIDParserRuleCall_1_1());<z>
catch (RecognitionException re) {<z>
(re);<z>
re);<z>
stackSize);<z>
SQLException {<z>
pos < filterSize) {<z>
);<z>
isClosed();<z>
GameContainer container) throws SlickException {<z>
();<z>
world = new ZombieWorld(GAME_STATE);<z>
setWidth(2000);<z>
2000);<z>
;<z>
;<z>
HttpServletRequest request, String param,<z>
Double defaultValue) {<z>
defaultValue;<z>
);<z>
valueString != null) {<z>
("")) {<z>
Double.parseDouble(valueString);<z>
return value;<z>
boolean equals( Object obj ) {<z>
( this == obj ) {<z>
;<z>
if( obj == null ) {<z>
return false;<z>
{<z>
return false;<z>
( Animation )obj;<z>
) {<z>
;<z>
name == null ) {<z>
null ) {<z>
false;<z>
.name ) ) {<z>
return false;<z>
== null ) {<z>
) {<z>
false;<z>
timingFunction ) ) {<z>
return false;<z>
;<z>
rule__RGB__RedAssignment_1_2() throws RecognitionException {<z>
();<z>
.backtracking==0 ) {<z>
().getRedINTTerminalRuleCall_1_2_0());<z>
return ;<z>
backtracking==0 ) {<z>
getRedINTTerminalRuleCall_1_2_0());<z>
) {<z>
);<z>
recover(input,re);<z>
restoreStackSize(stackSize);<z>
) {<z>
(CHAT_LINE_TEXT);<z>
class);<z>
.getWidth(item.getLabel()))<z>
.getWidth());<z>
{<z>
TypeParameterSubstitutor<?> substitutor = createSubstitutor();<z>
= getSuperTypes(substitutor);<z>
(1, superTypes, substitutor, acceptor);<z>
ageingEntitySteps, Set<UserDTO> baseUsers) {<z>
;<z>
canLogin = canLogin;<z>
ageingEntitySteps = ageingEntitySteps;<z>
= baseUsers;<z>
public boolean dependenciesAvailable(TransportParameter[] params) {<z>
forName("quickfix.Application");<z>
true;<z>
(ClassNotFoundException e) {<z>
false;<z>
public static String parseControls(String expressionString,<z>
{<z>
allControlIDs = control.getVisualization()<z>
getAllBControlNames();<z>
compile("(\\w+)");<z>
(expressionString);<z>
()) {<z>
(1);<z>
(controlID.equals("this")) {<z>
.replace(controlID, control<z>
AttributeConstants.ATTRIBUTE_CUSTOM)<z>
;<z>
controlID)) {<z>
(controlID, control<z>
getVisualization().getBControl(controlID)<z>
.getValueOfData());<z>
{<z>
return expressionString;<z>
Object obj) {<z>
== obj)<z>
true;<z>
obj == null)<z>
;<z>
))<z>
;<z>
other = (SkuImpl) obj;<z>
.id != null) {<z>
id.equals(other.id);<z>
(getName() == null) {<z>
(other.getName() != null)<z>
return false;<z>
.getName()))<z>
;<z>
return true;<z>
(int arg1, double arg2) {<z>
a, b, c, d;<z>
e, f;<z>
= 0;<z>
= 0;<z>
0;<z>
(a + b);<z>
c - 1;<z>
(int) arg2;<z>
;<z>
arg1);<z>
+ b) * (c + d);<z>
))));<z>
;<z>
) (arg2);<z>
);<z>
"this is a really, really long string that should be truncated.");<z>
+ a + b + d);<z>
> imageIn,<z>
<T>> oobFactory)<z>
sizeToPath(size), oobFactory);<z>
findInstance() {<z>
getDefault().findTopComponent(PREFERRED_ID);<z>
null) {<z>
();<z>
{<z>
(IngestMessageTopComponent) win;<z>
return getDefault();<z>
(int keyCode) {<z>
kca = getKeyCodeArray();<z>
);<z>
int i;<z>
;i<count;i++) {<z>
) == keyCode) {<z>
-1, i);<z>
isValid(){<z>
SmartUtil.isBlankObject(this.commHeader)<z>
SmartUtil.isBlankObject(this.eventId))<z>
return true;<z>
;<z>
, ViewGroup parent) {<z>
View view = convertView;<z>
ViewHolder holder;<z>
null) {<z>
LAYOUT_INFLATER_SERVICE);<z>
, null);<z>
ViewHolder();<z>
;<z>
setTag(holder);<z>
ViewHolder) view.getTag();<z>
= getItem(position);<z>
.name);<z>
return view;<z>
initializeDialog(ProductInfoPage page, String title,<z>
helpContextId) {<z>
this.page = page;<z>
.title = title;<z>
this.helpContextId = helpContextId;<z>
void disableAdminUser(UUID userId) throws Exception {<z>
;<z>
User.ENTITY_TYPE, userId),<z>
true);<z>
revokeAccessTokensForAdminUser(userId);<z>
static void initializeTable(JTable statsTable)<z>
);<z>
tableHeader.setResizingAllowed(false);<z>
tableHeader.setReorderingAllowed(false);<z>
);<z>
new DefaultTableColumnModel();<z>
" Ability ";<z>
);<z>
;<z>
FixedHeaderCellRenderer(htmlText), false);<z>
renderer = new ModRenderer();<z>
column.setCellRenderer(new ValueRenderer());<z>
;<z>
;<z>
.createTableColumn(ABILITY_MOD, htmlText,<z>
(htmlText), false);<z>
.setCellRenderer(renderer);<z>
(column);<z>
"<html><p align=\"center\"><b>Editable<br>Score</b></p></html>";<z>
, new FixedHeaderCellRenderer(htmlText), false);<z>
"EDITABLE");<z>
);<z>
;<z>
htmlText), false);<z>
;<z>
columnModel.addColumn(column);<z>
"<html><p align=\"center\"><b>Misc<br>Adj</b></p></html>";<z>
htmlText), false);<z>
setCellRenderer(renderer);<z>
columnModel.addColumn(column);<z>
(columnModel);<z>
statsTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);<z>
);<z>
;<z>
false);<z>
statsTable.setRowHeight(28);<z>
tableFont);<z>
;<z>
);<z>
String uri) {<z>
;<z>
"k", encriptarUri(uri));<z>
("fap.DescargasAedController.descargar", params);<z>
"application.baseUrl");<z>
+= rd.url;<z>
return urlCompleta;<z>
{<z>
());<z>
{<z>
(n);<z>
n;<z>
getElementLimit1()<z>
())<z>
Compatibility.getTableLimit());<z>
-1);<z>
() throws ClientException {<z>
;<z>
"none")) {<z>
saveDocument(tmpWorkspace);<z>
} else {<z>
;<z>
,<z>
"title");<z>
.generatePathSegment(title);<z>
new IdRef(selectedTemplateId), currentDocRef,<z>
name);<z>
created = documentManager.getChild(currentDocRef,<z>
;<z>
, "title", title);<z>
getProperty("dublincore",<z>
"description");<z>
) {<z>
, "description", descr);<z>
.getProperty("file", "content");<z>
if (blob != null) {<z>
;<z>
) tmpWorkspace.getProperty("file",<z>
;<z>
fname);<z>
.saveDocument(created);<z>
);<z>
(created,<z>
"after-create");<z>
(!selectedSecurityModel.equals("inherit")) {<z>
> principalsName;<z>
)) {<z>
<String>();<z>
add(currentUser.getName());<z>
else {<z>
principalListManager.getSelectedUsers();<z>
(String principalName : principalsName) {<z>
,<z>
;<z>
(userManager.getAdministratorsGroups());<z>
.EVERYONE,<z>
SecurityConstants.EVERYTHING, false);<z>
);<z>
(navigationContext.getCurrentDocument());<z>
;<z>
return res;<z>
CreateRelationshipRequest req) {<z>
{<z>
return null;<z>
getElementType()) {<z>
return null;<z>
.BesiegePortOrder_4005 == req.getElementType()) {<z>
.getSource()));<z>
getElementType()) {<z>
));<z>
PortRegister_4007 == req.getElementType()) {<z>
);<z>
null;<z>
private String getWord(String[] nodeFeatures) {<z>
= nodeFeatures[formIndex];<z>
null && !filter.accept(word))<z>
return IteratorFactory.EMPTY_TOKEN;<z>
;<z>
{<z>
null) {<z>
);<z>
;<z>
java.rmi.RemoteException {<z>
null) {<z>
apache.axis.NoEndPointException();<z>
_call = createCall();<z>
9]);<z>
setUseSOAPAction(true);<z>
_call.setSOAPActionURI("http://tempuri.org/IAccessManagement/UpdateFolderIsPublic");<z>
_call.setEncodingStyle(null);<z>
FALSE);<z>
FALSE);<z>
axis.soap.SOAPConstants.SOAP11_CONSTANTS);<z>
));<z>
(_call);<z>
);<z>
;<z>
.rmi.RemoteException) {<z>
.rmi.RemoteException)_resp;<z>
extractAttachments(_call);<z>
org.apache.axis.AxisFault axisFaultException) {<z>
throw axisFaultException;<z>
() {<z>
();<z>
) {<z>
7;<z>
return hash;<z>
int op1, float op2) {<z>
{<z>
(op1, op2);<z>
else {<z>
(double) op2);<z>
, Calendar.FEBRUARY) {<z>
int year) {<z>
);<z>
(28);<z>
String key) {<z>
(_updateInverseRelationships) {<z>
this, o, key);<z>
);<z>
throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
.getGroup_4_2());<z>
2;<z>
input.LA(1);<z>
) {<z>
=1;<z>
alt1100) {<z>
case 1 :<z>
);<z>
();<z>
._fsp--;<z>
break loop1100;<z>
);<z>
);<z>
re) {<z>
reportError(re);<z>
,re);<z>
stackSize);<z>
MotionEvent event) {<z>
(event);<z>
.drawMagicFlame) {<z>
getAction()) {<z>
case MotionEvent.ACTION_UP:<z>
;<z>
MotionEvent.ACTION_DOWN:<z>
ACTION_CANCEL:<z>
();<z>
result;<z>
queryType, String queryName) {<z>
;<z>
;<z>
= queryName;<z>
) {<z>
(getBuffer().hasPositionsSupport()) {<z>
createUnitInfo(this, node);<z>
OUTPUT_ENCODING, "ISO-8859-1");<z>
true)).isNotEmpty()) {<z>
(node, "lines", true)) {<z>
item, this.getSNode());<z>
)) {<z>
String unitName = null;<z>
));<z>
(Throwable t) {<z>
;<z>
.fillUnitInfo(this, node, unitName);<z>
(TradeOffer offer)<z>
if (offer != null)<z>
.add(offer);<z>
,<z>
httpRequest )<z>
getURI();<z>
) )<z>
).debug(<z>
) + " method against remote location " + methodUri );<z>
RemoteStorageContext ctx = getRemoteStorageContext( repository );<z>
) ctx.getContextObject( CTX_KEY_CLIENT );<z>
setHeader( "Accept", "*/*" );<z>
( "Accept-Language", "en-us" );<z>
);<z>
;<z>
null;<z>
httpRequest );<z>
.getStatusLine().getStatusCode();<z>
= httpResponse.getFirstHeader( "server" );<z>
,<z>
.getValue() );<z>
( NEXUS_MISSING_ARTIFACT_HEADER );<z>
proxyReturnedError =<z>
proxyReturnedErrorHeader.getValue() );<z>
== HttpStatus.SC_FORBIDDEN )<z>
methodUri.toASCIIString(),<z>
().getReasonPhrase() );<z>
if ( statusCode == HttpStatus.SC_UNAUTHORIZED )<z>
( repository,<z>
).getReasonPhrase() );<z>
SC_OK && proxyReturnedError )<z>
new RemoteStorageException(<z>
;<z>
httpResponse;<z>
catch ( RemoteStorageException ex )<z>
release( httpResponse );<z>
;<z>
catch ( ClientProtocolException ex )<z>
httpResponse );<z>
( "Protocol error while executing " + httpRequest.getMethod()<z>
request.getRequestPath()<z>
toASCIIString() + "\"]", ex );<z>
ex )<z>
httpResponse );<z>
( repository,<z>
" method [repositoryId=\""<z>
"\", requestPath=\"" + request.getRequestPath() + "\", remoteUrl=\""<z>
, ex );<z>
catch ( IOException ex )<z>
httpResponse );<z>
)<z>
getRequestPath()<z>
() + "\"]", ex );<z>
getPreferences() {<z>
PreferenceManager.IONTORRENT_FLOWDIST_CHARTTYPE);<z>
== null) {<z>
type = "LINE";<z>
{<z>
chart_type = TYPE_LINE;<z>
) {<z>
chart_type = TYPE_AREA;<z>
equalsIgnoreCase("BAR")) {<z>
chart_type = TYPE_BAR;<z>
equalsIgnoreCase("STACKED")) {<z>
= TYPE_STACKED;<z>
(PreferenceManager.IONTORRENT_FLOWDIST_BINSIZE);<z>
if (binsize < 1) {<z>
;<z>
{<z>
= 100;<z>
public boolean inScope(IToc toc) {<z>
){<z>
|| 0 == criteriaScope.length){<z>
true;<z>
false;<z>
);<z>
criteriaOfToc);<z>
(SVNNodeKind kind, String lastPath, long startRev,<z>
{<z>
kind;<z>
lastPath;<z>
startRev;<z>
= startRev;<z>
= handler;<z>
;<z>
declNode) {<z>
if (!(binding instanceof IVariableBinding))<z>
;<z>
(IVariableBinding)binding;<z>
;<z>
.isTransient(modifiers))<z>
return false;<z>
, VariableDeclarationExpression.class);<z>
.size() > 1)<z>
;<z>
))<z>
false;<z>
isParameter()) {<z>
declNode.getParent();<z>
if (varDecl instanceof MethodDeclaration) {<z>
(MethodDeclaration)varDecl;<z>
)<z>
false;<z>
;<z>
(IVec line1Pt1, IVec line1Pt2,<z>
tolerance){<z>
.dup();<z>
;<z>
);<z>
);<z>
.dup();<z>
)) return line1Pt2.dup();<z>
IVec dir1 = line1Pt2.dif(line1Pt1);<z>
(line2Pt1);<z>
.dif(line1Pt1);<z>
;<z>
len();<z>
tolerance*tolerance){<z>
.unit();<z>
) > tolerance) return null;<z>
line1Pt1.dup();<z>
;<z>
dif.dot(op);<z>
tolerance) return null;<z>
(gap));<z>
unit();<z>
.unit();<z>
= dir1.dot(dir2);<z>
ip12*ip12;<z>
iip122==0) return null;<z>
= dif.dot(dir1);<z>
ip2 = dif.dot(dir2);<z>
line1Pt1);<z>
Game game, Ability source) {<z>
UUID>();<z>
getPermanent(source.getFirstTarget());<z>
, game) > 0) {<z>
) {<z>
.tap(game);<z>
);<z>
;<z>
);<z>
target.getId(), game);<z>
return true;<z>
false;<z>
{<z>
GetResult res = simpleGet(pr, uri);<z>
(!res.isMetaData()) {<z>
+ uri);<z>
(res.getData());<z>
RepositoryException {<z>
checkSupportedOption(Repository.LEVEL_2_SUPPORTED);<z>
();<z>
ChannelBuffer encode(EntityTeleportMessage message) throws IOException {<z>
buffer = ChannelBuffers.buffer(18);<z>
(message.getEntityId());<z>
message.getX());<z>
(message.getY());<z>
;<z>
.getRotation());<z>
.writeByte(message.getPitch());<z>
buffer;<z>
void onCreate(Bundle savedInstanceState) {<z>
;<z>
setContentView(R.layout.load);<z>
;<z>
) throws InvalidDataException {<z>
;<z>
();<z>
(Element)children.get(0);<z>
rootModel);<z>
> getDependeeModuleNames (Set<ModuleName> names) {<z>
n; ++i) {<z>
getNthImportedModule(i);<z>
.getModuleName())) {<z>
add(importedMTI.getModuleName());<z>
).getDependeeModuleNames(names);<z>
names;<z>
String filter)<z>
.length() == 0 ||<z>
) ||<z>
)<z>
filter = filter;<z>
+ filter;<z>
view)<z>
textLayout.getDescent()<z>
textLayout.getLeading();<z>
Data newData, NotificationChain msgs)<z>
;<z>
= newData;<z>
if (eNotificationRequired())<z>
newData);<z>
(notification);<z>
;<z>
public JPanel createDemo() {<z>
);<z>
;<z>
;<z>
;<z>
(0, 25));<z>
);<z>
);<z>
xAxis);<z>
chart.setYAxis(yAxis);<z>
;<z>
blue, titleFont));<z>
;<z>
;<z>
addPoint(china, 7);<z>
, 0);<z>
green, true, true);<z>
6);<z>
;<z>
;<z>
, 20).withPointsAndLines();<z>
setLineWidth(6);<z>
;<z>
redHighlight, redHighlightStyle);<z>
new BorderLayout());<z>
.add(chart, BorderLayout.CENTER);<z>
chart.addMouseMotionListener(new MouseMotionListener() {<z>
(MouseEvent e) {<z>
rollover(e);<z>
highlighted != null) {<z>
();<z>
chart.calculateUserPoint(p);<z>
) {<z>
()));<z>
repaint();<z>
mouseMoved(MouseEvent e) {<z>
e);<z>
{<z>
);<z>
= chart.nearestPoint(p, model);<z>
highlighted != null) {<z>
highlighted.setHighlight(null);<z>
.getSelected();<z>
));<z>
);<z>
dp) < 50) {<z>
ChartPoint) selection.getSelected();<z>
.setHighlight(redHighlight);<z>
<?>) selected.getX();<z>
;<z>
;<z>
;<z>
;<z>
) {<z>
{<z>
null) {<z>
);<z>
;<z>
;<z>
(new Dimension(500, 500));<z>
demoPanel;<z>
void setTimestampFromGetOld(String get_old_options) {<z>
) return;<z>
= Calendar.getInstance();<z>
"E, dd MMM yyyy HH:mm:ss Z");<z>
{<z>
;<z>
)) {<z>
getTime());<z>
if (get_old_options.equals(GET_OLD_OPTIONS_LASTWEEK)) {<z>
;<z>
));<z>
equals(GET_OLD_OPTIONS_LAST24HOURS)) {<z>
-24);<z>
format(calendar.getTime());<z>
String currentDate, String currentTime) throws Exception{<z>
;<z>
String actionName = methodName;<z>
SoapObject(NAMESPACE,methodName);<z>
currentDate);<z>
("cTime", currentTime);<z>
);<z>
= callWebService(actionName, request);<z>
length = results.getPropertyCount();<z>
();<z>
length);<z>
);<z>
);<z>
String[length]);<z>
String[length]);<z>
;<z>
;<z>
;<z>
=0; i < length; i++)<z>
;<z>
);<z>
"delayTime").toString()));<z>
.toString()));<z>
);<z>
.toString()));<z>
)));<z>
"opatetiontype").toString()));<z>
delays;<z>
void setSoTimeout(int timeout) throws SocketException {<z>
s != null) {<z>
.setSoTimeout(timeout);<z>
{<z>
"tcp.timeout", timeout);<z>
timeout;<z>
local()<z>
.println("Local");<z>
().getApplicationContext());<z>
);<z>
);<z>
"recipeID");<z>
getString("recipeName");<z>
e)<z>
Toast.LENGTH_SHORT).show();<z>
;<z>
printStackTrace();<z>
("Getting ingredients.");<z>
;<z>
close();<z>
("Got ingredients.");<z>
);<z>
ingredients);<z>
();<z>
) {<z>
) {<z>
else if (weekOfYearVisible) {<z>
BorderLayout.WEST);<z>
else {<z>
(weekPanel);<z>
.weekOfYearVisible = weekOfYearVisible;<z>
);<z>
();<z>
msgs)<z>
)<z>
ErlangPackage.MODULE__FORMS:<z>
(otherEnd, msgs);<z>
);<z>
(String name, JSType type, Node<z>
{<z>
isEmpty = false;<z>
type, propertyNode));<z>
this;<z>
<Long, Long> getSpecificStatistics( String mbeanName,<z>
statsName,<z>
numberOfSnapshots,<z>
,<z>
) {<z>
, showArchived);<z>
, final SourceSubstituteMacroNodesContext _context) {<z>
() {<z>
) {<z>
);<z>
});<z>
{<z>
changedPackages = new ArrayList();<z>
iter.hasNext(); ) {<z>
iter.next();<z>
changes = checkForChanges( prov );<z>
&& changes.length > 0) {<z>
asList( changes ) );<z>
) {<z>
info( "Applying changes to the rulebase." );<z>
if (this.newInstance) {<z>
listener.info( "Creating a new rulebase as per settings." );<z>
.newRuleBase( this.ruleBaseConf );<z>
{<z>
.next();<z>
.getName(), element );<z>
);<z>
} else {<z>
listener );<z>
{<z>
new ISelector() {<z>
) {<z>
return start >= startOffset && end <= endOffset;<z>
});<z>
return result;<z>
, int apiVersion) {<z>
repositoryLocation.getUrl());<z>
Object();<z>
);<z>
fogbugzApiURL;<z>
= apiVersion;<z>
setToken(null);<z>
FogBugzData>();<z>
.build());<z>
)<z>
;<z>
java.awt.Point());<z>
.awt.Point());<z>
();<z>
new ButtonAnnotation(PLAY_IMAGE_PATH, DEPRESSED_MASK_PATH);<z>
PREVIOUS_IMAGE_PATH, DEPRESSED_MASK_PATH);<z>
nextButton = new ButtonAnnotation(NEXT_IMAGE_PATH, DEPRESSED_MASK_PATH);<z>
new ButtonAnnotation(BEGIN_IMAGE_PATH, DEPRESSED_MASK_PATH);<z>
, DEPRESSED_MASK_PATH);<z>
new ButtonAnnotation(INCREASE_IMAGE_PATH, DEPRESSED_MASK_PATH);<z>
().setImageSource(BUSY_IMAGE_PATH);<z>
this.titleLabel);<z>
this.setupPositionLabel(this.positionLabel);<z>
.imageAnnotation);<z>
playButton.setActionCommand(AVKey.PLAY);<z>
;<z>
(AVKey.NEXT);<z>
beginButton.setActionCommand(AVKey.BEGIN);<z>
END);<z>
setActionCommand(AVKey.RESIZE);<z>
this);<z>
.addActionListener(this);<z>
nextButton.addActionListener(this);<z>
beginButton.addActionListener(this);<z>
this);<z>
this);<z>
);<z>
.setToolTipText(PREVIOUS_TOOLTIP_TEXT);<z>
);<z>
setToolTipText(BEGIN_TOOLTIP_TEXT);<z>
;<z>
;<z>
{<z>
event = new Event();<z>
();<z>
= menuItem;<z>
;<z>
= SWT.Selection;<z>
), new VoidResult() {<z>
run() {<z>
.Selection, event);<z>
});<z>
) throws IOException {<z>
GraphController graphController = new GraphController();<z>
);<z>
setIndeterminate(true);<z>
().setVisible(true);<z>
.getMainView();<z>
.setDashboard(ifView.getDashboard());<z>
(url);<z>
OutOfMemoryError ex) {<z>
);<z>
,<z>
"The images are too large." +'\n'+"I'm out of memory.",<z>
);<z>
(!isCancelled()) {<z>
;<z>
{<z>
return null;<z>
>() {<z>
initialValue() {<z>
return new SimpleDateFormat("dd/MM/yyyy");<z>
RecognitionException {<z>
input.index();<z>
{ return ; }<z>
);<z>
formalParameters();<z>
;<z>
(failed) return ;<z>
=2;<z>
LA46_0 = input.LA(1);<z>
( (LA46_0==43) ) {<z>
1;<z>
{<z>
case 1 :<z>
; if (failed) return ;<z>
(FOLLOW_qualifiedNameList_in_voidMethodDeclaratorRest880);<z>
;<z>
--;<z>
return ;<z>
alt47=2;<z>
LA47_0 = input.LA(1);<z>
) {<z>
alt47=1;<z>
{<z>
alt47=2;<z>
true; return ;}<z>
nvae =<z>
input);<z>
throw nvae;<z>
alt47) {<z>
1 :<z>
;<z>
methodBody();<z>
_fsp--;<z>
return ;<z>
:<z>
,FOLLOW_25_in_voidMethodDeclaratorRest910); if (failed) return ;<z>
catch (RecognitionException re) {<z>
(re);<z>
,re);<z>
}<z>
expression, Object expressionElement,<z>
parentDelta, TreePath path, RequestMonitor rm)<z>
.getExecutor(), rm);<z>
;<z>
event, parentDelta, multiRm);<z>
;<z>
, parentDelta, event);<z>
() != 0) {<z>
, childNodesWithDeltaFlags,<z>
IModelDelta.NO_CHANGE),<z>
);<z>
++;<z>
) {<z>
expressionElementIdx,<z>
multiRm);<z>
++;<z>
multiRm.setDoneCount(multiRmCount);<z>
vg) {<z>
(R.layout.waypointlist_item,<z>
false);<z>
, rl, context);<z>
public void insertFullWidthSpace() {<z>
.getCaretPosition();<z>
;<z>
3000", null);<z>
catch (BadLocationException e) {<z>
;<z>
newEntityType) {<z>
();<z>
size(); i++) {<z>
oldAttribute = attributes.get(i);<z>
(oldAttribute.getName());<z>
).equalsIgnoreCase(IndexableAttributeInterface.INDEXING_TYPE_TEXT));<z>
INDEXING_TYPE_TEXT));<z>
isNewAttributeIndexeable)) {<z>
return true;<z>
;<z>
refreshVisuals() {<z>
)getModel()).getPosition();<z>
()).getSize();<z>
;<z>
r);<z>
repaint();<z>
ProcessorException {<z>
setOutputFile(finalRequest);<z>
);<z>
DELETE_DB_PARAMETER_NAME);<z>
(ProcessorConstants.LOG_PREFIX_PARAM_NAME);<z>
);<z>
;<z>
(ParamValidateException e) {<z>
), e);<z>
getRuleModellerConfiguration() {<z>
( false,<z>
true );<z>
, ResolvedType actualType)<z>
getTypeParameters();<z>
;<z>
; i < len; ++i) {<z>
(i);<z>
act = actualTypes.get(i);<z>
!_typesMatch(exp, act)) {<z>
" differs; expected "<z>
));<z>
ScmFileSet fileSet, ScmVersion version )<z>
;<z>
.getBasedir().getAbsolutePath() );<z>
;<z>
Exception e )<z>
ScmException( "Can't add system environment.", e );<z>
"SSDIR", repo.getVssdir() );<z>
= VssCommandLineUtils.getSsDir();<z>
;<z>
( VssConstants.COMMAND_GET );<z>
.getProject() );<z>
) != null )<z>
+ repo.getUserPassword() );<z>
);<z>
).setValue( VssConstants.FLAG_AUTORESPONSE_DEF );<z>
setValue( VssConstants.FLAG_SKIP_WRITABLE );<z>
!= null )<z>
.setValue( VssConstants.FLAG_VERSION_LABEL + version );<z>
return command;<z>
Class<?> toMask,<z>
?> mixin)<z>
mixin == null) {<z>
Annotation a : mixin.getDeclaredAnnotations()) {<z>
(a)) {<z>
;<z>
{<z>
parent.getDeclaredAnnotations()) {<z>
_annotationIntrospector.isHandled(a)) {<z>
(a);<z>
) {<z>
(workspace == null) {<z>
);<z>
== null) {<z>
Collections.emptyList();<z>
;<z>
(NO_WORKSPACE == workspace) {<z>
);<z>
else {<z>
);<z>
null, null);<z>
log, String[] args,<z>
{<z>
{<z>
s = args[i];<z>
"-v")) {<z>
log.setVerbose(true);<z>
!s.startsWith("-")) {<z>
null) {<z>
osDestJar[0] = s;<z>
{<z>
s);<z>
{<z>
.error("Unknow argument: %s", s);<z>
false;<z>
if (osJarPath.isEmpty()) {<z>
;<z>
return false;<z>
[0] == null) {<z>
;<z>
false;<z>
return true;<z>
void eSet(int featureID, Object newValue) {<z>
{<z>
Ows10Package.CAPABILITIES_BASE_TYPE__SERVICE_IDENTIFICATION:<z>
((ServiceIdentificationType)newValue);<z>
Ows10Package.CAPABILITIES_BASE_TYPE__SERVICE_PROVIDER:<z>
(ServiceProviderType)newValue);<z>
.CAPABILITIES_BASE_TYPE__OPERATIONS_METADATA:<z>
newValue);<z>
:<z>
(String)newValue);<z>
:<z>
((String)newValue);<z>
;<z>
String value )<z>
name = null;<z>
!= null )<z>
new COSString( value );<z>
name );<z>
Object key)<z>
ClassLoader))<z>
new IllegalArgumentException("Key instance must be ClassLoader for using DefaultSingletonService");<z>
private boolean isLastRetry() {<z>
config = null;<z>
;<z>
catch (Exception e) {<z>
throw new SessionInternalError("Processing payment to change status",<z>
class, e);<z>
.getAttempt().intValue() >=<z>
{<z>
true;<z>
} else {<z>
return false;<z>
void saveData(Element element) {<z>
;<z>
);<z>
(hist, SEARCH);<z>
saveData(hist, COMMAND);<z>
, EXPRESSION);<z>
hist, INPUT);<z>
.addContent(hist);<z>
throws RecognitionException {<z>
keepStackSize();<z>
).getIsAReceiveEventAllKeyword_0());<z>
);<z>
;<z>
getIsAReceiveEventAllKeyword_0());<z>
.getIsAReceiveEventAllKeyword_0());<z>
{<z>
(re);<z>
recover(input,re);<z>
(stackSize);<z>
()<z>
;<z>
= new StringBuffer();<z>
IParam> params = getAtomicParams();<z>
: params) {<z>
paramText = param.toString();<z>
(buffer.length() > 0)<z>
);<z>
;<z>
buffer.toString();<z>
, HClass hclass) {<z>
=to;<z>
=new Stack();<z>
;<z>
doc, String action,<z>
)<z>
= null;<z>
();<z>
context);<z>
.hasProgrammingRights(pagedoc, context)) {<z>
pagedoc.getContent(), context);<z>
rule, doc, action, context);<z>
} catch (Throwable e) {<z>
page};<z>
=<z>
.MODULE_XWIKI_GROOVY,<z>
.ERROR_XWIKI_GROOVY_EXECUTION_FAILED,<z>
);<z>
LOGGER.isErrorEnabled()) {<z>
);<z>
, Set<String> attributeNames) {<z>
(businessObjectClass);<z>
{<z>
getFieldDescriptorByName(attributeName).setFieldConversionClassName(<z>
.getName());<z>
>emptyMap());<z>
, String name, Object obj)<z>
, obj, name);<z>
final RecordHeader header, final UBits reserved,<z>
Flag useGPU, final Flag hasMetadata,<z>
, final UBits reserved2, final Flag useNetwork,<z>
UBits reserved3) {<z>
super(header);<z>
reserved;<z>
;<z>
this.useGPU = useGPU;<z>
= hasMetadata;<z>
actionScript3;<z>
this.reserved2 = reserved2;<z>
useNetwork;<z>
= reserved3;<z>
password, String ipAddress) throws SQLException {<z>
if (checkid == 1) {<z>
1000;<z>
;<z>
salt);<z>
PreparedStatement ps;<z>
, 1);<z>
setString(1, player);<z>
);<z>
ps.setString(3, salt);<z>
(4, email);<z>
);<z>
(6, timestamp);<z>
timestamp);<z>
;<z>
, Util.ip2Long(ipAddress));<z>
10, "");<z>
"");<z>
"");<z>
);<z>
14, "");<z>
.setString(15, "");<z>
.setString(16, "2");<z>
));<z>
);<z>
();<z>
;<z>
;<z>
"lastuid", null, "lastusername");<z>
"datacache" + "` SET `cache` = '" + newcache + "' WHERE `title` = 'stats'");<z>
());<z>
ps.executeUpdate();<z>
;<z>
(final Integer hypervisorTypeId)<z>
challenge) {<z>
;<z>
= _basicCredentials.get(host);<z>
if (realms == null) return null;<z>
realm);<z>
if (cred == null) return null;<z>
+ cred.getPassword();<z>
), false);<z>
) {<z>
(first);<z>
firstExcludedKey = (firstExcluded == null ?<z>
.key);<z>
() {<z>
super.onResume();<z>
PreferenceManager.getDefaultSharedPreferences(this);<z>
(UNI_LINK_BUS_TIMES, UNI_LINK_BUS_TIMES_ENABLED_BY_DEFAULT)<z>
, NON_UNI_LINK_BUS_TIMES_ENABLED_BY_DEFAULT)) {<z>
getLastNonConfigurationInstance();<z>
;<z>
) {<z>
Log.i(TAG, "No Previous timetable");<z>
);<z>
(); i++) {<z>
() - 21000), false));<z>
} else {<z>
i(TAG, "Displaying previous timetable");<z>
displayTimetable();<z>
if (busStop != null) {<z>
" which is " + busStops.indexOf(busStop));<z>
;<z>
handler.postDelayed(refreshData, 500);<z>
} else {<z>
TAG, "Live Times Disabled");<z>
;<z>
;<z>
process(Exchange exchange) throws Exception {<z>
;<z>
(keywords);<z>
0) {<z>
(lastId);<z>
();<z>
= twitter.search(query);<z>
Tweet> list = results.getTweets();<z>
) {<z>
;<z>
(newId > lastId) {<z>
lastId = newId;<z>
list);<z>
{<z>
if (this == version)<z>
;<z>
)<z>
false;<z>
.parent.supports(version);<z>
> getLanguages()<z>
);<z>
().getConfigurationElementsFor(ExtensionPoints.LANGUAGES))<z>
(NAME_ATTR)));<z>
catch (Exception e)<z>
));<z>
languages;<z>
DataPropDescrTreeCellRenderer(Icon namedClsIcon, Icon equivlntClsIcon,<z>
anonDataPropIcon,<z>
dataRangeButDataTypeIcon, Icon lablIcon,<z>
, Icon uncheckedIcon) {<z>
namedClsIcon;<z>
;<z>
anonClsIcon = anonClsIcon;<z>
namedDataPropIcon = namedDataPropIcon;<z>
anonDataPropIcon;<z>
;<z>
dataRangeButDataTypeIcon = dataRangeButDataTypeIcon;<z>
lablIcon = lablIcon;<z>
checkedIcon;<z>
= uncheckedIcon;<z>
()<z>
();<z>
(""))<z>
;<z>
"/" + user + "/lists.txt");<z>
(listFile);<z>
;<z>
)<z>
(Global.toFileName(listName)))<z>
= true;<z>
.nextToken();<z>
();<z>
(isTaken)<z>
;<z>
);<z>
Date(System.currentTimeMillis());<z>
)) + "\n";<z>
"/" + user + "/lists.txt", listFile);<z>
;<z>
;<z>
;<z>
();<z>
BufferedImage getImageFromWaveletEncoding(FrameFile frame, int resolution)<z>
if (resolution <= 0)<z>
return null;<z>
codec;<z>
<= RPFGenerator.this.preloadRes)<z>
(frame.codec == null)<z>
waveletFile);<z>
(buffer, RPFGenerator.this.preloadRes);<z>
.codec;<z>
frame.waveletFile);<z>
(buffer, resolution);<z>
= null;<z>
codec != null)<z>
(resolution);<z>
;<z>
(Exception e)<z>
frame.waveletFile;<z>
.SEVERE, message, e);<z>
.this.markFrameFileAbsent(frame);<z>
return null;<z>
void init(IEditorSite iSite, IEditorInput iInput)<z>
{<z>
iInput);<z>
;<z>
dbFactory = DocumentBuilderFactory<z>
;<z>
newDocumentBuilder();<z>
getContents());<z>
);<z>
(0) != null) {<z>
Element) nList.item(0);<z>
version = versionElement.getTextContent();<z>
"5.1.2")) {<z>
;<z>
} else {<z>
;<z>
= file.getContents();<z>
xstream = new XStream() {<z>
{<z>
return new MapperWrapper(next) {<z>
public boolean shouldSerializeMember(<z>
final Class definedIn,<z>
String fieldName) {<z>
definedIn == Object.class)<z>
;<z>
shouldSerializeMember(definedIn,<z>
);<z>
BMotionEditorPlugin.setAliases(xstream);<z>
.fromXML(inputStream);<z>
((IFileEditorInput) getEditorInput())<z>
);<z>
(SAXException e) {<z>
e.printStackTrace();<z>
} catch (IOException e) {<z>
.printStackTrace();<z>
e) {<z>
printStackTrace();<z>
} catch (ParserConfigurationException e) {<z>
e.printStackTrace();<z>
{<z>
());<z>
));<z>
.isWebflowRequest()) {<z>
scopedContext.addPropertyAccessor(new FlowVariablePropertyAccessor());<z>
);<z>
public void printClass(Class cl)<z>
(! cl.isArray())<z>
, '.'));<z>
.getComponentType());<z>
print("[]");<z>
void setOnmouseup(String newOnmouseup) {<z>
;<z>
= newOnmouseup;<z>
)<z>
;<z>
public int getColOffset()<z>
0;<z>
public List<CalendarWrapper> processResults() {<z>
;<z>
();<z>
results;<z>
double param, double param2) {<z>
param2)<z>
;<z>
weibull;<z>
int fold) {<z>
;<z>
while (ret < fold) {<z>
ret *= 2;<z>
return ret;<z>
){<z>
ret=" <filter type='" + getName() + "'>\n" +<z>
() +"'>\n" +<z>
+getThreshold() +"'>\n" +<z>
;<z>
beanClass, Member member) {<z>
member = member;<z>
( this.member != null ) {<z>
) ? ElementType.METHOD : ElementType.FIELD;<z>
this.elementType = ElementType.TYPE;<z>
beanClass;<z>
) {<z>
byte[] family, column;<z>
(key)) {<z>
warn("Warning. Invalid statistic: " + key + ", supported stats: " +<z>
HBaseStatsUtils.getSupportedStatistics());<z>
return null;<z>
();<z>
.getColumnName(key);<z>
0;<z>
();<z>
family, column);<z>
);<z>
);<z>
(scan);<z>
: scanner) {<z>
));<z>
toString(retValue);<z>
e) {<z>
LOG.error("Error during publishing aggregation. ", e);<z>
;<z>
injectMembers(T t) {<z>
.set(t, logger);<z>
} catch (IllegalAccessException e) {<z>
(e);<z>
Object inData)<z>
setDataElements(x - sampleModelTranslateX,<z>
;<z>
database) {<z>
.class) {<z>
"Channel", new String[] {<z>
, "orderIndex"<z>
, null, "orderIndex");<z>
.moveToFirst();<z>
new ArrayList<Channel>();<z>
)) {<z>
ch = new Channel();<z>
cursor.getColumnIndex("id")));<z>
;<z>
)));<z>
);<z>
);<z>
.close();<z>
return list;<z>
Comment newBase_Comment) {<z>
base_Comment;<z>
newBase_Comment;<z>
if(eNotificationRequired())<z>
);<z>
boolean checkBoundsIsNaN() {<z>
upper.y+upper.z)) {<z>
return true;<z>
false;<z>
> getReferenceData(EAnnotation eAnnotation)<z>
= new ArrayList<AnnotationReferenceData>();<z>
EMF25_VALUE)<z>
: eAnnotation.getReferences())<z>
reference;<z>
();<z>
))<z>
(), internalEObject));<z>
;<z>
instanceof EPackage)<z>
((EPackage)internalEObject);<z>
if (genPackage != null)<z>
= new StringBuilder("/");<z>
--i)<z>
fragment.append('/');<z>
(i));<z>
.toString()));<z>
return result;<z>
public final synchronized void waitUntilTriggered(final long delay)<z>
: System.currentTimeMillis() + delay) ;<z>
long now = System.currentTimeMillis() ;<z>
|| failed))<z>
) ;<z>
InterruptedException ie) {}<z>
() ;<z>
() {<z>
){<z>
.get(0);<z>
else {<z>
this.attributes.get("Cluster Name");<z>
adminUID, String adminCommonName, String adminLastName,<z>
, String password,<z>
) {<z>
adminUID;<z>
;<z>
.adminLastName = adminLastName;<z>
;<z>
= password;<z>
;<z>
;<z>
, "person", "organizationalPerson", "inetOrgPerson"));<z>
void main(String[] args) {<z>
new Properties();<z>
;<z>
("password", "");<z>
"url", "http://stream.twitter.com/1/statuses/sample.json");<z>
props.setProperty("stream", "TestStream");<z>
props);<z>
a.init();<z>
private void createTimestampListener() {<z>
;<z>
CommonTree eventNode) throws ParseException {<z>
EVENT);<z>
.getChildren();<z>
== null) {<z>
ParseException("Empty event block");<z>
event = new EventDeclaration();<z>
pushScope();<z>
CommonTree child : children) {<z>
) {<z>
:<z>
parseTypealias(child);<z>
case CTFParser.TYPEDEF:<z>
parseTypedef(child);<z>
CTF_EXPRESSION_TYPE:<z>
:<z>
(child, event);<z>
);<z>
!event.nameIsSet()) {<z>
new ParseException("Event name not set");<z>
(!event.streamIsSet()) {<z>
.nbStreams() > 1) {<z>
ParseException(<z>
;<z>
null);<z>
(stream != null) {<z>
stream);<z>
else {<z>
ParseException(<z>
;<z>
event);<z>
();<z>
checkStoreArguments(final String key,<z>
) {<z>
key);<z>
.checkKey(keyBytes);<z>
{<z>
("value could not be null");<z>
) {<z>
IllegalArgumentException(<z>
;<z>
return keyBytes;<z>
final ByteBuffer throughBuffer) throws IOException {<z>
return 0L;<z>
();<z>
, FLAG_CLOSE_REQUESTED)) {<z>
;<z>
{<z>
throw new FixedLengthOverflowException();<z>
res = 0L;<z>
);<z>
{<z>
val, res);<z>
) {<z>
.class<z>
("ODTProjectWithFreemarker.odt");<z>
(<z>
, TemplateEngineKind.Freemarker);<z>
.createContext();<z>
"XDocReport");<z>
put("project", project);<z>
= new FileOutputStream(new File(<z>
);<z>
, out);<z>
} catch (IOException e) {<z>
printStackTrace();<z>
e) {<z>
e.printStackTrace();<z>
void showEmptyWindowContents() {<z>
{<z>
getPageComposite();<z>
(<z>
parent);<z>
;<z>
)).topControl = emptyWindowContents;<z>
();<z>
fd )<z>
fd.getParentFile( ) != null<z>
).exists( ) == false )<z>
;<z>
{<z>
log("Connecting...");<z>
mPrefs.getString(PREF_DEVICE_ID, null);<z>
{<z>
log("Device ID not found.");<z>
} else {<z>
deviceID);<z>
{<z>
"MqttException: "<z>
() : "NULL"));<z>
(isNetworkAvailable()) {<z>
scheduleReconnect(mStartTime);<z>
setStarted(true);<z>
path, File destination) throws IOException {<z>
);<z>
(path.isDirectory()) {<z>
.exists()) {<z>
destination.mkdir();<z>
);<z>
) {<z>
i]), new File(destination,<z>
;<z>
else {<z>
= new FileInputStream(path);<z>
(destination);<z>
];<z>
int len;<z>
{<z>
write(buf, 0, len);<z>
;<z>
();<z>
tail(IList lst, IInteger len)<z>
lenVal = len.intValue();<z>
= lst.length();<z>
.sublist(lstLen - lenVal, lenVal);<z>
} catch (IndexOutOfBoundsException e){<z>
= values.integer(lenVal - lstLen);<z>
end, null, null);<z>
divide(NBCG val){<z>
= new MutableNBCG(val.mag);<z>
.divide(b, q, r);<z>
;<z>
{<z>
response = this.serverResponse();<z>
suCode, httpError.suMsg);<z>
Const.responseKey, response);<z>
par1World)<z>
worldObj = par1World;<z>
getWorldInfo().getTerrainType();<z>
this.registerWorldChunkManager();<z>
this.generateLightBrightnessTable();<z>
private String getElement(Reader reader) throws IOException {<z>
= new StringBuilder();<z>
.append('<');<z>
boolean done = false;<z>
done) {<z>
();<z>
current != '>') {<z>
< 0) {<z>
);<z>
(char) current);<z>
reader.read();<z>
(char) current);<z>
= result.length();<z>
, 4).equals("<!--")) {<z>
, len).equals("-->")) {<z>
= true;<z>
else {<z>
;<z>
return result.toString();<z>
serveStaleOnError() {<z>
.get();<z>
if (item != null) {<z>
serveStaleOnError();<z>
) {<z>
).get("tag");<z>
(tag);<z>
DeploymentContextHolder.getUrl();<z>
) {<z>
.user = user;<z>
urlBase = urlBase;<z>
setUser(doc, factory);<z>
;<z>
calculateHomedirUrl();<z>
property) {<z>
;<z>
= false;<z>
String) {<z>
= (String) property;<z>
0;<z>
().isArray()) {<z>
array = (T[]) property;<z>
0;<z>
property instanceof Collection) {<z>
Collection) property;<z>
0;<z>
{<z>
(new Error("The property type is not recognized"));<z>
if (empty) {<z>
add(new Error("property value is empty"));<z>
return errors;<z>
{<z>
NHttpRequestHandler handler = null;<z>
) {<z>
.getUri();<z>
;<z>
;<z>
, ServletResponse response, final FilterChain chain)<z>
{<z>
());<z>
FilterChain resetContextClassLoaderChain = new FilterChain() {<z>
IOException, ServletException {<z>
pop();<z>
doFilter(servletRequest, servletResponse);<z>
);<z>
, descriptor), response, resetContextClassLoaderChain);<z>
();<z>
final String[] args)<z>
();<z>
= Utilities.readFile("/home/jerome/Models/F1.brep");<z>
nanoTime();<z>
) / 1E9);<z>
);<z>
LOGGER.info("Used memory :" +<z>
getRuntime().totalMemory() -<z>
()) / 1E6 + " Mb");<z>
;<z>
);<z>
System.nanoTime();<z>
/ 1E9);<z>
);<z>
+<z>
).totalMemory() -<z>
;<z>
.toString());<z>
.nanoTime();<z>
getShapeFromID(330, TopAbs_ShapeEnum.EDGE);<z>
t2 = System.nanoTime();<z>
.getShapeFromImpl(s.impl);<z>
System.nanoTime();<z>
;<z>
= System.nanoTime();<z>
/1E9);<z>
1E9);<z>
/1E9);<z>
Exception ex)<z>
.SEVERE, null, ex);<z>
{<z>
();<z>
{<z>
) {<z>
.add(modelDescriptor);<z>
return templateModels;<z>
K,V> nextElement()<z>
)<z>
);<z>
;<z>
e = next;<z>
while (e == null)<z>
0)<z>
;<z>
;<z>
next = e.next;<z>
e;<z>
getActivatedConfiguration()<z>
))<z>
SecurityActions.getProperty(ARQUILLIAN_LAUNCH_PROPERTY);<z>
.getThreadContextClassLoader()<z>
;<z>
null)<z>
(arquillianLaunchStream)));<z>
)<z>
;<z>
return null;<z>
][] matchMatrix,<z>
remainingList)<z>
;<z>
: remainingList)<z>
double min = Double.MAX_VALUE;<z>
int minIndex = -1;<z>
)<z>
matchMatrix[row][j]<min)<z>
[j];<z>
= j;<z>
1)<z>
);<z>
listMins);<z>
())<z>
.get(0).index;<z>
return -1;<z>
NotNull String branchName) {<z>
"Delete");<z>
= project;<z>
;<z>
;<z>
{<z>
.activate();<z>
);<z>
null) {<z>
.addExternalRefresher(fontColorRefresher);<z>
(fontRefresher);<z>
));<z>
addExternalRefresher(boundsRefresher);<z>
void opYearMonthDurationLessThan2args3() {<z>
query = new XQuery(<z>
);<z>
final QT3Result res = result(query);<z>
= res;<z>
(false)<z>
int pixelCoordinate, double lower, double upper )<z>
double dataCoordinate;<z>
( isHorizontalAxis )<z>
if ( logScaleEnabled )<z>
( upper ) - Math<z>
lower ) );<z>
( categoryAxisEnabled )<z>
upper + 1 - lower ) + lower );<z>
* ( upper - lower ) + lower;<z>
logScaleEnabled )<z>
- pixelCoordinate / (double)height * ( Math<z>
) ) );<z>
( categoryAxisEnabled )<z>
lower ) );<z>
* ( upper - lower ) + lower;<z>
return dataCoordinate;<z>
Context ctx,<z>
, int geometryType,<z>
,<z>
lineAA, boolean pointAA,<z>
,<z>
srcBlendFunction,<z>
{<z>
);<z>
().getGL2();<z>
) {<z>
;<z>
{<z>
.glEnable(GL2.GL_POLYGON_STIPPLE);<z>
alpha * 16)]);<z>
((transparencyMode < TransparencyAttributes.SCREEN_DOOR) ||<z>
!= 0) ||<z>
polygonMode == PolygonAttributes.POLYGON_LINE))<z>
||<z>
RenderMolecule.POINT) != 0) ||<z>
(polygonMode == PolygonAttributes.POLYGON_POINT))<z>
)) {<z>
;<z>
, blendFunctionTable[dstBlendFunction]);<z>
{<z>
GL_BLEND);<z>
String getSubProcessName() {<z>
!= null) {<z>
getSubProcess().getName();<z>
else {<z>
return null;<z>
, double rate){<z>
ttid = id;<z>
double tt = rate;<z>
(ttid);<z>
(ttData == null) {<z>
ttData = new ArrayList<Double>();<z>
(ttid, ttData);<z>
tt);<z>
protected DataItemValue handleUpdate ( final DataItemValue itemValue )<z>
);<z>
);<z>
;<z>
).get ( this.attributeAck );<z>
.get ( this.attributeActive );<z>
();<z>
( timestamp == null )<z>
timestamp = Calendar.getInstance ();<z>
;<z>
( value == null )<z>
( MonitorStatus.UNSAFE );<z>
return injectState ( builder ).build ();<z>
value.asBoolean ();<z>
final boolean activeFlag;<z>
)<z>
activeFlag = true;<z>
activeFlag = active.asBoolean ();<z>
MonitorStatus state;<z>
)<z>
INACTIVE;<z>
else if ( ack == null )<z>
.NOT_OK : MonitorStatus.OK;<z>
= ack.asBoolean ();<z>
if ( alarmFlag )<z>
if ( ackRequiredFlag )<z>
= MonitorStatus.NOT_OK_NOT_AKN;<z>
MonitorStatus.NOT_OK_AKN;<z>
if ( ackRequiredFlag )<z>
MonitorStatus.NOT_AKN;<z>
;<z>
getTime () );<z>
builder ).build ();<z>
{<z>
eResource()).findDIElement(elem);<z>
) {<z>
e);<z>
null;<z>
{<z>
message.isEmpty()) {<z>
.none();<z>
();<z>
);<z>
) {<z>
.all();<z>
(FudgeField fudgeField : withoutMessage) {<z>
(String) fudgeField.getValue());<z>
return ret;<z>
);<z>
if (withMessage == null) {<z>
return ValueProperties.none();<z>
: withMessage) {<z>
field.getName();<z>
{<z>
case FudgeWireType.INDICATOR_TYPE_ID:<z>
.withAny(propertyName);<z>
STRING_TYPE_ID:<z>
);<z>
.SUB_MESSAGE_TYPE_ID: {<z>
.getValue();<z>
;<z>
: subMessage) {<z>
subField);<z>
) {<z>
(value);<z>
} else {<z>
.withOptional(propertyName);<z>
values.isEmpty()) {<z>
with(propertyName, values);<z>
return builder.get();<z>
private Collection<ModelRoot> getModelRoots() {<z>
();<z>
(ModelRootContentEntryEditor modelRootEditor : myModelRootEditors) {<z>
DummyContentEntry contentEntry = modelRootEditor.getContentEntry();<z>
;<z>
add(contentEntry.getModelRoot());<z>
modelRoots;<z>
throws PMException {<z>
;<z>
("finish") == null) {<z>
);<z>
return false;<z>
} else {<z>
.getSelected() == null) {<z>
;<z>
) {<z>
{<z>
;<z>
()) {<z>
);<z>
getEntity().isWeak()) {<z>
.getSelected().getInstance();<z>
();<z>
).getInstance();<z>
(), parent);<z>
(instance);<z>
;<z>
t,<z>
,<z>
{<z>
throw new UnsupportedOperationException("This language does not support GrammaticalStructures or dependencies");<z>
void add(Class cls) {<z>
addMetaData(cls);<z>
.getDeclaredFields();<z>
; i++) {<z>
== JavaTypes.OBJECT<z>
.class)<z>
.PC);<z>
.getPath());<z>
= true;<z>
> getSubscribers(WAPrimaryKey pk) {<z>
,<z>
);<z>
null;<z>
= getConnection();<z>
;<z>
e) {<z>
throw new SubscribeRuntimeException("SubscribeBmEJB.getNodeSubscribersId()",<z>
);<z>
finally {<z>
DBUtil.close(con);<z>
String name) {<z>
for (BaseObject3D child : mChildren)<z>
).equals(name))<z>
return child;<z>
null;<z>
() {<z>
= "and ";<z>
getOperands()) {<z>
.equals(""))<z>
) + ", ";<z>
ret.trim();<z>
== ret.length()-1)<z>
()-1);<z>
;<z>
public Resource createResource(URI uri) {<z>
);<z>
XMLResource.OPTION_EXTENDED_META_DATA, Boolean.TRUE);<z>
XMLResource.OPTION_EXTENDED_META_DATA, Boolean.TRUE);<z>
XMLResource.OPTION_SCHEMA_LOCATION, Boolean.TRUE);<z>
OPTION_USE_ENCODED_ATTRIBUTE_STYLE, Boolean.TRUE);<z>
OPTION_USE_ENCODED_ATTRIBUTE_STYLE, Boolean.TRUE);<z>
TRUE);<z>
result;<z>
{<z>
MARKER_INCREMENTAL_UPDATE_FAMILY) {<z>
) {<z>
= new LinkedList();<z>
;<z>
child)<z>
LinkedListToken target;<z>
targetNext;<z>
== 0)<z>
target = findOpen(tree);<z>
targetNext = target.getNext();<z>
tree.getChild(index - 1);<z>
= prev.getStopToken();<z>
= target.getNext();<z>
(),<z>
child.getStopToken());<z>
)<z>
);<z>
;<z>
final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {<z>
unitNode;<z>
, "r:1b2caefb-8c76-452e-a59a-bbd2c73d0b03(jetbrains.mps.debugger.java.evaluation.typesystem)", "4544608336420717500", 0, null);<z>
true), _info_12389875345);<z>
(UUID ownerId) {<z>
{CardType.CREATURE}, "{2}{R}");<z>
;<z>
;<z>
;<z>
setRed(true);<z>
(0);<z>
);<z>
.addAbility(DefenderAbility.getInstance());<z>
;<z>
);<z>
isSelectable(int position) {<z>
();<z>
(IndexOutOfBoundsException ex) {<z>
return false;<z>
int featureID, NotificationChain msgs) {<z>
) {<z>
.SHARED_LIBRARY_TYPE1__MIXED:<z>
, msgs);<z>
);<z>
, User user) {<z>
persistClass)<z>
topic))<z>
("user", user))<z>
setComment("topicWatchDAO.isUserSubscribed")<z>
.uniqueResult();<z>
) throws IOException {<z>
null;<z>
list = new ArrayList<Symbol>();<z>
(false);<z>
;<z>
ISymbol.FUNCTION, cppfilt, list);<z>
;<z>
, cppfilt, list);<z>
, list);<z>
()]);<z>
} finally {<z>
(cppfilt != null) {<z>
cppfilt.dispose();<z>
{<z>
;<z>
()) {<z>
toIterate.map.get(tmp)) {<z>
;<z>
++;<z>
;<z>
(int v)<z>
setBitResolution(v);<z>
RENDER_PLANE_PROPERTY, Boolean.valueOf(false),<z>
));<z>
ex) {<z>
;<z>
s) {<z>
compile("\\((.*),(.*)\\)");<z>
(s);<z>
matches()) {<z>
group(1));<z>
;<z>
;<z>
;<z>
Node createDeclarationNode() {<z>
.indexOf('.') == -1) {<z>
);<z>
} else {<z>
, firstNode);<z>
Collection<ServiceInfo> getCurrentDaemonStatusColl() {<z>
);<z>
postEvent (NexusEvent event) {<z>
_id > 0) {<z>
());<z>
;<z>
{<z>
warning("Requested to post event to unregistered object",<z>
, new Exception());<z>
void run() {<z>
counter++;<z>
Date().getTime() - start;<z>
);<z>
String toChannel)<z>
=new MessageImpl();<z>
CHANNEL_FIELD,Bayeux.META_UNSUBSCRIBE);<z>
;<z>
publish(msg);<z>
setFieldType(final String iPropertyName, OType iType) {<z>
iType == null)<z>
null)<z>
;<z>
put(iPropertyName, iType);<z>
IVec[] circleCPApprox(IVec center,<z>
IVec normal,<z>
rollDir,<z>
xradius,<z>
){<z>
;<z>
()==0){<z>
= IVec.xaxis;<z>
;<z>
cross(rollDir);<z>
x = y.cross(normal);<z>
x.len(xradius);<z>
);<z>
;<z>
);<z>
;<z>
cpts[0].add(x);<z>
mul(r));<z>
).mul(r));<z>
).mul(r));<z>
);<z>
dup().mul(r));<z>
;<z>
).mul(r));<z>
().mul(r));<z>
);<z>
return cpts;<z>
boolean fetch) {<z>
plugintest.model.CountryLanguage> results;<z>
fetch) {<z>
fullQualifier;<z>
EOQualifier.QualifierOperatorEqual, this);<z>
null) {<z>
inverseQualifier;<z>
;<z>
qualifier);<z>
.addObject(inverseQualifier);<z>
;<z>
, fullQualifier, sortOrderings);<z>
;<z>
) {<z>
(results, qualifier);<z>
null) {<z>
.sortedArrayUsingKeyOrderArray(results, sortOrderings);<z>
;<z>
offsetInBytes, int sizeInBytes) {<z>
if (mState != STATE_INITIALIZED) {<z>
ERROR_INVALID_OPERATION;<z>
< 0)<z>
+ sizeInBytes > audioData.length)) {<z>
ERROR_BAD_VALUE;<z>
;<z>
int playerObjId)<z>
getPlayerAlliance();<z>
== null)<z>
);<z>
switch(status)<z>
12:<z>
(), PlayerAllianceEvent.LEAVE);<z>
case 14:<z>
));<z>
15:<z>
alliance.getCaptain().getName();<z>
playerObjId);<z>
getName());<z>
:<z>
playerObjId + ")");<z>
:<z>
alliance.promoteViceLeader(playerObjId);<z>
());<z>
:<z>
demoteViceLeader(playerObjId);<z>
());<z>
) {<z>
;<z>
(context);<z>
null) {<z>
;<z>
getInstance(project).hasAnyCopyrights()) {<z>
;<z>
VIRTUAL_FILE_ARRAY.getData(context);<z>
;<z>
{<z>
(editor.getDocument());<z>
) {<z>
;<z>
)) {<z>
copyrightEnabled = false;<z>
for (VirtualFile vfile : files) {<z>
vfile)) {<z>
;<z>
!copyrightEnabled) {<z>
return false;<z>
!= 1) &&<z>
.getData(context) == null &&<z>
) == null &&<z>
context) == null) {<z>
;<z>
elems != null) {<z>
;<z>
{<z>
elem instanceof PsiDirectory)) {<z>
();<z>
(file.getVirtualFile())) {<z>
true;<z>
{<z>
;<z>
;<z>
givePermission(String name, String permission) {<z>
;<z>
isEmpty() || list != null) {<z>
add(permission);<z>
"user." + name + ".permissions", list);<z>
{<z>
);<z>
;<z>
);<z>
(PropertyChangeEvent ev)<z>
.propertyChange(ev);<z>
ev.getPropertyName();<z>
equals("windowDecorationStyle"))<z>
JRootPane) ev.getSource();<z>
getWindowDecorationStyle() != JRootPane.NONE)<z>
);<z>
rp);<z>
Message msg, long timestamp) {<z>
AttributeUpdateMsg) msg;<z>
) {<z>
= message.isDownSupportPeer();<z>
getSenderNodeInfo();<z>
AttributeSubCoordinatorInfo subCoInfo = new AttributeSubCoordinatorInfo(<z>
), timestamp,<z>
,<z>
, message.getContent(), message<z>
());<z>
subCoInfo);<z>
(SparseField other)<z>
;<z>
other.replaceLargeBags;<z>
locationAndIndexHash);<z>
(other.objectHash);<z>
.allObjects);<z>
) {<z>
== null) {<z>
form = new java.text.MessageFormat<z>
util.ResourcesMgr.getString<z>
"invalid null input: value",<z>
;<z>
};<z>
.format(source));<z>
name;<z>
{<z>
(spritePosFloats.length);<z>
(spriteTexFloats.length);<z>
spriteTexFloats);<z>
public void setCompanyScopePermissions(<z>
<String> actionIds)<z>
{<z>
(name, actionIds),<z>
ResourceBlockConstants.OPERATOR_SET);<z>
(long index, byte reason) {<z>
.connectionsReplies++;<z>
connectionsNACKs++;<z>
{<z>
;<z>
virtualConnections.remove(getUniqueID(index));<z>
) {<z>
this == vc.mfc1) {<z>
isInfoEnabled()) {<z>
"forward connect NACK for 2: " + vc.index2);<z>
.index2, reason);<z>
== vc.mfc2) {<z>
(vclogger.isInfoEnabled()) {<z>
);<z>
(vc.index1, reason);<z>
{<z>
.connectionsRepliesError++;<z>
("Virtual connection error: forwarder not found!",<z>
new Exception());<z>
destination, String channelId) {<z>
;<z>
;<z>
().parse(xmlDocument);<z>
) {<z>
e, e);<z>
;<z>
Bundle savedInstanceState) {<z>
this);<z>
savedInstanceState);<z>
.tag_updates_activity);<z>
;<z>
;<z>
);<z>
actionBar.setDisplayShowCustomEnabled(true);<z>
.layout.header_title_view);<z>
TAd_contextEditTask);<z>
)<z>
throws PortletLayoutListenerException {<z>
if (_log.isDebugEnabled()) {<z>
plid);<z>
= LayoutLocalServiceUtil.getLayout(plid);<z>
preferences =<z>
PortletPreferencesFactoryUtil.getPortletSetup(<z>
;<z>
);<z>
(Validator.isNull(articleId)) {<z>
JournalContentSearchLocalServiceUtil.deleteArticleContentSearch(<z>
), layout.isPrivateLayout(),<z>
getLayoutId(), portletId, articleId);<z>
[] runtimePortletIds = getRuntimePortletIds(<z>
articleId);<z>
(runtimePortletIds.length > 0) {<z>
(<z>
layout.getPlid());<z>
catch (Exception e) {<z>
(e);<z>
Class listenerClass) {<z>
StepListener listener : listeners) {<z>
.getClass() == listenerClass) {<z>
return true;<z>
false;<z>
) {<z>
eContainerFeatureID() ) {<z>
ProjectPackage.EDIT_MANAGER__MAP_INTERNAL:<z>
().eInverseRemove(this,<z>
, msgs);<z>
.eBasicRemoveFromContainerFeature(msgs);<z>
JMSException<z>
)<z>
("getShort(" + name + ")");<z>
;<z>
final public NodeVariable Variable() throws ParseException {<z>
Token t;<z>
NodeIndex index = null;<z>
t = jj_consume_token(IDENTIFIER);<z>
)?jj_ntk():jj_ntk) {<z>
29:<z>
();<z>
;<z>
);}<z>
Error("Missing return statement in function");<z>
getInstance(){<z>
){<z>
);<z>
;<z>
getStrongSnapshotGraph(Interval interval) {<z>
= model.getGraph(sourceView);<z>
model.getGraph(currentView);<z>
{<z>
().getValue(DynamicModel.TIMEINTERVAL_COLUMN);<z>
vgraph.contains(n))<z>
;<z>
vgraph.contains(n))<z>
(n);<z>
()) {<z>
).getValue(DynamicModel.TIMEINTERVAL_COLUMN);<z>
&& vgraph.contains(e))<z>
e);<z>
) &&<z>
.getTarget()))<z>
addEdge(e);<z>
vgraph;<z>
static void createTrike()<z>
;<z>
createVehicle( "trike", 3 );<z>
motorcycle = createVehicle( "motorcycle", 2 );<z>
3, motorcycle, 2 );<z>
, motorcycle, 1 );<z>
"spoke", 1, wheel, 2 );<z>
1 );<z>
;<z>
1 );<z>
frame, 1 );<z>
( "pedal", 1, frame, 1 );<z>
;<z>
.finish();<z>
private boolean findNonEmptyCertificateField() {<z>
)) {<z>
component instanceof JTextField) {<z>
) > 0) {<z>
return true;<z>
;<z>
private void minimizeMenuItemActionPerformed(<z>
evt)<z>
sf : getAllFrames()) {<z>
isIcon()) {<z>
);<z>
Exception ex) {<z>
ex);<z>
){<z>
);<z>
getFixtureB();<z>
null){<z>
.HERO_GROUND_SENSOR){<z>
() == FixtureType.TERRAIN){<z>
;<z>
if(numGroundContacts==0){<z>
isOnGround=false;<z>
(fixtureB.getUserData() != null){<z>
== FixtureType.HERO_GROUND_SENSOR){<z>
.TERRAIN){<z>
;<z>
(numGroundContacts==0){<z>
mState).isOnGround=false;<z>
s) {<z>
Contour();<z>
: CONTOUR_SPLITTER.split(s)) {<z>
contour.addPoint(parsePoint(pointString));<z>
contour;<z>
long endExclusive,<z>
? super ReportingInstanceUsageEvent> callback)<z>
, callback );<z>
String getCasinoUserWithConfirmationCode(String confirmationCode) {<z>
("confirmationCode", confirmationCode)<z>
;<z>
user == null) {<z>
return null;<z>
user.email;<z>
handler) {<z>
h);<z>
;<z>
/ w;<z>
bpp() / 8);<z>
h > 0) {<z>
> h) nRows = h;<z>
imageBuf, 0, nRows * bytesPerRow);<z>
nRows, imageBuf, 0);<z>
-= nRows;<z>
;<z>
src, int growFactor)<z>
src.length + growFactor];<z>
;<z>
return dest;<z>
Equipment item)<z>
isAutomatic())<z>
);<z>
item.getOutputIndex());<z>
() {<z>
super.getSelectedDateTimes();<z>
.getSelectedDateTimes();<z>
if (theDataSources == null) {<z>
mine;<z>
(mine == null) {<z>
);<z>
getDateTimes(mine, getAllDateTimes());<z>
= DataSourceImpl.getDateTimes(theDataSources,<z>
;<z>
=<z>
());<z>
List finalResult = new ArrayList();<z>
++) {<z>
= theDataSources.get(i);<z>
mine.contains(tmp)) {<z>
tmp);<z>
;<z>
getAnnotations(String propName, String annotName) {<z>
)<z>
(propName, annotName);<z>
();<z>
initFrame() {<z>
(frameSize);<z>
(name);<z>
);<z>
setExtendedState(JFrame.MAXIMIZED_BOTH);<z>
String getAsString(int style, TimeZone tz) {<z>
());<z>
.setTimeZone(tz);<z>
format(calendar.getTime());<z>
getUser(HttpServletRequest request)<z>
PortalException, SystemException {<z>
);<z>
(userId <= 0) {<z>
String remoteUser = request.getRemoteUser();<z>
remoteUser == null) {<z>
return null;<z>
;<z>
USER);<z>
user == null) {<z>
user = UserLocalServiceUtil.getUserById(userId);<z>
.USER, user);<z>
return user;<z>
GridCoordinates findNearestGridPoint(HorizontalPosition pos) {<z>
ProjectionPoint point = this.getProjectionPoint(pos);<z>
;<z>
));<z>
return null;<z>
GridCoordinatesImpl(i, j);<z>
)<z>
();<z>
( ++a );<z>
throws RecognitionException {<z>
stackSize = keepStackSize();<z>
.getValidationValidationParserRuleCall_7_1_0());<z>
(FOLLOW_ruleValidation_in_rule__Statement__ValidationAssignment_7_14500);<z>
();<z>
;<z>
;<z>
RecognitionException re) {<z>
re);<z>
input,re);<z>
(stackSize);<z>
public double getMatchScore(XPathContext xctxt, int context)<z>
throws javax.xml.transform.TransformerException<z>
);<z>
(context);<z>
);<z>
DEBUG_MATCHES)<z>
;<z>
.num() + " for "<z>
getNodeName(context) + " for xpath "<z>
;<z>
);<z>
.popCurrentNode();<z>
;<z>
, double par5, double par7)<z>
);<z>
-1;<z>
;<z>
= -1;<z>
0;<z>
inGround = false;<z>
= 0;<z>
= par2EntityLiving;<z>
1.0F, 1.0F);<z>
, par2EntityLiving.rotationPitch);<z>
);<z>
;<z>
0.0D;<z>
* 0.40000000000000002D;<z>
;<z>
0.40000000000000002D;<z>
par5 * par5 + par7 * par7);<z>
accelerationX = (par3 / d) * 0.10000000000000001D;<z>
= (par5 / d) * 0.10000000000000001D;<z>
;<z>
boolean printDialog() throws HeadlessException {<z>
{<z>
new HeadlessException();<z>
.startsWith("Windows")) {<z>
;<z>
) {<z>
res));<z>
;<z>
{<z>
.showMessageDialog(KeyboardFocusManager<z>
).getActiveWindow(),<z>
ERROR_MESSAGE);<z>
;<z>
;<z>
false;<z>
throws CoreException {<z>
.isOpen()) return;<z>
project.getDescription();<z>
();<z>
{<z>
.equals(id)) return;<z>
des.newCommand();<z>
.setBuilderName(id);<z>
>(cmds.length+1);<z>
(cmds));<z>
com);<z>
toArray(new ICommand[0]));<z>
des, monitor);<z>
IntersectImplicitpolyConicSingle(<z>
,<z>
GeoImplicitPoly p1,<z>
y) {<z>
;<z>
, y);<z>
, algo, idx);<z>
();<z>
;<z>
() {<z>
R.id.sp_return_format);<z>
) findViewById(R.id.b_load);<z>
);<z>
) findViewById(R.id.b_clear_db);<z>
this);<z>
final int keyCode, final int modifiers) {<z>
(AWTKeyStroke.class) {<z>
, modifiers);<z>
String function) {<z>
"_design/"+ designDoc);<z>
"javascript");<z>
new JSONObject();<z>
);<z>
;<z>
JSONObject viewMap = new JSONObject();<z>
.put(viewName, funcs);<z>
object.put("views", viewMap);<z>
);<z>
Hints userHints) {<z>
relativePriority( userHints ));<z>
.FORCE_LONGITUDE_FIRST_AXIS_ORDER, Boolean.TRUE);<z>
userHints, Hints.FORCE_STANDARD_AXIS_DIRECTIONS);<z>
);<z>
key, String value) {<z>
null) {<z>
HashMap<String, String>();<z>
key, value);<z>
BasicBlock bb, Set<String> uncheckedFields) {<z>
toBeProcessed = new LinkedList<BlockState>();<z>
new BlockState(bb, uncheckedFields));<z>
());<z>
)) {<z>
.isEmpty())<z>
removeFirst();<z>
getBasicBlock();<z>
instructionIterator();<z>
{<z>
ii.next();<z>
;<z>
if (ins instanceof FieldInstruction) {<z>
FieldInstruction) ins;<z>
.getFieldName(cpg);<z>
(fieldName);<z>
{<z>
) {<z>
remove(fieldName);<z>
)<z>
else {<z>
);<z>
null)<z>
);<z>
{<z>
cfg.outgoingEdgeIterator(bb);<z>
(oei.hasNext()) {<z>
();<z>
;<z>
int label = cb.getLabel();<z>
!visitedBlocks.get(label)) {<z>
(new BlockState(cb, bState));<z>
set(label);<z>
{<z>
mgr=<z>
);<z>
.drawable.stat_notify_chat,<z>
System.currentTimeMillis());<z>
(context, 0,<z>
Intent(context, OrderedActivity.class),<z>
;<z>
(context, "You Care About This!",<z>
;<z>
note);<z>
, ProcessorContext context) throws ContributionReadException, XMLStreamException {<z>
= new Axis2ConfigParamPolicy();<z>
int event = reader.getEventType();<z>
;<z>
parameterElement = null;<z>
null;<z>
) {<z>
();<z>
) {<z>
{<z>
reader.getName();<z>
(name.getLocalPart()) ) {<z>
, "name");<z>
(reader);<z>
;<z>
END_ELEMENT ) {<z>
reader.getName()) ) {<z>
{<z>
next();<z>
policy;<z>
Region region){<z>
(region.getRect());<z>
.region = region;<z>
region.getTopLeft());<z>
this.guide = guide;<z>
.image = img;<z>
;<z>
float)image.getWidth());<z>
);<z>
new Dimension(w,h));<z>
String object_key, Long bucket_id, Long bfs_num)<z>
SameNameException, DBException {<z>
(ScssBucket) sqlMap.queryForObject(<z>
;<z>
new ScssObject();<z>
(bfs_num);<z>
.setBucketId(bucket_id);<z>
());<z>
return insert(o);<z>
e) {<z>
DBException(e);<z>
()<z>
= new CreatedImpl();<z>
created;<z>
isFileSafe(String urn) {<z>
lock();<z>
contains(urn);<z>
} finally {<z>
().unlock();<z>
(String outputFormat) {<z>
)) {<z>
OUTPUT_STYLE_SLASH_TAGS;<z>
.equals(outputFormat)) {<z>
return OUTPUT_STYLE_XML;<z>
.equals(outputFormat)) {<z>
return OUTPUT_STYLE_INLINE_XML;<z>
{<z>
;<z>
ipData, RahasData rahasData,<z>
assertionId)<z>
throws IdentityProviderException {<z>
null;<z>
dumpStream,<z>
useDeltas, boolean isVerify) {<z>
(myDumpEditor == null) {<z>
useDeltas, isVerify);<z>
else {<z>
;<z>
myDumpEditor;<z>
){<z>
descriptor.getReadMethod();<z>
this.name = descriptor.getName();<z>
;<z>
gc, int pixmap) {<z>
lock.lock();<z>
gc, pixmap);<z>
finally {<z>
lock.unlock();<z>
CSourceViewerScalableConfiguration(<z>
preferenceStore,<z>
editor, String partitioning) {<z>
preferenceStore, editor, partitioning);<z>
,<z>
newElement) {<z>
();<z>
) {<z>
Attribute) iterator.next();<z>
name = attribute.getName();<z>
attribute.getValue();<z>
)&&!isLegacyConvert()) {<z>
,value);<z>
= new Attribute(name, value);<z>
.setAttribute(newAttribute);<z>
.equals("page")<z>
&& !isLegacyConvert()) {<z>
)<z>
!isLegacyConvert()) {<z>
)) {<z>
new Attribute("name", value);<z>
);<z>
else {<z>
;<z>
);<z>
children = oldElement.getContent();<z>
; iterator.hasNext();) {<z>
next();<z>
(child instanceof Element) {<z>
Element) child;<z>
;<z>
("region")<z>
&& !isLegacyConvert()) {<z>
Element("define", faceletNamespace);<z>
;<z>
{<z>
,<z>
builderNamespace);<z>
.addContent(newChildElement);<z>
)&&!isLegacyConvert()) {<z>
childElement, "name");<z>
, "value");<z>
) == 1) {<z>
(0);<z>
) valueChildren.get(0);<z>
newNameAttribute = new Attribute("name",<z>
;<z>
);<z>
setAttribute(newNameAttribute);<z>
("value",<z>
);<z>
.setValue(valueChild.getText());<z>
(newValueAttribute);<z>
{<z>
;<z>
{<z>
transformElementToFacelet(childElement, newChildElement);<z>
instanceof Text) {<z>
Text childElement = (Text) child;<z>
;<z>
newChildElement);<z>
throws SaxonApiException {<z>
(node);<z>
);<z>
) {<z>
;<z>
();<z>
"}")) {<z>
> items = parse(attr, value);<z>
;<z>
items) {<z>
();<z>
.addAttribute(attr, newvalue);<z>
} else {<z>
attr);<z>
true;<z>
code) {<z>
0xa0) {<z>
return code;<z>
else {<z>
[code - 0xa0] & 0xFFFF;<z>
(code == 0xFFFD) {<z>
;<z>
} else {<z>
code;<z>
) {<z>
);<z>
resultCode == Activity.RESULT_OK) {<z>
{<z>
case REQUEST_CODE_PHOTO_PICKED_WITH_DATA: {<z>
pathForCroppedPhoto(<z>
mContext, listener.getCurrentPhotoFile());<z>
Bitmap bitmap = BitmapFactory.decodeFile(path);<z>
onPhotoSelected(bitmap);<z>
return true;<z>
{<z>
.getCurrentPhotoFile());<z>
;<z>
return false;<z>
addDataRefs()<z>
field instanceof TextBoxStep) return;<z>
();<z>
0) return;<z>
new BorderLayout());<z>
;<z>
, 12), BorderLayout.WEST);<z>
(Box.createVerticalStrut(10));<z>
);<z>
drEditor;<z>
;<z>
0; i<dataRefCount; i++) {<z>
(i);<z>
(dataRef, this);<z>
;<z>
Box.createVerticalStrut(10));<z>
add(drEditor);<z>
boolean jj_2_114(int xla) {<z>
;<z>
;<z>
jj_3_114();<z>
catch (LookaheadSuccess ls) {<z>
;<z>
finally {<z>
, xla);<z>
> builder) {<z>
AbstractStackNode[7];<z>
"Expression", null, null);<z>
);<z>
}, null, null);<z>
"layouts_LAYOUTLIST", null, null);<z>
null, null);<z>
1, "layouts_LAYOUTLIST", null, null);<z>
}, null, null);<z>
tmp);<z>
(long old0, long active0)<z>
)) == 0L)<z>
;<z>
); }<z>
) {<z>
12;<z>
(curChar)<z>
116:<z>
0x800000L);<z>
return 13;<z>
final void mT__99() throws RecognitionException {<z>
_type = T__99;<z>
int _channel = DEFAULT_TOKEN_CHANNEL;<z>
"null");<z>
state.type = _type;<z>
.channel = _channel;<z>
){<z>
;<z>
(){<z>
;<z>
(running){<z>
Exception e){}<z>
;<z>
.start();<z>
() {<z>
();<z>
KEY_PREFIX);<z>
0], new CmsDisplayWidget()));<z>
));<z>
;<z>
0], new CmsDisplayWidget()));<z>
)));<z>
void ensureDefaultComposingSpans() {<z>
) {<z>
Context context;<z>
!= null) {<z>
();<z>
!= null) {<z>
();<z>
{<z>
;<z>
{<z>
getTheme()<z>
[] {<z>
R.attr.candidatesTextStyleSpans<z>
;<z>
style = ta.getText(0);<z>
);<z>
(style != null && style instanceof Spanned) {<z>
(Spanned)style).getSpans(<z>
.length(), Object.class);<z>
void registerOverridenModel(ImagesObjectModel model) {<z>
synchronized (_lock) {<z>
_instance != null)<z>
new RuntimeException("Object model has already been registered. This method can only be called at program startup.");<z>
= model;<z>
register(model);<z>
{<z>
ArrayList list = new ArrayList(10);<z>
) {<z>
(i.next());<z>
return list;<z>
)<z>
if (info != null)<z>
.getDEREncoded();<z>
DERInteger(y));<z>
;<z>
public Plugin getPlugin(String pluginName) {<z>
for (Plugin plugin : mPlugins) {<z>
);<z>
equals(pluginName)) {<z>
;<z>
;<z>
) {<z>
int result;<z>
;<z>
brand.hashCode();<z>
return result;<z>
Exception<z>
._operationRequest = key;<z>
, value );<z>
onCreate(Bundle savedInstanceState) {<z>
savedInstanceState);<z>
R.layout.main);<z>
R.id.textarea);<z>
getFilesDir()<z>
+ "/test.raw";<z>
);<z>
audioFileStream);<z>
audioRecorder);<z>
;<z>
audioRecorder.setRecording(true);<z>
this) {<z>
);<z>
(InterruptedException e) {<z>
);<z>
setRecording(false);<z>
.join();<z>
(InterruptedException e) {<z>
);<z>
= audioFileStream.getHeader();<z>
f = null;<z>
null;<z>
(new File(<z>
getFilesDir() + "/test_audio.raw")));<z>
toString()<z>
;<z>
+ "\n");<z>
append("AudioEncoding: "<z>
()));<z>
recvFrame()) != null) {<z>
++;<z>
append("\n Exceeding number of bytes: "<z>
).toString() + "\n");<z>
+ "\n");<z>
;<z>
) {<z>
;<z>
{<z>
e.printStackTrace();<z>
catch (Exception e) {<z>
();<z>
Override protected void starting() {<z>
super.starting();<z>
.setRotationAxis(Rotate.X_AXIS);<z>
getScene().getCamera();<z>
(new PerspectiveCamera());<z>
, EOR{<z>
read();<z>
"";<z>
){<z>
reader.unread(i);<z>
return this.readDelimitedField();<z>
builder=new StringBuilder();<z>
i!='\r' && i!='\n'){<z>
=(char)i;<z>
);<z>
read();<z>
this.reader.unread(i);<z>
.toString());<z>
field;<z>
clause) {<z>
getFirstClause();<z>
trace("leftChild -->" + c);<z>
;<z>
getText(final Object... args) {<z>
format(text, args);<z>
(final IllegalFormatException e) {<z>
getMessage() + ")";<z>
IAggregateFunction getAggregateFunction( String sName )<z>
inEclipseEnv( ) )<z>
,<z>
);<z>
oAggregateFunction != null )<z>
( ILogger.INFORMATION,<z>
getString( "info.eclenv.creating.function",<z>
{<z>
getClass( )<z>
( )<z>
ULocale.getDefault( )<z>
);<z>
oAggregateFunction;<z>
log( ILogger.FATAL,<z>
"error.eclenv.cannot.find.function",<z>
{<z>
)<z>
) );<z>
< saBaseAggregateFunctions.length; i++ )<z>
0].equalsIgnoreCase( sName ) )<z>
.INFORMATION,<z>
.getString( "info.stdenv.creating.function",<z>
{<z>
][1]<z>
)<z>
;<z>
] );<z>
FATAL,<z>
getString( "error.stdenv.cannot.find.function",<z>
Object[]{<z>
.getDefault( )<z>
) );<z>
;<z>
) {<z>
;<z>
("Building WorkManager");<z>
value = value;<z>
{<z>
= keepStackSize();<z>
;<z>
rule__XFeatureCall__Group_2_2__0__Impl();<z>
state._fsp--;<z>
state.failed) return ;<z>
FOLLOW_rule__XFeatureCall__Group_2_2__1_in_rule__XFeatureCall__Group_2_2__023142);<z>
;<z>
_fsp--;<z>
) return ;<z>
catch (RecognitionException re) {<z>
re);<z>
re);<z>
restoreStackSize(stackSize);<z>
String refName) {<z>
= "";<z>
;<z>
authTermInfo = new AuthorityTermInfo(refNameTokens);<z>
name = authTermInfo.name;<z>
Exception e) {<z>
name;<z>
final boolean iIgnoreCache) {<z>
);<z>
iPojo == null)<z>
;<z>
, true);<z>
UNMARSHALLING);<z>
(record, iFetchPlan, iIgnoreCache);<z>
record, iPojo, iFetchPlan);<z>
finally {<z>
STATUS.LOADED);<z>
this;<z>
(@NotNull XmlTag root) {<z>
>>();<z>
;<z>
.getInstance(project);<z>
new XmlRecursiveElementVisitor() {<z>
) {<z>
(!isTagClosed(tag)) {<z>
;<z>
;<z>
project);<z>
XmlTag> pointer : tagToClose) {<z>
pointer.getElement();<z>
tag != null) {<z>
.findChild(tag.getNode());<z>
(child != null) {<z>
;<z>
.getVirtualFile();<z>
if (file != null) {<z>
(file);<z>
;<z>
runWriteAction(new Runnable() {<z>
void run() {<z>
);<z>
);<z>
documentManager.commitAllDocuments();<z>
public FormatInstance export() {<z>
FormatInstance sdrfI = super.export();<z>
.getFormat();<z>
getSection("sdrfFile");<z>
sdrfFileI = new SectionInstance(sdrfFile);<z>
));<z>
rec = new Record(sdrfFileI);<z>
"sdrf.txt");<z>
addRecord(rec);<z>
.addSectionInstance(sdrfFileI);<z>
return sdrfI;<z>
visitPackageDef(GroovySourceAST t, int visit) {<z>
) {<z>
(t);<z>
getCurrentOCLVersion() {<z>
;<z>
.getHeaders().get("Bundle-Version");<z>
instanceof String) {<z>
((String)oclVersion);<z>
oclOSGiVersion.getMinor() >= 3) {<z>
version = OCLVersion.GALILEO;<z>
.getMajor() > 1) {<z>
;<z>
return version;<z>
{<z>
JBPopup hint = myTextFieldPanel.getHint();<z>
final Object element = getChosenElement();<z>
!= null) {<z>
element instanceof PsiElement) {<z>
updateHint((PsiElement)element);<z>
) {<z>
;<z>
if (o instanceof PsiElement) {<z>
((PsiElement)o);<z>
,<z>
{<z>
super(facetName);<z>
();<z>
.size = size;<z>
this.comparatorType = comparatorType;<z>
.numberOfShards = context.numberOfShards();<z>
context.smartFieldMappers(keyFieldName);<z>
{<z>
keyFieldName;<z>
.DefaultTypes.STRING;<z>
else {<z>
.explicitTypeInNameWithDocMapper()) {<z>
)));<z>
names().indexName();<z>
fieldDataType();<z>
) {<z>
= context.smartFieldMappers(valueFieldName);<z>
!smartMappers.hasMapper()) {<z>
valueFieldName + "]");<z>
).names().indexName();<z>
;<z>
;<z>
;<z>
{<z>
.valueFieldName = null;<z>
;<z>
, script, params);<z>
.script);<z>
clearout() {<z>
Writer() {<z>
int o, int c) {}<z>
) {}<z>
void flush() {}<z>
;<z>
buildInstanceCreatorConfig(List<SmooksResourceConfiguration> resources) {<z>
= (SmooksResourceConfiguration) config.clone();<z>
.removeParameter("beanId");<z>
beanIdName);<z>
.removeParameter("beanClass");<z>
setParameter("beanClass", beanClassName);<z>
(beanFactory != null) {<z>
removeParameter("beanFactory");<z>
.setParameter("beanFactory", beanFactory);<z>
.removeParameter("bindings");<z>
!create) {<z>
setSelector(SmooksResourceConfiguration.DOCUMENT_VOID_SELECTOR);<z>
(BeanInstanceCreator.class.getName());<z>
;<z>
, PacketPipeInteger packet) {<z>
packet.posZ);<z>
if (pipe == null) {<z>
) {<z>
pipe;<z>
()<z>
packet.posZ);<z>
) instanceof ModuleItemSink) {<z>
.posZ, packet.integer,<z>
player);<z>
) {<z>
packet.integer,<z>
(Player)player);<z>
) instanceof ModuleProvider) {<z>
(), (Player)player);<z>
;<z>
packet.integer) instanceof ModuleAdvancedExtractor) {<z>
)player);<z>
DEEP_WRAP = new NativeHelper("wrap") {<z>
Method build() {<z>
("void"), Visibility.PUBLIC,<z>
);<z>
NativeVariable.createParameter(method, _structType, "from",<z>
);<z>
_nativeType, "to",<z>
.BYREF);<z>
_members) {<z>
, to);<z>
null)<z>
;<z>
method;<z>
Comparator<P> comparator) {<z>
.notNull(information);<z>
information = information;<z>
<P>(comparator);<z>
, this).getConstructor();<z>
: new TreeSet<Association<P>>(<z>
P>(comparator));<z>
generateFieldPart() {<z>
);<z>
new StringBuffer();<z>
Field field;<z>
++) {<z>
Field)fields[i];<z>
;<z>
{<z>
", ");<z>
(" ");<z>
void onPause() {<z>
);<z>
!= null) {<z>
);<z>
= null;<z>
mAsker.onPause();<z>
;<z>
int id) {<z>
RenderPriority rp : values()) {<z>
== id) {<z>
return rp;<z>
;<z>
()<z>
prev != null)<z>
prev.next = atom.next;<z>
if (atom.next != null)<z>
atom.next.prev = atom.prev;<z>
.prev = atom.next = null;<z>
{<z>
getChildren()) {<z>
instanceof JerseyBuildRequestParameter) {<z>
;<z>
.getMappings()) {<z>
;<z>
mapping.getSrc());<z>
createExpression(mapping.getDest());<z>
);<z>
;<z>
sb.append(".");<z>
evaluation);<z>
.append(";");<z>
RecognitionException ex) {<z>
);<z>
[] nodes) throws RepositoryException<z>
if (isSystemSession)<z>
return true;<z>
< nodes.length; i++)<z>
null)<z>
].getNodeId());<z>
nodeData == null<z>
.getUserState()<z>
.getIdentity()))<z>
false;<z>
)<z>
))<z>
());<z>
return true;<z>
{<z>
new Properties();<z>
InputStream stream;<z>
class.getResourceAsStream(<z>
);<z>
("ConfigReader: properties file = " + stream);<z>
== null)<z>
);<z>
if (stream != null){<z>
;<z>
stream.close();<z>
catch (FileNotFoundException e1) {<z>
e1.printStackTrace();<z>
IOException e) {<z>
();<z>
Object value) {<z>
("max_exec")) {<z>
Integer) value;<z>
1) {<z>
;<z>
(name.equals("init_complexes")) {<z>
(Integer) value;<z>
initComplexes < 1) {<z>
IllegalArgumentException("init_complexes: " + initComplexes);<z>
name.equals("points_per_complex")) {<z>
value;<z>
(name.equals("points_per_subcomplex")) {<z>
pointsPerSubcomplex = (Integer) value;<z>
(name.equals("evolutions")) {<z>
value;<z>
(name.equals("min_complexes")) {<z>
= (Integer) value;<z>
(minComplexes < 1) {<z>
throw new IllegalArgumentException("minComplexes: " + minComplexes);<z>
{<z>
shufflingLoops = (Integer) value;<z>
1) {<z>
("shufflingLoops: " + shufflingLoops);<z>
) {<z>
;<z>
(ofPercentage <= 0.0 || ofPercentage > 1.0) {<z>
"of_percentage: " + ofPercentage);<z>
name.equals("parameter")) {<z>
return params;<z>
equals("objfunc")) {<z>
();<z>
);<z>
;<z>
} else {<z>
new IllegalArgumentException(name.toString());<z>
LEAF;<z>
throws OMException {<z>
{<z>
("The attachments stream can only be accessed once; either by using the IncomingAttachmentStreams class or by getting a collection of AttachmentPart objects. They cannot both be called within the life time of the same service request.");<z>
= true;<z>
;<z>
) ? fileStorageThreshold : 0;<z>
MIMEBodyPartInputStream partStream =<z>
,<z>
PUSHBACK_SIZE);<z>
getLifecycleManager(), partStream,<z>
;<z>
partIndex++;<z>
part;<z>
(null) {<z>
(Ratio a, Ratio b) {<z>
;<z>
private boolean jj_3R_45() {<z>
jj_scan_token(AT)) return true;<z>
true;<z>
return false;<z>
Element element, List loaded) {<z>
> children = XMLPersistenceHelper.getChildElements(element);<z>
: children) {<z>
;<z>
if (o != null) {<z>
.add(o);<z>
,<z>
provider) throws NoSuchAlgorithmException,<z>
GetInstance.getInstance("CertPathValidator",<z>
, algorithm, provider);<z>
.impl,<z>
);<z>
IOException {<z>
;<z>
(this.cascadeType != null)) {<z>
));<z>
MapSqlParameterSource();<z>
);<z>
;<z>
));<z>
"validationBarcode", sequencerPartitionContainer.getValidationBarcode());<z>
{<z>
);<z>
UNSAVED_ID) {<z>
= new SimpleJdbcInsert(template)<z>
TABLE_NAME)<z>
("containerId");<z>
.executeAndReturnKey(params);<z>
(newId.longValue());<z>
, sequencerPartitionContainer.getContainerId());<z>
namedTemplate = new NamedParameterJdbcTemplate(template);<z>
;<z>
)) {<z>
(template)<z>
.withTableName("SequencerPartitionContainer_Partition");<z>
SequencerPoolPartition l : sequencerPartitionContainer.getPartitions()) {<z>
getSecurityProfile());<z>
partitionId = partitionDAO.save(l);<z>
= new MapSqlParameterSource();<z>
addValue("container_containerId", sequencerPartitionContainer.getContainerId())<z>
, partitionId);<z>
(flParams);<z>
catch (DuplicateKeyException dke) {<z>
.getMessage());<z>
) {<z>
;<z>
.getContainerId();<z>
private static void makeEntry(<z>
> targetMap,<z>
currentKeyParam,<z>
NotNull StringBuilder valueBuilderParam,<z>
boolean trim)<z>
ParameterParseException {<z>
: valueBuilderParam.toString();<z>
targetMap.containsKey(currentKeyParam))<z>
new ParameterParseException<z>
;<z>
(currentKeyParam, value);<z>
{<z>
(<z>
;<z>
.getCommand("net.refractions.udig.tool.edit.clearAction");<z>
null){<z>
);<z>
null;<z>
command.setHandler(null);<z>
final public ByteBuffer slice()<z>
MappedByteFileBuffer(this);<z>
A;<z>
)<z>
;<z>
correctItemFeedback = "";<z>
"";<z>
generalItemFeedback = "";<z>
.equals(TypeIfc.ESSAY_QUESTION)) {<z>
= "";<z>
) {<z>
entrySet()) {<z>
.getKey();<z>
endsWith("_ALL")) {<z>
);<z>
("_C")) {<z>
getValue());<z>
if (type.endsWith("_IC")) {<z>
(String) af.getValue());<z>
+ correctItemFeedback;<z>
generalItemFeedback + incorrectItemFeedback;<z>
> af : map.entrySet()) {<z>
= af.getKey();<z>
type.endsWith("_ALL")) {<z>
getValue());<z>
correctItemFeedback = generalItemFeedback;<z>
;<z>
);<z>
.setCorrectItemFeedback(correctItemFeedback);<z>
incorrectItemFeedback);<z>
,<z>
typeDefinition)<z>
BuildException {<z>
;<z>
= current.getChildNodes(JMenuBar.class);<z>
: menus) {<z>
;<z>
setJMenuBar(bar);<z>
portletDataContext)<z>
Exception {<z>
.getZipEntryAsString(<z>
) + "/ratings.xml");<z>
xml == null) {<z>
= SAXReaderUtil.read(xml);<z>
document.getRootElement();<z>
);<z>
assetElement : assetElements) {<z>
assetElement.attributeValue("path");<z>
attributeValue("class-name");<z>
.getLong(<z>
));<z>
List<String> zipFolderEntries =<z>
.getZipFolderEntries(path);<z>
();<z>
for (String zipFolderEntry : zipFolderEntries) {<z>
RatingsEntry ratingsEntry =<z>
.getZipEntryAsObject(<z>
);<z>
ratingsEntry != null) {<z>
add(ratingsEntry);<z>
(<z>
);<z>
String getFirstCfgId() {<z>
fCfgMap.isEmpty()) {<z>
next();<z>
return null;<z>
Method findMethod(String name, String sig) {<z>
.getVM().getSymbolTable();<z>
probe(name);<z>
= syms.probe(sig);<z>
|| sigSym == null) {<z>
return null;<z>
return findMethod(nameSym, sigSym);<z>
, final String<z>
{<z>
) ;<z>
;<z>
) {<z>
!minimized;<z>
if (minimized) {<z>
);<z>
(collapseButton);<z>
(expandButton);<z>
} else {<z>
CENTER);<z>
(expandButton);<z>
add(collapseButton);<z>
event) {<z>
;<z>
BufferedReader r;<z>
));<z>
f);<z>
line;<z>
int i = 0;<z>
letterListModel.clear();<z>
.readLine()) != null) {<z>
line.charAt(0),<z>
OCR.DOWNSAMPLE_WIDTH, OCR.DOWNSAMPLE_HEIGHT);<z>
.add(i++, ds);<z>
= 2;<z>
(); y++) {<z>
); x++) {<z>
'1');<z>
.close();<z>
;<z>
(null);<z>
, "Loaded from 'sample.dat'.",<z>
.PLAIN_MESSAGE);<z>
{<z>
);<z>
"Training",<z>
;<z>
public void initializeAnnotators() {<z>
getExtensionPoint(ExtensionPoints.INSPECTIONS_GRAPH_ANNOTATOR);<z>
;<z>
: graphAnnotators) {<z>
);<z>
myGraphAnnotators) {<z>
(graphAnnotator instanceof RefGraphAnnotatorEx) {<z>
)graphAnnotator).initialize(this);<z>
char[] toCharArray(int[] db,<z>
,<z>
, int b2Max)<z>
1)];<z>
0;<z>
) {<z>
b2Min; b2 <= b2Max; b2++) {<z>
b1 * 256 + b2] & 0xffff);<z>
;<z>
{<z>
== o) {<z>
return true;<z>
);<z>
stopListening() {<z>
if (property != null) {<z>
;<z>
);<z>
.removeListener(dropPotentialFeedbackListener);<z>
) throws RemoteException {<z>
(!isGranted()) {<z>
.getCode();<z>
length();<z>
if (size == 0) {<z>
!mDataFile.exists()) {<z>
.ERR_NOT_FOUND.getCode();<z>
size;<z>
(NullPointerException e) {<z>
HqmeError.ERR_NOT_FOUND.getCode();<z>
void notifyChanged(Notification notification) {<z>
notification);<z>
.getFeatureID(GoalieStats.class)) {<z>
HockeyleaguePackage.GOALIE_STATS__YEAR:<z>
.GOALIE_STATS__GAMES_PLAYED_IN:<z>
:<z>
GOALIE_STATS__GOALS_AGAINST_AVERAGE:<z>
.GOALIE_STATS__WINS:<z>
case HockeyleaguePackage.GOALIE_STATS__LOSSES:<z>
:<z>
:<z>
:<z>
case HockeyleaguePackage.GOALIE_STATS__GOALS_AGAINST:<z>
GOALIE_STATS__SAVES:<z>
GOALIE_STATS__PENALTY_MINUTES:<z>
.GOALIE_STATS__GOALS:<z>
case HockeyleaguePackage.GOALIE_STATS__ASSISTS:<z>
:<z>
;<z>
.notifyChanged(notification);<z>
(final DoubleDataset dataset, final boolean wrap) {<z>
;<z>
(wrap) {<z>
.shape;<z>
;<z>
dataset.dataShape;<z>
.name;<z>
metadataStructure;<z>
.data;<z>
);<z>
new String(dataset.name);<z>
)<z>
= dataset.metadataStructure.clone();<z>
] gdata = dataset.data;<z>
if (dataset.isContiguous()) {<z>
);<z>
else {<z>
);<z>
IndexIterator iter = dataset.getIterator();<z>
); i++) {<z>
iter.index];<z>
dataset.errorValue;<z>
dataset.errorData;<z>
throws IOException {<z>
;<z>
0) {<z>
= is.skip(n);<z>
if (i <= 0)<z>
n -= i;<z>
ObjectOutputStream out) throws IOException {<z>
out.defaultWriteObject();<z>
getAlteredFieldsBitMask();<z>
.writeShort(alteredFieldsBitMask);<z>
(id != null) {<z>
);<z>
null) {<z>
);<z>
stopTimestamp != null) {<z>
writeObject(stopTimestamp);<z>
(lastAccessTime != null) {<z>
lastAccessTime);<z>
) {<z>
);<z>
) {<z>
.writeBoolean(expired);<z>
if (host != null) {<z>
);<z>
isEmpty(attributes)) {<z>
.writeObject(attributes);<z>
cloneLinkedNode() {<z>
this.siteevent);<z>
;<z>
{<z>
())) {<z>
.getPlayer(opponentId);<z>
{<z>
;<z>
0; i < cardsCount; i++) {<z>
(game);<z>
if (card != null)<z>
, false);<z>
;<z>
, Player player, GroupEvent event)<z>
= group;<z>
this.player = player;<z>
event;<z>
(ActionEvent e)<z>
(debug)<z>
System.out.println("action Performed in NameSpaceEditor");<z>
Action("Down", null, "down") {<z>
) {<z>
move(0, 1);<z>
public void notifyChanged(Notification notification) {<z>
updateChildren(notification);<z>
class)) {<z>
UimPackage.UIM_DATA_TABLE__NAME:<z>
UIM_DATA_TABLE__UNDER_USER_CONTROL:<z>
case UimPackage.UIM_DATA_TABLE__PREFERRED_WIDTH:<z>
.UIM_DATA_TABLE__PREFERRED_HEIGHT:<z>
:<z>
case UimPackage.UIM_DATA_TABLE__FILL_VERTICALLY:<z>
), false, true));<z>
UimPackage.UIM_DATA_TABLE__VISIBILITY:<z>
:<z>
:<z>
.UIM_DATA_TABLE__BINDING:<z>
case UimPackage.UIM_DATA_TABLE__ACTIONS_ON_MULTIPLE_SELECTION:<z>
));<z>
);<z>
] findByUuid_PrevAndNext(long pageId, String uuid,<z>
OrderByComparator orderByComparator)<z>
NoSuchPageException, SystemException {<z>
pageId);<z>
session = null;<z>
();<z>
WikiPageImpl[3];<z>
getByUuid_PrevAndNext(session, wikiPage, uuid,<z>
orderByComparator, true);<z>
array[1] = wikiPage;<z>
= getByUuid_PrevAndNext(session, wikiPage, uuid,<z>
, false);<z>
return array;<z>
) {<z>
e);<z>
;<z>
throws<z>
getRSSDBConnection();<z>
= "DELETE FROM RM_DATABASE_USER WHERE username = ? AND rss_instance_name = ? AND tenant_id = ?";<z>
(sql);<z>
(1, username);<z>
(2, rssInstanceName);<z>
());<z>
.executeUpdate();<z>
stmt.close();<z>
SQLException e) {<z>
new RSSManagerException("Error occurred while dropping the database user '" +<z>
username + "'", e);<z>
} finally {<z>
(conn != null) {<z>
;<z>
{<z>
e);<z>
rule__OperationCS__QualifierAssignment_0_0_1() throws RecognitionException {<z>
);<z>
.backtracking==0 ) {<z>
.getOperationCSAccess().getQualifierDefinitionKeyword_0_0_1_0());<z>
( state.backtracking==0 ) {<z>
.getOperationCSAccess().getQualifierDefinitionKeyword_0_0_1_0());<z>
failed) return ;<z>
{<z>
).getQualifierDefinitionKeyword_0_0_1_0());<z>
.backtracking==0 ) {<z>
.getQualifierDefinitionKeyword_0_0_1_0());<z>
{<z>
(re);<z>
recover(input,re);<z>
stackSize);<z>
throws IOException<z>
& 0xff;<z>
((len & 0x80) == 0)<z>
;<z>
int remain = len & 0x7F;<z>
)<z>
return -1;<z>
len = 0;<z>
while (remain > 0)<z>
<< 8;<z>
);<z>
--;<z>
len;<z>
(int range, Paint paint) {<z>
range >= 0)<z>
!= null)) {<z>
[range] = paint;<z>
;<z>
nullSafeSet(<z>
int index,<z>
session)<z>
throws SQLException {<z>
target == null) {<z>
;<z>
Long)target);<z>
) {<z>
);<z>
setModel(model);<z>
(cellRenderer);<z>
model.getSize() > 0) {<z>
;<z>
Gateways.Events, Gateway>() {<z>
> e) {<z>
switch (e.getEvent()) {<z>
case ADDED_GATEWAY:<z>
ADDED_GATEWAYS:<z>
CLEARED_GATEWAYS:<z>
:<z>
:<z>
case FAVORITES_UPDATED:<z>
HIDDEN_UPDATED:<z>
SwingUtilities.invokeLater(new Runnable() {<z>
public void run() {<z>
);<z>
});<z>
;<z>
() {<z>
itemStateChanged(ItemEvent e) {<z>
switch (e.getStateChange()) {<z>
:<z>
);<z>
:<z>
cellRenderer.generateTooltip(getSelectedGateway()));<z>
);<z>
boolean ok(Object o)<z>
==null)<z>
return value==null;<z>
.equals(value))<z>
true;<z>
)<z>
(Object[] )o;<z>
s.length; i++)<z>
s[i].equals(value))<z>
return true;<z>
return false;<z>
) {<z>
throwsException(SSAAbstractInvokeInstruction node) {<z>
true;<z>
onResume()<z>
super.onResume();<z>
loadPrefs();<z>
;<z>
(mHistory.size() > 0) {<z>
lv = this.getListView();<z>
setSelection(0);<z>
;<z>
showNotify()<z>
);<z>
this.lastSwitchTime = 0;<z>
{<z>
== null) {<z>
false;<z>
();<z>
int x, int y){<z>
new Entity(x, y, graphic);<z>
if (layer != 0)<z>
e.setLayer(layer);<z>
active = false;<z>
e);<z>
directoryScanner )<z>
= directoryScanner;<z>
= true;<z>
RecognitionException {<z>
);<z>
oldContent,<z>
String newContent,<z>
String fileName,<z>
String format,<z>
String path) {<z>
this.oldContent = oldContent;<z>
.newContent = newContent;<z>
.fileName = fileName;<z>
.format = format;<z>
= path;<z>
(OcilVariables variables) throws OcilException {<z>
();<z>
this.variables = variables;<z>
.isSetVariable()) {<z>
getVariables().getVariable()) {<z>
var.getId(), var);<z>
public void onCreate(Bundle savedInstanceState) {<z>
super.onCreate(savedInstanceState);<z>
().getExtras();<z>
orarioId = 0;<z>
destinazione = null;<z>
null) {<z>
;<z>
"destinazione");<z>
"linea");<z>
= PassaggioList.getById(orarioId);<z>
.getIdPalina());<z>
"de");<z>
;<z>
== null)<z>
show();<z>
;<z>
(R.layout.standard_listview_layout);<z>
id.titel);<z>
;<z>
();<z>
(R.id.line);<z>
R.id.from);<z>
id.to);<z>
+ " " + line.toString());<z>
part.toString());<z>
toString());<z>
();<z>
1) {<z>
pos);<z>
Tokenizer tokenizer, ClassInfo cl, String token)<z>
{<z>
= false;<z>
boolean prot = false;<z>
boolean pkgpriv = false;<z>
boolean stat = false;<z>
= false;<z>
;<z>
;<z>
boolean syn = false;<z>
;<z>
;<z>
= null;<z>
method;<z>
.equals(token)) {<z>
;<z>
.requireToken();<z>
"protected".equals(token)) {<z>
prot = true;<z>
.requireToken();<z>
} else {<z>
true;<z>
)) {<z>
;<z>
;<z>
.equals(token)) {<z>
true;<z>
();<z>
.equals(token)) {<z>
true;<z>
requireToken();<z>
token)) {<z>
;<z>
();<z>
token)) {<z>
;<z>
tokenizer.requireToken();<z>
assertIdent(tokenizer, token);<z>
= token;<z>
requireToken();<z>
);<z>
name = token;<z>
TypeInfo>() ,<z>
,<z>
false ,<z>
, "method", null , null ,<z>
),<z>
pos(),<z>
;<z>
(dep);<z>
tokenizer.requireToken();<z>
(!"(".equals(token)) {<z>
, tokenizer.getLine());<z>
.requireToken();<z>
, token);<z>
tokenizer.requireToken();<z>
if ("throws".equals(token)) {<z>
);<z>
token)) {<z>
getLine());<z>
(method);<z>
element) throws CoreException {<z>
(file));<z>
(new ISchedulingRule[] {<z>
().modifyRule(projectFile),<z>
,<z>
).getRuleFactory().deleteRule(projectFile)<z>
;<z>
utfString;<z>
null;<z>
element);<z>
);<z>
} finally {<z>
!= null)<z>
;<z>
).beginRule(rule, null);<z>
(projectFile);<z>
{<z>
, new NullProgressMonitor());<z>
{<z>
isHidden()) {<z>
System.getProperty("os.name");<z>
null && os.startsWith("Win")) {<z>
;<z>
NullProgressMonitor());<z>
) + "\n** Error occured because of file status <hidden>." +<z>
);<z>
);<z>
e);<z>
{<z>
, new NullProgressMonitor());<z>
;<z>
} finally {<z>
getJobManager().endRule(rule);<z>
} catch (IOException e) {<z>
createCoreException(e);<z>
int wrappingStyle) {<z>
{<z>
WRONG_ARGUMENT;<z>
{<z>
:<z>
case WRAP_COMPACT_FIRST_BREAK :<z>
case WRAP_NEXT_PER_LINE :<z>
WRAP_NEXT_SHIFTED :<z>
WRAP_NO_SPLIT :<z>
WRAP_ONE_PER_LINE :<z>
WRONG_ARGUMENT;<z>
.parseInt(value);<z>
SPLIT_MASK);<z>
) {<z>
WRAP_COMPACT :<z>
.M_COMPACT_SPLIT;<z>
case WRAP_COMPACT_FIRST_BREAK :<z>
Alignment.M_COMPACT_FIRST_BREAK_SPLIT;<z>
case WRAP_NEXT_PER_LINE :<z>
;<z>
case WRAP_NEXT_SHIFTED :<z>
;<z>
:<z>
Alignment.M_ONE_PER_LINE_SPLIT;<z>
return String.valueOf(existingValue);<z>
(NumberFormatException e) {<z>
WRONG_ARGUMENT;<z>
) throws QueryException {<z>
) {<z>
);<z>
() throws QueryException {<z>
;<z>
;<z>
= checkDBNode(it);<z>
: node.pre);<z>
, final int firstDimension, final int secondDimension,<z>
int fixedDimension, final long slice) throws Exception {<z>
, slice);<z>
this.slice = slice;<z>
WebSocketRequestHandler handler)<z>
(handler);<z>
, "binaryMessage");<z>
CDockableAdapter(){<z>
public void singleTabShownChanged( CDockable cdockable ){<z>
intern();<z>
) ){<z>
);<z>
key)<z>
key);<z>
)<z>
null;<z>
return Long.parseLong(v);<z>
)<z>
SEVERE, "Configuration.ConversionError", v);<z>
return null;<z>
() {<z>
DeviceDetails(<z>
new ManufacturerDetails("4th Line", "http://www.4thline.org/"),<z>
"MYMODEL", "TEST Device", "ONE", "http://www.4thline.org/foo"),<z>
{<z>
"DMS", DLNADoc.Version.V1_5),<z>
)<z>
new DLNACaps(new String[] {<z>
, "image-upload", "audio-upload"<z>
serviceClass) {<z>
= getLocalServiceProvider(serviceClass);<z>
provider<z>
(getBeanContextServicesPeer(),<z>
serviceClass));<z>
BigDecimal quantity) {<z>
);<z>
(0);<z>
newOrder.setVersionNum(null);<z>
getId());<z>
Constants.ORDER_STATUS_ACTIVE));<z>
);<z>
;<z>
OrderDAS().save(newOrder);<z>
protected void defineWidgets() {<z>
super.defineWidgets();<z>
, new CmsVfsFileWidget()));<z>
MainFrame frame) {<z>
= frame;<z>
"Open 9-patch...");<z>
putValue(SHORT_DESCRIPTION, "Open...");<z>
LONG_DESCRIPTION, "Open 9-patch...");<z>
, KeyEvent.VK_O);<z>
KeyEvent.VK_O,<z>
getDefaultToolkit().getMenuShortcutKeyMask()));<z>
fetchByCompanyId_Last(long companyId,<z>
{<z>
);<z>
, count - 1, count,<z>
orderByComparator);<z>
(!list.isEmpty()) {<z>
(0);<z>
return null;<z>
private void drawLevel(){<z>
);<z>
60, "Level 1");<z>
"Level 2");<z>
450, 60, "Back to Main");<z>
glDisable(GL11.GL_TEXTURE_2D);<z>
GL_BLEND);<z>
HashMap<String, String> phoneData) {<z>
null && phoneData.containsKey("prefix")<z>
)<z>
phoneData.get("prefix") != null<z>
&& convertToLong(phoneData) > 0);<z>
(OsmandApplication application) {<z>
);<z>
, 1000, 5000};<z>
this.isStandardFilter = true;<z>
isNotConstantFieldInitializer(final PsiExpression expression) {<z>
PsiField) expression.getParent() : null;<z>
== parentField.getInitializer() &&<z>
) &&<z>
);<z>
, String string) {<z>
;<z>
;<z>
;<z>
character;<z>
length();<z>
) {<z>
length();<z>
<= length) && buffer.substring(<z>
,<z>
0 : 1;<z>
0; i < chars; i++) {<z>
character = string.charAt(i);<z>
switch (character) {<z>
case '\u0020':<z>
case '\u0009':<z>
case '\u000C':<z>
200B':<z>
'\r':<z>
'\n':<z>
) {<z>
state = 1;<z>
{<z>
);<z>
state = 2;<z>
buffer.append(character);<z>
) {<z>
= new SimpleDateFormat("dd-M-yyyy");<z>
(value);<z>
) {<z>
("Error while parsing date:" + e.getStackTrace());<z>
return null;<z>
separator) {<z>
StringBuilder();<z>
value : values) {<z>
(separator);<z>
(sb.length() > 0) {<z>
));<z>
;<z>
IScope scope) {<z>
= model.getModelDescriptor();<z>
result = new LinkedHashSet<SModelDescriptor>();<z>
{<z>
getAccessoryModels()) {<z>
sourceModel) {<z>
);<z>
!= null){<z>
);<z>
, scope)) {<z>
!= sourceModel) {<z>
(importedModel);<z>
sourceModel != null) {<z>
sourceModel.getModule();<z>
) {<z>
);<z>
ArrayList<SModelDescriptor>(result);<z>
protected static int getReadTimeout() {<z>
;<z>
;<z>
} catch (Exception e) {<z>
;<z>
void setMode(String mode) {<z>
? null : mode.trim());<z>
(value)) {<z>
= MODE_JSTL;<z>
isDebugEnabled()) {<z>
"]");<z>
if ("resource".equalsIgnoreCase(value)) {<z>
MODE_RESOURCE_BUNDLE;<z>
)) {<z>
"]");<z>
else {<z>
;<z>
{<z>
+ "]");<z>
void logLoggingError(Throwable e, String message) {<z>
{<z>
,<z>
+ "' due to error in logger: " + e.toString(),<z>
e);<z>
void updateOutput()<z>
filteredTraces = new ArrayList<StackTrace>();<z>
();<z>
new boolean[1];<z>
];<z>
.syncExec(new Runnable()<z>
run()<z>
(newToggle.getSelection())<z>
State.NEW);<z>
))<z>
.add(Thread.State.RUNNABLE);<z>
(blockedToggle.getSelection())<z>
(Thread.State.BLOCKED);<z>
)<z>
add(Thread.State.WAITING);<z>
if (timedwaitingToggle.getSelection())<z>
TIMED_WAITING);<z>
if (terminatedToggle.getSelection())<z>
.TERMINATED);<z>
0] = namesToggle.getSelection();<z>
();<z>
);<z>
: traces)<z>
.contains(trace.state))<z>
add(trace);<z>
>();<z>
for (StackTrace trace : filteredTraces)<z>
);<z>
null)<z>
List<StackTrace>>();<z>
.put(trace.stackIgnoreLocks, locksMap);<z>
trace.stack);<z>
== null)<z>
StackTrace>();<z>
);<z>
);<z>
;<z>
stackTraceCounts.entrySet());<z>
(sortedTraces, new EntryComparator());<z>
) + "\n\n");<z>
)<z>
traces = e.getValue();<z>
List<StackTrace>>();<z>
[0])<z>
;<z>
lTraces : traces.values())<z>
);<z>
), lCombinedTraces);<z>
));<z>
))<z>
) + " threads with trace:\n");<z>
(resultText, lOutput.getValue());<z>
includeNames[0])<z>
resultText, lOutput.getValue());<z>
append("Stack:\n");<z>
getKey();<z>
) == 0)<z>
append(" - no stack trace\n");<z>
traceline : trace)<z>
))<z>
);<z>
+ traceline + "\n");<z>
;<z>
;<z>
()<z>
void run()<z>
(true);<z>
outputText.setText(output);<z>
setSelection(1);<z>
);<z>
[] getElementChildren() {<z>
);<z>
);<z>
));<z>
]);<z>
resource) {<z>
boolean built = false;<z>
|| resource instanceof IFolder) {<z>
SymfonyNature.NATURE_ID);<z>
IFile) {<z>
;<z>
resource;<z>
getFullPath();<z>
();<z>
);<z>
(resource.getProject());<z>
BuildPathUtils.isContainedInBuildpath(resource, scriptProject);<z>
(resource.getFileExtension()) && doIndex)<z>
(resource);<z>
built = true;<z>
.getFileExtension()) && doIndex) {<z>
))) {<z>
;<z>
;<z>
contains("routing")) {<z>
);<z>
;<z>
} else {<z>
.contains("translations")) {<z>
);<z>
Exception e) {<z>
(e);<z>
;<z>
)<z>
;<z>
= -1;<z>
-1;<z>
;<z>
= 0;<z>
= 0;<z>
= false;<z>
;<z>
;<z>
;<z>
2D;<z>
0.5F);<z>
<String> getJVMClasses() {<z>
= new ArrayList<String>(1);<z>
.add(JVM_CLASS);<z>
jvmClasses.add(STARTUP_CLASS);<z>
return jvmClasses;<z>
{<z>
long maintainTime = 0;<z>
running) {<z>
while (paused && running) {<z>
1000);<z>
e) {<z>
{<z>
1) {<z>
) {<z>
1 && running) {<z>
;<z>
.wait();<z>
{<z>
running) {<z>
0) {<z>
this) {<z>
successCount = 0;<z>
; i--) {<z>
Poll.add<z>
i], Poll.APR_POLLIN);<z>
== Status.APR_SUCCESS) {<z>
;<z>
{<z>
(comet) {<z>
SocketStatus.ERROR);<z>
{<z>
i]);<z>
{<z>
keepAliveCount += successCount;<z>
;<z>
maintainTime += pollTime;<z>
serverPollset, pollTime, desc, true);<z>
0) {<z>
keepAliveCount -= rv;<z>
< rv; n++) {<z>
== Poll.APR_POLLHUP)<z>
Poll.APR_POLLERR) == Poll.APR_POLLERR)<z>
1], SocketStatus.OPEN)))<z>
1])))) {<z>
) {<z>
.DISCONNECT);<z>
else {<z>
;<z>
} else if (rv < 0) {<z>
rv;<z>
(errn != Status.EINTR)) {<z>
) {<z>
;<z>
)));<z>
{<z>
();<z>
);<z>
> 1000000L && running) {<z>
serverPollset, desc, true);<z>
0;<z>
if (rv > 0) {<z>
;<z>
< rv; n++) {<z>
comet) {<z>
, SocketStatus.TIMEOUT);<z>
} else {<z>
destroySocket(desc[n]);<z>
) {<z>
sm.getString("endpoint.poll.error"), t);<z>
) {<z>
();<z>
message) {<z>
(BindingOperationInfo.class);<z>
null) {<z>
Fault(new Exception("Operation not bound on this message"));<z>
operation;<z>
{<z>
{<z>
.menu_search:<z>
();<z>
return true;<z>
return false;<z>
) {<z>
;<z>
= environment;<z>
= isServerEnvironment;<z>
] {<z>
CommonMessages.artifactType<z>
();<z>
;<z>
) throws SAXException {<z>
attrs);<z>
qName.equalsIgnoreCase("Task")) {<z>
null && !inOwner)<z>
(attributes);<z>
get("status"));<z>
);<z>
("startTime"))<z>
"startTime"));<z>
))<z>
get("endTime"));<z>
.containsKey("expiryTime"))<z>
.get("expiryTime"));<z>
("Result")) {<z>
newReferenceType(attributes);<z>
attributes.get("rel"))) {<z>
;<z>
(qName.equals("Error")) {<z>
attributes);<z>
] getFactHandles() {<z>
list = new ArrayList();<z>
this;<z>
) {<z>
);<z>
.parent;<z>
);<z>
)<z>
{<z>
0];<z>
ObjectInspector[arguments.length-1];<z>
arguments.length; i++) {<z>
-1] = arguments[i];<z>
ObjectInspectorFactory.getStandardUnionObjectInspector(<z>
(unionOIs));<z>
gen)<z>
, NoSuchAlgorithmException,<z>
Gx3OrGx4IsZeroOrOneException, UnsupportedEncodingException {<z>
);<z>
.compareTo(jp.gx3) == 0 ||<z>
{<z>
Gx3OrGx4IsZeroOrOneException();<z>
;<z>
gx4, jp.zkp4);<z>
);<z>
).mod(P);<z>
P);<z>
;<z>
jp.thisA = a;<z>
debug(LOG_TAG, "round2 finished.");<z>
{<z>
{<z>
exchange), exception);<z>
) {<z>
FormLayout layout = new FormLayout(<z>
"p, 3dlu, p");<z>
new PanelBuilder(layout);<z>
;<z>
new CellConstraints();<z>
.xy(1, 1));<z>
;<z>
getPanel();<z>
public Builder clear() {<z>
.clear();<z>
type_ = "";<z>
= (bitField0_ & ~0x00000001);<z>
= "";<z>
~0x00000002);<z>
return this;<z>
[] grid, int i, int j)<z>
;<z>
0][i];<z>
][position];<z>
[j];<z>
;<z>
, final int port, final String lookup) {<z>
;<z>
);<z>
);<z>
] parm = new Parm[] {<z>
),<z>
new Parm("lookup", lookup),<z>
, downTimeDuration, DNS_MONITOR, DNS_PLUGIN, parm);<z>
{<z>
.charAt(0);<z>
(1);<z>
);<z>
length() == 0)<z>
(elementId, new BooleanArgumentMarshaler());<z>
))<z>
StringArgumentMarshaler());<z>
equals("#"))<z>
elementId, new IntegerArgumentMarshaler());<z>
else if (elementTail.equals("##"))<z>
elementId, new DoubleArgumentMarshaler());<z>
, elementTail);<z>
boolean isInternalDocFlavor(DocFlavor flavor) {<z>
!= -1) {<z>
true;<z>
;<z>
, SyncronizingStatsInfo statsInfo)<z>
);<z>
if (!isFile)<z>
listFiles();<z>
)<z>
;<z>
delete();<z>
if (deleted)<z>
if (isFile)<z>
;<z>
addFailure();<z>
(isFile)<z>
.fileDeletionFailed(this);<z>
f.getAbsolutePath());<z>
void handleEvent(EventBundle eventBundle) throws ClientException {<z>
{<z>
(!(eventBundle instanceof ReconnectedEventBundle)) {<z>
;<z>
;<z>
= null;<z>
;<z>
Serializable>();<z>
eventBundle) {<z>
)) {<z>
getContext();<z>
;<z>
));<z>
fulltextParser = getFulltextParserFromEventContext(eventContext);<z>
s = eventContext.getCoreSession();<z>
== null) {<z>
s;<z>
!= s) {<z>
ClientException(<z>
;<z>
) {<z>
)) {<z>
"Null CoreSession");<z>
= false;<z>
;<z>
) {<z>
((String) id);<z>
() == null) {<z>
exists(docRef)) {<z>
docRef);<z>
)) {<z>
)) {<z>
.indexNames) {<z>
!fulltextInfo.indexesAllBinary.contains(indexName)<z>
get(indexName) == null) {<z>
.setExtractorProperties(<z>
),<z>
.propPathsExcludedByIndexBinary.get(indexName),<z>
indexesAllBinary.contains(indexName));<z>
;<z>
(blobs, (String) id);<z>
));<z>
;<z>
;<z>
String impactedQuery =<z>
("SELECT * from Document where ecm:fulltextJobId = '%s'",<z>
));<z>
= session.query(impactedQuery);<z>
DocumentModel impactedDoc : impactedDocs) {<z>
getRef();<z>
,<z>
,<z>
);<z>
,<z>
),<z>
);<z>
{<z>
);<z>
save = true;<z>
{<z>
);<z>
public void close() {<z>
dstPath);<z>
();<z>
;<z>
writer.close();<z>
) {<z>
, sb.toString());<z>
{<z>
if (localEvent != null && hiveOutput) {<z>
,"/");<z>
dataFolder + "'";<z>
"\n\n\n\n\n");<z>
localEvent.getTimestamp() + ".marker";<z>
)) {<z>
hiveMarkerFolder, hiveMarkerPath);<z>
} else {<z>
"deleted empty file: " + dstPath);<z>
;<z>
null;<z>
;<z>
) {<z>
();<z>
public static SNode getRefinedChildConcept(SNode currentChild) {<z>
;<z>
baseConcept = SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept");<z>
(childConcept, "jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {<z>
((SNode) childConcept), "jetbrains.mps.lang.structure.structure.ConceptDeclaration");<z>
"extends", false) != baseConcept) {<z>
, "extends", false);<z>
;<z>
;<z>
info) throws IOException {<z>
.length];<z>
; i++) {<z>
();<z>
, 50000, 0);<z>
;<z>
repoName) {<z>
, repoName);<z>
) {<z>
);<z>
) {<z>
;<z>
)<z>
.append(" ");<z>
();<z>
) throws Exception {<z>
personal);<z>
files = fp.filesDir.listFiles();<z>
);<z>
);<z>
.setAttribute("title", fp.dirTitle);<z>
appendChild(root);<z>
<files.length; i++) {<z>
()) {<z>
createElement("file");<z>
();<z>
"";<z>
name+".gif");<z>
, name+".jpg");<z>
getName();<z>
;<z>
iconsURL + "/" + iconName);<z>
"title", name);<z>
.appendChild(el);<z>
;<z>
selectionCleared(SelectionClearedEvent event) {<z>
);<z>
.clearSelection();<z>
(this);<z>
void onLoad()<z>
setPlugin(this);<z>
plugin = this;<z>
super.onLoad();<z>
, String maxFetched, String onlyBrowse) {<z>
;<z>
this.onlyBrowse = onlyBrowse;<z>
propdir = pathToImageDir;<z>
"/images/";<z>
throws IOException, IllegalArgumentException,<z>
hasNext()) {<z>
);<z>
next;<z>
;<z>
f;<z>
Iterable<ModuleReference> refs) {<z>
();<z>
{<z>
class);<z>
;<z>
result.add(dk);<z>
;<z>
String toString(long[] a) {<z>
{<z>
;<z>
b = new StringBuffer("[");<z>
a.length; i++) {<z>
(i != 0) {<z>
(", ");<z>
a[i]));<z>
"]");<z>
;<z>
()<z>
() == DISCARDED) {<z>
(MeasurementToolLoaded.REMOVE);<z>
(model.isHCSData()) {<z>
list = model.getMeasurements();<z>
;<z>
();<z>
} else view.setVisible(false);<z>
Table lootList(Raid raid) {<z>
Table tbl = new Table();<z>
);<z>
);<z>
);<z>
: raid.getRaidItems()) {<z>
;<z>
raidInfoWindowLootListAddRow(addItem, item);<z>
;<z>
tbl;<z>
protected void refreshVisuals() {<z>
;<z>
()).setLayoutConstraint(<z>
getFigure(), r);<z>
SmsDataChannel(ImpsConnection connection) throws ImException {<z>
);<z>
mTxManager = connection.getTransactionManager();<z>
= connection.getConfig();<z>
= config.getReplyTimeout();<z>
();<z>
config.getSmsPort();<z>
getDefault().getSmsService();<z>
new PtsPrimitiveParser();<z>
config.getImpsVersion());<z>
{<z>
(e);<z>
;<z>
);<z>
mAssembler.setSmsListener(this);<z>
public void setProcessID(String processID) {<z>
processID == null) {<z>
"processID");<z>
;<z>
{<z>
) {<z>
dstModeTransitions = new EObjectWithInverseResolvingEList<ModeTransitionInstance>(<z>
InstancePackage.MODE_INSTANCE__DST_MODE_TRANSITION,<z>
InstancePackage.MODE_TRANSITION_INSTANCE__DESTINATION);<z>
return dstModeTransitions;<z>
) {<z>
.println(msg);<z>
SocketClient1.class.getName() +<z>
" hostname the name of the remote log server\n" +<z>
;<z>
.exit(1);<z>
{<z>
getType() + " death");<z>
if (entity instanceof IronGolem) {<z>
.getExp("animal.IronGolem");<z>
(entity instanceof Ocelot) {<z>
= (Ocelot) entity;<z>
= o.isAdult();<z>
)) {<z>
baby) {<z>
().getExp("animal.OcelotTameBaby");<z>
{<z>
.getExp("animal.OcelotTame");<z>
{<z>
if (baby) {<z>
.getConfig().getExp("animal.OcelotBaby");<z>
{<z>
getConfig().getExp("animal.Ocelot");<z>
);<z>
().getExp("monster.EnderDragon");<z>
getConfig().getExp("monster.Blaze");<z>
getConfig().getExp("monster.Creeper");<z>
().getExp("monster.Enderman");<z>
).getExp("monster.Ghast");<z>
);<z>
getExp("monster.PigZombie");<z>
.getExp("monster.Silverfish");<z>
"monster.Skeleton");<z>
entity instanceof Slime) {<z>
entity instanceof MagmaCube) {<z>
"monster.MagmaCube");<z>
else {<z>
().getExp("monster.Slime");<z>
entity instanceof Spider) {<z>
CaveSpider) {<z>
("monster.CaveSpider");<z>
{<z>
"monster.Spider");<z>
;<z>
)?"animal.tameWolf":"monster.Wolf");<z>
getExp("animal.Chicken");<z>
().getExp("animal.Cow");<z>
().getExp("animal.Pig");<z>
.getConfig().getExp("animal.Sheep");<z>
().getExp("animal.Squid");<z>
.getType() + "\" not found. 0 Experience.");<z>
0;<z>
throws AtlasDataException {<z>
.get(arrayDesign);<z>
p == null) {<z>
experiment, arrayDesign);<z>
put(arrayDesign, p);<z>
return p;<z>
canHandle(String delimitedTrade) {<z>
.charAt(0)=='T')<z>
return true;<z>
return false;<z>
final PairCallback callback) {<z>
BroadPhase.debugPrint) {<z>
println( "BroadPhase()");<z>
= new float[Settings.maxProxies];<z>
maxProxies];<z>
maxPairs];<z>
];<z>
int[Settings.maxProxies];<z>
{<z>
new Bound();<z>
);<z>
; i++) {<z>
[i] = new BufferedPair();<z>
);<z>
.initialize( this, callback);<z>
);<z>
worldAABB);<z>
;<z>
);<z>
.y);<z>
i) {<z>
Proxy();<z>
setNext( i + 1);<z>
;<z>
;<z>
[i].userData = null;<z>
;<z>
].setNext( PairManager.NULL_PROXY);<z>
timeStamp = 0;<z>
;<z>
.userData = null;<z>
0;<z>
;<z>
m_queryResultCount = 0;<z>
interval, long timeout) throws RetryTimeoutException, Exception {<z>
currentTimeMillis();<z>
) {<z>
sleep(delay);<z>
(true) {<z>
);<z>
(TemporaryException temporaryException) {<z>
() - start < timeout) {<z>
(interval);<z>
else {<z>
;<z>
event) {<z>
.EDITOR_SYNC_OUTLINE_ON_CURSOR_MOVE);<z>
{<z>
);<z>
= new ASN1Sequence(<z>
ASN1Type[] { Name.ASN1,<z>
(),<z>
) {<z>
values) {<z>
issAndSerial = (Object[]) object;<z>
= issAndSerial[0];<z>
issAndSerial[1];<z>
ParamProperties createBitmaskParamProperties() {<z>
= new ParamProperties();<z>
.class);<z>
(BooleanExpressionEditor.class);<z>
return paramProps;<z>
) throws SVNException {<z>
if (textChecksum == null) {<z>
getStringValue(SVNProperty.CHECKSUM);<z>
if (myIsForce) {<z>
.delete();<z>
: SVNFileUtil.computeChecksum(myCurrentTmpFile);<z>
= null;<z>
.create(SVNErrorCode.CHECKSUM_MISMATCH, "Checksum mismatch for ''{0}''; expected: ''{1}'', actual: ''{2}''",<z>
err, SVNLogType.WC);<z>
!myIsExpandKeywords) {<z>
(SVNProperty.MIME_TYPE, "application/octet-stream");<z>
(SVNProperty.COMMITTED_DATE);<z>
SVNProperty.SPECIAL) != null;<z>
.getStringValue(SVNProperty.MIME_TYPE);<z>
mimeType);<z>
= myFileProperties.getStringValue(SVNProperty.KEYWORDS);<z>
null) {<z>
, SVNEncodingUtil.uriEncode(myCurrentPath));<z>
.getStringValue(SVNProperty.COMMITTED_REVISION);<z>
, myOptions);<z>
[] eolBytes = null;<z>
(SVNProperty.EOL_STYLE))) {<z>
.EOL_STYLE), myOptions);<z>
containsName(SVNProperty.EOL_STYLE)) {<z>
, myOptions);<z>
if (binary) {<z>
charset = null;<z>
keywordsMap = null;<z>
isEmpty()) || special) {<z>
, special, true);<z>
myCurrentTmpFile, myCurrentFile);<z>
EXECUTABLE) != null;<z>
SVNFileUtil.setExecutable(myCurrentFile, true);<z>
&& date != null) {<z>
UNKNOWN);<z>
} finally {<z>
, ProtocolModel localcm,<z>
List<javax.wsdl.Definition> wsdls,<z>
.w3c.dom.Element partnerLinkTypes,<z>
) throws Exception {<z>
localcm,<z>
, journal);<z>
proj.getFullPath().append(<z>
).<z>
(BPEL_DEPLOY_DESCRIPTOR_FILENAME);<z>
().getFile(wsdlPath);<z>
;<z>
, true,<z>
;<z>
.ByteArrayOutputStream xmlstr=<z>
);<z>
;<z>
.setNode(doc);<z>
result=new StreamResult(xmlstr);<z>
=<z>
newInstance().newTransformer();<z>
(source, result);<z>
.close();<z>
);<z>
()), true, false,<z>
.runtime.NullProgressMonitor());<z>
, Map<String, Object> config) {<z>
;<z>
).getSmpName();<z>
);<z>
);<z>
.invoke(event);<z>
Player) {<z>
.getLocation();<z>
} catch (Exception exception) {<z>
"/");<z>
sound.length == 1) {<z>
, false, location, 32, 100);<z>
else {<z>
false, location, 32, 100);<z>
Exception {<z>
;<z>
.newDocument();<z>
Element envelope = doc.createElementNS<z>
;<z>
,<z>
);<z>
appendChild(envelope);<z>
"RSA");<z>
KeyPair kp = kpg.genKeyPair();<z>
=<z>
();<z>
Policy.setPolicy<z>
"JavaPolicy", new URIParameter(policyURI)));<z>
new SecurityManager());<z>
ArrayList();<z>
fac.newReference<z>
"", sha1,<z>
Collections.singletonList<z>
,<z>
null)), null, null));<z>
"http://localhost:" + ss.getLocalPort()<z>
;<z>
withoutComments,<z>
, refs);<z>
);<z>
getPrivate(), envelope);<z>
(dsc);<z>
DOMValidateContext<z>
(), envelope.getFirstChild());<z>
sig = fac.unmarshalXMLSignature(dvc);<z>
{<z>
new Exception<z>
"XMLDSigWithSecMgr signature validation FAILED");<z>
) {<z>
);<z>
close();<z>
()<z>
pj=PrinterJob.getPrinterJob();<z>
;<z>
printDialog();<z>
pj.print();<z>
PrintException) {}<z>
entry) {<z>
();<z>
.setTitle(entry.getTitle());<z>
setSubTitle(entry.getSitePath());<z>
entry.getDefaultFileType())<z>
()<z>
.getResourceTypeName());<z>
);<z>
entry.getVfsPath());<z>
= new CmsListItemWidget(infoBean);<z>
;<z>
button = new CmsPushButton();<z>
());<z>
key(Messages.GUI_HOVERBAR_UNDELETE_0));<z>
ButtonStyle.TRANSPARENT, null);<z>
{<z>
void onClick(ClickEvent event) {<z>
getElement());<z>
m_clipboardButton.closeMenu();<z>
());<z>
});<z>
(button);<z>
.setStateIcon(StateIcon.standard);<z>
.getId().toString());<z>
return listItem;<z>
, Object[] values)<z>
columns = table.getColumns();<z>
.length) {<z>
numberOfNullColumns = 0;<z>
) {<z>
if (c.canBeNull()) {<z>
numberOfNullColumns++;<z>
numberOfNullColumns == 0) {<z>
StringBuilder buf = new StringBuilder();<z>
append("For table ");<z>
(table.getName());<z>
append(" the columns length ");<z>
(columns.length);<z>
.append(" does not equal the values length ");<z>
length);<z>
);<z>
length + numberOfNullColumns) {<z>
new StringBuilder();<z>
);<z>
table.getName());<z>
);<z>
(columns.length);<z>
buf.append(" and number allowed to be null ");<z>
;<z>
append(" does not equal the values length ");<z>
(values.length);<z>
);<z>
.length];<z>
{<z>
.canBeNull()) {<z>
[j++];<z>
values = vs;<z>
new StringBuilder();<z>
.append("INSERT INTO ");<z>
table.getName()));<z>
);<z>
columns.length; i++) {<z>
[i];<z>
i > 0) {<z>
",");<z>
(column.getName()));<z>
append(" ) VALUES ( ");<z>
{<z>
];<z>
0) {<z>
buf.append(",");<z>
]));<z>
(" )");<z>
buf.toString();<z>
{<z>
o instanceof Date ) {<z>
) o);<z>
{<z>
super.wrapValue(o);<z>
Exception {<z>
Thread.sleep(200);<z>
(InterruptedException e) {<z>
);<z>
cursor = contentResolver.query(CONTENT_URI, PROJECTION_ALL,<z>
, null);<z>
()) {<z>
ArrayList<ParkingEntity>();<z>
= parkingDao.loadFromCursor(cursor);<z>
);<z>
);<z>
<ParkingEntity> filtered;<z>
boundingBox != null) {<z>
= filter(listParkings, new DistancePredicate(<z>
));<z>
else {<z>
= listParkings;<z>
: filtered) {<z>
.create(equipementManager, park);<z>
(item);<z>
cursor.close();<z>
items;<z>
) {<z>
ComponentLocator.inject(IPRangeConfig.class);<z>
;<z>
System.exit(0);<z>
) {<z>
restorePruned = restorePruned( branch );<z>
.FALSE.equals( restorePruned ) ) {<z>
restorePruned;<z>
( restorePruned );<z>
restored |= super.restore( branch );<z>
clashed) {<z>
);<z>
;<z>
()<z>
resourceName.hashCode() : 0;<z>
() : 0);<z>
0);<z>
0);<z>
result;<z>
LogData(IFile file, String message) {<z>
this.file = file;<z>
= message;<z>
);<z>
throws ConfigurationException {<z>
instanceof ExtendedConfigurationBackend) {<z>
.configurationBackend).getDoubleValue(attribute);<z>
;<z>
;<z>
);<z>
;<z>
) {<z>
"\".", nfe1);<z>
{<z>
stackSize = keepStackSize();<z>
;<z>
,RULE_MULTI_NL,FOLLOW_RULE_MULTI_NL_in_rule__Document__Group_4__0__Impl5592);<z>
getDocumentAccess().getMULTI_NLTerminalRuleCall_4_0());<z>
re) {<z>
reportError(re);<z>
;<z>
(stackSize);<z>
public void addAttribute(<z>
uri,<z>
String localName,<z>
,<z>
type,<z>
)<z>
);<z>
int n) {<z>
sb = new StringBuilder(n);<z>
ByteBuffer bb = null;<z>
i = 0; i < n; ) {<z>
c = s.charAt(i++);<z>
{<z>
) {<z>
;<z>
else {<z>
' ');<z>
else {<z>
(s, i, bb);<z>
sb);<z>
);<z>
long getLong() {<z>
8)<z>
"End of data buffer");<z>
, m_pos);<z>
8;<z>
;<z>
HSSFWorkbook actual) {<z>
"Style Italic des cellules de la feuille", sheetName, expected, actual,<z>
expected),<z>
new ItalicCellStyleStringifier(actual));<z>
private static void lazyWarn(String message) {<z>
) {<z>
class);<z>
);<z>
)<z>
services, scope);<z>
this.nodeInfo = nodeInfo;<z>
{<z>
lineIdx];<z>
< s.length(); i++)<z>
(i) != '=') {<z>
.length());<z>
level = i;<z>
= Math.min(5, level);<z>
{<z>
) {<z>
();<z>
} catch (IOException ignore) {<z>
{<z>
resultStream = null;<z>
void onEnable()<z>
MyListener(this), this);<z>
.setExecutor(new CommandExecutor(){<z>
label, String[] args)<z>
("rules");<z>
item : rules)<z>
);<z>
return true;<z>
});<z>
.copyDefaults(true);<z>
();<z>
private void _mergeDuplicateElements(<z>
{<z>
elements();<z>
isEmpty()) {<z>
();<z>
duplicateElements = new ArrayList<Element>();<z>
.size(); i++) {<z>
= childElements.get(i);<z>
if (_containsObjectEqualTo(<z>
) {<z>
childElement)) {<z>
Element firstElement = _findObjectEqualTo(<z>
childElement, originalElements, elementComparator);<z>
;<z>
add(childElement);<z>
.add(childElement);<z>
));<z>
) {<z>
duplicateElement.detach();<z>
for (Element childElement : originalElements) {<z>
);<z>
public IStatus getStatus() {<z>
) {<z>
status;<z>
) {<z>
);<z>
null;<z>
() {<z>
.isValid()) return "";<z>
;<z>
();<z>
)<z>
SMBException {<z>
[] dblock = new byte[8];<z>
, 0);<z>
(fid, dblock, 8, 0x104);<z>
) {<z>
theta;<z>
= theta+width;<z>
= true;<z>
{<z>
);<z>
networkId);<z>
instanceId);<z>
;<z>
);<z>
) {<z>
);<z>
SWT.ERROR_WIDGET_DISPOSED);<z>
return imageIndent;<z>
getLargestDimension() {<z>
,<z>
.max( y_spacing * height,<z>
;<z>
, String classURI) throws RestClientException {<z>
storeURI + DELIMITER + ontologyURI + CLASSES);<z>
,String> formData = new MultivaluedMapImpl();<z>
, classURI);<z>
= webResource.type(MediaType.APPLICATION_FORM_URLENCODED)<z>
formData);<z>
);<z>
;<z>
} catch (UniformInterfaceException e) {<z>
;<z>
) {<z>
[numItems];<z>
i++) {<z>
prefix + (i + 1);<z>
);<z>
OnItemClickListener() {<z>
long id) {<z>
Context context = view.getContext();<z>
+ parent.getItemAtPosition(position);<z>
.show();<z>
msg);<z>
});<z>
void changeMonth(AjaxEvent ajaxEvent)<z>
getNavCalendar());<z>
":" + ID_SELECTION_FORM);<z>
);<z>
);<z>
.getTarget().addComponent(replacementPanel);<z>
().getNavCalendar());<z>
;<z>
replaceWith(newLabel);<z>
;<z>
().addComponent(newLabel);<z>
{<z>
= variable.getVariableValue();<z>
();<z>
+ amount));<z>
amount;<z>
IOException {<z>
);<z>
ObjectOutputStream objout = new ObjectOutputStream(out);<z>
.writeObject(obj);<z>
();<z>
getShortcutsText(Shortcut[] shortcuts) {<z>
{<z>
;<z>
new StringBuilder();<z>
shortcuts.length; i++) {<z>
shortcut = shortcuts[i];<z>
> 0) {<z>
' ');<z>
.append(getShortcutText(shortcut));<z>
.toString();<z>
) {<z>
.getSystem();<z>
Configuration();<z>
initSystem(<z>
;<z>
();<z>
sh) {<z>
;<z>
= sh;<z>
;<z>
public void onSignalStrengthChanged(int asu) {<z>
null;<z>
= newCell;<z>
-113 + 2 * asu;<z>
updateNeighbours();<z>
: 10);<z>
} catch (InterruptedException e) {<z>
String role, String sessionId) throws RegistryException {<z>
= (UserRegistry) getRootRegistry();<z>
registry.getUserRealm() != null &&<z>
().getUserStoreManager() != null) {<z>
registry.getUserRealm();<z>
= false;<z>
realm.getUserStoreManager().getRoleListOfUser(<z>
.getUserName());<z>
(String userRole: userRoles) {<z>
getAdminRoleName())) {<z>
= true;<z>
isAdmin;<z>
) {<z>
;<z>
;<z>
Error.MatchRuleInvalid<z>
(Debug.DEBUG, "enter");<z>
Debug.VERBOSE, "Removing match rule: "+matchrule);<z>
;<z>
{<z>
txElements) {<z>
txElem);<z>
.add(txElem.getTypeName());<z>
int featureID) {<z>
{<z>
case DroolsPackage.SCENARIO_PARAMETERS__START:<z>
!= null;<z>
.SCENARIO_PARAMETERS__DURATION:<z>
!= null;<z>
.SCENARIO_PARAMETERS__PROPERTY_PARAMETERS:<z>
null;<z>
.SCENARIO_PARAMETERS__BASE_CURRENCY_UNIT:<z>
null : !BASE_CURRENCY_UNIT_EDEFAULT.equals(baseCurrencyUnit);<z>
SCENARIO_PARAMETERS__BASE_TIME_UNIT:<z>
return isSetBaseTimeUnit();<z>
:<z>
isSetReplication();<z>
case DroolsPackage.SCENARIO_PARAMETERS__SEED:<z>
);<z>
(featureID);<z>
SimpleFeature> toSimpleFeatureList(Figure[] figures) {<z>
new SimpleFeature[figures.length];<z>
figuresLength; i++) {<z>
Figure figure = figures[i];<z>
if (figure instanceof SimpleFeatureFigure) {<z>
= (SimpleFeatureFigure) figure;<z>
.getSimpleFeature();<z>
return Arrays.asList(features);<z>
SecurityToken getSecurityToken(InputProcessorChain inputProcessorChain,<z>
xmlSecStartElement,<z>
throws XMLSecurityException {<z>
;<z>
.keyInfoType != null) {<z>
= this.keyInfoType;<z>
{<z>
.getKeyInfo();<z>
null) {<z>
final EncryptedKeyType encryptedKeyType =<z>
), XMLSecurityConstants.TAG_xenc_EncryptedKey);<z>
) {<z>
();<z>
, getSecurityProperties());<z>
securityTokenProvider =<z>
);<z>
();<z>
().getSecurityToken(<z>
KeyInfoUsage.DECRYPTION,<z>
),<z>
.getSecurityContext());<z>
List<CardSet> cardSets) {<z>
).getApplication();<z>
CardSet cardSet : cardSets) {<z>
mainApplication.doAction(ACTION_ADD_CARD_SET, cardSet);<z>
);<z>
(Composite parent) {<z>
createBackgroundControl(parent);<z>
, HELP_ID);<z>
{<z>
;<z>
.getEnumLiteralAssignment_0());<z>
.FOLLOW_rule__EnumLiteralDeclaration__EnumLiteralAssignment_0_in_rule__EnumLiteralDeclaration__Group__0__Impl13757);<z>
();<z>
_fsp--;<z>
());<z>
(RecognitionException re) {<z>
;<z>
,re);<z>
restoreStackSize(stackSize);<z>
> list) {<z>
list == null) {<z>
"Expected list to be non null.");<z>
list.size() != 3) {<z>
);<z>
(1) == null) {<z>
throw new IllegalArgumentException("Expected list.get(0)/get(1) to return non null.");<z>
null) {<z>
"Expected list.get(2) to return null. Actual: \""<z>
"\"");<z>
createMasterPart( final IManagedForm managedForm, Composite parent )<z>
);<z>
Section.DESCRIPTION );<z>
Messages.getString( "InterceptorsMasterDetailsBlock.AllInterceptors" ) );<z>
( "InterceptorsMasterDetailsBlock.SetTheInterceptorsDescription" ) );<z>
;<z>
= 5;<z>
createComposite( section, SWT.WRAP );<z>
;<z>
= 2;<z>
false;<z>
;<z>
= 2;<z>
;<z>
paintBordersFor( client );<z>
);<z>
client, SWT.NULL );<z>
, true, 1, 4 );<z>
;<z>
.widthHint = 100;<z>
;<z>
);<z>
);<z>
= new TableViewer( table );<z>
()<z>
( SelectionChangedEvent event )<z>
) );<z>
} );<z>
() );<z>
LabelProvider()<z>
Image getImage( Object element )<z>
ApacheDSConfigurationPlugin.getDefault().getImage(<z>
ApacheDSConfigurationPluginConstants.IMG_INTERCEPTOR );<z>
)<z>
instanceof InterceptorEnum )<z>
.getName();<z>
element );<z>
;<z>
( "InterceptorsMasterDetailsBlock.Add" ), SWT.PUSH );<z>
.BEGINNING, false, false ) );<z>
.createButton( client,<z>
), SWT.PUSH );<z>
.setEnabled( false );<z>
false ) );<z>
.PUSH );<z>
setEnabled( false );<z>
SWT.BEGINNING, false, false ) );<z>
.createButton( client,<z>
PUSH );<z>
setEnabled( false );<z>
) );<z>
;<z>
();<z>
Map<String, Object> next() {<z>
) {<z>
NoSuchElementException();<z>
, Object>();<z>
for (Field field : fields) {<z>
;<z>
if (field.type == Boolean.class<z>
.type == Boolean.TYPE) {<z>
);<z>
.class<z>
.TYPE) {<z>
);<z>
type == Short.class<z>
type == Short.TYPE) {<z>
);<z>
else if (field.type == Integer.class<z>
) {<z>
);<z>
else if (field.type == Long.class<z>
type == Long.TYPE) {<z>
(field.columnName);<z>
.class<z>
== Float.TYPE) {<z>
);<z>
.type == Double.class<z>
|| field.type == Double.TYPE) {<z>
resultSet.getDouble(field.columnName);<z>
field.type == String.class) {<z>
= resultSet.getString(field.columnName);<z>
{<z>
getDate(field.columnName);<z>
} else {<z>
);<z>
resultSet.wasNull()) {<z>
value = null;<z>
|| includeNullValues) {<z>
, value);<z>
SQLException exception) {<z>
throw new RuntimeException(exception);<z>
true;<z>
item;<z>
> alts) {<z>
;<z>
addAll(alts);<z>
) {<z>
get(c).reorderAlternatives(alts);<z>
resource) {<z>
resource == null)<z>
;<z>
(!contains(resource))<z>
("Resource not in map "<z>
toString());<z>
{<z>
;<z>
new GridBagLayout());<z>
new GridBagConstraints();<z>
= 0;<z>
.gridy = 0;<z>
.gridheight = 2;<z>
(new JLabel(EDGE_THUMB));<z>
= 1;<z>
0;<z>
1;<z>
;<z>
1;<z>
= 1;<z>
(edge.toString());<z>
Font.BOLD));<z>
this.add(namelabel, c);<z>
throws RecognitionException {<z>
int _type = T__21;<z>
_channel = DEFAULT_TOKEN_CHANNEL;<z>
;<z>
_type;<z>
= _channel;<z>
[] args) {<z>
CommandLineParser();<z>
= new CmdLineParser(arguments);<z>
args);<z>
CmdLineException e) {<z>
);<z>
.err);<z>
.exit(1);<z>
help) {<z>
System.out);<z>
exit(1);<z>
(arguments.getStrategy() == null) {<z>
err<z>
);<z>
(System.err);<z>
1);<z>
(arguments.getHeuristic() == null<z>
getStrategy() != SearchStrategy.DFS<z>
&& arguments.getStrategy() != SearchStrategy.BFS<z>
() != SearchStrategy.IterativeDepth) {<z>
.err<z>
;<z>
.err);<z>
System.exit(1);<z>
null;<z>
.DFS<z>
SearchStrategy.BFS<z>
{<z>
.createHeuristicFromString(arguments<z>
;<z>
null) {<z>
System.err<z>
("Error al crear heuristica, vuelva a intentar");<z>
.err);<z>
exit(1);<z>
{<z>
.getCost());<z>
();<z>
problem = ProblemFactory.createProblem(<z>
;<z>
== null) {<z>
);<z>
System.exit(1);<z>
strategy == null) {<z>
err.println("Invalid Strategy");<z>
1);<z>
);<z>
problem, strategy);<z>
, int paramInt)<z>
.mRegId);<z>
);<z>
this.mEventData.length);<z>
paramParcel.writeByteArray(this.mEventData);<z>
{<z>
);<z>
);<z>
"WildcardKind", kind);<z>
"arrayDimensions", node.astArrayDimensions());<z>
== WildcardKind.UNBOUND) {<z>
"?");<z>
formatter.closeInline();<z>
;<z>
kind == WildcardKind.EXTENDS) {<z>
);<z>
();<z>
"extends");<z>
.space();<z>
SUPER) {<z>
formatter.append("?");<z>
space();<z>
formatter.keyword("super");<z>
formatter.space();<z>
".", "", "");<z>
(); i++)<z>
"[]");<z>
.closeInline();<z>
true;<z>
String getLibversion() {<z>
[3];<z>
;<z>
.H5get_libversion(vers);<z>
ex) {<z>
;<z>
;<z>
ver;<z>
void setConfigurationElement(<z>
)<z>
;<z>
static boolean isChildLayerProtected(Layer selectedLayer) {<z>
);<z>
: children) {<z>
if (isLayerProtectedImpl(childLayer) ||<z>
isChildLayerProtected(childLayer)) {<z>
return true;<z>
false;<z>
Control createContents(Composite parent) {<z>
);<z>
.applyTo(composite);<z>
;<z>
composite.setLayoutData(gd);<z>
)) {<z>
composite);<z>
);<z>
createDialogArea(composite);<z>
(dialogArea.getLayoutData() == null)<z>
(composite);<z>
);<z>
;<z>
.getSize().x;<z>
dialogArea.getSize().y;<z>
setLayoutData(gd);<z>
()) {<z>
;<z>
);<z>
return composite;<z>
) throws SVNException {<z>
{<z>
) {<z>
SVNRepository r = openRepository(context);<z>
testConnection();<z>
false));<z>
);<z>
;<z>
(String name) {<z>
{<z>
);<z>
doMakeContents() {<z>
Component parentContents = super.doMakeContents();<z>
;<z>
;<z>
50);<z>
.setBorder(BorderFactory.createEmptyBorder());<z>
(new Dimension(300, 50));<z>
.centerBottom(parentContents, scroller);<z>
static void main(String[] args) {<z>
;<z>
length == 2 ) {<z>
[0]);<z>
1]);<z>
.readSpecFile(file, plane);<z>
.length + "]:");<z>
) {<z>
());<z>
Exception e) {<z>
);<z>
NNode node) {<z>
{<z>
);<z>
file = node.getFile();<z>
();<z>
) {<z>
NName)node);<z>
name = nn.id;<z>
nn.isCall()) {<z>
();<z>
{<z>
markAsString();<z>
.n.toString();<z>
} else {<z>
" is.");<z>
();<z>
if ((parent instanceof NAttribute)<z>
(NAttribute)parent).attr) {<z>
markAsAttribute();<z>
{<z>
expression;<z>
;<z>
id_rec;<z>
resourceResolver, AFPEventProducer eventProducer)<z>
{<z>
;<z>
RasterCharactersetData charset : charsets) {<z>
(charset.base14 != null) {<z>
charset.base14);<z>
,<z>
.build(<z>
.codePage, super.encoding,<z>
));<z>
) {<z>
characterset<z>
+ " could not be found";<z>
msg);<z>
ie) {<z>
= "The base 14 font class " + charset.characterset<z>
+ " could not be instantiated";<z>
error(msg);<z>
else {<z>
accessor = getAccessor(resourceResolver);<z>
rasterFont.addCharacterSet(charset.size,<z>
charset.characterset,<z>
);<z>
;<z>
) {<z>
nodeManagerInfoList != null) {<z>
viaProto ? proto : builder;<z>
);<z>
);<z>
a : list) {<z>
(a));<z>
Env env,<z>
,<z>
int offset,<z>
Optional Value length,<z>
boolean isPreserveKeys)<z>
)<z>
return NullValue.NULL;<z>
);<z>
startIndex = offset;<z>
if (offset < 0)<z>
offset;<z>
;<z>
! length.isDefault()) {<z>
;<z>
endIndex < 0)<z>
endIndex += size;<z>
+= startIndex;<z>
(env, startIndex, endIndex, isPreserveKeys);<z>
(boolean has) {<z>
has) {<z>
.toString();<z>
else {<z>
return ChatColor.RED.toString();<z>
String _tag) throws cfmBadFileException {<z>
.isSubordinate("CFCASE", false)) {<z>
this, "CFBREAK is only valid within CFLOOP/CFFUNCTION/CFCASE"));<z>
) {<z>
, left;<z>
j;<z>
ioff += offset;<z>
0; i < count; i++)<z>
= i + offset;<z>
gap = 1;<z>
)<z>
gap * 3 + 1;<z>
/= 3;<z>
>= 4)<z>
;<z>
> 0) {<z>
pos++) {<z>
>= 0; left -= gap) {<z>
i = index[ioff + left];<z>
= index[ioff + left + gap];<z>
)) {<z>
= j;<z>
ioff + left + gap] = i;<z>
;<z>
{<z>
name);<z>
false);<z>
;<z>
{<z>
Token xsp;<z>
= jj_scanpos;<z>
)) {<z>
jj_scanpos = xsp;<z>
(100)) return true;<z>
if (jj_3R_77()) return true;<z>
return false;<z>
String createString()<z>
] cs = new char[31];<z>
)<z>
)rand.nextInt(65536);<z>
isDefined(c))<z>
= c;<z>
);<z>
, final byte[] iContent) throws IOException {<z>
;<z>
allocateSpace(iContent.length + RECORD_FIX_SIZE);<z>
, iClusterSegment, iClusterPosition, iContent);<z>
);<z>
{<z>
releaseExclusiveLock();<z>
constructEnumKeyDeserializer(DeserializationConfig config, JavaType type)<z>
), config.getAnnotationIntrospector());<z>
StdKeyDeserializer.EnumKD(er);<z>
offer(Object o)<z>
modified = false;<z>
x = MurmurHash.hash(o);<z>
Integer.SIZE - k);<z>
) )+1);<z>
(M[j] < r)<z>
M[j];<z>
] = r;<z>
;<z>
modified;<z>
int dec) {<z>
StringBuilder buf = new StringBuilder();<z>
s = false;<z>
< 0) {<z>
-num; s = true;<z>
i < div - dec; i++)<z>
;<z>
i++) {<z>
);<z>
num /= 10;<z>
('.');<z>
0) {<z>
'0');<z>
} else {<z>
> 0) {<z>
));<z>
;<z>
)<z>
buf.append('-');<z>
.toString());<z>
rule__Dependency__Group__3() throws RecognitionException {<z>
;<z>
pushFollow(FOLLOW_rule__Dependency__Group__3__Impl_in_rule__Dependency__Group__310606);<z>
;<z>
._fsp--;<z>
.failed) return ;<z>
FOLLOW_rule__Dependency__Group__4_in_rule__Dependency__Group__310609);<z>
);<z>
_fsp--;<z>
state.failed) return ;<z>
{<z>
;<z>
input,re);<z>
(stackSize);<z>
mimeType) {<z>
{<z>
("mimeType");<z>
== null) {<z>
return false;<z>
MimeType(mimeType));<z>
mtpe) {<z>
;<z>
throws Exception {<z>
null : cache.getRootDirectory()+"/defs/";<z>
println("***makeFromCatalog "+catURL);<z>
;<z>
);<z>
(CatalogCrawler.USE_ALL_DIRECT, false,<z>
, cache));<z>
out, null);<z>
();<z>
if (debugTiming) {<z>
.currentTimeMillis() - startTime;<z>
;<z>
;<z>
int style) {<z>
.NONE);<z>
, SWT.NONE);<z>
.setLayout(new FillLayout());<z>
bodyEditor = new DynamicBodyEditor(bodyEditorContainer, style);<z>
setLabel(Messages.ExpressionEditor_BodyLabel);<z>
addChangeListener(this);<z>
;<z>
languageEditor.addCommitListener(this);<z>
languageEditor);<z>
, Object value) {<z>
null) {<z>
));<z>
) {<z>
new XQuery(<z>
ctx);<z>
(query);<z>
;<z>
, "ab abc abc abc")<z>
{<z>
;<z>
c1;<z>
;<z>
= edges;<z>
private void triggerEvaluationAdded(WantedEvaluation newEvaluation) {<z>
{<z>
.onEvaluationAdded(newEvaluation);<z>
environmentIds_) throws Exception<z>
Integer>();<z>
search;<z>
;<z>
&& !groupIdList.isEmpty())<z>
Search(EnvironmentProfileEnvironmentGroup.class);<z>
.addField("environmentProfileId");<z>
search.addFilterIn("environmentGroupId", groupIdList);<z>
.class, search);<z>
))<z>
) profileIdList);<z>
search = new Search(EnvironmentProfileEnvironment.class);<z>
"environmentProfileId");<z>
("environmentId", environmentIds_);<z>
class, search);<z>
null && !profileIdList.isEmpty())<z>
<? extends Integer>) profileIdList);<z>
profiles;<z>
) {<z>
if (RubyRuntime.currentVMIsCygwin()) {<z>
.getInstallLocation(), FASTRI_INDEX);<z>
);<z>
separator + FASTRI_INDEX);<z>
{<z>
();<z>
;<z>
alg;<z>
,<z>
{<z>
if (responseCanBeZipped(request)) {<z>
length();<z>
, response);<z>
{<z>
0)<z>
IRunnableWithProgress() {<z>
throws InvocationTargetException {<z>
;<z>
finally {<z>
done();<z>
;<z>
exception) {<z>
.ExtractSupertypeMemberPage_extract_supertype, RefactoringMessages.PullUpInputPage_exception);<z>
{<z>
;<z>
new InterruptedException();<z>
) {<z>
new IType[0];<z>
Configuration configuration, T bundleState) {<z>
);<z>
assert bundleState != null : "Null bundleState";<z>
this.bundleState = bundleState;<z>
EList<String> getYcs()<z>
== null)<z>
.MODEL__YCS);<z>
return ycs;<z>
) throws RecognitionException {<z>
stackSize = keepStackSize();<z>
) {<z>
;<z>
; if (state.failed) return ;<z>
.backtracking==0 ) {<z>
getRightAccess().getRightKeyword_0());<z>
re) {<z>
reportError(re);<z>
(input,re);<z>
restoreStackSize(stackSize);<z>
String username, final String password) {<z>
("Connecting");<z>
String mysqlConnectionURL;<z>
mysqlDriver;<z>
;<z>
;<z>
"jdbc:mysql://" + server;<z>
;<z>
("Connected");<z>
;<z>
Exception x) {<z>
return false;<z>
params) {<z>
, String[]>();<z>
.keys();<z>
itKeys.hasNext()) {<z>
();<z>
params.optJSONArray(key);<z>
[paramValue.length()]);<z>
; i < l; i++) {<z>
optString(i);<z>
;<z>
java.lang.CloneNotSupportedException<z>
this);<z>
(obj);<z>
obj;<z>
private boolean needLocalityCheck(<z>
{<z>
LocalityLevel.NODE) {<z>
return nodeWait != 0;<z>
) {<z>
;<z>
return false;<z>
] argv) {<z>
,<z>
});<z>
, "aa", "aac",<z>
, "fo", "foobar", "kite", };<z>
.length; i++) {<z>
]);<z>
matches(tests[i]));<z>
i]));<z>
tests[i]));<z>
;<z>
matcher.exactMatch("fooba"));<z>
matcher.exactMatch("foobarz"));<z>
("foo"));<z>
.String softapIface) throws android.os.RemoteException<z>
.os.Parcel.obtain();<z>
obtain();<z>
writeInterfaceToken(DESCRIPTOR);<z>
(wifiConfig!=null)) {<z>
1);<z>
;<z>
.writeInt(0);<z>
;<z>
(softapIface);<z>
.TRANSACTION_setAccessPoint, _data, _reply, 0);<z>
);<z>
_reply.recycle();<z>
;<z>
defaultValue)<z>
= defaultValue;<z>
ConferenceConsoleConstants.dimdimConferenceProperties != null)<z>
(key);<z>
(Exception e)<z>
= defaultValue;<z>
s;<z>
IntervalInsert(IntervalTree T, int x) {<z>
super(T);<z>
;<z>
{<z>
/3;<z>
K = x);<z>
T.numLeafs+1);<z>
setHeader("insert", K);<z>
){<z>
,0,0,0));<z>
);<z>
magenta;<z>
;<z>
0.3f);<z>
IValue producer) {<z>
prod = new IValueWrapper(producer);<z>
{<z>
producers.get(prod);<z>
(wrapper);<z>
(prod);<z>
) {<z>
(a);<z>
(b);<z>
;<z>
Math.sin(angleB);<z>
angleR);<z>
(angleR);<z>
*sinB;<z>
cosRcosB = cosR*cosB;<z>
sinB;<z>
= sinR*cosB;<z>
flatListPos, int type, int groupPos,<z>
, int groupInsertIndex) {<z>
PositionMetadata pm = getRecycledOrCreate();<z>
, groupPos, childPos, flatListPos);<z>
;<z>
groupInsertIndex;<z>
;<z>
) {<z>
= new ArrayList<String>();<z>
;<z>
;<z>
String indent = " ";<z>
.dropResource,<z>
, indent));<z>
.userInfo, "userInfo",<z>
;<z>
;<z>
return lines;<z>
composite )<z>
Label( composite, SWT.NONE );<z>
( composite, SWT.NONE );<z>
GridData.FILL_HORIZONTAL );<z>
= 2;<z>
bidiComposite.setLayoutData( bidiGridData );<z>
( );<z>
3;<z>
10;<z>
bidiGridLayout.marginWidth = 5;<z>
bidiGridLayout.horizontalSpacing = 5;<z>
bidiGridLayout.verticalSpacing = 10;<z>
bidiGridLayout.makeColumnsEqualWidth = false;<z>
.setLayout( bidiGridLayout );<z>
);<z>
NONE );<z>
MESSAGE_CHOOSE_BIDI_DIR );<z>
directionLabel.setLayoutData( bidiGridData );<z>
( bidiComposite, SWT.DROP_DOWN<z>
SWT.READ_ONLY );<z>
, LTR_DIRECTION_INDX );<z>
MESSAGE_RTL_BIDI, RTL_DIRECTION_INDX );<z>
;<z>
= true;<z>
bidiGridData.widthHint = 200;<z>
bidiGridData.horizontalIndent = 20;<z>
);<z>
;<z>
( );<z>
new SelectionListener( ) {<z>
)<z>
directionCombo.getSelectionIndex( ) == LTR_DIRECTION_INDX )<z>
isLTRDirection = true;<z>
;<z>
;<z>
void widgetDefaultSelected( SelectionEvent e )<z>
);<z>
] md5Hash()<z>
ProtocolVersion.SSL_3)<z>
new byte[16];<z>
buffer.position (0);<z>
;<z>
md5;<z>
);<z>
bean, Field field, Object value){<z>
field.set(bean, value);<z>
e) {<z>
new IllegalStateException(<z>
);<z>
e) {<z>
new IllegalStateException(<z>
);<z>
) {<z>
(JSlider) evt.getSource();<z>
.getValue());<z>
.getValue() + " bpm");<z>
(<z>
index1,<z>
fragment1) {<z>
();<z>
String id2 = getUniqueID(index2);<z>
this, id2,<z>
;<z>
methodCall) throws Exception {<z>
methodCall = methodCall;<z>
.getServiceConfiguration();<z>
();<z>
LOG.isDebugEnabled()) {<z>
"Attempting to call service " + serviceName);<z>
= getService(serviceConfiguration);<z>
null) {<z>
"Failed to locate service endpoint for message: " + serviceConfiguration);<z>
methodCall.getParamTypes());<z>
methodCall.getArguments());<z>
,<z>
, byte sourceAddrNpi, String sourceAddr,<z>
byte esmeAddrNpi, String esmeAddr,<z>
... optionalParameters) throws PDUStringException,<z>
) {<z>
.sendAlertNotification(os, sequenceNumber,<z>
sourceAddrNpi, sourceAddr, esmeAddrTon,<z>
optionalParameters);<z>
clazzes) {<z>
elementIn(clazzes)) {<z>
isInstance(o)) return false;<z>
true;<z>
)<z>
if ( m_wizardPage != null )<z>
.getShell( );<z>
if ( m_propertyPage != null )<z>
( );<z>
;<z>
void patternRewrite(ReplayParseContext context, StringBuilder sb,<z>
) {<z>
;<z>
(sb);<z>
urlMatcher.find(idx)) {<z>
url = urlMatcher.group(1);<z>
length();<z>
urlMatcher.start(1);<z>
;<z>
idx = urlEnd;<z>
(url.charAt(0) == '(')<z>
(origUrlLength-1) == ')')) {<z>
.substring(1, origUrlLength - 1);<z>
+= 1;<z>
origUrlLength -= 2;<z>
.charAt(0) == '"') {<z>
);<z>
+= 1;<z>
== '\'') {<z>
.substring(1, origUrlLength - 1);<z>
;<z>
{<z>
origUrlLength - 2);<z>
;<z>
int urlLength = url.length();<z>
.contextualizeUrl(url, flags);<z>
urlLength;<z>
;<z>
;<z>
public static MeetupsEntryLocalService getService() {<z>
if (_service == null) {<z>
(),<z>
getName());<z>
,<z>
);<z>
ClassLoaderProxy classLoaderProxy = new ClassLoaderProxy(object,<z>
), portletClassLoader);<z>
;<z>
.setClassLoader(portletClassLoader);<z>
(MeetupsEntryLocalServiceUtil.class,<z>
);<z>
);<z>
return _service;<z>
JSONArray array, int index) {<z>
= null;<z>
getJSONArray(index);<z>
} catch (JSONException jsone) {<z>
if(LOGGER.isDebugEnabled()) {<z>
+ " from JSON array " + array, jsone);<z>
return a;<z>
) {<z>
while (!stopRequested) {<z>
<Tuple>();<z>
();<z>
t);<z>
batchMaxSize > 0) {<z>
batch, batchMaxSize);<z>
queue.drainTo(batch);<z>
);<z>
InterruptedException e) {}<z>
[] authset(double es) {<z>
;<z>
double[3];<z>
* P00;<z>
es;<z>
P01;<z>
APA[1] = t * P10;<z>
es;<z>
] += t * P02;<z>
;<z>
2] = t * P20;<z>
APA;<z>
handleTransactionForward() {<z>
) {<z>
.hasResponse()) {<z>
null);<z>
getNextTransaction();<z>
else {<z>
;<z>
;<z>
(<z>
minThreshold,<z>
maxThreshold,<z>
,<z>
boolean clusterByError,<z>
radius )<z>
>= maxThreshold || maxThreshold > 1)<z>
("Error: unvalid threshold values.");<z>
null;<z>
<int[]>();<z>
<=maxThreshold; th += stepThreshold)<z>
)<z>
"%.3f", th) + "...");<z>
cwm =<z>
getClusteredWarpingMismatches(originalLabels, proposedLabels,<z>
);<z>
== cwm)<z>
null;<z>
[] splitsAndMergers = new int[2];<z>
j++)<z>
numOfSplits;<z>
].numOfMergers;<z>
splitsAndMergers );<z>
if( verbose )<z>
[ 1 ]);<z>
return listOfSplitsAndMergers;<z>
SocketAddress address) {<z>
Message(str);<z>
);<z>
address);<z>
message);<z>
{<z>
.error("Could NOT Process packet.", t);<z>
{<z>
= new VerticalPanel();<z>
"window-content");<z>
JGroupsProtocol.class);<z>
ComboBoxItem("type", "Type");<z>
;<z>
()) {<z>
();<z>
)<z>
names.add(name);<z>
setValueMap(names);<z>
);<z>
(typeField, socket);<z>
(<z>
ClickHandler() {<z>
event) {<z>
();<z>
validation.hasErrors())<z>
());<z>
ClickHandler() {<z>
public void onClick(ClickEvent event) {<z>
();<z>
= form.asWidget();<z>
() {<z>
getAddress() {<z>
);<z>
"subsystem", "jgroups");<z>
"stack", "*");<z>
"protocol", "*");<z>
return address;<z>
);<z>
());<z>
.add(formWidget);<z>
layout, options).build();<z>
public void dumpStateMap(final String path)<z>
File(path)));<z>
][0].length);<z>
newLine();<z>
val = 0;<z>
0].length; z++)<z>
state[0].length; y++)<z>
; x < state.length; x++)<z>
[x][y][z];<z>
val == Integer.MAX_VALUE) val = 9;<z>
;<z>
(val + " ");<z>
.newLine();<z>
();<z>
close();<z>
)<z>
();<z>
finRemessaId) {<z>
, EDirecao.DESC);<z>
.finRemessaId = finRemessaId;<z>
= false;<z>
par2, double par4, double par6)<z>
, 0.0D);<z>
*= 0.30000001192092896D;<z>
.random() * 0.2F + 0.1F;<z>
*= 0.30000001192092896D;<z>
1.0F;<z>
1.0F;<z>
= 1.0F;<z>
+ rand.nextInt(4));<z>
, 0.01F);<z>
particleGravity = 0.06F;<z>
);<z>
public Gcc4CompilerParser() {<z>
_Warnings_gcc4_ParserName(),<z>
._Warnings_gcc4_LinkName(),<z>
_Warnings_gcc4_TrendName(),<z>
);<z>
... packageNames) {<z>
packageNames == null) {<z>
return Collections.emptySet();<z>
if (log.isDebugEnabled()) {<z>
), Arrays.asList(packageNames));<z>
true));<z>
);<z>
(String pkg : packageNames) {<z>
, classes);<z>
.debug("Found: {}", classes);<z>
;<z>
()<z>
getInstance().DOWN,<z>
.getPersistentInputMappingInstance().getInputMapping());<z>
String key, long defaultValue ) {<z>
verifyIsNull();<z>
key );<z>
){<z>
defaultValue;<z>
) {<z>
;<z>
);<z>
();<z>
;<z>
.levelUp();<z>
.levelUp();<z>
.levelUp();<z>
levelUp();<z>
)<z>
element = element;<z>
(element, ATT_CLASS);<z>
public LazyPackageMemberScope(@NotNull ResolveSession resolveSession,<z>
declarationProvider,<z>
{<z>
thisPackage);<z>
{<z>
)) {<z>
CheckboxTreeViewer viewer = view.getViewer();<z>
;<z>
for (ILegendItem item : items) {<z>
viewer, item);<z>
)<z>
= min;<z>
max) value = max;<z>
= value;<z>
= originalValue;<z>
args) throws Exception{<z>
s = new ICHTTPServer();<z>
;<z>
.getProperty(IC_HTTP_DOCBASE) != null){<z>
(IC_HTTP_DOCBASE);<z>
.startServer();<z>
final Class<T> clazz)<z>
)<z>
.valueOf(identifier));<z>
int y, int rgb) {<z>
) / xScale;<z>
+ m11*y) / yScale;<z>
% 2) ? 1.0f : 0.0f;<z>
!= 0) {<z>
(fuzziness/100.0f);<z>
nx, 1));<z>
ImageMath.mod(ny, 1));<z>
f *= fx*fy;<z>
mixColors(f, foreground, background);<z>
int i) {<z>
j = 1;<z>
j < i) {<z>
;<z>
j;<z>
Task removeTask(String taskId, boolean recur) {<z>
= checkTask(taskId);<z>
);<z>
;<z>
build(final RuleBuildContext context,<z>
descr,<z>
Pattern prefixPattern) {<z>
;<z>
();<z>
= null;<z>
;<z>
accessor.toString();<z>
= dialect.analyzeExpression( context,<z>
} );<z>
).size()] );<z>
,<z>
context );<z>
new MVELDataProvider( unit,<z>
getId() );<z>
( dataProvider );<z>
( dialect.getId() );<z>
,<z>
);<z>
).getRootClassLoader() );<z>
catch ( final Exception e ) {<z>
getParentDescr(),<z>
;<z>
return null;<z>
;<z>
) {<z>
);<z>
send("AUTHENTICATION_REQUEST");<z>
);<z>
) {<z>
e1.printStackTrace();<z>
) - t > timeout) return false;<z>
());<z>
true;<z>
text) throws BadLocationException {<z>
getLockObject();<z>
) {<z>
length, text);<z>
(lockObject) {<z>
, text);<z>
startBlock(int startToken) {<z>
if (stackCount == unitStack.length) {<z>
new int[stackCount * 2];<z>
0, stackCount);<z>
newUS;<z>
= startToken;<z>
) {<z>
editing_mode);<z>
= new String[] { BASE_PART };<z>
;<z>
CollectionItem.class;<z>
arg_2) {<z>
(<z>
n, arg_2});<z>
{<z>
"s:");<z>
_length);<z>
.append(":\"");<z>
);<z>
"\";");<z>
public SequenceCropper()<z>
();<z>
().getFocusedViewer();<z>
v.getSequence() == null))<z>
();<z>
> rois = seq.getROI2Ds();<z>
size();<z>
)<z>
"There is no ROI in the current sequence.\nCrop operation need a ROI.",<z>
);<z>
> 1)<z>
getSelectedROI2Ds();<z>
size();<z>
if (size == 0)<z>
"You need to select a ROI to do the crop operation.",<z>
INFORMATION_MESSAGE);<z>
else if (size > 1)<z>
showDialog("You must have only one selected ROI to do the crop operation.",<z>
INFORMATION_MESSAGE);<z>
());<z>
) {<z>
null) {<z>
ChatColor.YELLOW + "[PVP Arena] " + ChatColor.WHITE<z>
);<z>
dispose()<z>
this.editor != null)<z>
removeFileServiceChangeListener(this);<z>
service != null)<z>
service.removeErrorListener(this);<z>
dispose();<z>
int index)<z>
= false;<z>
_entries.get(index) != -1;<z>
catch (IndexOutOfBoundsException ignored)<z>
return rval;<z>
) {<z>
{<z>
&& isClusteringStarted()) {<z>
) {<z>
));<z>
{<z>
;<z>
).init();<z>
;<z>
{<z>
null) {<z>
);<z>
), cookie.getName());<z>
() {<z>
0 || texture == null) {<z>
();<z>
specularColor);<z>
;<z>
);<z>
() {<z>
layout.google_account);<z>
this);<z>
this);<z>
;<z>
.id.sina_password);<z>
usernameView.setText("@gmail.com");<z>
(R.id.logo);<z>
);<z>
R.id.sina_login);<z>
) {<z>
public void onClick(View view) {<z>
saveAccount();<z>
();<z>
catch (Exception e) {<z>
;<z>
());<z>
});<z>
void rule__XFunctionTypeRef__Group_0__0__Impl() throws RecognitionException {<z>
keepStackSize();<z>
if ( state.backtracking==0 ) {<z>
getLeftParenthesisKeyword_0_0());<z>
(state.failed) return ;<z>
( state.backtracking==0 ) {<z>
.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());<z>
(RecognitionException re) {<z>
;<z>
re);<z>
stackSize);<z>
) throws OsmDataParsingException {<z>
throw new OsmDataParsingException(<z>
);<z>
void unpublishInteractionClass( InteractionClassHandle theInteraction )<z>
throws InteractionClassNotDefined,<z>
request =<z>
( HLA1516eHandle.fromHandle(theInteraction) );<z>
;<z>
if( response.isError() == false )<z>
.getCause();<z>
( theException instanceof JRTIinternalError )<z>
RTIinternalError( theException );<z>
JInteractionClassNotDefined )<z>
theException );<z>
( theException instanceof JFederateNotExecutionMember )<z>
);<z>
theException instanceof JSaveInProgress )<z>
throw new SaveInProgress( theException );<z>
if( theException instanceof JRestoreInProgress )<z>
RestoreInProgress( theException );<z>
( theException instanceof JInteractionClassNotPublished )<z>
logException( "unpublishInteractionClass", theException );<z>
editorContext, SNode node) {<z>
ConceptPropertyCellProvider(node, editorContext);<z>
setRole("alias");<z>
("<no alias>");<z>
;<z>
(editorContext);<z>
;<z>
;<z>
.setSubstituteInfo(provider.createDefaultSubstituteInfo());<z>
;<z>
.getRoleAttributeClass();<z>
) {<z>
getOperationContext();<z>
);<z>
, attributeKind, editorCell);<z>
editorCell;<z>
(IAction action) {<z>
_selection.toList()) {<z>
());<z>
catch (Exception e) {<z>
;<z>
) {<z>
++) {<z>
(selectedRows.toArray());<z>
) {<z>
length; i++) {<z>
toArray());<z>
Exception e) {<z>
e.printStackTrace();<z>
{<z>
"from CalendarConfiguration config where "<z>
;<z>
;<z>
subscribeId);<z>
q.setString("name", name);<z>
.uniqueResult();<z>
ex) {<z>
throw convertHibernateAccessException(ex);<z>
( int timeout)<z>
= timeout;<z>
;<z>
if( Debug.LDAP_DEBUG) {<z>
synchronized(nameLock) {<z>
connNum + "): ";<z>
, name + "Created");<z>
final T parent, final T newChild,<z>
) {<z>
(newChild);<z>
getNodeFromTreeOrThrowAllowRoot(parent);<z>
;<z>
(afterChild == null) {<z>
= node.add(<z>
(), newChild, visibility);<z>
;<z>
} else {<z>
);<z>
= node.add(<z>
getChildrenListSize() : index, newChild,<z>
;<z>
);<z>
visibility) {<z>
();<z>
getSummary(String text, Query query) {<z>
Token[] tokens = getTokens(text);<z>
.length == 0)<z>
return new Summary();<z>
;<z>
= new HashSet();<z>
++)<z>
add(terms[i]);<z>
List excerpts = new ArrayList();<z>
int lastExcerptPos = 0;<z>
< tokens.length; i++) {<z>
))) {<z>
0;<z>
;<z>
].startOffset();<z>
startToken;<z>
(i);<z>
0) {<z>
new Summary.Ellipsis());<z>
)) {<z>
tokens[j];<z>
termText())) {<z>
());<z>
())));<z>
,t.endOffset())));<z>
t.endOffset();<z>
(j + sumContext, tokens.length);<z>
j++;<z>
= endToken;<z>
j < tokens.length) {<z>
].endOffset())));<z>
- startToken);<z>
excerpt);<z>
;<z>
sort(excerpts, SCORE_COMPARATOR);<z>
== 0) {<z>
;<z>
.length);<z>
= excerptLen;<z>
;<z>
.setNumTerms(excerptLen);<z>
excerpts.add(excerpt);<z>
0;<z>
1;<z>
= new ArrayList();<z>
>= 0) {<z>
.get(numExcerpt--);<z>
;<z>
+= excerpt.getNumTerms();<z>
);<z>
0;<z>
numExcerpt = 0;<z>
;<z>
.size()) {<z>
) bestExcerpts.get(numExcerpt++);<z>
excerpt.numFragments();<z>
hasMoreElements(); ) {<z>
(Fragment) e.nextElement();<z>
tokenCount + tokenFraction <= sumLength) {<z>
f);<z>
tokenCount += tokenFraction;<z>
)<z>
new Ellipsis());<z>
return s;<z>
ResultEvent event) {<z>
for (ResultListener rl : resultListeners) {<z>
(event);<z>
String oldName, String newName) {<z>
newConstraints = new ArrayList();<z>
{<z>
constraint.refersTo(oldName)) {<z>
oldName +<z>
;<z>
=<z>
newName);<z>
;<z>
));<z>
NumberFractionComposite( Composite parent )<z>
);<z>
placeComponents( );<z>
execute(ExecutionEvent event) throws ExecutionException {<z>
getCommand();<z>
boolean oldValue = HandlerUtil.toggleCommandState(command);<z>
= !oldValue;<z>
== true)<z>
getTopologyView(event).reloadModel();<z>
null;<z>
String name) {<z>
= nextAccount_++;<z>
] = new AccountRecord (name);<z>
out.println("ChequingAccountServiceImpl.open() = "+accountNumber);<z>
accountNumber;<z>
void addAProperty(String propName) {<z>
.add(propName);<z>
{<z>
contains(vertex))<z>
"Duplicate vertex in path");<z>
.add(vertex);<z>
view) {<z>
view.getElement(), view);<z>
);<z>
manifest)<z>
throws BuildException {<z>
Specification.getSpecifications(manifest);<z>
(final ParseException pe) {<z>
), pe);<z>
()<z>
= 31;<z>
;<z>
(values);<z>
;<z>
) {<z>
FRIENDS_TIMELINE, listener) {<z>
) throws TwitterException {<z>
);<z>
});<z>
Set<String> getNodePropertyNames() {<z>
.nodeProperties == null) {<z>
emptySet();<z>
keySet());<z>
, int y, int z) {<z>
{<z>
{<z>
);<z>
return true;<z>
;<z>
Location resolveLocationIdentifier(String location) {<z>
(Location candidateLocation : values()) {<z>
candidateLocation.getAlias().equalsIgnoreCase(location)<z>
location)) {<z>
candidateLocation;<z>
return null;<z>
() {<z>
==null) {<z>
.getPackageInfo(getPackageName(), 0);<z>
version = pinfo.versionName<z>
+ gitVersion();<z>
{<z>
version = "unknown";<z>
version;<z>
{<z>
;<z>
componentType = targetType.getComponentType();<z>
matching = true;<z>
valueSize = elements.size();<z>
Array.newInstance(componentType, valueSize);<z>
< valueSize; i++) {<z>
get(i);<z>
value.getMatchingValue(componentType);<z>
{<z>
false;<z>
item);<z>
if (matching) {<z>
matchingValue = array;<z>
{<z>
NOT_MATCHING;<z>
;<z>
String name, String desc) {<z>
owner);<z>
);<z>
, owner, name, desc);<z>
(final AnActionEvent e) {<z>
(e) == null) {<z>
false);<z>
else {<z>
;<z>
path) {<z>
)) {<z>
0, Integer.MAX_VALUE, null);<z>
t = new JsopTokenizer(node);<z>
new NodeMap();<z>
.read('{');<z>
, path);<z>
addOrRemoveNode(n, true);<z>
) {<z>
path, it.next()));<z>
)) {<z>
flushBuffer();<z>
size, int testRuns) {<z>
[size];<z>
= new Random();<z>
;<z>
= benchTime + "_transBench4";<z>
));<z>
();<z>
++i) {<z>
transaction = new Transaction();<z>
();<z>
i), value);<z>
transaction.commit();<z>
;<z>
= testEnd(testRuns);<z>
return speed;<z>
} catch (Exception e) {<z>
e.printStackTrace();<z>
0;<z>
parameters, LookupForm lookupForm, List returnKeys) {<z>
KimConstants.PrimaryKeyConstants.KIM_TYPE_ID));<z>
href = "";<z>
showReturnHref = true;<z>
;<z>
String docTypeName = "";<z>
docTypeAction = "";<z>
{<z>
KimConstants.KimUIConstants.KIM_ROLE_DOCUMENT_TYPE_NAME;<z>
KimUIConstants.KIM_ROLE_DOCUMENT_ACTION;<z>
null &&<z>
isBlank( kimType.getServiceName() )<z>
RoleTypeService<z>
.isDerivedRoleType() )<z>
{<z>
.KimUIConstants.KIM_GROUP_DOCUMENT_TYPE_NAME;<z>
.KimUIConstants.KIM_GROUP_DOCUMENT_ACTION;<z>
refreshMe = true;<z>
(showReturnHref){<z>
if (!refreshMe){<z>
(KRADConstants.DISPATCH_REQUEST_PARAMETER, KRADConstants.DOC_HANDLER_METHOD);<z>
, KewApiConstants.INITIATE_COMMAND);<z>
);<z>
isNotBlank(getReturnLocation())) {<z>
RETURN_LOCATION_PARAMETER, getReturnLocation());<z>
+docTypeAction, parameters);<z>
return href;<z>
() {<z>
int result = maxEntries;<z>
? strategy.hashCode() : 0);<z>
0);<z>
return result;<z>
host() throws ParseException {<z>
debug)<z>
);<z>
;<z>
(0) == '[') {<z>
hostname = ipv6Reference();<z>
.getRest()) )<z>
.getPtr();<z>
(<z>
{LexerCore.ALPHADIGIT_VALID_CHARS, ':'});<z>
append(<z>
(startPtr, lexer.getPtr()))<z>
;<z>
();<z>
consumeDomainLabel();<z>
(startPtr, lexer.getPtr());<z>
== 0)<z>
ParseException(<z>
+ ": Missing host name",<z>
);<z>
Host(hostname);<z>
finally {<z>
(debug)<z>
dbg_leave("host");<z>
void fireSelectionChanged()<z>
listener : selectionListeners)<z>
(this);<z>
public final boolean synpred6_InternalProject() {<z>
.backtracking++;<z>
();<z>
();<z>
re) {<z>
+re);<z>
boolean success = !state.failed;<z>
input.rewind(start);<z>
.backtracking--;<z>
state.failed=false;<z>
return success;<z>
, int nsides) {<z>
) / 2;<z>
;<z>
x1, x2) + rx;<z>
, x2) + ry;<z>
new double[2 * nsides + 2];<z>
angInc = 2 * Math.PI / nsides;<z>
< nsides; i++) {<z>
= -(i * angInc);<z>
.cos(ang);<z>
sin(ang);<z>
0];<z>
1] = ord[1];<z>
ord);<z>
value) {<z>
) {<z>
);<z>
.add(value);<z>
this;<z>
node, boolean saveChildren) {<z>
(ModelPersistence.NODE);<z>
node));<z>
;<z>
().toString());<z>
)) {<z>
Element(ModelPersistence.PROPERTY);<z>
myHelper.genName(node, propertyName));<z>
VALUE, node.getPersistentProperty(propertyName));<z>
.addContent(propertyElement);<z>
SReference reference : node.getReferences()) {<z>
Element(ModelPersistence.LINK);<z>
);<z>
genTarget(reference));<z>
.getResolveInfo());<z>
(linkElement);<z>
(saveChildren) {<z>
getChildren()) {<z>
;<z>
parentElement.addContent(element);<z>
{<z>
boolean ret = false;<z>
serverRetStr = null;<z>
[] serverRet = null;<z>
= null;<z>
new OkuyamaClientException("No ServerConnect!!");<z>
StringBuilder();<z>
"0");<z>
serverRequestBuf.toString());<z>
.flush();<z>
br.readLine();<z>
OkuyamaClient.sepStr);<z>
.equals("0")) {<z>
("true")) {<z>
1;<z>
.saveSize;<z>
ret = true;<z>
} else {<z>
= false;<z>
else {<z>
new OkuyamaClientException("Execute Violation of validity");<z>
);<z>
0].equals("true")) {<z>
].split("okuyama\\-");<z>
versionWork[1].split("\\.");<z>
versionBuf = new StringBuilder(5);<z>
append(versionNoWork[0]);<z>
(".");<z>
< versionNoWork.length; i++) {<z>
]);<z>
(versionBuf.toString());<z>
{<z>
;<z>
ce) {<z>
() > 1) {<z>
this.autoConnect();<z>
);<z>
e) {<z>
OkuyamaClientException(ce);<z>
{<z>
(ce);<z>
(SocketException se) {<z>
) > 1) {<z>
);<z>
ret = this.initClient();<z>
e) {<z>
OkuyamaClientException(se);<z>
{<z>
throw new OkuyamaClientException(se);<z>
} catch (Throwable e) {<z>
size() > 1) {<z>
);<z>
ret = this.initClient();<z>
{<z>
(e);<z>
else {<z>
OkuyamaClientException(e);<z>
ret;<z>
ProtocolException, NamingException {<z>
);<z>
("Consuming message - ttl=" + ttl);<z>
convertDestination(destinationName, true);<z>
session.createConsumer(destination);<z>
Message message;<z>
ttl > 0) {<z>
);<z>
else {<z>
message = consumer.receive();<z>
) {<z>
;<z>
;<z>
;<z>
message;<z>
FlexoExceptionHandler<WSDelete> getDefaultExceptionHandler() {<z>
WSDelete>() {<z>
{<z>
.getLocalizationKey() != null) {<z>
localizedForKey("ws_delete_not_completed") + " : "<z>
.getLocalizationKey()));<z>
true;<z>
else {<z>
("ws_delete_not_completed"));<z>
return true;<z>
ref){<z>
= null;<z>
)<z>
getRefCat().equals(ref)){<z>
if (shapeList == null)<z>
= new ArrayList<Shape>();<z>
(shape);<z>
return shapeList;<z>
clipRect,<z>
{<z>
(); iterator<z>
{<z>
(Viewport) iterator.next();<z>
));<z>
{<z>
resource.isOpen()) {<z>
new BeanDefinitionStoreException(<z>
"] contains an open stream: " +<z>
;<z>
InputStream inputStream;<z>
getInputStream();<z>
ex) {<z>
(<z>
+ resource + "]: cannot open InputStream. " +<z>
);<z>
validationModeDetector.detectValidationMode(inputStream);<z>
{<z>
+<z>
+ "]: an error occurred whilst reading from the InputStream.", ex);<z>
(int featureID, Object newValue) {<z>
(featureID) {<z>
:<z>
((BehavioralFeature)newValue);<z>
:<z>
((Usage)newValue);<z>
(featureID, newValue);<z>
RecognitionException {<z>
int stackSize = keepStackSize();<z>
;<z>
;<z>
_fsp--;<z>
) return ;<z>
{<z>
(re);<z>
(input,re);<z>
stackSize);<z>
data)<z>
){<z>
.EQUAL);<z>
){<z>
), Criteria.EQUAL);<z>
} else if (filterNo==1003){<z>
.EQUAL);<z>
else if (filterNo==1004){<z>
Criteria.EQUAL);<z>
==1005){<z>
, Criteria.EQUAL);<z>
==1006){<z>
50), Criteria.EQUAL);<z>
filterNo==1007){<z>
(), Criteria.EQUAL);<z>
e)<z>
double width, double height, Wrap wrap,<z>
{<z>
this.file = file;<z>
width;<z>
;<z>
wrap;<z>
this.colorable = colorable;<z>
) {<z>
+ "/"<z>
requestType + "?");<z>
);<z>
return buff;<z>
type, String data, VersionConstraint unsatisfied) {<z>
= bundle;<z>
data;<z>
type = type;<z>
unsatisfied;<z>
Product product) {<z>
= new Table();<z>
table.setCellspacing(0);<z>
table.setCellpadding(1);<z>
1;<z>
Supplier supplier;<z>
supplier = product.getSupplier();<z>
, row++);<z>
;<z>
showContactInfo) {<z>
;<z>
null) {<z>
);<z>
phone;<z>
hasNext()) {<z>
;<z>
) {<z>
{<z>
case PhoneType.FAX_NUMBER_ID :<z>
)), 1, row++);<z>
PhoneType.HOME_PHONE_ID :<z>
++);<z>
MOBILE_PHONE_ID :<z>
);<z>
, row++);<z>
;<z>
!= null) {<z>
;<z>
;<z>
()) {<z>
);<z>
email.getEmailAddress())) {<z>
1, row++);<z>
), 1, row++);<z>
String orgID = supplier.getOrganizationID();<z>
++);<z>
!= null) {<z>
++);<z>
catch (Exception e) {<z>
.printStackTrace();<z>
return table;<z>
){<z>
){<z>
setParent(this);<z>
(i,this.ID);<z>
addAll(c.words);<z>
c.totalSize;<z>
+=c.wordCount;<z>
, boolean close)<z>
written = true;<z>
write('<');<z>
name);<z>
.length > 0)<z>
length; i<n; i+=2)<z>
+1];<z>
ATTR_EMIT)<z>
write(' ');<z>
writer.write(attributes[i]);<z>
(v != Attribute.ATTR_SKIP)<z>
write(' ');<z>
.write(attributes[i]);<z>
null)<z>
write("=\"");<z>
);<z>
("\"");<z>
"textarea".equals(name);<z>
) writer.write('/');<z>
write('>');<z>
, IElementCollector collector, IProgressMonitor monitor) {<z>
.startFetching();<z>
(DeferredMethodWrapper) object;<z>
monitor);<z>
.done();<z>
(OperationCanceledException e) {<z>
SEARCH_CANCELED }, monitor);<z>
Exception e) {<z>
;<z>
finally {<z>
);<z>
{<z>
== obj) {<z>
;<z>
if (!(obj instanceof MergedContextConfiguration)) {<z>
false;<z>
obj;<z>
.locations)) {<z>
;<z>
classes)) {<z>
false;<z>
.equals(that.contextInitializerClasses)) {<z>
;<z>
that.activeProfiles)) {<z>
return false;<z>
nullSafeToString(that.contextLoader))) {<z>
return false;<z>
;<z>
)<z>
(teleTimer == -1)<z>
getPlugin().cancelTask(teleTimer);<z>
)<z>
;<z>
;<z>
)<z>
;<z>
.equals(x12de355)<z>
|| MUOM.X12_MINUTE.equals(x12de355)<z>
(x12de355)<z>
X12_DAY.equals(x12de355)<z>
.equals(x12de355)<z>
(x12de355)<z>
equals(x12de355)<z>
|| MUOM.X12_MONTH_WORK.equals(x12de355)<z>
X12_YEAR.equals(x12de355)<z>
() {<z>
isSelected();<z>
.setEnabled(proxyEnabled);<z>
proxyPortTxt.setEnabled(proxyEnabled);<z>
(proxyEnabled);<z>
proxyEnabled);<z>
boolean authRequired = proxyEnabled<z>
proxyAuthRequiredCheckbox.isSelected();<z>
);<z>
authRequired);<z>
config, IJavaProject javaProject) {<z>
);<z>
.isProjectBuildPathEnabled()) {<z>
(), javaProject));<z>
) throws SQLException {<z>
{<z>
DbConnectionManager.getConnection();<z>
);<z>
public IScriptFolder getScriptFolder(IPath path) {<z>
childs = getChildrenOfType(SCRIPT_FOLDER);<z>
i) {<z>
);<z>
equals(path.toPortableString())) {<z>
return folder;<z>
ModelException e) {<z>
if (DLTKCore.DEBUG) {<z>
;<z>
return new ExternalScriptFolder(this, path);<z>
createDefaultEditPolicies() {<z>
();<z>
;<z>
EditPolicyRoles.SEMANTIC_ROLE, new ClassOperationCompartmentItemSemanticEditPolicy());<z>
, new PapyrusCreationEditPolicy());<z>
DragDropEditPolicy());<z>
DuplicatePasteEditPolicy.PASTE_ROLE, new DuplicatePasteEditPolicy());<z>
, new RemoveOrphanViewPolicy());<z>
ClassDiagramDragDropEditPolicy());<z>
buf, String str, boolean comma) {<z>
comma) {<z>
.append(',');<z>
buf.append(str);<z>
;<z>
Object newValue) {<z>
switch (featureID) {<z>
case GMFGenPackage.GEN_JAVA_EXPRESSION_PROVIDER__THROW_EXCEPTION:<z>
;<z>
:<z>
Boolean)newValue);<z>
newValue);<z>
ks, int j,<z>
boolean adjoin ) {<z>
size();<z>
p = pvt.getArray();<z>
if( adjoin ) {<z>
= p[j];<z>
swap( ks, j );<z>
h1( pj, ks );<z>
;<z>
++ ){<z>
pk = p[k];<z>
, this, pk);<z>
, b, 0 );<z>
dq[0];<z>
; k++ )<z>
[pj] = 0;<z>
p[j];<z>
; i++ )<z>
] = p[i+1];<z>
-1] = pj;<z>
double [] cs;<z>
< ks-1; i++ ){<z>
p[i]] );<z>
)<z>
1, p[l] );<z>
; l++ )<z>
, i+1, l );<z>
final JSplitPane createVerticalSplitPane(<z>
{<z>
= new JSplitPane();<z>
(JSplitPane.VERTICAL_SPLIT);<z>
(0.5);<z>
setDividerSize(10);<z>
;<z>
setBottomComponent(bottomPane);<z>
(true);<z>
splitPane;<z>
)<z>
SQLException( "Unsupported in this database" );<z>
void initPlateform() {<z>
.getInstance(plateformStrategy).getPlateform();<z>
().init(getApplication());<z>
IllegalStateException e) {<z>
, plateform,<z>
);<z>
Object obj1) {<z>
{<z>
(ContainsConstraint) obj1;<z>
(cc.ref)<z>
cc.op<z>
this.obj, cc.obj)<z>
this.cls, cc.cls);<z>
;<z>
sharedPreferences,<z>
) {<z>
{<z>
)) {<z>
R.string.settings_warning_controller_non_international_format_buddy_number_warning);<z>
)) {<z>
getUpdateFrequencyInMilliSeconds(sharedPreferences);<z>
< MINIMUM_RECOMENDED_UPDATE_FREQUENCY) {<z>
.string.settings_warning_controller_frequent_update_warning);<z>
) {<z>
values = new ContentValues();<z>
)<z>
_ID, mId);<z>
)<z>
.MY_BOOLEAN, mMyBoolean);<z>
)<z>
mMyDouble);<z>
)<z>
.MY_FLOAT, mMyFloat);<z>
mMyIntSet)<z>
);<z>
mMyLongSet)<z>
);<z>
mMyCharSet)<z>
mMyChar));<z>
if (mMyStringSet)<z>
MY_STRING, mMyString);<z>
)<z>
));<z>
mMyTimeSet)<z>
.Columns.MY_TIME, mMyTime);<z>
return values;<z>
Permission permission,<z>
) {<z>
authorities = context.get(permission);<z>
(authorities != null) {<z>
();<z>
w, int h, int pix) {<z>
bytesPerPixel = getPF().bpp/8;<z>
();<z>
; ry++) {<z>
< x+w; rx++)<z>
;<z>
private void deleteEntryAndClose(){<z>
);<z>
ex) {<z>
;<z>
+<z>
, JOptionPane.ERROR_MESSAGE);<z>
);<z>
refreshBBtab();<z>
(false);<z>
,<z>
"Entry Deleted", JOptionPane.INFORMATION_MESSAGE);<z>
) throws OLAPException<z>
!= null )<z>
;<z>
;<z>
element, final Collection runnables) {<z>
add(new Runnable() {<z>
void run() {<z>
(element);<z>
});<z>
Matcher<?> matcher) {<z>
;<z>
) {<z>
item = iterator.next();<z>
)) return item;<z>
null;<z>
,<z>
, String> headers) throws IOException {<z>
, headers);<z>
(regex);<z>
DevFailed<z>
._UseDb == false)<z>
data = new DbDatum[2];<z>
;<z>
;<z>
"Description");<z>
"This class will encapsulate the DAWB workflow executor");<z>
).put_property(data);<z>
(byte b, IRandom prng)<z>
;<z>
Mi |= b & 0xFF;<z>
msgLength++;<z>
)<z>
msgWords++;<z>
;<z>
= getNextKeyWord(prng);<z>
long t;<z>
; i++)<z>
t = context[i] & 0xFFFFFFFFL;<z>
t += Ki[i] * Mi;<z>
;<z>
;<z>
{<z>
.getSkinProvider(SKIN);<z>
skinProvider.createRuleSetNodeFigure();<z>
).getConstraint();<z>
width == -1) {<z>
().width;<z>
== -1) {<z>
= result.getSize().height;<z>
);<z>
;<z>
obj) {<z>
true;<z>
if (obj == null) return false;<z>
obj.getClass()) return false;<z>
obj;<z>
) {<z>
return false;<z>
(other.mail)) return false;<z>
null) {<z>
other.name != null) return false;<z>
return false;<z>
(phone == null) {<z>
other.phone != null) return false;<z>
false;<z>
null) {<z>
return false;<z>
false;<z>
;<z>
(String[] substrates,<z>
String[] products,<z>
) {<z>
? "b" : "v";<z>
, reversible);<z>
stringValue) {<z>
null;<z>
;<z>
);<z>
(long) x;<z>
{<z>
{<z>
val.intValue());<z>
} else {<z>
.longValue());<z>
(float) x) == x) {<z>
floatValue());<z>
else {<z>
;<z>
(<z>
<C> expr,<z>
{<z>
extends AbstractVisitor<<z>
, S, COA, SSA, CT> {<z>
;<z>
public Variable<C, PM><z>
VariableExp<C, PM> v) {<z>
{<z>
;<z>
return v.getReferredVariable();<z>
return null;<z>
finder = new ResultFinder();<z>
);<z>
finder.found;<z>
(Panel panel)<z>
instanceof PanelBase)<z>
);<z>
());<z>
writeU32(long val) {<z>
, 32);<z>
(4);<z>
;<z>
0xFF);<z>
) & 0xFF);<z>
0xFF);<z>
)<z>
(name);<z>
file);<z>
;<z>
{<z>
(fgContributedAssistProcessors == null) {<z>
(<z>
false);<z>
fgContributedAssistProcessors;<z>
RightTuple rightTuple) {<z>
first != null ) {<z>
.first.setPrevious( rightTuple );<z>
;<z>
rightTuple;<z>
else {<z>
= rightTuple;<z>
this.last = rightTuple;;<z>
) {<z>
packingType = "UNKNOWN";<z>
switch (pktyp) {<z>
case GempakConstants.MDGNON :<z>
"MDGNON";<z>
:<z>
"MDGGRB";<z>
MDGNMC :<z>
= "MDGNMC";<z>
case GempakConstants.MDGDIF :<z>
packingType = "MDGDIF";<z>
case GempakConstants.MDGDEC :<z>
= "MDGDEC";<z>
MDGRB2 :<z>
packingType = "MDGRB2";<z>
;<z>
getInstance(Object o)<z>
if (o instanceof POPODecKeyRespContent)<z>
o;<z>
(o instanceof ASN1Sequence)<z>
(ASN1Sequence)o);<z>
.getClass().getName());<z>
node) {<z>
node);<z>
);<z>
createConstant_ge4r0w_a0(editorContext, node));<z>
, node));<z>
node));<z>
;<z>
final String siteName) {<z>
=<z>
new StringBuilder(Properties.HCT_ROOT);<z>
queryString.append(Properties.SLASH);<z>
queryString.append(siteName);<z>
query = getQueryManager().createQuery(<z>
;<z>
getNodes().hasNext()) {<z>
;<z>
(RepositoryException e) {<z>
error("Unable to check if site '{}' "<z>
;<z>
;<z>
;<z>
Notepad() {<z>
"images/cut.gif")));<z>
VK_X, ActionEvent.CTRL_MASK));<z>
).getResource("images/copy.gif")));<z>
KeyEvent.VK_C, ActionEvent.CTRL_MASK));<z>
).getResource("images/paste.gif")));<z>
VK_V, ActionEvent.CTRL_MASK));<z>
;<z>
);<z>
(ediT == null) {<z>
("Edit");<z>
(cuT);<z>
;<z>
add(pastE);<z>
;<z>
);<z>
.add(ediT);<z>
ediT.addSeparator();<z>
.addActionListener(new ActionListener(){<z>
{<z>
);<z>
;<z>
addActionListener(new ActionListener(){<z>
{<z>
);<z>
);<z>
(new ActionListener(){<z>
actionPerformed(ActionEvent ae){<z>
actions.pastE();<z>
});<z>
.addActionListener(new ActionListener(){<z>
{<z>
actions.selectALL();<z>
;<z>
("images/cut.gif")));<z>
).getResource("images/copy.gif")));<z>
getResource("images/paste.gif")));<z>
toolBar.add(cutButton);<z>
"Cut");<z>
add(copyButton);<z>
.setToolTipText("Copy");<z>
(pasteButton);<z>
("Paste");<z>
addSeparator();<z>
.addActionListener(new ActionListener(){<z>
actionPerformed(ActionEvent ae){<z>
;<z>
);<z>
copyButton.addActionListener(new ActionListener(){<z>
public void actionPerformed(ActionEvent ae){<z>
);<z>
});<z>
new ActionListener(){<z>
(ActionEvent ae){<z>
;<z>
);<z>
ComponentContext ctxt) {<z>
();<z>
();<z>
) {<z>
);<z>
ldapFilter = new StringBuffer("(|");<z>
requiredServices) {<z>
;<z>
);<z>
());<z>
[] serviceReferences =<z>
.toString());<z>
serviceReferences != null) {<z>
{<z>
))[0];<z>
requiredServices.remove(service);<z>
(log.isDebugEnabled()) {<z>
+ service);<z>
) {<z>
(bundleContext);<z>
} else {<z>
);<z>
e) {<z>
;<z>
String hexString) {<z>
);<z>
matches()) {<z>
NumberFormatException();<z>
[] hexSegments = new String[3];<z>
] = matcher.group(1);<z>
1] = matcher.group(2);<z>
= matcher.group(3);<z>
return hexSegments;<z>
, Object[] args ) throws Exception {<z>
);<z>
0;<z>
== 2 ) {<z>
args[ 1 ] ).intValue();<z>
else {<z>
size();<z>
< 0 ) {<z>
;<z>
0 ) {<z>
new IllegalArgumentException( "length must be non-negative integer" );<z>
);<z>
) {<z>
size = CURRENCY_TABLE.length;<z>
];<z>
++)<z>
];<z>
;<z>
AbstractMySqlConnection connection) {<z>
) {<z>
);<z>
{<z>
{<z>
;<z>
(oldDatatype);<z>
(datatype != oldDatatype) {<z>
())<z>
, oldDatatype, datatype));<z>
;<z>
CharSequence s, int start, int end) {<z>
{<z>
s = "null";<z>
)) {<z>
);<z>
.toString());<z>
newEnvironment, Environment env) {<z>
null) {<z>
return new BorlandCCompiler(newEnvironment, env);<z>
this;<z>
EDataType eDataType, String initialValue)<z>
(initialValue);<z>
;<z>
return result;<z>
{<z>
editorInput;<z>
editorRef.getEditorInput();<z>
{<z>
false;<z>
equals(input)){<z>
;<z>
{<z>
;<z>
;<z>
IOException {<z>
resName("org.codehaus.groovy.runtime.callsite.AbstractCallSite"));<z>
new ClassReader(asStream);<z>
COMPUTE_MAXS);<z>
ClassVisitor(4, cw) {<z>
, String[] interfaces) {<z>
signature, "sun/reflect/GroovyMagic", interfaces);<z>
ClassWriter.COMPUTE_MAXS);<z>
();<z>
"org.codehaus.groovy.runtime.callsite.AbstractCallSite");<z>
){<z>
new JPanel();<z>
);<z>
sortSkills(skillManagerList);<z>
[skillManagerList.size()];<z>
;<z>
();<z>
>();<z>
(Skill s : c){<z>
== 0 ||<z>
{<z>
(s.getName())){<z>
(s);<z>
(s);<z>
JTextPane();<z>
;<z>
JTextPane();<z>
getDescription());<z>
Y_AXIS));<z>
();<z>
;<z>
JLabel("Name:");<z>
);<z>
namePanel.add(nameLabel);<z>
(name);<z>
(namePanel);<z>
);<z>
0));<z>
= new JLabel("Description");<z>
;<z>
;<z>
.add(description);<z>
add(descriptionPanel);<z>
JPanel();<z>
DefaultListModel<Skill>();<z>
Skill>();<z>
: visibleSkills){<z>
availableSkillsList.addElement(sk);<z>
: classSkillList){<z>
;<z>
);<z>
;<z>
JScrollPane availableWrapper = new JScrollPane(availableSkills);<z>
JScrollPane(skills);<z>
;<z>
;<z>
JButton("Add >>>");<z>
addActionListener(this);<z>
(ADD_TO);<z>
removeFrom = new JButton("<<< Remove");<z>
this);<z>
.setActionCommand(REMOVE_FROM);<z>
add(addTo);<z>
;<z>
;<z>
.add(skillWrapper);<z>
_this.add(skillsManagement);<z>
new JButton("Save");<z>
.setActionCommand(SAVE);<z>
);<z>
"Cancel");<z>
;<z>
.addActionListener(this);<z>
savePanel = new JPanel();<z>
saveButton);<z>
savePanel.add(cancelButton);<z>
);<z>
getContentPane().add(_this);<z>
,<z>
boolean prefixPatternWithBase) {<z>
.substring(0, index)),<z>
include, prefixPatternWithBase);<z>
,<z>
boolean update_if_found )<z>
getAutoSearch()){<z>
)){<z>
, update_if_found );<z>
, int y) {<z>
component = component;<z>
Graphics2D g = (Graphics2D) graphics;<z>
);<z>
;<z>
int cols = 0;<z>
.blocks) {<z>
;<z>
.cols(cols);<z>
block : a.blocks) {<z>
false);<z>
;<z>
CancelAction(Cancellable cancellable) {<z>
"coffeescript/nb/resources/stop.png", false));<z>
"Stop");<z>
setEnabled(false);<z>
;<z>
BeanManagerBean getManagerBean()<z>
);<z>
(new DependentScopeLiteral());<z>
DefaultLiteral());<z>
AnyLiteral());<z>
managerComponent.addApiType(BeanManager.class);<z>
;<z>
return managerComponent;<z>
getFilter() {<z>
== null) {<z>
).getAttribute(ATT_SECTION_FILTER) != null) {<z>
IFilter) configurationElement<z>
);<z>
) {<z>
exception);<z>
filter;<z>
{<z>
Uri.parse(path);<z>
String url;<z>
message;<z>
YoutubeURLParser.parseYoutubeURL(playuri);<z>
(youtubeVideoId != null){<z>
;<z>
" on XBMC? Youtube addon required!";<z>
else{<z>
);<z>
;<z>
getConfirmPlayOnXBMC();<z>
) {<z>
Builder(mActivity);<z>
);<z>
builder.setMessage(message);<z>
.setCancelable(true);<z>
builder.setIcon(drawable.icon);<z>
() {<z>
) {<z>
);<z>
.finish();<z>
);<z>
.setCancelable(true);<z>
.OnClickListener() {<z>
onClick(DialogInterface dialog, int which) {<z>
dialog.cancel();<z>
.finish();<z>
;<z>
);<z>
();<z>
Exception e) {<z>
;<z>
{<z>
;<z>
;<z>
) throws XUnitException {<z>
;<z>
= inputMetric.validateOutputFile(junitTargetFile);<z>
(!validateOutput) {<z>
inputFile + "' doesn't match the JUnit format");<z>
getOutputValidationErrors()) {<z>
));<z>
false;<z>
) {<z>
"Validation error on output", ve);<z>
true;<z>
RecognitionException {<z>
int stackSize = keepStackSize();<z>
(FollowSets001.FOLLOW_rule__EvidenceAssertion__Group_8_3__1__Impl_in_rule__EvidenceAssertion__Group_8_3__139102);<z>
();<z>
--;<z>
) {<z>
(re);<z>
(input,re);<z>
);<z>
{<z>
) || isNaN(f2)) {<z>
return NaN;<z>
< 0) ? f2 : f1);<z>
{<z>
.createDefaultEditPolicies();<z>
());<z>
);<z>
());<z>
);<z>
);<z>
installEditPolicy("REMOVE_ORPHAN_VIEW", new RemoveOrphanViewPolicy());<z>
());<z>
EditPolicy.GRAPHICAL_NODE_ROLE, new CustomContainerEditPolicy());<z>
new CustomDiagramDragDropEditPolicy());<z>
Element toCML() {<z>
);<z>
StringBuilder();<z>
length-1; i++) {<z>
);<z>
());<z>
(' ');<z>
);<z>
].getID());<z>
()));<z>
parity));<z>
atomParityElement;<z>
int moveJong(int num) {<z>
&& jongState_ <= 34) {<z>
jongState_ = jongTransTable[jongState_][num];<z>
;<z>
< 0) {<z>
;<z>
setError();<z>
charAt(jongState_));<z>
reset();<z>
setError();<z>
return jongState_;<z>
) {<z>
.dispose();<z>
null) {<z>
image2 : imagesToDispose) {<z>
;<z>
;<z>
{<z>
()) {<z>
image2.dispose();<z>
null;<z>
newObjectOfClass(String theClass) {<z>
aClass = Class.forName(theClass);<z>
;<z>
) {<z>
+ " has no constructors");<z>
return null;<z>
i<constructors.length; i++) {<z>
{<z>
i].getParameterTypes();<z>
length == 0) {<z>
0]);<z>
; i++) {<z>
.getModifiers())) {<z>
= constructors[i].getParameterTypes();<z>
{<z>
boolean.class) {<z>
)});<z>
)) {<z>
("0")});<z>
class) {<z>
('a')});<z>
();<z>
constructors.length; i++) {<z>
();<z>
);<z>
<params.length; j++) {<z>
[j].getName());<z>
;<z>
);<z>
);<z>
.err.print(buff);<z>
e) {<z>
e);<z>
null;<z>
assertNotNull( final T object,<z>
final Object message )<z>
object == null )<z>
new NullPointerException( message.toString() );<z>
object;<z>
List<XMLEvent> aggregateEventList() {<z>
LinkedList<XMLEvent>();<z>
aggregatedInsertEventsStack = new Stack();<z>
Stack();<z>
size());<z>
this.loadEmbedEventList){<z>
xmlEvent);<z>
this.loadEmbedEventList.clear();<z>
++) {<z>
.get(i);<z>
XercesXMLEvent();<z>
equals(BetterFormEventNames.PROTOTYPE_CLONED)){<z>
)){<z>
xmlEvent.getContextInfo());<z>
else{<z>
);<z>
.target;<z>
());<z>
xmlEventToAdd);<z>
(xmlEventToAdd);<z>
.size() >0) {<z>
);<z>
;<z>
.equals(BetterFormEventNames.ITEM_INSERTED)){<z>
();<z>
("position"));<z>
;<z>
("value"));<z>
)){<z>
.add(xmlEvent);<z>
aggregatedEmbedEventsStack.push(xmlEvent);<z>
).equals(BetterFormEventNames.EMBED_DONE)){<z>
, xmlEvent.getContextInfo("targetElement"));<z>
.add(xmlEvent);<z>
.FOCUS)){<z>
push(xmlEvent);<z>
.add(xmlEvent);<z>
) {<z>
(aggregatedFocusList.pollLast());<z>
;<z>
IllegalXMLVMException {<z>
("type");<z>
);<z>
(inst.getAttributeValue("index"));<z>
type, idx);<z>
WMSMapContent mapContent) {<z>
.format(<z>
calculateOGCScale(<z>
,<z>
mapContent.getRequest().getWidth(),<z>
)<z>
{<z>
= linksView.getInput();<z>
(input);<z>
) {<z>
;<z>
editedLink);<z>
);<z>
.OK) {<z>
), dialog.getValue()));<z>
;<z>
key, byte[] data) {<z>
byte[] bOut = null;<z>
null;<z>
(key);<z>
keyfactory = SecretKeyFactory.getInstance("desede");<z>
generateSecret(spec);<z>
= Cipher.getInstance("desede" + "/ECB/PKCS5Padding");<z>
;<z>
doFinal(data);<z>
} catch (IllegalBlockSizeException e) {<z>
bOut = null;<z>
(InvalidKeyException e) {<z>
;<z>
catch (NoSuchAlgorithmException e) {<z>
;<z>
} catch (InvalidKeySpecException e) {<z>
bOut = null;<z>
catch (BadPaddingException e) {<z>
;<z>
{<z>
null;<z>
bOut;<z>
)<z>
setNpcQuestData(204555).addOnQuestStart(questId);<z>
setNpcQuestData(204555).addOnTalkEvent(questId);<z>
setNpcQuestData(204562).addOnTalkEvent(questId);<z>
setNpcQuestData(730024).addOnTalkEvent(questId);<z>
stopApplicationScope()<z>
isActive())<z>
instanceof AbstractSharedContext)<z>
clear();<z>
void command_showSuspensionState () {<z>
ec = getExecutionContext();<z>
getThreadSuspensions();<z>
{<z>
("There are no currently suspended threads.");<z>
.getCurrentSuspendedThread();<z>
SuspensionState suspension = suspensions.get(currentThread);<z>
null) {<z>
("The current thread is no longer suspended. Change to another thread.");<z>
;<z>
;<z>
;<z>
(argNames.length > 0) {<z>
(argValues);<z>
logInfo("Argument values:");<z>
; i < n; ++i) {<z>
[i]);<z>
logInfo("");<z>
)<z>
new StringBuilder(method + '?');<z>
localKeyValueStore.get("user_key");<z>
null)<z>
user_key = login();<z>
IOException e) {<z>
();<z>
"user_key="+user_key+'&');<z>
if (params != null)<z>
.keySet().iterator();<z>
))<z>
;<z>
get(paramName);<z>
);<z>
.append("format=json");<z>
;<z>
adjustmentValueChanged(AdjustmentEvent e) {<z>
);<z>
previous - hval;<z>
;<z>
0 && scrollBarsMayControlAdjusting) {<z>
LAYOUT).getScale();<z>
;<z>
getTranslateInstance(dh, 0);<z>
LAYOUT).preConcatenate(at);<z>
, int len) {<z>
= new byte[4096];<z>
= 0;<z>
1;<z>
i < len * 2; i++) {<z>
) & 0xF;<z>
== -1) {<z>
(tblPos < 13)<z>
byte) FREQUENCY_ORDERED_CHARS[tblPos];<z>
tblPos;<z>
{<z>
(byte) FREQUENCY_ORDERED_CHARS[(carry << 4)<z>
195];<z>
1;<z>
(out, 0, outPos);<z>
) throws CoreException {<z>
return;<z>
0;) {<z>
];<z>
getID() == IProblem.UndefinedType) {<z>
)<z>
;<z>
.add(sourceFile.typeLocator());<z>
(sourceFile, problems);<z>
featureID) {<z>
{<z>
CALENDAR_TYPE__UID:<z>
equals(uID);<z>
CALENDAR_TYPE__NAME:<z>
);<z>
case MspdiPackage.CALENDAR_TYPE__IS_BASE_CALENDAR:<z>
isSetIsBaseCalendar();<z>
.CALENDAR_TYPE__BASE_CALENDAR_UID:<z>
;<z>
:<z>
weekDays != null;<z>
.CALENDAR_TYPE__EXCEPTIONS:<z>
!= null;<z>
:<z>
null;<z>
return super.eIsSet(featureID);<z>
) throws SAXException {<z>
("type");<z>
{<z>
.listType = "array-list";<z>
();<z>
Composite parent, TabbedPropertySheetWidgetFactory factory, int style) {<z>
parent, style);<z>
= parent;<z>
this.factory = factory;<z>
computeSelectionPermutation(<z>
StaticPropertyOracle propOracle) {<z>
getOrderedProps();<z>
] orderedPropValues = propOracle.getOrderedPropValues();<z>
<SelectionProperty, String>();<z>
{<z>
.getName());<z>
(key.tryGetValue() != null) {<z>
if (key.isDerived()) {<z>
(key, orderedPropValues[i]);<z>
;<z>
) {<z>
(!VrapperPlugin.isMouseDown()<z>
getSelection() instanceof TextSelection)<z>
Options.VISUAL_MOUSE))<z>
event.getSelection();<z>
{<z>
selection.getLength() == 0 &&<z>
getCurrentModeName())<z>
()))) {<z>
NAME);<z>
{<z>
AbstractVisualMode.KEEP_SELECTION_HINT);<z>
, ConfigurationManager configManager) {<z>
{<z>
"This action mapper requires the setting 'slashesInActionNames' to be set to 'true'");<z>
= super.getMapping(request, configManager);<z>
{<z>
;<z>
actionName = mapping.getName();<z>
;<z>
{<z>
actionName.lastIndexOf('/');<z>
{<z>
+1);<z>
(mapping.getMethod() == null) {<z>
length() -1) {<z>
(request)) {<z>
setMethod("index");<z>
)) {<z>
setMethod("create");<z>
else if (lastSlashPos > -1) {<z>
.equals(id)) {<z>
mapping.setMethod("editNew");<z>
isGet(request)) {<z>
);<z>
(request)) {<z>
;<z>
)) {<z>
"update");<z>
&& lastSlashPos > -1) {<z>
(0, lastSlashPos);<z>
!= null && id != null) {<z>
mapping.getParams() == null) {<z>
));<z>
id);<z>
, lastSlashPos - 1);<z>
&& actionSlashPos < lastSlashPos) {<z>
, actionSlashPos);<z>
>();<z>
StringTokenizer(params, "/");<z>
boolean isNameTok = true;<z>
paramName = null;<z>
;<z>
) {<z>
{<z>
), "UTF-8");<z>
;<z>
{<z>
, "UTF-8");<z>
0)) {<z>
.put(paramName, paramValue);<z>
;<z>
) {<z>
null) {<z>
String, Object>());<z>
).putAll(parameters);<z>
} catch (Exception e) {<z>
LOG.isWarnEnabled()) {<z>
);<z>
actionSlashPos+1));<z>
mapping;<z>
() {<z>
();<z>
= 475;<z>
isPowering = false;<z>
= false;<z>
IC2Energy = 0;<z>
maxIC2Energy = 100;<z>
consumeIC2EnergyPerTick = 1;<z>
) {<z>
;<z>
argb = readInt();<z>
& FLAG_COLORINVALID) > 0) {<z>
Color.ignore();<z>
0) {<z>
;<z>
argb);<z>
boolean shouldWriteNode(ProductNode node) {<z>
(node instanceof VirtualBand) {<z>
return false;<z>
else if (node instanceof FilterBand) {<z>
return false;<z>
;<z>
intToEnumShort(int intValue) {<z>
.Application.make(<z>
intValue)});<z>
{<z>
(document.getJobDescriptionCount () == 0) {<z>
(mainFrame,<z>
, "BAM Sample",<z>
WARNING_MESSAGE);<z>
document.getJobDescriptionCount (); ++jobN) {<z>
;<z>
if (!readyToRun (jobDescription)) {<z>
.showMessageDialog (mainFrame, "The message source <"<z>
+ jobDescription.getMessageSourceDescription ().getName ()<z>
+ "> must have triggers and actions set.", "BAM Sample",<z>
.WARNING_MESSAGE);<z>
calServices = getCalServices();<z>
.getJobDescriptionCount (); ++jobN) {<z>
getNthJobDescription (jobN);<z>
;<z>
));<z>
;<z>
;<z>
);<z>
(makeStatusListener (job));<z>
messageSource.addMessageListener(messageLogger);<z>
start();<z>
job.start();<z>
job);<z>
;<z>
} catch (GemCompilationException ex) {<z>
);<z>
JOptionPane.showMessageDialog (mainFrame,<z>
"BAM Sample",<z>
);<z>
public String defaultValueIfNull(String value)<z>
value.equals(""))<z>
"-";<z>
value;<z>
setOptAll(boolean optAll) {<z>
optInclude) {<z>
getMessage("000100")<z>
;<z>
optAll = optAll;<z>
)<z>
= ModelFactory.createDefaultModel();<z>
())<z>
.READ);<z>
getNamedModel(ImejiJena.imageModel);<z>
(s);<z>
, exportModel);<z>
);<z>
e)<z>
();<z>
;<z>
;<z>
public Component(int scanComponentSelector,<z>
,<z>
)<z>
this.scanComponentSelector = scanComponentSelector;<z>
dcCodingTableSelector;<z>
.acCodingTableSelector = acCodingTableSelector;<z>
,<z>
, boolean displaySingleJobMonitorItem,<z>
boolean displayBatchJobMonitorItem,<z>
displayFileManagementItem) {<z>
true, null,<z>
, null);<z>
string) {<z>
indexOf('(');<z>
')');<z>
;<z>
= new ArrayList<String>();<z>
boolean insideP = false;<z>
relevantParts.split(",")) {<z>
if (isOpenP(possiblePart)) {<z>
= true;<z>
add(possiblePart);<z>
isCloseP(possiblePart)) {<z>
;<z>
size() - 1;<z>
(lastPos);<z>
.remove(lastPos);<z>
+ possiblePart);<z>
} else {<z>
{<z>
1;<z>
last = strings.get(lastPos);<z>
;<z>
);<z>
} else {<z>
;<z>
];<z>
(i++))<z>
result;<z>
BaseObject baseObj) throws Exception {<z>
(node == null)<z>
null;<z>
obj = null;<z>
SwdDomain))<z>
);<z>
obj = (SwdDomain)baseObj;<z>
ClassObject.toObject(node, obj);<z>
.getAttributes();<z>
if (attrMap != null) {<z>
.getNamedItem(A_FORMID);<z>
formVersion = attrMap.getNamedItem(A_FORMVERSION);<z>
formName = attrMap.getNamedItem(A_FORMNAME);<z>
= attrMap.getNamedItem(A_TABLENAME);<z>
A_KEYCOLUMN);<z>
attrMap.getNamedItem(A_TITLEFIELDID);<z>
.getNamedItem(A_KEYDUPLICABLE);<z>
attrMap.getNamedItem(A_ISSYSTEMDOMAIN);<z>
A_PUBLISHMODE);<z>
null)<z>
.getNodeValue());<z>
!= null)<z>
)));<z>
)<z>
.getNodeValue());<z>
)<z>
setTableName(tableName.getNodeValue());<z>
(keyColumn != null)<z>
.setKeyColumn(keyColumn.getNodeValue());<z>
titleFieldId != null)<z>
);<z>
if (keyDuplicable != null)<z>
(keyDuplicable.getNodeValue()));<z>
)<z>
);<z>
null)<z>
());<z>
= node.getChildNodes();<z>
null || childNodeList.getLength() == 0)<z>
return obj;<z>
) {<z>
Node childNode = childNodeList.item(i);<z>
)<z>
().equals(A_FIELDS)) {<z>
getNodes(childNode);<z>
nodes.length == 0)<z>
objs = new SwdField[nodes.length];<z>
nodes.length; j++)<z>
null);<z>
obj.setFields(objs);<z>
obj;<z>
ePersonID)<z>
ConfigurationManager<z>
"org.dspace.app.itemexport.download.dir");<z>
if (downloadDir == null)<z>
throw new Exception(<z>
);<z>
) + ePersonID;<z>
<byte[]> getChannels() {<z>
synchronized (channels) {<z>
channels);<z>
PropertySetItem item, boolean isUpdate) {<z>
null;<z>
);<z>
(isUpdate) {<z>
);<z>
} else {<z>
);<z>
();<z>
he) {<z>
+ "':" + he.getMessage());<z>
{<z>
{<z>
).getAutoCommit()) {<z>
session.connection().commit();<z>
;<z>
} catch (Exception e) {<z>
public RiakHttpMapEntityStoreAssembler withVisibility( Visibility visibility )<z>
visibility;<z>
return this;<z>
public String getSelectedVersionUUID() {<z>
{<z>
.getValue(versionChooser.getSelectedIndex());<z>
else {<z>
null;<z>
setUserId2(long userId2) {<z>
{<z>
true;<z>
= _userId2;<z>
;<z>
) {<z>
StringBuffer();<z>
: _points) {<z>
+"\n");<z>
);<z>
String controlType) {<z>
name, controlType, "-1", "-1",<z>
,<z>
+ ")", ""};<z>
() throws RecognitionException {<z>
);<z>
FOLLOW_rule__JvmParameterizedTypeReference__Group_1_2__1__Impl_in_rule__JvmParameterizedTypeReference__Group_1_2__127747);<z>
();<z>
._fsp--;<z>
.failed) return ;<z>
re) {<z>
);<z>
(input,re);<z>
restoreStackSize(stackSize);<z>
String, Site> sites) {<z>
;<z>
, IType destinationType, IMethod methodToMove)<z>
;<z>
destinationType;<z>
methodToMove = methodToMove;<z>
kSeqBooleanFunc2() {<z>
final XQuery query = new XQuery(<z>
ctx);<z>
result(query);<z>
= res;<z>
error("XPST0017")<z>
private void calcGroup110(int i) {<z>
i].equals("SddssS"))<z>
getConnectedAtomsList(atomContainer.getAtom(i));<z>
.getAtom(i);<z>
int SdOCount=0;<z>
;<z>
; j++) {<z>
SINGLE) {<z>
().equals("C")) {<z>
SsCCount++;<z>
) == IBond.Order.DOUBLE) {<z>
"O")) {<z>
SdOCount++;<z>
==2) {<z>
110]++;<z>
[i] = 110;<z>
[] args) throws Exception {<z>
robot = new Robot();<z>
getDefaultToolkit().getScreenSize();<z>
JFrame frame = new JFrame("Ghost Mouse (tm)!");<z>
button = new JButton("Gho Ghost");<z>
(button);<z>
));<z>
pack();<z>
2,<z>
2);<z>
setVisible(true);<z>
criteria)<z>
)<z>
if (isNew())<z>
();<z>
);<z>
(criteria);<z>
.SORDER_ID, getSorderId());<z>
criteria))<z>
.doSelectJoinProduct(criteria);<z>
= criteria;<z>
return collPaymentItems;<z>
, String name,<z>
String email, String organization) {<z>
"INSERT INTO ApplicantDetails (Name, MatricNo, Contact, Email, Organization) "<z>
+ "VALUES (?,?,?,?,?)";<z>
0;<z>
prep = null;<z>
rs = null;<z>
,<z>
RETURN_GENERATED_KEYS);<z>
, name);<z>
2, matricNo);<z>
, contact);<z>
email);<z>
organization);<z>
;<z>
rs = prep.getGeneratedKeys();<z>
(rs.next()) {<z>
(1);<z>
} catch (SQLException sqle) {<z>
.printStackTrace();<z>
return memberID;<z>
me) {<z>
(me.getPoint());<z>
if (pos >= 0) {<z>
(pos);<z>
getAttributes());<z>
editorMouseEvent = new EditorMouseEvent();<z>
attributes);<z>
editorMouseMotionListeners.size(); i++) {<z>
;<z>
(OfficeContext context, File inputFile)<z>
OfficeException {<z>
.exists()) {<z>
throw new OfficeException("input document not found");<z>
desktopService = context.getService(SERVICE_DESKTOP);<z>
.class, desktopService);<z>
);<z>
;<z>
(toUrl(inputFile), "_blank",<z>
loadProperties));<z>
) {<z>
"could not load document: "<z>
.getName(), illegalArgumentException);<z>
(ErrorCodeIOException errorCodeIOException) {<z>
OfficeException("could not load document: "<z>
) + "; errorCode: "<z>
errorCodeIOException);<z>
(IOException ioException) {<z>
("could not load document: "<z>
), ioException);<z>
{<z>
("could not load document: "<z>
.getName());<z>
(document);<z>
;<z>
public final void rule__Expr800__Group__0__Impl() throws RecognitionException {<z>
;<z>
) {<z>
getExprMaxParserRuleCall_0());<z>
FOLLOW_ruleExprMax_in_rule__Expr800__Group__0__Impl26909);<z>
;<z>
--;<z>
failed) return ;<z>
backtracking==0 ) {<z>
getExprMaxParserRuleCall_0());<z>
) {<z>
(re);<z>
,re);<z>
);<z>
> tokenFields,<z>
GrammaticalRelation> shortNameToGRel,<z>
factory) {<z>
List<TreeGraphNode> tgWordNodes =<z>
TreeGraphNode>(tokenFields.size());<z>
> tgPOSNodes =<z>
));<z>
new SemanticHeadFinder();<z>
fields : tokenFields) {<z>
word =<z>
CoNLLX_WordField)));<z>
pos =<z>
);<z>
.add(word);<z>
.add(pos);<z>
word };<z>
;<z>
.setParent(pos);<z>
;<z>
TreeGraphNode root =<z>
)));<z>
;<z>
tdeps =<z>
.size());<z>
{<z>
);<z>
parentIdStr.equals(""))<z>
parentIdStr) - 1;<z>
(i).get(CoNLLX_RelnField);<z>
equals("null"))<z>
.toLowerCase());<z>
().equals("root")) continue;<z>
if (grel == null) {<z>
throw new RuntimeException("Unknown grammatical relation '" +<z>
grelString + "' fields: " +<z>
i) + "\nNode: " +<z>
) + "\n" +<z>
)+"]" );<z>
=<z>
tgWordNodes.get(parentId)),<z>
i));<z>
(tdep);<z>
root);<z>
(String string) {<z>
, "SQL part cannot be null");<z>
(string);<z>
();<z>
next() {<z>
if (hasNext()) {<z>
data[cursor++];<z>
new NoSuchElementException();<z>
) {<z>
(new IndexExpression(columnNameSerializer<z>
columnName), IndexOperator.LT, valueSerializer<z>
(columnValue)));<z>
this;<z>
boolean representsMember(Member member2){<z>
{<z>
true;<z>
parent != null){<z>
return parent.representsMember(member2);<z>
{<z>
;<z>
) throws IOException<z>
if (!connected)<z>
;<z>
nodeRepresentation.getNode();<z>
void setFuseboxPath(String path){<z>
);<z>
.save();<z>
e) {<z>
));<z>
ISourceLocation loc) {<z>
.getURI();<z>
.equals("project")) {<z>
schemeNotSupported(loc, null, null);<z>
String path = "";<z>
());<z>
{<z>
;<z>
.length() == 0) {<z>
), (ISourceLocation) null, null);<z>
getAuthority());<z>
) {<z>
null, null);<z>
getFile(path);<z>
!r.exists()) {<z>
.getFolder(path);<z>
.exists()) {<z>
);<z>
;<z>
(final String contextId) {<z>
LOG.isDebugEnabled()) {<z>
;<z>
contextId);<z>
typeTwo)<z>
== BigDecimal.class))<z>
this}));<z>
.getCoercerBigDecimal(typeOne);<z>
convertorTwo = SimpleNumberCoercerFactory.getCoercerBigDecimal(typeTwo);<z>
(this == GT)<z>
GTBigDecConvComputer(convertorOne, convertorTwo);<z>
== LT)<z>
LTBigDecConvComputer(convertorOne, convertorTwo);<z>
this == GE)<z>
new GEBigDecConvComputer(convertorOne, convertorTwo);<z>
return new LEBigDecConvComputer(convertorOne, convertorTwo);<z>
()<z>
ObjectNode ret = factory.objectNode()<z>
.put("keyword", keyword)<z>
.put("message", message);<z>
)<z>
("fatal", true);<z>
(info);<z>
ret;<z>
) {<z>
();<z>
= getPackageFragmentRoot();<z>
, root != null);<z>
if (root != null) {<z>
InterfaceWrapper> elements= fSuperInterfacesDialogField.getElements();<z>
size();<z>
{<z>
= elements.get(i).interfaceName;<z>
Type type= TypeContextChecker.parseSuperInterface(intfname);<z>
type == null) {<z>
, BasicElementLabels.getJavaElementName(intfname)));<z>
;<z>
.getJavaProject())) {<z>
, BasicElementLabels.getJavaElementName(intfname)));<z>
status;<z>
return status;<z>
, IOAcknowledge ack, JSONObject json) {<z>
,<z>
json.toString());<z>
);<z>
toString());<z>
MmsException {<z>
{<z>
);<z>
;<z>
duration = 0;<z>
retriever.setDataSource(mContext, mUri);<z>
(MediaMetadataRetriever.METADATA_KEY_DURATION);<z>
(dur != null) {<z>
);<z>
duration;<z>
(Exception ex) {<z>
;<z>
);<z>
finally {<z>
);<z>
Object parse(String value) throws Exception {<z>
>();<z>
identifiers = KvpUtils.readFlat(value);<z>
== 0) {<z>
("Required paramer, coverage, missing",<z>
"coverage");<z>
for (String coverage : identifiers) {<z>
getLayerByName(coverage);<z>
.Type.RASTER)<z>
"'",InvalidParameterValue, "coverage");<z>
;<z>
;<z>
() throws SVNException {<z>
mySVNProperties == null) {<z>
();<z>
() == DAVResourceType.REGULAR) {<z>
)) {<z>
, mySVNProperties, (ISVNDirEntryHandler) null);<z>
else {<z>
null);<z>
mySVNProperties;<z>
request, VtiFpResponse response) throws VtiMethodException, IOException<z>
))<z>
("Start method execution. Method name: " + getName());<z>
"");<z>
("document_name", "");<z>
"comment", "");<z>
;<z>
;<z>
(), ""));<z>
DocMetaInfo docMetaInfo = null;<z>
;<z>
VtiHandlerException e)<z>
;<z>
version);<z>
"meta_info");<z>
);<z>
);<z>
;<z>
))<z>
;<z>
request, boolean keepEmpty )<z>
= new ExtendedMap( keepEmpty );<z>
getParameterNames();<z>
)<z>
).toString();<z>
( key );<z>
)<z>
paramValues[0] != null )<z>
String value = paramValues[0];<z>
) > 0 )<z>
value ) )<z>
);<z>
.equals( value ) )<z>
;<z>
);<z>
)<z>
putString( key, value );<z>
)<z>
);<z>
;<z>
rule__XOtherOperatorExpression__Group_1_0__0() throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
;<z>
);<z>
._fsp--;<z>
return ;<z>
(RecognitionException re) {<z>
(re);<z>
,re);<z>
(stackSize);<z>
boolean processInput() {<z>
Construction cons = kernel.getConstruction();<z>
);<z>
true);<z>
));<z>
oldVal);<z>
if (success) {<z>
doDilate(kernel,<z>
, points,<z>
;<z>
false;<z>
public static void deselectAllTabs() {<z>
< activeTabs; ii++) {<z>
PanelsManager.UNSELECTEDBLUE);<z>
String getExistingPrefix(String uri){<z>
if(parser == null)<z>
;<z>
);<z>
){<z>
;<z>
uri + "#"))<z>
return key;<z>
return null;<z>
(List<LatLon> locations)<z>
.getModel().getGlobe();<z>
Sector sector = Sector.boundingSector(locations);<z>
()];<z>
.getElevationModel().getBestResolution(sector);<z>
.MAX_VALUE;<z>
> targetResolution)<z>
;<z>
200);<z>
(InterruptedException e)<z>
;<z>
elevations;<z>
tableStatus_result(<z>
success,<z>
e)<z>
);<z>
= success;<z>
= e;<z>
throws MessageAttributeParsingException {<z>
= new byte[2];<z>
2);<z>
= Utility.twoBytesToInteger(typeArray);<z>
2];<z>
);<z>
= Utility.twoBytesToInteger(lengthArray);<z>
;<z>
);<z>
MessageAttribute ma;<z>
{<z>
; break;<z>
); break;<z>
(valueArray); break;<z>
valueArray); break;<z>
); break;<z>
;<z>
Password.parse(valueArray); break;<z>
parse(valueArray); break;<z>
ErrorCode.parse(valueArray); break;<z>
(valueArray); break;<z>
break;<z>
type <= 0x7fff) {<z>
;<z>
{<z>
"MessageAttribute with type " + type + " unkown.");<z>
;<z>
ma;<z>
ue) {<z>
;<z>
boolean matchesVisiblePackageName(PsiElement element,<z>
) {<z>
String visiblePackageName =<z>
VisiblePackageName);<z>
, element,<z>
targetQualifiedName);<z>
, String pass, String email) {<z>
{<z>
= "authurl.registration";<z>
false;<z>
);<z>
() {<z>
= new JSONObject();<z>
getPublishedDate()));<z>
getPublishedDate().getTime());<z>
} catch(Exception e) {<z>
;<z>
);<z>
("c", this.getCategory());<z>
.getName());<z>
();<z>
();<z>
seed_total = -1;<z>
> 0 ){<z>
);<z>
{<z>
== -1 ){<z>
0;<z>
seed_total += seeds;<z>
put("s","" + seed_total);<z>
getNbPeers() >= 0) {<z>
;<z>
{<z>
);<z>
comments = getComments();<z>
0 ){<z>
( "co", "" + comments );<z>
;<z>
>= 0) {<z>
= DisplayFormatters.formatByteCountToKiBEtc( size );<z>
);<z>
size_str );<z>
+ size );<z>
{<z>
.put("l", "-1");<z>
.put("lb", "0");<z>
this.getRank());<z>
, this.getContentType());<z>
= getAccuracy();<z>
>= 0 ){<z>
1 ){<z>
accuracy = 1;<z>
"" + accuracy );<z>
{<z>
this.getCDPLink());<z>
) > 0 ){<z>
);<z>
.length() > 0 ){<z>
, this.getDownloadButtonLink());<z>
0 ){<z>
this.getPlayLink());<z>
this.getVotes() >= 0 ){<z>
this.getVotes());<z>
){<z>
.getVotesDown());<z>
= getDRMKey();<z>
drmKey != null) {<z>
;<z>
;<z>
{<z>
, uid );<z>
"0");<z>
String hash = getHash();<z>
){<z>
( "h", hash );<z>
object;<z>
{<z>
CmsXmlHtmlValue)getValue(name, locale);<z>
null) {<z>
element = value.getElement();<z>
;<z>
.booleanValue());<z>
return false;<z>
Exception {<z>
!isLoaded) {<z>
new Callable<Object>(){<z>
throws Exception {<z>
fis = null;<z>
= null;<z>
exists()){<z>
storageLocation.createNewFile();<z>
{<z>
new HashMap<String, String>();<z>
else {<z>
FileInputStream(storageLocation);<z>
= new ObjectInputStream(fis);<z>
) in.readObject();<z>
isLoaded = true;<z>
{<z>
t.printStackTrace();<z>
{<z>
(fis != null){<z>
();<z>
!= null){<z>
in.close();<z>
FileNotFoundException ex) {<z>
(Exception ex) {<z>
;<z>
;<z>
});<z>
)<z>
throws FinderException, RemoteException<z>
null;<z>
= null;<z>
conn = getConnection();<z>
;<z>
.intValue());<z>
.executeQuery();<z>
;<z>
int pk;<z>
rs.first())<z>
"id");<z>
));<z>
);<z>
.close();<z>
close();<z>
);<z>
return results;<z>
e)<z>
(stmt != null)<z>
stmt.close();<z>
if (conn != null)<z>
;<z>
catch (Exception ignore)<z>
("Failed to get all buyNow by item: " + e);<z>
boolean equals(Object object) {<z>
(object instanceof PComponent))<z>
return false;<z>
= (PComponent) object;<z>
return comp.getX() == x &&<z>
y &&<z>
) == width &&<z>
.getHeight() == height &&<z>
));<z>
void createExampleControls( final Composite parent ) {<z>
);<z>
);<z>
( coolBar, 1 );<z>
createItem( coolBar, 2 );<z>
createItem( coolBar, 3 );<z>
, 5 );<z>
, SWT.DEFAULT ) );<z>
);<z>
new ControlAdapter() {<z>
( final ControlEvent e ) {<z>
;<z>
addControlListener( controlListener );<z>
addDisposeListener( new DisposeListener() {<z>
void widgetDisposed( final DisposeEvent event ) {<z>
( controlListener );<z>
);<z>
static AlgorithmParameters getInstance(String algorithm)<z>
{<z>
null) {<z>
));<z>
(engine) {<z>
getInstance(algorithm, null);<z>
,<z>
engine.provider, algorithm);<z>
throws ConstraintViolatedException {<z>
value);<z>
if(constraint == null) return -1;<z>
;<z>
) {<z>
database.getClass();<z>
);<z>
);<z>
){<z>
.add(kw);<z>
<TimeSlotValue> returnData, int plotPointsPerTimeUnit,<z>
{<z>
double[span];<z>
int arrayIndex = 0;<z>
counter = 0;<z>
size(); i++) {<z>
();<z>
;<z>
== plotPointsPerTimeUnit) {<z>
;<z>
arrayIndex++;<z>
;<z>
) throws CModelException {<z>
(fMonitor != null){<z>
(fMonitor.isCanceled())<z>
();<z>
.beginTask("element.reconciling", 10);<z>
getWorkingCopy();<z>
;<z>
null;<z>
wasConsistent || forceProblemDetection || fComputeAST) {<z>
workingCopy);<z>
(fComputeAST, fMonitor);<z>
buildDeltas();<z>
(deltaBuilder.delta != null) {<z>
> 0) {<z>
.delta);<z>
!= null) fMonitor.worked(2);<z>
} finally {<z>
;<z>
public int hashCode() {<z>
;<z>
)<z>
(CraftingRecipe recipe : SHAPED_RECIPES)<z>
)<z>
= newRecipe;<z>
filters, boolean andFilters) {<z>
);<z>
this.filters = filters;<z>
enabledFilters = FILTERS_CHANGED;<z>
();<z>
requestMarkerUpdate();<z>
dataSetId,<z>
setHandleParams )<z>
name = param.getNativeName( );<z>
.getPosition( );<z>
param.getNativeDataType( );<z>
)<z>
getParameterDataType( );<z>
OdaDataSetParameterHandle tmpParam = findDataSetParameterByName( name,<z>
);<z>
( tmpParam == null )<z>
,<z>
( ) );<z>
tmpPosition = tmpParam.getPosition( );<z>
== null )<z>
,<z>
;<z>
param.getPosition( ) ) )<z>
convertNativeTypeToROMDataType( dataSourceId, dataSetId,<z>
nativeType.intValue( ) );<z>
tmpNativeCodeType = tmpParam.getNativeDataType( );<z>
== null || tmpNativeCodeType.equals( nativeType ) )<z>
( );<z>
getParameterDataType( );<z>
( dataSourceId, dataSetId,<z>
);<z>
{<z>
out.writeStartElement(RDFNS, "Description");<z>
;<z>
("\n\t");<z>
(predicate, true);<z>
;<z>
"\n");<z>
out.writeEndElement();<z>
"\n");<z>
catch (XMLStreamException ex) {<z>
, ex);<z>
( String password, String data )<z>
"") )<z>
= DEFAULT_PASSWORD;<z>
getNewEncryptor();<z>
;<z>
encryptor.encrypt( data );<z>
catch( Exception error )<z>
;<z>
Expr array) {<z>
SourceModel.Expr.Application.make(<z>
array});<z>
protected boolean isOffsetValid(int offset) {<z>
.getKind() != CompletionProposal.CONSTRUCTOR_INVOCATION)<z>
super.isOffsetValid(offset);<z>
.getReplaceStart() <= offset;<z>
customerAccounts) {<z>
;<z>
customerAccounts) {<z>
account);<z>
(ApplicationPhase phase) {<z>
{<z>
= phase;<z>
node) {<z>
!= null) {<z>
if (descendsFromLayer(node)) {<z>
(camera.getViewTransform());<z>
);<z>
node.globalToLocal(pt);<z>
static String createLengthString(int length) {<z>
String lengthString = "0";<z>
< length - 1; index++) {<z>
);<z>
return lengthString;<z>
AbstractButtonPanelBuilder(FormLayout layout, JPanel container) {<z>
if (layout == null)<z>
new NullPointerException("The layout must not be null.");<z>
(container == null)<z>
NullPointerException("The layout container must not be null.");<z>
= container;<z>
layout = layout;<z>
);<z>
);<z>
();<z>
.isLeftToRight()<z>
();<z>
