updateCategory(Category category) throws ServiceException{<z>
() {<z>
public void run() {<z>
false;<z>
0;<z>
.getNumEMAsToday();<z>
e) {<z>
printStackTrace();<z>
DEBUG) Log.d("launchScheduledInterview",<z>
"scheduled interview event fired");<z>
) {<z>
) Log.d("launchScheduledInterview",<z>
);<z>
= true;<z>
= true;<z>
lastInterviewTime = SystemClock.uptimeMillis();<z>
= EMALogConstants.TYPE_PERIODIC;<z>
interviewIntent);<z>
"launchScheduledInterview",<z>
);<z>
PERIODIC, iAmRunning);<z>
{<z>
400, 200);<z>
.getStore();<z>
= prefs.getInt(PrefsDialog.EXPLORER_SHELL_X);<z>
getInt(PrefsDialog.EXPLORER_SHELL_Y);<z>
(PrefsDialog.EXPLORER_SHELL_WIDTH);<z>
(PrefsDialog.EXPLORER_SHELL_HEIGHT);<z>
);<z>
> rect.width) {<z>
.width;<z>
EXPLORER_SHELL_WIDTH, rect.width);<z>
> rect.height) {<z>
;<z>
PrefsDialog.EXPLORER_SHELL_HEIGHT, rect.height);<z>
< rect.x) {<z>
= rect.x;<z>
x);<z>
width) {<z>
x + rect.width - w;<z>
x);<z>
y < rect.y) {<z>
.y;<z>
);<z>
.y + rect.height) {<z>
h;<z>
, rect.y);<z>
, y, w, h);<z>
ControlListener() {<z>
controlMoved(ControlEvent e) {<z>
();<z>
);<z>
PrefsDialog.EXPLORER_SHELL_X, rect.x);<z>
.EXPLORER_SHELL_Y, rect.y);<z>
ControlEvent e) {<z>
rect = shell.getBounds();<z>
);<z>
.EXPLORER_SHELL_WIDTH, rect.width);<z>
, rect.height);<z>
});<z>
FormAuthenticationStrategy(String userName, String password,<z>
userNameComponent, String passwordComponent)<z>
this(userName, password, submitComponent);<z>
userNameComponent = userNameComponent;<z>
passwordComponent = passwordComponent;<z>
() {<z>
(Usage.Position, 3,<z>
, 4,<z>
Usage.Generic, 1, "a_delta"));<z>
(255, 50, 0, 255);<z>
50, 0, 255);<z>
, 250, 0, 255);<z>
, 0, 0, 255);<z>
,0,c2,0,<z>
0, 0.5f, 0, c3, 3.14f ,<z>
;<z>
(Gdx.graphics, "lines");<z>
void instantiationFailed(PicoContainer container,<z>
ComponentAdapter<T> componentAdapter,<z>
constructor,<z>
Exception e) {<z>
) {<z>
>();<z>
;<z>
2);<z>
);<z>
GetSubsets result = new GetSubsets();<z>
r = result.getSubset2(set);<z>
{<z>
get(i));<z>
public static String toHexString(byte[] bytes)<z>
= new StringBuilder();<z>
b: bytes)<z>
Integer.toHexString(b & 0xff);<z>
), 2));<z>
if(hex.length() == 1)<z>
"0");<z>
;<z>
toString();<z>
> getProcessesInErrorState() {<z>
.getDefault().getProcessesInErrorState();<z>
) {<z>
null;<z>
("") {<z>
(Platform compareWith) {<z>
WINDOWS || compareWith == XP || compareWith == VISTA;<z>
throws IOException {<z>
null)<z>
target == null)<z>
throw new FileNotFoundException();<z>
null);<z>
) {<z>
IOException(e.getMessage());<z>
)<z>
] = new byte[DNSConstants.MAX_MSG_ABSOLUTE];<z>
(buf, buf.length);<z>
getState() != DNSState.CANCELED)<z>
.length);<z>
;<z>
getState() == DNSState.CANCELED)<z>
)<z>
(packet);<z>
synchronized (this.jmDNSImpl.getIoLock())<z>
isQuery())<z>
() != DNSConstants.MDNS_PORT)<z>
packet.getPort());<z>
);<z>
.handleResponse(msg);<z>
e)<z>
(IOException e)<z>
DNSState.CANCELED)<z>
.recover();<z>
artifact, boolean legacyFormat )<z>
();<z>
if ( !legacyFormat )<z>
;<z>
);<z>
artifact.getArtifactId() );<z>
.getBaseVersion() );<z>
return metadata;<z>
checkComponentImplementationModes(ComponentImplementation componentImplementation) {<z>
.isEmpty()) {<z>
boolean typeHasModes = false;<z>
hasExtendCycles(componentImplementation.getType()))<z>
currentType<z>
.getExtended()) {<z>
currentType.getOwnedModes().isEmpty())<z>
typeHasModes = true;<z>
{<z>
(componentImplementation,<z>
;<z>
public String getPath(int stop) throws Exception {<z>
stop;<z>
= stop;<z>
0) {<z>
path += " <- " + V[index];<z>
[index];<z>
start];<z>
return path;<z>
ConfigurationEventTypeXMLDOM.XPathPropertyDesc> explicitXPathProperties,<z>
<ExplicitPropertyDescriptor> additionalSchemaProperties)<z>
();<z>
for (ExplicitPropertyDescriptor desc : additionalSchemaProperties)<z>
().getPropertyName(), desc);<z>
null;<z>
XPathPropertyDesc property : explicitXPathProperties)<z>
xPathFactory.newXPath();<z>
!= null)<z>
(namespaceContext);<z>
();<z>
isInfoEnabled())<z>
+ "'");<z>
);<z>
fragmentFactory = null;<z>
isFragment = false;<z>
(property.getOptionaleventTypeName() != null)<z>
, property.getName());<z>
isFragment = true;<z>
;<z>
))<z>
;<z>
property.getOptionalCastToType(), fragmentFactory);<z>
));<z>
,isArray,false,isFragment);<z>
isArray, property.getOptionaleventTypeName());<z>
(desc.getPropertyName(), explicit);<z>
XPathExpressionException ex)<z>
'\'', ex);<z>
values()));<z>
;<z>
= configurationEventTypeXMLDOM.getEndTimestampPropertyName();<z>
.validateTimestampProperties(this, startTimestampPropertyName, endTimestampPropertyName);<z>
boolean visit(JFieldRef x, Context ctx) {<z>
(x.getInstance() != null) {<z>
= possiblyReplace(x.getInstance());<z>
x.getInstance()) {<z>
newInstance,<z>
);<z>
ctx.replaceMe(newExpr);<z>
;<z>
int maxX, int maxY) {<z>
{<z>
i].randomize(maxX, maxY);<z>
this;<z>
public void pause() {<z>
(mResumed) {<z>
mResumed = false;<z>
);<z>
readHeaders()<z>
{<z>
i = 0;<z>
b;<z>
();<z>
0;<z>
{<z>
readByte();<z>
) {<z>
throw new MalformedStreamException("Stream ended unexpectedly");<z>
size > HEADER_PART_SIZE_MAX) {<z>
(<z>
HEADER_PART_SIZE_MAX<z>
;<z>
[i]) {<z>
;<z>
else {<z>
= 0;<z>
;<z>
headers = null;<z>
{<z>
toString(headerEncoding);<z>
catch (UnsupportedEncodingException e) {<z>
();<z>
} else {<z>
= baos.toString();<z>
;<z>
) throws IOException {<z>
)<z>
|| user.getAuthenticationMethod() != AuthenticationMethod.KERBEROS<z>
isKeytab)<z>
getTGT();<z>
) {<z>
reloginFromKeytab();<z>
public String getXML() {<z>
retval = "";<z>
;<z>
+Const.CR;<z>
recordset+"]]></recordset>"+Const.CR;<z>
.CR;<z>
Const.CR;<z>
CR;<z>
;<z>
+Const.CR;<z>
Const.CR;<z>
.CR;<z>
;<z>
{<z>
;<z>
>=0 && datasize <= MAX_MALLOC_SIZE;<z>
BLOCK_HEADER_SIZE + BLOCK_SIZE_DELTA - 1) / BLOCK_SIZE_DELTA;<z>
MIN_BLOCK_DELTAS) {<z>
= MIN_BLOCK_DELTAS;<z>
;<z>
useDeltas;<z>
needDeltas; useDeltas <= MAX_BLOCK_DELTAS; useDeltas++) {<z>
freeblock = getFirstBlock(useDeltas*BLOCK_SIZE_DELTA);<z>
0)<z>
Chunk chunk;<z>
== 0) {<z>
freeblock= createNewChunk();<z>
= MAX_BLOCK_DELTAS;<z>
);<z>
{<z>
chunk = getChunk(freeblock);<z>
chunk, useDeltas*BLOCK_SIZE_DELTA, freeblock);<z>
useDeltas-needDeltas;<z>
if (unusedDeltas >= MIN_BLOCK_DELTAS) {<z>
needDeltas*BLOCK_SIZE_DELTA);<z>
useDeltas= needDeltas;<z>
BLOCK_SIZE_DELTA;<z>
);<z>
+ BLOCK_HEADER_SIZE, usedSize-BLOCK_HEADER_SIZE);<z>
malloced+= usedSize;<z>
BLOCK_HEADER_SIZE;<z>
{<z>
if (mOriginalValues != null) {<z>
mLock) {<z>
addAll(collection);<z>
(mNotifyOnChange)<z>
();<z>
else {<z>
;<z>
mNotifyOnChange)<z>
);<z>
{<z>
+<z>
,<z>
XsdString connectionInterface, XsdString connectionImplClass,<z>
transactionSupport, List<AuthenticationMechanism> authenticationMechanism,<z>
ConfigProperty> configProperties, Boolean reauthenticationSupport,<z>
, String id, String transactionSupportId,<z>
reauthenticationSupportId)<z>
super();<z>
managedConnectionFactoryClass;<z>
.isNull(this.managedConnectionFactoryClass))<z>
());<z>
;<z>
.isNull(this.connectionFactoryInterface))<z>
;<z>
connectionFactoryImplClass = connectionFactoryImplClass;<z>
this.connectionFactoryImplClass))<z>
());<z>
= connectionInterface;<z>
))<z>
Tag.CONNECTION_INTERFACE.toString());<z>
connectionImplClass;<z>
!XsdString.isNull(this.connectionImplClass))<z>
;<z>
transactionSupport;<z>
authenticationMechanism != null)<z>
AuthenticationMechanism>(authenticationMechanism.size());<z>
);<z>
;<z>
!= null)<z>
.size());<z>
);<z>
>(0);<z>
this.reauthenticationSupport = reauthenticationSupport;<z>
!= null)<z>
SecurityPermission>(securityPermissions.size());<z>
securityPermissions);<z>
;<z>
id;<z>
= transactionSupportId;<z>
reauthenticationSupportId = reauthenticationSupportId;<z>
> supertypes) {<z>
) != 0)<z>
) {<z>
true;<z>
, (ClassSymbol)c);<z>
c.type.isErroneous()) {<z>
= seenClasses.prepend(c);<z>
) {<z>
nonEmpty()) {<z>
;<z>
= (ClassType)c.type;<z>
||<z>
.interfaces_field == null) {<z>
partialCheck = true;<z>
;<z>
for (Type intf : ct.interfaces_field) {<z>
);<z>
== TYP) {<z>
pos, c.owner);<z>
} finally {<z>
;<z>
transpose)<z>
= transpose;<z>
(0);<z>
boolean showYAxis = getShowAxis(1);<z>
!showXAxis);<z>
!showYAxis);<z>
showXAxis);<z>
;<z>
Tile tile)<z>
String path = null;<z>
= installParams.getStringValue(AVKey.FILE_STORE_LOCATION);<z>
if (s != null)<z>
.appendPathPart(path, s);<z>
.getPath();<z>
!= null)<z>
);<z>
1)<z>
("TiledRasterProducer.InvalidTile", tile);<z>
io.File(path);<z>
{<z>
XQuery(<z>
;<z>
query);<z>
res;<z>
("<e name2=\"\" name1=\"\" name0=\"\"/>", false)<z>
?> plugin) {<z>
) {<z>
new PluginsRemovedEvent(plugin));<z>
String jsonText ){<z>
&& jsonText.endsWith("}") ){<z>
jsonText ) );<z>
){<z>
return new cfStringData(jsonText);<z>
}else{<z>
);<z>
) {<z>
StringBuffer result = new StringBuffer("");<z>
&& (strings.length > 0)) {<z>
< strings.length; i++) {<z>
.append(strings[i]);<z>
length - 1) {<z>
result.append(", ");<z>
.toString();<z>
)<z>
fire_added = false;<z>
synchronized( providers ){<z>
found = false;<z>
type_found = null;<z>
providers ){<z>
if ( p == provider ){<z>
true;<z>
.getPositionType()){<z>
= p;<z>
found ){<z>
{<z>
);<z>
( type_found );<z>
new DHTNetworkPositionProvider[providers.length + 1 ];<z>
0, providers.length );<z>
new_providers[providers.length] = provider;<z>
;<z>
null ){<z>
( provider );<z>
= true;<z>
{<z>
l: provider_listeners ){<z>
( provider );<z>
Throwable e ){<z>
Debug.out( e );<z>
DHTNetworkPositionProviderInstance()<z>
log )<z>
+ ": " + log );<z>
;<z>
static public void serviceRequestImmediate(long mailboxId) {<z>
;<z>
== null) return;<z>
.mServiceMap.get(mailboxId);<z>
if (service != null) {<z>
= System.currentTimeMillis();<z>
= Mailbox.restoreMailboxWithId(exchangeService, mailboxId);<z>
null) {<z>
restoreAccountWithId(exchangeService, m.mAccountKey);<z>
.mMailbox = m;<z>
"service request immediate");<z>
, IndexIterator ii) throws IOException {<z>
null) {<z>
))<z>
headerParser.getMissingData());<z>
myRaf, abbrev, gateRange, ii);<z>
throws RecognitionException {<z>
;<z>
).getValueAssignment_2());<z>
);<z>
();<z>
_fsp--;<z>
());<z>
) {<z>
reportError(re);<z>
input,re);<z>
(stackSize);<z>
() throws SQLException {<z>
.println(" ********************* not implemented @ "<z>
" line "<z>
());<z>
;<z>
, boolean isSelected, boolean cellHasFocus) {<z>
cellHasFocus);<z>
Node) {<z>
;<z>
} else {<z>
());<z>
return result;<z>
removeEmptyDirectories(File dir, boolean removeIfEmpty,<z>
{<z>
int removedCount = 0;<z>
) {<z>
= dir.listFiles();<z>
{<z>
i];<z>
)) {<z>
true,<z>
;<z>
0) {<z>
();<z>
removeIfEmpty<z>
(dir)) {<z>
);<z>
;<z>
removedCount;<z>
;<z>
PolicyMetaData metaData,<z>
{<z>
();<z>
;<z>
)<z>
( theTime );<z>
;<z>
) {<z>
()) {<z>
return -1;<z>
workflowTaskAssignee = _workflowTaskAssignees.get(<z>
);<z>
();<z>
extends OXPathCache> T memoize(T cache) {<z>
) Proxy.newProxyInstance(<z>
.getClassLoader(),<z>
).getInterfaces(),<z>
new OXPathMemoizerNaive(cache)<z>
)<z>
);<z>
)<z>
code.charAt(offset), contentType,<z>
);<z>
String[] getParamInfo(){<z>
String[]{<z>
{<z>
.getField();<z>
) & Modifier.STATIC) != 0;<z>
isStatic) {<z>
;<z>
{<z>
());<z>
);<z>
(QuadMesh from, VertexBuf vert) {<z>
= from;<z>
vert.num != vert.num)<z>
throw (new RuntimeException("V-buf sizes must match"));<z>
.vert = vert;<z>
from.indb;<z>
num = from.num;<z>
DeleteUpdateCommand cmd) throws IOException {<z>
incrementAndGet();<z>
);<z>
fromPending && !cmd.fromCommitted) {<z>
;<z>
.incrementAndGet();<z>
.BAD_REQUEST,"meaningless command: " + cmd);<z>
.fromCommitted) {<z>
numErrors.incrementAndGet();<z>
();<z>
+ cmd);<z>
false;<z>
false;<z>
query, schema);<z>
.getClass();<z>
iwCommit.lock();<z>
(delAll) {<z>
);<z>
{<z>
();<z>
q);<z>
finally {<z>
);<z>
=true;<z>
tracker.timeUpperBound > 0 ) {<z>
tracker.timeUpperBound );<z>
} finally {<z>
!madeIt) {<z>
);<z>
();<z>
) {<z>
;<z>
temp *= 100f;<z>
, NUM_DECIMALS);<z>
round(temp);<z>
Math.pow(10.0, NUM_DECIMALS));<z>
temp;<z>
;<z>
InternalWorkingMemory workingMemory,<z>
context, final Object left) {<z>
if( context.rightNull ) {<z>
false;<z>
workingMemory, left );<z>
) throws DisconnectException {<z>
) {<z>
= UTF8ENCODING;<z>
ccsidDbcEncoding_;<z>
SQLException {<z>
m_db != null )<z>
query);<z>
query;<z>
ctx, ContainerShape sgShape, IFeatureProvider fp) {<z>
HashMap<String, Anchor>();<z>
).get(0);<z>
(), borderRect.getHeight());<z>
<Shape>();<z>
(sgShape, fp, node2anchor, shapes);<z>
present);<z>
();<z>
toAdd = new ArrayList<State>();<z>
>();<z>
: expected) {<z>
if (present.contains(item))<z>
.add(item);<z>
;<z>
, fp, node2anchor);<z>
, ctx.getPositionProvider(), fp);<z>
<Shape>();<z>
fp, node2anchor, shapes);<z>
);<z>
.getTrPoints();<z>
new ArrayList<TrPoint>();<z>
= new ArrayList<TrPoint>();<z>
{<z>
)<z>
add(item);<z>
.add(item);<z>
);<z>
, fp);<z>
= new ArrayList<Shape>();<z>
, shapes);<z>
checkDuplicates(present);<z>
ChoicePoint> expected = ctx.getChPoints();<z>
= new ArrayList<ChoicePoint>();<z>
ChoicePoint>();<z>
{<z>
(present.contains(item))<z>
);<z>
add(item);<z>
, node2anchor);<z>
;<z>
(sgShape, node2anchor);<z>
(), fp);<z>
expected = ctx.getTransitions();<z>
;<z>
{<z>
(!present.contains(trans))<z>
.add(trans);<z>
node2anchor);<z>
public void castableAs585() {<z>
final XQuery query = new XQuery(<z>
;<z>
query);<z>
res;<z>
false)<z>
) {<z>
(out) {<z>
();<z>
.print('"');<z>
, true, false);<z>
);<z>
comma_needed = true;<z>
return this;<z>
addClassificationRestriction(String propertyType, String classID)<z>
throws ThinklabException {<z>
var) {<z>
if (this.otherInstanceVarMap != null) {<z>
;<z>
other != null) {<z>
;<z>
(this.itsInjectiveFlag)<z>
;<z>
null;<z>
) {<z>
= new CommandPacket(<z>
,<z>
);<z>
(commandPacket));<z>
service() {<z>
.info("Servicing a class creation request.");<z>
) {<z>
LOGGER.info("Checking that the user is an admin.");<z>
getUser().getUsername());<z>
"Checking that a class with the same ID doesn't already exist.");<z>
.checkClassExistence(classId, false);<z>
info("Creating the class.");<z>
.createClass(classId, className, classDescription);<z>
(ServiceException e) {<z>
;<z>
logException(LOGGER);<z>
void run() {<z>
setThreadRunning(true);<z>
)<z>
.getServerStoreFacade();<z>
) {<z>
);<z>
, "Salvo Thread: Waiting for Store");<z>
.sleep(5000);<z>
{<z>
(false);<z>
(isThreadRunning()) {<z>
] subscribedServers = new IServer[0];<z>
= facade.getStores();<z>
++) {<z>
;<z>
(store);<z>
) {<z>
server = subscribedServers[j];<z>
INewsgroup[] subscribedNewsgroups;<z>
= facade<z>
;<z>
.length; k++) {<z>
];<z>
.syncStoreWithServer(group,false);<z>
Exception e) {<z>
.getClass(), e);<z>
e1) {<z>
getClass(), e1);<z>
;<z>
syncInterval = getSyncInterval();<z>
),<z>
;<z>
syncInterval; i++)<z>
))<z>
sleep(1000);<z>
} catch (InterruptedException e) {<z>
false);<z>
getPath() {<z>
);<z>
hostname + portString;<z>
message() default "{br.com.caelum.stella.bean.validation.CNPJ.message}";<z>
) default false;<z>
default {};<z>
actionPerformed(AnActionEvent e) {<z>
;<z>
== null) {<z>
);<z>
null;<z>
PlatformDataKeys.VIRTUAL_FILE);<z>
.isDirectory()) {<z>
virtualFile.getPath();<z>
);<z>
show();<z>
(wizard.isOK()) {<z>
= wizard.getProjectBuilder();<z>
if (builder instanceof ModuleBuilder) {<z>
final ModuleBuilder moduleBuilder = (ModuleBuilder)builder;<z>
{<z>
(wizard.getProjectName());<z>
== null) {<z>
.getModuleFilePath());<z>
project, project)) {<z>
) {<z>
commitModule(project, null);<z>
!= null) {<z>
dataFromContext);<z>
, null, new DefaultModulesProvider(project));<z>
.isOpenProjectSettingsAfter()) {<z>
, null);<z>
);<z>
void doExecute()<z>
= getClient();<z>
> repos;<z>
( client.getClosedStageRepositoriesForUser() );<z>
RESTLightClientException e )<z>
), e );<z>
isEmpty() )<z>
);<z>
;<z>
builder.append( "Dropping staged repository: " );<z>
.append( "\n\n- " );<z>
.append( listRepo( repo ) );<z>
.append( "\n\n" );<z>
);<z>
, description );<z>
)<z>
e.getMessage(), e );<z>
info( "\n\nNo closed staging repositories found. Nothing to do!\n\n" );<z>
null, null, null, "The following CLOSED staging repositories were found" );<z>
updateCategoryRules(String keys,<z>
throws RulesRepositoryException {<z>
checkout();<z>
,<z>
;<z>
this.updateStringProperty(values,<z>
;<z>
e) {<z>
.error("Caught Exception",<z>
;<z>
throw new RulesRepositoryException(e);<z>
editorContext, SNode node) {<z>
node, "(");<z>
;<z>
);<z>
);<z>
editorCell;<z>
) throws SQLException {<z>
);<z>
;<z>
executeUpdate(sql, columnNames);<z>
){<z>
.getState();<z>
.length();<z>
;<z>
= 15;<z>
F]", "");<z>
length))) return(true);<z>
) return(true);<z>
;<z>
getLine(y).isEmpty()){<z>
.replaceAll("(?i)\u00A7[0-F]", "");<z>
, line)) return(true);<z>
, length))) return(true);<z>
, signBlock);<z>
size();<z>
sign2;<z>
< count; ++x){<z>
);<z>
)){<z>
, "");<z>
line)) return(true);<z>
(true);<z>
snoop = false;<z>
isDoor){<z>
if(Lockette.adminBypass){<z>
"lockette.admin.bypass")) snoop = true;<z>
(snoop){<z>
;<z>
1));<z>
(true);<z>
.adminSnoop){<z>
, player, "lockette.admin.snoop")) snoop = true;<z>
snoop){<z>
1) + "!");<z>
;<z>
(true);<z>
false);<z>
.QName parentQName,<z>
.apache.axiom.om.OMFactory factory,<z>
,<z>
serializeType)<z>
org.apache.axis2.databinding.ADBException{<z>
{<z>
axis2.databinding.ADBException("Property cannot be null!");<z>
serialize(MY_QNAME,factory,xmlWriter);<z>
) throws RecognitionException {<z>
();<z>
FollowSets001.FOLLOW_rule__LetVariableCS__Group__1__Impl_in_rule__LetVariableCS__Group__134972);<z>
rule__LetVariableCS__Group__1__Impl();<z>
._fsp--;<z>
.failed) return ;<z>
);<z>
);<z>
state._fsp--;<z>
return ;<z>
RecognitionException re) {<z>
;<z>
(input,re);<z>
restoreStackSize(stackSize);<z>
sPluginName)<z>
getPlugin(sPluginName);<z>
)<z>
("Plugin " + sPluginName + " does not exists.");<z>
();<z>
)<z>
);<z>
exit(0);<z>
MethodWrapper[] moreRoots) {<z>
);<z>
asList(roots));<z>
);<z>
)]);<z>
t)<z>
|| t.type == TNode.ANYTYP)<z>
return true;<z>
.type == t.type)<z>
return true;<z>
false;<z>
{<z>
) {<z>
true;<z>
;<z>
();<z>
== true) {<z>
{<z>
run() {<z>
base.login();<z>
{<z>
firstRun = false;<z>
);<z>
();<z>
cleanDatabase()).start();<z>
{<z>
(null);<z>
null) {<z>
0);<z>
nav_type);<z>
;<z>
R.id.nav_location);<z>
.map);<z>
);<z>
new cgeoFindOnMapListener());<z>
;<z>
findByOffline.setClickable(true);<z>
setOnClickListener(new cgeoFindByOfflineListener());<z>
;<z>
findViewById(R.id.advanced_button);<z>
);<z>
new cgeoSearchListener());<z>
any_button);<z>
(true);<z>
());<z>
R.id.filter_button);<z>
filter);<z>
View.OnClickListener() {<z>
View view) {<z>
;<z>
;<z>
setClickable(true);<z>
);<z>
{<z>
();<z>
;<z>
getDrawable(R.drawable.shop));<z>
(this,kremlin.getGeoPoint());<z>
.kremlin));<z>
);<z>
addOverlayItem(kremlin);<z>
;<z>
;<z>
getString(R.string.yandex));<z>
setBalloonItem(balloonYandex);<z>
(yandex);<z>
);<z>
widgetStyle () {<z>
) | OS.WS_CLIPCHILDREN;<z>
bits |= OS.TCS_FOCUSNEVER;<z>
) bits |= OS.TCS_BOTTOM;<z>
TCS_TABS | OS.TCS_TOOLTIPS;<z>
Set<String> nonProxiedHosts) {<z>
String proxyHost = savedProxyProperties.getProperty("socksProxyHost");<z>
(proxyHost == null)<z>
false;<z>
proxyHost);<z>
"socksProxyPort", proxyDatum);<z>
true;<z>
protected IField[] getSortingFields() {<z>
{ severityAndMessage, folder, resource, lineNumber,<z>
;<z>
Buffer ref) throws IOException<z>
(_delayedHandling)<z>
;<z>
;<z>
run()<z>
);<z>
= null;<z>
TerminalPrintStream(<z>
;<z>
= null;<z>
.getCommandProcessor(ServiceMediator.NO_WAIT))<z>
)<z>
obj;<z>
CommandSession session =<z>
, m_out);<z>
(session);<z>
NO_WAIT))<z>
)<z>
;<z>
msg = "No shell services available...exiting.";<z>
catch (IOException ex)<z>
("Shell::run()", ex);<z>
);<z>
[] sortIndex,<z>
) throws IOException<z>
; j++ )<z>
].add( null );<z>
object) {<z>
{<z>
keySet().iterator());<z>
(object instanceof Collection) {<z>
);<z>
object instanceof Iterator) {<z>
((Iterator) object));<z>
0]);<z>
{<z>
Object[0]));<z>
} catch (Exception e) {<z>
return null;<z>
bEmbeddedInfoFlag, int iOffsetToNextTag)<z>
(1<<24)-1))<z>
;<z>
i24BufferSize;<z>
bEmbeddedInfoFlag;<z>
if (iOffsetToNextTag < 0)<z>
("Offset to next tag cannot be negative in RBUF frame.");<z>
m_iOffsetToNextTag = iOffsetToNextTag;<z>
public String readString() {<z>
= new StringBuffer();<z>
byte b;<z>
!= 0)<z>
((char)b);<z>
toString();<z>
(T tree) throws NullPointerException<z>
)<z>
();<z>
head == null)<z>
;<z>
null)<z>
();<z>
tail = tree;<z>
T)this;<z>
size++;<z>
(tree);<z>
head.insertBefore(tree);<z>
ApplicationResources resources, final ApplicationConstants constants) {<z>
{<z>
public String getValue(EntityModel object) {<z>
);<z>
());<z>
{<z>
String getValue(EntityModel object) {<z>
.getEntity().toString();<z>
typeColumn, constants.typeIso());<z>
.showRefreshButton();<z>
(<z>
) {<z>
(annotatedElement,<z>
);<z>
(annotation != null) {<z>
List<DexEncodedValue> value =<z>
(List<DexEncodedValue>) getAnnotationAttributeValue(<z>
annotation, "value");<z>
concatEncodedValues(value);<z>
null;<z>
() {<z>
if (currentGradebook == null) {<z>
getString("no_gradebook_selected") + "</p>";<z>
) {<z>
,<z>
.getTitle())}) + "</p>";<z>
.formatGrades();<z>
Value notice(String msg, Throwable e) {<z>
.toString(), e);<z>
return notice(msg);<z>
{<z>
, "scheduler");<z>
assertNotNull(m_pollerFrontEnd, "pollerFrontEnd");<z>
;<z>
addPropertyChangeListener(this);<z>
if (m_pollerFrontEnd.isStarted()) {<z>
schedulePolls();<z>
} else {<z>
log().debug("Poller not yet registered");<z>
public final void mT__27() throws RecognitionException {<z>
;<z>
= DEFAULT_TOKEN_CHANNEL;<z>
match("?:");<z>
_type;<z>
.channel = _channel;<z>
final List<T> list)<z>
.listIterator(list.size());<z>
Iterator<T>()<z>
)<z>
();<z>
next()<z>
();<z>
public void remove()<z>
UnsupportedOperationException();<z>
key) throws Exception<z>
key;<z>
MulticastSocket)super.makeObject(key);<z>
;<z>
()).getTimeToLive();<z>
.INT_VALUE_NOT_SET)<z>
setTimeToLive(ttl);<z>
return socket;<z>
public static WikiContext findContext( PageContext pageContext )<z>
;<z>
;<z>
context;<z>
String opName, String mexId) {<z>
.partnerLink = partnerLink;<z>
.opName = opName;<z>
mexId = mexId == null ? "" : mexId;<z>
float computeMax(float[] data) {<z>
.MAX_VALUE;<z>
++) {<z>
.isNaN(data[i])) {<z>
);<z>
max;<z>
static void errorCallbackFromNative(int error)<z>
if (mErrorCallback != null) {<z>
error);<z>
)<z>
)).convertToBaf(context, out);<z>
Unit u;<z>
)));<z>
= this;<z>
();<z>
)) {<z>
;<z>
, String removedPageUuid) {<z>
this(type,spaceUname);<z>
= removedPageUuid;<z>
(final String name) throws IOException, JDOMException {<z>
;<z>
);<z>
(logical != null) {<z>
logical;<z>
.get(name);<z>
physical == null) {<z>
: getVFile(name);<z>
(vFile == null) {<z>
name + ": file does not exist");<z>
InputStream is = vFile.getInputStream();<z>
;<z>
close();<z>
(name, physical);<z>
physical;<z>
) {<z>
;<z>
Init();<z>
{<z>
= null;<z>
name = null;<z>
.profileImageUrl = null;<z>
null;<z>
nameInput1, String nameInput2, String nameInput3) {<z>
has1;<z>
hasInput2 = has2;<z>
has3;<z>
= nameInput1;<z>
NameInput2 = nameInput2;<z>
;<z>
) {<z>
);<z>
String>();<z>
if (buckets != null) {<z>
S3Bucket bucket : buckets) {<z>
.getName());<z>
return list;<z>
lexicalPhrase)<z>
;<z>
;<z>
.name = name;<z>
expression = expression;<z>
block = block;<z>
) {<z>
;<z>
TITLE);<z>
relationalObject;<z>
.modelFile = file;<z>
;<z>
static int nullSafeHashCode(char[] array) {<z>
array == null)<z>
;<z>
hash = INITIAL_HASH;<z>
;<z>
; i++) {<z>
hash + array[i];<z>
return hash;<z>
static HankBulkResponse xception(HankException value) {<z>
new HankBulkResponse();<z>
value);<z>
return x;<z>
) {<z>
BitmapDrawable){<z>
getBitmap();<z>
return mIcon;<z>
protected void appendLiteralDirect(<z>
Object val,<z>
DbAttribute attr,<z>
IOException {<z>
boolean castNeeded = false;<z>
!= null) {<z>
();<z>
attr != null<z>
type == Expression.LIKE<z>
.LIKE_IGNORE_CASE<z>
;<z>
(castNeeded) {<z>
.append("CAST (");<z>
(val, attr, parentExpression);<z>
if (castNeeded) {<z>
getType();<z>
();<z>
{<z>
.VARCHAR;<z>
) {<z>
len = 254;<z>
(" AS ");<z>
queryAssembler.getAdapter().externalTypesForJdbcType(<z>
);<z>
types.length == 0) {<z>
throw new CayenneRuntimeException(<z>
;<z>
]);<z>
supportsLength(jdbcType)) {<z>
;<z>
len));<z>
out.append(")");<z>
")");<z>
)<z>
!= null;<z>
.getIndex();<z>
;<z>
!= null)<z>
[] res;<z>
SQUARES_BUFFER)<z>
S_nbBufferedSquares = 0;<z>
;<z>
= new Square [ S_nbBufferedSquares ];<z>
0; )<z>
]);<z>
;<z>
return NO_SQUARE;<z>
saml.v2.protocol.ResponseType handleXACMLQuery(<z>
, XACMLAuthzDecisionQueryType xacmlRequest) throws ProcessingException,<z>
RequestType requestType = xacmlRequest.getRequest();<z>
new JBossRequestContext();<z>
setRequest(requestType);<z>
} catch (IOException e) {<z>
e);<z>
;<z>
;<z>
resultType = responseContext.getResult();<z>
).add(resultType);<z>
createXACMLAuthzDecisionStatementType(requestType,<z>
responseType);<z>
.create("ID_");<z>
IssuerInfoHolder(issuer);<z>
StatementAbstractType>();<z>
.add(xacmlStatement);<z>
ID, issuerInfo.getIssuer(),<z>
, statements);<z>
ResponseType samlResponseType = JBossSAMLAuthnResponseFactory<z>
.createResponseType(ID, issuerInfo, assertion);<z>
return samlResponseType;<z>
static void deleteArticleImage(long groupId,<z>
.lang.String articleId, double version,<z>
,<z>
String languageId)<z>
exception.SystemException {<z>
getService()<z>
, version, elInstanceId,<z>
, languageId);<z>
String exchangeCode, final String marketSector) {<z>
).append(" ");<z>
exchangeCode != null) {<z>
.append(" ");<z>
sb.append(marketSector);<z>
.toString());<z>
{<z>
ModelDetail modelDetail = null;<z>
toString(<z>
);<z>
catch (RemoteException ex) {<z>
"", "", ex);<z>
return modelDetail;<z>
String qName, Attributes atts )<z>
throws SAXException {<z>
== 0 )<z>
;<z>
, localName, qName, atts );<z>
int delta){<z>
getDirection().equals("left")){<z>
DELTA_X * delta));<z>
){<z>
DELTA_X * delta));<z>
"up")){<z>
.DELTA_Y * delta));<z>
.equals("down")){<z>
+ (Steam.DELTA_Y * delta));<z>
.checkCollision(this)){<z>
);<z>
ZoneOffset offset) {<z>
)) {<z>
;<z>
- this.offset.getTotalSeconds();<z>
.plusSeconds(difference);<z>
);<z>
double get(String name, double defvalue)<z>
{<z>
))<z>
defvalue;<z>
get(name)).doubleValue();<z>
public Operation getURLOperation()<z>
(urlOperationLock) {<z>
urlOperation ;<z>
Collection<QName> getTypeNames() {<z>
==null) return Collections.emptyList();<z>
;<z>
((QName[])typeName);<z>
int resultCode, Intent data) {<z>
.onActivityResult(requestCode, resultCode, data);<z>
{<z>
.REQUEST_CODE:<z>
{<z>
.RESULT_OK:<z>
();<z>
Activity.RESULT_CANCELED:<z>
[] vals, int idx) {<z>
new int[vals.length - 1];<z>
0) {<z>
0, idx);<z>
if (idx < newVals.length) {<z>
idx, newVals.length - idx);<z>
;<z>
.io.IOException {<z>
{<z>
close();<z>
{<z>
) pathname);<z>
) {<z>
java.io.File) pathname;<z>
if (pathname == null) {<z>
throw new IllegalArgumentException("pathname is null");<z>
else {<z>
throw new IllegalArgumentException("pathname must be an instance of String or java.io.File");<z>
);<z>
m_currentDirectory = "";<z>
m_currentlyOpenStream = null;<z>
.clear();<z>
();<z>
while (enum0.hasMoreElements()) {<z>
();<z>
zipEntry.getName()), zipEntry);<z>
private void assertPC(FieldMetaData fmd, String attr)<z>
{<z>
))<z>
));<z>
f, Vector2 t) {<z>
from = f;<z>
= t;<z>
0;<z>
this.from.isSmall()) {<z>
= MAX_S_SPEED;<z>
isLarge()) {<z>
MAX_L_SPEED;<z>
{<z>
;<z>
receiveNotifications()<z>
] result = new byte[MAX_DATA_SIZE];<z>
mapBroadcastingSocket.receive(mapReceivingPacket);<z>
result = mapReceivingPacket.getData();<z>
char[MAX_DATA_SIZE];<z>
; i < result.length; i++)<z>
char)result[i]);<z>
= String.copyValueOf(temp);<z>
BROADCAST b;<z>
(str))<z>
NOTIFY_CHEF;<z>
).equals(str))<z>
b = BROADCAST.NOTIFY_ORDER_SLIP;<z>
b = BROADCAST.NOTIFY_TOM;<z>
);<z>
IOException ex) {<z>
SEVERE, null, ex);<z>
protected void registerAction(IAction action) {<z>
{<z>
);<z>
) != null) {<z>
;<z>
, new ActionHandler(action));<z>
("unchecked")<z>
selectionActions = getSelectionActions();<z>
action.getId());<z>
) {<z>
Section.TWISTIE | Section.EXPANDED);<z>
.DataBasePropertiesEditionPart_PropertiesGroupLabel);<z>
);<z>
3;<z>
(propertiesSectionData);<z>
.createComposite(propertiesSection);<z>
new GridLayout();<z>
propertiesGroupLayout.numColumns = 3;<z>
(propertiesGroupLayout);<z>
);<z>
propertiesGroup;<z>
toKeyPath(StringBuffer _keyPathBuffer) {<z>
) {<z>
toKeyPath(_keyPathBuffer);<z>
.append(".");<z>
!= null) {<z>
;<z>
.append(name);<z>
("<invalid>");<z>
void writeMapXml(Map val, OutputStream out)<z>
io.IOException {<z>
();<z>
out, "utf-8");<z>
true);<z>
(<z>
true);<z>
, serializer);<z>
);<z>
leftEObjects,<z>
> originEObjects) {<z>
);<z>
Lists.newArrayList();<z>
.newArrayList();<z>
leftEObjectsNoID,<z>
);<z>
)) {<z>
).createMatches(leftEObjectsNoID.iterator(),<z>
iterator()));<z>
else {<z>
for (EObject eObject : leftEObjectsNoID) {<z>
CompareFactory.eINSTANCE.createMatch();<z>
eObject);<z>
add(match);<z>
: rightEObjectsNoID) {<z>
();<z>
eObject);<z>
match);<z>
{<z>
CompareFactory.eINSTANCE.createMatch();<z>
match.setOrigin(eObject);<z>
matches.add(match);<z>
matches;<z>
public double distanceSq(Point2D other) {<z>
();<z>
) - other.getY();<z>
* dx + dy * dy;<z>
, Vec4 tL, double xDec, double yDec)<z>
+ yDec;<z>
(pos == 1)<z>
(<z>
,<z>
y * xDec,<z>
yDec + bR.z * xDec);<z>
)<z>
;<z>
yDec);<z>
);<z>
).multiply3(xDec);<z>
)).multiply3(yDec);<z>
verticalVector);<z>
toString() {<z>
);<z>
;<z>
+ ", ");<z>
(getID() + ", ");<z>
", ");<z>
));<z>
);<z>
toString();<z>
throws SpecParserException {<z>
;<z>
()) {<z>
if (!(node instanceof Element)) {<z>
Element child = (Element) node;<z>
getNamespaceURI())) {<z>
{<z>
;<z>
.getNamespaceURI())) {<z>
();<z>
String key = child.getAttribute("key");<z>
key == null) {<z>
;<z>
(elementName)) {<z>
put(key, createPeopleRequest(child));<z>
equals(elementName)) {<z>
;<z>
("OwnerRequest".equals(elementName)) {<z>
key, createOwnerRequest(child));<z>
.equals(elementName)) {<z>
;<z>
{<z>
, createActivityRequest(child));<z>
)) {<z>
createDataRequest(child));<z>
)) {<z>
;<z>
} else {<z>
+ '>');<z>
catch (ELException ele) {<z>
);<z>
.unmodifiableMap(allPreloads);<z>
private static String mBeanServerId(MBeanServer mbs) {<z>
getAttribute(MBeanServerDelegate.DELEGATE_NAME,<z>
;<z>
e) {<z>
JmxProperties.MISC_LOGGER.finest(<z>
;<z>
;<z>
String getFurnaceItemString(boolean burnables, boolean heatables) {<z>
new StringBuilder();<z>
burnables) {<z>
(), tmp);<z>
if (heatables) {<z>
;<z>
return tmp.toString();<z>
checkConnectedInvs() {<z>
0; i < 6; i++) {<z>
);<z>
p.moveForwards(1);<z>
.z);<z>
tile instanceof IInventory) {<z>
((IInventory) tile);<z>
) {<z>
));<z>
);<z>
void clearMembers () {<z>
baseRecordExpr = null;<z>
= null;<z>
textualNames = null;<z>
;<z>
{<z>
{<z>
.eINSTANCE;<z>
byte[] decodeFromFile( String filename )<z>
{<z>
;<z>
;<z>
File( filename );<z>
byte[] buffer = null;<z>
length = 0;<z>
;<z>
MAX_VALUE )<z>
file.length() + " bytes)." );<z>
) ];<z>
= new InputStream(<z>
.io.BufferedInputStream(<z>
file ) ), Base64.DECODE );<z>
0 ) {<z>
+= numBytes;<z>
length ];<z>
, length );<z>
) {<z>
e;<z>
catch( Exception e) {}<z>
decodedData;<z>
> listenerClass) {<z>
) {<z>
"addListener",<z>
]{listenerClass.getName()});<z>
else {<z>
listenerClass);<z>
{<z>
b.getRasterWidth();<z>
();<z>
float[w * h];<z>
, w, h, pixels, pm);<z>
, 0.5f, 1.0f, 1.0f, pixels);<z>
public void initialize() {<z>
600);<z>
getCanvas();<z>
layer = canvas.getLayer();<z>
.addInputEventListener(new PBasicInputEventHandler() {<z>
event) {<z>
{<z>
EditableBezier(INIT);<z>
(event.getPosition());<z>
bezier);<z>
true);<z>
});<z>
received_data,<z>
SampleInfoSeqHolder info_seq, int max_samples, int a_handle,<z>
int view_states, int instance_states) {<z>
;<z>
InputStream getInputStream() throws IOException {<z>
{<z>
new IOException("no data");<z>
m_data);<z>
) {<z>
context, attrs);<z>
context).getCurrentUser();<z>
();<z>
Category category) {<z>
) {<z>
);<z>
);<z>
== Category.TOP_LEVEL_FUNCTION_OR_CLASS_METHOD) {<z>
getUnqualifiedName()) != null);<z>
category == Category.DATA_CONSTRUCTOR) {<z>
!= null);<z>
) {<z>
getUnqualifiedName()) != null);<z>
category == Category.TYPE_CLASS) {<z>
)) != null);<z>
{<z>
throw new IllegalArgumentException("invalid category " + category);<z>
) {<z>
int extraPacketSize = 0;<z>
{<z>
packet.getLength();<z>
extraPacketSize;<z>
assignNext(PotentialAssignment source) {<z>
PotentialAssignment> assigned = new ArrayList<PotentialAssignment>(<z>
;<z>
(source);<z>
, fUnassigned<z>
()), fClass);<z>
sdebug(Object... debugTexts) {<z>
String allText = "";<z>
: debugTexts) {<z>
() + " :: ";<z>
debug(allText);<z>
setDateVariables(boolean fromConstructor) {<z>
className<z>
) != null;<z>
fromConstructor && alreadySet)) {<z>
".alreadyset",<z>
);<z>
= new Date();<z>
TimeZone timeZone = TimeZone.getTimeZone("GMT");<z>
formatDate(date, timeZone);<z>
);<z>
+ ".DATE_GMT",<z>
retVal);<z>
null);<z>
null);<z>
(className + ".DATE_LOCAL",<z>
);<z>
(new Date(lastModifiedDate), null);<z>
null);<z>
ssiExternalResolver.setVariableValue(className + ".LAST_MODIFIED",<z>
);<z>
CombinedProperties(Properties preferred,<z>
) {<z>
properties1 = preferred;<z>
this.properties2 = secondary;<z>
;<z>
ShadowMenu shadow,<z>
final BoxPane target)<z>
final MenuButton button = createMenuButton(shadow);<z>
add(button);<z>
button;<z>
MouseEvent arg0) {<z>
.getBoxIndex(),<z>
) {<z>
setBorder(oldBorder);<z>
{<z>
_npcId;<z>
npcType = _npcType;<z>
1;<z>
;<z>
applyDead = false;<z>
0;<z>
true;<z>
node)<z>
!= null)<z>
this._instanceof_.parent(null);<z>
node != null)<z>
parent() != null)<z>
);<z>
(this);<z>
_instanceof_ = node;<z>
void mT__32() throws RecognitionException {<z>
int _type = T__32;<z>
DEFAULT_TOKEN_CHANNEL;<z>
);<z>
_type;<z>
_channel;<z>
obj) {<z>
{<z>
;<z>
{<z>
return false;<z>
()) {<z>
return false;<z>
obj;<z>
other.connectionTimeout) {<z>
false;<z>
if (readTimeout != other.readTimeout) {<z>
return false;<z>
true;<z>
user(String jid) {<z>
spos = jid.indexOf('@');<z>
(spos > 0) {<z>
.substring(0, spos);<z>
} else {<z>
;<z>
<Object>[] errors){<z>
(values);<z>
.values = matv.getArrayCopy();<z>
(errors);<z>
= mate.getArrayCopy();<z>
.errorType = 0;<z>
);<z>
CharSequence CharSeq){<z>
if(isHorizontal()){<z>
CharSeq);<z>
String> items_to_be_copied)<z>
debug("ResourcesAction.getPasteActions()");<z>
;<z>
isEmpty()))<z>
actions;<z>
);<z>
String>();<z>
permissions.contains(ContentPermissions.CREATE))<z>
selectedItem.isCollection())<z>
ContentCollection) selectedItem).getMembers());<z>
getResourceType(selectedItem, registry);<z>
.isEmpty())<z>
.endsWith("/") ? "" : "/";<z>
= false;<z>
(String itemId : items_to_be_moved)<z>
.getId()))<z>
("/"))<z>
= isolateName(itemId) + "/";<z>
) + slash1 + name))<z>
= true;<z>
;<z>
(PASTE_MOVED_ACTIONS);<z>
if(movable && conditionalContentNewActions != null)<z>
;<z>
))<z>
"" : "/";<z>
boolean copyable = false;<z>
: items_to_be_copied)<z>
.getId()))<z>
"/"))<z>
= isolateName(itemId) + "/";<z>
+ slash1 + name))<z>
copyable = true;<z>
= true;<z>
;<z>
(copyable && conditionalContentNewActions != null)<z>
(conditionalContentNewActions);<z>
.iterator();<z>
))<z>
actionIt.next();<z>
(ContentEntity) ref.getEntity();<z>
entity))<z>
);<z>
actions;<z>
.Object obj) {<z>
obj instanceof TpQueue)) {<z>
;<z>
TpQueue other = (TpQueue) obj;<z>
obj == null) {<z>
return false;<z>
{<z>
return true;<z>
(__equalsCalc != null) {<z>
;<z>
__equalsCalc = obj;<z>
_equals;<z>
true &&<z>
||<z>
&&<z>
.getName()))) &&<z>
()==null) ||<z>
!=null &&<z>
))));<z>
= null;<z>
_equals;<z>
handler) {<z>
.lock();<z>
);<z>
} finally {<z>
.unlock();<z>
buildISOMessage() throws Exception {<z>
);<z>
);<z>
packager);<z>
.setMTI("0200");<z>
3, "000010");<z>
(4, "1500");<z>
.set(7, "1206041200");<z>
11, "000001");<z>
"12340001");<z>
);<z>
printISOMessage(isoMsg);<z>
[] result = isoMsg.pack();<z>
new String(result);<z>
) {<z>
throw new Exception(e);<z>
{<z>
)) {<z>
return false;<z>
DataPacket();<z>
packet.setTimestamp(timestamp);<z>
packet.setData(data);<z>
;<z>
sendDataPacket(packet);<z>
> params) {<z>
_methodName = methodName;<z>
this._params = params;<z>
this._revoke = false;<z>
public void checkPropertyAccess(String key) {<z>
);<z>
)<z>
(key);<z>
{<z>
LOG.debug("Create a new Class11BIENDSub entity");<z>
Session session = HibernateUtil.currentSession();<z>
.save(class11BIENDSub);<z>
e) {<z>
e);<z>
(Binding binding) {<z>
(variables.length);<z>
variables.length; i++) {<z>
.alloc(variables[i]);<z>
.get(v);<z>
(v)).intValue();<z>
(index, value);<z>
return d;<z>
protected String customHtmlStart() {<z>
;<z>
(Messages.GUI_USER_DEPENDENCIES_NOTICE_0)));<z>
.append("\n");<z>
< 0) {<z>
(key(Messages.GUI_USER_DEPENDENCIES_SELECTED_USERS_0));<z>
);<z>
(), CmsHtmlList.ITEM_SEPARATOR, true);<z>
result.append("<ul>\n");<z>
();<z>
hasNext()) {<z>
();<z>
"<li>");<z>
append(name);<z>
result.append("</li>\n");<z>
;<z>
) {<z>
;<z>
{<z>
GUI_USER_DEPENDENCIES_DELETE_0));<z>
result.append(dialogBlockEnd());<z>
;<z>
static ProtectionRuleActionKindType fromValue(String v) {<z>
ProtectionRuleActionKindType c: ProtectionRuleActionKindType.values()) {<z>
) {<z>
return c;<z>
(v);<z>
)<z>
int s = state;<z>
0)<z>
;<z>
= state;<z>
)<z>
(this)<z>
state = (state | RELOAD_FLAG) ^ RELOAD_FLAG;<z>
();<z>
settings) {<z>
(WizardDescriptor) settings;<z>
));<z>
.getGenerateStartup());<z>
output, Reporter reporter)<z>
).split(", ");<z>
fileName = keyTokens[0];<z>
= keyTokens[0];<z>
".");<z>
0)<z>
(indexSeparator);<z>
indexOf("."));<z>
, "");<z>
extension.replaceAll("[^a-zA-Z0-9]+", "");<z>
, reporter);<z>
= 0;<z>
long columnCount = 0;<z>
values.hasNext())<z>
;<z>
rowCount)), value);<z>
= rowCount + 1;<z>
;<z>
.length ? columnCount : columns.length;<z>
rowCount);<z>
;<z>
void run() {<z>
.get()) {<z>
.getInterval());<z>
(InterruptedException e) {<z>
);<z>
sendMessage();<z>
(Exception e) {<z>
, e.getMessage(), e);<z>
void doLoad( )<z>
= Platform.getExtensionRegistry( );<z>
null )<z>
new ExtensionException(<z>
,<z>
);<z>
IExtensionPoint extensionPoint = pluginRegistry<z>
extensionPointer );<z>
null )<z>
(<z>
,<z>
.DESIGN_EXCEPTION_EXTENSION_POINT_NOT_FOUND ) );<z>
( );<z>
if ( extensions != null )<z>
i < extensions.length; i++ )<z>
i] );<z>
(CharID id)<z>
componentMap = getCachedMap(id);<z>
(componentMap == null)<z>
();<z>
, componentMap);<z>
componentMap;<z>
void foo5() throws NamingException {<z>
null;<z>
;<z>
finally {<z>
close();<z>
{<z>
getCluster();<z>
DatabaseWriter(cluster);<z>
{<z>
);<z>
));<z>
criteriaMap.put("mount",mount);<z>
getCriteriaQuery(ClusterDiskHome.table,criteriaMap);<z>
query(query);<z>
{<z>
);<z>
;<z>
(Exception e) {<z>
e.toString());<z>
else {<z>
return null;<z>
void updateGroupDetails(GroupForm groupForm, IPerson updater) {<z>
)) {<z>
;<z>
(log.isDebugEnabled()) {<z>
) + "]");<z>
findGroup(groupForm.getKey());<z>
;<z>
groupForm.getDescription());<z>
);<z>
private MessagingException mapStatusToException(int statusCode) {<z>
) {<z>
:<z>
.IN_PROGRESS:<z>
case EmailServiceStatus.ACCOUNT_UNINITIALIZED:<z>
;<z>
EmailServiceStatus.LOGIN_FAILED:<z>
("");<z>
EmailServiceStatus.CONNECTION_ERROR:<z>
.IOERROR);<z>
SECURITY_FAILURE:<z>
.SECURITY_POLICIES_REQUIRED);<z>
EmailServiceStatus.ACCESS_DENIED:<z>
.ACCESS_DENIED);<z>
case EmailServiceStatus.ATTACHMENT_NOT_FOUND:<z>
MessagingException.ATTACHMENT_NOT_FOUND);<z>
case EmailServiceStatus.CLIENT_CERTIFICATE_ERROR:<z>
;<z>
MESSAGE_NOT_FOUND:<z>
EmailServiceStatus.FOLDER_NOT_DELETED:<z>
.FOLDER_NOT_RENAMED:<z>
EmailServiceStatus.FOLDER_NOT_CREATED:<z>
.REMOTE_EXCEPTION:<z>
;<z>
{<z>
new StringBuilder("Matrix4\n[\n");<z>
0; i < 4; i++) {<z>
++) {<z>
(" ");<z>
);<z>
result.append(" \n");<z>
);<z>
toString();<z>
) {<z>
components = name.split("-");<z>
)<z>
("Invalid UUID string: "+name);<z>
<5; i++)<z>
] = "0x"+components[i];<z>
[0]).longValue();<z>
mostSigBits <<= 16;<z>
();<z>
<<= 16;<z>
]).longValue();<z>
();<z>
48;<z>
[4]).longValue();<z>
mostSigBits, leastSigBits);<z>
next() {<z>
> row = it.next();<z>
>();<z>
{<z>
;<z>
);<z>
getField());<z>
);<z>
() == 7) {<z>
));<z>
get(5).getField());<z>
(6).getField());<z>
) == 2) {<z>
;<z>
).getField());<z>
dict);<z>
{<z>
;<z>
.getFormDetails().iterator();<z>
(i.hasNext())<z>
();<z>
(tmpItem.hasValue())<z>
= tmpItem.GetFieldName();<z>
)<z>
) + ".", "");<z>
);<z>
ActivitiContextImpl(Session hibernateSession,<z>
,<z>
ProcessEngine processEngine) {<z>
.hibernateSession = hibernateSession;<z>
factory = factory;<z>
processEngine = processEngine;<z>
beginTransaction();<z>
ByteBuffer in, ValueHandler handler) throws AmqpErrorException<z>
if(in.remaining()>=8)<z>
();<z>
new Date(l);<z>
type.transport.Error();<z>
FRAMING_ERROR);<z>
setDescription("Cannot construct timestamp: insufficient input data");<z>
AmqpErrorException(error);<z>
public String toString()<z>
String temp = "";<z>
+= "permitted:\n";<z>
!= null)<z>
+= "DN:\n";<z>
"\n";<z>
permittedSubtreesDNS != null)<z>
;<z>
"\n";<z>
null)<z>
temp += "Email:\n";<z>
permittedSubtreesEmail.toString() + "\n";<z>
)<z>
;<z>
;<z>
)<z>
temp += "IP:\n";<z>
stringifyIPCollection(permittedSubtreesIP) + "\n";<z>
temp += "excluded:\n";<z>
())<z>
;<z>
temp += excludedSubtreesDN.toString() + "\n";<z>
excludedSubtreesDNS.isEmpty())<z>
temp += "DNS:\n";<z>
;<z>
excludedSubtreesEmail.isEmpty())<z>
+= "Email:\n";<z>
;<z>
!excludedSubtreesURI.isEmpty())<z>
temp += "URI:\n";<z>
toString() + "\n";<z>
))<z>
"IP:\n";<z>
(excludedSubtreesIP) + "\n";<z>
temp;<z>
private boolean isStaticFinal(PsiField field) {<z>
final PsiModifierList modifierList = field.getModifierList();<z>
.assertTrue(modifierList != null);<z>
FINAL);<z>
.Expr e3, SourceModel.Expr e4) {<z>
.make(<z>
e2, e3, e4});<z>
Connection createConnection() throws JMSException<z>
if (HornetQRAConnectionFactoryImpl.trace)<z>
;<z>
, HornetQRAConnectionFactory.CONNECTION);<z>
trace)<z>
.LOGGER.trace("Created connection: " + s);<z>
return s;<z>
void select(MindMapNode primarySelected, List selecteds) {<z>
();) {<z>
MindMapNode) (i.next());<z>
(node);<z>
primarySelected);<z>
{<z>
).selectAsTheOnlyOneSelected(focussedNodeView);<z>
scrollNodeToVisible(focussedNodeView);<z>
); i.hasNext();) {<z>
MindMapNode) i.next();<z>
(node);<z>
nodeView != null) {<z>
(nodeView);<z>
void createCalendarIfNeeded() {<z>
this.fastDateCal == null) {<z>
GregorianCalendar(Locale.US);<z>
this.getDefaultTimeZone());<z>
)<z>
= null;<z>
.getSelection() )<z>
EntryExistsCopyStrategy.BREAK;<z>
() )<z>
strategy = EntryExistsCopyStrategy.IGNORE_AND_CONTINUE;<z>
.getSelection() )<z>
;<z>
) )<z>
= EntryExistsCopyStrategy.RENAME_AND_CONTINUE;<z>
();<z>
);<z>
(final XMLStreamReader xmlr, final CloudBlobClient serviceClient,<z>
XMLStreamException, ParseException, URISyntaxException,<z>
;<z>
next();<z>
.NAME_ELEMENT);<z>
.NAME_ELEMENT);<z>
);<z>
BlobConstants.BLOB_PREFIX_ELEMENT);<z>
prefixName);<z>
void handleCollision() {<z>
();<z>
(goingToGoal) {<z>
();<z>
else {<z>
;<z>
CollisionDetectionRequest());<z>
;<z>
) throws RecognitionException {<z>
;<z>
_channel = DEFAULT_TOKEN_CHANNEL;<z>
mJ();<z>
;<z>
);<z>
);<z>
= _type;<z>
channel = _channel;<z>
GridItem item)<z>
checkWidget();<z>
if(!item.isVisible())<z>
return false;<z>
indexOf(item);<z>
-1)<z>
(SWT.ERROR_INVALID_ARGUMENT);<z>
firstVisibleIndex = getTopIndex();<z>
= getBottomIndex();<z>
itemIndex >= firstVisibleIndex && itemIndex < lastVisibleIndex)<z>
itemIndex == lastVisibleIndex && bottomIndexShownCompletely);<z>
void eraseConnectionMoveFeedback(ReconnectRequest request) {<z>
originalAnchor == null)<z>
(request.isMovingStartAnchor())<z>
().setSourceAnchor(originalAnchor);<z>
);<z>
= null;<z>
feedbackHelper = null;<z>
type, String xpath, Class target,<z>
{<z>
class.isAssignableFrom(type)) {<z>
XPathPropertyAcessor();<z>
(type)) {<z>
XPathPropertyAcessor();<z>
null;<z>
ParsedPluginXML(String xml, String generatedToken) {<z>
= xml;<z>
this.myGeneratedToken = generatedToken;<z>
>();<z>
new TreeMap<Integer, ExtensionDescriptor>();<z>
parse(xml);<z>
.firstKey() : myPluginEnd;<z>
IOException, TransformerException {<z>
= XalanUtils.parseXml(configFile, false);<z>
));<z>
;<z>
getIntegerSetting(configDoc, "FTP_DOWNLOAD_PORT");<z>
getStringSetting(configDoc, "FTP_DOWNLOAD_USER");<z>
configDoc, "FTP_DOWNLOAD_PASSWORD");<z>
{<z>
;<z>
().setServerName(serverName);<z>
serverPort);<z>
getFtpDownloaderThread().setUsername(username);<z>
.setPassword(password);<z>
configDoc, "FTP_DOWNLOAD_SKIP");<z>
);<z>
, "FTP_DOWNLOAD_USE_PASSIVE_TRANSFER");<z>
Boolean debug = getBooleanSetting(configDoc, "FTP_DOWNLOAD_DEBUG");<z>
){ skipTransfer = false; }<z>
{ removeSource = false; }<z>
; }<z>
; }<z>
;<z>
removeSource);<z>
passiveTransfer);<z>
().setDebug(debug);<z>
(new ArrayList<DownloadMapping>());<z>
(configDoc, "FTP_DOWNLOAD_REMOTE_DIRECTORY");<z>
, "FTP_DOWNLOAD_REMOTE_FILE");<z>
;<z>
(downloadDirectory);<z>
downloadFile);<z>
);<z>
null);<z>
String getComments( )<z>
item.getComments( );<z>
{<z>
;<z>
;<z>
public void mouseExited(final MouseEvent e) {<z>
());<z>
);<z>
;<z>
();<z>
;<z>
e.consume();<z>
boolean b)<z>
(b);<z>
(b);<z>
;<z>
(Switch<T> sw)<z>
)<z>
sw))<z>
switches.remove(sw);<z>
values().iterator();<z>
it.hasNext())<z>
) == sw)<z>
.remove();<z>
() {<z>
value instanceof Integer) {<z>
Integer)value;<z>
return -1;<z>
AbstractID3v2Frame next) {<z>
{<z>
) {<z>
map.get(frameId);<z>
(o instanceof ArrayList) {<z>
<AbstractID3v2Frame>) o;<z>
multiValues.add(next);<z>
else {<z>
ArrayList<AbstractID3v2Frame>();<z>
((AbstractID3v2Frame) o);<z>
);<z>
frameId, multiValues);<z>
} else {<z>
frameId, next);<z>
if (map.containsKey(frameId)) {<z>
> 0) {<z>
duplicateFrameId += ";";<z>
frameId;<z>
frameId)).getSize();<z>
} else {<z>
put(frameId, next);<z>
executeDelete(@Context UriInfo ui,<z>
DefaultValue("callback") String callback)<z>
Exception {<z>
;<z>
) {<z>
return new JSONWithPadding(mq.unsubscribeFromQueue(<z>
);<z>
return null;<z>
{<z>
datum == null) {<z>
();<z>
());<z>
));<z>
());<z>
);<z>
shuffleFinishTime = shuffleFinishTime;<z>
sortFinishTime = sortFinishTime;<z>
datum.finishTime = finishTime;<z>
= new Utf8(hostname);<z>
= port;<z>
{<z>
.rackname = new Utf8(rackName);<z>
(state);<z>
;<z>
.toAvro(ProgressSplitsBlock<z>
);<z>
= AvroArrayUtils.toAvro(ProgressSplitsBlock<z>
;<z>
vMemKbytes = AvroArrayUtils.toAvro(ProgressSplitsBlock<z>
arrayGetVMemKbytes(allSplits));<z>
toAvro(ProgressSplitsBlock<z>
;<z>
;<z>
location, final boolean isRelayLocation )<z>
location );<z>
)<z>
StringBuffer();<z>
if ( !location.startsWith( "/" ) )<z>
);<z>
) )<z>
( "game.php" );<z>
.append( location );<z>
;<z>
.location = location;<z>
{<z>
{<z>
CruiseControlException("'stream' is a required attribute for Accurev");<z>
{<z>
= new XQuery(<z>
ctx);<z>
= result(query);<z>
result = res;<z>
true)<z>
(Object o) {<z>
o;<z>
valueForKeyPath(_keyPath);<z>
(e);<z>
acceptCall(CallSession cs)<z>
= cs.inviteTransaction.getRequest();<z>
;<z>
);<z>
.buildSDP(false);<z>
ToHeader) req.getHeader("To");<z>
getUser();<z>
.getListeningPoint(ListeningPoint.UDP);<z>
);<z>
localAddress);<z>
resp.addHeader(ch);<z>
setContent(sdp, cth);<z>
inviteTransaction.sendResponse(resp);<z>
catch (ParseException e)<z>
"Error accepting call", e);<z>
;<z>
SipException e)<z>
("Error accepting call", e);<z>
;<z>
e)<z>
"Error accepting call", e);<z>
;<z>
true;<z>
startIndex, double tolerance) {<z>
(array == null) {<z>
;<z>
{<z>
= 0;<z>
doubleToFind - tolerance;<z>
;<z>
array.length; i++) {<z>
<= max) {<z>
return i;<z>
1;<z>
public void mergeAll() {<z>
buffersOnly) {<z>
IllegalStateException(<z>
;<z>
;<z>
if (size < 2) {<z>
0;<z>
b : messageQueue) {<z>
;<z>
IoBuffer newBuf = IoBuffer.allocate(sum);<z>
(; ;) {<z>
IoBuffer) messageQueue.poll();<z>
buf == null) {<z>
.put(buf);<z>
();<z>
messageQueue.add(newBuf);<z>
(RPCBuffer buffer) {<z>
;<z>
mName);<z>
mAttrs, mAttrValues);<z>
int hashCode() {<z>
= hash;<z>
== 0) {<z>
h = 17;<z>
();<z>
);<z>
* h + index;<z>
= h;<z>
;<z>
indexProvider,<z>
Class<? extends PropertyContainer> clazz) {<z>
graphDb;<z>
;<z>
= indexName;<z>
;<z>
();<z>
Callable<Boolean>[] getCancelHandlers() {<z>
) {<z>
.size()]);<z>
, Instance value)<z>
(name, value);<z>
) {<z>
;<z>
= newLeft;<z>
())<z>
oldLeft, left));<z>
() {<z>
.tableNumberRowsRepeated;<z>
HttpServletRequest req) throws IOException<z>
= req.getHeader(HEADER_MAC);<z>
null)<z>
.decode(header);<z>
return null;<z>
public String toString()<z>
"[addr=" + address<z>
+ ",port=" + port<z>
+ localport + "]";<z>
){<z>
;<z>
null){<z>
;<z>
PartyProp oldProp = partyProp;<z>
newKeepingListeners();<z>
.removeAllChangeListeners();<z>
partyProp.forceChangeEvent();<z>
{<z>
){<z>
null){<z>
leave();<z>
catch(IllegalStateException e){<z>
JunctionActor("participant") {<z>
public void onActivityJoin() {<z>
"Joined activity!");<z>
, "Joined Party");<z>
.this.updateUser();<z>
(){<z>
, "You created the activity.");<z>
, "Created Party");<z>
onMessageReceived(MessageHeader header, JSONObject msg){<z>
.post(new Runnable(){<z>
){<z>
"JunctionApp", "Got msg.");<z>
});<z>
<JunctionExtra> getInitialExtras(){<z>
<JunctionExtra>();<z>
(partyProp);<z>
return l;<z>
("sb.openjunction.org");<z>
getInstance(sb);<z>
setConnectionTimeout(20000);<z>
url = null;<z>
== null) {<z>
);<z>
else {<z>
.toString());<z>
catch(URISyntaxException e){<z>
, "Failed to parse uri: " + uri.toString());<z>
url, actor);<z>
)){<z>
this.jxActor = actor;<z>
);<z>
url.toString());<z>
= getSharedPreferences("prefs", MODE_PRIVATE);<z>
= mPrefs.edit();<z>
("last_party_url", uri.toString());<z>
;<z>
JunctionException e){<z>
"Failed to connect to junction activity!");<z>
;<z>
.printStackTrace(System.err);<z>
{<z>
,"Failed to connect to junction activity!");<z>
updateStatus(0, "Failed to connect");<z>
System.err);<z>
start();<z>
;<z>
private void parseWorking(String parameter) {<z>
DAVResourceType.WORKING);<z>
(true);<z>
setWorking(true);<z>
1) {<z>
;<z>
"/");<z>
} else {<z>
(DAVPathUtil.head(parameter));<z>
parameter, false));<z>
public String toString()<z>
buf = new StringBuffer();<z>
= System.getProperty("line.separator");<z>
"RSA Public Key").append(nl);<z>
(nl);<z>
(16)).append(nl);<z>
return buf.toString();<z>
Database database) throws CustomChangeException, UnsupportedChangeException, RollbackImpossibleException {<z>
SqlStatement[1];<z>
"persons");<z>
("id=1");<z>
=ds;<z>
return st;<z>
void calcCoeff()<z>
/getSampleRate();<z>
);<z>
)/2 };<z>
float[] { x };<z>
method) {<z>
);<z>
);<z>
for (final PsiParameter parameter : parameters) {<z>
);<z>
);<z>
)<z>
length; i++)<z>
.equals(type) )<z>
[i];<z>
;<z>
NotificationChain eInverseRemove( InternalEObject otherEnd,<z>
featureID, NotificationChain msgs )<z>
featureID )<z>
case ComponentPackage.CHART_PREFERENCES__LABELS :<z>
.basicRemove( otherEnd,<z>
);<z>
case ComponentPackage.CHART_PREFERENCES__BLOCKS :<z>
( otherEnd,<z>
msgs );<z>
( otherEnd, featureID, msgs );<z>
)<z>
(grouping == null)<z>
return null;<z>
parseTupple(grouping);<z>
new Expression[node.length];<z>
length; i++)<z>
!= null)<z>
);<z>
if (parameterSubtitutionMap != null)<z>
]);<z>
();<z>
.setSymbolTable(symtbl);<z>
setMethodAliases(queryMethodAliasByPrefix);<z>
(node[i]);<z>
;<z>
expr;<z>
String key, String def) {<z>
);<z>
SecurityManager sm = getSecurityManager();<z>
sm != null) {<z>
checkPropertyAccess(key);<z>
);<z>
Iterator getIterator() {<z>
) {<z>
CSVParser parser;<z>
rowNum;<z>
= null;<z>
BufferedReader in = null;<z>
rowNum = 0;<z>
CSVParser();<z>
;<z>
nextElt = lookahead();<z>
IOException iex) {<z>
.nextElt = null;<z>
) {<z>
;<z>
public synchronized Object next() {<z>
nextElt;<z>
);<z>
toReturn;<z>
{<z>
();<z>
Object lookahead() {<z>
String s = null;<z>
.getFields();<z>
()) != null) {<z>
;<z>
== 1 && hasHeaderRow) {<z>
Record cur = null;<z>
[] = parser.parseLine(s);<z>
int fieldPos = 0;<z>
parts.length; i++) {<z>
) {<z>
schema);<z>
= parts[i];<z>
.startsWith(",")) {<z>
rawFieldValue = rawFieldValue.substring(1);<z>
);<z>
rawFieldValue.endsWith("\"")) {<z>
1);<z>
rawFieldValue.trim();<z>
= curFields.get(fieldPos);<z>
);<z>
= curField.schema();<z>
)));<z>
++;<z>
{<z>
cur;<z>
== null) {<z>
.close();<z>
} catch (IOException iex) {<z>
;<z>
;<z>
.Type fieldType) throws IOException {<z>
fieldValue = null;<z>
.Type.INT) {<z>
= Integer.parseInt(rawFieldValue);<z>
nfe) {<z>
.printStackTrace();<z>
fieldValue = 0;<z>
Type.DOUBLE) {<z>
;<z>
(fieldType == Schema.Type.STRING) {<z>
fieldValue = rawFieldValue;<z>
} else {<z>
("Unexpected field-level schema type: " + fieldType);<z>
fieldValue;<z>
) {<z>
equals(Namespaces.PROPERTIES_CORE)) {<z>
;<z>
);<z>
return true;<z>
) {<z>
part;<z>
);<z>
;<z>
.PROPERTIES_CUSTOM)) {<z>
DocPropsCustomPart)part;<z>
.info("Set shortcut for docPropsCustomPart");<z>
;<z>
Namespaces.SPREADSHEETML_WORKBOOK)) {<z>
;<z>
info("Set shortcut for WorkbookPart");<z>
return true;<z>
{<z>
return false;<z>
getLoginConnectorConfig() {<z>
;<z>
= getDefaultServer();<z>
);<z>
);<z>
return cc;<z>
)<z>
if(System.getSecurityManager() != null)<z>
clazz);<z>
;<z>
Exception e)<z>
cause = e;<z>
PrivilegedActionException)<z>
();<z>
"Error occurred while creating an instance of class : " + clazz.getName();<z>
, cause);<z>
,cause);<z>
) {<z>
;<z>
(departmentCode == null) {<z>
null;<z>
EntityEmployment.Builder.create();<z>
.getEmployeeIdProperty()));<z>
(<z>
getEmployeeStatusProperty())));<z>
Builder.create("P"));<z>
.setBaseSalaryAmount(KualiDecimal.ZERO);<z>
setActive(true);<z>
return employee;<z>
CDOListFeatureDelta delta)<z>
);<z>
throws IOException<z>
level];<z>
null )<z>
.getBlockId( ) == blockId )<z>
block;<z>
unloadBlock( block );<z>
-1 )<z>
blockId );<z>
( );<z>
] = block;<z>
return block;<z>
portlet.expando.model.ExpandoTable fetchExpandoTable(<z>
)<z>
.SystemException {<z>
return _expandoTableLocalService.fetchExpandoTable(tableId);<z>
{<z>
);<z>
null)<z>
);<z>
IOException {<z>
;<z>
boolean maybeMerge = false;<z>
) > 0) {<z>
if (infoStream.isEnabled("DW")) {<z>
("DW", "DocumentsWriter has queued dwpt; will hijack this thread to flush pending segment(s)");<z>
flushingDWPT;<z>
null) {<z>
(flushingDWPT);<z>
isEnabled("DW")) {<z>
)) {<z>
infoStream.message("DW", "WARNING DocumentsWriter has stalled threads; waiting");<z>
();<z>
0);<z>
("DW")) {<z>
"DW", "continue indexing after helping out flushing DocumentsWriter is healthy");<z>
maybeMerge;<z>
name) {<z>
null)<z>
);<z>
List<PowerOfAttorney> getPowerOfAttorneyByServiceId(String serviceId) {<z>
powerOfAttorneyList = new ArrayList<PowerOfAttorney>();<z>
transaction =<z>
.class);<z>
null) {<z>
.getId());<z>
return powerOfAttorneyList;<z>
FieldConfig fc,<z>
isKeyField) {<z>
super(imObj, path, isKeyField);<z>
fc = fc;<z>
String parameterName, int min, int max) {<z>
inputValue = JOptionPane<z>
"Please input a value for " + parameterName<z>
max);<z>
inputValue.trim());<z>
> max) {<z>
+ inputValue<z>
parameterName<z>
" was too large. The maximum value " + max<z>
"Invalid Input",<z>
;<z>
;<z>
min) {<z>
"Your input " + inputValue<z>
+ " for " + parameterName<z>
+ min<z>
"Invalid Input",<z>
JOptionPane.ERROR_MESSAGE);<z>
return min;<z>
else {<z>
return i;<z>
(NumberFormatException nfe) {<z>
, "Your input " + inputValue<z>
" for " + parameterName<z>
" was invalid. The minimum value " + min<z>
" will be used.", "Invalid Input",<z>
ERROR_MESSAGE);<z>
min;<z>
text) {<z>
MmsConfig.getEmailGateway() != null) {<z>
();<z>
length;<z>
i < length; i++) {<z>
])) {<z>
= dests[i] + " " + text;<z>
= SmsMessage.calculateLength(mtext, false);<z>
) {<z>
updateState(RECIPIENTS_REQUIRE_MMS, true, true);<z>
;<z>
);<z>
true;<z>
return false;<z>
static JailZone findNearestJail(Location loc, String ignore)<z>
= null;<z>
len = -1;<z>
)<z>
).equalsIgnoreCase(ignore)) continue;<z>
)) continue;<z>
);<z>
len || len == -1)<z>
len = clen;<z>
i;<z>
;<z>
Builder clearStartTime() {<z>
bitField0_ = (bitField0_ & ~0x00000004);<z>
;<z>
();<z>
this;<z>
) {<z>
?x:oldX;<z>
oldY)?y:oldY;<z>
- clipX + 1;<z>
1;<z>
= 3;<z>
(ic!=null) {<z>
mag = ic.getMagnification();<z>
mag<1.0)<z>
/mag);<z>
;<z>
m+getStrokeWidth()*2);<z>
clipY-=m;<z>
*2;<z>
ENABLED)<z>
shared._distance == 0);<z>
);<z>
);<z>
.getLocalTrunk());<z>
registerDefaultObjectModel() {<z>
.register(DefaultObjectModelBase.getInstance());<z>
IOException {<z>
new HashSet<String>();<z>
null) {<z>
, new WebBundleScannerCallback() {<z>
{<z>
);<z>
if (lastSlashIndex >= 0) {<z>
, '.'));<z>
{<z>
, true);<z>
scanner.scanWar();<z>
packagesInWar;<z>
, boolean force)<z>
get(location) ;<z>
)<z>
) )<z>
location) ;<z>
closedown() ;<z>
.close() ;<z>
(location) ;<z>
(AntElementNode node, String mode) {<z>
String selectedTargetName= null;<z>
node instanceof AntTargetNode) {<z>
) node;<z>
if (targetNode.isDefaultTarget()) {<z>
DEFAULT_TARGET;<z>
else {<z>
) + ',';<z>
if (node instanceof AntProjectNode) {<z>
DEFAULT_TARGET;<z>
if (node instanceof AntTaskNode) {<z>
taskNode= (AntTaskNode) node;<z>
.getOwningTarget().getName();<z>
= node.getBuildFileResource();<z>
!= null) {<z>
), mode, selectedTargetName);<z>
getActivePage();<z>
= null;<z>
page.getActiveEditor();<z>
!= null) {<z>
;<z>
(ILocationProvider.class);<z>
{<z>
;<z>
null) {<z>
selectedTargetName);<z>
;<z>
throws IOException<z>
output = "";<z>
= true;<z>
)<z>
first)<z>
+= ",";<z>
= false;<z>
get(biome);<z>
;<z>
historyAdapter,<z>
onDialogCancelListener) {<z>
.historyAdapter = historyAdapter;<z>
.context = context;<z>
= clientId;<z>
.accessToken = accessToken;<z>
onDialogCancelListener = onDialogCancelListener;<z>
{<z>
if (isNeedImport(javaType)) {<z>
javaType.replace("$", "."));<z>
createEmptyTable<z>
String functionName )<z>
StringBuilder buffer = new StringBuilder();<z>
buffer.append( "\n" );<z>
append( "as select s.* from table( " + functionName + "( ) ) s\n" );<z>
.append( "with no data\n" );<z>
() );<z>
) {<z>
;<z>
.setValueClass(JRDataSource.class);<z>
getDataSourceType());<z>
String expText = null;<z>
getDataSourceOrigin() == DJConstants.DATA_SOURCE_ORIGIN_FIELD){<z>
() + "})";<z>
getDataSourceOrigin() == DJConstants.DATA_SOURCE_ORIGIN_PARAMETER){<z>
getDataSourceExpression() +"\" ) )";<z>
getDataSourceOrigin() == DJConstants.DATA_SOURCE_TYPE_SQL_CONNECTION) {<z>
".get( \""+ ds.getDataSourceExpression() +"\" ) )";<z>
) {<z>
)+ ")" + REPORT_PARAMETERS_MAP + ".get( \"REPORT_DATA_SOURCE\" ) )";<z>
expText);<z>
;<z>
date_expires() throws RecognitionException {<z>
null;<z>
null;<z>
;<z>
descr = null;<z>
;<z>
; if (failed) return descr;<z>
;<z>
if (failed) return descr;<z>
==0 ) {<z>
);<z>
) );<z>
) );<z>
CommonToken)STRING15).getStopIndex() );<z>
re) {<z>
(re);<z>
(input,re);<z>
;<z>
public DocType(String elementName, String systemId) {<z>
setName(elementName);<z>
;<z>
;<z>
id, PlasmidTable plasmidTable, StrainTable strainTable) {<z>
id;<z>
this.plasmidTable = plasmidTable;<z>
;<z>
.dateCreated = new Date();<z>
new Date();<z>
.core.session.Session session)<z>
();)<z>
next();<z>
));<z>
evt) {<z>
selectedItem = this.jComboBoxTarget.getSelectedItem();<z>
: PlatformUiSupport.getPlatform(selectedItem));<z>
showCustomizer(jp);<z>
String scope )<z>
getClasspath( scope ) );<z>
classpath );<z>
;<z>
(MouseOverEvent event) {<z>
!= null)<z>
)) {<z>
m_hideAnimation != null) {<z>
();<z>
;<z>
{<z>
null, 100);<z>
);<z>
if (m_removeTimer != null) {<z>
);<z>
null;<z>
) {<z>
);<z>
.registerMetaData(<z>
(<z>
(RNG_NAMESPACE),<z>
ClassFilter(XmlDocument.class)<z>
RngNsDescriptor.class);<z>
registerMetaData(<z>
ClassFilter(RncDocument.class),<z>
);<z>
(new ElementFilter() {<z>
isAcceptable(Object element, PsiElement context) {<z>
element instanceof XmlTag) {<z>
final XmlTag tag = (XmlTag)element;<z>
(tag);<z>
return domElement instanceof RngDefine;<z>
false;<z>
) {<z>
class.isAssignableFrom(hintClass);<z>
);<z>
() {<z>
);<z>
convertBytesToString(bytes);<z>
System.currentTimeMillis()) + random;<z>
("id", uniqueId);<z>
)<z>
;<z>
this._nameValueChangeListeners != null)<z>
getExpressionRoot();<z>
this)<z>
size() > 0)<z>
(0);<z>
top.addNameValueChangeListener(listener);<z>
(listener);<z>
this._nameValueChangeListeners = null;<z>
writeElement(String namespace, String namespaceInfo,<z>
) {<z>
.length() > 0)) {<z>
switch (type) {<z>
OPENING:<z>
(namespaceInfo != null) {<z>
+ " xmlns:"<z>
namespaceInfo + "\">");<z>
else {<z>
);<z>
case CLOSING:<z>
+ ":" + name + ">\n");<z>
case NO_CONTENT:<z>
{<z>
+ name + " xmlns:"<z>
;<z>
{<z>
+ ":" + name + "/>");<z>
{<z>
(type) {<z>
case OPENING:<z>
append("<" + name + ">");<z>
CLOSING:<z>
.append("</" + name + ">\n");<z>
:<z>
.append("<" + name + "/>");<z>
int featureID, Object newValue) {<z>
featureID) {<z>
case SimplestructurePackage.A__A:<z>
A)newValue);<z>
A__B:<z>
clear();<z>
;<z>
:<z>
;<z>
);<z>
<String> groups)<z>
();<z>
: groups)<z>
()))<z>
);<z>
)<z>
))<z>
pm.getUser(name);<z>
> e : user<z>
)<z>
getValue();<z>
if (g.length == 0)<z>
user.getName());<z>
else if (g.length >= 1)<z>
))<z>
(user.getName());<z>
] userList = pm.getUsers(groupName);<z>
> 0)<z>
: userList)<z>
(pu.getName())<z>
())))<z>
(pu.getName());<z>
return playerList;<z>
, final int access) {<z>
(ClassElement) context.peek();<z>
;<z>
pattern) {<z>
LinkedList<String>();<z>
(new Action<String>() {<z>
void execute(String s) {<z>
);<z>
()) {<z>
matcher.group(1);<z>
)) {<z>
).equals(taskName)) {<z>
);<z>
);<z>
return tasks;<z>
getDefaultNumberFormat(final Locale locale) {<z>
NumberFormat nf = NumberFormat.getNumberInstance(locale);<z>
nf.setMaximumFractionDigits(0);<z>
(true);<z>
;<z>
pTimeout) throws IOException {<z>
* 2);<z>
);<z>
count;<z>
;<z>
)) != -1) {<z>
(buffer, 0, count);<z>
;<z>
bytes.toByteArray();<z>
{<z>
{<z>
;<z>
!ok) {<z>
_log.shouldLog(Log.ERROR))<z>
error("Received unsigned / forged RST on " + con);<z>
else {<z>
DEBUG))<z>
"Reset received");<z>
.resetReceived();<z>
eventOccurred();<z>
(), con.getLifetime());<z>
else {<z>
shouldLog(Log.WARN))<z>
.warn("Received a packet for the wrong connection? wtf: "<z>
packet);<z>
final void rule__XOrExpression__Group_1_0_0__0__Impl() throws RecognitionException {<z>
;<z>
==0 ) {<z>
);<z>
state.backtracking==0 ) {<z>
));<z>
stackSize);<z>
] v, int[] e) {<z>
);<z>
)<z>
("0");<z>
return pt.getCoefficient();<z>
int VHstoredata(int file_id, String fieldname,<z>
int data_type, String vdata_name,<z>
throws HDFException<z>
] data;<z>
HDFArray(thebuf);<z>
data = theArray.byteify();<z>
VHstoredata(file_id, fieldname, data, n_records,<z>
, vdata_class);<z>
) throws AdapterAlreadyExists,<z>
;<z>
(debug)<z>
+ " policies="<z>
policies + ") on poa " + this);<z>
)<z>
().createPoaDestroy();<z>
.get(name));<z>
null)<z>
getORB(), STATE_START);<z>
();<z>
(debug)<z>
, "Calling create_POA: new poa is " + poa);<z>
&& (poa.state != STATE_INIT))<z>
);<z>
;<z>
null)<z>
;<z>
getCopierManager().getDefaultId();<z>
);<z>
;<z>
return poa;<z>
();<z>
();<z>
void createTopic(String name) {<z>
);<z>
NamingException e) {<z>
e);<z>
IOperation operation)<z>
(operation instanceof CreateViewForKindOperation)<z>
provides((CreateViewForKindOperation)operation);<z>
assert operation instanceof CreateViewOperation;<z>
)<z>
((CreateDiagramViewOperation)operation);<z>
operation instanceof CreateEdgeViewOperation)<z>
(CreateEdgeViewOperation)operation);<z>
instanceof CreateNodeViewOperation)<z>
(CreateNodeViewOperation)operation);<z>
false;<z>
throws BookException {<z>
installed().getBook(BIBLE_NAME);<z>
"+moses +aaron");<z>
;<z>
Passage) {<z>
).trimVerses(5);<z>
getName());<z>
if (remaining != null) {<z>
+ remaining.getName());<z>
} else {<z>
("There are only 5 verses containing both moses and aaron");<z>
changedValues, ModelNode... extraSteps) {<z>
;<z>
(hasTransport != null) && !hasTransport;<z>
hasTransport;<z>
&& entity.isHasTransport();<z>
changedValues)) {<z>
cacheContainer = entity.getName();<z>
;<z>
(extraSteps));<z>
(addingTransport) {<z>
(cacheContainer, changedValues, stepsList);<z>
) {<z>
(cacheContainer, stepsList);<z>
removingTransport && (addingTransport || modifyingTransport)) {<z>
stepsList);<z>
changedValues);<z>
stepsList.size()]));<z>
int plateIndex, int wellIndex,<z>
int wellSampleIndex)<z>
, id);<z>
, Integer> indexes =<z>
Integer>();<z>
Index.PLATE_INDEX, plateIndex);<z>
;<z>
Index.WELL_SAMPLE_INDEX, wellSampleIndex);<z>
.class, indexes);<z>
.LSID = id;<z>
, o);<z>
boolean resolve, boolean coreType) {<z>
{<z>
.CUSTOM_FIGURE__QUALIFIED_CLASS_NAME:<z>
return getQualifiedClassName();<z>
CUSTOM_FIGURE__CUSTOM_CHILDREN:<z>
);<z>
, resolve, coreType);<z>
(EngineResourceReference<? extends T> reference) {<z>
();<z>
reference);<z>
.put(referenceId, referenceResource);<z>
(getBaseUri(), referenceId);<z>
] capture(String encoding)<z>
) {<z>
);<z>
= true;<z>
step = 0;<z>
)).toString());<z>
videoControl;<z>
.player;<z>
{<z>
);<z>
= 1;<z>
(this.isAutofocusEnabled) {<z>
3;<z>
out.println("Setting focus for player");<z>
AdvancedMultimediaManager.setFocus(pl);<z>
());<z>
data = null;<z>
= null;<z>
= 4;<z>
encoding != null) {<z>
getProperty("video.snapshot.encodings");<z>
' ') == -1) {<z>
= supported;<z>
encoding);<z>
catch (MediaException e) {<z>
println("did not get data for encoding " + encoding + e);<z>
(encoding == null) {<z>
throw e;<z>
{<z>
;<z>
.println("retrying snapshot with <null> encoding.");<z>
null);<z>
out.println("got data for <null> encoding.");<z>
(MediaException e) {<z>
getProperty("video.snapshot.encodings") + "]" );<z>
).toString());<z>
;<z>
false;<z>
;<z>
;<z>
e) {<z>
out.println("Unable to take snapshot " + e);<z>
throw e;<z>
Throwable e) {<z>
+ e);<z>
e instanceof SecurityException) {<z>
e;<z>
toString() + " at step " + step );<z>
finally {<z>
("stopping snapshot, last step=" + step);<z>
isSnapshotInProgress = false;<z>
Object newValue)<z>
)<z>
case RoutePackage.IMPORT__IMPORTED_TYPE:<z>
JvmType)newValue);<z>
);<z>
updateCoolbar()<z>
getCoolBarManager().update(true);<z>
gkTimeField createTimeField(String eventId, final Map info,<z>
core) {<z>
;<z>
, new EventProcess() {<z>
) {<z>
= eo.getInfoMap();<z>
{<z>
;<z>
value.replaceAll(":", "");<z>
.setTimeValue(value);<z>
.equals("")) {<z>
.clearSelections();<z>
(infoKey, value);<z>
);<z>
() {<z>
<ModelData> se) {<z>
);<z>
);<z>
: md.get("timeValue"));<z>
;<z>
KeyListener() {<z>
{<z>
info);<z>
= tf.getValue();<z>
: value.get("timeValue"));<z>
);<z>
info, "");<z>
;<z>
{<z>
);<z>
is);<z>
();<z>
return sa;<z>
Exception e) {<z>
println(e);<z>
return null;<z>
>> mergeEntryResult(<z>
>[] resultPools,<z>
ReduceType reduceType) {<z>
null<z>
)<z>
return null;<z>
, Object>> result = null;<z>
(resultPools, entryPool,reduceType);<z>
result.size() <= 0))<z>
;<z>
if (needMergeLazy) {<z>
entryPool);<z>
result;<z>
) throws Exception {<z>
) return false;<z>
true;<z>
;<z>
;<z>
;<z>
i = rdns.iterator();<z>
dn.rdns.iterator();<z>
.hasNext()) {<z>
)i.next();<z>
= (RDN)j.next();<z>
(rdn2)) return false;<z>
;<z>
msg) {<z>
) {<z>
DeploymentPropertiesEditionPart basePart = (DeploymentPropertiesEditionPart)editingPart;<z>
{<z>
) {<z>
;<z>
} else {<z>
"");<z>
(UmlViewsRepository.Deployment.Properties.visibility))<z>
);<z>
Deployment.Properties.clientDependency))<z>
basePart.updateClientDependency();<z>
(UmlViewsRepository.Deployment.Properties.owningTemplateParameter))<z>
.getNewValue());<z>
))<z>
());<z>
.Properties.supplier))<z>
;<z>
.Deployment.Properties.client))<z>
();<z>
)<z>
);<z>
Deployment.Properties.location))<z>
msg.getNewValue());<z>
void buildRulesGraph() {<z>
{<z>
= rule.getExpression();<z>
, expression);<z>
null;<z>
) ) {<z>
;<z>
, BnfPredicate.class) != null) continue;<z>
cur.getText()) : null;<z>
) {<z>
myRulesGraph.putValue(rule, r);<z>
);<z>
: myFile.getRules()) {<z>
Rule.isInner(rule)) {<z>
rule).keySet()) {<z>
;<z>
equals(Object obj) {<z>
{<z>
true;<z>
obj instanceof PlumNeedle)) {<z>
false;<z>
obj)) {<z>
;<z>
true;<z>
() {<z>
.getInstance();<z>
, 23);<z>
set(Calendar.MINUTE, 59);<z>
startdate;<z>
List<?> fetchMultiFieldQueryParserFullText(<z>
,<z>
String[] fields,<z>
clazz,<z>
final Criteria criteria,<z>
final Analyzer analyzer) {<z>
= new MultiFieldQueryParser(<z>
, analyzer);<z>
Query query = null;<z>
;<z>
{<z>
log.error("Error on Parse Query " + e);<z>
analyzer, query);<z>
) {<z>
{<z>
return true;<z>
if (isNumberType(typeName)) {<z>
parseDouble(evalValue);<z>
true;<z>
{<z>
return false;<z>
typeName)) {<z>
"true".equalsIgnoreCase(evalValue)<z>
);<z>
{<z>
() == 1;<z>
{<z>
return true;<z>
false;<z>
{<z>
) {<z>
("unchecked")<z>
existing = map.get(eventClass);<z>
(existing != null) {<z>
existing;<z>
);<z>
, emptyList);<z>
return emptyList;<z>
long id) {<z>
v.getTag();<z>
useBaseIntent) {<z>
.baseIntent;<z>
!= null) {<z>
Intent(baseIntent);<z>
uri = baseIntent.getData();<z>
build();<z>
uri);<z>
+ ", id=" + id + ")");<z>
.intent != null) {<z>
intent,<z>
position + ", id=" + id + ")");<z>
StudentProxy proxy) {<z>
proxy = proxy;<z>
(proxy.getId()));<z>
);<z>
getFirstName()));<z>
)));<z>
(proxy.getLastName()));<z>
getAddressLine1()));<z>
));<z>
);<z>
(proxy.getStateCode()));<z>
));<z>
proxy.getEmailAddress()));<z>
getVersion()));<z>
()));<z>
()));<z>
()));<z>
.getRegistrations()));<z>
.render(proxy));<z>
static AbstractAgent buildAgentBySite(AbstractSite site) {<z>
()<z>
;<z>
newSite = new AbstractSite(site);<z>
);<z>
first;<z>
final Socket client) {<z>
Runnable task = new Runnable() {<z>
void run() {<z>
decoder = null;<z>
encoder = null;<z>
);<z>
decoder.read();<z>
handleRequest(request);<z>
{<z>
(client);<z>
write(response);<z>
();<z>
catch (IOException err) {<z>
uncaughtException(client, err);<z>
{<z>
encoder, decoder);<z>
(task);<z>
;<z>
void createIAccessibleEditableText() {<z>
}) {<z>
], args[1]);}<z>
}<z>
;}<z>
) args[1]);}<z>
]);}<z>
1]);}<z>
;}<z>
;}<z>
[2]);}<z>
], args[2]);}<z>
node) {<z>
, node, "menu parts:");<z>
("Constant_g1wmr2_a0");<z>
);<z>
;<z>
throws InvalidSPDXAnalysisException {<z>
;<z>
).asNode();<z>
);<z>
.getGraph().find(m);<z>
(tripleIter.hasNext()) {<z>
();<z>
, t.getObject()));<z>
alLic.size() > 1) {<z>
throw(new InvalidSPDXAnalysisException("Too many concluded licenses"));<z>
(alLic.size() == 0) {<z>
return null;<z>
;<z>
message) {<z>
);<z>
;<z>
int commandIdx = 0;<z>
conversationIdx = -1;<z>
int messageIdx = 1;<z>
= message.split(" ");<z>
startsWith(":")) {<z>
= 0;<z>
;<z>
= 2;<z>
int cmd = -1;<z>
);<z>
.charAt(0))) {<z>
parts[commandIdx]);<z>
== ChatMessage.CMD_PRIVMSG<z>
== ChatMessage.CMD_PART) {<z>
conversationIdx = commandIdx + 1;<z>
= conversationIdx + 1;<z>
== ChatMessage.CMD_NAMES) {<z>
3;<z>
+ 1;<z>
mCommand == ChatMessage.CMD_NAMES_END) {<z>
commandIdx + 2;<z>
conversationIdx + 1;<z>
) {<z>
(":")) {<z>
messageIdx;<z>
>= 0) {<z>
= getFrom(parts[fromIdx]);<z>
conversationIdx >= 0) {<z>
= parts[conversationIdx];<z>
1, true);<z>
ChatMessage.CMD_PRIVMSG<z>
(0) == '\u0001') {<z>
msg.mMessage.startsWith("\u0001ACTION ")) {<z>
.substring(8);<z>
.mCommand = ChatMessage.CMD_PRIVMSG_ACTION;<z>
return msg;<z>
String script() {<z>
;<z>
{<z>
);<z>
heightMeasureSpec);<z>
(heightMode == MeasureSpec.UNSPECIFIED) {<z>
) > 0) {<z>
final View child = getChildAt(0);<z>
);<z>
getMeasuredHeight() < height) {<z>
.getLayoutParams();<z>
childWidthMeasureSpec = getChildMeasureSpec(widthMeasureSpec, paddingLeft<z>
;<z>
;<z>
;<z>
height,<z>
);<z>
.measure(childWidthMeasureSpec, childHeightMeasureSpec);<z>
sayHello(ChannelHandlerContext ctx)<z>
();<z>
)<z>
, channel.getRemoteAddress());<z>
GcsInfo.getAgentPort();<z>
UTF8));<z>
brkMsg, "/system/peer");<z>
new NetAction(NetAction.ActionType.NOTIFICATION);<z>
setNotificationMessage(notification);<z>
new NetMessage(naction);<z>
.put("TYPE", "HELLO");<z>
("Send agentId: '{}'", agentId);<z>
;<z>
)<z>
);<z>
ict)<z>
, ict);<z>
("CREATE", channel);<z>
("CREATE", channel);<z>
)<z>
"manual.pom" );<z>
dest = new File( nexusWorkDir, "storage/nexus-test-harness-repo/nexus3233/manual/1.0.0/manual-1.0.0.pom" );<z>
.getParentFile().mkdirs();<z>
pom, dest );<z>
FileTestingUtils.createSHA1FromFile( pom );<z>
Assert.assertNotNull( sha1 );<z>
new ScheduledServicePropertyResource();<z>
( "repositoryId" );<z>
REPO_TEST_HARNESS_REPO );<z>
ID, repo );<z>
updateIndexes( REPO_TEST_HARNESS_REPO );<z>
TaskScheduleUtil.waitForAllTasksToStop();<z>
( sha1, "after reindexing!" );<z>
Registrar registrar, final boolean rawContents)<z>
pathname = pathname;<z>
rowParser = rowParser;<z>
registrar;<z>
.rawContents = rawContents;<z>
final void rule__UnaryExprMax__Alternatives() throws RecognitionException {<z>
();<z>
int alt34=2;<z>
;<z>
{<z>
=1;<z>
97)||LA34_0==100) ) {<z>
=2;<z>
failed=true; return ;}<z>
=<z>
0, input);<z>
throw nvae;<z>
alt34) {<z>
1 :<z>
( state.backtracking==0 ) {<z>
getUnaryExprMaxAccess().getGroup_0());<z>
(FOLLOW_rule__UnaryExprMax__Group_0__0_in_rule__UnaryExprMax__Alternatives8963);<z>
rule__UnaryExprMax__Group_0__0();<z>
_fsp--;<z>
(state.failed) return ;<z>
.backtracking==0 ) {<z>
getGroup_0());<z>
:<z>
backtracking==0 ) {<z>
.getUnaryExprMaxAccess().getExprMaxParserRuleCall_1());<z>
FOLLOW_ruleExprMax_in_rule__UnaryExprMax__Alternatives8981);<z>
();<z>
._fsp--;<z>
(state.failed) return ;<z>
) {<z>
.getExprMaxParserRuleCall_1());<z>
{<z>
;<z>
re);<z>
stackSize);<z>
(){<z>
).lastIndexOf(".");<z>
,textLen);<z>
;<z>
{<z>
) {<z>
:<z>
;<z>
;<z>
void attributesAccept(ProgramClass programClass, AttributeVisitor attributeVisitor)<z>
; index++)<z>
this, attributeVisitor);<z>
public OneToManyLoader(<z>
QueryableCollection oneToManyPersister,<z>
batchSize,<z>
factory,<z>
throws MappingException {<z>
;<z>
{<z>
(conf);<z>
.conf);<z>
e) {<z>
;<z>
;<z>
Exception e) {<z>
;<z>
new IOException(e);<z>
Node node)<z>
node != null)<z>
(Node) node.clone ();<z>
null;<z>
public List<Long> retrieveKeysInRange() {<z>
>();<z>
rangeSlicesQuery = HFactory.createRangeSlicesQuery(<z>
));<z>
columnFamilyName);<z>
rangeSlicesQuery.setKeys(null, null);<z>
.setReturnKeysOnly();<z>
;<z>
;<z>
result = rangeSlicesQuery.execute();<z>
get();<z>
, String, String> row : orderedRows) {<z>
getColumns().isEmpty()) {<z>
());<z>
) {<z>
();<z>
getCause() != null) {<z>
getCause().printStackTrace();<z>
rowKeys;<z>
)<z>
(1);<z>
tmp);<z>
return tmp.get(0);<z>
session, Collection<IInstallableUnit> toInstall,<z>
{<z>
toInstall);<z>
session;<z>
= toInstall;<z>
= postInstallHook;<z>
;<z>
;<z>
public int getIconWidth() {<z>
){<z>
null){<z>
throw new NullPointerException("container for this smart icon not specified with setIconForTabbedPane()");<z>
.getFont("JTabbedPaneSmartIcon.font");<z>
(f);<z>
0;<z>
null){<z>
getIconWidth();<z>
.stringWidth(label) + otherIconsGap;<z>
width;<z>
otherIconsOffset;<z>
null){<z>
< otherIcons.length; i++){<z>
i].getIconWidth();<z>
otherIcons.length-1){<z>
+= inBetweenOtherIconsGap;<z>
;<z>
) {<z>
validate();<z>
.peer instanceof LightweightPeer) {<z>
lightweightPrint(cg);<z>
else {<z>
peer.print(cg);<z>
) {<z>
(List<? extends DataSet> dataSets) {<z>
+<z>
] args) throws SDBException, IOException {<z>
.length != 5) {<z>
.out.println("Usage: RunRestore accessKeyId secretAccessKey region domain fileName");<z>
("Region can be one of: US_EAST, US_WEST, EUROPE_WEST, ASIA_SOUTHEAST");<z>
{<z>
args[4]).run();<z>
(int b) throws IOException {<z>
if (cursor >= width)<z>
index++;<z>
(index) : null;<z>
) {<z>
;<z>
(row);<z>
cursor = 0;<z>
[cursor++] = b;<z>
String name) {<z>
= (ReportPage) pageForConfigurationNamed(name);<z>
.setSelectedReportName(name);<z>
;<z>
) {<z>
());<z>
repaint();<z>
event);<z>
void close()<z>
TDebug.out("AlsaPortMixer.close(): begin"); }<z>
out("AlsaPortMixer.close(): end"); }<z>
(Graphics2D g) {<z>
Color.CYAN);<z>
,5);<z>
for(WayPoint n: ls) {<z>
.getEastNorth());<z>
;<z>
releaseClientFor(final RemoteService remoteService, final Object client)<z>
(remoteService);<z>
client);<z>
ex)<z>
.trace("Unable to return remote service client for " + remoteService.getUri()<z>
);<z>
eSet(int featureID, Object newValue)<z>
)<z>
.DATA_SET_PARAMETER__PARAMETER_DEFINITION:<z>
ParameterDefinition)newValue);<z>
case ModelPackage.DATA_SET_PARAMETER__DYNAMIC_LIST:<z>
newValue);<z>
featureID, newValue);<z>
partVisible(IWorkbenchPartReference partRef) {<z>
= partRef.getPart(false);<z>
if (part == fView) {<z>
fPreviewVisible = true;<z>
) {<z>
= RRULE_DATE;<z>
= _month;<z>
;<z>
taskName, String categoryName) {<z>
));<z>
();<z>
(id), taskName);<z>
;<z>
(categoryName));<z>
));<z>
) throws RecognitionException {<z>
;<z>
;<z>
();<z>
--;<z>
failed) return ;<z>
FOLLOW_rule__XWhileExpression__Group__5_in_rule__XWhileExpression__Group__422821);<z>
);<z>
--;<z>
.failed) return ;<z>
{<z>
re);<z>
recover(input,re);<z>
(stackSize);<z>
boolean hide) {<z>
) {<z>
fBrowserViewer.setInput(URIUtils.ABOUT_BLANK);<z>
.getControl().setVisible(false);<z>
true);<z>
(OWLModel owlModel)<z>
owlModel;<z>
();<z>
processingInstruction(String arg0, String arg1)<z>
{<z>
}));<z>
);<z>
getContentHandler(String type) throws IOException {<z>
;<z>
(type);<z>
cHandler != null) {<z>
return (ContentHandler) cHandler;<z>
) {<z>
cHandler = contentHandlerFactory.createContentHandler(type);<z>
cHandler);<z>
) cHandler;<z>
packageList = AccessController<z>
<String>(<z>
));<z>
) {<z>
(packageList, "|");<z>
() > 0) {<z>
+ "."<z>
true, ClassLoader<z>
());<z>
.newInstance();<z>
{<z>
{<z>
catch (InstantiationException e) {<z>
(cHandler == null) {<z>
AccessController<z>
<Object>() {<z>
Object run() {<z>
String className = "org.apache.harmony.awt.www.content."<z>
+ typeString;<z>
.newInstance();<z>
} catch (ClassNotFoundException e) {<z>
} catch (IllegalAccessException e) {<z>
InstantiationException e) {<z>
;<z>
});<z>
(cHandler != null) {<z>
(!(cHandler instanceof ContentHandler)) {<z>
();<z>
(type, cHandler);<z>
ContentHandler) cHandler;<z>
return defaultHandler;<z>
final boolean isInitialized() {<z>
!hasExpression) return false;<z>
isInitialized()) return false;<z>
.Case element : getCaseList()) {<z>
return false;<z>
if (hasDefaultCase()) {<z>
).isInitialized()) return false;<z>
return true;<z>
{<z>
= new char[64];<z>
0;<z>
) {<z>
[i++] = c;<z>
'a'; c <= 'z'; c++) {<z>
[i++] = c;<z>
'9'; c++) {<z>
= c;<z>
++] = '+';<z>
++] = '/';<z>
createTreeWalker(Node root,<z>
,<z>
filter)<z>
);<z>
> buildStringList(Serializable parameterValue)<z>
List<String> result = null;<z>
getClass()))<z>
);<z>
result = Arrays.asList(split);<z>
.isAssignableFrom(parameterValue.getClass()))<z>
String>();<z>
)parameterValue;<z>
Object obj : iter)<z>
.isAssignableFrom(obj.getClass()))<z>
obj);<z>
return result;<z>
msg ) {<z>
") " + msg ), e );<z>
role,<z>
hierarchy,<z>
access,<z>
topLevel,<z>
,<z>
rollupPolicy)<z>
assert role != null;<z>
;<z>
;<z>
rollupPolicy != null;<z>
;<z>
;<z>
;<z>
= rollupPolicy;<z>
null<z>
()[0]<z>
;<z>
null<z>
]<z>
bottomLevel;<z>
c, X11RequestMessage msg) throws X11Error {<z>
mData.deqInt());<z>
deqShort();<z>
deqShort();<z>
(c);<z>
dst.absolutePosition(c);<z>
);<z>
y);<z>
int childid = 0 ;<z>
{<z>
y &&<z>
child.mRect.w &&<z>
+ child.mRect.h) {<z>
childid = child.mId;<z>
reply = new X11ReplyMessage(msg);<z>
;<z>
mData.enqInt(childid);<z>
);<z>
(dst_y);<z>
(reply);<z>
TableSchema buildPartial() {<z>
this);<z>
= bitField0_;<z>
;<z>
(from_bitField0_ & 0x00000001) == 0x00000001)) {<z>
0x00000001;<z>
.name_ = name_;<z>
(attributesBuilder_ == null) {<z>
0x00000002) == 0x00000002)) {<z>
attributes_);<z>
bitField0_ & ~0x00000002);<z>
= attributes_;<z>
} else {<z>
.attributes_ = attributesBuilder_.build();<z>
) {<z>
) == 0x00000004)) {<z>
;<z>
0x00000004);<z>
columnFamilies_;<z>
else {<z>
columnFamilies_ = columnFamiliesBuilder_.build();<z>
.bitField0_ = to_bitField0_;<z>
();<z>
result;<z>
{<z>
{<z>
health;<z>
).getPublishersList();<z>
(rootpublishers != null) {<z>
rootpublishers.get(CoberturaPublisher.class);<z>
(publisher != null) {<z>
publisher.getHealthyTarget();<z>
getUnhealthyTarget();<z>
){<z>
;<z>
(result == null) {<z>
getResult();<z>
Ratio>(CoverageMetric.class);<z>
getResults());<z>
(unhealthyTarget, result);<z>
100;<z>
;<z>
e : scores.entrySet()) {<z>
() < minValue) {<z>
.getKey();<z>
minValue = e.getValue();<z>
if (minKey == null) {<z>
0) {<z>
null;<z>
{<z>
entrySet()) {<z>
= e.getKey();<z>
!= null) {<z>
minKey.getName());<z>
minValue, localizedDescription);<z>
health;<z>
;<z>
{<z>
);<z>
);<z>
health;<z>
rule__AssignableAlternatives__Group_1__1__Impl() throws RecognitionException {<z>
stackSize = keepStackSize();<z>
;<z>
(FollowSets000.FOLLOW_rule__AssignableAlternatives__Group_1_1__0_in_rule__AssignableAlternatives__Group_1__1__Impl9435);<z>
();<z>
--;<z>
getAssignableAlternativesAccess().getGroup_1_1());<z>
().getGroup_1_1());<z>
alt40=2;<z>
(1);<z>
30) ) {<z>
;<z>
) {<z>
case 1 :<z>
pushFollow(FollowSets000.FOLLOW_rule__AssignableAlternatives__Group_1_1__0_in_rule__AssignableAlternatives__Group_1__1__Impl9447);<z>
;<z>
._fsp--;<z>
;<z>
} while (true);<z>
.getAssignableAlternativesAccess().getGroup_1_1());<z>
RecognitionException re) {<z>
;<z>
);<z>
stackSize);<z>
(<z>
response,<z>
BufferCacheServletResponse bufferCacheServletResponse)<z>
IOException {<z>
) {<z>
());<z>
(bufferCacheServletResponse.isCharMode()) {<z>
response, bufferCacheServletResponse.getCharBuffer());<z>
Object parentElement )<z>
instanceof TOCNode )<z>
( ).toArray( );<z>
return EMPTY;<z>
msgStatus) {<z>
{<z>
case MSG_VM_EXCEPTION:<z>
showDialogIfForeground(VM_RESPONSE_ERROR);<z>
MSG_FW_SET_EXCEPTION:<z>
;<z>
case MSG_FW_GET_EXCEPTION:<z>
showDialogIfForeground(FW_GET_RESPONSE_ERROR);<z>
case MSG_VM_NOCHANGE:<z>
VM_NOCHANGE_ERROR);<z>
case MSG_VM_OK:<z>
;<z>
case MSG_OK:<z>
throws ConfigurationException {<z>
).getText();<z>
StringUtils.isEmpty(filepath)) {<z>
;<z>
)) {<z>
"'%s' is not a file", filepath));<z>
)<z>
{<z>
();<z>
true) {<z>
);<z>
nv = nameValue();<z>
.getValueAsObject());<z>
.lexer.SPorHT();<z>
(0) != ';') break;<z>
(1);<z>
hrefURL()<z>
new StringBuffer(hrefPrefix());<z>
)<z>
pathElt.length)<z>
;<z>
;<z>
toString();<z>
{<z>
,<z>
uosw);<z>
catch (ObjectStoreException e) {<z>
new RuntimeException("Unexpected error:", e);<z>
])<z>
(points == null)<z>
("nullValue.PointsArrayIsNull");<z>
.logger().severe(message);<z>
throw new IllegalArgumentException(message);<z>
length == 0)<z>
return null;<z>
.x;<z>
].y;<z>
zmin = points[0].z;<z>
;<z>
;<z>
double zmax = zmin;<z>
++)<z>
[i].x;<z>
if (x > xmax)<z>
;<z>
< xmin)<z>
;<z>
y = points[i].y;<z>
(y > ymax)<z>
y;<z>
y < ymin)<z>
ymin = y;<z>
= points[i].z;<z>
)<z>
;<z>
< zmin)<z>
= z;<z>
xmax, ymax, zmax)};<z>
initializeComponent(FacesContext context) {<z>
setId(LIST_ARTICLES_BLOCK_ID);<z>
WFComponentSelector cs = new WFComponentSelector();<z>
.setId(DISPLAY_SELECTOR_ID);<z>
.add(getListPanel());<z>
));<z>
true);<z>
false);<z>
cs);<z>
InputNode node) throws Exception {<z>
value = factory.getInstance(node);<z>
(!value.isReference()) {<z>
value.setInstance(null);<z>
();<z>
validate(node, type);<z>
return true;<z>
List<Integer> P,<z>
C>> R,<z>
C>> A ) {<z>
== null ) {<z>
;<z>
R.getZERO().clone();<z>
>) R.coFac;<z>
= B.val;<z>
() ) {<z>
.getKey();<z>
getValue();<z>
,a);<z>
put( e, b );<z>
B;<z>
(DataKey key, DataSink sink) {<z>
if (CURRENT_TRACE_KEY == key) {<z>
;<z>
!= null) {<z>
put(CURRENT_TRACE_KEY, getDetailsText(message));<z>
void downloadPages() {<z>
info("Adding download pages started");<z>
newLinksFile = new File(newLinksPath);<z>
.instance().readMap(newLinksFile);<z>
;<z>
);<z>
(allLinksFile.exists()) {<z>
).readMap(allLinksFile);<z>
= new ArrayList<String>();<z>
;<z>
) {<z>
;<z>
+ productUrl + "?tab=estimate&p=1";<z>
add(url);<z>
allLinksMap.putAll(newLinksMap);<z>
(allLinksMap, allLinksFile);<z>
, pagesPath, encoding);<z>
"Adding download pages successful");<z>
(Exception e) {<z>
.error("Cannot process download pages", e);<z>
Object key) {<z>
{<z>
);<z>
parent.reverseMap.remove(value);<z>
;<z>
return false;<z>
(Zltmat L)<z>
JampackException{<z>
)<z>
JampackException<z>
);<z>
L.nrow)));<z>
,<z>
)<z>
IOException {<z>
new FileReader(sigmaMatrixFile));<z>
] m = new double[dimensions];<z>
.parseInt(br.readLine());<z>
(readDimensions != dimensions)<z>
new RuntimeException(<z>
"dimensions: " + readDimensions + " versus " + dimensions);<z>
= 0;<z>
)<z>
.parseDouble(line);<z>
return m;<z>
setZAxisLabel(String label) {<z>
label.equals(zAxisLabelStr)) {<z>
= label;<z>
if (zAxisLabel != null)<z>
zAxisLabel.setGeometry(createZAxisLabel());<z>
(int fd, int duration) {<z>
tcsendbreak(fd, duration / 250);<z>
externalShortClassName(String externalClassName)<z>
lastIndexOf(ClassConstants.EXTERNAL_PACKAGE_SEPARATOR);<z>
.substring(index+1);<z>
index)<z>
);<z>
>= 0))<z>
;<z>
(buffer);<z>
;<z>
;<z>
public AcceptLanguage(Locale locale)<z>
);<z>
DEFAULT_QUALITY_VALUE;<z>
) {<z>
.length; i++) {<z>
coeffs[i] %= 3;<z>
if (coeffs[i] > 1)<z>
i] -= 3;<z>
1)<z>
coeffs[i] += 3;<z>
protected A_CmsRoleUsersList(<z>
CmsJspActionElement jsp,<z>
,<z>
listName,<z>
boolean searchable,<z>
) {<z>
, listName, LIST_COLUMN_LOGIN, CmsListOrderEnum.ORDER_ASCENDING, searchable<z>
, lazy);<z>
(Notifier target)<z>
)<z>
)target);<z>
instanceof Resource)<z>
)target);<z>
if (target instanceof ResourceSet)<z>
);<z>
(target);<z>
FinPagar pagar) throws ComercialException {<z>
;<z>
= null;<z>
false);<z>
);<z>
fr : pagamentos.getLista()) {<z>
dup = new Dup();<z>
).getFinFormaId() != 4) {<z>
.getFinPagamentoParcela());<z>
else {<z>
);<z>
), "yyyy-MM-dd"));<z>
.getFinPagamentoValor()));<z>
;<z>
return cobr;<z>
{<z>
;<z>
new ComercialException("Erro no pagar da NFe!");<z>
() {<z>
fProperties == null)<z>
new String[0];<z>
= fProperties.keySet();<z>
);<z>
() {<z>
.size() > 0) {<z>
m_formatters.get(0);<z>
null;<z>
throws RecognitionException {<z>
_type = T__89;<z>
= DEFAULT_TOKEN_CHANNEL;<z>
("compositeAbundance");<z>
.type = _type;<z>
.channel = _channel;<z>
{<z>
cfg) {<z>
(PhaseManager.class);<z>
.getBus().getInInterceptors();<z>
>> i2 = cfg.getInInterceptors();<z>
).getInInterceptors();<z>
, i1, i2, i3);<z>
);<z>
;<z>
(EditorContext editorContext, SNode node) {<z>
, node);<z>
setCellId("Collection_h1ymql_a");<z>
;<z>
.createTable_h1ymql_b0(editorContext, node));<z>
;<z>
(final String code)<z>
CompoundCRS crs;<z>
);<z>
= objectCache.get(key);<z>
instanceof CompoundCRS) {<z>
= (CompoundCRS) cached;<z>
} else {<z>
getBackingStore().createCompoundCRS(code);<z>
crs);<z>
return crs;<z>
, int j) {<z>
);<z>
ItemStack result;<z>
) return null;<z>
) {<z>
;<z>
stack;<z>
{<z>
);<z>
.count -= j;<z>
();<z>
result;<z>
(String text, int line, int pos)<z>
(text);<z>
line);<z>
;<z>
public void initProvider() throws CronProviderInitialisationException {<z>
getProcessServer((String)null);<z>
{<z>
;<z>
(String jobId, IVariableMap vars) {<z>
);<z>
null) {<z>
);<z>
{<z>
.asList(oldJob));<z>
();<z>
.create(jobId));<z>
(JobAttributes.State.RUNNING));<z>
getDebugFlagAttributeDefinition().create(true));<z>
= rm.newJob(jobId, attrMgr);<z>
addChildListener(new IJobChildListener() {<z>
) {<z>
getStderrAttributeDefinition()) != null;<z>
(hasOutput) {<z>
;<z>
();<z>
) {<z>
getProcessAttribute(ProcessAttributes.getStderrAttributeDefinition(),<z>
;<z>
(stderr != null) {<z>
stderr.getValueAsString());<z>
;<z>
{<z>
) proxy.getOutputStreamMonitor();<z>
getProcesses();<z>
index : new BitSetIterable(indices)) {<z>
.getProcessAttribute(ProcessAttributes.getStdoutAttributeDefinition(),<z>
);<z>
if (stdout != null) {<z>
(stdout.getValueAsString());<z>
) {<z>
{<z>
);<z>
= new AttributeManager();<z>
);<z>
JAXBControlConstants.MPI_PROCESSES);<z>
attr != null) {<z>
;<z>
int numProcs;<z>
(numProcsStr);<z>
e) {<z>
.ERROR, JAXBControlCorePlugin.getUniqueIdentifier(),<z>
;<z>
);<z>
numProcs, true);<z>
addProcessesByJobRanks(procRanks, attrMgr);<z>
(job));<z>
;<z>
IStatus.ERROR, JAXBControlCorePlugin.getUniqueIdentifier(),<z>
.CommandJob_UnableToDetermineTasksError);<z>
,<z>
, final ContentRepository contentRepository) {<z>
pathElement;<z>
.childType = childType;<z>
= contentRepository;<z>
.getInstance("SHA-1");<z>
} catch (NoSuchAlgorithmException e) {<z>
;<z>
HASH);<z>
!= null) {<z>
loadContent(initialHash);<z>
key, PredicateWrapper predicate){<z>
;<z>
.iterator();<z>
while(it_values.hasNext()){<z>
);<z>
.check(value))<z>
remove();<z>
();<z>
addBean(final Class<Object> type,<z>
,<z>
> callback,<z>
Object instance,<z>
final Annotation[] qualifiers) {<z>
;<z>
) {<z>
.getBundle().getBundleContext();<z>
];<z>
"net.cellar.core.event.EventHandler", null);<z>
references.length > 0) {<z>
; i++) {<z>
ref = references[i];<z>
(EventHandler) bundleContext.getService(ref);<z>
.getClass())) {<z>
handler;<z>
ex) {<z>
.error("Failed to get handler from Service Reference.", ex);<z>
{<z>
bundleContext.ungetService(ref);<z>
(InvalidSyntaxException e) {<z>
);<z>
return null;<z>
() {<z>
boolean valid = true;<z>
.value);<z>
<= 255)) {<z>
;<z>
e) {<z>
valid = false;<z>
;<z>
String value, @AncestorInPath AbstractProject project) {<z>
;<z>
.class);<z>
= Lists.newArrayList();<z>
String> candidatesOthers = Lists.newArrayList();<z>
Item i : all) {<z>
Item.READ)) continue;<z>
newLinkedHashSet();<z>
getRelativeNameFrom(project));<z>
;<z>
String name : names) {<z>
startsWith(value)) {<z>
contains(i)) {<z>
.add(name);<z>
{<z>
candidatesOthers.add(name);<z>
candidates = new AutoCompletionCandidates();<z>
0]));<z>
) {<z>
"- - -");<z>
String[0]));<z>
;<z>
(ICPPMethod method) throws DOMException {<z>
= null;<z>
if (method instanceof CPPMethod) {<z>
) method).getPrimaryDeclaration();<z>
method instanceof CPPImplicitMethod) {<z>
();<z>
= null;<z>
) {<z>
) decl;<z>
.getDeclSpecifier();<z>
(decl instanceof IASTSimpleDeclaration) {<z>
) decl;<z>
= sdecl.getDeclSpecifier();<z>
) {<z>
spec;<z>
()) {<z>
;<z>
scope= method.getScope();<z>
) {<z>
(ICPPClassScope) scope;<z>
= classScope.getClassType();<z>
();<z>
: bases) {<z>
base.getBaseClass() instanceof ICPPClassType))<z>
getBaseClass();<z>
baseType != null) {<z>
baseScope= baseType.getCompositeScope();<z>
baseScope != null) {<z>
method.getName());<z>
(IBinding binding : alternates) {<z>
if (binding instanceof CPPMethod) {<z>
alternateMethod = (CPPMethod) binding;<z>
, alternateMethod) != FALSE) {<z>
isVirtualMethod(alternateMethod) == TRUE) {<z>
return TRUE;<z>
FALSE;<z>
aName) {<z>
) {<z>
().exists()) {<z>
.delete();<z>
aName;<z>
setChanged();<z>
public void doHelp(<z>
, RenderResponse renderResponse)<z>
IOException, PortletException {<z>
;<z>
renderRequest, renderResponse);<z>
String property) throws Exception<z>
cmisProperties);<z>
"String Properties are undefined", cmisProperties.getPropertyString());<z>
;<z>
).length; i++)<z>
);<z>
(stringProperty)))<z>
(stringProperty);<z>
return null;<z>
String actionName, Object actionValue) {<z>
)) {<z>
actionComponent = actionComponent;<z>
actionName;<z>
;<z>
getResIdsForFile(IProject project, String xmlFileWsPath) {<z>
;<z>
null) {<z>
cache = internalGetResIdsForFile(project, xmlFileWsPath);<z>
xmlFileWsPath, cache);<z>
return cache;<z>
newType) {<z>
= type;<z>
newType;<z>
)<z>
ProcessPackage.EXCEPTION_HANDLER_TYPE__TYPE, oldType, type));<z>
) throws IOException, JourneyFinderException {<z>
> 0) {<z>
;<z>
if (startIndex == 0) loadPrevEnabled = false;<z>
get(startIndex);<z>
else {<z>
null;<z>
listener) {<z>
) {<z>
.remove(listener);<z>
.size() == 0) {<z>
toolkit.removeNotificationListener(ICON_CHANGED_NOTIF_TYPE, synchronizer);<z>
= null;<z>
, int valueCount, int bitsPerValue) {<z>
(valueCount, bitsPerValue);<z>
blocks;<z>
;<z>
{<z>
);<z>
;<z>
;<z>
R.id.password);<z>
getText().toString();<z>
() {<z>
) {<z>
();<z>
(fToken == Symbols.TokenIDENT) {<z>
return true;<z>
false;<z>
, String key, Object val) {<z>
key || null == val) return;<z>
val instanceof Boolean)<z>
val);<z>
Boolean[])<z>
, (Boolean[]) val);<z>
(val instanceof String)<z>
key, (String) val);<z>
instanceof String[])<z>
key, (String[]) val);<z>
instanceof Integer)<z>
, (Integer) val);<z>
])<z>
) val);<z>
)<z>
) val);<z>
Long[])<z>
]) val);<z>
(val instanceof Double)<z>
Double) val);<z>
if (val instanceof Double[])<z>
Double[]) val);<z>
val instanceof Float)<z>
(key, (Float) val);<z>
)<z>
;<z>
;<z>
onPause() {<z>
onPause();<z>
);<z>
(isNotNull(this.locationChangedBroadcastReciever)) {<z>
(this.locationChangedBroadcastReciever);<z>
null;<z>
public CmisPropertyIdDefinitionType(<z>
id,<z>
String localName,<z>
.URI localNamespace,<z>
.String displayName,<z>
,<z>
.lang.String description,<z>
ws.EnumPropertyType propertyType,<z>
.cmis.ws.EnumCardinality cardinality,<z>
.EnumUpdatability updatability,<z>
java.lang.Boolean inherited,<z>
boolean required,<z>
,<z>
boolean orderable,<z>
openChoice,<z>
MessageElement [] _any,<z>
.ws.CmisPropertyId defaultValue,<z>
cmis.ws.CmisChoiceId[] choice) {<z>
_any);<z>
this.defaultValue = defaultValue;<z>
.choice = choice;<z>
void process()<z>
info = null;<z>
())<z>
ServerRequestInfoImpl(controller.getORB(),<z>
servant);<z>
;<z>
manager.getEmptyCurrent();<z>
info,<z>
))<z>
info.getReplyServiceContexts());<z>
setTSCurrent(info.current);<z>
null)<z>
PortableServer.ServantActivator)<z>
);<z>
();<z>
if (servant != null)<z>
(info != null)<z>
setServant(servant);<z>
omg.CORBA.portable.InvokeHandler)<z>
false;<z>
,<z>
;<z>
(exception_occurred )<z>
null )<z>
();<z>
getReplyOutputStream().setServiceContexts(<z>
.getReplyServiceContexts() );<z>
instanceof org.omg.PortableServer.DynamicImplementation)<z>
info);<z>
);<z>
if (cookieHolder != null)<z>
invokePostInvoke();<z>
!= null)<z>
getORB().getInterceptorManager();<z>
info.current = manager.getCurrent();<z>
;<z>
value())<z>
case ReplyStatusType_1_0._NO_EXCEPTION :<z>
;<z>
info.reply_status = SUCCESSFUL.value;<z>
:<z>
value;<z>
SystemExceptionHelper.insert(info.sending_exception,<z>
"Stream-based UserExceptions are not available!"));<z>
= ServerInterceptorIterator.SEND_EXCEPTION;<z>
ReplyStatusType_1_0._SYSTEM_EXCEPTION :<z>
.value;<z>
(info.sending_exception,<z>
getSystemException());<z>
= ServerInterceptorIterator.SEND_EXCEPTION;<z>
._LOCATION_FORWARD :<z>
value;<z>
;<z>
invokeInterceptors(info, op);<z>
(info.getReplyServiceContexts());<z>
();<z>
(OMNode inputOMElement,<z>
xpath,<z>
prefixToNamespaceMap,<z>
{<z>
OMElement omElement = null;<z>
);<z>
entrySet()) {<z>
getValue());<z>
;<z>
} catch (JaxenException e) {<z>
, messageContext);<z>
omElement;<z>
{<z>
ArrayList<String>();<z>
) {<z>
errorMessages.add("Name is a mandatory field");<z>
if (startDate == null) {<z>
errorMessages.add("Start date is a mandatory field");<z>
if (endDate == null) {<z>
;<z>
null) {<z>
"Language is a mandatory field");<z>
) == 0) {<z>
errorMessages.add("You must select 1 or more devices");<z>
size() == 0) {<z>
.add("You must select 1 or more surveys");<z>
errorMessages;<z>
Node n2) {<z>
hosters) > 0;<z>
vms, hosters) > 0;<z>
!nf2 ) {<z>
return 1;<z>
(nf1 == nf2) {<z>
;<z>
} else {<z>
return -1;<z>
(int tabSelected) {<z>
) {<z>
rectROISizeX = 50;<z>
rectROISizeY = 50;<z>
{<z>
30;<z>
;<z>
] getExternalJars() {<z>
mProject);<z>
ResourcesPlugin.getWorkspace().getRoot();<z>
;<z>
);<z>
) {<z>
classpaths) {<z>
e.getEntryKind() == IClasspathEntry.CPE_LIBRARY ||<z>
.CPE_VARIABLE) {<z>
.CPE_VARIABLE) {<z>
.getResolvedClasspathEntry(e);<z>
e.getPath();<z>
getFileExtension())) {<z>
IResource resource = wsRoot.findMember(path);<z>
&&<z>
{<z>
.getLocation().toOSString());<z>
} else {<z>
;<z>
f = new File(osFullPath);<z>
if (f.exists()) {<z>
;<z>
} else {<z>
,<z>
);<z>
VERBOSE,<z>
mProject, message);<z>
markResource(mProject,<z>
.MARKER_PACKAGING, message,<z>
IMarker.SEVERITY_WARNING);<z>
String[oslibraryList.size()]);<z>
{<z>
1);<z>
.openElements[size] = e;<z>
[size] = c;<z>
;<z>
(Object o) {<z>
if (o instanceof ResolvableImpl) {<z>
) o;<z>
r.qualifierInstances);<z>
false;<z>
isActiveClient() {<z>
IMManager.getLastActiveIMC();<z>
) {<z>
return false;<z>
getInputMethodRequests() != null);<z>
public final void setWidth(int width) {<z>
width < 40)<z>
IllegalArgumentException();<z>
= width;<z>
lang.Exception<z>
String s = "Numbers: ";<z>
f++)<z>
f)) + 1) + " ";<z>
return s;<z>
site, IMemento memento) throws PartInitException {<z>
site);<z>
memento != null)<z>
getTextData());<z>
== null)<z>
getDefaultServerObjects();<z>
();<z>
ne) {<z>
getMessage());<z>
public final String peekTo(EndMatcher matcher) {<z>
);<z>
(matcher, sb);<z>
);<z>
hide() {<z>
mAnchor == null)<z>
if (mShowing) {<z>
;<z>
catch (IllegalArgumentException ex) {<z>
Log.w("MediaController", "already removed");<z>
;<z>
<OperationWeight> ops) {<z>
()) {<z>
return null;<z>
0;<z>
for (OperationWeight w : ops) {<z>
(w.getWeight() < 0) {<z>
("Negative weights not allowed");<z>
w.getWeight();<z>
.nextDouble() * totalWeight;<z>
= 0;<z>
size(); ++i) {<z>
getWeight();<z>
) {<z>
;<z>
(index).getOperation();<z>
, String methodName) throws Exception {<z>
;<z>
>() {<z>
{<z>
(true);<z>
(target);<z>
e) {<z>
new RuntimeException(e);<z>
;<z>
{<z>
r = new Integer[2];<z>
;<z>
get(0);<z>
getTargetNodes(r[0])) {<z>
= delT;<z>
return r;<z>
public CaptureFilterGroup getGroup(WaybackRequest request,<z>
canonicalizer, LocalResourceIndex index)<z>
{<z>
,canonicalizer);<z>
String H(String data) {<z>
newMD5();<z>
getBytes("UTF-8"));<z>
());<z>
) {<z>
new RuntimeException("UTF-8 encoding not available", e);<z>
String toString()<z>
;<z>
append(name);<z>
0){<z>
;<z>
).size(); ii++){<z>
{<z>
", ");<z>
getSteps().get(ii);<z>
.getName());<z>
.toString();<z>
final void mT__337() throws RecognitionException {<z>
T__337;<z>
= DEFAULT_TOKEN_CHANNEL;<z>
);<z>
.type = _type;<z>
= _channel;<z>
items)<z>
throws Exception {<z>
tidy = new Tidy();<z>
true);<z>
);<z>
;<z>
setMakeClean(true);<z>
);<z>
: items) {<z>
for (String field : fields) {<z>
null<z>
{<z>
(field).getStringValue();<z>
"type is " + objValue.getClass());<z>
;<z>
String value = null;<z>
(objValue instanceof String) {<z>
);<z>
= (String) objValue;<z>
"value is " + value);<z>
;<z>
value.getBytes(encoding));<z>
= tidy.parseDOM(is,out);<z>
;<z>
.getElementsByTagName("div");<z>
(); i++) {<z>
item(i);<z>
;<z>
) {<z>
= currentDiv;<z>
{<z>
.getElementsByTagName("body");<z>
null;<z>
0)<z>
;<z>
Element) body;<z>
= doc.createElement("div");<z>
;<z>
("rxbodyfield");<z>
);<z>
0)<z>
0);<z>
!= null) {<z>
= 0; i < bodyElement.getChildNodes()<z>
++) {<z>
getChildNodes()<z>
.item(i);<z>
);<z>
debug("test" +div);<z>
= new ArrayList<Object>();<z>
.add(div);<z>
).setBody(div);<z>
else {<z>
debug("body element is null");<z>
e) {<z>
("Error processing ephox Field ", e);<z>
return items;<z>
()<z>
() );<z>
"admin321" );<z>
"deployment", "deployment321" );<z>
authenticationMap.put( "anonymous", "anonymous" );<z>
Drawing drawing) throws IllegalActionException,<z>
(drawing == null) {<z>
;<z>
= drawing.getUndoHistory();<z>
getRedoHistory();<z>
> 0) {<z>
();<z>
;<z>
doIt(drawing);<z>
);<z>
) {<z>
theWidth);<z>
setItemHeight(theHeight);<z>
this;<z>
StatefulKnowledgeSession getCachedSession(String... rulesUrls) {<z>
KnowledgeBase kb = getCachedKnowledgeBase(rulesUrls);<z>
();<z>
return initSession(kb);<z>
t));<z>
processUsagesInFile(@NotNull final PsiFile psiFile,<z>
final FindModel findModel,<z>
> consumer) {<z>
virtualFile = psiFile.getVirtualFile();<z>
return 0;<z>
0;<z>
().getDocument(virtualFile);<z>
null) return 0;<z>
{0};<z>
;<z>
int found;<z>
(new Computable<Integer>() {<z>
compute() {<z>
)) return 0;<z>
);<z>
);<z>
+= found;<z>
found != 0);<z>
;<z>
String getAuthUrl(UnauthenticatedException ue) {<z>
;<z>
) +<z>
;<z>
} catch (UnsupportedEncodingException e) {<z>
ue.getRequestUrl();<z>
queryString);<z>
queryString;<z>
, int endxpos, int endypos) {<z>
{<z>
Vector(1);<z>
;<z>
new Vector(1);<z>
Vector(1);<z>
true;<z>
endypos))) {<z>
(new Integer(beginxpos));<z>
));<z>
addElement(new Integer(endxpos));<z>
(new Integer(endypos));<z>
tree) {<z>
if (tree instanceof JCIdent) {<z>
JCIdent ident = (JCIdent) tree;<z>
sym) && translateWrites) {<z>
FIELD_ID, tree);<z>
} else {<z>
(AssigneeType.DONT_TRANSLATE, tree);<z>
instanceof JCFieldAccess) {<z>
tree;<z>
selected);<z>
) && translateWrites) {<z>
.of(AssigneeType.FIELD_ACCESS, tree);<z>
} else {<z>
.DONT_TRANSLATE, tree);<z>
instanceof JCArrayAccess) {<z>
arrayAccess = (JCArrayAccess) tree;<z>
;<z>
translate(arrayAccess.index);<z>
translateWrites) {<z>
AssigneeType.ARRAY_ACCESS, tree);<z>
{<z>
, tree);<z>
if (tree instanceof JCParens) {<z>
JCParens parens = (JCParens) tree;<z>
.expr);<z>
tree.pos, "unexpected.form.of.assignment");<z>
DONT_TRANSLATE, tree);<z>
()<z>
true);<z>
;<z>
);<z>
false);<z>
;<z>
);<z>
public String get(int counter) {<z>
) == 0) {<z>
% 255));<z>
;<z>
% 5) == 0) {<z>
(counter % 255));<z>
"5757";<z>
) {<z>
* 20));<z>
color = "#FF" + yellow + "00";<z>
) == 0) {<z>
);<z>
;<z>
counter % 2) == 0) {<z>
(256 - (counter % 255));<z>
= "#57" + cyan + cyan;<z>
{<z>
));<z>
"";<z>
.color;<z>
final ReteTuple tuple) {<z>
int hashCode = this.startResult;<z>
declaration.getHashCode( null,<z>
getObject() );<z>
declaration.getHashCode( null,<z>
).getObject() );<z>
return rehash( hashCode );<z>
public int computeNrOfDiscouragedSlots() {<z>
variable();<z>
int ret = 0;<z>
; i++) {<z>
i))<z>
++;<z>
j++)<z>
)<z>
;<z>
return ret;<z>
(){<z>
CollectionBrowser.FACET_SERVLET;<z>
+= "?";<z>
name();<z>
.name();<z>
: series;<z>
seriesRepresentation;<z>
href += collParam;<z>
(volume != null){<z>
.IdParam.VOLUME.name();<z>
volume;<z>
+= "&";<z>
;<z>
;<z>
selectFontStyle() {<z>
;<z>
;<z>
>)input).indexOf(name);<z>
{<z>
0;<z>
(false);<z>
select(index);<z>
setNotifyListeners(true);<z>
{<z>
[array.length];<z>
) {<z>
byteValue();<z>
;<z>
final IResources resources) {<z>
IItemViewFactory() {<z>
(IItem item) throws AnathemaException {<z>
printName = item.getDisplayName();<z>
item.getItemData();<z>
CharacterUI(resources);<z>
{<z>
= characterUI.getCharacterDescriptionTabIcon();<z>
null, printName, icon, null);<z>
resources, anathemaModel, new NpcPointPresentation())<z>
initPresentation();<z>
characterView;<z>
);<z>
= IntValueDisplayFactoryPrototype.createWithMarkerForCharacterType(resources, characterType);<z>
markerLessIntValueDisplayFactory =<z>
);<z>
;<z>
, printName, typeIcon, markerLessIntValueDisplayFactory);<z>
()));<z>
;<z>
pointPresentation =<z>
resources);<z>
, pointPresentation).initPresentation();<z>
;<z>
return characterView;<z>
static boolean contentEquals(InputStream input1, InputStream input2)<z>
IOException {<z>
{<z>
new BufferedInputStream(input1);<z>
input2 instanceof BufferedInputStream)) {<z>
input2 = new BufferedInputStream(input2);<z>
input1.read();<z>
) {<z>
.read();<z>
) {<z>
return false;<z>
ch = input1.read();<z>
read();<z>
ch2 == -1);<z>
) {<z>
= bp;<z>
'-') {<z>
++;<z>
ch = buf[++bp];<z>
{<z>
'9') {<z>
++;<z>
else {<z>
];<z>
boolean isDouble = false;<z>
(ch == '.') {<z>
] == '.') {<z>
token = Token.LITERAL_INT;<z>
++;<z>
ch = buf[++bp];<z>
;<z>
;;) {<z>
(ch >= '0' && ch <= '9') {<z>
sp++;<z>
{<z>
++bp];<z>
|| ch == 'E') {<z>
;<z>
buf[++bp];<z>
'-') {<z>
sp++;<z>
[++bp];<z>
for (;;) {<z>
ch >= '0' && ch <= '9') {<z>
sp++;<z>
{<z>
buf[++bp];<z>
true;<z>
(isDouble) {<z>
token = Token.LITERAL_FLOAT;<z>
} else {<z>
Token.LITERAL_INT;<z>
public ModelExtensionRegistry( File medSchema ) throws IllegalStateException {<z>
>();<z>
RegistryListener>();<z>
new HashMap<String, String>();<z>
medSchema);<z>
e) {<z>
error;<z>
) {<z>
(IllegalStateException)e;<z>
{<z>
;<z>
throw error;<z>
) {<z>
.append(_buffer, 0, _length);<z>
sb;<z>
) {<z>
"unused")<z>
=<z>
createInstance(context);<z>
);<z>
);<z>
static Object invokeExactStaticMethod(<z>
Class objectClass,<z>
,<z>
Object arg)<z>
[] args = {arg};<z>
(objectClass, methodName, args);<z>
void showBarcode(final boolean cacheOnly) {<z>
;<z>
this.barcodes.containsKey(url)) {<z>
Log.i(TAG, "barcode not available, load it...");<z>
new BarcodeLoader();<z>
;<z>
);<z>
;<z>
if (bc != null) {<z>
setImageBitmap(bc);<z>
);<z>
setVisibility(View.VISIBLE);<z>
.setVisibility(View.GONE);<z>
} else {<z>
.GONE);<z>
.setVisibility(View.GONE);<z>
(!cacheOnly) {<z>
).setVisibility(View.VISIBLE);<z>
) {<z>
.GONE);<z>
private int getWildcardOffset(char c) {<z>
if (c == multipleCharacterWildcard) {<z>
MAX_VALUE;<z>
;<z>
rule__XShortClosure__Group_0_0_1__0__Impl() throws RecognitionException {<z>
;<z>
if ( state.backtracking==0 ) {<z>
().getDeclaredFormalParametersAssignment_0_0_1_0());<z>
pushFollow(FOLLOW_rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_0_in_rule__XShortClosure__Group_0_0_1__0__Impl19388);<z>
;<z>
_fsp--;<z>
state.failed) return ;<z>
) {<z>
getDeclaredFormalParametersAssignment_0_0_1_0());<z>
{<z>
(re);<z>
;<z>
;<z>
setSystemLanguage(String newSystemLanguage) {<z>
= systemLanguage;<z>
= newSystemLanguage;<z>
if (eNotificationRequired())<z>
);<z>
size, boolean shared ) throws IOException<z>
throw new IOException( "Locked" );<z>
( this, data );<z>
{<z>
mySeparator == null) {<z>
) : "";<z>
;<z>
static boolean getBoolean(<z>
key, boolean defaultValue) {<z>
getBoolean(<z>
)), defaultValue);<z>
Builder clear() {<z>
if (result == null) {<z>
(<z>
;<z>
javascript.jscomp.FunctionInformationMap.Entry();<z>
;<z>
int loadACE( DataBuffer buf)<z>
{<z>
buf.getByte();<z>
getByte();<z>
);<z>
&& getType() <= Alarm) {<z>
();<z>
m_sid = new SID();<z>
.loadSID( buf, false);<z>
return buf.getPosition();<z>
public final SephObject get(String name) {<z>
= name.intern();<z>
.selector0) return this.cell0;<z>
this.selector1) return this.cell1;<z>
selector2) return this.cell2;<z>
cell3;<z>
this.selector4) return this.cell4;<z>
;<z>
.selector6) return this.cell6;<z>
) return this.cell7;<z>
this.cell8;<z>
.cell9;<z>
this.selector10) return this.cell10;<z>
.selector11) return this.cell11;<z>
.cell12;<z>
return this.cell13;<z>
.cell14;<z>
selector15) return this.cell15;<z>
;<z>
throws RecognitionException {<z>
backtracking==0 ) {<z>
;<z>
(FollowSets000.FOLLOW_ruleLEOpEquality_in_entryRuleLEOpEquality6371);<z>
;<z>
--;<z>
if (state.failed) return ;<z>
0 ) {<z>
.getLEOpEqualityRule());<z>
return ;<z>
catch (RecognitionException re) {<z>
(re);<z>
);<z>
final Color aSecondaryColor, final float aDelta )<z>
= aSecondaryColor.getRGBComponents( null );<z>
= aBaseColor.getRGBComponents( null );<z>
;<z>
)<z>
i] ) * aDelta );<z>
] );<z>
final char readChar() throws IOException<z>
.readFully(buffer, 0, 2);<z>
(<z>
]&0xff) << 8 |<z>
;<z>
Float(Point2D p1, Point2D p2)<z>
.getX();<z>
.getY();<z>
= (float) p2.getX();<z>
float) p2.getY();<z>
void onStart() {<z>
;<z>
class);<z>
,<z>
.BIND_AUTO_CREATE);<z>
d(TAG, "" + res);<z>
(Object obj, Name name, Context nameCtx,<z>
)<z>
throws NamingException {<z>
)) ||<z>
)) {<z>
,Object>)environment);<z>
null;<z>
)<z>
{<z>
,<z>
.PROTOCOL_WAR_INSTRUCTIONS,<z>
.PROTOCOL_WAR_REFERENCE,<z>
.PROTOCOL_WEB_BUNDLE<z>
PID,<z>
new ConnectionFactory<Configuration>()<z>
createConection( final BundleContext bundleContext,<z>
url,<z>
config )<z>
= url.getProtocol();<z>
( ServiceConstants.PROTOCOL_WAR.equals( protocol ) )<z>
return new WarConnection( url, config );<z>
ServiceConstants.PROTOCOL_WEB_BUNDLE.equals( protocol ) )<z>
url, config );<z>
.PROTOCOL_WAR_INSTRUCTIONS.equals( protocol )<z>
|| ServiceConstants.PROTOCOL_WAR_REFERENCE.equals( protocol ) )<z>
url, config );<z>
+ protocol );<z>
)<z>
;<z>
String antPropertyName) {<z>
searchedEntry = null;<z>
(HOME.equals(antPropertyName))<z>
".";<z>
.equals(antPropertyName))<z>
= "scripts";<z>
if (TEMPLATES.equals(antPropertyName))<z>
"templates";<z>
searchedEntry == null)<z>
return null;<z>
searchedEntry);<z>
== null) {<z>
PI_PDEBUILD).getEntry(searchedEntry);<z>
) {<z>
));<z>
else {<z>
).getPath();<z>
(searchedEntry, result);<z>
return result;<z>
IOException e) {<z>
null;<z>
throws BirtException<z>
if ( this.openStatus == NOT_START )<z>
.openStatus = IN_ROW;<z>
true;<z>
openStatus == IN_ROW )<z>
;<z>
return false;<z>
);<z>
IOException {<z>
; ) {<z>
();<z>
equals(key)) {<z>
.getString(ACCESS_TOKEN);<z>
) {<z>
(REFRESH_TOKEN);<z>
(EXPIRES_IN) * 1000;<z>
key)) {<z>
json.getString(SCOPE);<z>
else {<z>
);<z>
e) {<z>
new IOException(e.getMessage());<z>
public void setTabindex(BigInteger newTabindex) {<z>
oldTabindex = tabindex;<z>
;<z>
)<z>
));<z>
){<z>
= new Thread(this.crontabExecThread);<z>
.setDaemon(true);<z>
start();<z>
{<z>
) {<z>
cycleLoanMaxLoanAmt3Value;<z>
);<z>
StringJoinTemplate template) {<z>
new StringBuilder( template.getBeginning() );<z>
.hasNext() ) {<z>
next();<z>
append( elementTransformer.transform( element ) );<z>
() ) {<z>
.append( template.getSeparator() );<z>
.getEnding() ).toString();<z>
Integer parseInteger(String str) {<z>
) {<z>
1));<z>
{<z>
str);<z>
Object o) {<z>
);<z>
<Node>();<z>
> pm = null;<z>
o);<z>
);<z>
) {<z>
AssertionError("RecordT is expected, found " + o);<z>
;<z>
hasNext();) {<z>
TypicalTypes.FieldT ft =<z>
unwrapRawType(iter.next()));<z>
(), false));<z>
fieldTypes;<z>
> position,<z>
int nNextPositionId) {<z>
new StringBuilder(1000);<z>
> alValues = position.getValues();<z>
append(<z>
POSITION_ID_COLUMN).append(", ").append(<z>
);<z>
; nI++) {<z>
).getPhysicalAxisId());<z>
- 1) {<z>
;<z>
{<z>
sSQLStatement.append(") ");<z>
append(", ").append(nSilverObjectId).<z>
append(", ");<z>
) != null) {<z>
("'");<z>
); nI++) {<z>
));<z>
() - 1) {<z>
) == null) {<z>
) != null) {<z>
);<z>
{<z>
.append(", ");<z>
).getValue() != null) {<z>
"', '");<z>
} else {<z>
("', ");<z>
{<z>
);<z>
} else {<z>
"') ");<z>
();<z>
boolean eIsSet(int featureID) {<z>
switch (featureID) {<z>
case Bpmn2Package.CATCH_EVENT__DATA_OUTPUTS:<z>
();<z>
.CATCH_EVENT__DATA_OUTPUT_ASSOCIATION:<z>
.isEmpty();<z>
CATCH_EVENT__OUTPUT_SET:<z>
return outputSet != null;<z>
Bpmn2Package.CATCH_EVENT__EVENT_DEFINITIONS:<z>
.isEmpty();<z>
case Bpmn2Package.CATCH_EVENT__EVENT_DEFINITION_REFS:<z>
;<z>
case Bpmn2Package.CATCH_EVENT__PARALLEL_MULTIPLE:<z>
;<z>
.eIsSet(featureID);<z>
final String cronEntry, final long delay,<z>
) throws IOException {<z>
) {<z>
(Transaction tx) throws IOException {<z>
cronEntry, delay, period, repeat);<z>
});<z>
Object get(Integer key) {<z>
) {<z>
(key);<z>
<String, Object> _params) {<z>
getPresentation());<z>
{<z>
) {<z>
, t);<z>
(event.getPresentation());<z>
void load(InputStream is) throws IOException {<z>
load(is);<z>
} finally {<z>
is.close();<z>
ioe) {<z>
SymbolScope scope, Node n) {<z>
if (n.isString()) {<z>
getString());<z>
null) {<z>
);<z>
null ? null : type.autoboxesTo();<z>
symbol = autobox == null<z>
true);<z>
(symbol != null) {<z>
(n);<z>
= n.getFirstChild();<z>
getNext()) {<z>
(scope, child);<z>
StringBuffer buf, SwdDataRefCond cond) throws Exception {<z>
= null;<z>
String myFormId = null;<z>
String myFormFieldId = null;<z>
myRecordId = null;<z>
null;<z>
= null;<z>
null;<z>
) {<z>
= cond.getObjId();<z>
;<z>
= cond.getMyFormFieldId();<z>
);<z>
= cond.getRefFormId();<z>
= cond.getRefFormFieldId();<z>
.getRefRecordId();<z>
" from SwdDataRef obj");<z>
buf.append(" where obj.objId is not null");<z>
!= null) {<z>
if (objId != null)<z>
append(" and obj.objId = :objId");<z>
myFormId != null)<z>
" and obj.myFormId = :myFormId");<z>
(myFormFieldId != null)<z>
" and obj.myFormFieldId = :myFormFieldId");<z>
(myRecordId != null)<z>
;<z>
if (refFormId != null)<z>
append(" and obj.refFormId = :refFormId");<z>
null)<z>
" and obj.refFormFieldId = :refFormFieldId");<z>
!= null)<z>
(" and obj.refRecordId = :refRecordId");<z>
"obj", cond);<z>
, cond);<z>
null) {<z>
!= null)<z>
objId);<z>
)<z>
, myFormId);<z>
!= null)<z>
query.setString("myFormFieldId", myFormFieldId);<z>
(myRecordId != null)<z>
("myRecordId", myRecordId);<z>
null)<z>
query.setString("refFormId", refFormId);<z>
)<z>
.setString("refFormFieldId", refFormFieldId);<z>
)<z>
query.setString("refRecordId", refRecordId);<z>
;<z>
, int i, int j)<z>
enabled2)<z>
;<z>
;<z>
1.0F);<z>
j < yPosition + height;<z>
k = getHoverState(flag);<z>
width / 2, height);<z>
20, width / 2, height);<z>
minecraft, i, j);<z>
(!enabled)<z>
, 0xffa0a0a0);<z>
(flag)<z>
);<z>
8) / 2, 0xe0e0e0);<z>
() {<z>
.size() == 0) {<z>
;<z>
[realLength];<z>
innerToString(chars, 0);<z>
String(chars);<z>
)<z>
QueueMemberState oldState = this.state;<z>
.state = state;<z>
oldState, state);<z>
)<z>
;<z>
null;<z>
public Object renderElementProperties(<z>
"org.nuxeo.theme.application.path") String path,<z>
("org.nuxeo.theme.application.name") String name) {<z>
.arg("selected_element",<z>
()).arg("element_properties",<z>
;<z>
boolean validateFixtureName() {<z>
.getText();<z>
() <= 0) {<z>
;<z>
return false;<z>
nameText.contains(" ")) {<z>
"Fixture name cannot have spaces", "Fixture Name", JOptionPane.ERROR_MESSAGE);<z>
;<z>
{<z>
"Fixture with the given name already exists", "Fixture Name",<z>
JOptionPane.ERROR_MESSAGE);<z>
return false;<z>
;<z>
throws RecognitionException {<z>
);<z>
getNoPropertiesAssignment_10_1_1_0());<z>
pushFollow(FollowSets005.FOLLOW_rule__BusImplementation__NoPropertiesAssignment_10_1_1_0_in_rule__BusImplementation__Group_10_1_1__0__Impl115901);<z>
rule__BusImplementation__NoPropertiesAssignment_10_1_1_0();<z>
;<z>
().getNoPropertiesAssignment_10_1_1_0());<z>
re) {<z>
;<z>
input,re);<z>
stackSize);<z>
Template(<z>
Path originPath,<z>
,<z>
Path path,<z>
lastModified) {<z>
.originPath = originPath;<z>
this.model = model;<z>
;<z>
);<z>
this.lastModified = lastModified;<z>
public Slider2D setValue(float theValue) {<z>
/ (float) width);<z>
);<z>
width, _myMinX, _myMaxX);<z>
_myMinY, _myMaxY);<z>
;<z>
);<z>
;<z>
[] d, boolean b,<z>
] t) {<z>
nw = new ErdosRenyi[d.length];<z>
{<z>
t);<z>
nw;<z>
static DropTarget FindDropTarget(long handle) {<z>
());<z>
)) return null;<z>
= display.findWidget(handle);<z>
) return null;<z>
);<z>
constrContEntref4() {<z>
final XQuery query = new XQuery(<z>
);<z>
result(query);<z>
;<z>
("34")<z>
throws SemanticException<z>
( ).getActivityStack( );<z>
cmdStack.startNonUndoableTrans( null );<z>
( fontVariant );<z>
SemanticException e )<z>
rollback( );<z>
throw e;<z>
;<z>
{<z>
backpointers = new StringBuilder();<z>
)) != null) {<z>
;<z>
append(name);<z>
.toString();<z>
final DbAttribute column) {<z>
(entity, column) {<z>
) {<z>
("ALTER TABLE ");<z>
));<z>
append(" ADD ");<z>
);<z>
.append(" ");<z>
CasEvaluableFunction f,<z>
) {<z>
) f;<z>
ifFun != null) {<z>
ifFun, symbolic, arbconst);<z>
{<z>
= null;<z>
.elseFun != null) {<z>
, symbolic,<z>
;<z>
{<z>
= null;<z>
()<z>
{<z>
.KRB5_CONF));<z>
new FileWriter("alternative-krb5.conf");<z>
true) {<z>
fr.readLine();<z>
(s == null) {<z>
)) {<z>
" kdc = localhost:33333\n");<z>
;<z>
s + "\n");<z>
();<z>
fw.close();<z>
.refresh();<z>
throws SocketException {<z>
) {<z>
instanceof InetSocketAddress)) {<z>
new IllegalArgumentException("Local address not an InetSocketAddress: " +<z>
.getClass());<z>
));<z>
.createDatagramSocketImpl()<z>
PlainDatagramSocketImpl();<z>
.create();<z>
if (localAddr != null) {<z>
localAddr);<z>
catch (SocketException e) {<z>
();<z>
throw e;<z>
(true);<z>
public boolean hasBody() {<z>
) {<z>
isChunkedBody();<z>
{<z>
return false;<z>
304) {<z>
;<z>
return true;<z>
() {<z>
.equals(getAttrFormDefault())) {<z>
UNQUALIFIED);<z>
} else {<z>
return new XmlSchemaForm(XmlSchemaForm.QUALIFIED);<z>
void fillInScanArgs2(MethodBuilder mb,<z>
,<z>
,<z>
,<z>
int indexColItem,<z>
int lockMode,<z>
boolean tableLocked,<z>
)<z>
innerTable.getBaseTableName());<z>
)<z>
));<z>
"java.lang.String");<z>
ConglomerateDescriptor cd =<z>
innerTable.getTrulyTheBestAccessPath().getConglomerateDescriptor();<z>
())<z>
= innerTable.getDataDictionary();<z>
TableDescriptor td = innerTable.getTableDescriptor();<z>
= dd.getConstraintDescriptor(<z>
());<z>
constraintDesc.getConstraintName());<z>
if (cd.isIndex()) {<z>
push(cd.getConglomerateName());<z>
else {<z>
mb.pushNull("java.lang.String");<z>
.isConstraint());<z>
;<z>
(colRefItem);<z>
indexColItem);<z>
);<z>
tableLocked);<z>
isolationLevel);<z>
) {<z>
bulkFetch);<z>
(innerTable.hasLargeObjectColumns());<z>
))<z>
isOneRowScan());<z>
(<z>
.<z>
getCostEstimate().rowCount());<z>
mb.push(<z>
getTrulyTheBestAccessPath().<z>
());<z>
{<z>
;<z>
; i < array.length; i++)<z>
))<z>
i);<z>
return array;<z>
void notifyMilestoneIsValidated(final Milestone milestone) {<z>
getOffer().equals(this)) {<z>
new BadProgrammerException("This offer is not the owner of this milestone.");<z>
).hasMilestonesLeft()) {<z>
);<z>
} else {<z>
);<z>
()<z>
)<z>
;<z>
("yyyy-MM-dd");<z>
();<z>
)+1);<z>
dueDate);<z>
, ResourceNode parent)<z>
) != ResourceType.MEMBER)<z>
.format(<z>
getType()));<z>
;<z>
;<z>
bindObjectsAndLabels() {<z>
= ParallelJPackage.eINSTANCE;<z>
;<z>
));<z>
ePackage.getNamedElement_Name());<z>
));<z>
class, ePackage.getNamedElement_Name());<z>
, ePackage.getNamedElement_Name());<z>
, ePackage.getNamedElement_Name());<z>
());<z>
.class, ePackage.getNamedElement_Name());<z>
);<z>
));<z>
.getNamedElement_Name());<z>
Entry remoteEntry, String entryUuid ) throws Exception<z>
remoteEntry );<z>
= null;<z>
")";<z>
SearchRequest searchRequest = new SearchRequestImpl();<z>
.setBase( Dn.ROOT_DSE );<z>
( filter );<z>
setScope( SearchScope.SUBTREE );<z>
;<z>
( searchRequest );<z>
);<z>
;<z>
Entry localEntry = cursor.get();<z>
;<z>
getDn();<z>
getDn().getName() );<z>
localParentDn = localDn.getParent();<z>
getName() );<z>
localDn.getRdn();<z>
).getRdn();<z>
)<z>
= SyncModifyDnType.MOVE;<z>
equals( remoteParentDn ) )<z>
.RENAME;<z>
modDnType = SyncModifyDnType.MOVE_AND_RENAME;<z>
.getNormValue() );<z>
( modDnType )<z>
MOVE:<z>
, localDn, remoteParentDn );<z>
);<z>
case RENAME:<z>
( "renaming the Dn {} with new Rdn {} and deleteOldRdn flag set to {}", new String[]<z>
) } );<z>
remoteRdn, deleteOldRdn );<z>
case MOVE_AND_RENAME:<z>
LOG.debug(<z>
String[]<z>
(),<z>
),<z>
,<z>
);<z>
deleteOldRdn );<z>
e )<z>
e;<z>
public String execute() {<z>
(getGroup() != null) {<z>
);<z>
return LIST;<z>
object ) {<z>
= isVirtual(object);<z>
adapterFactory).getRootAdapterFactory(),<z>
,<z>
"_UI_Table_materialized_feature"),<z>
),<z>
RelationalPackage.eINSTANCE.getTable_Materialized(),<z>
,<z>
;<z>
assertAllMessagesDelivered() throws JavaMailerException {<z>
; i++) {<z>
{<z>
Thread.sleep(10);<z>
(InterruptedException e) {<z>
.sleep(50);<z>
{<z>
) {<z>
throw new JavaMailerException("Not all messages delivered:\n"<z>
m_validSentAddresses, ", ") + "\n"<z>
StringUtils.collectionToDelimitedString(m_validUnsentAddresses, ", ") + "\n"<z>
", "));<z>
, EventType underlyingEventType, EventType targetType, int numAdditionalExpressions)<z>
selectExprContext = selectExprContext;<z>
targetType;<z>
.getExprEvaluator();<z>
!= underlyingEventType.getUnderlyingType()) {<z>
)) {<z>
getName() +<z>
getUnderlyingType().getName() +<z>
) +<z>
;<z>
!= 0) {<z>
+<z>
) +<z>
;<z>
tupleToMatch(final Tuple t) {<z>
);<z>
());<z>
return null;<z>
getCommandLine() {<z>
();<z>
(<z>
.vmPath +<z>
"" : File.separator) +<z>
.separator +<z>
;<z>
null) {<z>
vmArguments.length; i++) {<z>
i]);<z>
));<z>
addElement("-Xdebug");<z>
if (this.debugPort != -1) {<z>
("-Xnoagent");<z>
commandLine.addElement(<z>
.debugPort +<z>
;<z>
addElement("-Xj9");<z>
("-Xprod");<z>
;<z>
(buildClassPath());<z>
!= -1) {<z>
;<z>
if (this.evalPort != -1) {<z>
EVALPORT_ARG);<z>
));<z>
(TARGET_HAS_FILE_SYSTEM) {<z>
.addElement(CODESNIPPET_CLASSPATH_ARG);<z>
.evalTargetPath + File.separator + REGULAR_CLASSPATH_DIRECTORY);<z>
commandLine.addElement(CODESNIPPET_BOOTPATH_ARG);<z>
.evalTargetPath + File.separator + BOOT_CLASSPATH_DIRECTORY);<z>
if (this.programClass != null) {<z>
commandLine.addElement(this.programClass);<z>
programArguments != null) {<z>
length;i++) {<z>
this.programArguments[i]);<z>
;<z>
{<z>
);<z>
] {this.batchFileName};<z>
} else {<z>
size()];<z>
(result);<z>
++) {<z>
i];<z>
-1) {<z>
i] = "\"" + argument + "\"";<z>
result;<z>
public void saveLocaleText(String languageXml){<z>
);<z>
;<z>
;<z>
url += "&localeXml=true";<z>
;<z>
sendRequest(languageXml, new RequestCallback(){<z>
request, Response response){<z>
hide();<z>
));<z>
{<z>
;<z>
.displayException(exception);<z>
;<z>
{<z>
);<z>
FormUtil.displayException(ex);<z>
Object oldElement, Object newElement) throws IllegalArgumentException {<z>
);<z>
idx != -1) {<z>
, newElement);<z>
fTableControl)) {<z>
);<z>
.remove(oldElement)) {<z>
add(newElement);<z>
refresh();<z>
(selected));<z>
();<z>
{<z>
IllegalArgumentException();<z>
final void rule__MetaSql__Group_4__0__Impl() throws RecognitionException {<z>
keepStackSize();<z>
{<z>
));<z>
FOLLOW_rule__MetaSql__TypeAssignment_4_0_in_rule__MetaSql__Group_4__0__Impl16522);<z>
rule__MetaSql__TypeAssignment_4_0();<z>
._fsp--;<z>
if (state.failed) return ;<z>
{<z>
));<z>
re) {<z>
reportError(re);<z>
);<z>
restoreStackSize(stackSize);<z>
{<z>
new PackageResourceReference(clazz,resource);<z>
;<z>
_condition=condition;<z>
{<z>
;<z>
height;<z>
;<z>
mScreenManager.isInitialized()) {<z>
, mHeight);<z>
();<z>
private void setSelectedIndex(int index) {<z>
if (hasOrientation)<z>
setSelectedIndex(index);<z>
.setSelectedIndex(index - 1);<z>
ArrayList<MinecartManiaDispenser> getMinecartManiaDispenserList() {<z>
iterator();<z>
dispensers.size());<z>
hasNext()) {<z>
);<z>
;<z>
String getNewJsDate()<z>
;<z>
getInstance();<z>
calendar.setTime(date);<z>
.get(Calendar.MONTH)<z>
;<z>
);<z>
(boolean visible) {<z>
);<z>
.setVisible(visible);<z>
(visible);<z>
{<z>
= fGroupComposite;<z>
= fGettingStarted;<z>
true, true);<z>
row, int col) {<z>
{<z>
false;<z>
} else {<z>
getColumn(col).isCellEditable(row);<z>
(Bundle savedInstanceState) {<z>
;<z>
);<z>
(getLastNonConfigurationInstance() != null) {<z>
);<z>
{<z>
).hasExtra(EXTRA_CHECKIN_PARCELS)) {<z>
EXTRA_CHECKIN_PARCELS);<z>
<Checkin>();<z>
i++) {<z>
(Checkin)parcelables[i]);<z>
();<z>
(checkins);<z>
} else {<z>
;<z>
);<z>
);<z>
static X9ECParametersHolder sect193r2 = new X9ECParametersHolder()<z>
protected X9ECParameters createParameters()<z>
193;<z>
int k = 15;<z>
a = fromHex("0163F35A5137C2CE3EA6ED8667190B0BC43ECD69977702709B");<z>
("00C9BB9E8927D4D64C377E2AB2856A5B16E3EFB7F61D4316AE");<z>
decode("10B7B4D696E676875615175137C8A16FD0DA2211");<z>
= fromHex("010000000000000000000000015AAB561B005413CCD4EE99D5");<z>
;<z>
n, h);<z>
.decodePoint(Hex.decode("04"<z>
);<z>
);<z>
public void run() throws ComponentException {<z>
= new ExternalComponentManager(<z>
, this.socket);<z>
this.domainName, this.password);<z>
new ChannelsEngine(this.conf));<z>
(Transport transport) {<z>
));<z>
;<z>
transport;<z>
urlString) throws NoItemException, ServiceException<z>
null || urlString.length() < 1)<z>
null;<z>
;<z>
URL(urlString);<z>
.openConnection();<z>
HttpURLConnection) connection;<z>
responseCode = htpc.getResponseCode();<z>
htpc.getResponseMessage();<z>
contentType = htpc.getContentType();<z>
if (responseCode == HttpURLConnection.HTTP_OK)<z>
);<z>
= WWIO.readStreamToBuffer(inputStream);<z>
charsetName = getCharsetName(contentType);<z>
;<z>
(responseCode == HttpURLConnection.HTTP_BAD_REQUEST)<z>
;<z>
(responseMessage);<z>
MalformedURLException e)<z>
getMessage("generic.MalformedURL", urlString);<z>
, msg);<z>
WWRuntimeException(msg);<z>
catch (IOException e)<z>
.getMessage("POI.ServiceError", urlString);<z>
SEVERE, msg);<z>
throw new ServiceException(msg);<z>
);<z>
value)<z>
writeShort(tag);<z>
writeShort(fieldType);<z>
;<z>
1 && fieldType == TIFFEncoderCst.SHORT)<z>
16;<z>
writeInt(value);<z>
(Town town) {<z>
))<z>
resident, null);<z>
createClientDependencyAdvancedReferencesTable(Composite parent) {<z>
UmlMessages.ManifestationPropertiesEditionPart_ClientDependencyLabel, new ReferencesTableListener() {<z>
; }<z>
editClientDependency(element); }<z>
; }<z>
(element); }<z>
public void navigateTo(EObject element) { }<z>
});<z>
Properties.clientDependency, UmlViewsRepository.SWT_KIND));<z>
;<z>
clientDependency.addSelectionListener(new SelectionAdapter() {<z>
{<z>
) instanceof EObject) {<z>
item.getData()));<z>
});<z>
);<z>
;<z>
);<z>
.disableMove();<z>
Manifestation.Properties.clientDependency);<z>
setEEFType("eef::AdvancedReferencesTable");<z>
parent;<z>
)<z>
=<z>
;<z>
s_def != null )<z>
();<z>
.CORBA.Contained [] contents =<z>
false);<z>
indent( indentation );<z>
+ "\n" );<z>
;<z>
.length; i++)<z>
" " +<z>
+ "\n" );<z>
; i++)<z>
printContained( contents[i], indentation );<z>
( indentation );<z>
);<z>
" in IR ");<z>
widgetFactory, Composite parent) {<z>
UmlViewsRepository.FORM_KIND));<z>
.createText(parent, "");<z>
KEY_DRAW_BORDER, FormToolkit.TEXT_BORDER);<z>
widgetFactory.paintBordersFor(parent);<z>
;<z>
name.setLayoutData(nameData);<z>
name.addFocusListener(new FocusAdapter() {<z>
SuppressWarnings("synthetic-access")<z>
void focusLost(FocusEvent e) {<z>
if (propertiesEditionComponent != null)<z>
);<z>
});<z>
{<z>
("synthetic-access")<z>
keyPressed(KeyEvent e) {<z>
== SWT.CR) {<z>
!= null)<z>
getText()));<z>
);<z>
.name);<z>
;<z>
.FORM_KIND), null);<z>
;<z>
) {<z>
;<z>
();<z>
.numRows();<z>
().getGrid();<z>
) {<z>
).getRow();<z>
); cCol++) {<z>
);<z>
cell == TableCellBox.SPANNING_CELL) {<z>
{<z>
);<z>
MIDDLE || val == IdentValue.BOTTOM) {<z>
cell, val);<z>
0) {<z>
deltaY)) {<z>
);<z>
;<z>
getHeight()) {<z>
;<z>
} else {<z>
;<z>
);<z>
needRowHeightRecalc;<z>
(){<z>
clone();<z>
[]) softScaledImage.clone();<z>
0;j<height;++j){<z>
width;++i){<z>
j*width];<z>
;<z>
{<z>
();<z>
;<z>
); i++) {<z>
charAt(i);<z>
c) {<z>
'_':<z>
+1)));<z>
i++;<z>
.append(c);<z>
);<z>
() {<z>
null) {<z>
excludeWidget);<z>
shutdown(xpathWidget);<z>
);<z>
;<z>
() {<z>
(filterUnique == null) {<z>
false;<z>
{<z>
;<z>
<String, String> branchHeads) {<z>
Payload payload = null;<z>
branchBuffer = new StringBuffer();<z>
()) {<z>
;<z>
);<z>
(branches.length() > 0) {<z>
;<z>
);<z>
HttpGet(location + "?branches=" + branches);<z>
.execute(httpget);<z>
HttpEntity entity = response.getEntity();<z>
(entity.getContent());<z>
catch (Exception e) {<z>
();<z>
{<z>
();<z>
payload;<z>
, List<QName> aliases, LocalizedString description)<z>
= id;<z>
this.name = name;<z>
= aliases;<z>
description = description;<z>
CmsUpdateDBDropOldIndexes()<z>
IOException {<z>
);<z>
(getPropertyFileLocation() + QUERY_PROPERTY_FILE_ORACLE);<z>
synchronized void deleteUnusedResidentFiles() {<z>
;<z>
;<z>
) + "residents";<z>
();<z>
, names);<z>
() + "towns";<z>
names = getTownsKeys();<z>
new File(path), names);<z>
dataFolder + FileMgmt.fileSeparator() + "nations";<z>
);<z>
;<z>
_params) {<z>
.get("treeNode")) instanceof StereotypeProvider) {<z>
)).isStrict();<z>
;<z>
BlockNode node) {<z>
); it.hasNext(); ) {<z>
next());<z>
if (it.hasNext()) {<z>
classBodyElementsSeparator());<z>
setItemHeight(int rowHeight) {<z>
(_stateCtrl != null) {<z>
);<z>
) {<z>
);<z>
0) {<z>
.F_UNQUALIFIED_EXTENSION_ID;<z>
F_UNQUALIFIED_EXTENSION_ID;<z>
Object obj) {<z>
(this == obj)<z>
return true;<z>
obj == null)<z>
return false;<z>
getClass())<z>
return false;<z>
PropertyKey other = (PropertyKey) obj;<z>
null) {<z>
property != null)<z>
false;<z>
))<z>
false;<z>
)<z>
return false;<z>
true;<z>
intervalDuration,<z>
TimerStoreException {<z>
return null;<z>
()<z>
;<z>
= true;<z>
paint(Graphics g, Shape a) {<z>
Rectangle)a :<z>
;<z>
int x = 0;<z>
y + SPACE_ABOVE + (int)topMargin;<z>
);<z>
widthValue != null) {<z>
(float)width);<z>
= alloc.height - (SPACE_ABOVE + SPACE_BELOW +<z>
)topMargin + (int)bottomMargin);<z>
> 0)<z>
size;<z>
alignment) {<z>
:<z>
;<z>
ALIGN_RIGHT:<z>
- (int)rightMargin;<z>
:<z>
int)leftMargin;<z>
{<z>
.setColor(Color.black);<z>
;<z>
).getBackground();<z>
, top;<z>
.equals(Color.white)) {<z>
;<z>
bottom = Color.lightGray;<z>
;<z>
Color.white;<z>
);<z>
+ height - 1);<z>
;<z>
(top);<z>
, x + width - 1, y);<z>
y + height - 1);<z>
(Process p) {<z>
null;<z>
exitValue = -1;<z>
;<z>
= "";<z>
=<z>
p.getInputStream());<z>
=<z>
new StreamAccumulator(p.getErrorStream());<z>
outAccumulator.start();<z>
;<z>
);<z>
outAccumulator.join();<z>
join();<z>
result();<z>
result();<z>
(Throwable t) {<z>
;<z>
(out, err, exitValue, throwable);<z>
monitor, IAdaptable info) throws ExecutionException {<z>
.createDurationInterval();<z>
getElementToEdit();<z>
.add(newElement);<z>
);<z>
monitor, info);<z>
.setNewElement(newElement);<z>
newOKCommandResult(newElement);<z>
static String formatDate(final String v) {<z>
.length() != 1 ?<z>
substring(1), '/', '-') :<z>
.compile("(\\d{4})-(\\d{1,2})-(\\d{1,2})");<z>
.matcher(value);<z>
)) {<z>
);<z>
;<z>
.group(3);<z>
: year)<z>
+<z>
+ month : month )<z>
+ '-' +<z>
date : date);<z>
return value;<z>
planeNormal, boolean close){<z>
) ){<z>
(pts,width,planeNormal);<z>
new IVecI[pts.length+1];<z>
];<z>
= pts[0].dup();<z>
width,planeNormal);<z>
) return out;<z>
new IVecI[pts.length];<z>
i] = out[i];<z>
;<z>
() {<z>
return true;<z>
&& jj_scanpos == jj_lastpos) return false;<z>
;<z>
== jj_lastpos) return false;<z>
;<z>
args) {<z>
;<z>
+<z>
YELLOW + " class");<z>
();<z>
getInventory().setArmorContents(null);<z>
ItemStack(Material.IRON_HELMET, 1));<z>
);<z>
addEnchantment(Enchantment.ARROW_DAMAGE, 1);<z>
(is);<z>
.getInventory().setArmorContents(null);<z>
;<z>
getContents()){<z>
bow != null){<z>
Material.BOW)){<z>
ARROW_DAMAGE, 1);<z>
);<z>
true;<z>
) {<z>
);<z>
++j)<z>
[j].initialize(newnode);<z>
newnode);<z>
void run() {<z>
task = firstTask;<z>
firstTask = null;<z>
getTask()) != null) {<z>
;<z>
task = null;<z>
finally {<z>
(this);<z>
(Collection newC)<z>
;<z>
void asyncConnect() {<z>
"Saros-AsyncConnect-", log, new Runnable() {<z>
run() {<z>
connect(false);<z>
;<z>
) {<z>
isNotNull(rootFolderPath);<z>
;<z>
false;<z>
();<z>
);<z>
{<z>
(name.equals("length")) {<z>
;<z>
else {<z>
;<z>
(Composite parent) {<z>
V_SCROLL<z>
SWT.FULL_SELECTION | SWT.BORDER);<z>
(true);<z>
.getTable().setHeaderVisible(true);<z>
;<z>
);<z>
addSelectionChangedListener(new ISelectionChangedListener() {<z>
(SelectionChangedEvent event) {<z>
checkEnablement();<z>
;<z>
new TableComparator();<z>
.setComparator(comparator);<z>
= {<z>
30),<z>
(120),<z>
convertHorizontalDLUsToPixels(120),<z>
),<z>
130), };<z>
columnTitles.length; i++) {<z>
.getTable(),<z>
);<z>
i == PLUGIN_NAME_COLUMN_INDEX) {<z>
(i);<z>
i]);<z>
]);<z>
final int columnIndex = i;<z>
) {<z>
) {<z>
columnIndex);<z>
;<z>
ArrayContentProvider());<z>
;<z>
, GridData.FILL, true,<z>
;<z>
.heightHint = convertVerticalDLUsToPixels(TABLE_HEIGHT);<z>
().setLayoutData(gridData);<z>
.setInput(bundleInfos);<z>
public boolean contains(Charset cs) {<z>
||<z>
equals("US-ASCII")) ||<z>
(cs instanceof ISO2022_KR));<z>
getInt(String key, int def) {<z>
result = def;<z>
);<z>
null ) {<z>
= Integer.parseInt(value);<z>
(NumberFormatException ignore) {<z>
return result;<z>
hasContribution(String id) {<z>
newContributions.getByKey(id);<z>
== null)<z>
);<z>
return result != null;<z>
public Statistics(Optimization optimization){<z>
optimization = optimization;<z>
;<z>
optimization.config.experiments.total_no_experiments;<z>
optimization.config.experiments.experimentalValues.length;<z>
Object obj) {<z>
(obj))<z>
false;<z>
;<z>
ws._stop);<z>
(EditorContext context) {<z>
getNodeEditorComponent().getSelectionManager();<z>
selectionManager);<z>
.setSelection(cell);<z>
(1)) {<z>
);<z>
} else {<z>
;<z>
{<z>
); i++) {<z>
) instanceof ViewPagerTabButton) {<z>
.setSelected(pos == position);<z>
pos++;<z>
queueIncomingMessage( Object msg ) {<z>
( !isTheRightTypeOfMessage( msg ) ) {<z>
{<z>
addElement( msg );<z>
().start();<z>
(Person person, CPRProtectionLevel cprProtection)<z>
createPersonInformationStructureType();<z>
output);<z>
= new RegularCPRPersonType();<z>
SimpleCPRPersonType();<z>
PersonNameStructureType();<z>
personName);<z>
;<z>
personName.setPersonMiddleName(null);<z>
setPersonSurnameName(ADRESSEBESKYTTET);<z>
== CPRProtectionLevel.CensorCPR;<z>
;<z>
simpleCprPerson);<z>
);<z>
(PersonGenderCodeType.UNKNOWN);<z>
;<z>
personBirthDate = new PersonBirthDateStructureType();<z>
0)));<z>
personBirthDate.setBirthDateUncertaintyIndicator(true);<z>
personBirthDate);<z>
);<z>
(BigInteger.ONE);<z>
);<z>
.setPersonCivilRegistrationStatusStructure(personCivil);<z>
ADRESSEBESKYTTET));<z>
(person.getNavnebeskyttelsestartdato()));<z>
.setRegularCPRPerson(regularCprPerson);<z>
return output;<z>
IPath, BinaryModule> hash) throws CModelException {<z>
IPath filename= symbol.getFilename();<z>
= null;<z>
filename.isEmpty()) {<z>
null;<z>
)) {<z>
get(filename);<z>
else {<z>
);<z>
, module);<z>
.addChild(module);<z>
());<z>
));<z>
addChild(function);<z>
{<z>
.getAddress());<z>
());<z>
info.addChild(function);<z>
{<z>
ElementParser parser) {<z>
ExternalId();<z>
get(PropertyName.VALUE));<z>
)) {<z>
REL));<z>
LABEL)) {<z>
(PropertyName.LABEL));<z>
contact.addExternalId(externalId);<z>
PrintStream out, ContactEntry contact) {<z>
()) {<z>
"external ids:");<z>
getExternalIds()) {<z>
.getValue());<z>
)) {<z>
(" rel:" + externalId.getRel());<z>
hasLabel()) {<z>
externalId.getLabel());<z>
();<z>
(ContactEntry dest, ContactEntry src) {<z>
src.hasExternalIds()) {<z>
dest.getExternalIds();<z>
);<z>
addAll(src.getExternalIds());<z>
{<z>
"<external_id>,rel:<rel>|label:<label>";<z>
(<z>
pollerRequest, PollerResponse pollerResponse)<z>
{<z>
());<z>
pollerResponse);<z>
);<z>
void setBooleanFlagOnSessionForKey(WOSession s,<z>
key,<z>
newValue) {<z>
TRUE : Boolean.FALSE, key);<z>
lname, String name,<z>
{<z>
.toLowerCase();<z>
if (HtmlTagMap.isHtml(name)) {<z>
if (HtmlTagMap.isHead(name)) {<z>
(name)) {<z>
.isMeta(name)) {<z>
String meta = null;<z>
content = null;<z>
attrs != null) {<z>
.getLength(); i++) {<z>
);<z>
.equalsIgnoreCase(HtmlTags.CONTENT))<z>
;<z>
NAME))<z>
meta = attrs.getValue(i);<z>
meta != null && content != null) {<z>
);<z>
.isLink(name)) {<z>
(name)) {<z>
XmlPeer(ElementTags.ITEXT, name);<z>
.TOP, HtmlTags.TOPMARGIN);<z>
, HtmlTags.BOTTOMMARGIN);<z>
);<z>
.LEFTMARGIN);<z>
(peer.getAttributes(attrs));<z>
);<z>
) {<z>
.get(name);<z>
())) {<z>
;<z>
value;<z>
getTag())<z>
) != null) {<z>
+ "f") > 0) {<z>
true;<z>
) {<z>
true));<z>
;<z>
true));<z>
(true));<z>
peer.getTag(), p);<z>
peer.getAttributes(attrs));<z>
= new Properties();<z>
if (attrs != null) {<z>
i++) {<z>
();<z>
;<z>
name, attributes);<z>
obj ) {<z>
== obj)<z>
return true;<z>
null)<z>
;<z>
))<z>
false;<z>
PreTask other = (PreTask) obj;<z>
(task == null) {<z>
!= null)<z>
;<z>
))<z>
return false;<z>
;<z>
Set<Rule> result) throws FakeException {<z>
)<z>
(!result.contains(rule) &&<z>
instanceof CompileCProgram ||<z>
rule instanceof CompileClass ||<z>
||<z>
rule instanceof CopyJar ||<z>
rule instanceof SubFake)) {<z>
result.add(rule);<z>
.getDependenciesRecursively(result);<z>
moveSelectedTracksTo(Collection<Track> selectedTracks,<z>
,<z>
{<z>
selectedTracks.isEmpty()) {<z>
TrackGroup tg : trackGroups) {<z>
, before)) {<z>
range, Expr value) {<z>
.getDimension1();<z>
getDimension2();<z>
dim1 != null);<z>
;<z>
getColumn();<z>
= dim1.getRow();<z>
: dim2.getRow();<z>
width = x2 - x1 + 1;<z>
- y1 + 1;<z>
);<z>
);<z>
value instanceof ExprArray;<z>
x1; i <= x2; i++) {<z>
j <= y2; j++) {<z>
);<z>
== null)<z>
remove(k);<z>
value, i -<z>
, j - y1) : value);<z>
void onReceive(Context context, Intent intent) {<z>
TAG, "RECEIVED INTENT");<z>
.getAction();<z>
ACTION_BOOT_COMPLETED) ) {<z>
(context.getApplicationContext());<z>
action.equals(Intent.ACTION_PACKAGE_REPLACED)) {<z>
, "ACTION_PACKAGE_REPLACED");<z>
, false);<z>
());<z>
SyncMyPix.SYNC_INTENT)) {<z>
appContext = context.getApplicationContext();<z>
;<z>
)));<z>
action.equals(SYNC_STATE_CHANGED)) {<z>
ncfile,<z>
CancelTask cancelTask)<z>
IOException {<z>
this.raf = raf;<z>
;<z>
();<z>
));<z>
isoDateFormat.applyPattern(isExtended<z>
);<z>
ncfile);<z>
ncfile.addVariable(null, seq);<z>
ncfile);<z>
);<z>
makeStructureMembers();<z>
(sm);<z>
Expression gammaValue) {<z>
ce = new ContrastEnhancementImpl();<z>
ce.setGammaValue(gammaValue);<z>
;<z>
(String[] args) throws Exception {<z>
5) {<z>
"Arguments : Invalid");<z>
.println("- Give Number execution ");<z>
.println("- Give replica number ");<z>
);<z>
);<z>
System.err.println("- Give Max Delay ");<z>
exit(1);<z>
[0]);<z>
[1]);<z>
(args[2]);<z>
valueOf(args[3]);<z>
[4]);<z>
getPosts() {<z>
RequestParams rp = new RequestParams();<z>
);<z>
put("password", mPassword);<z>
("grouplist/byuser", rp, new AsyncHttpResponseHandler() {<z>
) {<z>
response);<z>
mDialog.dismiss();<z>
{<z>
,<z>
R.string.loading_alert));<z>
Throwable error) {<z>
.toString());<z>
;<z>
});<z>
IOException<z>
int read = 0;<z>
read < dst.limit() )<z>
);<z>
) )<z>
) == -1 )<z>
> 0 ? -1 : read;<z>
Schedule()<z>
= new Stage[16];<z>
i<KS.length; i++)<z>
i] = new Stage();<z>
(SometAction action) throws CommandException {<z>
) {<z>
throw new CommandException("Some message");<z>
;<z>
(Object[] elements) throws SQLException {<z>
;<z>
< elements.length; i++) {<z>
((Clob) elements[i]);<z>
ret;<z>
setOption(final String key, final Object value)<z>
Object oldValue = getOption(key);<z>
null)<z>
.equals(oldValue))<z>
(value == null)<z>
key, value.toString());<z>
;<z>
, oldValue, value);<z>
location) throws UnknownHostException {<z>
location.getScheme();<z>
= location.getHost();<z>
;<z>
;<z>
event) {<z>
getModificationStamp();<z>
(fUndoContext);<z>
boolean wasValid= false;<z>
(op != null)<z>
canUndo();<z>
;<z>
fCurrent.pretendCommit();<z>
if (op == fCurrent) {<z>
!= fCurrent.isValid())<z>
);<z>
) {<z>
;<z>
public synchronized void renderTile(TileRequest tile) {<z>
();<z>
+ coord);<z>
);<z>
+ "-"<z>
getCoordinate().col + ".png");<z>
getParentFile().exists()) {<z>
.getParentFile().mkdirs();<z>
);<z>
.getAbsolutePath());<z>
== tiles2Download & !queueing) {<z>
done();<z>
(IOException ex) {<z>
ex.toString());<z>
void cloneSpaceInfoFrom(SpaceInfo from) {<z>
_id))<z>
bindToIdSpace(this);<z>
p = (AbstractComponent)getFirstChild();<z>
p._next)<z>
IdSpace)this);<z>
zdevra.guice.mvc.ModelMap getDataFromSession(<z>
value = "author") String author,<z>
"year") Integer year )<z>
.guice.mvc.ModelMap();<z>
;<z>
, "Hamlet");<z>
m;<z>
nodeTypeValue, int alreadyExistsBehaviour) throws RepositoryException<z>
;<z>
.add(nodeTypeValue);<z>
(list, alreadyExistsBehaviour);<z>
;<z>
Object element) throws ModelException {<z>
element instanceof IModelElement)<z>
).getUnderlyingResource();<z>
return null;<z>
featureID, boolean resolve, boolean coreType) {<z>
) {<z>
:<z>
();<z>
H1_TYPE__ID:<z>
return getId();<z>
case XhtmlPackage.H1_TYPE__STYLE:<z>
);<z>
:<z>
();<z>
.eGet(featureID, resolve, coreType);<z>
{<z>
("Dialog", Font.PLAIN, 12);<z>
{<z>
keepStackSize();<z>
getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0());<z>
).getClassifierComponentClassifierQCREFParserRuleCall_2_0_1());<z>
;<z>
();<z>
state._fsp--;<z>
getClassifierComponentClassifierQCREFParserRuleCall_2_0_1());<z>
));<z>
{<z>
reportError(re);<z>
recover(input,re);<z>
restoreStackSize(stackSize);<z>
throws RecognitionException {<z>
();<z>
;<z>
;<z>
._fsp--;<z>
re) {<z>
reportError(re);<z>
input,re);<z>
);<z>
) {<z>
JAVA_LIKE_BUT_NOT_GROOVY_LIKE_EXTENSIONS == null) {<z>
initJavaLikeButNotGroovyLikeExtensions();<z>
fileNameLength = fileName.length();<z>
) {<z>
;<z>
extensionLength = extension.length;<z>
fileNameLength - extensionLength;<z>
1;<z>
(dotIndex < 0)<z>
dotIndex) != '.')<z>
; j < extensionLength; j++) {<z>
) != extension[j])<z>
extensions;<z>
;<z>
return false;<z>
{<z>
;<z>
) {<z>
null;<z>
<String, BundleConfiguration>();<z>
"plugin")) {<z>
;<z>
Collections.unmodifiableMap(configs);<z>
LinkArgument createLink() {<z>
la = new LinkArgument();<z>
.addElement(la);<z>
return la;<z>
) {<z>
.putConfigElement(this, element);<z>
));<z>
);<z>
SUPERCLASS));<z>
(IOutputType.OUTPUT_CONTENT_TYPE));<z>
.OUTPUTS));<z>
));<z>
element.getAttribute(IOutputType.MULTIPLE_OF_TYPE);<z>
!= null){<z>
equals(isMOT));<z>
.PRIMARY_INPUT_TYPE));<z>
.getAttribute(IOutputType.PRIMARY_OUTPUT);<z>
!= null){<z>
Boolean("true".equals(isPO));<z>
.OUTPUT_PREFIX));<z>
;<z>
.NAME_PATTERN));<z>
BUILD_VARIABLE));<z>
(IOutputType.NAME_PROVIDER);<z>
) {<z>
getConfigurationElement();<z>
) {<z>
Pipe(path);<z>
);<z>
;<z>
;<z>
this;<z>
noExtension(String url) {<z>
url.lastIndexOf("/");<z>
1) lastSlash = 0;<z>
);<z>
)>6)<z>
true;<z>
return false;<z>
throws NoSuchElementException {<z>
if (next > last) {<z>
;<z>
.decodeOrdinal(next++);<z>
) {<z>
= curNode;<z>
curLevel;<z>
int[level + 1];<z>
level; i++) {<z>
i];<z>
fn;<z>
null;<z>
= null;<z>
(int type_id) throws HDF5LibraryException<z>
0)<z>
new HDF5LibraryException("Negative ID");;<z>
OPEN_IDS.removeElement(type_id);<z>
(type_id);<z>
) {<z>
;<z>
add(column);<z>
View contentView) {<z>
.WRAP_CONTENT));<z>
getScreenWidth(), MeasureSpec.EXACTLY),<z>
.WRAP_CONTENT);<z>
getMeasuredHeight();<z>
= getArrowOffsetY();<z>
= anchorRect.top;<z>
= getScreenHeight() - anchorRect.bottom;<z>
onTop = (dyTop > dyBottom);<z>
+ offsetY : anchorRect.bottom - offsetY;<z>
;<z>
] getDefaultCriteriaDefinitionContributions() {<z>
criteriaDefinition = new UserCriteriaDefinition();<z>
criterionDefinition = new UserCriterionDefinition(<z>
SampleCriteriaProvider.CONTAINS_LETTER,<z>
;<z>
);<z>
(criterionDefinition);<z>
, "letter t"));<z>
(new UserCriterionValueDefinition("k", "letter k"));<z>
"letter v"));<z>
"letter c"));<z>
"");<z>
contribution.setCriteriaDefinition(criteriaDefinition);<z>
);<z>
contribution } ;<z>
void initUI() {<z>
= new JWindow();<z>
-100;<z>
int max = 100;<z>
JSlider(min, max);<z>
{<z>
) {<z>
/ 10.0);<z>
().setZoomFactor(newZoomFactor);<z>
)) {<z>
hide();<z>
});<z>
requestFocus();<z>
);<z>
add(slider);<z>
);<z>
) {<z>
(FocusEvent e) {<z>
;<z>
;<z>
) {<z>
(locationMonitorId);<z>
Throwable t) {<z>
.errorf(this, t, "Unexpected exception thrown in remote poller backend.");<z>
RemoteAccessException("Unexpected Exception Occurred on the server.", t);<z>
{<z>
fStreamReader.hasNext()) {<z>
(!fEventAccepted) {<z>
{<z>
false;<z>
{<z>
true;<z>
;<z>
false;<z>
public ProtocolSourceMessage(Source source, SOAPVersion soapVersion) {<z>
createSourceReader(source, true);<z>
createSOAPEnvelopeXmlCodec(soapVersion);<z>
(reader);<z>
Resource handleEmptyExternalResource(ResourceDeclaration resourceDeclaration,<z>
) {<z>
return null;<z>
, AccessControlException e)<z>
);<z>
name = null;<z>
) {<z>
.getName();<z>
Class resolvedClass =<z>
Class) permittedSunClasses.get(className);<z>
(name == null) ||<z>
resolvedClass == null) ||<z>
&&<z>
("accessClassInPackage.sun.rmi.registry"))))<z>
;<z>
return resolvedClass;<z>
domain, String mapping) throws Exception {<z>
(user, domain, mapping);<z>
RecipientRewriteTableException e) {<z>
));<z>
{<z>
(name.startsWith("wsrp-")) {<z>
true;<z>
return false;<z>
ParseException {<z>
;<z>
=null ;<z>
;<z>
();<z>
(t2at(to0), as0) ;}<z>
("Missing return statement in function");<z>
protected void configure() {<z>
bind(GtfsRealtimeService.class);<z>
.class);<z>
class);<z>
(GsonProvider.class);<z>
;<z>
class);<z>
(TrainTrackingService.class);<z>
) {<z>
);<z>
(IDOLookupException e) {<z>
throw new IDORuntimeException(e);<z>
) {<z>
) {<z>
entry = source._entries[i];<z>
REMOVED) {<z>
(this instanceof TKeyedVersion), false);<z>
._entries.length >> LOAD_BIT_SHIFT)<z>
target, flags);<z>
return merged;<z>
public void destroyNode(final String id) {<z>
nodes.get(id);<z>
)<z>
);<z>
node, 50);<z>
() {<z>
void run() {<z>
.sleep(200);<z>
InterruptedException e) {<z>
;<z>
{<z>
);<z>
);<z>
() {<z>
{<z>
()) {<z>
true;<z>
.currentThread() != this) {<z>
;<z>
InterruptedException e) {<z>
;<z>
catch (IOException e1) {<z>
;<z>
public T removeAt( int ix ) {<z>
= getElementAt( ix );<z>
tail ) {<z>
;<z>
null;<z>
{<z>
;<z>
elementAt == tail ) {<z>
> elementPrev = getElementAt( ix - 1 );<z>
tail = elementPrev;<z>
.setNext( null );<z>
{<z>
);<z>
getNext() );<z>
) : null;<z>
, String provider)<z>
NoSuchAlgorithmException, NoSuchProviderException<z>
)<z>
throw new IllegalArgumentException("provider MUST NOT be null");<z>
provider);<z>
)<z>
);<z>
;<z>
, String operator, String value)<z>
StringBuffer sb = new StringBuffer("(");<z>
var);<z>
.append(" ");<z>
);<z>
" ");<z>
sb.append(value);<z>
.append(") ");<z>
();<z>
points)<z>
);<z>
(points);<z>
);<z>
= LinAlg.transform(cXform, points);<z>
Math.toRadians(theta)),<z>
centered);<z>
= Double.MAX_VALUE;<z>
MAX_VALUE;<z>
.MIN_VALUE;<z>
MIN_VALUE;<z>
] p: rotated) {<z>
(minX, p[0]);<z>
;<z>
minY, p[1]);<z>
);<z>
- minX;<z>
cxyz[1];<z>
1] - minY;<z>
ty = maxY - cxyz[1];<z>
;<z>
1;<z>
sy, 1), rotated);<z>
return rotated;<z>
Object object)<z>
itemPropertyDescriptors.add<z>
.getRootAdapterFactory(),<z>
(),<z>
,<z>
),<z>
RuntimePackage.Literals.WORKFLOW_RUNNER__CONTEXT,<z>
);<z>
public final void shutdown() {<z>
.threads = null;<z>
null;<z>
null;<z>
String elementName,<z>
String namespace) throws XMPPException {<z>
IQ privateDataGet = new IQ() {<z>
{<z>
();<z>
buf.append("<query xmlns=\"jabber:iq:private\">");<z>
).append(" xmlns=\"")<z>
.append("\"/>");<z>
;<z>
);<z>
);<z>
) {<z>
setTo(user);<z>
String packetID = privateDataGet.getPacketID();<z>
connection<z>
;<z>
privateDataGet);<z>
.nextResult(SmackConfiguration<z>
);<z>
);<z>
null) {<z>
throw new XMPPException("No response from the server.");<z>
() == IQ.Type.ERROR) {<z>
.getError());<z>
).getPrivateData();<z>
private Object reset() {<z>
;<z>
content;<z>
!= null) {<z>
;<z>
null;<z>
.message = null;<z>
checkpoint(State.SKIP_CONTROL_CHARS);<z>
message;<z>
[] headers)<z>
{<z>
HeadMethod method = new HeadMethod();<z>
null, path);<z>
headers = method.getResponseHeaders();<z>
Response(code, headers, null);<z>
} finally {<z>
releaseConnection();<z>
Panel> addToCanvas(Collection<View> toBeAddedViews,<z>
CanvasManifestation containerManifestation, Point dropPoint) {<z>
);<z>
) {<z>
);<z>
;<z>
= viewComp;<z>
.panelId++;<z>
MCTViewManifestationInfoImpl();<z>
));<z>
.setStartPoint(dropPoint);<z>
;<z>
{<z>
().clone();<z>
.getType());<z>
add(ep);<z>
);<z>
(), viewManifestationInfo);<z>
(CanvasManifestation.MANIFEST_INFO, viewManifestationInfo);<z>
);<z>
);<z>
;<z>
panel;<z>
viewTypeProperties = containerManifestation.getViewProperties();<z>
, viewManifestationInfo);<z>
(<z>
panel);<z>
, panel.getPreferredSize()));<z>
.add(panel);<z>
, PANEL_ZORDER.FRONT);<z>
selectionListener);<z>
{<z>
.revalidate();<z>
;<z>
panels;<z>
{<z>
);<z>
null)<z>
.error(SWT.ERROR_NULL_ARGUMENT);<z>
;<z>
indices = new int[items.length];<z>
i = 0;<z>
GridChooserItem item : items) {<z>
;<z>
idx < 0)<z>
;<z>
i];<z>
);<z>
);<z>
Attributes makeActionInfo(List<String> refSOPs) {<z>
Attributes actionInfo = new Attributes(2);<z>
.createUID());<z>
= refSOPs.size() / 2;<z>
.newSequence(Tag.ReferencedSOPSequence, n);<z>
++) {<z>
= new Attributes(2);<z>
));<z>
;<z>
refSOPSeq.add(refSOP);<z>
actionInfo;<z>
{<z>
)) {<z>
);<z>
getOffset() -<z>
;<z>
pos <= start + len) {<z>
.remove(start, len);<z>
;<z>
catch (BadLocationException ble) {}<z>
false;<z>
(Any a)<z>
);<z>
return h.value;<z>
, int Cr)<z>
);<z>
1.164 * (Y - 16.0)))<z>
));<z>
(Cb - 128.0)));<z>
255);<z>
255);<z>
);<z>
= 0xff;<z>
) | (b << 0);<z>
return rgb;<z>
final boolean tests, final String reason) {<z>
(tests) {<z>
;<z>
m), reason);<z>
() {<z>
){<z>
public void run(){<z>
(), SWT.OPEN);<z>
"*.json"});<z>
result = dialog.open();<z>
null){<z>
File(result));<z>
);<z>
JSONUtils.toDBObject(jsonObj));<z>
){<z>
ex.toString());<z>
= new Action("Rename Collection"){<z>
() {<z>
(),<z>
,<z>
RequiredInputValidator("Please input the collection name."));<z>
){<z>
.rename(dialog.getValue());<z>
ex){<z>
));<z>
).refresh(getParent());<z>
new Action("Delete Collection"){<z>
void run() {<z>
).getShell(), "Confirm",<z>
{<z>
.drop();<z>
).refresh(getParent());<z>
{<z>
());<z>
)) {<z>
) +<z>
" is not an HDFS file system");<z>
this.dfs = (DistributedFileSystem)fs;<z>
static void sUpdate(){<z>
sByteSet();<z>
();<z>
();<z>
sIntSet();<z>
;<z>
;<z>
sDoubleSet();<z>
);<z>
);<z>
(String major) {<z>
submitter);<z>
this.major,major)) {<z>
major = major;<z>
);<z>
void updateSelection() {<z>
null) {<z>
.getSelectionPath();<z>
) {<z>
getLastPathComponent());<z>
false);<z>
(MyVertex newChild) {<z>
Vertex.RED) {<z>
MyVertex parent = track.pop();<z>
= track.pop();<z>
;<z>
;<z>
getValue();<z>
if (childValue < parentValue) {<z>
parentValue < grandParentValue) {<z>
parent, grandParent);<z>
} else {<z>
newChild, parent, grandParent);<z>
{<z>
if (parentValue < grandParentValue) {<z>
);<z>
else {<z>
;<z>
RED) {<z>
setColor(Vertex.BLACK);<z>
= null;<z>
ManageActionException {<z>
;<z>
catch (SystemException se) {<z>
new ManageActionException(<z>
se);<z>
public void onResume() {<z>
super.onResume();<z>
, mConnection, Context.BIND_AUTO_CREATE);<z>
File("/sdcard/tmp.log");<z>
f.exists()) {<z>
);<z>
throws Exception {<z>
.size() > 0) {<z>
;<z>
);<z>
anewarray(p(Object.class));<z>
;<z>
size());<z>
); i++) {<z>
;<z>
.class).equals(signature)) {<z>
.pop();<z>
else {<z>
code.aload(array);<z>
);<z>
;<z>
swap();<z>
aastore();<z>
array;<z>
else {<z>
1;<z>
Exception {<z>
HashMap map = new HashMap();<z>
map.entrySet().iterator();<z>
, "value");<z>
next();<z>
;<z>
catch (ConcurrentModificationException e) {<z>
void setRootObject(FlexoModelObject aRootObject) {<z>
;<z>
!= null) {<z>
_rootObject);<z>
, AxisOperation operation)<z>
Exception {<z>
).getServiceGroupName(),<z>
), true);<z>
log.isDebugEnabled()) {<z>
module.getName() +<z>
+ operation.getName() + " operation");<z>
(Throwable e) {<z>
) +<z>
.getOperations() + " operation ", e);<z>
) {<z>
isInteger(userId)) {<z>
(userId);<z>
public String objectToString(Object o) {<z>
) o;<z>
sb = new StringBuilder();<z>
append( id.getCarId() );<z>
toString();<z>
, double distance, double direction, double distChange,<z>
dirChange, double bodyFacingDirection, double headFacingDirection) {<z>
(qualifier) {<z>
:<z>
{<z>
30 :<z>
distChange, dirChange, bodyFacingDirection,<z>
);<z>
:<z>
distChange, dirChange, bodyFacingDirection,<z>
);<z>
10 :<z>
distChange, dirChange, bodyFacingDirection,<z>
headFacingDirection);<z>
:<z>
) {<z>
case 30 :<z>
RIGHT_30, distance, direction, distChange, dirChange,<z>
bodyFacingDirection, headFacingDirection);<z>
case 20 :<z>
, direction, distChange, dirChange,<z>
headFacingDirection);<z>
10 :<z>
, dirChange,<z>
;<z>
:<z>
,<z>
headFacingDirection);<z>
)<z>
String result = source;<z>
;<z>
(quotes);<z>
1) {<z>
.substring(0, index + 1) +<z>
(index + 2);<z>
(quotes, index + 1);<z>
;<z>
resourceKey, String defaultValue) {<z>
resourceBundle == null) {<z>
defaultValue;<z>
(INSTANCE.resourceBundle, resourceKey);<z>
: defaultValue;<z>
) {<z>
(value == null) {<z>
new NullPointerException();<z>
|= 0x00000002;<z>
;<z>
);<z>
this;<z>
Double[] getPoleDistances() {<z>
{null};<z>
;<z>
] rawResult = CPPPoleDetector.getPoleDistances();<z>
) {<z>
newImage) {<z>
0] * 9 * 10;<z>
(circularBufferIndex + 1) % circularDepthBuffer.length;<z>
avg = 0;<z>
i++) {<z>
+= circularDepthBuffer[i];<z>
/= circularDepthBuffer.length;<z>
;<z>
return res;<z>
private void cargarDatos() {<z>
.getSelectedItem() + "";<z>
);<z>
);<z>
(Cycle cycle, Iterable<Cycle> others,<z>
{<z>
for (Cycle other : others) {<z>
) {<z>
;<z>
false;<z>
{<z>
abort) {<z>
;<z>
);<z>
bytesSent += len;<z>
, MutableComponentModel componentModel)<z>
= field.getAnnotation(Path.class);<z>
null)<z>
return false;<z>
);<z>
();<z>
new ComputedValue<Asset>()<z>
)<z>
(ComponentResources.class);<z>
resources.getLocale();<z>
, expanded, locale);<z>
injectComputed(computedAsset);<z>
true;<z>
analyze(Document document) {<z>
.getSentences();<z>
for (Sentence sentence : sentences) {<z>
> tokens = sentence.getTokens();<z>
);<z>
.size()];<z>
size(); i++)<z>
();<z>
= TextUtils.tokensToString(tokens);<z>
;<z>
synchronized (this.headFinder) {<z>
(tokensString, tags);<z>
chunk : chunks)<z>
++)<z>
heads[i].equals("B-H"))<z>
;<z>
) {<z>
0;<z>
()) {<z>
;<z>
(isWebusers()) {<z>
flags += CmsOrganizationalUnit.FLAG_WEBUSERS;<z>
flags;<z>
.MistMessage.KeyValuePair buildPartial() {<z>
== null) {<z>
IllegalStateException(<z>
; }<z>
.proto.MistMessage.KeyValuePair returnMe = result;<z>
null;<z>
return returnMe;<z>
ConciseSet counts, Set<Integer> geneRestrictionIdxs) {<z>
(Integer geneIdx : geneRestrictionIdxs) {<z>
) {<z>
true;<z>
;<z>
addAllowDirtyPropertyDescriptor(Object object) {<z>
(),<z>
("_UI_Repository_allowDirty_feature"),<z>
),<z>
;<z>
pref, Object value) {<z>
target = (String) value;<z>
uri;<z>
)) {<z>
= Utils.validateUri(target);<z>
uri == null) {<z>
.LENGTH_LONG).show();<z>
false;<z>
();<z>
scheme.equals("mailto"))) {<z>
);<z>
return false;<z>
PackageManager packageManager = getPackageManager();<z>
Intent intent;<z>
if (scheme.equals("ftp")) {<z>
content.Intent.ACTION_SENDTO);<z>
;<z>
== 0) {<z>
);<z>
return true;<z>
Object getReceiverIfExists() {<z>
.getReference(declaringBean, null, false);<z>
) {<z>
return null;<z>
, boolean isClickedBlock) {<z>
, against, clickedPos, isClickedBlock)) {<z>
return false;<z>
, against, this.canSeekAttachedAlternative());<z>
{<z>
;<z>
{<z>
predicate);<z>
);<z>
;<z>
) {<z>
DEFAULT_EXCLUSION_STRATEGY, DEFAULT_NAMING_POLICY,<z>
.getDefaultInstanceCreators()),<z>
),<z>
, DEFAULT_JSON_NON_EXECUTABLE);<z>
context,<z>
resolver) {<z>
getMergedBeanDefinition(bean, context);<z>
(bd)) {<z>
{<z>
;<z>
(String matchingBen : matchingBeans) {<z>
mappedName.equals(matchingBen)) {<z>
new RuntimeBeanReference(matchingBen));<z>
{<z>
);<z>
);<z>
ref);<z>
, context, resolver);<z>
Collections.emptySet();<z>
when) {<z>
if (_anim != null) {<z>
);<z>
addAnimationObserver(this);<z>
{<z>
when);<z>
String compactString)<z>
{<z>
Counters counters = new Counters();<z>
= new IntWritable(0);<z>
index);<z>
{<z>
);<z>
,<z>
;<z>
groupName = unescape(groupName);<z>
UNIT_OPEN, UNIT_CLOSE,<z>
);<z>
= unescape(groupDisplayName);<z>
Group group = counters.getGroup(groupName);<z>
.setDisplayName(groupDisplayName);<z>
COUNTER_OPEN, COUNTER_CLOSE,<z>
);<z>
{<z>
);<z>
UNIT_OPEN, UNIT_CLOSE,<z>
);<z>
);<z>
UNIT_OPEN,<z>
counterIndex);<z>
= unescape(counterDisplayName);<z>
, UNIT_OPEN,<z>
counterIndex));<z>
(counterName);<z>
(counterDisplayName);<z>
increment(value);<z>
COUNTER_OPEN, COUNTER_CLOSE,<z>
;<z>
, index);<z>
return counters;<z>
, Map<String, String> args) {<z>
("user"));<z>
("group"));<z>
);<z>
getPermissionManager().getUser(userName);<z>
(user == null) {<z>
RED + "User does not exist");<z>
user.removeGroup(groupName, worldName);<z>
);<z>
, "You were removed from \"" + groupName + "\" group");<z>
(OnPreDrawListener listener) {<z>
();<z>
);<z>
mOnPreDrawListeners == null) {<z>
);<z>
listener);<z>
String name)<z>
);<z>
prop == null) {<z>
null;<z>
else {<z>
prop.getValue();<z>
{<z>
;<z>
(Bundle savedInstanceState) {<z>
getStringArray(R.array.extra_actions_array);<z>
.extra_descriptions_array);<z>
.onCreate(savedInstanceState);<z>
List<FieldSchema> cols) {<z>
new StringBuilder(DEFAULT_STRINGBUILDER_SIZE);<z>
formatColumnsHeader(columnInformation);<z>
);<z>
);<z>
, Settings settings) {<z>
iconScales = iconsNode.getChildNodes();<z>
) {<z>
);<z>
) {<z>
equalsIgnoreCase(Settings.EDITOR_ICONS_ELEMENT_NAME)) {<z>
Settings.DEFAULT_EDITOR_ICON_SCALE));<z>
ex) {<z>
setEditorIconScale(Settings.DEFAULT_EDITOR_ICON_SCALE);<z>
(Settings.TABLE_ICONS_ELEMENT_NAME)) {<z>
TABLE_ICONS_SCALE_ATTRIBUTE_NAME, Settings.DEFAULT_TABLE_ICON_SCALE));<z>
ex) {<z>
;<z>
settings;<z>
revert()<z>
repository.revert();<z>
= false;<z>
datei,boolean alsweb){<z>
datei;<z>
startdatei.contains(".html")){<z>
".html";<z>
if(alsweb){<z>
DEFAULT;<z>
;<z>
);<z>
(officeFrame, startdatei, docdescript);<z>
ansicht = ANSICHT_WEB;<z>
{<z>
IDocumentDescriptor docdescript = DocumentDescriptor.DEFAULT;<z>
;<z>
IDocument.WRITER));<z>
);<z>
ANSICHT_DOKUMENT;<z>
DocumentException e) {<z>
.printStackTrace();<z>
catch (OfficeApplicationException e) {<z>
e.printStackTrace();<z>
void execute() {<z>
{<z>
, speed, 0);<z>
(), speed, 0);<z>
else {<z>
);<z>
throws SQLException<z>
ResultSet resultSet = null;<z>
index.trace(TRACER, stmt);<z>
.executeQuery();<z>
resultSet.next())<z>
, resultSet);<z>
();<z>
(resultSet.getLong(1));<z>
if (supportingAudits)<z>
.getLong(2));<z>
setRevised(CDOBranchPoint.UNSPECIFIED_DATE);<z>
return revisionInfo;<z>
return null;<z>
;<z>
mapPairs003() {<z>
XQuery(<z>
;<z>
final QT3Result res = result(query);<z>
res;<z>
"false(), false(), true(), true(), false()")<z>
, int thirdWidth) {<z>
.valueOf(firstWidth);<z>
;<z>
valueOf(thirdWidth);<z>
;<z>
event) {<z>
.plugin.config.pauseWhenNoPlayers) {<z>
(this.plugin.config.isBackupDelayed) {<z>
if (!this.plugin.isBackupStarted) {<z>
;<z>
null);<z>
config.isBackupDelayed = false;<z>
() {<z>
getParent();<z>
parse;<z>
index=-1;<z>
&& index < 0) {<z>
node)-1;<z>
) {<z>
;<z>
;<z>
{<z>
;<z>
];<z>
p.isPosTag()) {<z>
getChildren();<z>
-1];<z>
,sentenceNumber);<z>
listSettings() throws Exception {<z>
= configuration<z>
);<z>
= config.getString(TABLE_ID);<z>
));<z>
schema = config.getString(SCHEMA_ID);<z>
== null ? SCHEMA_DEFAULT : schema));<z>
= config.getString(CATALOG_ID);<z>
shell.println("catalog: "<z>
));<z>
);<z>
"entity package: "<z>
== null ? null : entityPackage));<z>
config.getString(DRIVER);<z>
: driver));<z>
config.getString(PATH_TO_DRIVER);<z>
"path to driver: "<z>
pathToDriver));<z>
String url = config.getString(URL);<z>
? URL_DEFAULT : url));<z>
(USER);<z>
);<z>
.println("password: *****");<z>
.getString(DIALECT);<z>
("dialect: "<z>
dialect));<z>
> issues) {<z>
) {<z>
analyze(ctx, issues);<z>
) {<z>
;<z>
void addHistoryEntry(String text)<z>
, text);<z>
;<z>
] quartersShort() {<z>
String[] {<z>
,<z>
,<z>
) {<z>
newSelStart, newSelEnd,<z>
, candidatesEnd);<z>
if (DEBUG) {<z>
"onUpdateSelection: oss=" + oldSelStart<z>
+ oldSelEnd<z>
+ mLastSelectionStart<z>
+ mLastSelectionEnd<z>
+ ", nss=" + newSelStart<z>
newSelEnd<z>
+ candidatesStart<z>
+ candidatesEnd);<z>
.setCursorAndSelection(newSelEnd, newSelStart);<z>
final boolean selectionChanged = (newSelStart != candidatesEnd<z>
candidatesEnd) && mLastSelectionStart != newSelStart;<z>
&& candidatesEnd == -1;<z>
(!mExpectingUpdateSelection) {<z>
.length() > 0 && mHasUncommittedTypedChars)<z>
mVoiceProxy.isVoiceInputHighlighted())<z>
(selectionChanged || candidatesCleared)) {<z>
.setLength(0);<z>
false;<z>
;<z>
);<z>
ic = getCurrentInputConnection();<z>
{<z>
ic.finishComposingText();<z>
();<z>
false);<z>
{<z>
);<z>
);<z>
;<z>
;<z>
mExpectingUpdateSelection = false;<z>
.postUpdateShiftKeyState();<z>
;<z>
mLastSelectionEnd = newSelEnd;<z>
protected Composite createClientDependencyAdvancedReferencesTable(Composite parent) {<z>
(UmlMessages.ProtocolTransitionPropertiesEditionPart_ClientDependencyLabel, new ReferencesTableListener() {<z>
() { addClientDependency(); }<z>
element) { editClientDependency(element); }<z>
oldIndex, newIndex); }<z>
element); }<z>
{ }<z>
;<z>
.SWT_KIND));<z>
.clientDependency.createControls(parent);<z>
) {<z>
widgetSelected(SelectionEvent e) {<z>
) {<z>
);<z>
;<z>
;<z>
;<z>
;<z>
.disableMove();<z>
clientDependency);<z>
);<z>
return parent;<z>
<U> collectionClass)<z>
;<z>
))<z>
get(clazz).keySet())<z>
).get(key)));<z>
values;<z>
final Exception ex)<z>
return null;<z>
public void onPlayerBanned(final BanHammerPlayerBannedEvent event) {<z>
getPlayerName());<z>
.getRecord();<z>
!= null) {<z>
record.getReason()));<z>
!event.isSilent()) {<z>
broadcast(record, BroadcastMessageType.PLAYER_BANNED);<z>
public boolean equals(Object o) {<z>
true;<z>
)) return false;<z>
) o;<z>
equal(target, that.target);<z>
static final KeyAgreement getInstance(String algorithm,<z>
NoSuchAlgorithmException {<z>
.getInstance<z>
class, algorithm, provider);<z>
(KeyAgreementSpi)instance.impl,<z>
algorithm);<z>
(boolean nominalPredictor,<z>
numericPredictor,<z>
,<z>
boolean datePredictor,<z>
boolean relationalPredictor,<z>
multiInstance,<z>
classType) {<z>
;<z>
numericPredictor)<z>
;<z>
(nominalPredictor) {<z>
() > 0)<z>
+= " &";<z>
+= " nominal";<z>
) {<z>
if (str.length() > 0)<z>
" &";<z>
+= " string";<z>
(datePredictor) {<z>
str.length() > 0)<z>
" &";<z>
;<z>
if (relationalPredictor) {<z>
length() > 0)<z>
+= " &";<z>
" relational";<z>
+= " predictors)";<z>
(classType) {<z>
case Attribute.NUMERIC:<z>
;<z>
:<z>
+ str;<z>
:<z>
str = " (string class," + str;<z>
case Attribute.DATE:<z>
= " (date class," + str;<z>
.RELATIONAL:<z>
= " (relational class," + str;<z>
str);<z>
x, int y,<z>
{<z>
) {<z>
, y, z, extras, false);<z>
= new Handler() {<z>
public void handleMessage(Message message) {<z>
{<z>
MSG_ACTIVITIES_PRESENT:<z>
.id.MSG_ACTIVITIES_NOT_PRESENT:<z>
marker_radius) {<z>
!= null) {<z>
.WHITE);<z>
getLeftEdgeDateMillis());<z>
get(Calendar.YEAR);<z>
.dummy_calendar.clear();<z>
set(Calendar.YEAR, y);<z>
) {<z>
.YEAR, 1);<z>
dummy_calendar.getTimeInMillis());<z>
0, marker_radius, this.mLinePaint);<z>
Calendar.YEAR);<z>
.mTextPaint);<z>
() {<z>
super.toString();<z>
StringBuffer(super.toString());<z>
append(" (exception: ");<z>
exception);<z>
);<z>
.append(group);<z>
.append(", anyAttribute1: ");<z>
append(anyAttribute1);<z>
.append(')');<z>
return result.toString();<z>
cmdpath,<z>
)<z>
cmdpath;<z>
{<z>
];<z>
{<z>
argv.length];<z>
0, argv.length);<z>
public void reset() {<z>
= 0;<z>
= 0;<z>
null;<z>
null;<z>
= null;<z>
0;<z>
= 0;<z>
1;<z>
) {<z>
print("\r ");<z>
;<z>
savg.clear();<z>
();<z>
();<z>
;<z>
= old_diff = 0;<z>
0;<z>
, Integer length) {<z>
sender, "/bm automessage remove (index)");<z>
io.sendManyArgs(sender, "/bm automessage remove (index)");<z>
sender, "bm.automessage.remove")) {<z>
1 + length]));<z>
));<z>
true;<z>
IsAllLunsSelectedChanged()<z>
())<z>
getItems();<z>
items)<z>
())<z>
());<z>
op) {<z>
();<z>
();<z>
|| !checkMessageDef(out))<z>
.FALSE;<z>
if (in == null)<z>
.UNSURE;<z>
iterator().next();<z>
inpart != null;<z>
;<z>
msg;<z>
));<z>
{<z>
.debug("Failed to parse NMS message: " + nmsMsg, e);<z>
FALSE;<z>
);<z>
: Recognized.FALSE;<z>
throws Exception {<z>
"NettyTCPBoss");<z>
this, "NettyTCPWorker");<z>
<= 0) {<z>
channelFactory = new NioServerSocketChannelFactory(bossExecutor, workerExecutor);<z>
} else {<z>
NioServerSocketChannelFactory(bossExecutor, workerExecutor,<z>
.getWorkerCount());<z>
ServerBootstrap(channelFactory);<z>
;<z>
;<z>
, configuration.isReuseAddress());<z>
"child.reuseAddress", configuration.isReuseAddress());<z>
.getConnectTimeout());<z>
);<z>
, configuration.getPort()));<z>
allChannels.add(channel);<z>
Deque<String> splitPath(String path) {<z>
.split(path, 0);<z>
String>();<z>
< paths.length; ++i) {<z>
paths[i];<z>
).isEmpty()) {<z>
data);<z>
;<z>
BIRTCubeResultSetEvaluator( ICubeResultSet rs )<z>
rs;<z>
this.qr = null;<z>
public boolean isEquivalentTo(PPMRole object) {<z>
(object)) {<z>
return false;<z>
!= null) {<z>
;<z>
getRgb() != null) {<z>
!= object.getRed()) {<z>
return false;<z>
!= object.getGreen()) {<z>
;<z>
getBlue()) {<z>
;<z>
;<z>
{<z>
int beginLabel = label;<z>
= this.ctx.incrementLabel();<z>
, "body", true);<z>
{blockLabel, beginLabel};<z>
, data1);<z>
);<z>
, beginLabel, blockLabel, nextLabel};<z>
;<z>
));<z>
return nextLabel;<z>
) {<z>
.getProviders()) {<z>
)<z>
getWizardPageDefinition());<z>
activity);<z>
catch (PermissionException pe) {<z>
(pe.getMessage(), pe);<z>
() {<z>
(__hashCodeCalc) {<z>
0;<z>
= true;<z>
= 1;<z>
(getLength() != null) {<z>
getLength().hashCode();<z>
{<z>
);<z>
() != null) {<z>
getFilename().hashCode();<z>
{<z>
0;<z>
getLength(getStream());<z>
i++) {<z>
, i);<z>
obj != null &&<z>
getClass().isArray()) {<z>
.hashCode();<z>
!= null) {<z>
for (int i=0;<z>
));<z>
i++) {<z>
(), i);<z>
(obj != null &&<z>
).isArray()) {<z>
;<z>
= false;<z>
_hashCode;<z>
) {<z>
(mInputDeviceId >= 0 && deviceId == mInputDeviceId) {<z>
();<z>
component) {<z>
setComponentProperties(facesContext, component);<z>
setStringProperty(component, "expandedImageUrl");<z>
setStringProperty(component, "expandedRolloverImageUrl");<z>
"expandedPressedImageUrl");<z>
component, "collapsedImageUrl");<z>
setStringProperty(component, "collapsedRolloverImageUrl");<z>
setStringProperty(component, "collapsedPressedImageUrl");<z>
static TargetDataLine bestAvailableTargetDataLine(){<z>
Mixer mixer = AudioCommon.bestAvailableMixerForOutput();<z>
if (mixer != null)<z>
);<z>
IllegalArgumentException iae){<z>
);<z>
e) {<z>
e, "Failed to get target data line (Mic) with best available mixer. Trying default data line...");<z>
.AUDIO_FORMAT);<z>
} catch (LineUnavailableException e) {<z>
);<z>
requiredType,<z>
optionContext) {<z>
)<z>
);<z>
Object callData) {<z>
if (name.equals(IMAGE_TAG)) {<z>
(attrs.getValue(ATTR_IMAGENAME)));<z>
attrs.getValue(ATTR_COUNT)));<z>
(name.equals(SYMBOLS_TAG)) {<z>
_symbolsProcessor);<z>
float logSum(float[] logInputs) {<z>
;<z>
0) {<z>
;<z>
int maxIdx = 0;<z>
logInputs[0];<z>
{<z>
{<z>
;<z>
[i];<z>
false;<z>
intermediate = 0.0f;<z>
float cutoff = max - SloppyMath.LOGTOLERANCE_F;<z>
; i++) {<z>
{<z>
= true;<z>
- max);<z>
(haveTerms) {<z>
1.0 + intermediate);<z>
} else {<z>
return max;<z>
static MersenneTwisterFast primeGenerator(MersenneTwisterFast generator)<z>
624 * 2; i++)<z>
);<z>
;<z>
public void deletePasswordPolicyRel(PasswordPolicyRel passwordPolicyRel)<z>
throws SystemException {<z>
);<z>
String column, int value) {<z>
);<z>
);<z>
con);<z>
return sucessful;<z>
bodyContent, boolean isBodyRE, String description,<z>
, boolean hasBody) {<z>
.attrMax = attrMax;<z>
this.attrMin = attrMin;<z>
attrType = attrType;<z>
description = description;<z>
.isBodyRE = isBodyRE;<z>
;<z>
;<z>
hasBody = hasBody;<z>
) {<z>
; i++) {<z>
{<z>
;<z>
return true;<z>
cls) {<z>
();<z>
0;; count++) {<z>
) {<z>
getName());<z>
--) {<z>
append("[]");<z>
());<z>
.getComponentType();<z>
{<z>
) {<z>
sets));<z>
null;<z>
);<z>
ex) {<z>
throw convertSrpAccessException(ex);<z>
entityType) {<z>
;<z>
{<z>
isAnnotationPresent(EventSourcedMember.class)) {<z>
.add(field);<z>
.size()]);<z>
{<z>
? extends AbstractAnnotatedAggregateRoot>) entityType);<z>
else {<z>
= null;<z>
, V value) {<z>
adjustSize();<z>
);<z>
values) {<z>
) {<z>
value);<z>
throws LdapException<z>
.getOid() );<z>
.getOid() ) )<z>
;<z>
.error( msg );<z>
( ResultCodeEnum.UNWILLING_TO_PERFORM, msg );<z>
( error );<z>
String schemaName = getSchemaName( schemaObject );<z>
schemaObject.getOid();<z>
( schemaName );<z>
= new SchemaObjectWrapper( schemaObject );<z>
if ( !content.contains( schemaObjectWrapper ) )<z>
(),<z>
schemaObject.getOid() );<z>
( schemaObjectWrapper );<z>
schemaObject instanceof LoadableSchemaObject ) )<z>
globalOidRegistry.unregister( oid );<z>
catch ( LdapException ne )<z>
( ne );<z>
);<z>
{<z>
new EditorCell_Constant(editorContext, node, ":");<z>
setCellId("Constant_pr8n4z_b3c0");<z>
editorCell.getStyle();<z>
.set(StyleAttributes.SELECTABLE, false);<z>
.setDefaultText("");<z>
;<z>
() {<z>
(preferencesBuilder_ == null) {<z>
.getDefaultInstance();<z>
onChanged();<z>
{<z>
clear();<z>
& ~0x00000001);<z>
;<z>
() {<z>
= 31;<z>
result = 1;<z>
method.hashCode());<z>
());<z>
));<z>
return result;<z>
() {<z>
if (genCustomPreferencePageEClass == null) {<z>
get(4);<z>
;<z>
String,Serializable> toParams( IStructuredSelection context){<z>
) {<z>
Collections.emptyMap();<z>
); ) {<z>
Serializable> params<z>
( itr.next() );<z>
.isEmpty() ) return params;<z>
return Collections.emptyMap();<z>
SourceLocation o)<z>
) ) {<z>
return -1;<z>
() ) {<z>
1;<z>
return 0;<z>
{<z>
Config.getString("utils",<z>
));<z>
("[PhLogger-debug-output] debug-mode enabled, disable under utils.properties for less output");<z>
;<z>
"[PhLogger-debug-output] prefix set to: " + prefix);<z>
.getResource(<z>
separator + "log4j.xml");<z>
== url) {<z>
("[PhLogger-debug-output] log4j.xml not found. configurating with log4j.common.xml");<z>
.getClassLoader().getResource(<z>
File.separator + "log4j.common.xml");<z>
) {<z>
.err<z>
("[PhLogger-debug-output] Configuration file not found !!!");<z>
System.err<z>
);<z>
System.err<z>
.println("[PhLogger-debug-output] Add log4j.xml, log4.dtd to resources/properties.");<z>
loggerDebugg("[PhLogger-debug-output] configurating with file: "<z>
());<z>
(url);<z>
if (debugMode) {<z>
getLogger("PhLogger");<z>
error("[PhLogger-debug-output] on high error-lvl to ensure to get logged, configuration-file: "<z>
getFile());<z>
error("[PhLogger-debug-output] debug-mode enabled, disable under utils.properties for less output");<z>
enableSimpleLogger();<z>
{<z>
ITsapiAddress address = null;<z>
null) {<z>
.getDistributingDevice();<z>
} else {<z>
this.call)<z>
;<z>
address;<z>
JComponent createContent() {<z>
());<z>
= new JPanel(new BorderLayout()) {<z>
) {<z>
;<z>
;<z>
;<z>
"resource/Movement-pointer_or_click.swf");<z>
CENTER);<z>
);<z>
new ActionListener() {<z>
protected boolean isAdded = true;<z>
) {<z>
{<z>
;<z>
} else {<z>
flashPlayer, BorderLayout.CENTER);<z>
();<z>
);<z>
;<z>
});<z>
10, 10));<z>
);<z>
(buttonPanel, BorderLayout.SOUTH);<z>
contentPane;<z>
Loader> getLoaders(String resourcePath) {<z>
;<z>
'/');<z>
.substring(0, idx) : "";<z>
: myResourcePackagesCache;<z>
);<z>
{<z>
= new SmartList<Loader>();<z>
list);<z>
;<z>
T> getPersistedClass ()<z>
persistedClass != null ) return persistedClass;<z>
this.getClass(), 0 );<z>
( persistedClass == null )<z>
) );<z>
persistedClass;<z>
(String providerName)<z>
);<z>
return this;<z>
[] computeCommaPositions(String code) {<z>
int length= code.length();<z>
int pos= 0;<z>
();<z>
new Integer(-1));<z>
!= -1) {<z>
code.charAt(pos);<z>
(ch) {<z>
:<z>
));<z>
:<z>
')', pos);<z>
:<z>
, '<', '>', pos);<z>
'[':<z>
, '[', ']', pos);<z>
(pos != -1)<z>
;<z>
);<z>
new int[positions.size()];<z>
length; i++)<z>
.intValue();<z>
;<z>
Node new25()<z>
();<z>
= new APictureClauseClause(node1);<z>
return node;<z>
, int length) {<z>
length), trunk);<z>
;<z>
)<z>
(DataTypeFactory.OBJECT);<z>
setReturnDataType(DataTypeFactory.OBJECT);<z>
public Object getValueAt(int rowIndex, int columnIndex)<z>
switch(columnIndex)<z>
:<z>
1;<z>
case 1:<z>
);<z>
case 2:<z>
.getEnd(rowIndex);<z>
:<z>
subsList.getSubtitleTextSingleLine(rowIndex);<z>
;<z>
, DbObject obj) {<z>
if (list != null) {<z>
;<z>
0) {<z>
i);<z>
) {<z>
x = 0;<z>
downloadAllowedEverywhere = false;<z>
= false;<z>
= false;<z>
= 0;<z>
];<z>
length; i++) {<z>
[i];<z>
;<z>
downloadAllowedEverywhere = true;<z>
[i]);<z>
x != i) {<z>
= new File[x];<z>
0, newDirs, 0, x);<z>
= newDirs;<z>
0) {<z>
= true;<z>
public Version getPredecessor(Version version)<z>
null;<z>
version != null)<z>
));<z>
return result;<z>
) {<z>
> properties = new HashMap();<z>
"alias", this) {<z>
hasOwnGetter() {<z>
true;<z>
{<z>
;<z>
;<z>
});<z>
;<z>
height) {<z>
i = 0;<z>
int j = 0;<z>
width; x++)<z>
++] = 0;<z>
; y < height; y++) {<z>
{<z>
];<z>
{<z>
DirectByteArrayOutputStream();<z>
(zipSource, tempSar);<z>
), zipTarget);<z>
throws Exception {<z>
;<z>
mav.setViewName("boxlets/gallery");<z>
= imageDao.getGalleryItems(COUNT_ITEMS);<z>
.addObject("items", list);<z>
mav;<z>
) {<z>
< VALUES_ARRAY.length; ++i) {<z>
TPredefinedGeneralEquipmentEnum result = VALUES_ARRAY[i];<z>
(name)) {<z>
result;<z>
null;<z>
) {<z>
.getCondition());<z>
= x.getCondition();<z>
CanBooleanEval) {<z>
(CanBooleanEval) expr;<z>
isBooleanFalse()) {<z>
;<z>
());<z>
()) {<z>
;<z>
));<z>
);<z>
ctx.replaceMe(accept(block));<z>
public Document generateCapabilities()<z>
capabilitiesElem = new Element( "Capabilities", wcsNS );<z>
owcsNS );<z>
;<z>
);<z>
);<z>
allSections = false;<z>
sections.size() == 0 ||<z>
Section.All ) ) )<z>
true;<z>
))<z>
);<z>
))<z>
;<z>
.contains( Section.OperationsMetadata ))<z>
());<z>
)<z>
.addContent( generateContents());<z>
);<z>
mmd)<z>
if (mmd == null)<z>
)<z>
(LOCALISER.msg("044108",<z>
.getFullClassName()));<z>
);<z>
iter.hasNext())<z>
)iter.next();<z>
)))<z>
msg("044112",<z>
;<z>
(mmd);<z>
= this;<z>
RtfDocument() {<z>
(null);<z>
();<z>
new RtfMapper(this);<z>
.documentHeader = new RtfDocumentHeader(this);<z>
);<z>
.previousRandomInts = new ArrayList();<z>
this);<z>
public static void saveArenas()<z>
(Arena a:GamesManager.getArenas())<z>
+".";<z>
;<z>
().getMax());<z>
);<z>
a);<z>
;<z>
saveDatabase();<z>
internalIndex)<z>
)<z>
;<z>
return TRIGGER_TIMER;<z>
return TRIGGER_RULE;<z>
: return TRIGGER_RESULT_LINK;<z>
: return ANY;<z>
ANY_ATTRIBUTE;<z>
return super.internalConvertIndex(internalIndex);<z>
() {<z>
);<z>
.add(IStructuredItemContentProvider.class);<z>
.add(ITreeItemContentProvider.class);<z>
.class);<z>
supportedTypes.add(IItemPropertySource.class);<z>
iphoneLog(IProject project) throws Exception<z>
;<z>
!= null)<z>
logPath);<z>
, String language) {<z>
;<z>
) {<z>
;<z>
);<z>
return p.getProperty(key);<z>
)<z>
.setTime(startTime);<z>
startTicks = world.getFullTime();<z>
, TranscriptEvent.EventType.MATCH_START,<z>
null, null));<z>
"start");<z>
;<z>
AutoReferee.hasSportBukkitApi())<z>
(StartMechanism sm : startMechanisms)<z>
;<z>
getType())<z>
:<z>
).setPowered(sm.state);<z>
case STONE_BUTTON:<z>
mdata).setPowered(sm.state);<z>
WOOD_PLATE:<z>
case STONE_PLATE:<z>
;<z>
);<z>
(true);<z>
for (AutoRefTeam team : getTeams())<z>
;<z>
PLAYING);<z>
Plugin plugin = AutoReferee.getInstance();<z>
MatchClockTask();<z>
().getScheduler().scheduleSyncRepeatingTask(<z>
);<z>
) {<z>
equals(other.getClass())) {<z>
().getName());<z>
0;<z>
RestRequest) other;<z>
());<z>
{<z>
lastComparison;<z>
if (isSetMethod()) {<z>
);<z>
(lastComparison != 0) {<z>
lastComparison;<z>
.compareTo(typedOther.isSetUri());<z>
if (lastComparison != 0) {<z>
lastComparison;<z>
isSetUri()) {<z>
.uri, typedOther.uri);<z>
lastComparison != 0) {<z>
;<z>
typedOther.isSetParameters());<z>
0) {<z>
return lastComparison;<z>
()) {<z>
;<z>
0) {<z>
;<z>
));<z>
0) {<z>
return lastComparison;<z>
isSetHeaders()) {<z>
;<z>
(lastComparison != 0) {<z>
return lastComparison;<z>
));<z>
!= 0) {<z>
lastComparison;<z>
isSetBody()) {<z>
body, typedOther.body);<z>
if (lastComparison != 0) {<z>
lastComparison;<z>
0;<z>
{<z>
{<z>
:<z>
);<z>
;<z>
hc, HClass anInterface) {<z>
assert !hc.isInterface();<z>
);<z>
HMethod> it=new ArrayIterator<HMethod><z>
; it.hasNext(); ) {<z>
.next();<z>
if (hm instanceof HInitializer) continue;<z>
();<z>
, hm.getParameterTypes());<z>
(hmm.isInterfaceMethod()) {<z>
.isAbstract(hc.getModifiers()) :<z>
+" not implemented in non-abstract "+<z>
+hc;<z>
getMutator().addDeclaredMethod<z>
());<z>
setModifiers<z>
;<z>
.setExceptionTypes(hm.getExceptionTypes());<z>
(String v) {<z>
String value = null;<z>
verify(this, v);<z>
{<z>
;<z>
{<z>
.equals(SELECTION_PROPERTY)) {<z>
);<z>
{<z>
= value;<z>
} catch (NavajoException ex) {<z>
;<z>
else {<z>
null;<z>
;<z>
] interfaces, final Class caller)<z>
;<z>
== 0)<z>
) ;<z>
interfaceClasses = new Class[numInterfaces] ;<z>
; count++)<z>
forName(interfaces[count], caller) ;<z>
proxyClassLoader ;<z>
Thread.currentThread().getContextClassLoader() ;<z>
if (threadClassLoader != null)<z>
proxyClassLoader = threadClassLoader ;<z>
classLoader = caller.getClassLoader() ;<z>
!= null)<z>
;<z>
.getSystemClassLoader() ;<z>
(proxyClassLoader, interfaceClasses) ;<z>
)<z>
switch (featureID)<z>
:<z>
return isSetUser();<z>
(featureID);<z>
buildProperties, IPath programComb)<z>
;<z>
) : Long.MAX_VALUE;<z>
;<z>
) {<z>
session();<z>
) {<z>
_editingContextsPerSession == null) {<z>
NSMutableDictionary();<z>
;<z>
null) {<z>
new NSMutableArray();<z>
);<z>
())<z>
"Creating array for "+s.sessionID());<z>
);<z>
.isDebugEnabled())<z>
));<z>
) {<z>
debug("Editing Context created with null session.");<z>
SlingHttpServletResponse response, CalDavConnector connector,<z>
CalendarSearchCriteria criteria) throws IOException {<z>
calendars;<z>
= false;<z>
System.currentTimeMillis();<z>
= connector.searchByDate(criteria);<z>
= System.currentTimeMillis();<z>
);<z>
.VTODO)) {<z>
System.currentTimeMillis();<z>
hasOverdueTasks();<z>
= System.currentTimeMillis();<z>
- begin) + "ms");<z>
catch (CalDavException e) {<z>
.error("Exception fetching calendars", e);<z>
;<z>
("application/json");<z>
setCharacterEncoding("UTF-8");<z>
new JSONObject();<z>
= new JSONArray();<z>
CalendarWrapper wrapper : calendars) {<z>
put(wrapper.toJSON());<z>
"results", results);<z>
CalendarSearchCriteria.TYPE.VTODO)) {<z>
json.put("hasOverdueTasks", hasOverdue);<z>
toString(2));<z>
(JSONException e) {<z>
;<z>
) throws IOException {<z>
"/application.properties" ) ),<z>
).getPathForTestResources() + "/application.properties" )<z>
, String codeScheme,<z>
codeDisplayName, String sClassificationScheme, String sDocumentId) {<z>
);<z>
ClassificationType oClassification = new ClassificationType();<z>
setId("");<z>
= false;<z>
.setClassificationScheme(sClassificationScheme);<z>
);<z>
;<z>
SlotType1> olClassificationSlot = oClassification.getSlot();<z>
{<z>
code);<z>
bHasCode = true;<z>
if (NullChecker.isNotNullish(codeScheme)) {<z>
SlotType1 oSlot = createSingleValueSlot(EBXML_RESPONSE_CODE_CODESCHEME_SLOTNAME, codeScheme);<z>
(oSlot);<z>
= true;<z>
(codeDisplayName)) {<z>
);<z>
setName(oDisplayName);<z>
bHasCode = true;<z>
(bHasCode) {<z>
return oClassification;<z>
else {<z>
.debug("DocumentRegistryHelper.CreateClassificationFromCodedData() -- End");<z>
return null;<z>
(DataOutput out) throws IOException<z>
(isVector())<z>
Vector values = getVectVal();<z>
values.size());<z>
)<z>
values.elementAt(i);<z>
.writeByte(element.length);<z>
length; j++)<z>
[j].byteValue());<z>
value;<z>
);<z>
< element.length; j++)<z>
.byteValue());<z>
String componentId,<z>
, String versionId) {<z>
url = new StringBuilder();<z>
= replaceSpecialChars(logicalName);<z>
.<z>
(documentId).append(<z>
;<z>
();<z>
initialiseTags() {<z>
();<z>
,"");<z>
.createTagEntry("Foot", "");<z>
.createTagEntry("Hand","");<z>
, "");<z>
.createTagEntry("Arm","");<z>
);<z>
{<z>
new SecretKeySpec(str, "HmacSHA1");<z>
.init(secret);<z>
} catch (Exception e) {<z>
();<z>
hmac;<z>
private static void configureSyncFor(Account account) {<z>
;<z>
PROVIDER_AUTHORITY, 1);<z>
.setSyncAutomatically(account, PROVIDER_AUTHORITY, true);<z>
(account, PROVIDER_AUTHORITY,<z>
, SYNC_PERIOD);<z>
() {<z>
void run() {<z>
dragEventArgs) {<z>
;<z>
));<z>
;<z>
;<z>
[] array) {<z>
array.length;<z>
length >= collection.size()) {<z>
i++) {<z>
= collection.get(i);<z>
array;<z>
;<z>
level) throws IOException {<z>
.createNewFile(zipOutput);<z>
);<z>
.setLevel(level);<z>
isDirectory()) {<z>
progress != null) {<z>
fileToZip, true) + 1);<z>
);<z>
{<z>
;<z>
} finally {<z>
.close();<z>
) {<z>
+ moduleName + ".nocache.js")<z>
;<z>
node) {<z>
node);<z>
;<z>
createConstant_vcqcp7_a0(editorContext, node));<z>
))) {<z>
editorContext, node));<z>
node));<z>
.createConstant_vcqcp7_d0(editorContext, node));<z>
(editorContext, node));<z>
(editorContext, node));<z>
));<z>
;<z>
, node));<z>
.createConstant_vcqcp7_j0(editorContext, node));<z>
;<z>
static void sleep(long millis) {<z>
;<z>
{<z>
throw new RuntimeException(e);<z>
RecognitionException {<z>
= STRING;<z>
int _channel = DEFAULT_TOKEN_CHANNEL;<z>
match('\"');<z>
2;<z>
(1);<z>
' && LA1_0<='\uFFFF')) ) {<z>
=1;<z>
switch (alt1) {<z>
:<z>
nput.LA(1)<='\uFFFF') ) {<z>
input.consume();<z>
null,input);<z>
;<z>
throw mse;}<z>
loop1;<z>
);<z>
('\"');<z>
_type;<z>
channel = _channel;<z>
data) {<z>
.baseURI = baseURI;<z>
this.element = data;<z>
systemId;<z>
public ActionForward execute(<z>
,<z>
form,<z>
,<z>
response)<z>
throws Exception {<z>
null;<z>
item) {<z>
{<z>
:<z>
();<z>
return true;<z>
MENU_TOGGLELOG:<z>
);<z>
true;<z>
:<z>
;<z>
true;<z>
:<z>
);<z>
System.exit(0);<z>
return true;<z>
MENU_HELP:<z>
.show();<z>
true;<z>
case MENU_SETPWD:<z>
;<z>
return true;<z>
MENU_SHOWLOG:<z>
();<z>
;<z>
:<z>
;<z>
true;<z>
case MENU_CLEARLOG:<z>
();<z>
true;<z>
;<z>
public String getVariableName(IVariable variable) throws DebugException {<z>
ScriptVariableWrapper<z>
.Messages.ScriptStackFrame_classVariables)) {<z>
;<z>
super.getVariableName(variable);<z>
IActionBars actionBars) {<z>
, false);<z>
(new FormEntryAdapter(this, actionBars) {<z>
(FormEntry entry) {<z>
));<z>
(CoreException e) {<z>
PDEPlugin.logException(e);<z>
});<z>
;<z>
), true) {<z>
validateControl() {<z>
();<z>
public WebDavFolder(WebDavStore nStore, String name) {<z>
());<z>
= nStore;<z>
name;<z>
;<z>
= name.split("/");<z>
;<z>
< count; i++) {<z>
(i != 0) {<z>
);<z>
else {<z>
], "UTF-8");<z>
encodedName = url;<z>
) {<z>
LOG_TAG, "UnsupportedEncodingException URLEncoding folder name, skipping encoded");<z>
name;<z>
);<z>
.mUrl;<z>
"/")) {<z>
;<z>
+= encodedName;<z>
> populateEntities(EntityMetadata m, Client client)<z>
debug("on start of fetching non associated entities");<z>
;<z>
();<z>
))<z>
new ArrayList<String>();<z>
= ((HibernateClient) client).find(<z>
);<z>
(r.size());<z>
r)<z>
);<z>
()))<z>
[]) o)[0];<z>
);<z>
client, result);<z>
e)<z>
getMessage());<z>
(e);<z>
!result.isEmpty())<z>
.store(result, m);<z>
result;<z>
public void setTrustAnchors(Set<TrustAnchor> trustAnchors)<z>
{<z>
(trustAnchors == null) {<z>
(<z>
getString("security.6F"));<z>
;<z>
new HashSet<TrustAnchor>(trustAnchors);<z>
() {<z>
();<z>
current_peer_state != TRANSFERING || closed) {<z>
;<z>
;<z>
;<z>
{<z>
[i]) {<z>
();<z>
;<z>
arena) throws Exception {<z>
.containsKey(player.getName()))<z>
throw new Exception(String.format("%s already belongs to %s while trying to join %s.",<z>
(),<z>
,<z>
));<z>
).canJoin())<z>
"%s is already in progress", arena.getName()));<z>
arena.isFull())<z>
.getName()));<z>
_addPlayerToArena(player, arena);<z>
String msg = "Joined Arena %s [%d / %d]";<z>
(), arena.getMaxNumPlayers());<z>
() >= arena.getPlayersRequiredToStart()) {<z>
);<z>
public void updateAsciiStream(int arg0, InputStream arg1)<z>
throws Exception {<z>
(PacketBuilder) o;<z>
+ message.size(), false);<z>
().ordinal();<z>
"encrypter")) {<z>
(ISAACAlgorithm) session.getAttribute("encrypter");<z>
ordinal += encrypter.nextInt();<z>
.putInt(ordinal);<z>
;<z>
);<z>
.write(buffer.flip());<z>
double eps) {<z>
super.isOnPath(p, eps))<z>
false;<z>
;<z>
) {<z>
()) {<z>
.ribbonComponent.getIcon();<z>
if (icon != null) {<z>
new Dimension(16, 16));<z>
;<z>
setOpaque(false);<z>
this.ribbonComponent.setOpaque(false);<z>
() throws ServiceException {<z>
next.listTopics();<z>
{<z>
);<z>
) {<z>
ServiceException(e));<z>
ExpressionValue ev,<z>
symbolic,<z>
rootFindingSimplification,boolean assumeFalseIfCASNeeded) {<z>
)) {<z>
(ExpressionNode) ev;<z>
)) {<z>
MULTIPLY:<z>
.getLeft(), l, symbolic,<z>
,assumeFalseIfCASNeeded)<z>
getRight(), l, symbolic,<z>
;<z>
POWER:<z>
case DIVIDE:<z>
if (!rootFindingSimplification)<z>
)<z>
false;<z>
isConstant()) {<z>
;<z>
.getRight().evaluateNum()<z>
();<z>
(Exception e) {<z>
printStackTrace();<z>
return false;<z>
).equals(Operation.POWER)) {<z>
))<z>
return addPolynomialFactors(<z>
kernel, 1), l, symbolic,<z>
assumeFalseIfCASNeeded);<z>
(rightVal > 0)<z>
,<z>
;<z>
} else {<z>
rightVal)) {<z>
return false;<z>
addPolynomialFactors(node.getLeft(), l,<z>
, rootFindingSimplification,assumeFalseIfCASNeeded);<z>
case ABS:<z>
:<z>
:<z>
(!rootFindingSimplification)<z>
symbolic,<z>
assumeFalseIfCASNeeded);<z>
ev.isConstant()) {<z>
symbolic,assumeFalseIfCASNeeded);<z>
null)<z>
;<z>
);<z>
true;<z>
()<z>
;<z>
();<z>
MotionEvent event) {<z>
!= null<z>
.getLeft() <= event.getRawX()<z>
getRawX()<z>
()<z>
getRawY();<z>
String xmlFile) {<z>
out.println("LOADING: " + xmlFile);<z>
.include(new FileInputStream(xmlFile));<z>
(Exception ex) {<z>
Level.SEVERE, null, ex);<z>
) {<z>
{<z>
+ i);<z>
));<z>
getMaxHashes(false));<z>
;<z>
) + ")");<z>
getCount(false)));<z>
Send(byte[] data, int siz)<z>
{<z>
);<z>
;<z>
data,0,len);<z>
return true;<z>
,<z>
max_size )<z>
256 ){<z>
() & 0xff);<z>
max_size < 65536 ){<z>
);<z>
else{<z>
( buffer.getInt());<z>
}catch( Throwable e ){<z>
( new CryptoManagerException( "Failed to get int", e ));<z>
template, long limitBytes) {<z>
(template);<z>
limitBytes;<z>
.inferred = false;<z>
);<z>
;<z>
, int flags) {<z>
) {<z>
Notification notification = (Notification) event;<z>
notification);<z>
return false;<z>
public String hideResponseAddedPopup() {<z>
;<z>
(ResponseAdd) FacesContext.getCurrentInstance()<z>
).getELResolver().getValue(<z>
FacesContext.getCurrentInstance()<z>
;<z>
= respAdd.getCurrentTrial();<z>
FacesContext.getCurrentInstance()<z>
).getELResolver().getValue(<z>
()<z>
, "randi2Page"));<z>
trial);<z>
return Randi2.SUCCESS;<z>
yyStart)<z>
{<z>
Result yyResult;<z>
;<z>
;<z>
;<z>
select(yyError);<z>
yyResult.hasValue()) {<z>
semanticValue();<z>
= GNode.create("XmlETagName", v$g$1);<z>
(yyStart));<z>
yyResult.createValue(yyValue, yyError);<z>
yyError;<z>
private void addLogHeader() {<z>
{<z>
= new ArrayList();<z>
i < interfaces.length; i++) {<z>
]);<z>
i]);<z>
asyncClass != null)<z>
;<z>
classes);<z>
size()]));<z>
final Exception e) {<z>
new ECFException("Failed to create proxy", e);<z>
except);<z>
except;<z>
(final NoClassDefFoundError e) {<z>
ECFException("Failed to load proxy interface class", e);<z>
, except);<z>
;<z>
() {<z>
null) {<z>
.getName());<z>
,<z>
;<z>
return _persistence;<z>
Exception {<z>
().findByLogin(login);<z>
);<z>
);<z>
, newPassword);<z>
;<z>
);<z>
(changeNextTime) {<z>
setChangeNextTime(true);<z>
store();<z>
, final boolean includeDeleted) throws MessagingException {<z>
<Message[]>() {<z>
SQLiteDatabase db) throws WrappedException, UnavailableStorageException {<z>
);<z>
.this.getMessages(<z>
LocalFolder.this,<z>
"SELECT " + GET_MESSAGES_COLS<z>
)<z>
] {<z>
mFolderId)<z>
) {<z>
(e);<z>
;<z>
(WrappedException e) {<z>
) e.getCause();<z>
{<z>
<String>();<z>
0) {<z>
next;<z>
> 0) {<z>
files.get(pointer++));<z>
count--;<z>
return next;<z>
) {<z>
();<z>
new ArrayList<ChatMsg>();<z>
= 0;<z>
String> removed, final boolean full )<z>
() )<z>
;<z>
)<z>
);<z>
)<z>
)<z>
remove ( itemId );<z>
)<z>
info );<z>
addedOrModified != null )<z>
addedOrModified )<z>
new ItemWrapper ( this.connection, item );<z>
item.getId (), wrapper );<z>
);<z>
false );<z>
, ThreadPool threadPool, ClusterService clusterService,<z>
, SearchServiceTransportAction searchService, SearchPhaseController searchPhaseController) {<z>
);<z>
clusterService;<z>
= searchCache;<z>
this.searchService = searchService;<z>
;<z>
long newLength) {<z>
!= 0) {<z>
name + " pos " + newLength);<z>
if (synchronousMode && newLength > fileLength) {<z>
;<z>
} else {<z>
);<z>
newLength;<z>
) {<z>
);<z>
region,<z>
)<z>
{<z>
+<z>
) + " to OFFLINE state"));<z>
rt =<z>
(), serverName);<z>
;<z>
rt.toByteArray());<z>
throws SQLException {<z>
con);<z>
rs;<z>
SingleStaticImportDecl() {<z>
();<z>
components) {<z>
= true;<z>
++) {<z>
);<z>
public void startVideo(){<z>
return;<z>
();<z>
Exception e) {<z>
.printStackTrace();<z>
ownerId) {<z>
.ARTIFACT}, "{1}");<z>
expansionSetCode = "NPH";<z>
;<z>
(new TapSourceCost());<z>
(new SacrificeSourceCost());<z>
filterCreature));<z>
.addAbility(ability);<z>
ManaCostsImpl("{1}"));<z>
new TapSourceCost());<z>
ability.addCost(new SacrificeSourceCost());<z>
TargetArtifactPermanent(filterNonCreature));<z>
addAbility(ability);<z>
centimeters) {<z>
_multiply = (centimeters * 10);<z>
);<z>
;<z>
, Dimension start, Dimension end ) {<z>
this.topColor = topColor;<z>
.bottomColor = bottomColor;<z>
stroke = stroke;<z>
)) {<z>
this.start = start;<z>
{<z>
end = new Dimension( 100, true);<z>
;<z>
Lesson lesson) {<z>
;<z>
"HasTeen");<z>
, 13,20,10);<z>
VISIBLE, 20,19,10);<z>
,10,13);<z>
(INVISIBLE, 1,20,12);<z>
,20,12);<z>
19);<z>
12,9,20);<z>
(INVISIBLE, 12,18,20);<z>
INVISIBLE, 14,2,20);<z>
, 4,2,20);<z>
INVISIBLE, 11,22,22);<z>
;<z>
{<z>
instance == null) {<z>
;<z>
return instance;<z>
compatibleGetPath(VirtualFile file, VirtualFile virtualFile) {<z>
(file, virtualFile, File.separatorChar);<z>
) {<z>
Error(e);<z>
void noSelfSuppression() {<z>
= new Throwable();<z>
addSuppressed(throwable);<z>
new RuntimeException("IllegalArgumentException for self-suppresion not thrown.");<z>
) {<z>
stmt, StatementContext ctx) throws SQLException<z>
ResultSet rs;<z>
getReturnResultSet.invoke(this.stmt);<z>
Exception e) {<z>
"Unable to retrieve return result set", e, ctx);<z>
<ResultType>();<z>
i = 0;<z>
()) {<z>
(i++, rs, context));<z>
(SQLException e) {<z>
"Unable to retrieve results from returned result set", e, ctx);<z>
(<z>
ByteBuffer table,<z>
TScan scan)<z>
);<z>
.table = table;<z>
.scan = scan;<z>
{<z>
;<z>
.writeEndElement();<z>
) {<z>
);<z>
{<z>
new StreamException(e);<z>
void run() {<z>
).equals(UploadState.IN_PROGRESS)) {<z>
);<z>
.progressChanged(fileUploader);<z>
{<z>
= gradients.size();<z>
transform.prepareToEncode(context);<z>
(final Gradient gradient : gradients) {<z>
);<z>
;<z>
RefactoringStatus checkInitialConditions(final IProgressMonitor pm)<z>
{<z>
if (functionClause == null) {<z>
("No function clause was given!");<z>
else {<z>
m = new ExpressionPosRpcMessage();<z>
;<z>
)<z>
.getModuleName();<z>
= functionClause.getFunctionName();<z>
);<z>
clauseIndex = 1;<z>
!(functionClause instanceof IErlFunction)) {<z>
valueOf(functionClause.getName()<z>
);<z>
) WranglerBackendManager<z>
getRefactoringBackend().callWithParser(m,<z>
, "sssiixi", path,<z>
clauseIndex,<z>
selection.getSearchPath(),<z>
;<z>
isSuccessful()) {<z>
);<z>
());<z>
IErlRange>();<z>
else {<z>
createFatalErrorStatus(m<z>
());<z>
new RefactoringStatus();<z>
final AttributeQueryCallback callback, Serializable ... keys)<z>
= new PropertyUniqueContextCallback()<z>
Long valueId, Serializable[] resultKeyIds)<z>
;<z>
if (valueId != null)<z>
;<z>
resultKeyIds.length];<z>
.length; i++)<z>
i] != null)<z>
resultKeyIds[i]);<z>
) : null);<z>
handleAttribute(id, value, resultsKeyValues);<z>
))<z>
(<z>
Arrays.asList(resultsKeyValues) + "\n" +<z>
+ value);<z>
);<z>
dialog,<z>
sessionDescription) throws SipException {<z>
(Request.INVITE);<z>
.setContent(sessionDescription,<z>
.createContentTypeHeader(<z>
);<z>
.NAME);<z>
.setRPort();<z>
=<z>
mSipProvider.getNewClientTransaction(request);<z>
);<z>
);<z>
;<z>
(ParseException e) {<z>
;<z>
boolean initEGL(int majorVersion, int minorVersion) {<z>
{<z>
+ majorVersion + "." + minorVersion);<z>
EGLContext.getEGL();<z>
.EGL_DEFAULT_DISPLAY);<z>
[] version = new int[2];<z>
eglInitialize(dpy, version);<z>
;<z>
= 4;<z>
0;<z>
majorVersion == 2) {<z>
;<z>
) {<z>
EGL_OPENGL_ES_BIT;<z>
{<z>
EGL10.EGL_RENDERABLE_TYPE, renderableType,<z>
EGL10.EGL_NONE<z>
;<z>
];<z>
) || num_config[0] == 0) {<z>
.e("SDL", "No EGL config available");<z>
;<z>
config = configs[0];<z>
0x3098;<z>
EGL_NONE };<z>
contextAttrs);<z>
(ctx == EGL10.EGL_NO_CONTEXT) {<z>
);<z>
false;<z>
SDLActivity.mEGLContext = ctx;<z>
dpy;<z>
SDLActivity.mEGLConfig = config;<z>
SDLActivity.mGLMajor = majorVersion;<z>
SDLActivity.mGLMinor = minorVersion;<z>
();<z>
catch(Exception e) {<z>
, e + "");<z>
getStackTrace()) {<z>
.toString());<z>
createEGLSurface();<z>
return true;<z>
()<z>
check("getRollbackOnly", "EJB 3.0 FR 13.6.2.9");<z>
;<z>
.getTransaction() == null)<z>
IllegalStateException("getRollbackOnly() not allowed without a transaction.");<z>
int status = tm.getStatus();<z>
(log.isTraceEnabled())<z>
);<z>
(status)<z>
.STATUS_COMMITTED:<z>
STATUS_ROLLEDBACK:<z>
;<z>
.STATUS_MARKED_ROLLBACK:<z>
case Status.STATUS_ROLLING_BACK:<z>
true;<z>
;<z>
SystemException e)<z>
);<z>
return true;<z>
void redrawCell(Cell cell) {<z>
{<z>
.column, true));<z>
) {<z>
super(in);<z>
in = in;<z>
);<z>
;<z>
next_in = buf;<z>
.next_in_index = 0;<z>
avail_in = 0;<z>
RecognitionException {<z>
keepStackSize();<z>
().getGroup_3());<z>
alt530=2;<z>
);<z>
{<z>
1;<z>
) {<z>
1 :<z>
(FollowSets002.FOLLOW_rule__SystemType__Group_3__0_in_rule__SystemType__Group__3__Impl47626);<z>
();<z>
state._fsp--;<z>
).getGroup_3());<z>
catch (RecognitionException re) {<z>
;<z>
re);<z>
stackSize);<z>
ByteBuffer buffer)<z>
if(_underlyingDataBlock == null)<z>
;<z>
(buffer);<z>
throws Exception {<z>
= properties.getProperty(OUTPUT_PACKAGE_KEY);<z>
if (null != outputPackagePath) {<z>
logger.info("output to package: " + outputPackagePath);<z>
} else {<z>
;<z>
null != outputPath) {<z>
("output to path: " + outputPath);<z>
File outputFile = new File(outputPath);<z>
);<z>
getCanonicalPath();<z>
} else {<z>
outputConnectionString = properties<z>
(OUTPUT_CONNECTION_STRING_KEY);<z>
if (outputConnectionString == null) {<z>
"missing required property: "<z>
);<z>
)) {<z>
new UnimplementedFeatureException(<z>
);<z>
[] outputConnectionStrings = outputConnectionString<z>
CSV_SCSV_SSV_REGEX);<z>
[outputConnectionStrings.length];<z>
info("output to connection: ");<z>
.length; i++) {<z>
(<z>
);<z>
"@");<z>
+ splitStr[1]);<z>
{<z>
(this).getAccounts();<z>
.length < 1) {<z>
WelcomeMessage.showWelcomeMessage(this);<z>
finish();<z>
<BaseAccount> newAccounts;<z>
accounts.length > 0) {<z>
null || unreadAccount == null) {<z>
createSpecialAccounts();<z>
>(accounts.length +<z>
;<z>
newAccounts.add(integratedInboxAccount);<z>
);<z>
} else {<z>
BaseAccount>(accounts.length);<z>
(accounts));<z>
EMPTY_BASE_ACCOUNT_ARRAY));<z>
).setAdapter(mAdapter);<z>
if (!newAccounts.isEmpty()) {<z>
progress(Window.PROGRESS_START);<z>
clear();<z>
newAccounts) {<z>
) {<z>
;<z>
)account;<z>
this, realAccount, mListener);<z>
.countSearchMessages() && account instanceof SearchAccount) {<z>
"true");<z>
SearchAccount)account;<z>
new MessagingListener() {<z>
{<z>
, stats);<z>
});<z>
throws RecognitionException {<z>
state.backtracking==0 ) {<z>
before(grammarAccess.getXAdditiveExpressionRule());<z>
);<z>
();<z>
--;<z>
;<z>
{<z>
(grammarAccess.getXAdditiveExpressionRule());<z>
); if (state.failed) return ;<z>
(RecognitionException re) {<z>
reportError(re);<z>
;<z>
public void setConf(Configuration config) {<z>
Configuration conf = new Configuration(config);<z>
(conf);<z>
get(conf);<z>
.create(conf);<z>
();<z>
e) {<z>
().getName(), e);<z>
catch (IOException e) {<z>
), e);<z>
void setReproProb(float value)<z>
(value >= 0.0f))<z>
reproProb = value;<z>
WebParam(<z>
, RiceIllegalStateException {<z>
;<z>
(delegateMember.getDelegationMemberId()!=null ) {<z>
());<z>
getDelegationId();<z>
,"delegationId");<z>
DelegateTypeBo delegate = getKimDelegationImpl(delegationId);<z>
==null) {<z>
("the delegate does not exist: " + delegationId);<z>
getKimTypeId();<z>
= Collections.emptyList();<z>
kimTypeId);<z>
(delegateMember);<z>
.setAttributeDetails(attrBos);<z>
));<z>
public void run() {<z>
0;<z>
(true) {<z>
.currentTimeMillis();<z>
loadSeasonInfo();<z>
info("\n\n************* Stock Update Task - Begin ****************\n\n");<z>
);<z>
updateTwitterTrends();<z>
;<z>
);<z>
;<z>
info("Stock list update - end. ");<z>
applyLoanInterest();<z>
("Reset speed of stocks - begin.");<z>
stockMgr.resetSpeedOfOldStocks();<z>
("Reset speed of stocks - end.");<z>
);<z>
.loadSuggestedStocks();<z>
info("Load suggested stocks - end.");<z>
logger.info("Re-rank begin.");<z>
;<z>
);<z>
;<z>
;<z>
logger.info("Rank history update - end. ");<z>
logger.info("Mention trendy stock - begin.");<z>
;<z>
;<z>
"Remove old records - begin.");<z>
(60 * 24);<z>
logger.info("Remove old records - end.");<z>
;<z>
.info("\n\n******************** Stock Update Task - End ****************************\n\n");<z>
) {<z>
logger.error(<z>
);<z>
currentTimeMillis();<z>
= endTime - startTime;<z>
(diff < LAST_UPDATE_DIFF_MILISECONDS ) {<z>
);<z>
) {<z>
;<z>
ClassifierPerformanceEvaluator() {<z>
.ICON_PATH<z>
"ClassifierPerformanceEvaluator.gif",<z>
ICON_PATH<z>
+"ClassifierPerformanceEvaluator_animated.gif");<z>
;<z>
localToStd(String name) {<z>
.io.File.separatorChar, '/');<z>
(name.startsWith("./"))<z>
(2);<z>
(name.startsWith("/"))<z>
name = name.substring(1);<z>
;<z>
.Collection<String> autoScalingNotificationTypes) {<z>
(autoScalingNotificationTypes == null) {<z>
this.autoScalingNotificationTypes = null;<z>
else {<z>
);<z>
;<z>
autoScalingNotificationTypes = autoScalingNotificationTypesCopy;<z>
this;<z>
Exception {<z>
> children = treePos.getChildren();<z>
.size() != 3)<z>
));<z>
);<z>
.eval(symbolTable);<z>
);<z>
!= null) {<z>
return left <= right;<z>
null;<z>
) {<z>
new CcAnnouncementInfo.Destinations();<z>
).addAll(getDestinationsAsList());<z>
;<z>
resultMaps) {<z>
= resultMaps;<z>
for (ResultMap resultMap : resultMaps) {<z>
mappedStatement.hasNestedResultMaps || resultMap.hasNestedResultMaps();<z>
return this;<z>
synchronized T get() {<z>
(!mIsDone) {<z>
();<z>
} catch (InterruptedException t) {<z>
;<z>
ThriftFlumeEvent setTimestamp(long timestamp) {<z>
.timestamp = timestamp;<z>
(true);<z>
this;<z>
arg0, JCRTestContext context) throws Exception<z>
)<z>
runIterations);<z>
0; i < runIterations; i++)<z>
= context.generateUniqueName("addNamespace");<z>
;<z>
.add(prefix);<z>
static boolean isNumeric(String str) {<z>
null) return false;<z>
trim();<z>
0;<z>
len=str.length();<z>
) return false;<z>
.charAt(pos);<z>
=='+' || curr=='-') {<z>
pos) return false;<z>
(pos);<z>
;<z>
false;<z>
<len;pos++) {<z>
(pos);<z>
'0') {<z>
curr=='.') {<z>
hasDot) return false;<z>
;<z>
else return false;<z>
{<z>
|| curr=='E') {<z>
1>=len || hasExp) return false;<z>
=true;<z>
hasDot=true;<z>
return false;<z>
(hasExp){<z>
(str);<z>
true;<z>
{<z>
;<z>
return true;<z>
static Preferences userRoot() {<z>
security = System.getSecurityManager();<z>
)<z>
.checkPermission(prefsPerm);<z>
factory.userRoot();<z>
final JButton button, final boolean save )<z>
[1 ];<z>
buttons[ 0 ] = button;<z>
addButtons( buttons, save );<z>
java.io.File file, boolean encode )<z>
;<z>
null;<z>
;<z>
;<z>
;<z>
bis = new Base64.InputStream(<z>
BufferedInputStream(<z>
), encode );<z>
{<z>
){<z>
.length << 1 ];<z>
;<z>
;<z>
] = (byte)b;<z>
];<z>
;<z>
java.io.IOException e ){<z>
;<z>
); }catch( Exception e ){}<z>
return returnValue;<z>
status) {<z>
nodeToCheck;<z>
null);<z>
, _info_12389875345);<z>
parameter;<z>
argument;<z>
true)).iterator();<z>
.iterator();<z>
) {<z>
hasNext())) {<z>
.hasNext())) {<z>
next();<z>
;<z>
_nodeToCheck_1029348928467 = argument;<z>
;<z>
), false, true, _info_12389875345);<z>
).count()) {<z>
;<z>
, "1205854659855", null, errorTarget);<z>
void paintShape(mxGraphics2DCanvas canvas, mxCellState state)<z>
(canvas, state);<z>
state.getStyle(),<z>
mxConstants.STYLE_IMAGE_FLIPH, false);<z>
.getStyle(),<z>
);<z>
, state),<z>
state),<z>
;<z>
ServiceException {<z>
m_version = ctx.getVersion();<z>
== null) {<z>
throw new NullPointerException();<z>
(m_version);<z>
) {<z>
ErrorDataFactory.createErrorData(ErrorConstants.SVC_FACTORY_INVALID_VERSION_FORMAT,<z>
().getAdminName()}));<z>
yPoints, int aIndex, int bIndex) {<z>
secondLen;<z>
bIndex < aIndex) {<z>
bIndex + 1;<z>
else {<z>
;<z>
2;<z>
2][firstLen];<z>
int[2][secondLen];<z>
{<z>
% xPoints.length;<z>
][i] = xPoints[index];<z>
][i] = yPoints[index];<z>
secondLen; i++) {<z>
xPoints.length;<z>
] = xPoints[index];<z>
= yPoints[index];<z>
int[2][][];<z>
;<z>
= second;<z>
return result;<z>
public static type next(type tType) {<z>
] types = type.values();<z>
);<z>
2) {<z>
types[0];<z>
return types[ord + 1];<z>
Object doExecute() throws Exception {<z>
> realms = getRealms();<z>
();<z>
.column("Index");<z>
column("Realm Name");<z>
.column("Login Module Class Name");<z>
size() > 0) {<z>
= 1;<z>
realms) {<z>
realmName = realm.getName();<z>
);<z>
{<z>
entries.length; i++) {<z>
.get(ProxyLoginModule.PROPERTY_MODULE);<z>
realmName, moduleClass);<z>
out);<z>
return null;<z>
{<z>
+ getNumberOfPages();<z>
text);<z>
();<z>
args) {<z>
;<z>
;<z>
(Launcher.class);<z>
> 0)<z>
(args[0]);<z>
prefs.get("recent.file", null);<z>
= new JFileChooser();<z>
) {<z>
);<z>
File(fileName));<z>
) == JFileChooser.APPROVE_OPTION) {<z>
;<z>
prefs.put("recent.file", fileName);<z>
fileName);<z>
{<z>
runSafeSync(log, new Runnable() {<z>
public void run() {<z>
participants = SelectionRetrieverFactory<z>
getSelection();<z>
() == 1) {<z>
;<z>
participants.get(0)) {<z>
toFollow = null;<z>
} else {<z>
(0);<z>
);<z>
editorManager.setFollowing(toFollow);<z>
{<z>
("More than one participant selected.");<z>
);<z>
start, int offset, int[] match,<z>
int matchOffset, int matchLength) {<z>
< matchLength; i++) {<z>
match[matchOffset + i]) {<z>
;<z>
return true;<z>
ActionFactory("move",<z>
) {<z>
create(IWorkbenchWindow window) {<z>
) {<z>
;<z>
).Workbench_move);<z>
().Workbench_moveToolTip);<z>
(action);<z>
;<z>
action;<z>
setHost(String host) {<z>
"localhost")){<z>
= "127.0.0.1";<z>
this.host = host;<z>
() {<z>
WRITER_SETTINGS_PROPERTY);<z>
JenaOWLModel.WRITER_PROTEGE.equals(value)) {<z>
);<z>
new JenaWriterSettings(this);<z>
] args)<z>
]) : null;<z>
== null)<z>
.println("First argument must be the name of an example, i.e. one of "<z>
));<z>
System.exit(1);<z>
args.length - 1];<z>
, 0, appArgs.length);<z>
;<z>
appArgs});<z>
List<KaleoInstance> findByKaleoDefinitionId(long kaleoDefinitionId,<z>
)<z>
SystemException {<z>
null;<z>
[] finderArgs = null;<z>
== QueryUtil.ALL_POS) &&<z>
{<z>
;<z>
] { kaleoDefinitionId };<z>
finderPath = FINDER_PATH_WITH_PAGINATION_FIND_BY_KALEODEFINITIONID;<z>
= new Object[] {<z>
end, orderByComparator<z>
(finderPath,<z>
finderArgs, this);<z>
) {<z>
kaleoInstance : list) {<z>
getKaleoDefinitionId())) {<z>
;<z>
(list == null) {<z>
StringBundler query = null;<z>
!= null) {<z>
+<z>
length * 3));<z>
query = new StringBundler(3);<z>
.append(_SQL_SELECT_KALEOINSTANCE_WHERE);<z>
);<z>
null) {<z>
query, _ORDER_BY_ENTITY_ALIAS,<z>
);<z>
append(KaleoInstanceModelImpl.ORDER_BY_JPQL);<z>
sql = query.toString();<z>
session = null;<z>
();<z>
.createQuery(sql);<z>
QueryPos.getInstance(q);<z>
kaleoDefinitionId);<z>
getDialect(),<z>
start, end);<z>
{<z>
processException(e);<z>
== null) {<z>
.removeResult(finderPath, finderArgs);<z>
;<z>
, list);<z>
);<z>
return list;<z>
(Assessment assessmentXml,<z>
feedback)<z>
feedbackDelivery = feedback.getFeedbackDelivery();<z>
(feedback.FEEDBACK_BY_DATE.equals(feedbackDelivery))<z>
"FEEDBACK_DELIVERY", "DATED");<z>
feedback.IMMEDIATE_FEEDBACK.equals(feedbackDelivery))<z>
setFieldentry("FEEDBACK_DELIVERY", "IMMEDIATE");<z>
.FEEDBACK_ON_SUBMISSION.equals(feedbackDelivery))<z>
, "ON_SUBMISSION");<z>
);<z>
);<z>
equals(feedbackComponentOption))<z>
"SELECT_COMPONENTS");<z>
);<z>
;<z>
QUESTIONLEVEL_FEEDBACK.equals(feedbackAuthoring))<z>
);<z>
))<z>
, "SECTION");<z>
, "BOTH");<z>
"FEEDBACK_SHOW_QUESTION",<z>
()));<z>
setFieldentry("FEEDBACK_SHOW_RESPONSE",<z>
(feedback.<z>
)));<z>
assessmentXml.setFieldentry("FEEDBACK_SHOW_CORRECT_RESPONSE",<z>
qtiBooleanString(feedback.<z>
));<z>
("FEEDBACK_SHOW_STUDENT_SCORE",<z>
(feedback.getShowStudentScore()));<z>
setFieldentry("FEEDBACK_SHOW_STUDENT_QUESTIONSCORE",<z>
)));<z>
,<z>
(feedback.<z>
getShowQuestionLevelFeedback()));<z>
.setFieldentry("FEEDBACK_SHOW_SELECTION_LEVEL",<z>
(feedback.<z>
)));<z>
,<z>
);<z>
,<z>
);<z>
() {<z>
doRequest()) {<z>
;<z>
} else {<z>
return -1;<z>
(UUID ownerId) {<z>
super(ownerId);<z>
.cardNumber = 20;<z>
expansionSetCode = "MPR";<z>
final File file, final String pidString)<z>
{<z>
pidString.length() == 0) {<z>
return new ArrayList<Long>(0);<z>
",");<z>
ArrayList<Long>(pidParts.length);<z>
pidParts) {<z>
.parseLong(part));<z>
final NumberFormatException nfe) {<z>
(<z>
+ ". Check the file contents and delete the file before retrying.",<z>
nfe);<z>
;<z>
Exception{<z>
1,filePath.lastIndexOf("."));<z>
remoteOutputDir + remoteFilePath;<z>
pLocalPath = new Path(filePath);<z>
pRemoteFilePath = new Path(remoteFilePath + ".chukwa");<z>
, pRemoteFilePath);<z>
pFinalRemoteFilePath = new Path(remoteFilePath + ".done");<z>
pRemoteFilePath, pFinalRemoteFilePath)) {<z>
localFs.delete(pLocalPath,false);<z>
.info("move done deleting from local: " + pLocalPath);<z>
{<z>
pFinalRemoteFilePath);<z>
catch(FileNotFoundException ex) {<z>
);<z>
Exception e) {<z>
e);<z>
e;<z>
type)<z>
);<z>
())<z>
() == type.getClass())<z>
(field);<z>
return results;<z>
, String method, String url,<z>
OAuthException {<z>
, parameters);<z>
catch (IOException e) {<z>
);<z>
) {<z>
throw new OAuthException(e);<z>
{<z>
100);<z>
);<z>
().length() == 0) {<z>
getClass().getSimpleName());<z>
{<z>
(customJobName);<z>
);<z>
));<z>
toString();<z>
final void rule__XBlockExpression__Group__0__Impl() throws RecognitionException {<z>
);<z>
{<z>
.getXBlockExpressionAccess().getXBlockExpressionAction_0());<z>
state.backtracking==0 ) {<z>
.getXBlockExpressionAction_0());<z>
);<z>
) {<z>
) {<z>
InvalidParameterException<z>
("Key length must be at least 40 bits");<z>
keySize = keysize;<z>
this.random = random;<z>
) {<z>
(!(x instanceof LinkCondition))<z>
;<z>
targetSet.equals(targetSet);<z>
void setApproveButtonToolTipText(String text)<z>
(approveButton != null)<z>
);<z>
);<z>
, int k) {<z>
world;<z>
x = i;<z>
;<z>
z = k;<z>
));<z>
int l;<z>
3; ++l) {<z>
i1) {<z>
);<z>
++l) {<z>
8 + l * 18, 142));<z>
.bukkitEntity;<z>
enchantSlots.player = player;<z>
addEdgeMetricsDefinition() {<z>
{<z>
.run(this, null);<z>
signalled) {<z>
0);<z>
= new Integer(-1);<z>
R toElement) {<z>
toElement);<z>
, C, V>(<z>
;<z>
public void setInitValue(short s) {<z>
SHORT);<z>
0)<z>
;<z>
destination)<z>
WSSException {<z>
location);<z>
= cleanLocation(destination);<z>
resolveLocation(location);<z>
if (model == null) {<z>
WSSException(<z>
;<z>
(destination);<z>
, new PathRef(<z>
)),<z>
());<z>
createItem(doc);<z>
(ClientException e) {<z>
throw new WSSException("Error during move document", e);<z>
void initializeFileListView() {<z>
);<z>
LinearLayout.LayoutParams lParam =<z>
, LayoutParams.FILL_PARENT);<z>
15, 5, 15, 5);<z>
.setAdapter(this.adapter);<z>
(<z>
() {<z>
int position, long id) {<z>
file;<z>
+ "/" + chosenFile);<z>
, "Clicked:"+chosenFile);<z>
.isDirectory()) {<z>
sel.canRead()) {<z>
.add(chosenFile);<z>
;<z>
(LOGTAG, "Just reloading the list");<z>
);<z>
;<z>
updateCurrentDirectoryTextView();<z>
, path.getAbsolutePath());<z>
{<z>
("Path does not exist or cannot be read");<z>
.d(LOGTAG, "File selected:"+chosenFile);<z>
));<z>
public boolean equals(Object o) {<z>
beforeRead();<z>
c_.equals(o);<z>
;<z>
data) {<z>
;<z>
LoadedApk packageInfo = getPackageInfoNoCheck(data.appInfo);<z>
packageName = packageInfo.mPackageName;<z>
packageName);<z>
null) {<z>
();<z>
} catch (Exception e) {<z>
(TAG, "Exception thrown in onDestroy by backup agent of " + data.appInfo);<z>
);<z>
.remove(packageName);<z>
{<z>
TAG, "Attempt to destroy unknown backup agent " + data);<z>
protected AbstractDCIInvocationHandler(T domainObject){<z>
this.domainObject = domainObject;<z>
()) {<z>
.add(method);<z>
Object child1)<z>
child1);<z>
= (VarSet) parent1;<z>
child = (VarSet) child1;<z>
(child);<z>
parent);<z>
);<z>
(sepset, newSepsetPtl (sepset)));<z>
ExtensionPointRegistry registry, StAXArtifactProcessor processor) {<z>
= registry.getExtensionPoint(FactoryExtensionPoint.class);<z>
;<z>
modelFactories.getFactory(XSDFactory.class);<z>
= modelFactories.getFactory(XMLInputFactory.class);<z>
);<z>
)<z>
System.out.println("<xri-path-abs>");<z>
System.out.println("");<z>
.println("</xri-path-abs>");<z>
FALSE;<z>
,<z>
{<z>
.getAlternateGridColor() != null) {<z>
axis<z>
);<z>
.getEndOnTick() != null) {<z>
);<z>
.getGrid() != null) {<z>
;<z>
().length() > 0) {<z>
getId());<z>
() != null) {<z>
());<z>
null) {<z>
getLineWidth());<z>
axis.getLinkedTo() != null) {<z>
,<z>
;<z>
{<z>
);<z>
axis.getMaxZoom() != null) {<z>
.getMaxZoom());<z>
{<z>
"minPadding", axis.getMinPadding());<z>
(axis.getMinorGrid() != null) {<z>
;<z>
getMinorTick() != null) {<z>
));<z>
{<z>
));<z>
.getOpposite() != null) {<z>
.getOpposite());<z>
null) {<z>
"reversed", axis.getReversed());<z>
) {<z>
"showFirstLabel", axis.getShowFirstLabel());<z>
() != null) {<z>
"showLastLabel", axis.getShowLastLabel());<z>
getStartOfWeek() != null) {<z>
getStartOfWeek().ordinal());<z>
{<z>
);<z>
axis.getTick() != null) {<z>
axis.getTick());<z>
!= null) {<z>
.getName());<z>
());<z>
() instanceof XAxisDataLabel) {<z>
;<z>
{<z>
));<z>
{<z>
) axis).getPlotBands());<z>
;<z>
} else if (axis instanceof DateTimeAxis) {<z>
getPlotBands());<z>
;<z>
(axis instanceof CategoryAxis) {<z>
getPlotBands());<z>
));<z>
parseExtension (XmlPullParser parser) throws Exception {<z>
eventType = parser.getEventType();<z>
new QueueOverview();<z>
eventType != XmlPullParser.START_TAG) {<z>
();<z>
.END_TAG)<z>
)<z>
)) {<z>
()));<z>
.getName())) {<z>
)));<z>
parser.getName())) {<z>
));<z>
parser.getName())) {<z>
nextText()));<z>
);<z>
{<z>
if (eventType != XmlPullParser.END_TAG) {<z>
;<z>
,<z>
,<z>
int skip ) {<z>
] dataSrc = input.data;<z>
float[] dataDst = output.data;<z>
.data[0];<z>
];<z>
;<z>
();<z>
width,skip,radius);<z>
height = input.getHeight();<z>
radius);<z>
; i < height; i++ ) {<z>
/skip;<z>
i*input.stride - radius;<z>
int jEnd = j+widthEnd;<z>
+= skip ) {<z>
int indexSrc = j;<z>
;<z>
])*k2;<z>
indexSrc])*k3;<z>
] = total;<z>
metric) {<z>
metric;<z>
"======================================================================");<z>
metric);<z>
;<z>
createOrchestratable(PRPAIN201305UV02 message,<z>
target, NhincConstants.GATEWAY_API_LEVEL gatewayLevel) {<z>
;<z>
);<z>
OutboundPatientDiscoveryOrchestratable orchestratable = new OutboundPatientDiscoveryOrchestratable(nd, np,<z>
.PATIENT_DISCOVERY_SERVICE_NAME, target, message);<z>
return orchestratable;<z>
DeleteActionRowCallbackHandler(<z>
ChangesetWriter writer,<z>
final String idColumn,<z>
providerColumn,<z>
kindColumn,<z>
ProgressLogger progress)<z>
writer = writer;<z>
this.providerColumn = providerColumn;<z>
kindColumn = kindColumn;<z>
progress = progress;<z>
;<z>
> a) {<z>
Double.NEGATIVE_INFINITY;<z>
double d : a) {<z>
d > max) {<z>
;<z>
max;<z>
, final boolean add) throws IOException {<z>
+ (add ? "adding some items"<z>
"removing items added before"));<z>
]);<z>
0) {<z>
String line) {<z>
) {<z>
" " +<z>
line.length() + " " + line;<z>
.replaceAll("^\\s*\\d+\\s+\\d+\\s+\\d+\\s+", "");<z>
(line);<z>
;<z>
input.close();<z>
;<z>
.getNumLines() + " lines were read/modified/written");<z>
) throws Exception {<z>
FAQUtils.getFAQService();<z>
;<z>
(UIQuestions.class);<z>
(id)) {<z>
);<z>
id);<z>
);<z>
updateCurrentQuestionList();<z>
.class);<z>
(id);<z>
UICategories.class);<z>
setPathCategory(id);<z>
).addUIComponentToUpdateByAjax(breadcumbs);<z>
class);<z>
.getRequestContext().addUIComponentToUpdateByAjax(fAQContainer);<z>
.cancelAction();<z>
) {<z>
;<z>
.get("path.home") != null) {<z>
(settings.get("path.home")));<z>
} else {<z>
"user.dir"));<z>
{<z>
)));<z>
} else {<z>
= new File(homeFile, "config");<z>
{<z>
));<z>
{<z>
new File(homeFile, "plugins");<z>
("path.work") != null) {<z>
));<z>
else {<z>
);<z>
clusterNameFromSettings(settings).value());<z>
;<z>
0) {<z>
new File[dataPaths.length];<z>
[dataPaths.length];<z>
.length; i++) {<z>
new File(dataPaths[i]);<z>
clusterNameFromSettings(settings).value());<z>
{<z>
{new File(homeFile, "data")};<z>
};<z>
"path.logs") != null) {<z>
);<z>
{<z>
= new File(homeFile, "logs");<z>
public void setClip(String newClip) {<z>
clip;<z>
;<z>
))<z>
;<z>
public void setControlDigits(String forwardDigit, String rewindDigit,<z>
)<z>
= forwardDigit;<z>
this.rewindDigit = rewindDigit;<z>
;<z>
IOException {<z>
eof ) {<z>
;<z>
= inputStream.read();<z>
< 0 ) {<z>
eof = true;<z>
true;<z>
b);<z>
;<z>
public void updateItemLayout()<z>
itemLayout == R.layout.album_row)<z>
.layout.album_row_alternate);<z>
.album_row);<z>
public void updateNCharacterStream(int columnIndex,<z>
.io.Reader x,<z>
length)<z>
SQLException {<z>
.toString());<z>
, Custom> customs) {<z>
version;<z>
this.metaData = metaData;<z>
;<z>
.nodes = nodes;<z>
= blocks;<z>
.allocationExplanation = allocationExplanation;<z>
customs;<z>
config) throws ConfigurationException{<z>
);<z>
config.getClassLoader());<z>
)) {<z>
ConfigurationException(<z>
+ cname<z>
" does not implement " + klass.getName()<z>
);<z>
null) {<z>
.warn("{} has been deprecated", cname);<z>
);<z>
(ClassNotFoundException e) {<z>
(<z>
"Configured bean implementation class " + cname<z>
, e);<z>
catch (InstantiationException e) {<z>
throw new ConfigurationException(<z>
cname<z>
;<z>
} catch (IllegalAccessException e) {<z>
(<z>
"Configured bean implementation class " + cname<z>
);<z>
, int numberStyle) {<z>
) {<z>
null;<z>
(numbers.size(), numberDepth);<z>
) {<z>
return title;<z>
new StringBuffer(" ");<z>
i++) {<z>
".");<z>
get(i).intValue());<z>
if (numberStyle == NUMBERSTYLE_DOTTED_WITHOUT_FINAL_DOT) {<z>
) - 2);<z>
= new Paragraph(title);<z>
title.getFont()));<z>
return result;<z>
Exception<z>
null;<z>
InputStream is = null;<z>
(fileName);<z>
props = new Properties();<z>
is);<z>
if (is != null)<z>
;<z>
props;<z>
isAutoPairingBlacklisted(String address) {<z>
if (mAutoPairingAddressBlacklist != null) {<z>
(String blacklistAddress : mAutoPairingAddressBlacklist) {<z>
address.startsWith(blacklistAddress)) return true;<z>
{<z>
(String blacklistAddress: mAutoPairingDynamicAddressBlacklist) {<z>
equals(blacklistAddress)) return true;<z>
;<z>
if (name != null) {<z>
(mAutoPairingExactNameBlacklist != null) {<z>
: mAutoPairingExactNameBlacklist) {<z>
blacklistName)) return true;<z>
if (mAutoPairingPartialNameBlacklist != null) {<z>
: mAutoPairingPartialNameBlacklist) {<z>
;<z>
false;<z>
createLogDirectory() {<z>
.getProperty("hama.log.dir") + File.separator<z>
());<z>
!f.exists()) {<z>
);<z>
return f;<z>
void fnCountintg1args2() {<z>
(<z>
);<z>
);<z>
;<z>
"1")<z>
dataDir) throws IOException {<z>
);<z>
;<z>
; i < NUM_BUCKETS; i++) {<z>
;<z>
()) {<z>
getSchema();<z>
().size();<z>
1) {<z>
1).add(elt);<z>
} else {<z>
;<z>
TryStatement node) {<z>
"try ");<z>
{<z>
resources().isEmpty()) {<z>
;<z>
.hasNext();) {<z>
= it.next();<z>
accept(this);<z>
if (it.hasNext()) {<z>
.fBuffer.append(",");<z>
this.fBuffer.append(") ");<z>
this);<z>
(" ");<z>
it.hasNext();) {<z>
);<z>
cc.accept(this);<z>
.getFinally() != null) {<z>
;<z>
.getFinally().accept(this);<z>
;<z>
(URL page) {<z>
().getProperty("title");<z>
( t == null ) {<z>
(page.toString());<z>
return false;<z>
));<z>
true;<z>
String characterEncodingScheme,<z>
systemId, String version,<z>
isStandalone, boolean standaloneSet)<z>
= encodingSet;<z>
_characterEncodingScheme = characterEncodingScheme;<z>
_systemId = systemId;<z>
_version = version;<z>
_isStandalone = isStandalone;<z>
;<z>
HMSHandler handler) {<z>
(status, handler);<z>
this.table = table;<z>
{<z>
;<z>
) {<z>
;<z>
FOLLOW_ruleValidID_in_rule__XSwitchExpression__LocalVarNameAssignment_2_0_0_0_029241);<z>
;<z>
._fsp--;<z>
(state.failed) return ;<z>
state.backtracking==0 ) {<z>
;<z>
) {<z>
(re);<z>
(input,re);<z>
stackSize);<z>
(<z>
Element userBanElement,<z>
)<z>
throws Exception {<z>
;<z>
.createServiceContext(<z>
, ban, _NAMESPACE);<z>
= UserUtil.findByUuid_C(<z>
.getCompanyId());<z>
();<z>
hasNext()) {<z>
.next();<z>
addBan(<z>
;<z>
error(<z>
ban.getBanUserUuid());<z>
, int i, char[] cs)<z>
;<z>
[i++];<z>
;<z>
;<z>
i;<z>
(<z>
remindBy,<z>
.portal.kernel.util.OrderByComparator orderByComparator)<z>
portal.kernel.exception.SystemException,<z>
portlet.calendar.NoSuchEventException {<z>
()<z>
remindBy, orderByComparator);<z>
JERepositoryDatabase(final Environment repositoryEnvironment,<z>
) {<z>
this.repositoryEnvironment = repositoryEnvironment;<z>
= stagingEnvironment;<z>
= new JEObjectDatabase(repositoryEnvironment);<z>
(repositoryObjectDb);<z>
JEObjectDatabase(stagingEnvironment);<z>
(repositoryObjectDb, stagingObjectDb,<z>
;<z>
ConfigurationNode getNode(String path) {<z>
;<z>
v);<z>
(v == null)<z>
;<z>
;<z>
)<z>
)<z>
case ErlangPackage.FUN_EXPR__CLAUSES:<z>
.isEmpty();<z>
);<z>
, Attributes attributes ){<z>
();<z>
role = attributes.getRole( attribute );<z>
name.startsWith( "@" ) ){<z>
return "@" + name;<z>
name;<z>
geoServer, Map kvp) {<z>
);<z>
null ) {<z>
Boolean.FALSE;<z>
isCiteCompliant() ) {<z>
= Boolean.TRUE;<z>
());<z>
new WFSURIHandler(geoServer));<z>
getCatalog();<z>
> namespaces = catalog.getNamespaces();<z>
NamespaceInfo ns : namespaces ) {<z>
) ) )<z>
getNamespaces().declarePrefix(<z>
);<z>
width, final double height) {<z>
minX = x;<z>
;<z>
;<z>
thickness = height;<z>
{<z>
node, ")");<z>
"Constant_c8zmgk_d0");<z>
= editorCell.getStyle();<z>
(StyleAttributes.PUNCTUATION_LEFT, true);<z>
.PLAIN);<z>
);<z>
;<z>
Object> roadPropertyValues) {<z>
getTagsN(node);<z>
(roadPropertyValues, nodeTags);<z>
showGuiScreen(Object clientGuiElement)<z>
clientGuiElement;<z>
displayGuiScreen(gui);<z>
) {<z>
null)<z>
null;<z>
)<z>
;<z>
toDateWithFormatString(date, FACEBOOK_LONG_DATE_FORMAT);<z>
if (parsedDate == null)<z>
toDateWithFormatString(date, FACEBOOK_LONG_DATE_FORMAT_WITHOUT_TIMEZONE);<z>
return parsedDate;<z>
WebServicesKey getWebServicesKeyWithEmail(String email) {<z>
= "from org.tolweb.hibernate.WebServicesKey s where s.userEmail=?";<z>
[1];<z>
] = email;<z>
, args);<z>
null) {<z>
WebServicesKey)results.get(0);<z>
;<z>
catch (Exception e) {<z>
printStackTrace();<z>
null;<z>
item) {<z>
.getItemId()) {<z>
case MENU_SETTINGS:<z>
class));<z>
;<z>
;<z>
(StringBuilder sb) {<z>
())<z>
;<z>
);<z>
sb.append("\"/>\n");<z>
) {<z>
"\t<forceReflexAngle val=\"");<z>
append(true);<z>
sb.append("\"/>\n");<z>
,<z>
, final ItemDataConsumer targetDataManager, final String owner,<z>
RepositoryException<z>
PlainChangesLogImpl changes = new PlainChangesLogImpl();<z>
InternalQName>();<z>
for (final NodeDefinitionData ndef : nodeDefs)<z>
if (ndef.isAutoCreated())<z>
=<z>
parent, new QPathEntry(<z>
ItemType.NODE, false);<z>
.isNode())<z>
TransientNodeData childNodeData =<z>
(),<z>
.generate());<z>
)<z>
= true;<z>
ItemState.createAddedAutoCreatedNodes(parent));<z>
, false));<z>
(),<z>
getAllStates());<z>
());<z>
LOG.isDebugEnabled())<z>
().getAsString()<z>
+ typeName.getAsString()<z>
;<z>
changes;<z>
dynamicdatamapping.model.DDMContent> getContents(<z>
int start, int end)<z>
exception.SystemException {<z>
;<z>
ObjectWithIE(String ie, String estado) {<z>
;<z>
ie;<z>
= estado;<z>
() {<z>
isDebugEnabled()) {<z>
debug("******* Starting the sample installer worker for " +<z>
.tenantDomain + " *******");<z>
, this.tenantDomain);<z>
, System.nanoTime());<z>
} catch (CarbonException e) {<z>
.sampleName +<z>
+ this.tenantDomain;<z>
e);<z>
long limit)<z>
{<z>
spaceFilter, SpaceType.VISIBLE);<z>
;<z>
= spacesCache.get(<z>
{<z>
public ListSpacesData execute() {<z>
);<z>
(got);<z>
;<z>
keys);<z>
int hashCode() {<z>
31;<z>
result = 1;<z>
prime * result + ((lower == null)<z>
());<z>
+ ((upper == null)<z>
hashCode());<z>
;<z>
throws IllegalStateException, IllegalArgumentException {<z>
changesetId == changesetId)<z>
)<z>
;<z>
isNew() && changesetId > 0)<z>
, changesetId));<z>
= this.changesetId;<z>
changesetId = changesetId;<z>
) {<z>
(this, old, changesetId);<z>
{<z>
{<z>
;<z>
();<z>
) {<z>
if (e instanceof MBeanException ||<z>
instanceof RuntimeMBeanException ||<z>
||<z>
) {<z>
.getCause();<z>
!= null) return t;<z>
;<z>
void setService(DDMStructureService service) {<z>
class);<z>
= service;<z>
.class,<z>
"_service");<z>
(DDMStructureService.class);<z>
outputFileName, List<Entry> data) {<z>
data);<z>
true, false);<z>
.getPlot();<z>
DecimalFormat("0.00%")));<z>
"{0}={1}({2})"));<z>
chart.setBackgroundPaint(Color.white);<z>
);<z>
(true);<z>
20);<z>
TextTitle(name);<z>
;<z>
(title);<z>
= null;<z>
new FileOutputStream(outputFileName);<z>
, 640, 480, null);<z>
{<z>
e.printStackTrace();<z>
catch (IOException e) {<z>
.printStackTrace();<z>
} finally {<z>
if(output != null) {<z>
;<z>
e) {<z>
e.printStackTrace();<z>
(ScriptSession scriptSession)<z>
;<z>
();<z>
i -= 2)<z>
i] == ScriptSessionListener.class)<z>
ev == null)<z>
);<z>
ev);<z>
void aboutMenuClicked(final ID sender) {<z>
.dictionaryWithObjectsForKeys(<z>
NSArray.arrayWithObjects(<z>
("CFBundleShortVersionString").toString(),<z>
toString()),<z>
(<z>
).orderFrontStandardAboutPanelWithOptions(dict);<z>
private DSLVariableValue parseValue(String variable) {<z>
{<z>
;<z>
String value = variable.substring( 0,<z>
":" ) );<z>
( ":" )+1);<z>
return new DSLComplexVariableValue(id, value);<z>
()<z>
!= ThrowableDeserializer.class) {<z>
;<z>
(this, true);<z>
public void setup() {<z>
GLConstants.GLGRAPHICS);<z>
= new UnfoldingMap(this);<z>
.setTweening(false);<z>
, 13);<z>
;<z>
eventDispatcher = new EventDispatcher();<z>
new TuioCursorHandler(this, false, map);<z>
addBroadcaster(tuioCursorHandler);<z>
.register(map, "pan");<z>
, "zoom");<z>
.getTuioClient();<z>
this);<z>
.impl.ProtobufMessages.ActionQueue.SignalProcessInstance parseFrom(<z>
data,<z>
.google.protobuf.ExtensionRegistryLite extensionRegistry)<z>
.google.protobuf.InvalidProtocolBufferException {<z>
).mergeFrom(data, extensionRegistry)<z>
();<z>
public static boolean isAutoDeleteEnabled(Context context) {<z>
getDefaultSharedPreferences(context);<z>
prefs.getBoolean(MessagingPreferenceActivity.AUTO_DELETE,<z>
);<z>
request) {<z>
String designerwebBaseUrl = null;<z>
if (request != null) {<z>
getServerPort();<z>
0) {<z>
WorkflowUtil.getSystemSetupValue("designerwebBaseUrl");<z>
{<z>
- 1);<z>
;<z>
semanticAdapter, View containerView,<z>
index, boolean persisted,<z>
PreferencesHint preferencesHint) {<z>
domainElement = getSemanticElement(semanticAdapter);<z>
final int visualID;<z>
{<z>
= AIPVisualIDRegistry.getNodeVisualID(containerView,<z>
);<z>
else {<z>
AIPVisualIDRegistry.getVisualID(semanticHint);<z>
{<z>
:<z>
return createParticipant_2003(domainElement, containerView, index,<z>
persisted, preferencesHint);<z>
case ProtocolEditPart.VISUAL_ID:<z>
,<z>
persisted, preferencesHint);<z>
return null;<z>
{<z>
p : participants) {<z>
.prepare();<z>
, boolean par6) {<z>
) {<z>
par2 < 0) {<z>
false;<z>
{<z>
return false;<z>
} else {<z>
;<z>
par4, par5);<z>
);<z>
.updateAllLightTypes(par1, par2, par3);<z>
theProfiler.endSection();<z>
this.isRemote || var7.deferRender)) {<z>
markBlockNeedsUpdate(par1, par2, par3);<z>
var8;<z>
else {<z>
;<z>
<ParseType> token) throws BadTokenException<z>
() : -1)<z>
:<z>
);<z>
tokenStack.addFirst(token);<z>
true;<z>
new Object[] {NAME});<z>
roleName) throws UserStoreException {<z>
{<z>
roleName);<z>
else {<z>
(roleName)) {<z>
.deleteHybridRole(roleName);<z>
} else {<z>
getAdminRoleName().equals(roleName)) {<z>
("Cannot delete admin role");<z>
) {<z>
;<z>
String sqlStmt1 = realmConfig<z>
getUserStoreProperty(JDBCRealmConstants.ON_DELETE_ROLE_REMOVE_USER_ROLE);<z>
if (sqlStmt1 == null) {<z>
(<z>
;<z>
DELETE_ROLE);<z>
== null) {<z>
new UserStoreException("The sql statement for delete role is null");<z>
dbConnection = null;<z>
);<z>
) {<z>
tenantId,<z>
;<z>
sqlStmt2, roleName, tenantId);<z>
} else {<z>
);<z>
, roleName);<z>
getAuthorizationManager().clearRoleAuthorization(roleName);<z>
;<z>
e) {<z>
.getMessage(), e);<z>
"Using sql : " + sqlStmt1);<z>
.getMessage(), e);<z>
} finally {<z>
DatabaseUtil.closeAllConnections(dbConnection);<z>
tenantId);<z>
static float nextUp(float f) {<z>
) {<z>
;<z>
} else {<z>
;<z>
(Float.floatToRawIntBits(f)<z>
-1 : 1));<z>
handle_bar(Attributes meta) throws SAXException {<z>
"class");<z>
id = meta.getValue("id");<z>
;<z>
(clazz);<z>
blackboard, id, _);<z>
_);<z>
void textChange(TextChangeEvent event) {<z>
setDirty(true);<z>
)!=translated || currentItem == null)<z>
);<z>
.setValue(event.getText());<z>
;<z>
{<z>
msg = MessageFormat.format(<z>
"The request \"{0}\" is not recognized by the Gitblit server.", request.name());<z>
JOptionPane.ERROR_MESSAGE);<z>
<String> ports, String defaultSelectedPort) {<z>
(ports);<z>
();<z>
changeDetected) {<z>
++) {<z>
) getItemAt(i);<z>
contains(port)) {<z>
true;<z>
) {<z>
TreeSet<String>();<z>
(); i++) {<z>
i));<z>
(String port : ports) {<z>
.contains(port)) {<z>
;<z>
changeDetected) {<z>
String) getSelectedItem();<z>
null) {<z>
= defaultSelectedPort;<z>
();<z>
()) {<z>
ports) {<z>
(port);<z>
{<z>
(selectedPort);<z>
);<z>
{<z>
(0);<z>
(String) getItemAt(0));<z>
throws PortletException, IOException {<z>
;<z>
renderRequest));<z>
(PortalException e) {<z>
();<z>
e) {<z>
);<z>
();<z>
session.getAttribute(KEY);<z>
()) {<z>
markups);<z>
} else {<z>
ArrayList<Markup>();<z>
for (Markup markup : markups) {<z>
(markup.getId())) {<z>
);<z>
else {<z>
;<z>
, unsavedMarkups);<z>
.removeAttribute(KEY);<z>
include(viewJSP, renderRequest, renderResponse);<z>
Action enterKeyAction) {<z>
(searchCategory) {<z>
:<z>
;<z>
case VIDEO:<z>
;<z>
throw new IllegalArgumentException("Search category not supported");<z>
void eUnset(int featureID) {<z>
{<z>
RENDERED_MENU__CONTRIBUTION_MANAGER:<z>
CONTRIBUTION_MANAGER_EDEFAULT);<z>
);<z>
[] getContributionItems() {<z>
getParameterValues();<z>
CommandContributionItem[typeParams.size()];<z>
int i = 0;<z>
{<z>
typeParams.get(typeName);<z>
final CommandContributionItemParameter contributionParameter = new CommandContributionItemParameter(PlatformUI<z>
.getWorkbench().getActiveWorkbenchWindow(), "de.tud.cs.st.vespucci.diagram.menuItems.SetConstraintType_"<z>
typeName, "de.tud.cs.st.vespucci.diagram.SetDependencyConstraint", CommandContributionItem.STYLE_PUSH);<z>
String, String>(1);<z>
parameter.put("de.tud.cs.st.vespucci.diagram.SetConstraintTypeParam", typeName);<z>
;<z>
;<z>
type);<z>
[i] = new CommandContributionItem(contributionParameter);<z>
i;<z>
return entries;<z>
(Context context) {<z>
, context.getContentResolver().query(<z>
Contacts.CONTENT_URI,<z>
" IS NOT NULL AND " +<z>
" NOT LIKE '%@%'",<z>
));<z>
{<z>
(keyCode == KeyEvent.KEYCODE_SEARCH) {<z>
inputMethodManager = (InputMethodManager) this<z>
.INPUT_METHOD_SERVICE);<z>
(getListView().getWindowToken(),<z>
;<z>
;<z>
} else {<z>
return super.onKeyUp(keyCode, event);<z>
public ParcelableDirectMessage getDirectMessage(final int position) {<z>
Cursor item = getItem(position);<z>
account_id);<z>
.getLong(mIndices.message_id);<z>
;<z>
(final boolean knownSize) {<z>
{<z>
ZipArchiveOutputStream zos)<z>
throws IOException {<z>
.setUseZip64(Zip64Mode.Never);<z>
byte[ONE_MILLION];<z>
);<z>
knownSize) {<z>
zae.setSize(FIVE_BILLION);<z>
zae.setMethod(ZipEntry.DEFLATED);<z>
);<z>
;<z>
< FIVE_BILLION / 1000 / 1000;<z>
{<z>
;<z>
();<z>
;<z>
{<z>
().startsWith("0's size"));<z>
) {<z>
0, value.length()));<z>
< imports.length; ix++) {<z>
);<z>
);<z>
out.println();<z>
Erwachsener getMutter()<z>
)<z>
)mutter;<z>
mutter = (Erwachsener)eResolveProxy(oldMutter);<z>
(mutter != oldMutter)<z>
eNotificationRequired())<z>
oldMutter, mutter));<z>
return mutter;<z>
private String parseTagFunction(Tokens tokens) {<z>
,tokens.getCurrentOffset());<z>
) {<z>
getNextToken();<z>
&& inComment(tokens)) {<z>
isComment(tokens)) commentCount++;<z>
(isEndComment(tokens)) commentCount--;<z>
) {<z>
getNextToken();<z>
.lastElement();<z>
"cfset") == 0) {<z>
= parseCfsetTag(tokens);<z>
) {<z>
(tokens);<z>
(tags.isReturnTag(currentToken)) {<z>
= currentToken;<z>
,String> attributes = parseAttributes(tokens);<z>
);<z>
!= 0) {<z>
;<z>
== 0) {<z>
"Debug");<z>
currentWarning);<z>
currentToken;<z>
String filter)<z>
Restrictions.conjunction();<z>
(Role.NAME_PROPERTY, filter));<z>
filterConjunction;<z>
> findByCompanyId(<z>
end)<z>
SystemException {<z>
.findByCompanyId(companyId, start, end);<z>
<NewsEvent> events) {<z>
);<z>
for (NewsEvent event : events) {<z>
event.getEntity().isVisible())<z>
)))<z>
.add(event);<z>
return filteredEvents;<z>
{<z>
composite, SWT.CHECK);<z>
get().WorkbenchPreference_allowInplaceEditingButton);<z>
(!getAPIPreferenceStore().getBoolean(<z>
;<z>
;<z>
public void stop() {<z>
;<z>
MessagingException e) {<z>
"Failed to stop mail transport", e);<z>
TokenizedCharSequence createFrom(CharSequence text,<z>
{<z>
);<z>
tokenizer.getAttribute(CharSequenceTermAttribute.class);<z>
tokenizer.getAttribute(TokenTypeAttribute.class);<z>
;<z>
) {<z>
tokenizer.getAttribute(PartOfSpeechAttribute.class);<z>
(text);<z>
)) {<z>
termAttr.getLength(),<z>
.getType(),<z>
posAttr.getPOS());<z>
);<z>
) {<z>
== 0) {<z>
(_length + 1);<z>
] = (byte) v;<z>
;<z>
return this;<z>
cloneForSpatial(Spatial spatial) {<z>
ItemControl control = new ItemControl();<z>
setSpatial(spatial);<z>
setEnabled(isEnabled());<z>
return control;<z>
private static String getGeneratedFileName(final SNode project) {<z>
._T<IFile>();<z>
runReadAction(new Runnable() {<z>
() {<z>
()));<z>
;<z>
);<z>
value.getPath();<z>
{<z>
(getState() != DifferenceState.UNRESOLVED) {<z>
;<z>
!= null) {<z>
) {<z>
equivalent.setState(DifferenceState.MERGED);<z>
{<z>
false);<z>
{<z>
case ADD:<z>
);<z>
case DELETE:<z>
false);<z>
:<z>
false);<z>
:<z>
{<z>
removeFromTarget(false);<z>
{<z>
;<z>
} else {<z>
);<z>
)) {<z>
case ADD:<z>
false);<z>
case DELETE:<z>
false);<z>
:<z>
(false);<z>
CHANGE:<z>
isUnset()) {<z>
addInTarget(false);<z>
{<z>
(false);<z>
throws TorqueException<z>
null && (this.product_id > 0))<z>
product_id));<z>
return aProduct;<z>
String string, int signum) {<z>
length();<z>
0;<z>
char ch;<z>
byte digit;<z>
numDigits = 0;<z>
{<z>
.charAt(i);<z>
'.')<z>
numDigits++;<z>
{<z>
= string.charAt(i);<z>
|| ch == '+' || ch == '.')<z>
ch, 10);<z>
if (digit == -1) {<z>
COMPLETED_MAYBE ) ;<z>
% 2 == 0) {<z>
digit;<z>
.write_octet(doubleDigit);<z>
= 0;<z>
{<z>
(digit << 4);<z>
;<z>
-1) {<z>
|= 0xd;<z>
else {<z>
doubleDigit |= 0xc;<z>
write_octet(doubleDigit);<z>
,<z>
PacketFilter filter, long timeout,<z>
sessionMembersOnly)<z>
IOException {<z>
;<z>
;<z>
timeout, forceWait);<z>
subset)<z>
RemoteException {<z>
= null;<z>
singleStation = !(dataChoice instanceof CompositeDataChoice);<z>
= (singleStation<z>
))<z>
));<z>
paramsToUse = (singleStation<z>
;<z>
buildUrl(stationsToUse, paramsToUse);<z>
generateTimeUrls(this, url, subset);<z>
data = null;<z>
= new Vector();<z>
= null;<z>
i >= 0; i--) {<z>
(i);<z>
+ newUrl);<z>
= new PointDataAdapter(newUrl, false);<z>
("new PointDataAdapter");<z>
call1("pda.getData");<z>
);<z>
) {<z>
add(data);<z>
);<z>
ve) {<z>
.mergeData(datas);<z>
{<z>
return data;<z>
Trace.call1("recast");<z>
(singleStation) {<z>
obs = recastProfilerSingleStationData(data, obInt);<z>
} else {<z>
obInt);<z>
Trace.call2("recast");<z>
return obs;<z>
int delta)<z>
== AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK)<z>
;<z>
)<z>
delta;<z>
;<z>
null)<z>
updateHierarchyListenerCount(type, delta);<z>
Node startNode, Node endNode, RelType relationshipType) {<z>
!startNode.equals(endNode)) {<z>
;<z>
)));<z>
(true);<z>
return (false);<z>
handleTrackerAnnounceResponse(TrackerMessage message,<z>
boolean inhibitEvents) throws AnnounceException {<z>
this.validateTrackerResponse(message);<z>
.handleTrackerAnnounceResponse(message, inhibitEvents);<z>
)<z>
();<z>
watchList)<z>
;<z>
cancelled = true;<z>
private User foundUser(String argumento) throws UserException{<z>
User usuario = null;<z>
) {<z>
(argumento)) {<z>
user;<z>
return usuario;<z>
)<z>
this, arraylist);<z>
if (is.hasTagCompound())<z>
();<z>
hasKey("temperature"))<z>
"temperature");<z>
-1;<z>
boilTemp = 10000;<z>
is);<z>
!= null)<z>
meltTemp;<z>
boilTemp = hi.boilTemp;<z>
!= -1)<z>
.stick.shiftedIndex)<z>
.getHeatColorTorch(temp, meltTemp));<z>
, boilTemp));<z>
private boolean isSqlHelperSource( Object source ) {<z>
= false;<z>
())) {<z>
true;<z>
;<z>
Expr transform_3_2_1Examples(SourceModel.Expr typeConstants) {<z>
make(<z>
, typeConstants});<z>
(Breakpoint breakpoint) {<z>
) {<z>
) {<z>
breakpoints = new Breakpoint[] { breakpoint };<z>
));<z>
{<z>
i].equals(breakpoint)) {<z>
breakpoints[i] = breakpoint;<z>
(breakpoint));<z>
+ 1];<z>
, breakpoints.length);<z>
;<z>
= newBreakpoints;<z>
new CMS_addBreakpoint(breakpoint));<z>
String getTraceLibFullPath() {<z>
== null) {<z>
return getTraceLibName();<z>
());<z>
.append(getTraceLibName());<z>
traceLib.toOSString();<z>
DefinitionKind limit_type,<z>
)<z>
return delegate.contents(limit_type, exclude_inherited);<z>
) {<z>
;<z>
;<z>
super.shift = 8;<z>
nioCoder.getEncoderIndex1();<z>
;<z>
{<z>
&& mTitle != null) {<z>
).toString());<z>
();<z>
(hasNoteChanged())<z>
),<z>
previous);<z>
throws HandlerException {<z>
getUri().isCollection()) {<z>
(r);<z>
else {<z>
throw new BadRequestException("ERROR: Unknown POST URI type");<z>
basicGetSubcomponentType() {<z>
(eIsSet(Aadl2Package.PROCESSOR_SUBCOMPONENT__PROCESSOR_SUBCOMPONENT_TYPE)) {<z>
basicGetProcessorSubcomponentType();<z>
);<z>
editor) {<z>
isUnderAquaLookAndFeel()) {<z>
, height - 1);<z>
{<z>
y, width, height);<z>
{<z>
;<z>
getPortClassAccess().getOperationsPortOperationParserRuleCall_2_1_0());<z>
(FOLLOW_rulePortOperation_in_rule__PortClass__OperationsAssignment_2_142461);<z>
();<z>
._fsp--;<z>
));<z>
(RecognitionException re) {<z>
reportError(re);<z>
recover(input,re);<z>
;<z>
(final Scope scope) {<z>
getFields() != null) {<z>
().scope(scope);<z>
public static ImageLoader getInstance(Context context) {<z>
if(staticInstance == null) {<z>
context);<z>
return staticInstance;<z>
{<z>
(g == null) {<z>
);<z>
{<z>
.getName());<z>
.getName());<z>
getName()))<z>
updateRelatedGenesPanel(g);<z>
long layoutSetBranchId, long plid)<z>
SystemException {<z>
{<z>
layoutRevision);<z>
filePattern) {<z>
PatternCondition<T>("withOriginalFile") {<z>
) {<z>
.accepts(file.getOriginalFile());<z>
});<z>
mediaType) {<z>
) {<z>
false;<z>
(mediaType != null) {<z>
.APPLICATION_FORM_URLENCODED.includes(mediaType);<z>
;<z>
{<z>
= null;<z>
);<z>
= parsedUrl.getPath();<z>
;<z>
hash = parsedUrl.getRef();<z>
.getDevModeURLParams(connectAddress,<z>
getSocketPort());<z>
(query == null) {<z>
;<z>
{<z>
;<z>
query;<z>
{<z>
path += '#' + hash;<z>
),<z>
);<z>
);<z>
catch (MalformedURLException e) {<z>
e);<z>
;<z>
;<z>
processParamTags(boolean isNonTypeParams,<z>
writer,<z>
Set alreadyDocumented) {<z>
writer.getOutputInstance();<z>
if (paramTags.length > 0) {<z>
) {<z>
paramTags[i];<z>
paramName = isNonTypeParams ?<z>
+ pt.parameterName() + ">";<z>
pt.parameterName())) {<z>
position(),<z>
;<z>
.parameterName());<z>
null && alreadyDocumented.contains(rank)) {<z>
,<z>
);<z>
(processParamTag(isNonTypeParams, writer, pt,<z>
;<z>
;<z>
return result;<z>
) {<z>
, id);<z>
this.context = context;<z>
, displayName, channelKey));<z>
relativePath)<z>
"";<z>
StringTokenizer(relativePath, URI_PATH_SEPARATOR);<z>
String pathSegment = null;<z>
() == true) {<z>
strTok.nextToken();<z>
pathSegment.equals("*") == true) {<z>
() > 0) {<z>
URI_PATH_SEPARATOR);<z>
);<z>
;<z>
Object o) {<z>
PhoneNumber) {<z>
PhoneNumber other = (PhoneNumber) o;<z>
)) &&<z>
, other.getNumber()) &&<z>
), other.isPrimary()) &&<z>
)) &&<z>
, other.getType());<z>
{<z>
;<z>
() {<z>
= new StringBuilder();<z>
("class Definition {\n");<z>
);<z>
"\n");<z>
"\n");<z>
);<z>
append(labels).append("\n");<z>
"\n");<z>
append(exampleUses).append("\n");<z>
append("\n");<z>
append("\n");<z>
).append("\n");<z>
;<z>
);<z>
(word).append("\n");<z>
append("\n");<z>
);<z>
;<z>
;<z>
return sb.toString();<z>
Exception {<z>
);<z>
= uiJCRExplorer.getChild(UIPopupContainer.class);<z>
);<z>
(UIContentNameSearch.class);<z>
).getPath();<z>
contentNameSearch.setLocation(currentNodePath);<z>
findFirstComponentOfType(UISimpleSearch.class);<z>
currentNodePath);<z>
500, false);<z>
(UIPopupContainer);<z>
pCaps, String name) {<z>
;<z>
PlatformCapability pCap : pCaps) {<z>
).equals(name)) {<z>
= pCap;<z>
(o);<z>
()<z>
;<z>
header == null ? 0 : 1;<z>
null ? 0 : this.customerDetails.length;<z>
: 1;<z>
return count;<z>
, boolean resolve, boolean coreType)<z>
featureID)<z>
ALTERNATIVE_MULTIPLICITIES__VAL2:<z>
getVal2();<z>
:<z>
;<z>
SequencertestPackage.ALTERNATIVE_MULTIPLICITIES__VAL4:<z>
return getVal4();<z>
SequencertestPackage.ALTERNATIVE_MULTIPLICITIES__VAL5:<z>
getVal5();<z>
:<z>
return getVal6();<z>
case SequencertestPackage.ALTERNATIVE_MULTIPLICITIES__VAL7:<z>
);<z>
resolve, coreType);<z>
) {<z>
Shape bodyShape = getBodyShape();<z>
);<z>
scaleFactor);<z>
/ scaleFactor;<z>
() / scaleFactor;<z>
));<z>
return scaleTransform.createTransformedShape(bodyShape);<z>
hashCode()<z>
int result = 17;<z>
!= null)<z>
result + 7 * name.hashCode();<z>
* result + 7;<z>
return result;<z>
PagedMessage getPagedMessage()<z>
get() : null;<z>
(returnMessage == null)<z>
(position);<z>
;<z>
return returnMessage;<z>
public void debugPaint(FGEGraphics g) {<z>
ForegroundStyle fg = g.getDefaultForeground();<z>
.getDefaultBackground();<z>
(focusedForegroundStyle);<z>
g.setDefaultBackground(focusedBackgroundStyle);<z>
{<z>
paint(g);<z>
(resultingEndArea != null) {<z>
;<z>
);<z>
g.setDefaultBackground(bg);<z>
.paint(g);<z>
);<z>
, String namespace)<z>
{<z>
Element e =<z>
(<z>
0<z>
return Base64.decode(e);<z>
final public void TriplesSameSubject() throws ParseException {<z>
s ;<z>
:jj_ntk) {<z>
:<z>
:<z>
INTEGER:<z>
case DECIMAL:<z>
:<z>
case STRING_LITERAL1:<z>
STRING_LITERAL2:<z>
case STRING_LITERAL_LONG1:<z>
:<z>
case IRIref:<z>
case PNAME_NS:<z>
PNAME_LN:<z>
:<z>
case VAR:<z>
:<z>
:<z>
ANON:<z>
);<z>
s);<z>
:<z>
case LBRACKET:<z>
s = TriplesNode();<z>
s);<z>
] = jj_gen;<z>
);<z>
();<z>
) {<z>
) {<z>
public Object Convert(Object source, AsyncQuery _asyncQuery)<z>
.intValue() : 120;<z>
,<z>
.DefaultConfigurationVersion),<z>
;<z>
omg.PortableServer.POA[] the_children()<z>
checkDestructionApparent();<z>
i = 0;<z>
enumeration;<z>
;<z>
poaCreationLog)<z>
[childs.size()];<z>
.elements();<z>
(enumeration.hasMoreElements())<z>
) enumeration.nextElement();<z>
i++;<z>
return children;<z>
() throws RecognitionException {<z>
current = null;<z>
null;<z>
=null;<z>
= null;<z>
;<z>
) {<z>
0 ) {<z>
= forceCreateModelElement(<z>
().getList3Action_0(),<z>
);<z>
; if (state.failed) return current;<z>
{<z>
getLeftParenthesisKeyword_1());<z>
=0;<z>
=2;<z>
);<z>
{<z>
1;<z>
{<z>
:<z>
{<z>
getList3Access().getListList2ParserRuleCall_2_0());<z>
;<z>
=ruleList2();<z>
._fsp--;<z>
if (state.failed) return current;<z>
backtracking==0 ) {<z>
) {<z>
grammarAccess.getList3Rule());<z>
);<z>
;<z>
break loop25;<z>
}<z>
=<z>
input);<z>
eee;<z>
++;<z>
(true);<z>
; if (state.failed) return current;<z>
0 ) {<z>
;<z>
state.backtracking==0 ) {<z>
leaveRule();<z>
{<z>
re);<z>
;<z>
current;<z>
bimap(<z>
Function<A, B> aToB,<z>
, A> bToA) {<z>
bToA);<z>
public static void endUpdate()<z>
instance.updater)<z>
instance.updater.endUpdate();<z>
))<z>
needReload)<z>
reloadAsynch();<z>
void deleteRecursively(File f) {<z>
i : f.listFiles()) {<z>
if (i.isDirectory()) {<z>
(i);<z>
else {<z>
) {<z>
.deleteOnExit();<z>
!f.delete())<z>
f.deleteOnExit();<z>
Exception<z>
data!=null)<z>
return data;<z>
file!=null)<z>
(binary)<z>
)));<z>
file, getClass());<z>
if(ref!=null)<z>
(ref);<z>
if(data==null)<z>
("Data is null was not found");<z>
return data;<z>
{<z>
= Component.parseURI(uriEncoded);<z>
) {<z>
(KeyProfile.getKeyIDFromNameComponent(encodedBytes));<z>
return new PublisherPublicKeyDigest(encodedBytes);<z>
protected double getXFromTime(long t)<z>
0;<z>
= getTimeIndex(t);<z>
getChartData();<z>
).getBounds();<z>
(-2, -2);<z>
{<z>
items = cd.getPeriod();<z>
;<z>
;<z>
(itemsCount - end);<z>
;<z>
;<z>
minX = rect.getMinX();<z>
= (idx < negativeNr);<z>
if (negative)<z>
/2);<z>
w/2);<z>
return xc;<z>
() {<z>
);<z>
parite == 0) return "Pairs";<z>
else return "Impairs";<z>
.protobuf.generated.ZooKeeperProtos.RegionTransition parseDelimitedFrom(<z>
,<z>
ExtensionRegistryLite extensionRegistry)<z>
.IOException {<z>
);<z>
builder.mergeDelimitedFrom(input, extensionRegistry)) {<z>
.buildParsed();<z>
{<z>
;<z>
( RunData data )<z>
".doMultiItemDispatch()");<z>
));<z>
.getParameters();<z>
;<z>
== null)<z>
))<z>
new ArrayList();<z>
;<z>
)<z>
Arrays.asList(selectedItems));<z>
setAttribute(STATE_ITEMS_TO_BE_COPIED, selectedSet);<z>
(STATE_ITEMS_TO_BE_MOVED);<z>
MOVE.equals(actionId))<z>
= new ArrayList();<z>
] selectedItems = params.getStrings ("selectedMembers");<z>
(selectedItems != null)<z>
);<z>
;<z>
state.removeAttribute(STATE_ITEMS_TO_BE_COPIED);<z>
))<z>
);<z>
property) {<z>
null;<z>
String specific = null;<z>
{<z>
propertyList.get(i);<z>
.displayName.equals(property)) {<z>
if (e.forClass == null)<z>
property;<z>
.isInstance(component))<z>
.property;<z>
if (specific != null)<z>
specific;<z>
else if (generic != null)<z>
property = generic;<z>
o = getPropertyObject(this, property);<z>
o == null)<z>
);<z>
o;<z>
int startOffset, int endOffset, String line) {<z>
;<z>
(" severity=\"warning\"");<z>
printf(" message=\"Line matches the illegal pattern &apos;%s&apos; at offset:%d\"", match, startOffset);<z>
.printf(" source=\"com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck\" />%n");<z>
getAsString(OID oid) throws IOException {<z>
new OID[] {<z>
;<z>
();<z>
setIndexedByPhrase (List list)<z>
();<z>
_indexedByPhrase_.addAll (list);<z>
ClassNode getClassNode() {<z>
.containingCodeBlock instanceof ClassNode ?<z>
(ClassNode) getContext().containingCodeBlock :<z>
();<z>
, Object parent, boolean isLeaf) {<z>
;<z>
;<z>
= isLeaf;<z>
String displayName, String companyName,<z>
, String emphistCompany, String emphistDept,<z>
, String eduhistGradYear,<z>
eduhistCourse, String showEduHist, String showEmpHist) {<z>
();<z>
this.displayName = displayName;<z>
= companyName;<z>
;<z>
emphistCompany;<z>
;<z>
.eduhistCollege = eduhistCollege;<z>
= eduhistGradYear;<z>
;<z>
.showEduHist = showEduHist;<z>
this.showEmpHist = showEmpHist;<z>
String filename) throws IOException<z>
(":/")) {<z>
downloadFile(filename, "download.tmp")) {<z>
"download.tmp");<z>
else {<z>
;<z>
else {<z>
filename));<z>
StringBuilder buffer = new StringBuilder();<z>
String line;<z>
{<z>
;<z>
;<z>
.toString();<z>
, Service service) {<z>
);<z>
null;<z>
Proxy ) {<z>
s.getClass().getInterfaces();<z>
i < interfaces.length; i++ ) {<z>
"serviceInfo", ServiceInfo.class );<z>
, ServiceInfo.class );<z>
!= null ) {<z>
invoke( s , null );<z>
info.isEnabled()) {<z>
) + " is disabled" );<z>
e) {<z>
);<z>
} else {<z>
service.getId()<z>
;<z>
service;<z>
T b) {<z>
a == b)<z>
true;<z>
));<z>
(PortletConfig portletConfig) throws PortletException {<z>
);<z>
;<z>
);<z>
;<z>
parentFlow) {<z>
;<z>
);<z>
parentFlow);<z>
);<z>
public ElectionContext(final String shardZkNodeName,<z>
SolrZkClient zkClient) {<z>
this.id = shardZkNodeName;<z>
.electionPath = electionPath;<z>
this.leaderPath = leaderPath;<z>
;<z>
;<z>
changePosition() {<z>
.equals(offsetPosition)) {<z>
= OffsetPosition.POSITION_UPPER;<z>
) {<z>
.POSITION_UNDER;<z>
offsetPosition, startPosition);<z>
update(UPDATE_LAYER);<z>
{<z>
getMessage();<z>
setMode(PrecisionToolsMode.ERROR);<z>
;<z>
int index, final int endLvl) {<z>
1) {<z>
1;<z>
getRealLevel(index);<z>
120 || endLvl > 120)<z>
return 0;<z>
;<z>
{<z>
0;<z>
lvl];<z>
/ xpTotal;<z>
Var evalVar(Env env) {<z>
Value value = _objExpr.evalObject(env);<z>
evalStringValue(env));<z>
onCreate(Bundle savedInstanceState) {<z>
();<z>
);<z>
.main);<z>
);<z>
registerForContextMenu(getListView());<z>
findViewById(R.id.new_doc);<z>
() {<z>
View v) {<z>
, DocActivity.class);<z>
;<z>
});<z>
R.id.refresh_docs);<z>
(new View.OnClickListener() {<z>
) {<z>
);<z>
);<z>
;<z>
fillDocList();<z>
final Rectangle2D viewBounds) {<z>
= new Point();<z>
{<z>
();<z>
layers = camera.getLayersReference();<z>
) {<z>
;<z>
.add(layer.getFullBoundsReference());<z>
(layerBounds);<z>
layerBounds.add(viewBounds);<z>
()<z>
+ 0.5));<z>
return pos;<z>
fwd( final long steps )<z>
;<z>
( internalIndex );<z>
( SnpEffEffect other ) {<z>
other.isCoding() ) {<z>
true;<z>
() && other.isCoding() ) {<z>
false;<z>
(other.impact) ) {<z>
return true;<z>
impact.isSameImpactAs(other.impact) ) {<z>
functionalClass.isHigherPriorityThan(other.functionalClass);<z>
return false;<z>
final QueryContext ctx) throws QueryException {<z>
compile(ctx);<z>
{<z>
.swap();<z>
;<z>
.addText(ctx);<z>
e1 = expr[0];<z>
Expr e2 = expr[1];<z>
size() == 1 ?<z>
: Occ.ZERO_ONE);<z>
this;<z>
)) {<z>
(null, ctx);<z>
)) {<z>
);<z>
(Function.COUNT)) {<z>
op);<z>
instanceof Bln ? OPTPRE : OPTWRITE, this);<z>
e1.isFunction(Function.POSITION)) {<z>
e2, e, info);<z>
this);<z>
FALSE ||<z>
{<z>
e1);<z>
;<z>
.String id) {<z>
+ id);<z>
ProvisionRequest instance = (ProvisionRequest) sessionFactory<z>
getCurrentSession()<z>
.get("org.openiam.idm.srvc.prov.request.dto.ProvisionRequest", id);<z>
instance == null) {<z>
("get successful, no instance found");<z>
{<z>
("get successful, instance found");<z>
instance;<z>
catch (HibernateException re) {<z>
, re);<z>
re;<z>
String newName)<z>
= name;<z>
newName;<z>
eNotificationRequired())<z>
;<z>
{<z>
, tr("Apply", null));<z>
ImageProvider.get("ok"));<z>
("Apply this role to all members", null));<z>
) {<z>
startCapturingOutputs();<z>
);<z>
{<z>
;<z>
() {<z>
.random() * 5)){<z>
return knife();<z>
: return club();<z>
);<z>
spear();<z>
: return staff();<z>
horSpan) {<z>
| SWT.HORIZONTAL);<z>
GridData sepData = new GridData();<z>
;<z>
sepData.horizontalSpan = horSpan;<z>
sepData);<z>
) {<z>
== null) {<z>
class, this, PowrmartPackage.INSTANCE_TYPE__EXPRMACRODEPENDENCY);<z>
eXPRMACRODEPENDENCY;<z>
, Set<Node> nodeSet)<z>
;<z>
iter.hasNext())<z>
.next();<z>
typeId = node.getTypeId();<z>
add(typeId);<z>
(SF2Soundbank sf2) {<z>
x = 8;<z>
int fftsize = 4096 * x;<z>
2];<z>
double base = x * 25;<z>
2;<z>
= 80;<z>
start_a = 0.2;<z>
;<z>
= start_a;<z>
;<z>
; i < 40; i++) {<z>
);<z>
w, a);<z>
a_step;<z>
4, 300, 1);<z>
(sf2, "Och Strings", data, base);<z>
newLayer(sf2, "Och Strings", sample);<z>
);<z>
, 1);<z>
, -5000);<z>
;<z>
(SF2Region.GENERATOR_DECAYVOLENV, 200);<z>
SF2Region.GENERATOR_SUSTAINVOLENV, 1000);<z>
putInteger(SF2Region.GENERATOR_INITIALFILTERFC, 9500);<z>
layer;<z>
final Method m) {<z>
();<z>
StringBuffer();<z>
.append('(');<z>
i < parameters.length; ++i) {<z>
(buf, parameters[i]);<z>
buf.append(')');<z>
));<z>
();<z>
String searchPath) {<z>
pathSeparator);<z>
);<z>
.hasMoreTokens()) {<z>
.add(st.nextToken());<z>
;<z>
]);<z>
equals(Object that) {<z>
if (that == null)<z>
false;<z>
if (that instanceof ping_result)<z>
(ping_result)that);<z>
false;<z>
{<z>
prefs =<z>
context.getSharedPreferences(ACCOUNT_PREFS_NAME, 0);<z>
getString(ACCESS_KEY_NAME, null);<z>
.getString(ACCESS_SECRET_NAME, null);<z>
) {<z>
;<z>
ret[0] = key;<z>
[1] = secret;<z>
return ret;<z>
} else {<z>
null;<z>
throws ParsingException {<z>
() == 0)<z>
;<z>
iterator();<z>
) {<z>
());<z>
subject.getCategory();<z>
;<z>
(category)) {<z>
);<z>
else {<z>
categoryMap = new HashMap();<z>
;<z>
iterator();<z>
)) {<z>
);<z>
toString();<z>
categoryMap.containsKey(id)) {<z>
categoryMap.get(id));<z>
);<z>
else {<z>
HashSet();<z>
(attr);<z>
.put(id, newIds);<z>
anArray, String key){<z>
sortOrderings = new NSMutableArray();<z>
;<z>
EOSortOrdering.sortArrayUsingKeyOrderArray(anArray, sortOrderings);<z>
{<z>
);<z>
;<z>
200, 200);<z>
(JFrame.EXIT_ON_CLOSE);<z>
;<z>
);<z>
true);<z>
[] matrix){<z>
.matrix = matrix;<z>
matrix.length;<z>
0].length)<z>
].length;<z>
(nbCols);<z>
nbRows);<z>
function, Object[] arguments) {<z>
getFormalParameters();<z>
v = null;<z>
.getRecord();<z>
i) {<z>
.length) {<z>
v = Types.UNDEFINED;<z>
{<z>
arguments[i];<z>
names[i])) {<z>
this, names[i], false);<z>
());<z>
);<z>
(this, "arguments")) {<z>
argsObj = createArgumentsObject(function, arguments);<z>
) {<z>
;<z>
, argsObj);<z>
{<z>
.createMutableBinding(this, "arguments", false);<z>
, argsObj, false);<z>
;<z>
(String text) {<z>
returnText = text;<z>
);<z>
("\"", "&quot;");<z>
= returnText.replaceAll("<", "&lt;");<z>
replaceAll(">", "&gt;");<z>
returnText;<z>
rule__MapMethod__SplitTagAssignment_5_1_0() throws RecognitionException {<z>
);<z>
getMapMethodAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_5_1_0_0());<z>
);<z>
).getSplitTagXML_TAG_ENDTerminalRuleCall_5_1_0_0());<z>
(RecognitionException re) {<z>
reportError(re);<z>
recover(input,re);<z>
restoreStackSize(stackSize);<z>
( Collection c )<z>
<Object>();<z>
;<z>
; )<z>
null;<z>
.next();<z>
)<z>
.getName();<z>
(String) objectje;<z>
== null;<z>
( m_include != null )<z>
++ )<z>
j] ) )<z>
true;<z>
m_exclude != null )<z>
m_exclude.length; j++ )<z>
] ) )<z>
includeThis = false;<z>
( includeThis )<z>
( objectje instanceof WikiPage )<z>
;<z>
.add( pageName );<z>
null;<z>
)<z>
.getPage( pageName );<z>
page != null )<z>
= page.getLastModified();<z>
isDebugEnabled() )<z>
( "lastModified Date of page " + pageName + " : " + m_dateLastModified );<z>
m_dateLastModified ) )<z>
lastModPage;<z>
;<z>
get() {<z>
if (set == null) {<z>
>();<z>
;<z>
.add(EmployeeRecord.class);<z>
= newInstance;<z>
return set;<z>
protected void bcsPreSerializationHook (ObjectOutputStream oos)<z>
("Not implemented");<z>
] getParameters(Request request) {<z>
>();<z>
String method = request.getMethod();<z>
);<z>
getQuery();<z>
= url.getFragment();<z>
url = url.getParentUrl();<z>
;<z>
) {<z>
"=");<z>
++) {<z>
getValue())));<z>
(query != null) {<z>
"=");<z>
i<values.length; i++) {<z>
.getValue())));<z>
[] headers = request.getHeaders();<z>
{<z>
)) {<z>
, "; *", "=");<z>
.length; j++) {<z>
.getValue()));<z>
if (method.equals("POST")) {<z>
if (contentType != null) {<z>
getContent());<z>
; i++) {<z>
body[i]);<z>
parameters.toArray(NO_PARAMS);<z>
) {<z>
close();<z>
) {<z>
();<z>
getKeyRings(<z>
userID,<z>
matchPartial,<z>
ignoreCase)<z>
= this.getKeyRings();<z>
);<z>
ignoreCase)<z>
(userID);<z>
.hasNext())<z>
= (PGPPublicKeyRing)it.next();<z>
().getUserIDs();<z>
while (uIt.hasNext())<z>
.next();<z>
if (ignoreCase)<z>
next = Strings.toLowerCase(next);<z>
if (matchPartial)<z>
indexOf(userID) > -1)<z>
pubRing);<z>
next.equals(userID))<z>
(pubRing);<z>
iterator();<z>
(<z>
, boolean overrideProperties)<z>
SystemException {<z>
(<z>
;<z>
(<z>
, toTagId, ActionKeys.UPDATE);<z>
, overrideProperties);<z>
)<z>
switch (featureID)<z>
:<z>
().clear();<z>
super.eUnset(featureID);<z>
basicSetDocumentation( Documentation newDocumentation,<z>
msgs ) {<z>
= documentation;<z>
= newDocumentation;<z>
) {<z>
Notification.SET,<z>
.MESSAGE_PART__DOCUMENTATION, oldDocumentation,<z>
newDocumentation);<z>
notification;<z>
;<z>
msgs;<z>
String langCd) throws DataException {<z>
);<z>
session.createQuery(<z>
" m.id.languageCd = :langCd ");<z>
"parentMenuId", parentMenuId);<z>
setString("langCd", langCd);<z>
qry.list();<z>
return results;<z>
void onPostUpdate(PostUpdateEvent event) {<z>
; }<z>
Study) {<z>
"assignedIdentifier");<z>
.getEntity() instanceof Site) {<z>
SITE, "assignedIdentifier");<z>
rightExpression) {<z>
leftRedirect = left.redirect();<z>
right.redirect();<z>
||right==void_WRAPPER_TYPE) {<z>
==void_WRAPPER_TYPE;<z>
isNumberCategory(rightRedirect))) {<z>
BigDecimal_TYPE==leftRedirect) {<z>
;<z>
leftRedirect) {<z>
WideningCategories.isBigIntCategory(getUnwrapper(rightRedirect));<z>
==null;<z>
left)) {<z>
true;<z>
OBJECT_TYPE) ||<z>
||<z>
leftRedirect.equals(boolean_TYPE) ||<z>
||<z>
leftRedirect.equals(CLASS_Type)) {<z>
true;<z>
==STRING_TYPE) {<z>
ConstantExpression) {<z>
);<z>
()==1;<z>
STRING_TYPE||rightExpressionIsNull)) {<z>
)==1);<z>
.isDerivedFrom(Enum_Type) &&<z>
STRING_TYPE)) {<z>
true;<z>
(MAP_TYPE) ||<z>
rightRedirect.implementsInterface(Collection_TYPE) ||<z>
rightRedirect.equals(MAP_TYPE) ||<z>
Collection_TYPE) ||<z>
)) {<z>
() && rightRedirect.isArray()) {<z>
getComponentType());<z>
.isArray()) {<z>
;<z>
return true;<z>
left))) return true;<z>
isPrimitiveType(rightRedirect)) return true;<z>
;<z>
equals(rightRedirect)) {<z>
;<z>
)) {<z>
return true;<z>
false;<z>
void sendUnChoke() {<z>
if ( current_peer_state != TRANSFERING ) return;<z>
createPieceMessageHandler();<z>
= false;<z>
BTUnchoke(other_peer_unchoke_version), false );<z>
public void onDestroy() {<z>
();<z>
.listen(mPhoneStateListener, 0);<z>
);<z>
public DbfTableModel getTable() {<z>
= getAttribute(DBF_ATTRIBUTE);<z>
== null) {<z>
obj = getAppObject();<z>
obj instanceof DbfTableModel) {<z>
DbfTableModel) obj;<z>
} else {<z>
null;<z>
findContainingFace(List<Node> nodes) {<z>
= null;<z>
fromList(getFaces())) {<z>
) {<z>
face)) {<z>
;<z>
{<z>
return face;<z>
return containingFace;<z>
() {<z>
());<z>
100; ++i) {<z>
String no = "00" + i;<z>
3);<z>
() + "$Parent" + no);<z>
.alias("p" + no, cls);<z>
{<z>
new RuntimeException(e);<z>
) {<z>
, soneId).check();<z>
followedSone = getSone(soneId, true);<z>
followedSone == null) {<z>
String.format("Ignored Sone with invalid ID: %s", soneId));<z>
soneId));<z>
connectSync() throws android.os.RemoteException<z>
;<z>
.Parcel.obtain();<z>
boolean _result;<z>
writeInterfaceToken(DESCRIPTOR);<z>
.TRANSACTION_connectSync, _data, _reply, 0);<z>
);<z>
());<z>
recycle();<z>
recycle();<z>
_result;<z>
) throws Exception<z>
();<z>
generateUniqueID();<z>
appendAddRecord(recordID,<z>
messageID),<z>
(true));<z>
;<z>
);<z>
Object clone() {<z>
null;<z>
();<z>
ex) {<z>
Level.SEVERE, null, ex);<z>
<Carte>) paquet.clone();<z>
return resultat;<z>
(Element parent, AttributeSet a) {<z>
.parent = parent;<z>
getEmptySet();<z>
) {<z>
addAttributes(a);<z>
ResourceURI uri) throws IOException {<z>
(repositorySiteRoot.getAbsolutePath());<z>
(uri.getType() == null)<z>
throw new IllegalArgumentException("Resource uri has no type");<z>
)).append("s");<z>
id = null;<z>
getIdentifier() != null) {<z>
);<z>
} else {<z>
);<z>
null) {<z>
("Uri '{}' is not part of the repository index", uri);<z>
return null;<z>
id);<z>
(), path);<z>
));<z>
functionName) throws Exception {<z>
xmlSchemaElement = null;<z>
) {<z>
) param;<z>
complexType, functionName);<z>
if (param instanceof SimpleType) {<z>
ComplexType complexType = new ComplexType();<z>
.addMember(param);<z>
complexType.setName(functionName);<z>
complexType, functionName);<z>
) {<z>
null;<z>
QName element =<z>
.schemaTargetNamespace, functionName, this.prefix);<z>
xmlSchemaElement);<z>
(element, xmlSchemaElement);<z>
xmlSchemaElement;<z>
void encrypt(byte[] buffer)<z>
int nLen = buffer.length;<z>
;<z>
nI < nLen; nI +=8)<z>
buffer, nI);<z>
encryptBlock(lTemp);<z>
, nI);<z>
void checkPermissionForCreate(Short newState, UserContext userContext,<z>
) throws ApplicationException {<z>
newState, userContext, officeId, loanOfficerId)) {<z>
AccountException(SecurityConstants.KEY_ACTIVITY_NOT_ALLOWED);<z>
throws Exception {<z>
= ancestor.getData();<z>
(getSecurityMode());<z>
hasSecurityMode;<z>
void setReplacementText(final String text) {<z>
().equals("")) {<z>
"Replacement text must not be null or empty") ;<z>
= text ;<z>
> pojoClass(int id)<z>
null;<z>
== null)<z>
UnknownTypeException("pojo id: " + id +<z>
" (Outdated registry)");<z>
.typeClass();<z>
() {<z>
(FilePropertyKey.TORRENT);<z>
() : null;<z>
null && status.isError()) {<z>
"span, gaptop 15, wrap");<z>
);<z>
)<z>
.io.IOException {<z>
= newBuilder();<z>
{<z>
.buildParsed();<z>
} else {<z>
;<z>
dayCount, final YieldAndDiscountCurve discountingCurve) {<z>
final AnnuityCouponFixed annuityFixed = fixedCouponSwap.getFixedLeg();<z>
;<z>
;<z>
().length; loopcpn++) {<z>
loopcpn).getPaymentTime();<z>
.getDiscountFactor(time)<z>
).getAccrualEndDate())<z>
()));<z>
;<z>
return list;<z>
MultiTextureTile tile, String mimeType)<z>
.getPath().substring(0,<z>
));<z>
suffix = WWIO.makeSuffixForMimeType(mimeType);<z>
+ suffix;<z>
.findFile(path, false);<z>
url == null)<z>
null;<z>
).getExpiryTime()))<z>
.getDataFileCache().removeFile(url);<z>
= Logging.getMessage("generic.DataFileExpired", url);<z>
message);<z>
(url.toURI());<z>
= ImageIO.read(imageFile);<z>
== null)<z>
= Logging.getMessage(<z>
;<z>
new RuntimeException(message);<z>
);<z>
return image;<z>
)<z>
getDataFileCache().removeFile(url);<z>
);<z>
(<z>
);<z>
.info(message);<z>
return null;<z>
Node node, NodeMetadata cloudNode) {<z>
cloudNode.getPublicAddresses()<z>
();<z>
.hasNext()) {<z>
.next());<z>
[][] getContents() {<z>
][] {<z>
{ "NumberElements",<z>
new String[] {<z>
,<z>
{<z>
"DateTimePatternChars", "GaMjkHmsSEDFwWxhKzZ" },<z>
private PsiType getNominalTypeInner(PsiElement resolved) {<z>
))) {<z>
;<z>
(resolved instanceof PsiClass) {<z>
.getElementFactory();<z>
GrReferenceExpression) {<z>
)resolved);<z>
getResolveScope());<z>
(resolved instanceof GrVariable) {<z>
resolved).getDeclaredType();<z>
if (resolved instanceof PsiVariable) {<z>
;<z>
{<z>
;<z>
)) {<z>
[0].getType();<z>
containingClass = method.getContainingClass();<z>
!= null &&<z>
&&<z>
getName())) {<z>
);<z>
(method);<z>
(resolved instanceof GrReferenceExpression) {<z>
PsiElement parent = resolved.getParent();<z>
if (parent instanceof GrAssignmentExpression) {<z>
GrAssignmentExpression)parent;<z>
getLValue())) {<z>
GrExpression rValue = assignment.getRValue();<z>
null) {<z>
);<z>
(rType != null) {<z>
;<z>
== null) {<z>
"class".equals(getReferenceName())) {<z>
));<z>
qualifier = getQualifierExpression();<z>
{<z>
= qualifier.getNominalType();<z>
PsiClassType) {<z>
;<z>
();<z>
!= null) {<z>
);<z>
length == 2) {<z>
());<z>
{<z>
getTypeParameters()[1]));<z>
null;<z>
{<z>
getDockables();<z>
(DockableState dockableState : dockables) {<z>
) instanceof EditorDockable) {<z>
) dockableState.getDockable();<z>
"filehandler")).getCurrentFile();<z>
.equals(editorFile))<z>
;<z>
return null;<z>
Attributes atts) {<z>
= 0L;<z>
)))) {<z>
)));<z>
{<z>
LOG.error("Invalid page specified, assuming not paginated result", e);<z>
page;<z>
HttpServletRequest request,<z>
HttpServletResponse response) throws ServletException, IOException<z>
Context context = null;<z>
.setCharacterEncoding("UTF-8");<z>
.storeOriginalURL(request);<z>
context = UIUtil.obtainContext(request);<z>
= Authenticate.getRealRequest(request);<z>
isDebugEnabled())<z>
"http_request", UIUtil<z>
.getRequestLogInfo(request)));<z>
equals("POST"))<z>
(context, request, response);<z>
response);<z>
catch (SQLException se)<z>
se<z>
se);<z>
(request, se);<z>
.showInternalError(request, response);<z>
AuthorizeException ae)<z>
) != null ||<z>
startAuthentication(context, request, response))<z>
(LogManager.getHeader(context, "authorize_error", ae<z>
;<z>
);<z>
&& context.isValid())<z>
.abort();<z>
) {<z>
PacketBuilder builder = new PacketBuilder();<z>
(ServerPacketOpcode.SHOW_STATUS_INFO.getValue());<z>
writeAsByte(0x0B);<z>
;<z>
(data);<z>
builder.getPacket();<z>
) {<z>
maximizePartAction == null) {<z>
= new MaximizePartAction();<z>
return maximizePartAction;<z>
{<z>
if (this.bindingTables == null)<z>
"Cannot be called outside ASTParser#createASTs(...)");<z>
this.lookupEnvironment);<z>
= keyResolver.getCompilerBinding();<z>
compilerBinding == null) return null;<z>
.bindingTables, false);<z>
resolver.getBinding(compilerBinding);<z>
void onPlayerPickupItem(PlayerPickupItemEvent event) {<z>
) {<z>
)) {<z>
.setCancelled(true);<z>
public Builder clearArrayRef() {<z>
hasArrayRef = false;<z>
;<z>
;<z>
type) {<z>
.isAssignableFrom(type)) {<z>
+ " must implement Deserializer");<z>
).contains(type)) {<z>
;<z>
) type);<z>
{<z>
convertView;<z>
;<z>
v == null) {<z>
;<z>
null);<z>
= new ViewHolder();<z>
(R.id.iv_gravatar);<z>
.id.tv_desc);<z>
;<z>
setTag(viewHolder);<z>
) v.getTag();<z>
);<z>
if (feed != null) {<z>
;<z>
(feed.getContent()));<z>
)<z>
) : ""));<z>
return v;<z>
NGuid storagepool) {<z>
;<z>
null) {<z>
createDomain(staticPart);<z>
return null;<z>
IEObjectConsumer tryConsume() {<z>
.getClassifier() &&<z>
.getType().getClassifier() &&<z>
() &&<z>
getType().getClassifier() &&<z>
getClassifier() &&<z>
).getType().getClassifier() &&<z>
() &&<z>
&&<z>
).getClassifier() &&<z>
.getType().getClassifier() &&<z>
().getClassifier() &&<z>
().getClassifier() &&<z>
getClassifier() &&<z>
.getClassifier() &&<z>
))<z>
return null;<z>
eObjectConsumer;<z>
, Object newValue)<z>
(featureID)<z>
case TypesPackage.JVM_FORMAL_PARAMETER__ANNOTATIONS:<z>
();<z>
newValue);<z>
:<z>
(String)newValue);<z>
:<z>
(JvmTypeReference)newValue);<z>
newValue);<z>
(<z>
obj)<z>
super(obj);<z>
Anchor a)<z>
String fromDirection = "+";<z>
();<z>
: "-";<z>
();<z>
{<z>
;<z>
lastFromEnd = lastAnchor.getFromEnd();<z>
lastAnchor.getToEnd();<z>
();<z>
= lastFromEnd;<z>
a.getFromStart();<z>
toStart = lastToEnd;<z>
);<z>
fromEnd > fromStart)) {<z>
fromStart, fromEnd, fromDirection,<z>
, toDirection);<z>
= true;<z>
this.anchors.add(fillerAnchor);<z>
this.anchors.add(a);<z>
(String name){<z>
myUserStory = new UserStory();<z>
(name);<z>
setSprintNumber(1);<z>
myUserStory.setBusinessValue(5);<z>
;<z>
;<z>
;<z>
.setProjectVersion("0.1-SNAPSHOT");<z>
myUserStory;<z>
, int height) {<z>
htmlPanel);<z>
!= null) {<z>
;<z>
) {<z>
)) {<z>
+ lable() + " to " + value);<z>
, "lable");<z>
void rule__PojoType__Group_0_1_0_1_0__1__Impl() throws RecognitionException {<z>
stackSize = keepStackSize();<z>
0 ) {<z>
));<z>
;<z>
;<z>
._fsp--;<z>
failed) return ;<z>
==0 ) {<z>
getRefAssignment_0_1_0_1_0_1());<z>
catch (RecognitionException re) {<z>
;<z>
input,re);<z>
restoreStackSize(stackSize);<z>
timestamp) {<z>
m_timestamp = timestamp;<z>
m_entry = entry;<z>
getConnector() {<z>
) {<z>
debug("Creates an C2dmConnector instance");<z>
new C2dmConnector();<z>
connector.setSource(source);<z>
.setUsername(username);<z>
connector.setPassword(password);<z>
return connector;<z>
protected MockServletContext createContext()<z>
=<z>
) );<z>
;<z>
() {<z>
loadProperties();<z>
, MatrixIO.Format.CLUTO_DENSE);<z>
catch (IOException e) {<z>
();<z>
Composite parent) {<z>
, SWT.NONE);<z>
.applyTo(displayArea);<z>
;<z>
(Messages.GistAttachmentPage_LabelFile);<z>
.SINGLE);<z>
false).applyTo(nameText);<z>
{<z>
(ModifyEvent e) {<z>
;<z>
;<z>
;<z>
);<z>
(2, 1)<z>
binaryLabel);<z>
(displayArea);<z>
throws java.io.IOException {<z>
{<z>
("[UtilXml.writeXmlDocument] Node was null, doing nothing", module);<z>
null;<z>
bos = new ByteArrayOutputStream();<z>
);<z>
;<z>
{<z>
.class);<z>
) {<z>
(pack);<z>
.markAsProcessed(mapping);<z>
<T>> visitors) {<z>
visitors.clear();<z>
dependancySpec : dependancySpecs) {<z>
.visitor);<z>
(<z>
final IncomingTransferObject transferObjectDescription) {<z>
TransferDescription description = transferObjectDescription<z>
();<z>
= new LoggingTransferObject(<z>
);<z>
dispatchThreadContext.executeAsDispatch(new Runnable() {<z>
{<z>
.processIncomingTransferObject(description,<z>
transferObjectData);<z>
});<z>
(int userId, String publicUri) throws TException<z>
TMessageType.CALL, ++seqid_));<z>
;<z>
args.setUserId(userId);<z>
(publicUri);<z>
.write(oprot_);<z>
oprot_.writeMessageEnd();<z>
.flush();<z>
String toString() {<z>
StringBuffer(64);<z>
.append(" [");<z>
;<z>
;<z>
toString();<z>
convert(DistributedMemberInfoCallable.MemberInfo memberInfo) {<z>
memberInfo == null) {<z>
;<z>
;<z>
());<z>
);<z>
getMaxMemory());<z>
.getTotalMemory());<z>
getPartitions());<z>
;<z>
.getSystemProps());<z>
return info;<z>
Node> nodes) {<z>
super(id);<z>
= new ArrayList<Node>(nodes);<z>
);<z>
Node n : nodes) {<z>
.getId());<z>
) {<z>
null ) return SUCCEED;<z>
) return FAILED;<z>
;<z>
;<z>
) {<z>
hand : handsA) {<z>
null));<z>
();<z>
);<z>
());<z>
{<z>
NonMatch(null, hand));<z>
str = new StringBuffer();<z>
.append("Found no match for ");<z>
println(str.toString());<z>
{<z>
body = get("rooms.xml");<z>
List<Room> rooms;<z>
();<z>
factory.setNamespaceAware(true);<z>
;<z>
new StringReader(body);<z>
= new InputSource( reader );<z>
Document doc = builder.parse(inputSource);<z>
();<z>
= xpath.compile("//room");<z>
nameExpr = xpath.compile(".//name");<z>
compile(".//id");<z>
evaluate(doc, XPathConstants.NODESET);<z>
;<z>
); i++) {<z>
= roomNodeList.item(i);<z>
).getNodeValue();<z>
getFirstChild().getNodeValue();<z>
()));<z>
catch (ParserConfigurationException e) {<z>
e);<z>
{<z>
RuntimeException(e);<z>
) {<z>
e);<z>
) {<z>
e);<z>
return rooms;<z>
prepareRefresh() {<z>
.currentTimeMillis();<z>
(this.activeMonitor) {<z>
= true;<z>
logger.isInfoEnabled()) {<z>
;<z>
initPropertySources();<z>
();<z>
AstJoin(<z>
region,<z>
reference,<z>
mapping,<z>
) {<z>
reference == null) {<z>
;<z>
region;<z>
reference = reference;<z>
mapping;<z>
grouping = grouping;<z>
call) {<z>
= connection;<z>
.getConnection();<z>
restoredConnection(oldConnection, connection)) {<z>
call);<z>
oldConnection);<z>
() == 0) {<z>
.notifyConnectionIsOpened();<z>
!= null) {<z>
{<z>
) {<z>
), call);<z>
, call.getRequest());<z>
nanoTime();<z>
else {<z>
(call);<z>
;<z>
0) {<z>
checkOnReconnect(call);<z>
} catch (Exception e) {<z>
call);<z>
(connection);<z>
() {<z>
;<z>
{ -1 });<z>
{ -1 };<z>
.routes = new Route[0];<z>
1;<z>
.failureRate = -1;<z>
protected void collectNewChildDescriptors(<z>
> newChildDescriptors, Object object) {<z>
super.collectNewChildDescriptors(newChildDescriptors, object);<z>
add(createChildParameter(<z>
.Literals.TUPLE_LITERAL_EXP__PART,<z>
);<z>
(createChildParameter(<z>
.TUPLE_LITERAL_EXP__PART,<z>
eINSTANCE.createTupleLiteralPart()));<z>
) {<z>
(info);<z>
handlers.add(SanisettesHandler.class);<z>
);<z>
);<z>
class);<z>
, ConnectionValues values) {<z>
userOperations().getUserProfile();<z>
getId()));<z>
);<z>
());<z>
);<z>
,V> node) {<z>
{<z>
node.parent = null;<z>
node;<z>
, SimpleFeature> getFeatureReader(<z>
typeName) throws IOException {<z>
{<z>
.equals(typeName)) {<z>
return getFeatureReader(name);<z>
(typeName);<z>
) {<z>
);<z>
this.items.add(item);<z>
true;<z>
, item);<z>
{<z>
e) {<z>
, 0, sequenceBox.getText());<z>
float getShininess() {<z>
(isLiveOrCompiled())<z>
))<z>
getString("Material2"));<z>
;<z>
void initializePanel() {<z>
setLayout(new BorderLayout());<z>
;<z>
;<z>
);<z>
(table);<z>
= new JLabel("From row: ");<z>
= new JTextField(3);<z>
new JLabel("To row: ");<z>
field2 = new JTextField(3);<z>
select = new JButton("Select");<z>
new JButton("Clear");<z>
add = new JButton("Add another one");<z>
);<z>
);<z>
() {<z>
actionPerformed(ActionEvent event) {<z>
int index1 = 0;<z>
int index2 = 0;<z>
());<z>
field2.getText());<z>
e) {<z>
;<z>
if (index1 < 0 || index2 < 0 ||<z>
() ||<z>
()) {<z>
.showMessageDialog(table, "Selection out of range!");<z>
} else {<z>
;<z>
;<z>
) {<z>
public void actionPerformed(ActionEvent e) {<z>
, table.getRowCount() - 1);<z>
field1.setText("");<z>
("");<z>
});<z>
ActionListener() {<z>
ActionEvent event) {<z>
int index2 = 0;<z>
.valueOf(field2.getText());<z>
NumberFormatException e) {<z>
);<z>
+ 1;<z>
index2);<z>
;<z>
});<z>
JPanel(new FlowLayout());<z>
);<z>
);<z>
;<z>
command.add(field2);<z>
command.add(select);<z>
add(clear);<z>
(add);<z>
BorderLayout.CENTER);<z>
BorderLayout.SOUTH);<z>
( ) throws Exception<z>
cascade( ) )<z>
);<z>
( pageContext.findAttribute( IMPORT_FILES_ATTR ) == null )<z>
String baseURL = "/webcontent/";<z>
( ) != null )<z>
+ baseURL;<z>
.getRequest( ) )<z>
getContextPath( )<z>
baseURL;<z>
baseURL<z>
+ "birt/styles/style.css\" TYPE=\"text/css\">\n" );<z>
writeExtScripts(writer, baseURL + "birt/ajax/",<z>
new String[] {<z>
"taglib/ProgressBar.js"});<z>
);<z>
writer,<z>
+ "\";\n"<z>
;<z>
;<z>
)<z>
);<z>
, Boolean.TRUE );<z>
getParameterSelectionListForCascadingGroup( );<z>
selectionList );<z>
);<z>
BirtReportServiceFactory<z>
.getParameterSelectionList(<z>
viewer.getReportDesignHandle( ), options,<z>
( ) );<z>
) )<z>
( selectionList );<z>
);<z>
int checkedId) {<z>
< 0 || customRadioButtonId < 0<z>
customRadioButtonId) {<z>
)) {<z>
RadioButton rb = (RadioButton) group<z>
customRadioButtonId);<z>
(rb != null) {<z>
setChecked(false);<z>
else {<z>
Level.WARNING, TAG, "onCheckedChanged",<z>
);<z>
float getBoundedY(final float pY) {<z>
getYMin();<z>
boolean minYBoundExceeded = minYBoundExceededAmount > 0;<z>
this.mBoundsYMax;<z>
0;<z>
{<z>
if(maxYBoundExceeded) {<z>
pY - maxYBoundExceededAmount + minYBoundExceededAmount;<z>
{<z>
return pY + minYBoundExceededAmount;<z>
else {<z>
) {<z>
;<z>
else {<z>
;<z>
public void fillMenuManager(IActionsMenu actionsMenu) {<z>
== null) {<z>
viewPartWithOrientation = view.get();<z>
{<z>
"Automatic",<z>
);<z>
(viewPartWithOrientation, "Horizontal",<z>
));<z>
.add(new SetOrientationActionImpl(viewPartWithOrientation, "Vertical",<z>
ViewPartWithOrientation.PREFERENCES_VIEW_ORIENTATION_VERTICAL));<z>
new DataSet.DataSetSerializer(EXIF_NS_URI, "XMP") {<z>
dataSets) {<z>
0).getValue() +<z>
public StringDictionary(InputStream in) throws IOException,<z>
create(in, new EntryInserter() {<z>
public void insert(Entry entry) throws InvalidFormatException {<z>
.getValue("value");<z>
;<z>
});<z>
] usages) {<z>
= new PsiElement[myElementsToMove.length];<z>
0, myElementsToMove.length);<z>
(myTargetPackage));<z>
exprEvaluatorContext)<z>
this.sourceIterator = sourceIterator;<z>
this.filter = filter;<z>
;<z>
;<z>
dfsXY(RefineVertex v,<z>
t,<z>
HashSet<RefineVertex> visited) {<z>
if (v.isXYVertex()) return;<z>
(v);<z>
e: v.getEdges()) {<z>
getOpposite(v);<z>
;<z>
w))<z>
dfsXY(w,t,visited);<z>
) throws Exception<z>
UIUserInfo uiUserInfo = event.getSource();<z>
uiUserInfo.getApplicationComponent(OrganizationService.class);<z>
save(service);<z>
if (!save)<z>
(), false);<z>
)<z>
service.getUserProfileHandler();<z>
);<z>
= userProfile.getAttribute(Constants.USER_LANGUAGE);<z>
= Util.getUIPortalApplication();<z>
).length() < 1)<z>
=<z>
.class);<z>
;<z>
== null)<z>
;<z>
();<z>
(localeConfig.getLocale());<z>
().addUIComponentToUpdateByAjax(<z>
class));<z>
).ignoreAJAXUpdateOnPortlets(true);<z>
UIAccountEditInputSet.class);<z>
= uiUserInfo.getChild(UIUserProfileInputSet.class);<z>
);<z>
accountInput.reset();<z>
reset();<z>
.getRequestContext().setProcessRender(true);<z>
xla) {<z>
jj_la = xla; jj_lastpos = jj_scanpos = token;<z>
}<z>
{ return true; }<z>
}<z>
getConnectedDeviceWin32() {<z>
);<z>
= JsetupAPi.getHandleForConnectedInterfaces();<z>
hDevInfo.equals(WinBase.INVALID_HANDLE_VALUE)) {<z>
getLogger().error("Cannot have device list");<z>
SP_DEVINFO_DATA DeviceInfoData;<z>
;<z>
hDevInfo, index);<z>
JsetupAPi.getDevId(hDevInfo, DeviceInfoData);<z>
(devid.contains("VID_0FCE")) {<z>
;<z>
id.addDevId(devid);<z>
.isInstalled(hDevInfo, DeviceInfoData))<z>
.setDriverOk(devid,false);<z>
;<z>
++;<z>
(DeviceInfoData!=null);<z>
(hDevInfo);<z>
getHandleForConnectedDevices();<z>
)) {<z>
error("Cannot have device list");<z>
;<z>
= 0;<z>
(hDevInfo, index);<z>
= JsetupAPi.getDevId(hDevInfo, DeviceInfoData);<z>
.contains("VID_0FCE")) {<z>
);<z>
(hDevInfo, DeviceInfoData))<z>
);<z>
setDriverOk(devid,true);<z>
;<z>
} while (DeviceInfoData!=null);<z>
destroyHandle(hDevInfo);<z>
lastid) {<z>
lastid=id;<z>
return id;<z>
rootContainer, final Point aPoint) {<z>
;<z>
EPSILON);<z>
.getComponentCount() == 1) {<z>
[0];<z>
) {<z>
;<z>
*2);<z>
aPoint)) {<z>
= (RadContainer) singleComponent;<z>
2;<z>
;<z>
minVal, double maxVal)<z>
(len>x.length)<z>
=x.length;<z>
;<z>
xmin = MathUtils.min(x);<z>
double xmax = MathUtils.max(x);<z>
;<z>
if (xmax>xmin)<z>
; i++)<z>
maxVal-minVal)+minVal;<z>
<len; i++)<z>
)+0.5*(minVal+maxVal);<z>
return y;<z>
(final String message) {<z>
if (!is_active_) return;<z>
hide();<z>
pending_ = null;<z>
);<z>
row2Object(Record row,<z>
offset,<z>
)<z>
Service) cls.newInstance();<z>
(row, offset, obj);<z>
setModified(false);<z>
.setNew(false);<z>
return obj;<z>
)<z>
(e);<z>
IllegalAccessException e)<z>
(e);<z>
() throws IOException, XMLStreamException {<z>
;<z>
);<z>
(subsystemsFile);<z>
;<z>
subsystemsParser);<z>
)) {<z>
.delete();<z>
getParentFile().exists()) {<z>
.getParentFile().mkdirs()) {<z>
+ outputFile.getParentFile());<z>
))));<z>
;<z>
().marshall(writer);<z>
();<z>
{<z>
);<z>
catch (Exception ignore) {<z>
public static void updateWorkspace(File projectDir) {<z>
named("project")).value();<z>
+ ".iws";<z>
), iwsFileName);<z>
()),<z>
new ClasspathResource("etc/ply-intellij/templates/workspace.xml",<z>
getClassLoader()));<z>
iwsDocument);<z>
{<z>
redisCommands) {<z>
execute() {<z>
, end);<z>
);<z>
resultCode, Intent intent) {<z>
;<z>
;<z>
{<z>
extras = intent.getExtras();<z>
) {<z>
ACTIVITY_CREATE:<z>
;<z>
true;<z>
;<z>
ACTIVITY_FORM_REVIEW:<z>
;<z>
beginListViewReload();<z>
:<z>
;<z>
;<z>
case ACTIVITY_GLOBALSETTINGS:<z>
;<z>
);<z>
experimentId) {<z>
{<z>
removeExtension(GwoExperimentId.class);<z>
{<z>
);<z>
dba,<z>
rs, Map<String, ?> inputs)<z>
SQLException {<z>
(stName, rs);<z>
();<z>
);<z>
cursor);<z>
returnTO.addTableData(stName, rt);<z>
) {<z>
cursorWidth];<z>
; i < cursorWidth; i++) {<z>
rs,<z>
),<z>
(i), i + 1);<z>
));<z>
.close();<z>
int getMinSegmentHighlightersEnd() {<z>
end = myEnd;<z>
{<z>
);<z>
{<z>
getAffectedAreaEndOffset();<z>
());<z>
getMinSegmentHighlighterEnd());<z>
;<z>
writeFile() throws IOException {<z>
();<z>
bounds[] = null;<z>
) _G.getVertices()) {<z>
(v);<z>
bounds == null) {<z>
) };<z>
] = location.getX();<z>
getY();<z>
[2] = location.getX();<z>
getY();<z>
/25.4;<z>
double w = 100 * conversion;<z>
double h = 100 * conversion;<z>
conversion;<z>
T = new AffineTransform();<z>
;<z>
1]));<z>
1]);<z>
);<z>
;<z>
("1 setlinewidth");<z>
getEdges()) {<z>
);<z>
clone();<z>
);<z>
,p2);<z>
println("gsave");<z>
;<z>
.getY()));<z>
;<z>
;<z>
("stroke");<z>
println("grestore");<z>
>) _G.getVertices()) {<z>
;<z>
);<z>
conversion;<z>
println("gsave");<z>
("newpath");<z>
;<z>
pw.println("closepath");<z>
println("gsave");<z>
getUserDatum("key") instanceof BlinkEntry) {<z>
("1 0 0 setrgbcolor");<z>
("fill");<z>
);<z>
.println("fill");<z>
pw.println("grestore");<z>
);<z>
println("0 0 0 setrgbcolor");<z>
pw.println("stroke");<z>
pw.println("grestore");<z>
.printFooter(pw);<z>
;<z>
{<z>
{<z>
MspdiPackage.OUTLINE_CODE_TYPE__FIELD_ID:<z>
return getFieldID();<z>
OUTLINE_CODE_TYPE__VALUE_ID:<z>
();<z>
MspdiPackage.OUTLINE_CODE_TYPE__VALUE_GUID:<z>
getValueGUID();<z>
);<z>
synchronized void readTagsFile() {<z>
sTagCodes != null && sTagNames != null) return;<z>
HashMap<String, Integer>();<z>
String>();<z>
comment = Pattern.compile(COMMENT_PATTERN);<z>
tag = Pattern.compile(TAG_PATTERN);<z>
reader = null;<z>
;<z>
(new FileReader(TAGS_FILE), 256);<z>
null) {<z>
;<z>
);<z>
()) {<z>
": " + line);<z>
parseInt(m.group(1));<z>
String name = m.group(2);<z>
num);<z>
, name);<z>
} catch (NumberFormatException e) {<z>
": " + line, e);<z>
IOException e) {<z>
, "Error reading " + TAGS_FILE, e);<z>
finally {<z>
); } catch (IOException e) {}<z>
inputs,<z>
) {<z>
();<z>
, target, inputs, outputs);<z>
{<z>
unlock();<z>
) throws DaoException {<z>
);<z>
class);<z>
);<z>
;<z>
{<z>
;<z>
Parser parser, OrdinaryMorphism om) {<z>
!this.graphFramesExist) {<z>
makeGraphFrames();<z>
= parser;<z>
.parser.addParserEventListener(this);<z>
getStopGraph());<z>
om.getOriginal());<z>
i, int j, int k) {<z>
c | k << this.b | j;<z>
= l >> 1;<z>
1;<z>
;<z>
{<z>
.status = status;<z>
equals(VMStatus.Paused);<z>
;<z>
String to) {<z>
.equalsIgnoreCase(to)) {<z>
return 1;<z>
);<z>
isEmpty()) {<z>
;<z>
from)) {<z>
);<z>
.equalsIgnoreCase(to)) {<z>
from);<z>
from);<z>
(Graphics g) {<z>
paintComponent(g);<z>
();<z>
g;<z>
;<z>
BasicStroke.CAP_ROUND,BasicStroke.JOIN_ROUND);<z>
(stroke);<z>
RenderingHints(<z>
,<z>
RenderingHints.VALUE_ANTIALIAS_ON);<z>
);<z>
);<z>
,d);<z>
convertView, ViewGroup viewGroup){<z>
student_entry = listRoster.get(position);<z>
if(convertView == null){<z>
) context<z>
(Context.LAYOUT_INFLATER_SERVICE);<z>
, null);<z>
(R.id.tvRosterItemName);<z>
(student_entry.getName());<z>
R.id.radio_group1);<z>
(false);<z>
(false);<z>
; i++){<z>
);<z>
);<z>
(false);<z>
new RadioGroup.OnCheckedChangeListener() {<z>
radiogroup, int checkedId){<z>
getChildCount(); i++){<z>
RadioButton) radiogroup.getChildAt(i);<z>
== checkedId){<z>
)+"");<z>
);<z>
);<z>
;<z>
commentsBox.setFocusable(true);<z>
setFocusableInTouchMode(true);<z>
commentsBox.addTextChangedListener(new TextWatcher() {<z>
s){<z>
);<z>
(s.toString());<z>
(CharSequence s, int start, int<z>
{<z>
setComments("asdf");<z>
(CharSequence s, int start, int before,<z>
{<z>
);<z>
});<z>
convertView;<z>
) {<z>
null;<z>
getWordNodeAtOccurrence(location);<z>
null ) {<z>
getText();<z>
result;<z>
createProperty_kwu3ge_a0c2a(EditorContext editorContext, SNode node) {<z>
);<z>
setRole("name");<z>
provider.setNoTargetText("<no name>");<z>
setReadOnly(true);<z>
;<z>
;<z>
setCellId("property_name_1");<z>
;<z>
);<z>
provider.getRoleAttribute();<z>
= provider.getRoleAttributeClass();<z>
(attributeConcept != null) {<z>
getOperationContext();<z>
(opContext);<z>
editorContext, attributeConcept, attributeKind, editorCell);<z>
return editorCell;<z>
Page<?> page) {<z>
null : "Can't unfocus a null page";<z>
&& (lastFocused != null)) {<z>
(Visibility.notFocused);<z>
);<z>
== Visibility.hidden) {<z>
;<z>
headWidget);<z>
) {<z>
focus(focusedPage);<z>
;<z>
} else {<z>
;<z>
net.URL url) {<z>
if (url == null) {<z>
;<z>
toString();<z>
(!toReturn.endsWith("/")) {<z>
+= "/";<z>
toReturn;<z>
final void rule__ConditionalAndExpression__Group__0() throws RecognitionException {<z>
keepStackSize();<z>
pushFollow(FOLLOW_rule__ConditionalAndExpression__Group__0__Impl_in_rule__ConditionalAndExpression__Group__012837);<z>
;<z>
_fsp--;<z>
(FOLLOW_rule__ConditionalAndExpression__Group__1_in_rule__ConditionalAndExpression__Group__012840);<z>
();<z>
state._fsp--;<z>
) {<z>
reportError(re);<z>
,re);<z>
;<z>
) {<z>
;<z>
= newEndPosition;<z>
))<z>
.COMMENT_BODY__END_POSITION,<z>
oldEndPosition, endPosition));<z>
( )<z>
;<z>
= null;<z>
= null;<z>
final SideTransformActionsBuilderContext _context) {<z>
());<z>
[1];<z>
() {<z>
oldChild, SNode newChild, IScope p3) {<z>
lastPattern[0]);<z>
, String pattern) {<z>
, result);<z>
, _context.getSourceNode(), true);<z>
;<z>
;<z>
INodeSubstituteAction action : list) {<z>
action) {<z>
, String pattern) {<z>
0] = pattern;<z>
substitute(context, pattern);<z>
});<z>
return result;<z>
(<z>
xmlSecStartElement)<z>
throws XMLSecurityException {<z>
getTransforms();<z>
== null || transforms.length == 0) {<z>
= new TransformIdentity();<z>
;<z>
return transformer;<z>
;<z>
0])) {<z>
();<z>
.add("#default");<z>
Transformer parentTransformer = null;<z>
; i >= 0; i--) {<z>
String transform = transforms[i];<z>
== null &&<z>
).isAddExcC14NInclusivePrefixes() &&<z>
)) {<z>
());<z>
));<z>
StringBuilder();<z>
hasNext(); ) {<z>
prefix = iterator.next();<z>
(!inclusiveNamespacePrefixes.contains(prefix)) {<z>
add(prefix);<z>
) {<z>
);<z>
prefix);<z>
.toString());<z>
null) {<z>
(<z>
, transform, XMLSecurityConstants.DIRECTION.OUT);<z>
else {<z>
parentTransformer = XMLSecurityUtils.getTransformer(<z>
, transform, XMLSecurityConstants.DIRECTION.OUT);<z>
parentTransformer;<z>
public boolean equals(findNotes_result that) {<z>
null)<z>
false;<z>
;<z>
isSetSuccess();<z>
) {<z>
))<z>
false;<z>
))<z>
false;<z>
&& this.isSetUserException();<z>
;<z>
this_present_userException || that_present_userException) {<z>
that_present_userException))<z>
return false;<z>
that.userException))<z>
false;<z>
&& this.isSetSystemException();<z>
&& that.isSetSystemException();<z>
that_present_systemException) {<z>
)<z>
return false;<z>
equals(that.systemException))<z>
false;<z>
();<z>
;<z>
that_present_notFoundException) {<z>
this_present_notFoundException && that_present_notFoundException))<z>
false;<z>
notFoundException))<z>
return false;<z>
;<z>
lang.Exception{<z>
object =<z>
DescribeSnapshotsType();<z>
int event;<z>
= null;<z>
="";<z>
lang.String namespaceuri ="";<z>
())<z>
next();<z>
"type")!=null){<z>
getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",<z>
;<z>
!=null){<z>
java.lang.String nsPrefix = null;<z>
indexOf(":") > -1){<z>
(":"));<z>
==null?"":nsPrefix;<z>
indexOf(":")+1);<z>
.equals(type)){<z>
.getNamespaceContext().getNamespaceURI(nsPrefix);<z>
amazon.ec2.ExtensionMapper.getTypeObject(<z>
reader);<z>
= new java.util.Vector();<z>
();<z>
;<z>
))){<z>
Factory.parse(reader));<z>
;<z>
.getLocalName());<z>
);<z>
equals(reader.getName())){<z>
;<z>
();<z>
)) reader.next();<z>
reader.getName())){<z>
));<z>
next();<z>
)) reader.next();<z>
())){<z>
FilterSetType.Factory.parse(reader));<z>
);<z>
.isEndElement())<z>
.next();<z>
))<z>
());<z>
.xml.stream.XMLStreamException e) {<z>
e);<z>
object;<z>
(long organizationId) {<z>
(organizationId);<z>
e) {<z>
.error(e, e);<z>
false;<z>
context)<z>
, context, new Transposition() {<z>
)<z>
public Bindable<?> getBindable(RegexGroup capture)<z>
.getName()));<z>
;<z>
String tags, int limit)<z>
() == API_XML)<z>
uncancel();<z>
;<z>
null;<z>
void loadFromBuffer() {<z>
buff, 0);<z>
LittleEndian.getUInt(buff, 4);<z>
;<z>
.getUInt(buff, 12);<z>
;<z>
.getUInt(buff, 20);<z>
;<z>
.getUInt(buff, 28);<z>
= LittleEndian.getUInt(buff, 32);<z>
36);<z>
= LittleEndian.getUInt(buff, 40);<z>
.getUInt(buff, 44);<z>
getUInt(buff, 48);<z>
private String getDataCellStringValue(int colNum) {<z>
).getCell(colNum);<z>
null) {<z>
return null;<z>
{<z>
cell.getStringCellValue();<z>
private void itemInit() {<z>
"HWISessionItem itemInit start " + getSessionName());<z>
);<z>
getProperty("hwi-args") != null) {<z>
("hwi-args").split("\\s+");<z>
!oproc.process_stage1(parts)) {<z>
();<z>
LogInitializationException e) {<z>
warn(e);<z>
.class);<z>
conf);<z>
(ss);<z>
"set hadoop.job.ugi=" + auth.getUser() + ","<z>
auth.getGroups()[0]);<z>
auth.getUser());<z>
).getHiveHistory().getHistFileName();<z>
"HWISessionItem itemInit Complete " + getSessionName());<z>
WebSessionItemStatus.READY;<z>
{<z>
.notifyAll();<z>
public void recycle() {<z>
if (null != this.inputSource) {<z>
(this.inputSource);<z>
= null;<z>
.manager.release(super.resolver);<z>
= null;<z>
manager = null;<z>
null;<z>
;<z>
() {<z>
== null)<z>
"null";<z>
val instanceof Integer)<z>
;<z>
doubleValue();<z>
Double.isInfinite(d))<z>
d > 0) ? "(1.0 / 0.0)" : "(-1.0 / 0.0)";<z>
isNaN(d))<z>
"(0.0 / 0.0)";<z>
(d);<z>
, Directory baseDirectory, String path) {<z>
(contentProcessor);<z>
baseDirectory;<z>
)) {<z>
path = "/" + path;<z>
= path;<z>
(boolean colored) {<z>
buffer = new StringBuffer();<z>
'[');<z>
());<z>
append("TCPPacket");<z>
);<z>
buffer.append(": ");<z>
(getSourceAddress());<z>
buffer.append('.');<z>
getName(getSourcePort()));<z>
;<z>
);<z>
('.');<z>
)));<z>
))<z>
(getUrgentPointer()) + "]");<z>
)<z>
+<z>
toHexString(getAcknowledgmentNumber()) + "]");<z>
);<z>
)) buffer.append(" rst");<z>
(isSyn())<z>
(" syn[0x" +<z>
) + "]");<z>
()) buffer.append(" fin");<z>
() + "," +<z>
getPayloadDataLength());<z>
buffer.append(']');<z>
;<z>
private void releaseResources (<z>
blending = null;<z>
= null;<z>
;<z>
null;<z>
;<z>
forget = null;<z>
= null;<z>
= null;<z>
help = null;<z>
;<z>
null;<z>
maximizeContrast = null;<z>
nudgeDown = null;<z>
null;<z>
null;<z>
;<z>
= null;<z>
;<z>
null;<z>
null;<z>
null;<z>
null;<z>
= null;<z>
;<z>
null;<z>
null;<z>
null;<z>
;<z>
null;<z>
= null;<z>
= null;<z>
ungroup = null;<z>
);<z>
;<z>
{<z>
= keepStackSize();<z>
;<z>
;<z>
state._fsp--;<z>
.failed) return ;<z>
) {<z>
(re);<z>
(input,re);<z>
stackSize);<z>
(<z>
<Object> objects)<z>
throws Exception {<z>
(xml == null) {<z>
classLoader, xml);<z>
xml);<z>
getRootElement();<z>
"activity");<z>
Element activityElement : activityElements) {<z>
, activityElement);<z>
{<z>
tokenizer.nextToken();<z>
) {<z>
;<z>
else {<z>
throw new InvalidFormatError("double value expected");<z>
final int jjMoveStringLiteralDfa3_0(long old0, long active0)<z>
== 0L)<z>
(1, old0);<z>
}<z>
(java.io.IOException e) {<z>
active0);<z>
return 3;<z>
switch(curChar)<z>
:<z>
;<z>
:<z>
;<z>
case 101:<z>
0x880L);<z>
109:<z>
return jjMoveStringLiteralDfa4_0(active0, 0x400L);<z>
case 111:<z>
jjMoveStringLiteralDfa4_0(active0, 0x500000L);<z>
case 112:<z>
if ((active0 & 0x80000L) != 0L)<z>
;<z>
jjmatchedPos = 3;<z>
(active0, 0xa00000L);<z>
116:<z>
active0, 0x1000L);<z>
;<z>
) {<z>
.nThreads);<z>
subFiles = next.listFiles();<z>
ArrayList<Future<?>>();<z>
if (subFiles != null) {<z>
f : subFiles) {<z>
{<z>
, f, destinationFolder);<z>
if (f.isFile()) {<z>
executor.submit(new Runnable() {<z>
run() {<z>
f.getParent();<z>
().length())));<z>
});<z>
);<z>
);<z>
) {<z>
;<z>
) {<z>
e.printStackTrace();<z>
e) {<z>
);<z>
Object obj)<z>
) return true;<z>
return false;<z>
)obj;<z>
equalsIgnoreCase(other.GetName()) &&<z>
== _aluCount &&<z>
(_cyclesRequiredByOpcode);<z>
V next()<z>
!this.hasNext())<z>
NoSuchElementException();<z>
.innerIterator.next();<z>
XSObject component) {<z>
.getType();<z>
{<z>
) {<z>
case XSModelGroup.COMPOSITOR_SEQUENCE:<z>
"sequence";<z>
:<z>
"all";<z>
.COMPOSITOR_CHOICE:<z>
"choice";<z>
XSConstants.FACET<z>
MULTIVALUE_FACET) {<z>
;<z>
== XSConstants.FACET) {<z>
);<z>
else {<z>
.getFacetKind();<z>
kind) {<z>
.FACET_ENUMERATION:<z>
"enumeration";<z>
:<z>
"fractionDigits";<z>
.FACET_LENGTH:<z>
;<z>
FACET_MAXEXCLUSIVE:<z>
"maxExclusive";<z>
:<z>
return "maxInclusive";<z>
FACET_MAXLENGTH:<z>
"maxLength";<z>
FACET_MINEXCLUSIVE:<z>
;<z>
.FACET_MININCLUSIVE:<z>
;<z>
.FACET_MINLENGTH:<z>
return "minLength";<z>
:<z>
"pattern";<z>
XSSimpleTypeDefinition.FACET_TOTALDIGITS:<z>
"totalDigits";<z>
XSSimpleTypeDefinition.FACET_WHITESPACE:<z>
;<z>
null;<z>
defaultMsg) {<z>
.format("Failed to establish subscription for device %s service %s.",<z>
(),<z>
getServiceId()<z>
;<z>
null) {<z>
)));<z>
responseStatus.getStatusMessage()));<z>
responseStatus.getResponseDetails()));<z>
) {<z>
, exception.getMessage()));<z>
format("Default message: %s", defaultMsg));<z>
()<z>
return getClasses()[0];<z>
IndexOutOfBoundsException ex) {<z>
null;<z>
boolean predicateMatches(final String predicate) {<z>
;<z>
p.equals("studies")<z>
.equals("study");<z>
base, final Object property)<z>
property);<z>
property);<z>
sourcepath) {<z>
sourcepath,<z>
pathSeparator);<z>
= new ArrayList<String>();<z>
(st.hasMoreTokens()) {<z>
();<z>
( ! (s.endsWith(".jar") ||<z>
) {<z>
);<z>
String[0]);<z>
throws TException<z>
);<z>
();<z>
);<z>
;<z>
();<z>
);<z>
{<z>
if (tiffField == null) {<z>
return null;<z>
tiffField.getFirstChild())<z>
getElementsByTagName(GeoTiffConstants.GEOTIFF_DOUBLE_TAG);<z>
doubles.getLength();<z>
double[length];<z>
; i < length; i++) {<z>
;<z>
result;<z>
{<z>
.TNT) {<z>
();<z>
now, block.getState()));<z>
.getLocation(), now);<z>
BlockFace.NORTH, BlockFace.SOUTH};<z>
for(BlockFace face : faces)<z>
, now, face);<z>
public void switchTheme(IThemeEngine engine) {<z>
;<z>
;<z>
new OperationRejectionPolicy() {<z>
(ModelNode preparedResult) {<z>
;<z>
) {<z>
null;<z>
)<z>
{<z>
.class);<z>
, classifier);<z>
(ComponentLookupException e) {<z>
;<z>
File inpFile )<z>
ParseException {<z>
inpFile ),<z>
"ISO-8859-1" ) ) ;<z>
.getInstance( reader ) ;<z>
( BaliParse ) parser.parseAll () ;<z>
) ;<z>
Collector() ;<z>
( tree ) ;<z>
return collector ;<z>
init (Query q)<z>
this.left.init (q);<z>
s = this.items.size ();<z>
0; i < s; i++)<z>
;<z>
;<z>
private Boolean usesClassStringIdConstructor() {<z>
getIdentityType() != ClassMetaData.ID_APPLICATION)<z>
return Boolean.FALSE;<z>
.isOpenJPAIdentity()) {<z>
() == ObjectId.class)<z>
null;<z>
Boolean.TRUE;<z>
;<z>
Class.class, String.class });<z>
;<z>
Throwable t) {<z>
class });<z>
FALSE;<z>
t) {<z>
null;<z>
eventType)<z>
propertyName, filterOperator, eventType);<z>
);<z>
new ReentrantReadWriteLock();<z>
private void createToolbar() {<z>
JToolBar("miniController", JToolBar.VERTICAL);<z>
;<z>
(getActionButton(pauseAction));<z>
add(getActionButton(resumeRecordingAction));<z>
);<z>
add(getActionButton(insertChecklistAction));<z>
getActionButton(stopAction));<z>
getActionButton(rawRecordAction);<z>
setSelectedIcon(rawRecordButton.getDisabledIcon());<z>
);<z>
toolBar.setFloatable(false);<z>
;<z>
deactivated() {<z>
fPage.getSite();<z>
IHandlerService handlerService = (IHandlerService) site<z>
getService(IHandlerService.class);<z>
) site<z>
.getService(IContextService.class);<z>
);<z>
.deactivateContext(fActivatedContext);<z>
realSelf) {<z>
TYPE_ALIAS_METHOD);<z>
this.name = name;<z>
.realMethod = realMethod;<z>
this.realSelf = realSelf;<z>
{<z>
item = new JMenuItem( "Dark color" );<z>
.addActionListener( new ActionListener(){<z>
){<z>
);<z>
)<z>
dark );<z>
});<z>
item;<z>
) throws IOException<z>
= m_bytes.readU2 ();<z>
+ _fields_count);<z>
getConstants ();<z>
; i < _fields_count; i++)<z>
field_info = new Field_info (constantPool, m_bytes);<z>
)<z>
"[" + i + "] field: " + field_info);<z>
System.out.println ();<z>
).add (field_info);<z>
(PARSE_SERIAL_VERSION_UID)<z>
getAccessFlags () & SERIAL_VERSION_UID_FIELD_MASK) == SERIAL_VERSION_UID_FIELD_MASK)<z>
.getName (m_table)))<z>
= field_info.getAttributes ();<z>
< aLimit; ++ a)<z>
Attribute_info attr_info = attributes.get (a);<z>
)<z>
) attr_info).getValue (m_table);<z>
(constant_value instanceof CONSTANT_Long_info)<z>
);<z>
{<z>
classes = getGeneratedClasses();<z>
(name)) {<z>
null;<z>
);<z>
tryCreate(logger, packageName, shortName);<z>
{<z>
return null;<z>
writer;<z>
)<z>
)<z>
par2 = this.entityViewDistance;<z>
))<z>
IllegalStateException("Entity is already tracked!");<z>
;<z>
trackedEntities.add(var5);<z>
entityId, var5);<z>
playerEntities);<z>
) {<z>
affects = false;<z>
;<z>
) {<z>
;<z>
event);<z>
return affects;<z>
public void onClick(Widget sender)<z>
if (this.inPopout)<z>
.getCurrentUser();<z>
))<z>
ClickListener()<z>
Widget sender)<z>
;<z>
().isRecordingActive())<z>
= new StartRecordingQuestion1Widget();<z>
previousRecordingExists)<z>
;<z>
new ClickListener()<z>
sender)<z>
onOK();<z>
;<z>
cuid = CommonUserInformationDialog.getCommonUserInformationDialog(<z>
confirmationMessage);<z>
cuid.drawDialog();<z>
)<z>
alert(e.getMessage());<z>
);<z>
.addCancelClickListener(cancelClickListener);<z>
confirmationMessage = new StopRecordingQuestion1Widget();<z>
;<z>
getCommonUserInformationDialog(<z>
;<z>
()<z>
void onClick(Widget sender)<z>
;<z>
.drawDialog();<z>
(okClickListener);<z>
cancelClickListener);<z>
? extends OsmPrimitive> selection ) {<z>
= false;<z>
selection != null ) {<z>
) {<z>
(p) ) {<z>
foundOld = true;<z>
clear();<z>
;<z>
else {<z>
selectionBuf.isEmpty();<z>
;<z>
) {<z>
;<z>
);<z>
);<z>
tags.isEmpty());<z>
void setSynMessageButtonSelection(boolean state) {<z>
(fSynMessageButton != null) {<z>
(state);<z>
additionalInformation) {<z>
;<z>
) > 0) {<z>
);<z>
{<z>
Node childNode = elements.item(i);<z>
)) {<z>
getText()));<z>
;<z>
attributeNames);<z>
hiddenAttributes.removeAll(visibleAttributes);<z>
.setHiddenAttributes(hiddenAttributes);<z>
(String name) throws IOException {<z>
FileHeaderKey(indexName, name));<z>
if (fileHeaderValue != null) {<z>
fileHeaderValue.getSize();<z>
0;<z>
Bundle savedInstanceState) {<z>
onCreate(savedInstanceState);<z>
(this)) {<z>
this);<z>
;<z>
search_hint), false);<z>
) {<z>
);<z>
];<z>
;<z>
localpart)) {<z>
.SEVERITY_ERROR);<z>
intern());<z>
> 0 && uri == null) {<z>
qNameStr, prefix}, XMLErrorReporter.SEVERITY_ERROR);<z>
static String getFormatDescription() {<z>
"[original filename FS]:[translated filename VFS]";<z>
":[timestamp VFS]:[timestamp FS]";<z>
+= ":[VFS=readable timestamp VFS]:[FS=readable timestamp FS]";<z>
;<z>
) {<z>
if (isAuthorized()) {<z>
);<z>
;<z>
(R.menu.issue_menu, menu);<z>
if ("closed".equals(mIssueState)) {<z>
;<z>
.id.issue_reopen);<z>
{<z>
issue_close);<z>
issue_reopen);<z>
.issue_edit);<z>
super.onPrepareOptionsMenu(menu);<z>
void setVolume(int vol) {<z>
= synth.getChannels();<z>
(double)vol/100);<z>
channels.length; i++) {<z>
int)(gain * 127));<z>
== 0);<z>
{<z>
= keepStackSize();<z>
2;<z>
.LA(1);<z>
(LA27_0==RULE_INT) ) {<z>
alt27=1;<z>
==RULE_DECIMAL) ) {<z>
alt27=2;<z>
; return ;}<z>
=<z>
input);<z>
throw nvae;<z>
{<z>
1 :<z>
( state.backtracking==0 ) {<z>
.getINTTerminalRuleCall_1_1_1_0());<z>
state.failed) return ;<z>
0 ) {<z>
().getINTTerminalRuleCall_1_1_1_0());<z>
:<z>
==0 ) {<z>
().getDECIMALTerminalRuleCall_1_1_1_1());<z>
.failed) return ;<z>
state.backtracking==0 ) {<z>
getDECIMALTerminalRuleCall_1_1_1_1());<z>
re) {<z>
;<z>
;<z>
);<z>
synchronized List<CDXmlDescriptor> getCdsList() {<z>
if (cdsList == null) {<z>
);<z>
resource = ccl.getResource("org/richfaces/demo/tree/CDCatalog.xml");<z>
;<z>
.class);<z>
resource);<z>
();<z>
JAXBException e) {<z>
getMessage(), e);<z>
;<z>
public void printPresentPlayers(Player player) {<z>
"";<z>
).getPlayerList()) {<z>
).toString().toLowerCase(),<z>
)) {<z>
p.getName();<z>
() < 2) {<z>
Colors.Yellow + "Present players : "<z>
;<z>
{<z>
(Colors.Yellow + "Present players :"<z>
Colors.White + list);<z>
getCommandMap () {<z>
return command;<z>
addLineNumbers(String orig, String scriptPath){<z>
= orig.replaceAll("\\r", "");<z>
.equals(orig)) return orig;<z>
);<z>
StringBuffer();<z>
int len = lines.length;<z>
; i++) {<z>
String line = lines[i];<z>
trim())) continue;<z>
+line+"</a>\n");<z>
;<z>
java.rmi.RemoteException {<z>
) {<z>
.axis.NoEndPointException();<z>
Call _call = createCall();<z>
_operations[9]);<z>
);<z>
"http://www.chemspider.com/SearchByMassAsync");<z>
setEncodingStyle(null);<z>
FALSE);<z>
FALSE);<z>
axis.soap.SOAPConstants.SOAP12_CONSTANTS);<z>
));<z>
);<z>
_call);<z>
});<z>
) {<z>
throw (java.rmi.RemoteException)_resp;<z>
_call);<z>
java.lang.String) _resp;<z>
(java.lang.Exception _exception) {<z>
.class);<z>
{<z>
axisFaultException;<z>
(int d) {<z>
{<z>
case DIALOG_DISTANCE:<z>
this);<z>
;<z>
, new DialogInterface.OnClickListener() {<z>
, int item) {<z>
;<z>
setDeviceLocation();<z>
;<z>
= builder.create();<z>
();<z>
DIALOG_CLEAR_DEPLOYMENT:<z>
clearBuilder = new AlertDialog.Builder(this);<z>
string.confirm_clear))<z>
)<z>
.status_yes),<z>
DialogInterface.OnClickListener() {<z>
{<z>
();<z>
("");<z>
getString(R.string.status_no),<z>
OnClickListener() {<z>
{<z>
);<z>
});<z>
clearDialog = clearBuilder.create();<z>
);<z>
DIALOG_ADD_DEPLOYMENT:<z>
(this);<z>
.layout.deployment_add, null);<z>
deploymentUrl = (EditText)textEntryView<z>
(R.id.deployment_description_edit);<z>
EditText deploymentName = (EditText)textEntryView<z>
deployment_url_edit);<z>
deploymentUrl.setOnTouchListener(new OnTouchListener() {<z>
MotionEvent event) {<z>
) {<z>
;<z>
return false;<z>
;<z>
(this);<z>
add_deployment)<z>
.setView(textEntryView)<z>
{<z>
whichButton) {<z>
getText()<z>
.toString()))<z>
)))) {<z>
)<z>
));<z>
);<z>
{<z>
.fix_error);<z>
R.string.btn_cancel,<z>
.OnClickListener() {<z>
int whichButton) {<z>
dialog.cancel();<z>
);<z>
);<z>
.show();<z>
parent, int styles, EObject obj,<z>
String property, boolean enabled )<z>
;<z>
)<z>
, BufferUnderrunException {<z>
int ch1 = stream.read();<z>
stream.read();<z>
read();<z>
();<z>
= stream.read();<z>
stream.read();<z>
stream.read();<z>
= stream.read();<z>
) {<z>
BufferUnderrunException();<z>
56) +<z>
+<z>
)ch6 << 40) +<z>
((long)ch5 << 32) +<z>
ch4 << 24) +<z>
+<z>
8) +<z>
(ch1 << 0);<z>
void preserveValues( Widget widget ) {<z>
FileUpload ) widget;<z>
);<z>
preserveCustomVariant( fileUpload );<z>
);<z>
);<z>
(int index, ServiceBinding sb)<z>
(this.service == null)<z>
(index, sb);<z>
boolean isInternalFrameSystemMenu() {<z>
);<z>
)) ||<z>
(actionCommand.equals("Minimize")) ||<z>
||<z>
(actionCommand.equals("Maximize"))) {<z>
;<z>
;<z>
{<z>
) > 0) {<z>
get(0);<z>
r.getAngle();<z>
;<z>
final ContentIndexQuery query )<z>
( query, 1 );<z>
;<z>
saturatedCast( actualCount );<z>
(List<BuiltInArgument> arguments) throws BuiltInException<z>
;<z>
);<z>
return result;<z>
) {<z>
null) {<z>
new ContributionTemplateStore(<z>
R_CODE_TEMPLATES_KEY);<z>
fRCodeTemplatesStore.load();<z>
(final IOException e) {<z>
);<z>
return fRCodeTemplatesStore;<z>
writeExternal(Element element) throws WriteExternalException {<z>
);<z>
());<z>
) {<z>
(myModuleName != null) {<z>
Element("module");<z>
;<z>
m.setText(myModuleName);<z>
else if (scopeType == ScopeType.DIRECTORY) {<z>
p = new Element("path");<z>
;<z>
"recursive", Boolean.toString(myRecursive));<z>
{<z>
);<z>
== ScopeType.CUSTOM) {<z>
) {<z>
("scope-name", myScopeName);<z>
setSurface(Component c) {<z>
c != c) {<z>
)<z>
;<z>
this.c = c;<z>
getComponentID(c);<z>
out.println("[mplayer] drawing to window id " + id);<z>
null)<z>
io = new MplayerIO(id);<z>
){<z>
>0){<z>
+")");<z>
"正在切换数据库中，请稍后..."+"(正在扫描，进度:"+percent+")");<z>
) throws SQLException {<z>
;<z>
);<z>
MysqlDefs.FIELD_TYPE_TINY);<z>
.value = null;<z>
longBinding = x;<z>
;<z>
;<z>
)<z>
DNC_CLIENT ) &&<z>
( greaterThanOrEqualTo( 10, 2, 0 ) )<z>
) {<z>
);<z>
(fillStyle != null) {<z>
(), preferenceFillColorName);<z>
(fillRGB).intValue());<z>
v) {<z>
);<z>
name.equalsIgnoreCase("Longitude"))<z>
.toString()));<z>
)<z>
Lat.toString()));<z>
public View onCreateView(LayoutInflater inflater,<z>
container,<z>
) {<z>
.layout.editor, container, false);<z>
(R.id.editor);<z>
(KEY_POSITION, -1);<z>
position + 1));<z>
));<z>
);<z>
) {<z>
(inFlight) {<z>
> iter = inFlight.iterator();<z>
(iter.hasNext())<z>
;<z>
) iter.remove();<z>
] getAlbumArtists() {<z>
] projection = new String[] {<z>
AlbumColumns.ARTIST<z>
Albums.DEFAULT_SORT_ORDER;<z>
.Albums.EXTERNAL_CONTENT_URI;<z>
;<z>
>();<z>
!= null) {<z>
getCount();<z>
> 0) {<z>
.ARTIST);<z>
count; i++) {<z>
moveToPosition(i);<z>
c.getString(ARTIST_IDX));<z>
();<z>
null;<z>
[artistIds.size()]);<z>
actionPerformed(AnActionEvent e) {<z>
final Project project = e.getProject();<z>
) {<z>
DataFlavor[] getTransferDataFlavors() {<z>
{<z>
.imageFlavor<z>
isDataFlavorSupported(DataFlavor flavor) {<z>
;<z>
IOException {<z>
(DataFlavor.imageFlavor)) {<z>
;<z>
,<z>
;<z>
;<z>
;<z>
});<z>
{<z>
).save();<z>
) {<z>
.printStackTrace();<z>
.openError(getShell(),<z>
;<z>
keyWidget, Text valueWidget, StructuredViewer table) {<z>
.keyWidget = keyWidget;<z>
.valueWidget = valueWidget;<z>
= table;<z>
() throws Exception {<z>
= new ArrayList<String>();<z>
(getSourceNames());<z>
names) {<z>
sourceConfig = getSourceConfig(sourceName);<z>
sourceConfig.isEnabled()) continue;<z>
;<z>
Exception e) {<z>
()+".", e);<z>
) {<z>
Math.abs(re);<z>
im);<z>
(absRe == 0 && absIm == 0) {<z>
0;<z>
else if (absRe>absIm) {<z>
double temp = absIm/absRe;<z>
temp);<z>
else {<z>
double temp = absRe/absIm;<z>
temp);<z>
, String type, String access){<z>
= name;<z>
;<z>
;<z>
{<z>
v.getParent();<z>
) {<z>
.v = new DaryHeapNode(v);<z>
v.mark();<z>
;<z>
Node.NOKEY);<z>
(Node.NOKEY);<z>
);<z>
v2.goTo(v);<z>
;<z>
));<z>
H.v.getKey());<z>
());<z>
;<z>
unmark();<z>
;<z>
H.v2 = null;<z>
;<z>
);<z>
);<z>
migrationTransactionTimeout) {<z>
{<z>
"No datasource available, stopping migration. Probably running fully in-memory.");<z>
true;<z>
final int version;<z>
);<z>
{<z>
"The ODE_SCHEMA_VERSION database table doesn't exist. Unless you need to migrate your data" +<z>
;<z>
false;<z>
-1) {<z>
;<z>
;<z>
version == CURRENT_SCHEMA_VERSION) return true;<z>
() {<z>
{<z>
>();<z>
CURRENT_SCHEMA_VERSION, migrations);<z>
migrations.size() == 0) {<z>
+ version + " to " + CURRENT_SCHEMA_VERSION + ", aborting");<z>
;<z>
{<z>
boolean success = true;<z>
mig : migrations) {<z>
debug("Running migration " + mig);<z>
.dao.getConnection()) && success;<z>
_contexts.scheduler.setRollbackOnly();<z>
else setDbVersion(CURRENT_SCHEMA_VERSION);<z>
success;<z>
, migrationTransactionTimeout);<z>
success;<z>
catch (Exception e) {<z>
error("An error occured while migrating your database to a newer version of ODE, changes have " +<z>
"been aborted", e);<z>
new RuntimeException(e);<z>
{<z>
server;<z>
(servers) {<z>
= servers.first();<z>
(server);<z>
;<z>
.add(server);<z>
);<z>
;<z>
(CookiePolicy.BROWSER_COMPATIBILITY);<z>
.server.equals(DEFAULT)) {<z>
+ server.server + "; path=/");<z>
, "application/json", "utf-8"));<z>
info("doing query... server=" + server.server);<z>
start = System.currentTimeMillis();<z>
;<z>
{<z>
"Invalid status code: " + method.getStatusCode());<z>
);<z>
;<z>
System.currentTimeMillis() - start;<z>
.updateStats(duration));<z>
();<z>
) {<z>
e);<z>
1);<z>
IPackageBinding getPackage() {<z>
(this.binding.kind()) {<z>
.BASE_TYPE :<z>
.ARRAY_TYPE :<z>
case Binding.TYPE_PARAMETER :<z>
:<z>
:<z>
;<z>
ReferenceBinding) this.binding;<z>
;<z>
LoopItem(final String id, final int index)<z>
);<z>
.index = index;<z>
String name) {<z>
("Class:"))<z>
return name;<z>
6), ".", "/") + ".class";<z>
ArrayList<AreaInfo> queryAreas(){<z>
= new ArrayList<AreaInfo>();<z>
DriverManager<z>
(getConnectionURI());<z>
mStatement = mMysqlConnection.createStatement();<z>
= mStatement<z>
TABLE_AREA);<z>
{<z>
);<z>
.getInt(COLUMN_ID) );<z>
;<z>
) );<z>
COLUMN_VERSION) );<z>
add(info);<z>
AreaInfo info : areaInfos){<z>
services.xhunt.proxy.Ticket> ticketTypes<z>
);<z>
info.getAreaId());<z>
ticket : tickets){<z>
);<z>
ticketTypes );<z>
{<z>
+ e.getMessage());<z>
);<z>
;<z>
String[] namespaces, final Callback callback) {<z>
);<z>
.length; i++) {<z>
j++) {<z>
[j]));<z>
j], rawXmlProvider);<z>
namespaces[j], rawXmlProvider);<z>
;<z>
() {<z>
) {<z>
.toXML());<z>
(namespaces)));<z>
{<z>
getMessage(), e);<z>
(e.getMessage());<z>
initialize(Model model, RowMapper rowMapper,<z>
,<z>
,<z>
repositoryEventQueue,<z>
String> properties) {<z>
.model = model;<z>
rowMapper;<z>
cachePropagator;<z>
addQueue(cacheQueue);<z>
eventQueue = repositoryEventQueue;<z>
= eventPropagator;<z>
repositoryEventQueue);<z>
node)<z>
.getString(node);<z>
;<z>
BasicWindow w)<z>
("iconWindow.png")));<z>
addActionListener(this);<z>
(mi);<z>
, String board) {<z>
command = "print Friends you can add as a participant to this region/post:;";<z>
|| addables.size() == 0) {<z>
EMPTY_LIST;<z>
else {<z>
: addables) {<z>
;<z>
command += "print To add participants with view and post privilege, " +<z>
return command;<z>
{<z>
c);<z>
c);<z>
);<z>
JRootPane)c);<z>
)<z>
(this == obj)<z>
return true;<z>
null)<z>
return false;<z>
if (!(obj instanceof CommonIronJacamarImpl))<z>
;<z>
CommonIronJacamarImpl) obj;<z>
)<z>
if (other.adminObjects != null)<z>
false;<z>
adminObjects.equals(other.adminObjects))<z>
;<z>
if (beanValidationGroups == null)<z>
beanValidationGroups != null)<z>
false;<z>
!beanValidationGroups.equals(other.beanValidationGroups))<z>
false;<z>
== null)<z>
!= null)<z>
;<z>
equals(other.bootstrapContext))<z>
return false;<z>
null)<z>
.configProperties != null)<z>
return false;<z>
equals(other.configProperties))<z>
;<z>
connectionDefinitions == null)<z>
.connectionDefinitions != null)<z>
false;<z>
!connectionDefinitions.equals(other.connectionDefinitions))<z>
false;<z>
!= other.transactionSupport)<z>
return false;<z>
true;<z>
private String getTextValue(Node node) {<z>
{<z>
"";<z>
ATTRIBUTE_NODE) {<z>
;<z>
.getChildNodes();<z>
(); i++) {<z>
Node childNode = list.item(i);<z>
) {<z>
processText(childNode.getNodeValue());<z>
return "";<z>
> int updateField (<z>
T object, String field)<z>
);<z>
);<z>
executeUpdate(new Operation<Integer>() {<z>
conn, DatabaseLiaison liaison)<z>
throws SQLException, PersistenceException<z>
mask);<z>
});<z>
public Builder mergeFrom(<z>
protobuf.CodedInputStream input,<z>
protobuf.ExtensionRegistryLite extensionRegistry)<z>
.io.IOException {<z>
protobuf.UnknownFieldSet.Builder unknownFields =<z>
UnknownFieldSet.newBuilder(<z>
);<z>
) {<z>
input.readTag();<z>
{<z>
case 0:<z>
());<z>
;<z>
{<z>
parseUnknownField(input, unknownFields,<z>
extensionRegistry, tag)) {<z>
unknownFields.build());<z>
;<z>
{<z>
;<z>
valueOf(rawValue);<z>
== null) {<z>
, rawValue);<z>
else {<z>
);<z>
(long totalBytes, long currentBytes) {<z>
0) {<z>
return "0%";<z>
= currentBytes * 100 / totalBytes;<z>
StringBuilder sb = new StringBuilder();<z>
);<z>
;<z>
return sb.toString();<z>
, double[] set2) {<z>
dot(set1, set2);<z>
= sumOfSquares(set1);<z>
);<z>
);<z>
id, String title,<z>
names) {<z>
],<z>
]);<z>
) throws Exception {<z>
(value == null) {<z>
null;<z>
);<z>
fieldName, String value )<z>
recordId, fieldName, value );<z>
state = STATE_RECORD_SUCCESS;<z>
();<z>
( IOException e )<z>
e );<z>
ui, final JComponent uiComp) {<z>
(ui.aboutImg != null)<z>
) {<z>
run() {<z>
;<z>
h = 60;<z>
w, h,<z>
.TYPE_INT_ARGB);<z>
;<z>
.BLUE);<z>
0, w, h);<z>
);<z>
));<z>
"NeoeEdit", 6, h - 20);<z>
gi.setColor(Color.YELLOW);<z>
);<z>
;<z>
("visit " + url<z>
- 6);<z>
;<z>
);<z>
.aboutY = -h;<z>
aboutOn = true;<z>
h; i <= 0; i++) {<z>
= i;<z>
;<z>
h);<z>
.sleep(2000);<z>
) {<z>
aboutY = i;<z>
repaint();<z>
/ h);<z>
Exception e) {<z>
e.printStackTrace();<z>
{<z>
aboutOn = false;<z>
.aboutImg = null;<z>
;<z>
, boolean includeDeleted)<z>
();<z>
String>();<z>
(!getOpacity())<z>
(lPath));<z>
(lookup != null)<z>
) lookup.getCurrentNode();<z>
getListing(lookup, childNamePattern, includeDeleted);<z>
entry : underListing.entrySet())<z>
() == AVMNodeType.LAYERED_DIRECTORY ||<z>
() == AVMNodeType.PLAIN_DIRECTORY)<z>
))<z>
;<z>
());<z>
, childNamePattern))<z>
.LAYERED_DIRECTORY ||<z>
)<z>
()))<z>
) == AVMNodeType.DELETED_NODE)<z>
().getName());<z>
());<z>
!= null)<z>
);<z>
), entry.getChild());<z>
;<z>
getQuantile(double phi) {<z>
;<z>
* summary.size());<z>
intValue());<z>
(Exception e){<z>
.NaN;<z>
artifact, String resolverId) {<z>
.id = getArtId(artifact);<z>
= resolverId;<z>
;<z>
);<z>
) {<z>
;<z>
{<z>
= url.toExternalForm();<z>
local = false;<z>
();<z>
pattern, List<AlphaNodeFieldConstraint> alphaConstraints ) {<z>
) {<z>
);<z>
) ) {<z>
{<z>
(OperatorConstraint) constraint;<z>
.attachNode( context,<z>
getNodeFactoryService()).buildLogicalAlphaOperatorNode(<z>
.getNextId(),<z>
getLabel(),<z>
,<z>
opc.getArity(),<z>
getObjectSource(),<z>
context) ) );<z>
{<z>
.getNodeFactoryService().buildAlphaNode(<z>
),<z>
AlphaNodeFieldConstraint) constraint,<z>
),<z>
context);<z>
( DroolsQuery.class ) ) {<z>
false );<z>
.attachNode( context, alpha ) );<z>
{<z>
( context,<z>
().getNodeFactoryService()).buildDelayedEvaluationNode(<z>
,<z>
),<z>
) );<z>
);<z>
(<z>
long currentQuota,<z>
long totalUsedQuota,<z>
{<z>
if (mWebChromeClient == null) {<z>
quotaUpdater.updateQuota(currentQuota);<z>
Message exceededQuota = obtainMessage(EXCEEDED_DATABASE_QUOTA);<z>
map = new HashMap();<z>
.put("databaseIdentifier", databaseIdentifier);<z>
url);<z>
currentQuota);<z>
("estimatedSize", estimatedSize);<z>
totalUsedQuota);<z>
, quotaUpdater);<z>
exceededQuota.obj = map;<z>
exceededQuota);<z>
) {<z>
setFocusable(false);<z>
false);<z>
;<z>
) {<z>
))) {<z>
()) {<z>
instanceof PsiTypeParameter) {<z>
aClass.getConstructors();<z>
.length > 0) {<z>
getMethods();<z>
0) {<z>
;<z>
0) {<z>
= aClass.getInitializers();<z>
initializers.length > 0) {<z>
{<z>
) {<z>
.isInheritor(aClass, "java.lang.Throwable")) {<z>
aClass, aClass);<z>
args){<z>
(geometryVertex==null)<z>
&& geometryVertex==null; i++)<z>
GeometricVertex)<z>
);<z>
==null)<z>
() && textureVertex==null; i++)<z>
entities.get(i) instanceof TextureVertex)<z>
.get(i);<z>
Data();<z>
length; i++){<z>
("/");<z>
.parseInt(index[0]);<z>
v =<z>
vnum);<z>
.add(v);<z>
1){<z>
[1]);<z>
TextureVertex.Data vt =<z>
.Data)textureVertex.getData(vtnum);<z>
vt);<z>
{ e.printStackTrace(); }<z>
instantiate();<z>
;<z>
String url) {<z>
;<z>
getWorkbench()<z>
.getBrowserSupport();<z>
openURL(theURL);<z>
e) {<z>
(PartInitException e) {<z>
static void setRoot(File dir) {<z>
;<z>
)) {<z>
throw new RuntimeException("A directory is expected");<z>
.ProtoAccountStoreData.ProtoHumanAccountData parseDelimitedFrom(<z>
,<z>
.protobuf.ExtensionRegistryLite extensionRegistry)<z>
java.io.IOException {<z>
;<z>
, extensionRegistry)) {<z>
buildParsed();<z>
} else {<z>
;<z>
String toString() {<z>
.getClass().getName());<z>
sb.append(" [ ");<z>
).append(" | ");<z>
(" | ");<z>
());<z>
(" ]");<z>
.toString();<z>
WorkflowWizardDialog getDialog() {<z>
) {<z>
();<z>
dialog;<z>
) throws GatewayException, IOException,<z>
().getMaxObject("maw.mobile.sms");<z>
sms) mo;<z>
());<z>
(parent.getOutputStream());<z>
.SERIAL_POLLING)<z>
));<z>
e) {<z>
throw new GatewayException("Max Serial Input Stream exception: "<z>
;<z>
IPluginLibrary library, String libraryName) {<z>
());<z>
< fragments.length; i++) {<z>
[i], libraryName);<z>
)<z>
return fragments[i];<z>
;<z>
public void onItemClick(AdapterView<?> parent,<z>
View view,<z>
,<z>
{<z>
+ ")...");<z>
(String) parent.getItemAtPosition(position);<z>
log("- message: '" + message + "'");<z>
1)) {<z>
);<z>
{<z>
;<z>
= mInCallScreen.getResources();<z>
(R.string.respond_via_sms_confirmation_format);<z>
= String.format(formatString, mPhoneNumber);<z>
(mInCallScreen,<z>
LENGTH_LONG).show();<z>
);<z>
);<z>
.mCM.getState();<z>
.State.IDLE) {<z>
().dismissCallScreen();<z>
{<z>
();<z>
(cfSession _Session) throws cfmRunTimeException {<z>
attributes = setAttributeCollection(_Session);<z>
{<z>
_Session, "NAME").getString();<z>
;<z>
(attributes,"CHARSET")) {<z>
);<z>
getBytes(), charset);<z>
} catch (UnsupportedEncodingException u) {<z>
);<z>
{<z>
,_Session, "VALUE").getString();<z>
equalsIgnoreCase(name)) {<z>
);<z>
{<z>
.setHeader(name, value);<z>
else {<z>
;<z>
"STATUSTEXT")) {<z>
;<z>
(code, text);<z>
} else {<z>
code);<z>
return cfTagReturnType.NORMAL;<z>
) {<z>
= getConnection();<z>
Statement stmt = con.createStatement();<z>
stmt.execute(USER_TABLE_SCRIPT);<z>
COURSE_TABLE_SCRIPT);<z>
(ENROLLMENT_TABLE_SCRIPT);<z>
(EVENT_TABLE_SCRIPT);<z>
(FOLDER_TABLE_SCRIPT);<z>
.execute(SUBMISSION_TABLE_SCRIPT);<z>
.execute(DISCUSSION_BOARD_TABLE_SCRIPT);<z>
DISCUSSION_POST_TABLE_SCRIPT);<z>
.execute(DISCUSSION_TOPIC_TABLE_SCRIPT);<z>
e) {<z>
());<z>
);<z>
Line getLineIfRelevant(ContentElement paraElement) {<z>
(paraElement) : null;<z>
INode fromNode, INode toNode) {<z>
.isEmpty()) return;<z>
, toNode);<z>
) {<z>
getNodesFor(transitionNodes, syntax);<z>
getLastNavigableState(), syntaxNodes);<z>
protected SOAPMessage getParameter(Packet packet) {<z>
, true);<z>
se) {<z>
new WebServiceException(se);<z>
protected void addClientDependency() {<z>
getInput(), clientDependencyFilters, clientDependencyBusinessFilters,<z>
)) {<z>
selection) {<z>
);) {<z>
(EObject) iter.next();<z>
.Actor.Properties.clientDependency,<z>
);<z>
.refresh();<z>
dialog.open();<z>
PolicyAttributeDescription unmarshall(StaxUnmarshallerContext context) throws Exception {<z>
);<z>
= context.getCurrentDepth();<z>
1;<z>
) targetDepth += 2;<z>
(true) {<z>
();<z>
xmlEvent.isEndDocument()) return policyAttributeDescription;<z>
()) {<z>
.testExpression("AttributeName", targetDepth)) {<z>
);<z>
.testExpression("AttributeValue", targetDepth)) {<z>
().unmarshall(context));<z>
if (xmlEvent.isEndElement()) {<z>
< originalDepth) {<z>
return policyAttributeDescription;<z>
public static CharSequence contactToToken(Contact c) {<z>
());<z>
();<z>
0) {<z>
return s;<z>
), 0, len,<z>
SPAN_EXCLUSIVE_EXCLUSIVE);<z>
;<z>
public void init() {<z>
Runnable() {<z>
void run() {<z>
values()) {<z>
.dispose();<z>
);<z>
v) {<z>
= 1;<z>
--j>=0;)<z>
;<z>
return h;<z>
Broker broker, RuntimeExceptionTranslator trans) {<z>
;<z>
)<z>
(DelegatingBroker) broker;<z>
;<z>
= trans;<z>
{<z>
();<z>
StringBuffer(super.toString());<z>
append(" (description: ");<z>
description);<z>
result.append(", references: ");<z>
.append(references);<z>
(", documentation: ");<z>
(documentation);<z>
;<z>
.toString();<z>
forPromise(String promiseToken) {<z>
;<z>
PROMISE);<z>
result.setPromiseToken(promiseToken);<z>
;<z>
unresolve(String href) {<z>
),<z>
),<z>
"/help/ntopic"),<z>
("/help/rtopic") };<z>
length; i++) {<z>
) {<z>
[i].length());<z>
href;<z>
createAnnotation(<z>
Class<? extends Annotation> annotationType,<z>
AnnotationMember[] elements)<z>
;<z>
annotationType.getClassLoader(),<z>
);<z>
static void main(String[] args)<z>
Main orbdprogram = new Main();<z>
(args);<z>
catch (Exception e)<z>
Messages.getString("Main.InternalError"));<z>
printStackTrace(System.err);<z>
1);<z>
OpenEJBException {<z>
getApplicationClient() == null){<z>
;<z>
getAltDDs().containsKey("application-client.xml"))<z>
().isMetadataComplete()) return clientModule;<z>
);<z>
if (finder == null) {<z>
);<z>
e) {<z>
, clientModule.getJarLocation());<z>
clientModule;<z>
Exception e) {<z>
e, clientModule.getJarLocation());<z>
;<z>
finder.findMetaAnnotatedClasses(LocalClient.class)) {<z>
).getName());<z>
class)) {<z>
().getName());<z>
() == null){<z>
() > 0) {<z>
ApplicationClient());<z>
clientModule;<z>
public IJavaScriptNmrshiftdbManager getJavaScriptNmrshiftdbManager() {<z>
IJavaScriptNmrshiftdbManager manager = null;<z>
(1000*10);<z>
catch (InterruptedException e) {<z>
LogUtils.debugTrace(logger, e);<z>
) {<z>
IllegalStateException("Could not get the nmrshiftdb manager");<z>
manager;<z>
private void bindDiscount() {<z>
"discount.discountAmount", "discount.numberOfUses",<z>
;<z>
getParameter("discount.unlimited"))) {<z>
.setNumberOfUses(-1);<z>
deactivate() {<z>
);<z>
if (updatableParent != null) {<z>
;<z>
;<z>
));<z>
;<z>
removeAromaticityFlagsFromHoseCode(String hoseCode){<z>
;<z>
++){<z>
'*'){<z>
i);<z>
return hosecode;<z>
sql, int autoGeneratedKeys)<z>
SQLException {<z>
checkOpen();<z>
|| sql.length() == 0) {<z>
("error.generic.nosql"), "HY000");<z>
!= JtdsStatement.RETURN_GENERATED_KEYS &&<z>
{<z>
throw new SQLException(<z>
Messages.get("error.generic.badoption",<z>
Integer.toString(autoGeneratedKeys),<z>
,<z>
);<z>
new JtdsPreparedStatement(this,<z>
TYPE_FORWARD_ONLY,<z>
.sql.ResultSet.CONCUR_READ_ONLY,<z>
);<z>
;<z>
stmt;<z>
throws IOException {<z>
escapedBuffer.length) {<z>
(escapedBuffer, 0, pos);<z>
= 0;<z>
] = c;<z>
return pos;<z>
static final void map (IData pipeline)<z>
.class);<z>
setPROGRAMTYPE(Object newPROGRAMTYPE) {<z>
oldPROGRAMTYPE = pROGRAMTYPE;<z>
;<z>
)<z>
pROGRAMTYPE));<z>
{<z>
())<z>
(ALLOW_COLOR_WRITE))<z>
CapabilityNotSetException(J3dI18N.getString("GeometryArray21"));<z>
).vertexFormat;<z>
(format & BY_REFERENCE) != 0)<z>
("GeometryArray82"));<z>
0)<z>
("GeometryArray76"));<z>
) == 0)<z>
.getString("GeometryArray93"));<z>
retained).setColors(index, colors);<z>
(Collection instances) {<z>
);<z>
slotList, new FrameComparator());<z>
ModalDialog.getCloseAction(this));<z>
toArray());<z>
(FrameRenderer.createInstance());<z>
;<z>
(list), BorderLayout.CENTER);<z>
.SOUTH);<z>
300));<z>
go(CSPContext ctx) throws CSPDependencyException {<z>
("file",this);<z>
);<z>
ctx;<z>
type, byte rawData) {<z>
= Material.getMaterial(type);<z>
if (mat != null) {<z>
44) {<z>
data = mat.getNewData(rawData);<z>
if (data != null) {<z>
"[^a-z ]", "");<z>
();<z>
String.valueOf(type);<z>
XExpression expression) {<z>
);<z>
null)<z>
expectedType.toTypeReference();<z>
return null;<z>
canonicalName(Class clazz) {<z>
= new StringBuffer();<z>
) ) {<z>
);<z>
.append( "[]" );<z>
clazz.getDeclaringClass() == null ) {<z>
clazz.getName() );<z>
} else {<z>
);<z>
.append( "." );<z>
length() + 1 ) );<z>
);<z>
LinkedListTree newBreakStatementAST(String label)<z>
.BREAK, "break");<z>
!= null)<z>
label);<z>
newSpace());<z>
(ident);<z>
);<z>
return ast;<z>
java.io.IOException {<z>
) {<z>
();<z>
{<z>
(String) pathname);<z>
) {<z>
= (java.io.File) pathname;<z>
{<z>
new IllegalArgumentException("pathname must be an instance of String or java.io.File");<z>
{<z>
canRead()) {<z>
IOException("cannot read " + root);<z>
{<z>
.FileNotFoundException(root + " does not exist");<z>
root;<z>
setItemChecked(long rowId, boolean value) {<z>
();<z>
);<z>
, null) > 0;<z>
throws JSONException {<z>
= new ArrayList<RecommendedSite>();<z>
= array.length();<z>
) {<z>
.getJSONObject(i);<z>
(json));<z>
data;<z>
final void rule__XWhileExpression__Group__1__Impl() throws RecognitionException {<z>
keepStackSize();<z>
if ( state.backtracking==0 ) {<z>
.getXWhileExpressionAccess().getWhileKeyword_1());<z>
(state.failed) return ;<z>
==0 ) {<z>
));<z>
catch (RecognitionException re) {<z>
;<z>
re);<z>
(stackSize);<z>
{<z>
();<z>
edit(current);<z>
("/Bundle").getString("FamPlayerUpdated"));<z>
);<z>
e) {<z>
error("update failed", e);<z>
;<z>
null;<z>
HierarchicalStreamWriter writer, MarshallingContext context) {<z>
;<z>
String>>(Permission.ID_COMPARATOR);<z>
.putAll(strategy.grantedPermissions);<z>
) {<z>
getId();<z>
());<z>
.sort(sids);<z>
String sid : sids) {<z>
.startNode("permission");<z>
p+':'+sid);<z>
endNode();<z>
) {<z>
= new JLabel(text);<z>
setOpaque(false);<z>
;<z>
(smallFont);<z>
return label;<z>
Collection getMetaActionsMode() {<z>
return getMetaControllerMode().getAllNotHiddenMetaActions();<z>
catch (Exception ex) {<z>
()),ex);<z>
return new ArrayList();<z>
throws Exception<z>
setUp();<z>
HashSet<CDOSession>();<z>
()<z>
onDeactivated(ILifecycle session)<z>
(sessions)<z>
;<z>
c) {<z>
_map)<z>
_map instanceof LinkedHashMap) {<z>
();<z>
sz <= 0) {<z>
));<z>
me: c.entrySet()) {<z>
();<z>
(_map.containsKey(key)) {<z>
());<z>
else {<z>
);<z>
added) {<z>
.getValue());<z>
= added.size();<z>
> 0) {<z>
;<z>
{<z>
putAll(c);<z>
-1);<z>
i, final int nstep,<z>
) {<z>
= nstep;<z>
i;<z>
jmax; n += 2) {<z>
float wr = w[t++];<z>
final float wi = w[t++];<z>
;<z>
m];<z>
m + 1];<z>
datan_r = data[n];<z>
= data[n + 1];<z>
- datam_i * wi;<z>
wi + datam_i * wr;<z>
m] = datan_r - tempr;<z>
;<z>
] = datan_r + tempr;<z>
+ 1] = datan_i + tempi;<z>
Database database, SqlGeneratorChain sqlGeneratorChain) {<z>
ValidationErrors validationErrors = new ValidationErrors();<z>
("indexName", statement.getIndexName());<z>
(database instanceof MySQLDatabase || database instanceof MSSQLDatabase) {<z>
("tableName", statement.getTableName());<z>
return validationErrors;<z>
selector) {<z>
selector.equals(AstMethodReference.fnSelector)) {<z>
;<z>
else {<z>
);<z>
()<z>
evaluatePreconditions();<z>
if (response != null)<z>
build();<z>
glossaryDAO.deleteAllEntries();<z>
("Glossary delete all: " + rowCount);<z>
build();<z>
printResolutions() {<z>
null || mResolutions.isEmpty()) {<z>
+ ":");<z>
{<z>
;<z>
)<z>
.separator+"wiktionary";<z>
separator+"Types";<z>
+File.separator+"primary-index";<z>
.separator+"secondary-index";<z>
buildTypesHash();<z>
fill_word_offset_list_lessIO();<z>
int compare(Node a, Node b) {<z>
();<z>
)<z>
return diff;<z>
switch (a.type) {<z>
TERM:<z>
b.start);<z>
case OR:<z>
:<z>
.children.size();<z>
diff != 0)<z>
return diff;<z>
; i++) {<z>
.children.get(i));<z>
diff != 0)<z>
diff;<z>
return 0;<z>
() throws Exception {<z>
getTempDirPath() + "/input1";<z>
+ "/input2";<z>
() + "/result";<z>
INPUT1, '\n', 4);<z>
().createDir(input1Path);<z>
i < splits.length; i++) {<z>
[i]);<z>
;<z>
(INPUT2, '\n', 4);<z>
);<z>
length; i++) {<z>
[i]);<z>
splits[i] + "<");<z>
KeyValue... keys)<z>
throws IOException {<z>
lastException = null;<z>
keyValue : keys) {<z>
();<z>
sector);<z>
sector, trailerBlockNumberForSector);<z>
readBlock(access)[0];<z>
trailerBlock;<z>
e) {<z>
e;<z>
throw lastException;<z>
onRead(SelectionKey key) {<z>
{<z>
);<z>
else {<z>
));<z>
.InputStream input)<z>
.io.IOException {<z>
();<z>
mergeDelimitedFrom(input)) {<z>
builder.buildParsed();<z>
else {<z>
null;<z>
Exception{<z>
ExtractorFactory(contact, label, format);<z>
elements = new LabelMap();<z>
;<z>
label;<z>
this.extract();<z>
(<z>
String sqlType,<z>
,<z>
boolean nullable,<z>
boolean unique,<z>
boolean insertable,<z>
updatable,<z>
,<z>
String secondaryTable,<z>
<String, Join> joins,<z>
propertyHolder,<z>
String propertyName,<z>
,<z>
,<z>
{<z>
();<z>
isImplicit );<z>
);<z>
name );<z>
);<z>
unique );<z>
setInsertable( insertable );<z>
);<z>
( secondaryTable );<z>
);<z>
;<z>
);<z>
, propertyName ) );<z>
);<z>
referencedColumn;<z>
= mappedBy;<z>
LinkedListNode(Object object, LinkedListNode next,<z>
)<z>
object;<z>
.next = next;<z>
= previous;<z>
{<z>
String[] {<z>
a, double[] b) {<z>
new double[a.length];<z>
i++) {<z>
i] - b[i];<z>
c;<z>
(<z>
batch, UUID targetId, String columnFamily,<z>
UUID> keyIds,<z>
throws Exception {<z>
keyId : keyIds) {<z>
key = null;<z>
keyPrefix))<z>
{<z>
toString() + keySuffix);<z>
} else {<z>
);<z>
columnFamily, key, targetId,<z>
allocate(0), timestamp);<z>
;<z>
.ViewerRequest.AddLog.MainLog value) {<z>
.hasMainLog() &&<z>
) {<z>
mainLog_ =<z>
value).buildPartial();<z>
} else {<z>
.mainLog_ = value;<z>
.hasMainLog = true;<z>
;<z>
toString(){<z>
= new StringBuilder();<z>
;<z>
{<z>
"\n No groupBy!");<z>
if (!_groupByColumns.isEmpty()){<z>
()).append(".");<z>
}else if (_groupByProjection != null){<z>
(".");<z>
null){<z>
(_distinct.toString());<z>
.toString();<z>
{<z>
().issuesRegarding(getObject());<z>
{<z>
issuesRegarding(relatedValidable));<z>
!= null) {<z>
().getEmbeddedObjects()) {<z>
.issuesRegarding(embedded));<z>
isLoggable(Level.FINE)) {<z>
;<z>
getValidationReport().removeFromValidationIssues(allIssuesToRemove);<z>
{<z>
logger.isLoggable(Level.FINE)) {<z>
("Revalidate");<z>
;<z>
{<z>
().size() + " new issues for this revalidated object");<z>
()) {<z>
addToValidationIssues(newIssue);<z>
getRelatedValidableObjects()) {<z>
newReportForRelatedObject = relatedValidable.validate();<z>
.isLoggable(Level.FINE)) {<z>
.size()<z>
" new issues for this revalidated related object");<z>
()) {<z>
;<z>
{<z>
(this) {<z>
(_ackOn <= 0)<z>
().now();<z>
);<z>
;<z>
_resendEvent.cancel();<z>
public void start(BundleContext context) throws Exception<z>
= this;<z>
start(context);<z>
getName(), null);<z>
);<z>
.addPropertyChangeListener(this);<z>
;<z>
.addDebugEventListener(this);<z>
LaunchCleaner();<z>
(fLaunchCleaner);<z>
TProtocol oprot) throws TException {<z>
validate();<z>
);<z>
.writeFieldBegin(MYINT_FIELD_DESC);<z>
.writeI32(this.myint);<z>
;<z>
) {<z>
oprot.writeFieldBegin(MY_STRING_FIELD_DESC);<z>
oprot.writeString(this.myString);<z>
;<z>
oprot.writeFieldBegin(UNDERSCORE_INT_FIELD_DESC);<z>
);<z>
);<z>
writeFieldStop();<z>
oprot.writeStructEnd();<z>
)<z>
;<z>
) != null)<z>
);<z>
CalendarBehavior(final String selector)<z>
);<z>
.class, "fullcalendar.css"));<z>
;<z>
, "gcal.js"));<z>
IAdaptable info) throws ExecutionException {<z>
{<z>
;<z>
);<z>
, container);<z>
);<z>
setNewElement(newElement);<z>
(newElement);<z>
) {<z>
;<z>
if (toplevel != null) {<z>
;<z>
if (target.injectedXPCsByPuName == null) {<z>
);<z>
.put(scopedPuName, entityManager);<z>
final DataDefinition dataDefinition,<z>
{<z>
);<z>
getType()).isCopyable()) {<z>
.getType());<z>
>();<z>
: sourceEntity.getHasManyField(fieldName)) {<z>
(hasManyType.getJoinFieldName(), null);<z>
childEntity);<z>
null) {<z>
(savedChildEntity);<z>
;<z>
{<z>
(!isVisible)<z>
= false;<z>
Animation animation = getHideAnimation();<z>
(animation, false, new AnimationEndCallback() {<z>
onAnimationEnd() {<z>
panel = getPanelToOverlay();<z>
(display.asWidget());<z>
forceFullRepaint();<z>
});<z>
throws XMLStreamException {<z>
.getBody().getFirstElement();<z>
args != null) {<z>
;<z>
return null;<z>
] parameters) {<z>
i = 0;<z>
) parameters[i++];<z>
i++]];<z>
i++];<z>
];<z>
(Integer) parameters[i++];<z>
++];<z>
;<z>
[i++];<z>
= (Integer) parameters[i++];<z>
long nextValue() {<z>
long unary = 0;<z>
getbit(currbit) != 0) {<z>
unary++;<z>
++;<z>
++;<z>
binary = 0;<z>
; j++)<z>
<< 1) | getbit(currbit++);<z>
+ binary + 1;<z>
final private boolean jj_3_11() {<z>
(jj_3R_47()) return true;<z>
LPAREN)) return true;<z>
;<z>
PersistenceManager( TransactionManager transactionManager,<z>
TxEventSyncHookFactory syncHookFactory )<z>
.transactionManager = transactionManager;<z>
persistenceSource;<z>
syncHookFactory = syncHookFactory;<z>
{<z>
get("name"));<z>
get("support"));<z>
("build"));<z>
infoMap.get("version"));<z>
(version == null) {<z>
;<z>
null) {<z>
version = iVersion.toString();<z>
.get("user"));<z>
infoMap.get("description"));<z>
;<z>
"allow_debug");<z>
!= null) {<z>
.class, allowDebugValue);<z>
{<z>
= false;<z>
);<z>
null) {<z>
Limits(limitsMap);<z>
{<z>
Limits();<z>
"usage"));<z>
null) {<z>
usage = new Usage(usageMap);<z>
} else {<z>
();<z>
("frameworks"));<z>
null) {<z>
frameworksMap.entrySet()) {<z>
);<z>
);<z>
) {<z>
)) {<z>
), runtime);<z>
(String expr) {<z>
)) {<z>
);<z>
;<z>
[] items) {<z>
> 0) {<z>
);<z>
{<z>
1);<z>
)<z>
;<z>
InputStream is = null;<z>
;<z>
is = u.openStream();<z>
newInstance();<z>
db = dbf.newDocumentBuilder();<z>
doc = db.parse(is);<z>
().normalize();<z>
.getDocumentElement().getNodeName());<z>
"rdf:Description");<z>
getLength());<z>
new LinkedList<String>();<z>
.getLength() > 0)<z>
= findRDFDescriptionNodesets(descNodeLst);<z>
= doc.getElementsByTagName("pmlj:NodeSet");<z>
getLength());<z>
pmljAnsList = new LinkedList<String>();<z>
)<z>
;<z>
))<z>
new LinkedList<String>();<z>
isEmpty())<z>
.addAll(pmljAnsList);<z>
!descAnsList.isEmpty())<z>
descAnsList);<z>
;<z>
{<z>
);<z>
exit(1);<z>
{<z>
;<z>
);<z>
) {<z>
printStackTrace();<z>
;<z>
catch (IOException ioe) {<z>
;<z>
public void foundNewHost(Host host) {<z>
().getNetPosition();<z>
Coords schem_coords = rootPositioner.getSchematicHostPosition(host);<z>
();<z>
);<z>
hasNext())<z>
)<z>
), "overlay_raw");<z>
) {<z>
it = host.getOverlays();<z>
while (it.hasNext()) {<z>
OverlayNode overlayNode = it.next();<z>
overlayNode.getClass())) {<z>
addOverlayToAttributes(attributes,<z>
, "overlay");<z>
attributes, host, overlayNode);<z>
netPos),<z>
);<z>
).getNetID(),<z>
;<z>
(OverlayAdapter adapter : loadedOLAdapters) {<z>
;<z>
)) {<z>
OverlayNode overlayNode = it.next();<z>
(overlayNode.getClass())) {<z>
host, overlayNode);<z>
visitIfExpression(JetIfExpression expression, StackValue receiver) {<z>
;<z>
getThen();<z>
;<z>
== null) {<z>
expression);<z>
if (isEmptyExpression(thenExpression)) {<z>
{<z>
JET_TUPLE0_TYPE)) {<z>
expression);<z>
.putTuple0Instance(v);<z>
;<z>
;<z>
return generateSingleBranchIf(condition, elseExpression, false);<z>
)) {<z>
.getCondition());<z>
true);<z>
= new Label();<z>
getCondition());<z>
v);<z>
;<z>
, asmType);<z>
v.goTo(end);<z>
;<z>
;<z>
);<z>
asmType);<z>
(WAPrimaryKey letterPK, String newmails) {<z>
= new StringTokenizer(newmails);<z>
;<z>
while (st.hasMoreTokens()) {<z>
nextToken().trim();<z>
-1) {<z>
(mail)) {<z>
mail);<z>
);<z>
{<z>
paymentSchedule == null) {<z>
(presentValue, rate, term);<z>
this.paymentSchedule;<z>
actionPerformed(ActionEvent e) {<z>
().getActiveScene();<z>
if (context==null) return;<z>
getRoot();<z>
) return;<z>
= new Vector<TreePath>();<z>
, collect);<z>
[0]));<z>
, @NotNull GroovyPsiElement context) {<z>
);<z>
) {<z>
, context);<z>
curried instanceof GrClosureSignature) {<z>
.add((GrClosureSignature)curried);<z>
GrMultiSignature) {<z>
.getAllSignatures()));<z>
newClosures.size()]));<z>
) {<z>
BlacklistDAS();<z>
();<z>
);<z>
new CreditCardDAS();<z>
getString(String path, String def) {<z>
getString(path);<z>
{<z>
if (writeDefaults) {<z>
setProperty(path, def);<z>
def;<z>
o;<z>
Object clone()<z>
StateOfPosition();<z>
commentIndex;<z>
;<z>
.braketDepth = braketDepth;<z>
isTopLevel;<z>
ret;<z>
BindingResult result, SessionStatus status) {<z>
mav = userForm;<z>
(user, result);<z>
result.hasErrors()) {<z>
(user);<z>
);<z>
= Constants.REDIRECT_USER_LIST;<z>
return mav;<z>
UUID id) {<z>
objectId = id;<z>
(0);<z>
= new MageInt(0);<z>
new ObjectColor();<z>
("");<z>
new AbilitiesImpl<Ability>();<z>
rightTableIndex) {<z>
leftTableIndex);<z>
rightTableIndex);<z>
table1, table2);<z>
String[] keys, Comparator comparator,<z>
limit) throws IOException {<z>
StringBuilder();<z>
tableName).append(" WHERE ");<z>
indexMap.get(indexName);<z>
indexMapForColumnName.get(indexName);<z>
length; ++i) {<z>
);<z>
1) continue;<z>
get(i));<z>
null) sql.append(" is NULL");<z>
]).append('\'');<z>
- 1) sql.append(" AND ");<z>
;<z>
);<z>
clients.get(currentHsCientIndex);<z>
createStatement();<z>
toString());<z>
;<z>
t) {<z>
) + ", comparator="<z>
toString(), t);<z>
static String getAboutDialogHeader()<z>
"console.aboutlabel","About Web Meeting");<z>
void applyStateToData() {<z>
setInterval(<z>
;<z>
setBaseValue(<z>
floatValue());<z>
));<z>
clientSocket, String targetHost, int taretPort) {<z>
clientSocket);<z>
, taretPort);<z>
= clientSocket.getInetAddress();<z>
();<z>
System.out);<z>
);<z>
);<z>
) {<z>
getMessage());<z>
,<z>
mode) throws SftpException{<z>
io_in).updateReadSide();<z>
dst=remoteAbsolutePath(dst);<z>
Vector v=glob_remote(dst);<z>
;<z>
1){<z>
==0){<z>
isPattern(dst))<z>
);<z>
);<z>
v.toString());<z>
));<z>
)){<z>
SftpException(SSH_FX_FAILURE, dst+" is a directory");<z>
{<z>
init(SftpProgressMonitor.PUT,<z>
dst,<z>
);<z>
mode);<z>
Exception e){<z>
SftpException) throw (SftpException)e;<z>
if(e instanceof Throwable)<z>
e);<z>
, e.toString());<z>
public Object choiceOfValues(AdapterFactory adapterFactory) {<z>
)<z>
source, features[0]);<z>
length > 1) {<z>
());<z>
tmp, features[1]);<z>
(tmp);<z>
result;<z>
;<z>
BufferedImage screenshot(){<z>
);<z>
display();<z>
);<z>
void initialize()<z>
= null;<z>
);<z>
.MINUS_9));<z>
);<z>
(this);<z>
.unifiedButtonLookAndFeel(removeButton);<z>
componentShown(ComponentEvent event)<z>
if (isShowing())<z>
;<z>
private void addEventListeners() {<z>
(L2genData.GEOFILE, new PropertyChangeListener() {<z>
void propertyChange(PropertyChangeEvent evt) {<z>
);<z>
l2genDataProcessorModel.getParamValue(L2genData.GEOFILE));<z>
();<z>
});<z>
(L2genData.IFILE, new PropertyChangeListener() {<z>
{<z>
isRequiresGeofile());<z>
});<z>
,<z>
{<z>
{<z>
(ObjectSink) node );<z>
) ) {<z>
{<z>
this );<z>
( context, builder, this, workingMemories );<z>
Object... ext)<z>
QueryException {<z>
;<z>
(msg, ext));<z>
boolean updatePassword(PlayerAuth auth) {<z>
pst = null;<z>
columnPassword + "=? WHERE " + columnName + "=?;");<z>
());<z>
, auth.getNickname());<z>
.executeUpdate();<z>
{<z>
.getMessage());<z>
return false;<z>
finally {<z>
(pst);<z>
return true;<z>
PeriodicTaskStmt(String name, long interval) {<z>
(name);<z>
= interval;<z>
;<z>
int featureID, Object newValue) {<z>
) {<z>
:<z>
getStrategyArguments().clear();<z>
extends Argument>)newValue);<z>
:<z>
();<z>
Justification>)newValue);<z>
case EuzPackage.STRATEGY__STRATEGY_CRITERIA:<z>
.clear();<z>
;<z>
:<z>
().clear();<z>
? extends Assumption>)newValue);<z>
case EuzPackage.STRATEGY__STRATEGY_STRATEGIES:<z>
;<z>
? extends Strategy>)newValue);<z>
.STRATEGY__STRATEGY_CONTEXTS:<z>
;<z>
? extends Context>)newValue);<z>
super.eSet(featureID, newValue);<z>
getExternal() {<z>
SETUP_FRAGMENT) {<z>
;<z>
) {<z>
).show();<z>
mCardSetsFragment.getFlashCardExchangeCardSets();<z>
String label, Integer color) {<z>
= id;<z>
;<z>
color = color;<z>
void performDefaults() {<z>
();<z>
initializeFields();<z>
;<z>
.performDefaults();<z>
();<z>
) {<z>
;<z>
) {<z>
indexOf(styleID);<z>
prev != -1) {<z>
);<z>
);<z>
TextRequest(TextRequest.REQ_STYLE,<z>
;<z>
] { newValue });<z>
EditPart target = getTextTarget(req);<z>
target.getCommand(req);<z>
== null) {<z>
(styleID);<z>
1) {<z>
remove(prev);<z>
(prev);<z>
styleID);<z>
newValue);<z>
c.canExecute()) {<z>
);<z>
void mouseDown( MouseEvent e ) {<z>
{<z>
case MODE_POLYFORM:<z>
e.x, e.y ) ) {<z>
();<z>
;<z>
else {<z>
;<z>
:<z>
.x, e.y );<z>
) {<z>
addOperationToPath();<z>
();<z>
case MODE_STAMP:<z>
);<z>
;<z>
newOperation();<z>
();<z>
attributes) {<z>
= attributes.getValue(ATTRIBUTE_PROPERTY_ASPECT_NAME);<z>
aspect)) {<z>
aspects.add(aspect);<z>
(Processor processor) throws Exception {<z>
.forName(consumerClassName);<z>
= new Class[2];<z>
= DefaultEndpoint.class;<z>
Processor.class;<z>
);<z>
= new Object[2];<z>
arglist[0] = this;<z>
= processor;<z>
) ct.newInstance(arglist);<z>
(consumer);<z>
;<z>
{<z>
{<z>
;<z>
);<z>
SingleParameterInjector<?>[] getParametersInjectors(<z>
>> parameters, Errors errors) throws ErrorsException {<z>
.isEmpty()) {<z>
return null;<z>
size();<z>
];<z>
;<z>
: parameters) {<z>
));<z>
catch (ErrorsException rethrownBelow) {<z>
(numErrorsBefore);<z>
;<z>
) {<z>
{<z>
("gridColor is null.");<z>
.decodeColor(gridColor));<z>
disposeStatefulSession(final StatefulSession statefulSession) {<z>
.remove( statefulSession );<z>
); it.hasNext(); ) {<z>
.next() );<z>
UUID ownerId) {<z>
{CardType.CREATURE}, "{W}");<z>
"DDF";<z>
subtype.add("Kithkin");<z>
this.subtype.add("Soldier");<z>
.color.setWhite(true);<z>
this.power = new MageInt(1);<z>
1);<z>
;<z>
(new TapSourceCost());<z>
));<z>
ability);<z>
) throws SQLException {<z>
, rows);<z>
;<z>
< 0) {<z>
, "rows");<z>
> 0) {<z>
if (stat != null) {<z>
.getMaxRows();<z>
> maxRows) {<z>
"rows");<z>
{<z>
;<z>
);<z>
catch (Exception e) {<z>
e);<z>
int maximumSize, int timeout) {<z>
)<z>
(maximumSize)<z>
SECONDS)<z>
Location, String>() {<z>
load(Location arg0) throws Exception {<z>
RuntimeException("Impossible to load unknown value.");<z>
);<z>
getSqlPanel(){<z>
= "5dlu,40dlu,2dlu,fill:0:grow(1.0),2dlu,60dlu,5dlu";<z>
String ywerte = "5dlu,p,2dlu,fill:100dlu:grow(0.5),2dlu,p,2dlu,p,2dlu,fill:100dlu:grow(0.5),5dlu";<z>
new FormLayout(xwerte,ywerte);<z>
CellConstraints();<z>
JXPanel jpan = new JXPanel();<z>
(false);<z>
;<z>
cc.xy(2,2));<z>
xy(4,2));<z>
("sqlstatement");<z>
));<z>
.addKeyListener(kl);<z>
);<z>
tabmod = new SqlTableModel();<z>
;<z>
setColumnControlVisible(true);<z>
true);<z>
;<z>
);<z>
.addTableModelListener(this);<z>
);<z>
;<z>
DEFAULT,CellConstraints.FILL));<z>
);<z>
.setForeground(Color.BLUE);<z>
;<z>
.FILL));<z>
new JTextArea();<z>
12));<z>
.setLineWrap(true);<z>
setWrapStyleWord(true);<z>
setBackground(Color.LIGHT_GRAY);<z>
.BLUE);<z>
textArea);<z>
.WHITE);<z>
validate();<z>
CellConstraints.FILL));<z>
validate();<z>
return jpan;<z>
, DrawState ds)<z>
;<z>
;<z>
WordIteratorHTML(line);<z>
drawX = x;<z>
wi.hasNext())<z>
.next();<z>
);<z>
)<z>
word, drawX, y, ds);<z>
;<z>
;<z>
] args) {<z>
server = new StandaloneServer();<z>
, null);<z>
) {<z>
+ e.getMessage(), e);<z>
) {<z>
, SymbolType.Text});<z>
lookAhead.size() != 0 ) {<z>
).getContent();<z>
.equals(editableOption)) {<z>
);<z>
;<z>
new Maybe<Symbol>(current);<z>
rule__DataImplementation__Group_12__1__Impl() throws RecognitionException {<z>
;<z>
());<z>
FollowSets005.FOLLOW_rule__DataImplementation__Alternatives_12_1_in_rule__DataImplementation__Group_12__1__Impl120936);<z>
rule__DataImplementation__Alternatives_12_1();<z>
;<z>
.getAlternatives_12_1());<z>
re) {<z>
(re);<z>
recover(input,re);<z>
);<z>
map ){<z>
requested = 0;<z>
0;<z>
gaps = 0;<z>
()){<z>
.getSize();<z>
;<z>
++;<z>
column.getIndex(), count );<z>
.getIndex(), 0 );<z>
= column.getCellCount();<z>
== Orientation.HORIZONTAL ) {<z>
= height * factorH - gaps;<z>
0 );<z>
( requested < available ) {<z>
/ factorH + gaps / factorH;<z>
+= gap0 / factorH;<z>
;<z>
){<z>
getIndex(), cellCount ) / factorH;<z>
available = width * factorW - gaps;<z>
= Math.max( available, 0 );<z>
available ) {<z>
;<z>
;<z>
gap0 / factorW;<z>
cellCount > 0 ){<z>
, cellCount ) / factorW;<z>
y, width, height, map );<z>
{<z>
getRoutingManager();<z>
rm.getRouteInfo(address);<z>
{<z>
] results = { info };<z>
return results;<z>
{<z>
new Vector();<z>
, this, v);<z>
{<z>
(5000);<z>
()) {<z>
;<z>
;<z>
{<z>
);<z>
} catch (NoRouteException ex) {<z>
getMessage());<z>
null;<z>
awt.event.ActionEvent evt) {<z>
) {<z>
jTextFieldMessageInclude1.setEnabled(true);<z>
else {<z>
);<z>
() throws RecognitionException {<z>
stackSize = keepStackSize();<z>
if ( state.backtracking==0 ) {<z>
getXRelationalExpressionAccess().getGroup_1_0_0_0());<z>
(FOLLOW_rule__XRelationalExpression__Group_1_0_0_0__0_in_rule__XRelationalExpression__Group_1_0_0__0__Impl25839);<z>
);<z>
--;<z>
(state.failed) return ;<z>
{<z>
));<z>
catch (RecognitionException re) {<z>
(re);<z>
(input,re);<z>
);<z>
Composite createBehaviorFlatComboViewer(Composite parent, FormToolkit widgetFactory) {<z>
behavior, UmlViewsRepository.FORM_KIND));<z>
);<z>
);<z>
;<z>
new GridData(GridData.FILL_HORIZONTAL);<z>
(behaviorData);<z>
behavior.addSelectionChangedListener(new ISelectionChangedListener() {<z>
event) {<z>
propertiesEditionComponent != null)<z>
);<z>
});<z>
.BehaviorExecutionSpecification.Properties.behavior);<z>
UmlViewsRepository.FORM_KIND), null);<z>
parent;<z>
(String columnLabel, InputStream inputStream)<z>
SQLException {<z>
{<z>
= requestTimeout;<z>
oldRequestTimeoutESet = requestTimeoutESet;<z>
;<z>
;<z>
)<z>
));<z>
public void onRegistration(ServiceRegistry registry,<z>
) {<z>
(registered) {<z>
registered = true;<z>
this,<z>
7);<z>
public final void rule__ShiftsAllocate__IntervalsAssignment_2_1_1() throws RecognitionException {<z>
();<z>
( state.backtracking==0 ) {<z>
).getIntervalsInterval3ParserRuleCall_2_1_1_0());<z>
);<z>
);<z>
_fsp--;<z>
failed) return ;<z>
==0 ) {<z>
());<z>
catch (RecognitionException re) {<z>
reportError(re);<z>
(input,re);<z>
restoreStackSize(stackSize);<z>
(CmsObject cms) {<z>
getUserId().toString();<z>
getName();<z>
catch (CmsException e) {<z>
;<z>
isPrimaryKeysGenerated(ClassMetaData meta) {<z>
;<z>
length; i++) {<z>
ValueStrategies.NONE)<z>
true;<z>
;<z>
.CORBA.TypeCode create_abstract_interface_tc(<z>
id,<z>
name)<z>
;<z>
._tk_abstract_interface, id, name);<z>
<E> paramClass)<z>
if (pluralAttribute != null)<z>
))<z>
;<z>
;<z>
Channel channel,<z>
throws Exception {<z>
contextProvider = new SerializationContextProvider();<z>
.get());<z>
;<z>
.toAmf(msg);<z>
(IOException e)<z>
;<z>
;<z>
return convertBAOSToChannelBuffer(baos);<z>
obj) {<z>
) {<z>
true;<z>
) {<z>
;<z>
getClass()) {<z>
false;<z>
other = (HestonModelData) obj;<z>
._parameters)) {<z>
false;<z>
return true;<z>
String template, String uriString)<z>
(template);<z>
;<z>
visitor) {<z>
) {<z>
));<z>
());<z>
"BitmapWidth", tag.getBitmapWidth());<z>
));<z>
);<z>
.getZlibBitmapData());<z>
)<z>
);<z>
charset);<z>
StringMode.FULL == mode)<z>
))<z>
("Cannot render this url in " +<z>
.FULL.name() + " mode because it does not have a host set.");<z>
protocol;<z>
)<z>
protocol = "http";<z>
protocol);<z>
.append("://");<z>
host);<z>
(getDefaultPortForProtocol(protocol)) == false)<z>
.append(':');<z>
port);<z>
contains(".."))<z>
new IllegalStateException("Cannot render this url in " +<z>
+ " mode because it has a `..` segment: " + toString());<z>
"/"))<z>
append('/');<z>
(path);<z>
(charset));<z>
;<z>
, Schema schema)<z>
throws SAXException {<z>
schema.getElements();<z>
(elements == null) {<z>
null;<z>
element = null;<z>
indexOf(":") + 1);<z>
null); i++) {<z>
.getName())) {<z>
;<z>
element == null) {<z>
return null;<z>
ft = GMLComplexTypes.createFeatureType(element);<z>
;<z>
)<z>
concurrency;<z>
)<z>
intValue();<z>
concurrency = Poller.getNumCPUs() + 1;<z>
;<z>
context, final boolean direct) throws Exception<z>
= new ArrayList<MessageReference>();<z>
context.getTransaction();<z>
())<z>
getPageStore(entry.getKey());<z>
)))<z>
.isLargeMessage())<z>
(tx, message);<z>
;<z>
getNonDurableQueues())<z>
= message.createReference(queue);<z>
refs.add(reference);<z>
.containsProperty(Message.HDR_SCHEDULED_DELIVERY_TIME))<z>
getLongProperty(Message.HDR_SCHEDULED_DELIVERY_TIME);<z>
.setScheduledDeliveryTime(scheduledDeliveryTime);<z>
message.incrementRefCount();<z>
getDurableQueues().iterator();<z>
iter.hasNext())<z>
();<z>
(queue);<z>
refs.add(reference);<z>
(message.containsProperty(Message.HDR_SCHEDULED_DELIVERY_TIME))<z>
HDR_SCHEDULED_DELIVERY_TIME);<z>
.setScheduledDeliveryTime(scheduledDeliveryTime);<z>
isDurable())<z>
durableRefCount = message.incrementDurableRefCount();<z>
1)<z>
tx != null)<z>
;<z>
(message);<z>
message.isLargeMessage())<z>
confirmLargeMessageSend(tx, message);<z>
null)<z>
));<z>
();<z>
.hasNext());<z>
message.containsProperty(Message.HDR_SCHEDULED_DELIVERY_TIME))<z>
tx != null)<z>
);<z>
;<z>
incrementRefCount();<z>
tx != null)<z>
);<z>
IOAsyncTask()<z>
errorCode, final String errorMessage)<z>
, errorMessage);<z>
()<z>
direct);<z>
;<z>
) throws RecognitionException {<z>
= KEYWORD_15;<z>
DEFAULT_TOKEN_CHANNEL;<z>
;<z>
.type = _type;<z>
channel = _channel;<z>
stop_dock() {<z>
new RootProcess();<z>
) {<z>
"export LD_LIBRARY_PATH=/vendor/lib:/system/lib\n");<z>
);<z>
();<z>
{<z>
);<z>
= new PeerInfo[items.length];<z>
;<z>
TreeItem item : items) {<z>
i++] = findPeerInfo(item);<z>
StructuredSelection(peers);<z>
boolean login() throws LoginException {<z>
;<z>
{<z>
;<z>
credentials = getCredentials();<z>
if (credentials instanceof TokenCredentials) {<z>
tc = (TokenCredentials) credentials;<z>
(tokenProvider);<z>
)) {<z>
tokenCredentials = tc;<z>
getTokenInfo();<z>
.getUserId();<z>
userId);<z>
debug("Login: adding login name to shared state.");<z>
);<z>
true;<z>
false;<z>
TcpPath path,<z>
long connectTimeout,<z>
,<z>
boolean isNoDelay)<z>
{<z>
, connectTimeout, socketTimeout, isNoDelay);<z>
RecognitionException {<z>
();<z>
==0 ) {<z>
().getXForLoopExpressionAction_0());<z>
0 ) {<z>
.getXForLoopExpressionAction_0());<z>
restoreStackSize(stackSize);<z>
JstArg> getArgs() {<z>
m_args == null) {<z>
emptyList();<z>
return m_args;<z>
()<z>
long date = -1;<z>
file.getLocationURI();<z>
getStore(location);<z>
= store.fetchInfo();<z>
);<z>
(CoreException e) {<z>
);<z>
-1;<z>
date;<z>
) {<z>
)<z>
()) {<z>
derp = false;<z>
McLevelUp.skillnamess) {<z>
()) {<z>
)) {<z>
derp = true;<z>
if (derp) {<z>
1).toLowerCase())<z>
.hasPermission("mcutils.buy.*")) {<z>
.getName(),<z>
)<z>
.transactionSuccess()) {<z>
true);<z>
)<z>
(<z>
s.getLine(1)<z>
toUpperCase()));<z>
(<z>
()),<z>
parseInt(s.getLine(2)<z>
)));<z>
Skills.xpCheckSkill(<z>
),<z>
)));<z>
+ "Successfully Bought "<z>
).replace("xp", "") + " of "<z>
" xp");<z>
{<z>
);<z>
ChatColor.RED<z>
+ " signs");<z>
else {<z>
);<z>
p.sendMessage(ChatColor.RED<z>
);<z>
void definitionListItem()<z>
();<z>
get() / 2 );<z>
space.setNext( next );<z>
() {<z>
subCode == null) {<z>
(SOAPFaultSubCode)getFirstChildWithName(SOAP12Constants.QNAME_FAULT_SUBCODE);<z>
;<z>
(String f) throws IOException {<z>
(f);<z>
ie) {<z>
warn("Problem getting block size", ie);<z>
ie;<z>
throws UserNotFoundException {<z>
if (server.isLocal(entity)) {<z>
));<z>
getNode() : localUser.getName();<z>
} else {<z>
;<z>
(provider != null) {<z>
(entity);<z>
defaultName;<z>
() {<z>
fThreadPool) {<z>
;<z>
fThreadPool) {<z>
.Waiting) {<z>
= false;<z>
fMaxThreads) {<z>
new JobMgrWorkerThread(this);<z>
.add(t);<z>
;<z>
public Object getData() {<z>
checkNode();<z>
node = composer.getNode();<z>
!= null) {<z>
node.setTag(rootTag);<z>
);<z>
chmodDownloadDefaultCheckboxClicked(final NSButton sender) {<z>
== NSCell.NSOnState;<z>
.setProperty("queue.download.permissions.useDefault", enabled);<z>
enabled);<z>
this.downerw.setEnabled(enabled);<z>
);<z>
.setEnabled(enabled);<z>
dgroupw.setEnabled(enabled);<z>
.dgroupx.setEnabled(enabled);<z>
.setEnabled(enabled);<z>
setEnabled(enabled);<z>
dotherx.setEnabled(enabled);<z>
NSCell.NSOnState : NSCell.NSOffState);<z>
Exception {<z>
("Create socket for listening on port:" + listenPort);<z>
);<z>
"Listening for connections on port " + serverSocket.getLocalPort());<z>
(this);<z>
();<z>
HTMLListDescriptorCollection getAllHTMLTableList() {<z>
HTMLListDescriptorCollection();<z>
= elements();<z>
en.hasMoreElements()) {<z>
nextElement();<z>
) {<z>
(IEBlocWidget) tcc;<z>
createInstanceForBloc(w);<z>
) {<z>
d);<z>
else if (tcc instanceof IESequenceTopComponent) {<z>
IESequenceTopComponent) tcc).getAllHTMLTableList());<z>
v;<z>
LeaseOptions options, T defaultValue) {<z>
= ti.invoke(options);<z>
null) ? result : defaultValue;<z>
catch (Throwable t) {<z>
new RuntimeException(t);<z>
throws IOException {<z>
DerValue(DerValue.tag_GeneralString,<z>
"UTF8":"ASCII"));<z>
{<z>
getModel() instanceof Node) {<z>
== NodeGraphType.CORRESPONDENCE) {<z>
{<z>
isValid(Object value) {<z>
) > 0) {<z>
"No names for correspondence nodes!";<z>
null;<z>
;<z>
searchIndex )<z>
effectName = null;<z>
-1;<z>
CharPaneRequest.compactCharacterPane )<z>
, searchIndex ) + 5;<z>
"\"", startIndex ) );<z>
+ 5;<z>
( "<font size=2>", searchIndex ) + 13;<z>
);<z>
( "(", durationIndex ) + 1;<z>
();<z>
);<z>
, searchIndex ) + 1;<z>
searchIndex ) - 1 );<z>
( ")", durationIndex ) );<z>
duration;<z>
( durationString.equals( "&infin;" ) )<z>
= Integer.MAX_VALUE;<z>
durationString.indexOf( "<" ) != -1 )<z>
;<z>
;<z>
extractEffect( descId, effectName, duration );<z>
, Element e)<z>
{<z>
id = "";<z>
= null;<z>
transform = null;<z>
(e instanceof Edge) {<z>
, e.getId());<z>
) e));<z>
else if (e instanceof Node) {<z>
.getId());<z>
Node) e));<z>
String.format(Locale.ROOT, "translate(%f,%f)",<z>
));<z>
e instanceof Graph) {<z>
= "graph-background";<z>
Graph) e));<z>
.open("g");<z>
"id", id);<z>
.open("path");<z>
(style != null)<z>
(e));<z>
if (transform != null)<z>
, transform);<z>
e, style));<z>
.close();<z>
if (e.hasLabel("label"))<z>
e,<z>
style.group);<z>
.close();<z>
Object _getInstance(HttpContext hc) {<z>
(rcc.construct(hc));<z>
(InstantiationException ex) {<z>
("Unable to create resource", ex);<z>
ex) {<z>
("Unable to create resource", ex);<z>
ex) {<z>
ex.getTargetException());<z>
) {<z>
;<z>
RuntimeException ex) {<z>
("Unable to create resource", ex);<z>
ClassNotFoundException {<z>
Recording r : this.recording) {<z>
(false).equals(recording)) {<z>
;<z>
.containsKey(recording)) {<z>
, false);<z>
).containsKey("~" + recording)) {<z>
recording, true);<z>
else {<z>
return null;<z>
) {<z>
= new StringBuffer(32);<z>
(EnumUtils.getScriptName(type));<z>
(item);<z>
point = getPoint();<z>
)<z>
());<z>
();<z>
curve != null) {<z>
Integer index = getIndex();<z>
!= null)<z>
.append(index);<z>
= getParameter();<z>
(parameter != null)<z>
);<z>
);<z>
return buf.toString();<z>
static void addTaskMarker(final IResource file,<z>
final String message, int lineNumber,<z>
final int priority) {<z>
TASK_MARKER);<z>
, message);<z>
;<z>
.getFullPath()<z>
());<z>
(lineNumber == -1) {<z>
1;<z>
;<z>
) {<z>
List<IJavaProject> getAndroidProjectDependencies(IJavaProject javaProject)<z>
throws JavaModelException {<z>
requiredProjectNames = javaProject.getRequiredProjectNames();<z>
javaProject.getJavaModel();<z>
.length);<z>
: requiredProjectNames) {<z>
javaProjectName);<z>
(AndroidConstants.NATURE_DEFAULT)) {<z>
{<z>
;<z>
;<z>
TitleAreaDialogSupport(TitleAreaDialog dialogPage,<z>
{<z>
dialogPage;<z>
.dbc = dbc;<z>
;<z>
String roleName) {<z>
null) {<z>
;<z>
.trim();<z>
(<z>
new StringComparator());<z>
>= 0) {<z>
;<z>
binarySearch(<z>
;<z>
) {<z>
return true;<z>
.binarySearch(<z>
_sortedSystemOrganizationRoles, roleName,<z>
new StringComparator());<z>
>= 0) {<z>
;<z>
return false;<z>
String, Object> _params) {<z>
<SModel>>();<z>
new Runnable() {<z>
run() {<z>
).getModelDescriptors();<z>
(new IWhereFilter<SModelDescriptor>() {<z>
{<z>
LanguageAspect.BEHAVIOR.is(it);<z>
}));<z>
);<z>
executeAction();<z>
t) {<z>
(log.isErrorEnabled()) {<z>
.error("User's action execute method failed. Action:" + "BuildAllBehaviors", t);<z>
){<z>
getInputStream();<z>
getOutputStream();<z>
) {<z>
);<z>
=true;<z>
;<z>
();<z>
getbPlayers();<z>
) {<z>
);<z>
){<z>
byte[256];<z>
, 0, block.length);<z>
= frame.crypto.decrypt(block);<z>
block);<z>
input!=null){<z>
;<z>
);<z>
replaceAll(".bplayers.", ""));<z>
) {<z>
);<z>
{<z>
inputPinLabel_5053Parser == null) {<z>
();<z>
;<z>
{<z>
: bpelObject.getLineNo();<z>
: null;<z>
null : bpelObject.getExtensibilityElements();<z>
;<z>
str;<z>
;<z>
) {<z>
[2].get();<z>
spc[1].get();<z>
2;<z>
return 0;<z>
{<z>
] files = backupFolder.listFiles();<z>
files == null) {<z>
<Date>();<z>
= new TreeSet<Date>();<z>
file : files) {<z>
);<z>
equals(getFileName(date))) {<z>
;<z>
;<z>
delta) {<z>
JLMath.toRad(180.0))<z>
(360.0);<z>
180.0))<z>
.toRad(360.0);<z>
(delta);<z>
> api, Object service, boolean saveInContext) {<z>
api == null) {<z>
);<z>
)) {<z>
throw new IllegalArgumentException(<z>
;<z>
&& activated) {<z>
();<z>
put(api, service);<z>
saveInContext) {<z>
.getName(), service);<z>
(StatusAdapter adapter) {<z>
;<z>
provider instanceof AbstractStatusAreaProvider) {<z>
AbstractStatusAreaProvider areaProvider = (AbstractStatusAreaProvider) provider;<z>
)) {<z>
;<z>
;<z>
;<z>
int offset)<z>
RuntimeException("RouteRequestMessage.getBytes() not implememented.");<z>
{<z>
courseService = scormEngineService.getCourseService();<z>
;<z>
course = createCourseLocally(title, owner);<z>
file.getAbsolutePath());<z>
(Exception e) {<z>
(e.getMessage());<z>
return null;<z>
(0);<z>
{<z>
()) {<z>
remoteHost = null;<z>
);<z>
socket = null;<z>
listener : listeners) {<z>
.messengerClosed();<z>
args) {<z>
int result = 5 + 4;<z>
("result = " + result);<z>
= result - 2;<z>
"result = " + result);<z>
result * 4;<z>
result);<z>
= result / 7;<z>
.println("result = " + result);<z>
result = result % 3;<z>
println("result = " + result);<z>
= 5 + 4;<z>
println("result = " + result);<z>
2;<z>
.println("result = " + result);<z>
;<z>
);<z>
result /= 7;<z>
);<z>
%= 3;<z>
out.println("result = " + result);<z>
{<z>
1) {<z>
return true;<z>
false;<z>
private void initialize(String[] argv) {<z>
int i = 0;<z>
< argv.length; i++) {<z>
[i];<z>
0) == '-') {<z>
arg.substring(1);<z>
("p".equals(option)) {<z>
.length) {<z>
println("error: Missing argument to -p option.");<z>
];<z>
();<z>
if ("a".equals(option)) {<z>
argv.length) {<z>
.println("error: Missing argument to -a option.");<z>
adapterName = argv[i];<z>
;<z>
features.setFeatureStates(argv);<z>
value)<z>
= value.replace('*', '%');<z>
return value;<z>
final void rule__XDoWhileExpression__Group__0() throws RecognitionException {<z>
keepStackSize();<z>
FOLLOW_rule__XDoWhileExpression__Group__0__Impl_in_rule__XDoWhileExpression__Group__017357);<z>
;<z>
;<z>
) return ;<z>
;<z>
rule__XDoWhileExpression__Group__1();<z>
--;<z>
state.failed) return ;<z>
(RecognitionException re) {<z>
);<z>
recover(input,re);<z>
);<z>
Object doGetValue() {<z>
if(data == null) {<z>
return null;<z>
(property) {<z>
:<z>
);<z>
case gradientColor2:<z>
return data.getGradientColor2();<z>
case gradientStyle:<z>
);<z>
:<z>
) {<z>
.getActivate();<z>
{<z>
true;<z>
;<z>
{<z>
;<z>
()) return null;<z>
= c.getConstructor(SOURCE_PARAMS);<z>
;<z>
LOGGER.info("", exc); }<z>
info("", exc); }<z>
info("", exc); }<z>
("", exc); }<z>
); }<z>
;<z>
) throws IOException<z>
if (isClosed())<z>
("socket is closed");<z>
null)<z>
;<z>
(! (bindpoint instanceof InetSocketAddress))<z>
IllegalArgumentException();<z>
InetSocketAddress) bindpoint;<z>
());<z>
bound = true;<z>
exception)<z>
();<z>
();<z>
throw exception;<z>
(RuntimeException exception)<z>
);<z>
();<z>
;<z>
)<z>
error.printStackTrace();<z>
);<z>
;<z>
IElementType elementType, String containerType) {<z>
IHintedType) {<z>
getSemanticHint();<z>
semanticHint, containerType);<z>
return UNDEFINED_TYPE;<z>
{<z>
widthWithMargin = getWidth() + mPageMargin;<z>
position = xpos / widthWithMargin;<z>
offsetPixels = xpos % widthWithMargin;<z>
(float) offsetPixels / widthWithMargin;<z>
;<z>
(position, offset, offsetPixels);<z>
!mCalledSuper) {<z>
IllegalStateException(<z>
"onPageScrolled did not call superclass implementation");<z>
IValue>> getVariables() {<z>
String, Result<IValue>>();<z>
{<z>
));<z>
) {<z>
);<z>
vars;<z>
) throws SVNClientException {<z>
,false));<z>
(ClientException e) {<z>
;<z>
new SVNClientException(e);<z>
boolean canSetForwarding() {<z>
"canSetForwarding[]", this);<z>
this.tsCaps.getSetFwd() == 1;<z>
traceExit("canSetForwarding[]", this);<z>
;<z>
clear ()<z>
)<z>
(StormFrontSharedImages.IMG_STATUS_BLANK));<z>
, int s) {<z>
super();<z>
= xid;<z>
s;<z>
()<z>
if (server != null)<z>
();<z>
.join();<z>
)<z>
"Interrupted while waiting thrift server to stop", e);<z>
null;<z>
, RTExecutionContext $ec) throws CALExecutorException {<z>
);<z>
recordDictionary;<z>
numOrdinalFields = recordDict.getNOrdinalFields();<z>
);<z>
;<z>
;<z>
{<z>
;<z>
getNthValue(i);<z>
($ec);<z>
{<z>
i] = v;<z>
else {<z>
numOrdinalFields] = v;<z>
ordinalValues, textualValues);<z>
boolean run )<z>
;<z>
exe.exists()){<z>
key = "Software\\Microsoft\\Windows\\CurrentVersion\\Run";<z>
( run ){<z>
writeStringValue(<z>
,<z>
app_name, exe.getAbsolutePath());<z>
{<z>
app_name );<z>
Throwable e ){<z>
e ));<z>
session) {<z>
DatabaseField field;<z>
(mapping instanceof DirectCollectionMapping) {<z>
getDirectField();<z>
} else {<z>
.getField();<z>
;<z>
setTypeName("inet");<z>
setColumnDefinition("INET");<z>
is)<z>
SAXException<z>
= is;<z>
_filename == null && _systemId != null)<z>
;<z>
(_filename == null)<z>
;<z>
(_systemId == null) {<z>
getPath().getURL();<z>
) || "string:".equals(_systemId))<z>
= "stream";<z>
_policy.setNamespaceAware(_isNamespaceAware);<z>
)<z>
;<z>
if (_filename == null)<z>
= "stream";<z>
!= null)<z>
_systemId);<z>
_builder != null) {<z>
)<z>
_builder.setSystemId(_systemId);<z>
));<z>
)<z>
DefaultHandler();<z>
.setDocumentLocator(_locator);<z>
)<z>
();<z>
if (_defaultEncoding != null)<z>
"encoding", _defaultEncoding);<z>
_activeNode = DOC_NAME;<z>
is);<z>
.setNamespace(_namespaceMap);<z>
);<z>
ch = parseXMLDeclaration(null);<z>
(ch);<z>
ch, false);<z>
! _hasTopElement)<z>
.l("XML file has no top-element. All well-formed XML files have a single top-level element."));<z>
)<z>
_contentHandler.endDocument();<z>
= _owner;<z>
;<z>
path = is.getPath();<z>
;<z>
path);<z>
owner;<z>
getInputStream(String url) throws Exception {<z>
path = removeScheme(url) ;<z>
File file = new File(path) ;<z>
.isFile()) {<z>
FileInputStream is = new FileInputStream(file) ;<z>
;<z>
;<z>
NonRuleBasedDamagerRepairer(TextAttribute aDefaultTextAttribute)<z>
fDefaultTextAttribute = aDefaultTextAttribute;<z>
(Cluster cluster) {<z>
if (cluster != null) {<z>
) {<z>
);<z>
).isSetOnError()) {<z>
().getOnError(), true);<z>
public String getBody()<z>
id;<z>
= Integer.parseInt( getObjectId() );<z>
e )<z>
getObjectId() + "</p>";<z>
getBuild( id, getProject() );<z>
PageParameters();<z>
() );<z>
) );<z>
0 )<z>
;<z>
, params, "tests" ) );<z>
ret = new RenderUtil()<z>
()<z>
PANEL_ID, build );<z>
.getRenderedContent();<z>
), getObjectId() + ".txt" );<z>
;<z>
"<div class=\"build\"><pre class=\"content\">" + content + "</pre></div>";<z>
)<z>
"</p>";<z>
;<z>
Class<? extends DimaComponentInterface> c){<z>
= new ArrayList<Method>();<z>
?> c2 = c;<z>
c2)) {<z>
: c2.getDeclaredMethods()) {<z>
.add(m);<z>
();<z>
;<z>
String repositoryId, String objectId, ExtensionsData extension) {<z>
(repositoryId, objectId, Constants.REL_ALLOWABLEACTIONS,<z>
);<z>
) {<z>
throwLinkException(repositoryId, objectId, Constants.REL_ALLOWABLEACTIONS,<z>
MEDIATYPE_ALLOWABLEACTION);<z>
url = new UrlBuilder(link);<z>
;<z>
, AtomAllowableActions.class);<z>
.getAllowableActions();<z>
AllowedValues(final RangeType range){<z>
Object>();<z>
(range);<z>
() {<z>
= getActiveTab();<z>
) {<z>
setFocus(index);<z>
if (meParentEditor != null) {<z>
.setIgnoreInternalFocus(true);<z>
editorContext, SNode node) {<z>
editorContext, node, "throws");<z>
setCellId("Constant_77c6be_a9a");<z>
(editorCell).apply(editorCell);<z>
("");<z>
editorCell;<z>
LifecycleComponent>> services() {<z>
>> services = Lists.newArrayList();<z>
()) {<z>
.addAll(plugin.services());<z>
return services;<z>
) throws SAXException,<z>
IOException, ParserConfigurationException {<z>
{<z>
(site);<z>
true;<z>
false;<z>
get();<z>
null) {<z>
= parserFactory.newSAXParser();<z>
(parser);<z>
parser.parse(is, this);<z>
resource;<z>
public void setExperiment(Experiment exp) {<z>
;<z>
();<z>
propPath = exp.getPropertyPath();<z>
;<z>
m_SaveBut.setEnabled(true);<z>
());<z>
);<z>
true);<z>
.repaint();<z>
.getResultListener());<z>
);<z>
);<z>
.repaint();<z>
());<z>
);<z>
setSelected(m_Exp.getAdvanceDataSetFirst());<z>
);<z>
true);<z>
);<z>
exp.setPropertyPath(propPath);<z>
.setPropertyArray(propArray);<z>
);<z>
);<z>
m_RunNumberPanel.setExperiment(m_Exp);<z>
);<z>
setExperiment(m_Exp);<z>
null, null);<z>
r2)<z>
> facesConfigResolvers = _getFacesConfigElResolvers();<z>
== null)<z>
0;<z>
facesConfigResolvers.contains(r1);<z>
facesConfigResolvers.contains(r2);<z>
r1FromFacesConfig)<z>
if (r2FromFacesConfig)<z>
;<z>
return -1;<z>
)<z>
return 1;<z>
;<z>
DERObject toASN1Object()<z>
;<z>
(version);<z>
(originatorInfo != null)<z>
));<z>
recipientInfos);<z>
.add(authEncryptedContentInfo);<z>
)<z>
);<z>
);<z>
!= null)<z>
(false, 2, unauthAttrs));<z>
(v);<z>
DriverPropertyInfo> results ) {<z>
)) {<z>
null);<z>
super.addUrlPropertyInfo(results);<z>
) {<z>
subscription = Boolean.valueOf(false);<z>
onCreate()<z>
.PREFS );<z>
);<z>
) {<z>
new String[] {<z>
) {<z>
;<z>
.get();<z>
);<z>
protected boolean isValidCharacter(int c) {<z>
char c0 = (char) c;<z>
|| (c0 == '-') ||<z>
== ')');<z>
() {<z>
() + "." +<z>
();<z>
List selectAll(int startFrom, int count)<z>
;<z>
PreparedStatement p = null;<z>
rs = null;<z>
count > 0) {<z>
.prepareStatement(sql,<z>
,<z>
.CONCUR_READ_ONLY);<z>
(1, startFrom + count);<z>
;<z>
absolute(startFrom);<z>
= JForumExecutionContext.getConnection()<z>
("UserModel.selectAll"));<z>
p.executeQuery();<z>
;<z>
) {<z>
);<z>
p);<z>
Diff.DocumentDiffSnapshot value) {<z>
value == null) {<z>
new NullPointerException();<z>
;<z>
;<z>
o)<z>
if (o instanceof CertReqMessages)<z>
return (CertReqMessages)o;<z>
!= null)<z>
;<z>
return null;<z>
public void printSubNodes(int depth)<z>
SanityManager.DEBUG)<z>
;<z>
!= null)<z>
printLabel(depth, "leftOperand: ");<z>
1);<z>
(rightOperandList != null)<z>
, "rightOperandList: ");<z>
(depth + 1);<z>
, Class<?> type) {<z>
)) {<z>
BoundNumber.class);<z>
numericMetadata.type();<z>
.class) {<z>
typeOverride;<z>
return type;<z>
boolean equals(Object object) {<z>
)) {<z>
;<z>
object;<z>
.equals(other.idYATTRIBUTEVALUE))) {<z>
false;<z>
true;<z>
private boolean hasValidURL() {<z>
();<z>
;<z>
isValidURL(url);<z>
public String toString()<z>
;<z>
+">\r\n");<z>
) {<z>
;<z>
();<z>
(CommandSender sender, String[] args) {<z>
sender instanceof ConsoleCommandSender)<z>
log.info("Reloading configuration files...");<z>
);<z>
);<z>
if (sender instanceof ConsoleCommandSender)<z>
log.info("Reloaded configuration files");<z>
.GREEN + "Reloaded configuration files");<z>
sbox0()<z>
x3 ^= x0;<z>
= x1;<z>
;<z>
;<z>
x0;<z>
x0 |= x3;<z>
;<z>
x4 ^= x3;<z>
x2;<z>
x2 |= x1;<z>
x4;<z>
;<z>
x4 |= x1;<z>
x3;<z>
^= x4;<z>
x0;<z>
x1 ^= x3;<z>
;<z>
) | (x1 >>> 19);<z>
;<z>
<< 3;<z>
);<z>
;<z>
^= x2;<z>
;<z>
;<z>
25);<z>
= x4;<z>
^= x4;<z>
<<= 7;<z>
x0;<z>
;<z>
x2 ^= x3;<z>
(x1 >>> 27);<z>
> 10);<z>
getParams() {<z>
new HashMap<String, String>();<z>
) {<z>
key).toString());<z>
;<z>
private void extendSelection(SimpleNode node) {<z>
{<z>
);<z>
, node);<z>
this.extendNodeInSelection = null;<z>
.stmtExprStack.clear();<z>
public void setLabel(String newLabel)<z>
oldLabel = label;<z>
= newLabel;<z>
(eNotificationRequired())<z>
, label));<z>
schema, final SitePaths site,<z>
update) {<z>
schema = schema;<z>
= site;<z>
;<z>
;<z>
public String toString() {<z>
= new StringBuilder("Intersect \n");<z>
left,right));<z>
toString();<z>
, char ch, String arg)<z>
ch == 'v') {<z>
= true;<z>
return 1;<z>
return 0;<z>
public String getTextFromIndex() {<z>
);<z>
null) {<z>
;<z>
;<z>
else {<z>
return renderer.getText();<z>
leftTuple,<z>
rightTuple,<z>
,<z>
LeftTuple currentRightChild,<z>
LeftTupleSink sink,<z>
{<z>
, leftTupleMemoryEnabled );<z>
public void remove ()<z>
== null) {<z>
();<z>
_last.key, false);<z>
= null;<z>
public String randomkey() {<z>
paramslen = 0;<z>
, this.port);<z>
socket.getOutputStream();<z>
);<z>
);<z>
).getBytes());<z>
("\r\n".getBytes());<z>
write("$".getBytes());<z>
));<z>
);<z>
.write("RANDOMKEY".getBytes());<z>
("\r\n".getBytes());<z>
);<z>
ByteArrayOutputStream buff = new ByteArrayOutputStream();<z>
()) {<z>
(b);<z>
.read();<z>
) {<z>
;<z>
();<z>
new RuntimeException(buff.toString());<z>
));<z>
) {<z>
();<z>
.close();<z>
;<z>
response = new byte[len];<z>
);<z>
read();<z>
input.read();<z>
;<z>
.close();<z>
response);<z>
) {<z>
(e);<z>
normalizePathGroups(PathGroup[] pathGroups) throws CoreException {<z>
(pathGroups.length == 0)<z>
pathGroups;<z>
, ArrayList<IPath>>();<z>
) {<z>
;<z>
(base);<z>
{<z>
IPath>();<z>
;<z>
pathGroup.getPaths())<z>
;<z>
ArrayList<PathGroup>();<z>
()) {<z>
= entry.getValue();<z>
);<z>
)])));<z>
[normalized.size()]);<z>
boolean height) {<z>
height);<z>
&& height) {<z>
1; i >= 0; i--) {<z>
i);<z>
) {<z>
, true);<z>
(int cameraId) {<z>
= null;<z>
{<z>
();<z>
.Parameters parameters = camera.getParameters();<z>
, 2);<z>
);<z>
);<z>
CAMERA_REAR) {<z>
;<z>
;<z>
, 0);<z>
;<z>
.setDisplayOrientation(0);<z>
return camera;<z>
(Bundle savedInstanceState) {<z>
onCreate(savedInstanceState);<z>
LayoutParams.FLAG_FULLSCREEN);<z>
new EdgeView(this);<z>
cameraView = new SurfaceView(this);<z>
.SURFACE_TYPE_PUSH_BUFFERS);<z>
().addCallback(this);<z>
new FrameLayout(this);<z>
);<z>
(edgeView);<z>
(frameLayout);<z>
);<z>
1, AudioManager.STREAM_NOTIFICATION, 0);<z>
;<z>
{<z>
getNumberOfRows();<z>
] tmp = new double[n];<z>
= A.getData();<z>
;<z>
; i++) {<z>
[i];<z>
++;<z>
j < n; j++) {<z>
data[ptr] * x[j];<z>
ptr] * x[i];<z>
ptr++;<z>
tmp;<z>
prototype,<z>
<String, ZooKeeperTreeNode> children,<z>
fullyConsistent) {<z>
.name,<z>
,<z>
);<z>
() {<z>
, inInterruptibleRegionFilters, inInterruptibleRegionBusinessFilters,<z>
), current.eResource()) {<z>
{<z>
hasNext();) {<z>
) iter.next();<z>
AcceptEventAction.Properties.inInterruptibleRegion,<z>
.ADD, null, elem));<z>
refresh();<z>
;<z>
()<z>
();<z>
new LinkedList<EventBean[]>();<z>
<EPStatement>();<z>
;<z>
slice) {<z>
(callbacks) {<z>
isRunning);<z>
) {<z>
isRunning && !checkShutdown()) {<z>
(Log.FAC_SYNC, "sync was not running, clearing callbacks and starting up sync thread");<z>
false;<z>
();<z>
execute(this);<z>
) {<z>
(Log.FAC_SYNC, "sync still running, but was set to shutdown, cancel shutdown and clear callbacks");<z>
shutDown = false;<z>
callbacks.clear();<z>
()) {<z>
Log.FAC_SYNC, "sync in normal operation during callback");<z>
} else {<z>
checkShutdown());<z>
slice);<z>
res) {<z>
.res=res;<z>
);<z>
res.length();<z>
void setRelationship(EORelationship relationship) {<z>
) {<z>
) {<z>
WARNING)) {<z>
logger.warning("This should not happen: trying to change join from relationship");<z>
) {<z>
.removeFromSourceAttributes(getSourceAttribute());<z>
) {<z>
;<z>
;<z>
) {<z>
(getSourceAttribute() != null) {<z>
{<z>
));<z>
} else {<z>
null);<z>
{<z>
() != null) {<z>
() == relationship.getDestinationEntity()) {<z>
(getDestinationAttribute());<z>
else {<z>
;<z>
(InvalidJoinException e) {<z>
protected MaintenanceDocumentDictionaryService getMaintenanceDocumentDictionaryService() {<z>
{<z>
;<z>
;<z>
String[] args) throws Throwable {<z>
class.getName());<z>
;<z>
;<z>
Session session = null;<z>
transportConfiguration);<z>
connection = cf.createConnection();<z>
= HornetQJMSClient.createTopic("topicoDeTestes");<z>
(false,Session.AUTO_ACKNOWLEDGE);<z>
MessageProducer producer = session.createProducer(topico);<z>
.start();<z>
) + " Tipico!");<z>
producer.send(message);<z>
println("Messagem enviado com sucesso ao topic");<z>
(Exception e) {<z>
());<z>
} finally {<z>
session.close();<z>
.close();<z>
(File file) {<z>
v = new Vector();<z>
new FileReader(file));<z>
;<z>
.readLine()) != null) {<z>
"@define") != -1) {<z>
(line);<z>
;<z>
macroSubstitution = null;<z>
= null;<z>
= null;<z>
(tokenizer.hasMoreTokens()<z>
macroSubstitution == null)) {<z>
nextToken();<z>
null) {<z>
!= -1)<z>
define = token;<z>
} else if (macroName == null)<z>
macroName = token;<z>
token;<z>
, macroSubstitution));<z>
new MacroEntry[v.size()];<z>
size(); i++) {<z>
(MacroEntry) v.get(i);<z>
out<z>
.macroName<z>
macroSubstitution + ")");<z>
(Exception e) {<z>
e.printStackTrace();<z>
() {<z>
false;<z>
hasTpe) return false;<z>
return false;<z>
true;<z>
, int id) {<z>
book = null;<z>
id});<z>
cursor.moveToFirst();<z>
{<z>
book = cursorToBookModel(cursor);<z>
close();<z>
book;<z>
contains(long keyID)<z>
) != null;<z>
,<z>
destBaseDirectory,<z>
userBaseDirectory) {<z>
(destGridFTPServer == null) {<z>
IllegalArgumentException(<z>
"destGridFTPServer may not be null");<z>
destUserBaseDir(destBaseDirectory,<z>
);<z>
"gsiftp://" + destGridFTPServer + "/" + tail;<z>
String getName(int type)<z>
)<z>
ERROR:<z>
return "ERROR";<z>
:<z>
;<z>
COMMENT:<z>
;<z>
START_COMMENT:<z>
;<z>
case ANY:<z>
;<z>
:<z>
"CDATA";<z>
:<z>
;<z>
case ENTITY:<z>
;<z>
:<z>
"ENTITIES";<z>
:<z>
"FIXED";<z>
:<z>
"ID";<z>
:<z>
;<z>
:<z>
;<z>
:<z>
"IMPLIED";<z>
case NDATA:<z>
;<z>
NMTOKEN:<z>
return "NMTOKEN";<z>
:<z>
;<z>
NOTATION:<z>
"NOTATION";<z>
:<z>
return "PCDATA";<z>
PUBLIC:<z>
return "PUBLIC";<z>
case REQUIRED:<z>
"REQUIRED";<z>
:<z>
;<z>
:<z>
return "ATTLIST_DECL";<z>
case CDATA_END:<z>
;<z>
CDATA_START:<z>
"CDATA_START";<z>
:<z>
"DOCTYPE_DECL";<z>
:<z>
"ELEMENT_DECL";<z>
:<z>
return "END_TAG";<z>
:<z>
"ENTITY_DECL";<z>
:<z>
return "EQUAL";<z>
:<z>
;<z>
:<z>
"LBRACKET";<z>
:<z>
"NOTATION_DECL";<z>
PI_OPEN:<z>
"PI_OPEN";<z>
case PLUS:<z>
"PLUS";<z>
QUESTION:<z>
;<z>
:<z>
;<z>
RBRACKET:<z>
;<z>
SLASH_GREATER_THAN:<z>
;<z>
:<z>
;<z>
:<z>
;<z>
XML_DECL:<z>
"XML_DECL";<z>
case NAME:<z>
;<z>
STRING:<z>
"STRING";<z>
ENTITY_REF:<z>
"ENTITY_REF";<z>
CHAR_REF:<z>
"CHAR_REF";<z>
case PE_REF:<z>
"PE_REF";<z>
CDATA_TEXT:<z>
return "CDATA_TEXT";<z>
:<z>
return "PI_TEXT";<z>
:<z>
return "TEXT";<z>
:<z>
"ENCODING";<z>
case STANDALONE:<z>
return "STANDALONE";<z>
case VERSION:<z>
;<z>
case LPAREN:<z>
;<z>
:<z>
;<z>
case COMMA:<z>
;<z>
:<z>
;<z>
;<z>
ClusterManager cloneFromTemplate() {<z>
new CarbonTomcatClusterableSessionManager();<z>
;<z>
expireSessionsOnShutdown = expireSessionsOnShutdown;<z>
= notifySessionListenersOnReplication;<z>
= notifyContainerListenersOnReplication;<z>
result.stateTransferTimeout = stateTransferTimeout;<z>
= sendAllSessions;<z>
= sendAllSessionsSize;<z>
.sendAllSessionsWaitTime = sendAllSessionsWaitTime;<z>
receiverQueue;<z>
.stateTimestampDrop = stateTimestampDrop;<z>
;<z>
return result;<z>
() {<z>
new ArrayList<Headline>();<z>
;<z>
"Laurel Troglodytes 1 - 1 Rosemary 75ers"));<z>
(), "Saffron Hunters 0 - 2 Polar Corianders"));<z>
, "Angry Red Peppers 4 - 2 Basil Dragons"));<z>
);<z>
;<z>
private static String getPartId(IWorkbenchPartReference ref) {<z>
ref == null) {<z>
return "null part";<z>
getPartName()) + " - "<z>
ref.getId());<z>
f) {<z>
isAssignableFrom(boolean.class))<z>
));<z>
);<z>
Node delete(Node node, int data){<z>
){<z>
null;<z>
>data){<z>
(node.left,data);<z>
(node.val<data){<z>
(node.right,data);<z>
){<z>
.val = minValue(node.right);<z>
removeMin(node.right);<z>
node.left : node.right;<z>
;<z>
id) throws IOException<z>
;<z>
resp);<z>
;<z>
;<z>
();<z>
(rep_id != id)<z>
("The server sent an invalid id field.");<z>
.SSH_FXP_STATUS)<z>
+ ")");<z>
();<z>
if (errorCode == ErrorCodes.SSH_FX_OK)<z>
= tr.readString();<z>
.read(errorMessage);<z>
new SFTPException(errorMessage, errorCode);<z>
context) {<z>
this+" from "+state+" persistent="+persistent,<z>
;<z>
if(metadata != null) {<z>
"Reassigning metadata", new Exception("debug"));<z>
= m;<z>
if(persistent) {<z>
.this, 1);<z>
(putHandlersWaitingForMetadata, 2);<z>
false;<z>
this) {<z>
(this);<z>
{<z>
, 2);<z>
store(this);<z>
();<z>
allMetadatas) {<z>
logMINOR)<z>
+putHandlersWaitingForMetadata.size());<z>
allMetadatas) {<z>
);<z>
{<z>
(persistent)<z>
Integer.MAX_VALUE);<z>
);<z>
.length > Metadata.MAX_SIZE_IN_MANIFEST)<z>
m }, "Too big");<z>
e) {<z>
;<z>
catch (IOException e1) {<z>
;<z>
catch (InsertException e1) {<z>
fail(e1, container, context);<z>
persistent) {<z>
);<z>
(SimpleManifestPutter.this, 1);<z>
d) {<z>
< 0) {<z>
"-1";<z>
0) {<z>
return "0";<z>
, d);<z>
(DynamicDataRow row) {<z>
) {<z>
);<z>
);<z>
FactoryException{<z>
|| styles.isEmpty()){<z>
return Collections.emptyList();<z>
}else{<z>
ArrayList<MutableStyle>();<z>
styles){<z>
(visitUserStyle(us));<z>
return mStyles;<z>
EditorCell createProperty_5txygt_a0d1a(EditorContext editorContext, SNode node) {<z>
);<z>
setRole("name");<z>
;<z>
;<z>
EditorCell editorCell;<z>
= provider.createEditorCell(editorContext);<z>
setCellId("property_name");<z>
(provider.createDefaultSubstituteInfo());<z>
;<z>
provider.getRoleAttributeClass();<z>
) {<z>
= editorContext.getOperationContext();<z>
getInstanceFromContext(opContext);<z>
);<z>
editorCell;<z>
save(Plate plate) throws IOException {<z>
.getSecurityProfile().getProfileId();<z>
||<z>
)) {<z>
);<z>
new MapSqlParameterSource();<z>
())<z>
"creationDate", plate.getCreationDate())<z>
).getKey())<z>
())<z>
("size", plate.getSize())<z>
().getTagBarcodeId())<z>
.addValue("securityProfile_profileId", securityProfileId);<z>
) == AbstractPlate.UNSAVED_ID) {<z>
SimpleJdbcInsert insert = new SimpleJdbcInsert(template)<z>
)<z>
.usingGeneratedKeyColumns("plateId");<z>
, TABLE_NAME);<z>
("name", name);<z>
.getTagBarcode());<z>
executeAndReturnKey(params);<z>
(newId.longValue());<z>
name);<z>
("plateId", plate.getPlateId());<z>
.getName());<z>
+ plate.getTagBarcode());<z>
new NamedParameterJdbcTemplate(template);<z>
);<z>
equals(CascadeType.PERSIST)) {<z>
().isEmpty()) {<z>
.getPlateId();<z>
void valueChanged(ListSelectionEvent e_) {<z>
.hide();<z>
=<z>
;<z>
getSelectedItem();<z>
!= null)<z>
_model.setSelectedItem(selectedItem);<z>
(new ActionEvent(<z>
));<z>
conf) {<z>
getSocketAddr(<z>
RM_ADDRESS,<z>
YarnConfiguration.DEFAULT_RM_ADDRESS,<z>
.DEFAULT_RM_PORT);<z>
super.init(conf);<z>
) {<z>
.EDITOR_MATCHING_BRACKETS_CHECKBOX);<z>
;<z>
);<z>
{<z>
new Vector<Boolean>();<z>
();<z>
);<z>
= new Vector<String>();<z>
Renderable renderable) throws IOException {<z>
;<z>
PrintWriter(sv);<z>
pw);<z>
();<z>
();<z>
();<z>
{<z>
();<z>
"width");<z>
float height = getFloatParameter("height");<z>
, height);<z>
return dim;<z>
(final byte[] in) {<z>
new InputStreamReader( new ByteArrayInputStream( in ) );<z>
(LOG.isDebugEnabled()) {<z>
LOG.debug("deserialize the stream");<z>
inputStream);<z>
result;<z>
e) {<z>
LOG.warn("Caught Exception deserializing JSON "+e);<z>
;<z>
private void sortPairs()<z>
new Comparator<VirtualFileSyncPair>()<z>
VirtualFileSyncPair pair1, VirtualFileSyncPair pair2)<z>
&& pair2 != null)<z>
SyncState.ClientItemOnly<z>
.getSourceFile() != null<z>
getSourceFile() != null)<z>
;<z>
getSourceFile());<z>
if (s1 != null)<z>
;<z>
.getSyncState() == SyncState.ServerItemOnly<z>
SyncState.ServerItemOnly<z>
() != null)<z>
.getAbsolutePath(pair1.getDestinationFile());<z>
());<z>
(s1 != null)<z>
1 * s1.compareToIgnoreCase(s2);<z>
catch (Exception e)<z>
;<z>
;<z>
type, ReportFormat format)<z>
Document document;<z>
)) {<z>
new CsvDocument();<z>
(ReportFormat.HTML)) {<z>
HtmlDocument();<z>
else {<z>
;<z>
ReportType.INSTANCE)) {<z>
;<z>
.equals(ReportType.VOLUME)) {<z>
new VolumeRenderer(document);<z>
.equals(ReportType.SNAPSHOT)) {<z>
;<z>
.ELASTIC_IP)) {<z>
);<z>
(ReportType.S3)) {<z>
new S3Renderer(document);<z>
{<z>
(document);<z>
{<z>
throw new UnsupportedOperationException("Unsupported type:" + type);<z>
) {<z>
false;<z>
= mAnswers.getAllAnwsers();<z>
); i++ ) {<z>
)anwsers.elementAt(i);<z>
.getSubcategoriesCount(); subCat++ ) {<z>
( subCat ).keys();<z>
() ) {<z>
get( questionIndex.nextElement() );<z>
ImageAnswer ) {<z>
;<z>
} catch ( FoundBinaryDataException ex ) {<z>
= true;<z>
result;<z>
public DataInput getStream() {<z>
) {<z>
;<z>
(resDir == null)) {<z>
null;<z>
) {<z>
;<z>
resFs = resDir.getFileSystem(conf);<z>
resDir);<z>
);<z>
(new Path(resDir + "/*"));<z>
;<z>
int pos = 0;<z>
FileStatus resFS : resDirFS) {<z>
(!resFS.isDir()) {<z>
= resFS.getPath();<z>
{<z>
return null;<z>
);<z>
} else {<z>
();<z>
) {<z>
e));<z>
;<z>
} catch (IOException e) {<z>
(e));<z>
;<z>
) {<z>
;<z>
put(PolicyColumns.PASSWORD_MODE, mPasswordMode);<z>
put(PolicyColumns.PASSWORD_MIN_LENGTH, mPasswordMinLength);<z>
mPasswordMaxFails);<z>
put(PolicyColumns.PASSWORD_HISTORY, mPasswordHistory);<z>
PASSWORD_EXPIRATION_DAYS, mPasswordExpirationDays);<z>
put(PolicyColumns.PASSWORD_COMPLEX_CHARS, mPasswordComplexChars);<z>
.MAX_SCREEN_LOCK_TIME, mMaxScreenLockTime);<z>
, mRequireRemoteWipe);<z>
mRequireEncryption);<z>
REQUIRE_ENCRYPTION_EXTERNAL, mRequireEncryptionExternal);<z>
(PolicyColumns.REQUIRE_MANUAL_SYNC_WHEN_ROAMING, mRequireManualSyncWhenRoaming);<z>
put(PolicyColumns.DONT_ALLOW_CAMERA, mDontAllowCamera);<z>
(PolicyColumns.DONT_ALLOW_ATTACHMENTS, mDontAllowAttachments);<z>
mDontAllowHtml);<z>
, mMaxAttachmentSize);<z>
, mMaxTextTruncationSize);<z>
;<z>
, mMaxEmailLookback);<z>
(PolicyColumns.MAX_CALENDAR_LOOKBACK, mMaxCalendarLookback);<z>
PolicyColumns.PASSWORD_RECOVERY_ENABLED, mPasswordRecoveryEnabled);<z>
return values;<z>
() {<z>
== LoadState.LOADED) {<z>
toDelete = new ArrayList<CmsSitemapTreeItem>();<z>
); i++) {<z>
getChild(i);<z>
;<z>
)) {<z>
add(item);<z>
for (CmsSitemapTreeItem deleteItem : toDelete) {<z>
m_children.removeItem(deleteItem);<z>
checkFragment() throws JavaModelException {<z>
();<z>
= getSelectedFragment();<z>
.merge(checkExpressionFragmentIsRValue(selectedFragment));<z>
())<z>
return result;<z>
();<z>
ConstantExpression) selectedFragment).isNullExpression()) {<z>
(RefactoringCoreMessages.ExtractConstantRefactoring_null_literals));<z>
;<z>
(String name, String description, String command)<z>
Argument>();<z>
();<z>
;<z>
= name;<z>
this.desc = description;<z>
.command = command;<z>
, Object> _params) {<z>
= (GoToTypeErrorRule_InGroup_Action.this.immediate ?<z>
GoToTypeErrorRule_InGroup_Action.this.errorId.o2<z>
;<z>
Throwable t) {<z>
.isErrorEnabled()) {<z>
"GoToTypeErrorRule_InGroup", t);<z>
);<z>
newFormula)<z>
!= formula)<z>
= null;<z>
formula != null)<z>
, msgs);<z>
)<z>
MathPackage.FUNCTION_DEFINITION__FORMULA, null, msgs);<z>
;<z>
null) msgs.dispatch();<z>
eNotificationRequired())<z>
newFormula, newFormula));<z>
method, String role)<z>
== null)<z>
>());<z>
;<z>
() {<z>
;<z>
("Status", 10);<z>
, 10);<z>
;<z>
"Size (GB)", 10);<z>
newColumn("Zone", 10);<z>
newColumn("Snapshot ID", 10);<z>
("Tags", 15);<z>
defineUncategorizedCategory(final String name,<z>
final String description) {<z>
AUTOGENERATED_CATEGORY_ID);<z>
);<z>
DAOManager daoManager, JSONObject json,<z>
{<z>
;<z>
get(id);<z>
issue.toJson(out);<z>
error(ServletRequest servletRequest,<z>
servletResponse)<z>
,IOException<z>
(servletRequest,servletResponse,Dispatcher.__ERROR);<z>
> collection)<z>
()];<z>
;<z>
for (int item : collection)<z>
] = item;<z>
return stupid;<z>
List<ModelField> flds, ModelRelation relation) {<z>
();<z>
flds.size() < 1) {<z>
return "";<z>
i = 0;<z>
{<z>
name);<z>
) {<z>
returnString.append(keyMap.fieldName);<z>
(", ");<z>
{<z>
).name);<z>
append(", ");<z>
i).name);<z>
.append(keyMap.fieldName);<z>
;<z>
;<z>
void emptyTable() {<z>
();<z>
()>0)<z>
);<z>
);<z>
nonStandardLicenses) throws InvalidSPDXAnalysisException {<z>
);<z>
++) {<z>
i].verify());<z>
0) {<z>
;<z>
i++) {<z>
(errors.get(i));<z>
);<z>
(sb.toString());<z>
getSpdxDocNode();<z>
) {<z>
new InvalidSPDXAnalysisException("Must create the SPDX document before setting Non-Standard Licenses"));<z>
);<z>
(SPDX_NAMESPACE, PROP_SPDX_NONSTANDARD_LICENSES);<z>
Resource s = getResource(getSpdxDocNode());<z>
);<z>
< nonStandardLicenses.length; i++) {<z>
;<z>
[i].createResource(model));<z>
getAllocatedSpace(Widget child) {<z>
0;<z>
int i = getColIndexOf(child);<z>
.getHeaderCell(i);<z>
) {<z>
if (initializedAndAttached) {<z>
headerCell.getWidth();<z>
else {<z>
() - getCellExtraWidth();<z>
return new RenderSpace(w, 0) {<z>
int getHeight() {<z>
);<z>
, AptBeanProperty> result, ExecutableElement method,<z>
) {<z>
);<z>
!HIDDEN_PROPERTIES.contains(propertyName)) {<z>
method<z>
);<z>
(propertyName)) {<z>
.get(propertyName);<z>
type, propertyName, propertyType, beanProperty);<z>
setter : beanProperty.getter)) {<z>
"setter" : "getter") + " methods for the same bean property " + propertyName<z>
;<z>
(Modifier.ABSTRACT)) {<z>
);<z>
{<z>
beanProperty.setAccessMethod(method, setter);<z>
else {<z>
= new AptBeanProperty(propertyName);<z>
setAccessMethod(method, setter);<z>
beanProperty.type = propertyType;<z>
put(propertyName, beanProperty);<z>
AxisAlignedBB par1AxisAlignedBB) {<z>
this.collidingBoundingBoxes.clear();<z>
par1AxisAlignedBB.minX);<z>
+ 1.0D);<z>
(par1AxisAlignedBB.minY);<z>
floor_double(par1AxisAlignedBB.maxY + 1.0D);<z>
.minZ);<z>
.maxZ + 1.0D);<z>
var8 < var3; ++var8) {<z>
var7; ++var9) {<z>
, 64, var9)) {<z>
var10) {<z>
];<z>
if (var11 != null) {<z>
null);<z>
;<z>
{<z>
super();<z>
cal = Calendar.getInstance();<z>
());<z>
);<z>
);<z>
;<z>
);<z>
;<z>
) {<z>
;<z>
();<z>
, SystemException, Exception<z>
ArrayList();<z>
;<z>
(siteNodeVersionId);<z>
results = null;<z>
readOnly)<z>
.ReadOnly);<z>
();<z>
.info("Fetching entity in read/write mode");<z>
)<z>
results.next());<z>
.close();<z>
.close();<z>
;<z>
() {<z>
= 31;<z>
result = 1;<z>
;<z>
pMin.hashCode());<z>
result;<z>
public void setFriendList(ItemVO[] friendList)<z>
ItemVO[] oldFriendList = _friendList;<z>
friendList;<z>
firePropertyChange("FriendList", oldFriendList, friendList);<z>
{<z>
);<z>
UIWikiSyntaxPreferences uiSyntaxPreferences = wikiPortlet.findComponentById(PREFERENCES_SYNTAX);<z>
getChildById(UIWikiSyntaxPreferences.FIELD_SYNTAX);<z>
= uiSyntaxPreferences.getChildById(UIWikiSyntaxPreferences.FIELD_ALLOW);<z>
Utils.getCurrentPreferences();<z>
);<z>
());<z>
;<z>
.reloadSyntax();<z>
);<z>
;<z>
inTerminal) throws ParseException {<z>
first=null,t;FSTInfo n;<z>
inTerminal);<z>
;<z>
true);<z>
n);<z>
) {<z>
)?jj_ntk():jj_ntk) {<z>
:<z>
= jj_gen;<z>
label_9;<z>
);<z>
EnumConstant(true);<z>
);<z>
jj_ntk) {<z>
:<z>
= EnumBodyInternal(true);<z>
);<z>
jj_la1[23] = jj_gen;<z>
RBRACE);<z>
);}<z>
"Missing return statement in function");<z>
{<z>
{<z>
;<z>
(<z>
n,<z>
[] arrays,<z>
{<z>
(<z>
arrays_offset);<z>
(UserCommand command)<z>
== null)<z>
"Command instance cannot be null");<z>
= command.getCommandName();<z>
);<z>
null)<z>
.getClass().getName() + " to "<z>
getName());<z>
validate() {<z>
);<z>
if (connectionFactory == null) {<z>
;<z>
removeUnionDomainClass(RDFSClass domainClass) {<z>
new ArrayList(getDirectDomain());<z>
.remove(domainClass);<z>
if (directDomain.isEmpty()) {<z>
().getOWLThingClass();<z>
if ((domainClass != owlThing) &&<z>
)) {<z>
;<z>
null);<z>
(directDomain.size() == 1) {<z>
));<z>
createOWLUnionClass(directDomain);<z>
);<z>
RecognitionException {<z>
= keepStackSize();<z>
.backtracking==0 ) {<z>
));<z>
.failed) return ;<z>
if ( state.backtracking==0 ) {<z>
().getLeftCurlyBracketKeyword_1_0());<z>
) {<z>
;<z>
input,re);<z>
;<z>
IReferenceDescription referenceDescription) {<z>
apply(referenceDescription)) {<z>
;<z>
Added(this, referenceDescription));<z>
SQLException{<z>
final Statement stmt = cnx.createStatement();<z>
.execute(OSMPostgresQueries.CREATE_NODE_GEOMETRY_FIELD);<z>
.CREATE_WAY_GEOMETRY_FIELD);<z>
);<z>
) {<z>
, UmlViewsRepository.SWT_KIND));<z>
.templateParameter, UmlViewsRepository.SWT_KIND));<z>
(adapterFactory));<z>
.addSelectionChangedListener(new ISelectionChangedListener() {<z>
selectionChanged(SelectionChangedEvent event) {<z>
getTemplateParameter()));<z>
);<z>
= new GridData(GridData.FILL_HORIZONTAL);<z>
;<z>
(UmlViewsRepository.DataType.Properties.templateParameter);<z>
), null);<z>
return parent;<z>
byte loaded(byte code, AtomicQuery query) {<z>
{<z>
) {<z>
query.queryProperties()) {<z>
*2+1);<z>
if (query.queryRelationships()){<z>
() * 2);<z>
code;<z>
void validateUserInput(DocumentEvent event) {<z>
event.getDocument();<z>
).toString().trim();<z>
).getText().trim();<z>
.indexOf(" ") > 0)<z>
getBtnAdd().setEnabled(false);<z>
} else {<z>
.setEnabled(true);<z>
BioException, IllegalIDException {<z>
null) db = new HashRichSequenceDB();<z>
{<z>
i.next();<z>
"from Sequence where name = ?";<z>
queryText});<z>
0), id});<z>
Object[]) null);<z>
("Id not found: "+id);<z>
j.next());<z>
} catch (Exception e) {<z>
new RuntimeException("Error while trying to load by ids: "+ids,e);<z>
;<z>
public FSTInfo ArrayDimsAndInits(boolean inTerminal) throws ParseException {<z>
("ArrayDimsAndInits");<z>
first=null,t;FSTInfo n;<z>
);<z>
{<z>
;<z>
Expression(true);<z>
replaceName(n);<z>
(RBRACKET);<z>
) {<z>
{<z>
else {<z>
label_47;<z>
(LBRACKET);<z>
Expression(true);<z>
replaceName(n);<z>
jj_consume_token(RBRACKET);<z>
true) {<z>
(2)) {<z>
{<z>
break label_48;<z>
LBRACKET);<z>
(RBRACKET);<z>
first,token);}<z>
else {<z>
):jj_ntk) {<z>
LBRACKET:<z>
true) {<z>
(LBRACKET);<z>
;<z>
:jj_ntk) {<z>
LBRACKET:<z>
jj_gen;<z>
label_49;<z>
(true);<z>
n);<z>
token);}<z>
[121] = jj_gen;<z>
-1);<z>
();<z>
new Error("Missing return statement in function");<z>
finally {<z>
("ArrayDimsAndInits");<z>
() {<z>
MessageList initialValue() {<z>
return new MessageList();<z>
String key, RGB newValue, boolean fireEvent) {<z>
) {<z>
store, key, newValue);<z>
oldValue= null;<z>
))<z>
PreferenceConverter.getDefaultColor(store, key);<z>
setDefault(store, key, newValue);<z>
.equals(newValue))<z>
newValue);<z>
() throws MojoFailureException {<z>
;<z>
.length() == 0) {<z>
;<z>
Prepared parseCreate() {<z>
;<z>
) {<z>
;<z>
;<z>
force = readIf("FORCE");<z>
("VIEW")) {<z>
parseCreateView(force, orReplace);<z>
readIf("ALIAS")) {<z>
parseCreateFunctionAlias(force);<z>
else if (readIf("SEQUENCE")) {<z>
);<z>
"USER")) {<z>
return parseCreateUser();<z>
readIf("TRIGGER")) {<z>
(force);<z>
)) {<z>
;<z>
) {<z>
();<z>
} else if (readIf("CONSTANT")) {<z>
();<z>
(readIf("DOMAIN")) {<z>
parseCreateUserDataType();<z>
readIf("TYPE")) {<z>
;<z>
) {<z>
;<z>
else if (readIf("AGGREGATE")) {<z>
parseCreateAggregate(force);<z>
else if (readIf("LINKED")) {<z>
, force);<z>
false;<z>
(readIf("MEMORY")) {<z>
;<z>
(readIf("CACHED")) {<z>
cached = true;<z>
{<z>
"TEMPORARY");<z>
{<z>
false, force);<z>
;<z>
cached);<z>
"GLOBAL")) {<z>
);<z>
) {<z>
parseCreateLinkedTable(true, true, force);<z>
read("TABLE");<z>
true, true, cached);<z>
("TEMPORARY")) {<z>
{<z>
return parseCreateLinkedTable(true, true, force);<z>
;<z>
, cached);<z>
if (readIf("TABLE")) {<z>
!cached && !memory) {<z>
getDefaultTableType() == Table.TYPE_CACHED;<z>
false, false, cached);<z>
{<z>
primaryKey = false, unique = false;<z>
;<z>
null;<z>
;<z>
if (readIf("PRIMARY")) {<z>
read("KEY");<z>
readIf("HASH")) {<z>
hash = true;<z>
primaryKey = true;<z>
(!isToken("ON")) {<z>
;<z>
readIdentifierWithSchema(null);<z>
= getSchema();<z>
{<z>
{<z>
true;<z>
if (readIf("HASH")) {<z>
hash = true;<z>
) {<z>
) {<z>
= readIfNoExists();<z>
= readIdentifierWithSchema(null);<z>
();<z>
{<z>
throw getSyntaxError();<z>
;<z>
();<z>
;<z>
new CreateIndex(session, getSchema());<z>
;<z>
;<z>
primaryKey);<z>
;<z>
command.setUnique(unique);<z>
(indexName);<z>
setComment(readCommentIf());<z>
("(");<z>
command.setIndexColumns(parseIndexColumnList());<z>
return command;<z>
long topicId, String assocTypeUri, String myRoleTypeUri,<z>
, String othersTopicTypeUri,<z>
maxResultSize) {<z>
? Arrays.asList(assocTypeUri) : null;<z>
myRoleTypeUri, othersRoleTypeUri, othersTopicTypeUri,<z>
);<z>
) {<z>
;<z>
);<z>
i, REQUEST_CODE_DATE_SELECTION);<z>
model,<z>
,<z>
String facilityName,<z>
response)<z>
{<z>
, inferReturnTo(request));<z>
;<z>
, new File(pathnameBase), facility);<z>
();<z>
;<z>
"message", "Dataset grab succeeded");<z>
"ok";<z>
{<z>
;<z>
.getEnv();<z>
getSelectedAgent();<z>
_signals.add( env.signalBombTrapped );<z>
if( agent != null ) {<z>
agent.signalDropBomb );<z>
_signals.add( agent.signalDropBombSucces );<z>
( agent.signalMove );<z>
.add( agent.signalMoveSucces );<z>
signalPickupBomb );<z>
signalPickupBombSucces );<z>
();<z>
event)<z>
(StoreData data)<z>
(data.isFCO())<z>
)))<z>
;<z>
.getMetaData()))<z>
data);<z>
if (NucleusLogger.PERSISTENCE.isInfoEnabled())<z>
;<z>
{<z>
if (this.newConnectionListener != null)<z>
"Only one newConnectionListener can be registered at a time");<z>
newConnectionListener = newConnectionListener;<z>
) {<z>
{<z>
.util.Collections.emptyList();<z>
= (bitField0_ & ~0x00000020);<z>
onChanged();<z>
else {<z>
.clear();<z>
;<z>
long logRotationSecs) {<z>
logWriter = logWriter;<z>
this.logFilter = logFilter;<z>
(logFile == null) {<z>
logFile = "oozie-app.log";<z>
logFile = logFile;<z>
;<z>
* 1000l;<z>
void triggerResolveEnd() {<z>
getListenersList().iterator();<z>
()) {<z>
next();<z>
(trl instanceof TransportResolverListener.Resolver) {<z>
TransportResolverListener.Resolver) trl;<z>
end();<z>
IDataQueryDefinition[] createReportQueries(<z>
IDataQueryDefinition parent ) throws BirtException<z>
)<z>
);<z>
getReportQueries( null );<z>
final int toPageId) {<z>
; x < toPageId; x++ ) {<z>
Page( this.lastPage,<z>
++this.lastPageId,<z>
this.tableSize );<z>
0 ) {<z>
+ 1;<z>
( newSize );<z>
= this.lastPage;<z>
;<z>
return this.lastPage;<z>
) {<z>
.println("");<z>
i < indent; i++) {<z>
out.print(" ");<z>
(s);<z>
) {<z>
new StringConcatenation();<z>
_builder.append("<table>");<z>
;<z>
TableRow> _rows = table.getRows();<z>
TableRow tr : _rows) {<z>
.append(" ");<z>
tr);<z>
(_genRow, " ");<z>
newLineIfNotEmpty();<z>
_builder.append("</table>");<z>
;<z>
;<z>
public FactTemplateDescr getTemplate(String name) {<z>
templates == null) {<z>
();<z>
(FactTemplateDescr) templates.get(name);<z>
) {<z>
{<z>
;<z>
String)) {<z>
false;<z>
) value;<z>
str = str.trim();<z>
.isEmpty();<z>
() throws ParseException {<z>
;<z>
():jj_ntk) {<z>
PLUS:<z>
jj_consume_token(PLUS);<z>
:<z>
= jj_consume_token(MINUS);<z>
= jj_gen;<z>
(-1);<z>
;<z>
;}<z>
Error("Missing return statement in function");<z>
appContext )<z>
.getResourceLocator( ).findResource(<z>
fileName, fileType,<z>
;<z>
return url;<z>
progressMonitor) throws ExtensionImportException {<z>
();<z>
final IArchiveFile archiveFile = manifestEntry.getArchiveFile();<z>
= extension.getModel();<z>
archiveFile.reopen();<z>
* 100);<z>
)));<z>
).makeAbsolute();<z>
IPath, ExtensionResource>();<z>
.getResources()) {<z>
(), resource);<z>
) {<z>
.isDirectory()) {<z>
.worked(100);<z>
();<z>
path = fullPath;<z>
().isEmpty()) {<z>
)) {<z>
()));<z>
1);<z>
progressMonitor.worked(100);<z>
{<z>
.close();<z>
();<z>
) {<z>
String, String> createExtraAttributes(PublishArtifact publishArtifact) {<z>
String, String>();<z>
void storeMediaCache() {<z>
);<z>
) {<z>
{<z>
);<z>
e) {<z>
, e.toString());<z>
();<z>
InterruptedException e) {<z>
, e.toString());<z>
);<z>
} catch (ExecutionException e) {<z>
toString());<z>
();<z>
;<z>
{<z>
== null) return 0;<z>
;<z>
(2, 8, 0)) {<z>
.GTK_SCROLLED_WINDOW_VSCROLLBAR (scrolledHandle);<z>
{<z>
(scrolledHandle);<z>
== 0) return 0;<z>
GtkRequisition();<z>
;<z>
);<z>
.width + spacing;<z>
, List<cfData> parameters ) throws cfmRunTimeException {<z>
.createArray(1);<z>
= _session.getTagElements();<z>
cfTag tg = null;<z>
null;<z>
while (E.hasMoreElements()) {<z>
tg = E.nextElement();<z>
= new cfStructData();<z>
.getTagName()));<z>
tg.posLine));<z>
);<z>
));<z>
(structData);<z>
} catch (cfmRunTimeException ex) {}<z>
return arrayData;<z>
workingMemory,<z>
,<z>
{<z>
) context).left;<z>
.extractor.getValue( workingMemory,<z>
right );<z>
return true;<z>
( array,<z>
value );<z>
) {<z>
+ ":=";<z>
dependentVar+");";<z>
ecl += "\r\n\r\n";<z>
return ecl;<z>
, int off, int len) throws IOException {<z>
0 < len) {<z>
length - cnt;<z>
capacity < len) {<z>
buffer.length);<z>
write(buffer, 0, HDR_SIZE);<z>
(b, off, capacity);<z>
+= capacity;<z>
-= capacity;<z>
{<z>
== 0)<z>
;<z>
len, capacity);<z>
cnt, n);<z>
+= n;<z>
off += n;<z>
;<z>
(final RedisInputStream is) {<z>
parseInt(is.readLine());<z>
(len == -1) {<z>
null;<z>
read = new byte[len];<z>
offset = 0;<z>
< len) {<z>
));<z>
is.readByte();<z>
.readByte();<z>
} catch (IOException e) {<z>
throw new TedisConnectionException(e);<z>
read;<z>
doStart() throws Exception {<z>
);<z>
) {<z>
= null;<z>
if (clientConfig != null) {<z>
.cloneConfig(clientConfig);<z>
if (sslContextParameters != null) {<z>
createSSLContext();<z>
(ssl);<z>
builder.build();<z>
{<z>
if (sslContextParameters != null) {<z>
();<z>
);<z>
);<z>
);<z>
) {<z>
= new AsyncHttpClient();<z>
else {<z>
new AsyncHttpClient(config);<z>
PreferencesHint preferencesHint) {<z>
;<z>
());<z>
);<z>
persisted);<z>
setElement(domainElement);<z>
)preferencesHint.getPreferenceStore();<z>
node, prefStore, "Enumeration");<z>
node, prefStore, "Enumeration");<z>
, prefStore, "Enumeration");<z>
;<z>
true, true, true);<z>
, prefStore, "Enumeration");<z>
;<z>
String[] values) {<z>
();<z>
)));<z>
getAbsolutePath());<z>
] { });<z>
;<z>
, values);<z>
e) {<z>
());<z>
boolean refreshIfExistAlready, IProgressMonitor monitor) throws JavaModelException {<z>
getExternalFolders(this.oldResolvedClasspath);<z>
.project.getResolvedClasspath();<z>
ExternalFoldersManager.getExternalFolders(newResolvedClasspath);<z>
null)<z>
.getExternalManager();<z>
.iterator();<z>
hasNext()) {<z>
();<z>
{<z>
refreshIfExistAlready, monitor);<z>
(CoreException e) {<z>
;<z>
VirtualFile initialFile,<z>
final boolean chooseFile,<z>
boolean chooseMultiple,<z>
VirtualFile> filter) {<z>
if (initialFile == null) {<z>
myContext.getModule().getModuleFile();<z>
{<z>
.getModule());<z>
p != null) {<z>
);<z>
, false, chooseMultiple) {<z>
{<z>
, showHiddenFiles)) {<z>
false;<z>
.isDirectory() && !chooseFile) {<z>
;<z>
filter.value(file);<z>
;<z>
> domains, CharSequence content) {<z>
= new HashSet<String>();<z>
String> hosts = scanContentForHosts(content);<z>
) {<z>
(host);<z>
{<z>
domains.contains(domain)) {<z>
add(domain);<z>
;<z>
synchronized RuleSet createRuleSet(String referenceString) throws RuleSetNotFoundException {<z>
references = RuleSetReferenceId.parse(referenceString);<z>
) {<z>
("No RuleSetReferenceId can be parsed from the string: <"<z>
+ ">");<z>
));<z>
) {<z>
= product;<z>
.version = version;<z>
;<z>
this.extraInfo = extraInfo;<z>
vendor = vendor;<z>
Object obj) {<z>
obj)<z>
true;<z>
if (obj == null)<z>
false;<z>
) != obj.getClass())<z>
return false;<z>
Task other = (Task) obj;<z>
null) {<z>
owner != null)<z>
return false;<z>
other.owner))<z>
false;<z>
) {<z>
title != null)<z>
;<z>
title))<z>
false;<z>
;<z>
()<z>
== null)<z>
());<z>
;<z>
);<z>
add(cameraPathLayer);<z>
== null)<z>
CrosshairLayer();<z>
if (gridOverlay == null)<z>
;<z>
.isGridShown());<z>
ruleOfThirdsOverlay == null)<z>
3d, 1 / 3d);<z>
Color.GREEN);<z>
().isRuleOfThirdsShown());<z>
(String notOnlastRevisionChecked) {<z>
;<z>
GitCommitLogEntry("Unknown");<z>
)) {<z>
(NEW_COMMIT_LINE_PREFIX)) {<z>
isValidCommit(notOnlastRevisionChecked)) {<z>
(commitLogEntry.toBambooCommit());<z>
.length() + 1));<z>
(line.startsWith(AUTHOR_LINE_PREFIX)) {<z>
;<z>
line.startsWith(DATE_LINE_PREFIX)) {<z>
;<z>
0])) {<z>
);<z>
startsWith(MERGE_LINE_PREFIX)) {<z>
)) {<z>
commitLogEntry.addCommentLine(line);<z>
{<z>
(commitLogEntry.toBambooCommit());<z>
return commits;<z>
() {<z>
();<z>
catch (Exception e) {<z>
printStackTrace();<z>
public int compareTo(Dx Dx2) {<z>
);<z>
Dx2.getMetres();<z>
==ms2) return 0;<z>
: 1;<z>
boolean onlyVisible) {<z>
Callable<Collection<T>>() {<z>
Collection<T> call() throws Exception {<z>
.sleep();<z>
(onlyVisible)<z>
viewFetcher.getCurrentViews(viewClass));<z>
return viewFetcher.getCurrentViews(viewClass);<z>
, expectedMinimumNumberOfMatches, scroll);<z>
{<z>
);<z>
, long target_list) {<z>
.lock();<z>
(widget, context, target_list);<z>
} finally {<z>
.unlock();<z>
.lang.Integer> p4) {<z>
F317();<z>
.setP1(p1);<z>
(p2);<z>
);<z>
f.setP4(p4);<z>
f.asField();<z>
{<z>
.ObjectList) {<z>
;<z>
else {<z>
(other);<z>
this;<z>
,<z>
textViewResId) {<z>
);<z>
, textViewResId, strings);<z>
RuleAtom ruleAtom) throws RuleAtomCallExeption,<z>
rules.manager.atoms.StrAtom) ruleAtom;<z>
tmp.getUriResource();<z>
adaptTo(argumentAtom, SPARQLObject.class);<z>
.getObject() + ")";<z>
;<z>
loadElevationModel(ElevationModelIdentifier identifier)<z>
getLocation());<z>
identifier.getName());<z>
result;<z>
arg0) {<z>
, CommentData.TYPE_NEWS)<z>
[1]);<z>
(Exception ex) {<z>
.printStackTrace();<z>
false;<z>
void fireEvent( @Nonnull final InstanceCreationEvent event ) {<z>
"Event is required" );<z>
);<z>
.createOrUpdateAccount( event.getAccountId(),<z>
);<z>
getUserId(),<z>
(), event.getUserName() );<z>
= getReportingInstanceEventStore();<z>
getInstanceId(), timestamp,<z>
getAvailabilityZone() );<z>
boolean isConnected() {<z>
getThisNetworkNode()!=null)<z>
;<z>
false;<z>
[] val) {<z>
);<z>
boolean first = true;<z>
val) {<z>
if (first) {<z>
= false;<z>
else {<z>
;<z>
write(v);<z>
);<z>
void closeMessageDialog() throws Exception<z>
System.out.println("--Closing message dialog--");<z>
"//div[@id='UIPortalApplication']/div[@class='UIPopupWindow UIDragObject']//div[@class='MiddleLeftSideDecorator']//div[@class='UIPopupMessages']/div[@class='MessageActionBar']//a");<z>
);<z>
clazz)<z>
(); i++)<z>
charAt(i)))<z>
i;<z>
-1;<z>
UUID ownerId) {<z>
}, "{3}{B}");<z>
.expansionSetCode = "M13";<z>
.subtype.add("Bat");<z>
.color.setBlack(true);<z>
MageInt(2);<z>
toughness = new MageInt(2);<z>
FlyingAbility.getInstance());<z>
));<z>
(2));<z>
);<z>
ability);<z>
{<z>
)<z>
;<z>
;<z>
) {<z>
));<z>
: FALSE;<z>
);<z>
) {<z>
][];<z>
, size);<z>
newI;<z>
int x) {<z>
>= left && x <= right) {<z>
left = x - paddle_width;<z>
;<z>
if (x > right) {<z>
+= paddle_move_offset;<z>
right += paddle_move_offset;<z>
left) {<z>
left -= paddle_move_offset;<z>
right -= paddle_move_offset;<z>
(left < 0) {<z>
= 0;<z>
* 2;<z>
> SCREEN_WIDTH) {<z>
right = SCREEN_WIDTH;<z>
paddle_width * 2);<z>
context) throws SmooksException {<z>
= rules.get(ruleName);<z>
{<z>
);<z>
, name, selectedData.toString());<z>
{<z>
, selectedData.toString());<z>
{<z>
execute(<z>
,<z>
(cfg),<z>
Exception ioe) {<z>
LOGGER.severe("Couldn't clear out config dir due to: " + ioe);<z>
, StringBuffer sb, int i)<z>
int j;<z>
length();<z>
i; j<len; j++) {<z>
== '"' && j+1 < len) {<z>
) == '"') {<z>
;<z>
) == this.fieldSep) {<z>
++;<z>
== '"' && j+1 == len) {<z>
(s.charAt(j));<z>
return j;<z>
<File> getClassPath() {<z>
) {<z>
;<z>
()<z>
, "rsc_effects.jar"));<z>
= cp;<z>
classpath;<z>
, final boolean tryTricks) {<z>
execSWTThread(new AERunnable() {<z>
{<z>
;<z>
currentlyVisible) {<z>
if (COConfigurationManager.getBooleanParameter("Password enabled")) {<z>
.showPasswordWindow(display)) {<z>
.setVisible(false);<z>
) {<z>
= null;<z>
false;<z>
(bHideAndShow) {<z>
();<z>
(true);<z>
shell.getDisplay().getShells();<z>
shells.length; i++) {<z>
i].isVisible()) {<z>
wasVisibleList.add(shells[i]);<z>
.setVisible(false);<z>
(Exception e) {<z>
{<z>
) {<z>
setMinimized(false);<z>
if (!currentlyVisible<z>
getBooleanParameter("window.maximized")) {<z>
.setMaximized(true);<z>
else {<z>
("window.maximized",<z>
());<z>
;<z>
{<z>
forceActive();<z>
(bHideAndShow) {<z>
().getShells();<z>
i++) {<z>
) {<z>
i])) {<z>
].setVisible(visible);<z>
);<z>
) {<z>
);<z>
)<z>
closing)<z>
= true;<z>
StageClosingEvent().dispatch(this);<z>
);<z>
;<z>
;<z>
.dispatch(this);<z>
String, String> getUserMap() {<z>
> map = jedis.hgetAll(USER_MAP_KEY);<z>
if (map == null) {<z>
String>(0);<z>
return map;<z>
,<z>
actions) {<z>
> 0) {<z>
new DefaultMarkerAnnotationAccess() {<z>
(Annotation annotation) {<z>
(annotation.isMarkedDeleted()) {<z>
.DEFAULT_LAYER;<z>
annotation);<z>
;<z>
)<z>
annotationType);<z>
verticalRuler.addDecorator(1, annotationRulerColumn);<z>
, actions);<z>
DisposeListener() {<z>
void widgetDisposed(DisposeEvent e) {<z>
uninstallUndoRedoSupport(listener);<z>
);<z>
.addTextListener(new ITextListener() {<z>
void textChanged(TextEvent event) {<z>
{<z>
();<z>
});<z>
(new ISelectionChangedListener() {<z>
) {<z>
);<z>
);<z>
().reset();<z>
length) throws IOException {<z>
(length > pos) {<z>
new IOException("Pushback buffer full");<z>
{<z>
offset);<z>
offset) {<z>
;<z>
) {<z>
;<z>
, length);<z>
;<z>
SelectionEvent e ) {<z>
;<z>
b.equals(getDefault)) {<z>
) && postDefault.getSelection()) {<z>
false);<z>
postDefault)) {<z>
)) {<z>
getDefault.setSelection(false);<z>
if (b.equals(advancedTag)) {<z>
);<z>
|| b.equals(onDisk)){<z>
.getSelection()){<z>
onDisk.setSelection(false);<z>
()){<z>
false);<z>
();<z>
.setEnabled(isenabled);<z>
;<z>
this.btnSelectDir.setEnabled(isenabled);<z>
.updateButtons();<z>
expected, double[] actual,<z>
tolerance) {<z>
,"Values differ in length!");<z>
abs = 0.0;<z>
) {<z>
];<z>
pow(diff, 2.0);<z>
;<z>
;<z>
;<z>
[]> result, ExprEvaluatorContext exprEvaluatorContext)<z>
= childNodes.size();<z>
0, prefillPath, result, exprEvaluatorContext);<z>
final Reader characterStream, final String systemId)<z>
JDOMException, IOException {<z>
).build(characterStream, systemId);<z>
} finally {<z>
) {<z>
= null;<z>
set(int index, Equation element) {<z>
(index, element);<z>
updateAlgebraic();<z>
result;<z>
public String getDownloadPageURL() {<z>
(_downloadPageURL == null) {<z>
.BLANK;<z>
_downloadPageURL;<z>
final String id, final Executor executor )<z>
id );<z>
.executor = executor;<z>
)<z>
);<z>
;<z>
, InputStream stream) {<z>
stream);<z>
.startDocumentHandler();<z>
);<z>
);<z>
{<z>
;<z>
return true;<z>
(String name) throws JspException {<z>
name);<z>
== null) {<z>
throw new JspException(<z>
;<z>
);<z>
(ActionEvent event) {<z>
findByAttribute(this.contrato.getCliente()<z>
, this.contato.getIdContato());<z>
));<z>
.listaContatosRemovidos.add(remover);<z>
(remover);<z>
;<z>
newActiveBackground) {<z>
);<z>
updateHyperlinkSettings();<z>
Category> categories) throws ServiceException {<z>
) > 0) {<z>
(); i++) {<z>
(i > 0) {<z>
);<z>
(parent);<z>
1) {<z>
children = new ArrayList<Category>();<z>
));<z>
.setChildren(children);<z>
categories.get(0);<z>
;<z>
{<z>
CHANNEL_PREFIX))<z>
(CHANNEL_PREFIX + roomName);<z>
roomName;<z>
(<z>
{<z>
isDebugEnabled()) {<z>
log.debug("TaskDescriptionRepositoryService unbound from the ESB environment");<z>
repositoryService = null;<z>
eventId) {<z>
;<z>
where, null);<z>
getDefaultConfig() {<z>
getDefaultConfig();<z>
;<z>
node;<z>
String key, boolean equals )<z>
ArrayList<Attachment>();<z>
AbstractHttpRequest<?> )getRequest( testStep );<z>
request.getAttachments() )<z>
equals )<z>
.getId().equals( key ) )<z>
add( attachment );<z>
.getId().equals( key ) )<z>
;<z>
)<z>
( remove );<z>
.protocol.PubSubProtocol.UnsubscribeRequest other) {<z>
()) return this;<z>
other.hasSubscriberId()) {<z>
setSubscriberId(other.getSubscriberId());<z>
.mergeUnknownFields(other.getUnknownFields());<z>
;<z>
(NodeSet ns)<z>
if (!m_mutable)<z>
(XPATHErrorResources.ER_NODESET_NOT_MUTABLE, null));<z>
((NodeIterator) ns);<z>
, Object o2)<z>
(o1 == o2)<z>
return 0;<z>
(o1 instanceof ColumnInfoRecord);<z>
.verify(o2 instanceof ColumnInfoRecord);<z>
o1;<z>
ColumnInfoRecord ci2 = (ColumnInfoRecord) o2;<z>
getColumn();<z>
public Collection<TransformedWaveletDelta> getHistory(WaveletName waveletName,<z>
WaveServerException {<z>
;<z>
);<z>
null) {<z>
new AccessControlException(<z>
+ waveletName);<z>
);<z>
, IParam param)<z>
param.getValueCount();<z>
);<z>
Object v;<z>
value;<z>
++) {<z>
;<z>
v == null) value = "";<z>
+ "";<z>
(data, CPEimport.VALUE, value);<z>
if (valCount > 0) {<z>
addChild(data);<z>
getAttribute(TextParam.DEFAULT_VALUE);<z>
)<z>
CPEimport.DEFAULT, defaultValue);<z>
void parseParameters(){<z>
null) return;<z>
) &&<z>
.startsWith("application/x-www-form-urlencoded")) {<z>
);<z>
else {<z>
(super.getParameterMap());<z>
Object key : myParameterMap.keySet()) {<z>
myParameterMap.get(key);<z>
value instanceof List) {<z>
[]) {<z>
);<z>
else {<z>
, List.class));<z>
repositoryId, String fileName)<z>
PortalException {<z>
versionLabel = getHeadVersionLabel(<z>
);<z>
File fileNameVersionFile = getFileNameVersionFile(<z>
);<z>
!fileNameVersionFile.exists()) {<z>
NoSuchFileException(fileNameVersionFile.getPath());<z>
return fileNameVersionFile.length();<z>
_writeData(DataOutputStream outStream)<z>
getDefault();<z>
idm.getObjectId(_thread);<z>
getObjectId(_exception);<z>
);<z>
_location.write(outStream);<z>
);<z>
;<z>
)<z>
typeSpec() instanceof ScopedName )<z>
;<z>
!= null )<z>
symbol = ts;<z>
.parse();<z>
) {<z>
.write(b);<z>
catch(IOException e){<z>
error(e);<z>
return this;<z>
createMainTypeExtensions(Composite parent) {<z>
if (mainTypeShell == null) {<z>
();<z>
;<z>
notVisibleComposite);<z>
notVisibleComposite.setVisible(false);<z>
final Context context) {<z>
getSystemService(Context.WINDOW_SERVICE);<z>
DisplayMetrics metrics = new DisplayMetrics();<z>
;<z>
setTextSize(24 * metrics.density);<z>
mSoundCloudLogoBitmap == null) {<z>
.soundcloudlogochallenge);<z>
(JsonNode jsonNode) {<z>
null)<z>
null;<z>
return jsonNode.getTextValue();<z>
void cacheResult() {<z>
();<z>
end();<z>
matcher.pattern();<z>
persisted, PreferencesHint preferencesHint) {<z>
createShape();<z>
NotationFactory.eINSTANCE.createHintedDiagramLinkStyle());<z>
.createBounds());<z>
);<z>
);<z>
);<z>
);<z>
getPreferenceStore();<z>
;<z>
initFontStyleFromPrefs(node, prefStore, "Comment");<z>
, prefStore, "Comment");<z>
);<z>
node;<z>
final RealVector vector)<z>
throws MatrixIndexException, InvalidMatrixException {<z>
this, row);<z>
();<z>
{<z>
InvalidMatrixException(<z>
LocalizedFormats.DIMENSIONS_MISMATCH_2x2,<z>
, nCols);<z>
++i) {<z>
.getEntry(i));<z>
blockingConsumeById(String messageId) {<z>
RPCElement element;<z>
{<z>
) == null) {<z>
+ ")...");<z>
queue.wait();<z>
) {<z>
();<z>
return element;<z>
double longitude, double geoAccuracy) {<z>
();<z>
mAddress = address;<z>
;<z>
mNeighborhoods = neighborhoods;<z>
= city;<z>
stateCode;<z>
postalCode;<z>
= countryCode;<z>
mCrossStreets = crossStreets;<z>
= latitude;<z>
;<z>
geoAccuracy;<z>
source, Object info, int dragAction) {<z>
isVisible = true;<z>
boolean isUninstall = false;<z>
info)) {<z>
;<z>
if (isAllAppsApplication(source, info)) {<z>
appInfo = (ApplicationInfo) info;<z>
& ApplicationInfo.DOWNLOADED_FLAG) != 0) {<z>
;<z>
{<z>
isVisible = false;<z>
isUninstall) {<z>
, null, null);<z>
{<z>
(mRemoveDrawable, null, null, null);<z>
TransitionDrawable) getCompoundDrawables()[0];<z>
isVisible;<z>
);<z>
setTextColor(mOriginalTextColor);<z>
.VISIBLE : View.GONE);<z>
() > 0) {<z>
(isUninstall ? R.string.delete_target_uninstall_label<z>
.string.delete_target_label);<z>
) {<z>
{<z>
numOfPktsRecvdInSlot != 0) {<z>
((double)sumLQ)/numOfPktsRecvdInSlot;<z>
currSlotMaxLQ = ConfigLinkParams.MAX_LQ;<z>
} else {<z>
currAvgLQ = 0.0;<z>
= 0.0;<z>
;<z>
;<z>
Throwable e) {<z>
StackOverflowError || e instanceof AssertionError) {<z>
InvocationTargetException(e);<z>
;<z>
Map<String, Cookie> map) {<z>
(map);<z>
null) {<z>
().getAbsolutePath(), map);<z>
private void sendMail(Throwable caught) throws EmailException {<z>
email = new SimpleEmail();<z>
address : alertRecipients) {<z>
address);<z>
.getMessage());<z>
));<z>
mailSender.send(email);<z>
void createContextCatagory( )<z>
null;<z>
.isDisposed( ) )<z>
createTopTreeItem( tree, TREE_ITEM_CONTEXT, 0 );<z>
currentMethodName );<z>
) {<z>
DefaultMutableTreeNode root = new DefaultMutableTreeNode("Problem with NPE under JDK 1.6");<z>
problematic = new DefaultMutableTreeNode("Expand me and behold a NPE in stderr");<z>
(new DefaultMutableTreeNode("some content"));<z>
.add(new DefaultMutableTreeNode("irrelevant..."));<z>
);<z>
);<z>
);<z>
(true);<z>
setShowsRootHandles(true);<z>
0);<z>
;<z>
setDragEnabled(true);<z>
(new TreeExpansionListener() {<z>
{<z>
;<z>
if (parent instanceof DefaultMutableTreeNode) {<z>
removeNodeFromParent(problematic);<z>
) {<z>
});<z>
);<z>
add(new JScrollPane(tree));<z>
500, 300);<z>
JFrame.EXIT_ON_CLOSE);<z>
null);<z>
true);<z>
{<z>
if (modelPackage == null) {<z>
= EurPackage.eINSTANCE;<z>
Object base, final Object property)<z>
(context);<z>
facesContext == null)<z>
;<z>
Object> requestMap = facesContext.getAttributes();<z>
prevScope = null;<z>
;<z>
setScope(requestMap);<z>
context, base, property);<z>
)<z>
);<z>
requestMap);<z>
buildDeleteFolderButton() {<z>
();<z>
(ID_DELETE_FOLDER_BTN);<z>
(I18N.DISPLAY.delete());<z>
.ICONS.folderDelete()));<z>
ButtonEvent>() {<z>
)<z>
public void componentSelected(ButtonEvent ce) {<z>
selectionModel == null) {<z>
("rawtypes")<z>
);<z>
= new Listener<MessageBoxEvent>() {<z>
) {<z>
.equals(Dialog.YES)) {<z>
idFolders = new ArrayList<String>();<z>
{<z>
));<z>
{<z>
DiskResourceServiceFacade(<z>
maskingParent);<z>
.buildJsonArrayString(idFolders),<z>
);<z>
(resources)) {<z>
);<z>
} else {<z>
.DISPLAY.folderDeleteWarning(),<z>
;<z>
});<z>
;<z>
{<z>
== null) {<z>
<CTOfficeArtExtension>();<z>
ext;<z>
Properties parameter,<z>
Attributes controlDefinitionAttributes) {<z>
bind(element);<z>
;<z>
.nifty = nifty;<z>
.findElementByName("#droppable");<z>
("#draggable");<z>
findElementByName("#draggableImage");<z>
;<z>
backgroundImageLabel = element.findElementByName("#backgroundImageLabel");<z>
;<z>
.findElementByName("#merchantOverlay");<z>
= new EventTopicSubscriber<DraggableDragStartedEvent>() {<z>
String topic, final DraggableDragStartedEvent data) {<z>
(true);<z>
EventTopicSubscriber<DraggableDragCanceledEvent>() {<z>
final String topic, final DraggableDragCanceledEvent data) {<z>
;<z>
= controlDefinitionAttributes.get("background");<z>
{<z>
false));<z>
> getExtensions(String extensionRepository) throws IOException {<z>
logger.info("Getting extensions from repository: "+extensionRepository);<z>
;<z>
= downloadExtensions(extensionRepository);<z>
) {<z>
"Error: ",e);<z>
extensionRepository);<z>
XMLElement> children = xe.getChildren();<z>
<String>>();<z>
(XMLElement element : children) {<z>
;<z>
> versions = result.get(name);<z>
null) {<z>
;<z>
);<z>
;<z>
)) {<z>
(version);<z>
;<z>
Class sourceClass)<z>
sourceClass, getName(sourceClass));<z>
() {<z>
XQuery query = new XQuery(<z>
;<z>
(query);<z>
res;<z>
assertStringValue(false, "2001-02-03 01:02:03Z")<z>
"XPTY0004")<z>
segmentData)<z>
, int2ToByteArray(marker, JPEG_BYTE_ORDER),<z>
.length + 2, JPEG_BYTE_ORDER),<z>
;<z>
[] getParameters()<z>
if (parameters == EMPTY_STRING_ARRAY)<z>
));<z>
;<z>
selectOrderEntry(@NotNull OrderEntry entry) {<z>
getRowCount(); row++) {<z>
).getEntry();<z>
(orderEntry.getPresentableName())) {<z>
;<z>
;<z>
requestFocus(myEntryTable, true);<z>
boolean hasValidChanges(final Change[] changes) {<z>
) {<z>
;<z>
{<z>
;<z>
return false;<z>
(Float defaultGrade, EnclosedText genFeedBack,<z>
String imageURL, EnclosedText name,<z>
,<z>
shuffle, Answer answer, Units units) {<z>
, name, penalty,<z>
, hidden);<z>
shuffle);<z>
);<z>
this.setUnits(units);<z>
getAddedGlusterServers(List<GlusterServerInfo> glusterServers) {<z>
HashMap<String, String>();<z>
).getClusterId());<z>
glusterServers) {<z>
server))) {<z>
getHostnameOrIp()));<z>
serversAndFingerprint;<z>
public final void rule__XClosure__Group_1__0() throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
);<z>
);<z>
_fsp--;<z>
if (state.failed) return ;<z>
catch (RecognitionException re) {<z>
(re);<z>
);<z>
;<z>
public Enumeration getAllPropertyNames() throws JMSException {<z>
().keySet());<z>
));<z>
.elements();<z>
{<z>
;<z>
GeoPoint point, String title, String snippet) {<z>
.point = point;<z>
title = title;<z>
this.snippet = snippet;<z>
Byte.MIN_VALUE;<z>
)<z>
if ( value == null )<z>
;<z>
LazyInitializedJDOMDocument document = (LazyInitializedJDOMDocument) value;<z>
);<z>
UserEntity> findAllMembers(int limit){<z>
UserEntity> query;<z>
){<z>
.class);<z>
query.setMaxResults(limit);<z>
{<z>
;<z>
);<z>
(final ExtMail em) {<z>
null;<z>
;<z>
null);<z>
if (_operator_notEquals) {<z>
.getContent();<z>
_content_1;<z>
;<z>
();<z>
BooleanExtensions.operator_equals(_isMergeWithSuperConfig, true);<z>
_operator_equals) {<z>
String _xblockexpression_1 = null;<z>
_parentExtMail = this.getParentExtMail(em);<z>
;<z>
String _xifexpression_1 = null;<z>
null);<z>
(_operator_notEquals_1) {<z>
pm);<z>
;<z>
;<z>
;<z>
);<z>
;<z>
{<z>
);<z>
();<z>
(Exception e) {<z>
);<z>
) throws JSONException<z>
DiurnalScheduleCreator creator = new DiurnalScheduleCreator();<z>
creator.setInitialWorkload( 800 );<z>
createSchedule( new JSONObject() );<z>
LoadProfile p : profiles )<z>
() );<z>
protected void setState(int state) {<z>
fState.length) {<z>
int[fDepth * 2];<z>
fState.length);<z>
newarray;<z>
;<z>
) {<z>
postgres.pg_catalog.PgCatalog.PG_CATALOG);<z>
;<z>
;<z>
);<z>
IS_BINARY);<z>
IS_SCROLLABLE);<z>
CREATION_TIME);<z>
) {<z>
DATABASE_NAME, null, DATABASE_VERSION);<z>
Throwable exception) {<z>
() && base != sp) {<z>
popTask();<z>
!= null)<z>
t.run();<z>
ex) {<z>
= ex;<z>
));<z>
;<z>
workerTerminated(this);<z>
catch (Throwable ex) {<z>
if (exception == null)<z>
= ex;<z>
finally {<z>
if (exception != null)<z>
);<z>
thisObj, IdFunctionObject f)<z>
Namespace))<z>
f);<z>
)thisObj;<z>
stepFinished() {<z>
);<z>
(SUCCESS);<z>
currentStepDone();<z>
);<z>
);<z>
boolean isDepthStencilPackedFormat() {<z>
!= stencil &&<z>
.format ;<z>
if(res) {<z>
!= stencil.getName() ) {<z>
depth+", stencil "+stencil);<z>
(depth != stencil) {<z>
"depth/stencil packed format not a shared reference: depth "+depth+", stencil "+stencil);<z>
;<z>
static JResignAction for13Value( int value ) throws JInvalidResignAction<z>
switch( value )<z>
case 1:<z>
return RELEASE_ATTRIBUTES;<z>
case 2:<z>
;<z>
:<z>
DELETE_OBJECTS_AND_RELEASE_ATTRIBUTES;<z>
:<z>
NO_ACTION;<z>
" is not a valid resign action value" );<z>
final private boolean jj_3R_71() {<z>
jj_scan_token(LBRACKET)) return true;<z>
return false;<z>
) return true;<z>
== jj_lastpos) return false;<z>
) return true;<z>
false;<z>
return false;<z>
e)<z>
if (!down)<z>
(Cursor.getDefaultCursor());<z>
<IJstProperty> getStaticProperties() {<z>
<IJstProperty>();<z>
()){<z>
)){<z>
;<z>
;<z>
key, Locale locale) {<z>
);<z>
null) {<z>
.error("Cannot find message for key: " + key);<z>
;<z>
message, boolean repeatable) {<z>
{<z>
,<z>
(message));<z>
e) {<z>
);<z>
no_output) {<z>
;<z>
(alert_type) {<z>
.LT_INFORMATION: {<z>
AT_INFORMATION;<z>
.LT_WARNING: {<z>
;<z>
{<z>
LogAlert.AT_ERROR;<z>
LogAlert(repeatable, at,<z>
));<z>
public void setMarginBottom( String margin )<z>
);<z>
style.setMarginBottom( margin );<z>
execute() {<z>
" initiated obtaining of ID");<z>
VonConfiguration.OP_TIMEOUT_OBTAIN_ID);<z>
();<z>
) {<z>
(stringType == null) {<z>
.class.getCanonicalName());<z>
stringType;<z>
(String str) {<z>
.length() == 0) {<z>
;<z>
"-", "");<z>
(); i++) {<z>
== '.') continue;<z>
))) {<z>
false;<z>
true;<z>
timer, long initialDelay, double expBase) {<z>
1);<z>
;<z>
opensocial.model.Gadget> findByUuid(<z>
lang.String uuid)<z>
exception.SystemException {<z>
().findByUuid(uuid);<z>
tryConsume() {<z>
== null) return null;<z>
IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("clauses");<z>
{<z>
createEObjectConsumer((EObject)value);<z>
.getClassifier())) {<z>
PARSER_RULE_CALL;<z>
);<z>
= obj;<z>
;<z>
;<z>
> bodyDict, boolean deleting) {<z>
bodyDict);<z>
);<z>
deleting, false, status);<z>
.isSuccessful()) {<z>
);<z>
) {<z>
.getURL();<z>
url.toExternalForm();<z>
docID != null) {<z>
urlString += "/" + rev.getDocId();<z>
(urlString);<z>
catch (MalformedURLException e) {<z>
w("Malformed URL", e);<z>
url);<z>
<String, Object>();<z>
"ok", true);<z>
, rev.getDocId());<z>
);<z>
TDBody(result));<z>
return status;<z>
) throws MalformedURLException {<z>
(repo, path);<z>
+ path + " url " + url);<z>
);<z>
(), file);<z>
println("Downloaded " + url);<z>
true;<z>
Exception e) {<z>
);<z>
false;<z>
visitElement(@NotNull PsiElement element) {<z>
{<z>
.visitElement(element);<z>
void addIncoming() {<z>
getInput(), incomingFilters, incomingBusinessFilters,<z>
eResource()) {<z>
IStructuredSelection selection) {<z>
.hasNext();) {<z>
) iter.next();<z>
,<z>
);<z>
;<z>
.open();<z>
protected void saveValues() throws CoreException {<z>
breakpoint = getBreakpoint();<z>
getBreakointEnableState());<z>
(hasHitCountEditor()) {<z>
getHitValue());<z>
breakpoint.setHitCondition(getHitCondition());<z>
(hasExpressionEditor()) {<z>
getExpression());<z>
(getExpressionState());<z>
serviceID, String preferenceName) {<z>
("New context event received, requested re-evaluation of preference: ");<z>
());<z>
;<z>
preferenceName);<z>
!=null){<z>
new PreferenceEvaluator(this.contextCache);<z>
(model.getRootPreference());<z>
e = evaluationResult.keys();<z>
null;<z>
e.hasMoreElements()){<z>
e.nextElement();<z>
serviceID);<z>
(serviceType);<z>
);<z>
getvalue());<z>
}else{<z>
logging.debug("no new outcome for PCM, returning empty Action");<z>
;<z>
}else{<z>
logging.debug("Preference not found in cache");<z>
null;<z>
{<z>
null;<z>
{<z>
equals(builder.getName())) {<z>
;<z>
null) {<z>
.setFocus();<z>
foundBuilder);<z>
final DrawType pDrawType, final ShaderProgram pShaderProgram) {<z>
, pTextOptions, pVertexBufferObjectManager, pDrawType, pShaderProgram);<z>
= pID;<z>
dateStr) {<z>
SimpleDateFormat(<z>
;<z>
parse(dateStr).getTime());<z>
return date;<z>
(Exception ex) {<z>
"Error: " + ex.toString());<z>
;<z>
Container object )<z>
;<z>
objects.remove( object );<z>
] columnArgmaxs() {<z>
];<z>
) {<z>
.argmax();<z>
;<z>
node)<z>
;<z>
processingParsedAlt = true;<z>
.getAltName() != null)<z>
"A" +<z>
getAltName().getText() ) +<z>
currentAlt = "A" + currentProd;<z>
names.put(node, currentAlt);<z>
{<z>
;<z>
null;<z>
{<z>
while (true) {<z>
datagram = createDatagramPacket();<z>
channel.receive(datagram);<z>
receiveCounter++;<z>
, datagram.getLength()));<z>
= headerMarshaller.createEndpoint(datagram, dataIn);<z>
);<z>
answer != null) {<z>
.setFrom(from);<z>
) {<z>
);<z>
return answer;<z>
protected void createMap(MapHandler mapHandler) {<z>
double baselineHeight = layerSeparation;<z>
.get("com.bbn.openmap.LayerHandler");<z>
(lh != null) {<z>
"3d",<z>
;<z>
getLayers();<z>
{<z>
layer = layers[i];<z>
(layer.isVisible()) {<z>
(layer instanceof ScaleFilterLayer) {<z>
ScaleFilterLayer sfl = (ScaleFilterLayer) layer;<z>
= sfl.getAppropriateLayer();<z>
{<z>
addContent(this,<z>
layer,<z>
baselineHeight += layerSeparation);<z>
else {<z>
"3d", "LayerMapContent: skipping layer "<z>
);<z>
(this, mapHandler);<z>
) {<z>
= s;<z>
l;<z>
args[]){<z>
Empresa empresa = new Empresa();<z>
;<z>
Empresa.TIPO_PORHORA);<z>
.TIPO_TEMPORAL);<z>
);<z>
{<z>
;<z>
;<z>
false;<z>
FileInputStream(fileName);<z>
NSData(fin, 10000);<z>
res=true;<z>
} catch (FileNotFoundException e) {<z>
);<z>
{<z>
.printStackTrace();<z>
} finally {<z>
.close();<z>
IOException e) {<z>
.printStackTrace();<z>
return res;<z>
eSet(int featureID, Object newValue) {<z>
featureID) {<z>
:<z>
setUmlElementUid((String)newValue);<z>
.eSet(featureID, newValue);<z>
IOutput toAll, IPlayerGetter playerGetter) {<z>
prefix;<z>
toConsole;<z>
this.toAll = toAll;<z>
playerGetter;<z>
public RecordEntry resolveEntity(EntityManager em) {<z>
getRecordSession();<z>
!= null) {<z>
.getId()));<z>
entity;<z>
String tenantDomain, String productName) {<z>
;<z>
();<z>
.getFrameworkProperties(productName);<z>
;<z>
log.info(serverURL);<z>
;<z>
return serverURL;<z>
beginRead()<z>
ReadWrite.READ) ;<z>
;<z>
Graphics g,<z>
, int w, int h) {<z>
) {<z>
, w, h);<z>
(String namespace)<z>
String abbrev = "error";<z>
"s" + namespaceNumber;<z>
(namespaceNumber.byteValue() + 1);<z>
;<z>
;<z>
void visitLogicalOrExpression(GNode n) {<z>
30);<z>
(n.getNode(0));<z>
p(" || ");<z>
enterContext();<z>
getNode(1));<z>
prec2);<z>
);<z>
private void refreshDynamicViewer( )<z>
;<z>
( );<z>
) )<z>
attrIter.next( ) );<z>
.setInput( attrList );<z>
) {<z>
BundleInputContext context = getBundleContext();<z>
IBundleModel) context.getModel() : null;<z>
GenericObject obj) {<z>
= obj.getAttribute("f_code");<z>
null)<z>
null;<z>
());<z>
;<z>
obj.getAttributes()) {<z>
;<z>
: obj.getShapes()) {<z>
shape));<z>
return dncObject;<z>
{<z>
;<z>
= 1;<z>
prime * result + elementType.hashCode();<z>
;<z>
)<z>
= null;<z>
TDisplay) pop();<z>
);<z>
;<z>
) {<z>
"expression=" + expression<z>
", file=" + jspFile)<z>
1)? "" : ", tagLine=" + tagLineNumber);<z>
<String,String> propertyStringsFromRelDefinesByType<z>
IfcRelDefinesByType relDefinesByType,<z>
propertyNames)<z>
propertyNamesClone =<z>
);<z>
,String>();<z>
String>();<z>
);<z>
getHasPropertySets();<z>
pSet : rType.getHasPropertySets())<z>
pSet,propertyNamesClone);<z>
);<z>
removeFoundPropertyStrings(propertyNamesClone, propertyMap);<z>
))<z>
;<z>
tmpPropertyMap, propertyMap);<z>
return propertyMap;<z>
public boolean equals(Object pOther) {<z>
pOther instanceof CachedEntityImpl &&<z>
.cacheURI == null) ||<z>
;<z>
DaoException {<z>
.debug("Find all instance of Finders entity");<z>
HibernateUtil.currentSession();<z>
= session.createCriteria(Finders.class);<z>
list();<z>
" instances of Finders entity");<z>
;<z>
(HibernateException e) {<z>
;<z>
() {<z>
) {<z>
return handleValue.hashCode();<z>
} else {<z>
integerValue;<z>
message) {<z>
GUIMediator.safeInvokeLater(new Runnable() {<z>
{<z>
new JOptionPane();<z>
;<z>
JEditorPane();<z>
);<z>
editorPane.setEditable(false);<z>
setOpaque(false);<z>
.PLAIN,12));<z>
editorPane.setContentType("text/html");<z>
{<z>
(HyperlinkEvent e) {<z>
ACTIVATED) {<z>
);<z>
;<z>
(message);<z>
.setMessage(editorPane);<z>
);<z>
),I18n.tr("Error"));<z>
.setVisible(true);<z>
;<z>
Set<String> imports,<z>
{<z>
imports = imports;<z>
( classLoader == null ) {<z>
throw new RuntimeDroolsException( "ClassTypeResolver cannot have a null parent ClassLoader" );<z>
.classLoader = classLoader;<z>
a, ChaineArbre s)<z>
this.a = a;<z>
;<z>
) {<z>
sessionListeners);<z>
(this);<z>
.size(); i++) {<z>
(i).sessionInterrupt(evt);<z>
SourceModel.Expr dateToYearMonthDay(int date) {<z>
make(<z>
});<z>
password) {<z>
.imeiToString(GPRSInfo.getIMEI());<z>
);<z>
(USER_NAME, user),<z>
(PASSWORD, password),<z>
),<z>
new Arg(MOBILE_NUMBER, mobile)};<z>
Hashtable context = new Hashtable();<z>
put(USER_NAME, user);<z>
.put(PASSWORD, password);<z>
;<z>
, postArgs, HttpUtility.makeJSONHeader(),<z>
null, context);<z>
) {<z>
== null) {<z>
throw new NullPointerException();<z>
0x00000020;<z>
= value;<z>
);<z>
this;<z>
public boolean onSingleTap(final MotionEvent event)<z>
)<z>
return true;<z>
event);<z>
() {<z>
() + model.getNumFailed();<z>
(numProblems == 0) return;<z>
= trn(<z>
+ "was canceled or has failed.</html>",<z>
"were canceled or have failed.</html>",<z>
.showMessageDialog(<z>
,<z>
tr("Incomplete upload and/or save"),<z>
.WARNING_MESSAGE<z>
portal.model.Role findByT_S_First(int type,<z>
java.lang.String subtype,<z>
.util.OrderByComparator orderByComparator)<z>
.portal.NoSuchRoleException,<z>
.portal.kernel.exception.SystemException {<z>
subtype, orderByComparator);<z>
, String hashAuth) {<z>
;<z>
null};<z>
.equals(reqUser)) {<z>
.FAILURE);<z>
= "Requesting user, " + reqUser + ", is not owner";<z>
) {<z>
.FAILURE);<z>
retval[1] = "Bad password for user " + reqUser;<z>
owner = newOwner;<z>
.toString(Constants.SUCCESS);<z>
.name +<z>
", changed to " + newOwner;<z>
);<z>
retval;<z>
{<z>
new BorderLayout());<z>
= new DefaultActionGroup();<z>
();<z>
commonActionsManager = CommonActionsManager.getInstance();<z>
) {<z>
public void expandAll() {<z>
(myActionsTree.getTree());<z>
) {<z>
;<z>
) {<z>
myActionsTree.getTree(), 0);<z>
public boolean canCollapse() {<z>
;<z>
getTree()));<z>
));<z>
);<z>
;<z>
, group, true).getComponent();<z>
final Alarm alarm = new Alarm();<z>
{<z>
filter() {<z>
;<z>
() {<z>
void run() {<z>
(!myFilterComponent.isShowing()) return;<z>
)) myTreeExpansionMonitor.freeze();<z>
final String filter = getFilter();<z>
myQuicklists);<z>
.getTree();<z>
TreeUtil.expandAll(tree);<z>
|| filter.length() == 0) {<z>
TreeUtil.collapseAll(tree, 0);<z>
restore();<z>
);<z>
.reset();<z>
(myFilterComponent, BorderLayout.CENTER);<z>
new AnAction(KeyMapBundle.message("filter.shortcut.action.text"),<z>
.message("filter.shortcut.action.text"),<z>
AllIcons.Ant.ShortcutFilter) {<z>
actionPerformed(AnActionEvent e) {<z>
);<z>
) == null) {<z>
null)<z>
true)<z>
))<z>
.setMovable(true)<z>
.createPopup();<z>
);<z>
);<z>
(KeyMapBundle.message("filter.clear.action.text"),<z>
), AllIcons.Actions.GC) {<z>
actionPerformed(AnActionEvent e) {<z>
(null, myQuicklists);<z>
0);<z>
restore();<z>
});<z>
(searchToolbar, BorderLayout.EAST);<z>
return panel;<z>
generated.HBaseProtos.TableSchemaOrBuilder getTableSchemaOrBuilder() {<z>
if (tableSchemaBuilder_ != null) {<z>
();<z>
else {<z>
;<z>
Component component) {<z>
= null;<z>
] = null;<z>
Fractal.getSuperController(component);<z>
;<z>
|| parents.length == 0) {<z>
;<z>
.length > 1) {<z>
1) {<z>
(parents[0]);<z>
(NoSuchInterfaceException e) {<z>
component;<z>
return parent;<z>
{<z>
__hashCodeCalc) {<z>
return 0;<z>
true;<z>
1;<z>
() != null) {<z>
);<z>
if (getPicklistValues() != null) {<z>
= 0;<z>
(getPicklistValues());<z>
++) {<z>
.get(getPicklistValues(), i);<z>
if (obj != null &&<z>
) {<z>
;<z>
= false;<z>
return _hashCode;<z>
>> projection) {<z>
: self.entrySet()) {<z>
));<z>
return collector;<z>
validateControlPoints(int numExpected,<z>
imagePoints, LatLon[] geoPoints)<z>
)<z>
.getMessage("nullValue.ImagePointsIsNull");<z>
)<z>
Logging.getMessage("nullValue.GeoPointsIsNull");<z>
< numExpected)<z>
;<z>
.length < numExpected)<z>
;<z>
null;<z>
] mk_tokenSet_7() {<z>
[] data = new long[22];<z>
0]=33554432L;<z>
]=1125899906842624L;<z>
;<z>
=50331648L;<z>
data;<z>
[] items)<z>
.this);<z>
= items[0];<z>
String name = items[1];<z>
[2];<z>
this.name = name;<z>
num;<z>
<= 0) name = num;<z>
;<z>
);<z>
);<z>
) < 1) setSelectable(false);<z>
(this);<z>
() throws Exception<z>
.getSecurityBean();<z>
getUsername();<z>
();<z>
();<z>
ImageDeletionMessage();<z>
);<z>
setUserName(userName);<z>
;<z>
();<z>
;<z>
updateNumberOfDigits() {<z>
(fCachedTextViewer == null)<z>
return false;<z>
= computeNumberOfCharacters();<z>
if (fCachedNumberOfDigits != digits) {<z>
digits;<z>
;<z>
false;<z>
public final void rule__XOrExpression__Group_1_0_0__0__Impl() throws RecognitionException {<z>
keepStackSize();<z>
( state.backtracking==0 ) {<z>
.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0());<z>
==0 ) {<z>
getXBinaryOperationLeftOperandAction_1_0_0_0());<z>
);<z>
final WindowCursor c, final PackFile pr,<z>
, final long objectOffset) {<z>
c;<z>
;<z>
= dataOffset;<z>
objectOffset = objectOffset;<z>
buildName(String firstName, String lastName) {<z>
null) {<z>
return lastName;<z>
else {<z>
null ? firstName : firstName + ' ' + lastName;<z>
Map<String,String> getProtocolProperties()<z>
;<z>
= HEADER + protocolName;<z>
= System.getProperties();<z>
String>();<z>
() )<z>
desired = base + ".";<z>
.startsWith( desired ) )<z>
String)key;<z>
);<z>
properties.get( key ) );<z>
return filtered;<z>
toString()<z>
String prefix = "";<z>
)<z>
ALIGN_RIGHT:<z>
= "right ";<z>
ALIGN_CENTER:<z>
;<z>
:<z>
= "decimal ";<z>
:<z>
;<z>
prefix + "tab @" + pos<z>
" (w/leaders)");<z>
.DDMStructure updateStructure(<z>
structureKey,<z>
.lang.String> nameMap,<z>
.lang.String> descriptionMap,<z>
xsd,<z>
.liferay.portal.service.ServiceContext serviceContext)<z>
kernel.exception.PortalException,<z>
.exception.SystemException {<z>
.updateStructure(groupId,<z>
, nameMap, descriptionMap, xsd,<z>
serviceContext);<z>
String sourceFileName, File destinationFolder, String encoding) {<z>
"sourceFolder", sourceFolder);<z>
sourceFileName);<z>
isDirectory("destinationFolder", destinationFolder);<z>
("encoding", encoding);<z>
;<z>
_encoding = encoding;<z>
sourceFileName;<z>
;<z>
getPrompt(CommandShell shell, boolean continuation) {<z>
.getProperty(CommandShell.PROMPT_PROPERTY_NAME);<z>
result = new StringBuffer();<z>
= false;<z>
StringReader(prompt);<z>
;<z>
) {<z>
i;<z>
if (commandMode) {<z>
(c) {<z>
'P':<z>
.DIRECTORY_PROPERTY_NAME, "")));<z>
'G':<z>
);<z>
'D':<z>
final Date now = new Date();<z>
now, result, null);<z>
append(c);<z>
commandMode = false;<z>
} else {<z>
c) {<z>
case '$':<z>
;<z>
c);<z>
(IOException ex) {<z>
error("Impossible", ex);<z>
.toString();<z>
int b) {<z>
x[a];<z>
;<z>
] = t;<z>
String> paths)<z>
StorageException {<z>
paths == null) {<z>
return "";<z>
String documentType = document.getPrimaryType();<z>
getMixinTypes();<z>
>();<z>
path : paths) {<z>
,<z>
, path);<z>
if (pi == null) {<z>
PropertyType.STRING<z>
pi.propertyType != PropertyType.ARRAY_STRING) {<z>
nodes = new ArrayList<Node>(<z>
));<z>
names = path.split("/");<z>
names.length; i++) {<z>
String name = names[i];<z>
Node> newNodes;<z>
+ 1])) {<z>
;<z>
);<z>
for (Node node : nodes) {<z>
getChildren(node, name, true));<z>
else {<z>
- 1) {<z>
) {<z>
.STRING) {<z>
(name).getString();<z>
!= null) {<z>
strings.add(v);<z>
else {<z>
.getCollectionProperty(<z>
) {<z>
v != null) {<z>
add((String) v);<z>
= Collections.emptyList();<z>
{<z>
);<z>
for (Node node : nodes) {<z>
= getChildNode(node, name, true);<z>
if (node != null) {<z>
);<z>
newNodes;<z>
strings, " ");<z>
{<z>
;<z>
(int featureID)<z>
featureID)<z>
FormattertestlanguagePackage.FQN_REF__REF:<z>
null;<z>
featureID);<z>
character) {<z>
(character == '%') {<z>
return true;<z>
;<z>
void playCurrentSelection() {<z>
;<z>
) {<z>
= createAudioSource(line);<z>
null) {<z>
());<z>
Exception e) {<z>
.printStackTrace();<z>
void initBook(Book book) {<z>
{<z>
;<z>
.size() - 1);<z>
super.setValue(0);<z>
();<z>
Feature featureIdentifier)<z>
throws UnknownStatementException {<z>
featureIdentifier) == null)<z>
new UnknownStatementException(<z>
);<z>
(featureIdentifier);<z>
InternalSignatureOutputProcessor(SignaturePartDef signaturePartDef, XMLSecStartElement xmlSecStartElement)<z>
XMLSecurityException {<z>
;<z>
.getName());<z>
;<z>
;<z>
) {<z>
put(classReaderKey, this);<z>
;<z>
Symtab.instance(context);<z>
= Types.instance(context);<z>
.class);<z>
null)<z>
;<z>
;<z>
syms, definitive);<z>
instance(context);<z>
Options.instance(context);<z>
instance(context);<z>
get("-verbose") != null;<z>
get("-checkclassfile") != null;<z>
= Source.instance(context);<z>
;<z>
= source.allowVarargs();<z>
source.allowAnnotations();<z>
;<z>
options.get("dev") == null;<z>
("-Xprefer"));<z>
)<z>
"failcomplete"))<z>
: null;<z>
noSymbol);<z>
> _computeFileElement(final boolean fireEvents,<z>
Nullable StringBuilder sb) {<z>
(sb != null) {<z>
append(rootTagName).append("\n");<z>
()) {<z>
return null;<z>
if (sb != null) {<z>
.append("File is valid\n");<z>
(rootTagName, sb);<z>
final DomFileElementImpl oldValue = getLastValue();<z>
sb != null) {<z>
+ oldValue + "\n");<z>
;<z>
{<z>
{<z>
));<z>
== null) {<z>
null;<z>
;<z>
, null);<z>
!= null;<z>
), false);<z>
VirtualFile file = myXmlFile.getVirtualFile();<z>
null;<z>
file instanceof VirtualFileWithId) {<z>
getApplication().assertReadAccessAllowed();<z>
) {<z>
(), file, myXmlFile);<z>
if (stubTree != null) {<z>
stubTree.getRoot();<z>
rootTagName1, myDomManager, description, stub);<z>
(sb != null) {<z>
.append("success " + result + "\n");<z>
fireEvents) {<z>
new DomEvent(result, true));<z>
return result;<z>
initServer() {<z>
= new PongServer(new ExampleClientConnectorListener());<z>
mServer.start();<z>
.mEngine.registerUpdateHandler(this.mServer);<z>
(Object o) {<z>
return false;<z>
return true;<z>
Tagset) {<z>
Tagset)o;<z>
size() != size()) {<z>
;<z>
);<z>
false;<z>
{<z>
ret = 0;<z>
();<z>
+= _two.hashCode();<z>
;<z>
int categoryKey )<z>
);<z>
.getArchiveSizeByCategory( categoryKey ) );<z>
e )<z>
e.getMessage(), e );<z>
+ e.getMessage();<z>
Book create(String title)<z>
!= null;<z>
)) { throw new AuthorizationException(<z>
); }<z>
author = securityCtx.getUser();<z>
);<z>
(title);<z>
);<z>
Calendar.getInstance().getTime();<z>
book.setCreationDate(creationDate);<z>
;<z>
new Chapter();<z>
creationDate);<z>
;<z>
.setSlugTitle("Introduction");<z>
bookAbstract);<z>
.setOwner(author);<z>
;<z>
.setBook(book);<z>
book);<z>
BookActivity activity = new BookActivity();<z>
.setUser(author);<z>
;<z>
.setCreationDate(creationDate);<z>
(BookEventType.CREATE);<z>
;<z>
);<z>
;<z>
"");<z>
.setTimestamp(book.getCreationDate());<z>
), draft);<z>
;<z>
(HAServiceTarget fromSvc) {<z>
);<z>
0;<z>
(FenceMethodWithArg method : methods) {<z>
.size() +": " + method);<z>
, method.arg)) {<z>
"====== Fencing successful by method " + method + " ======");<z>
true;<z>
BadFencingConfigurationException e) {<z>
+ " misconfigured", e);<z>
{<z>
+ method + " failed with an unexpected error.", t);<z>
+ method + " was unsuccessful.");<z>
error("Unable to fence service by any configured method.");<z>
;<z>
public void update() {<z>
());<z>
mousePos)) {<z>
|| _scrollBarHorizontal.intersects(mousePos)) {<z>
;<z>
; i >= 0; i--) {<z>
i);<z>
) {<z>
) {<z>
_mouseDown) {<z>
()) {<z>
doubleClick();<z>
if (_selectedItemIndex >= 0) {<z>
get(_selectedItemIndex).setSelected(false);<z>
(true);<z>
_selectedItemIndex = i;<z>
false;<z>
true;<z>
!itemClicked) {<z>
_mouseUp = false;<z>
;<z>
{<z>
0;<z>
;<z>
false;<z>
;<z>
long clipboard, long target) {<z>
key = "org.eclipse.swt.internal.gtk.dispatchEvent";<z>
;<z>
OS.GDK_SELECTION_NOTIFY});<z>
.gtk_clipboard_wait_for_contents(clipboard, target);<z>
null);<z>
return selection_data;<z>
savedInstanceState) {<z>
(savedInstanceState);<z>
setContentView(R.layout.activity_feed_home);<z>
length];<z>
x < filterTypes.length; x++) {<z>
;<z>
(View.GONE);<z>
;<z>
-1) {<z>
getData();<z>
{<z>
);<z>
e) {}<z>
;<z>
);<z>
);<z>
(args);<z>
;<z>
.add("View");<z>
"Edit");<z>
);<z>
EditProfileFragment());<z>
DungBeetleContentProvider.CONTENT_URI + "/feeds/private");<z>
add("Notes");<z>
Fragment feedView = new FeedViewFragment();<z>
Bundle(args);<z>
.putParcelable(FeedViewFragment.ARG_FEED_URI, privateUri);<z>
setArguments(args);<z>
), mFragments);<z>
);<z>
adapter);<z>
);<z>
);<z>
= 0;<z>
String s : mLabels) {<z>
(this);<z>
;<z>
setTextSize(18f);<z>
(CommonLayouts.FULL_HEIGHT);<z>
i++);<z>
(mViewSelected);<z>
group.addView(button);<z>
mButtons.add(button);<z>
feedUri;<z>
.MY_ID) {<z>
"/feeds/me");<z>
} else {<z>
;<z>
(mHandler);<z>
feedUri, true, mProfileContentObserver);<z>
;<z>
new AlertDialog.Builder(this);<z>
setMessage("Click on the avatar to take a profile picture of yourself.")<z>
(false)<z>
DialogInterface.OnClickListener() {<z>
DialogInterface dialog, int id) {<z>
);<z>
create();<z>
alert.show();<z>
)<z>
Version bestVersion = null;<z>
= null;<z>
= false;<z>
; capIdx++)<z>
;<z>
();<z>
if (best == null)<z>
current;<z>
bestLocal = isCurrentLocal;<z>
get(Resource.VERSION);<z>
))<z>
Version) v;<z>
isCurrentLocal)<z>
.get(Resource.VERSION);<z>
&& (bestVersion == null)<z>
getCapabilities().length<z>
length))<z>
current;<z>
= isCurrentLocal;<z>
bestVersion = null;<z>
)<z>
0))<z>
best = current;<z>
= isCurrentLocal;<z>
bestVersion = (Version) v;<z>
compareTo(v) == 0))<z>
getResource().getSymbolicName() != null)<z>
.getSymbolicName().equals(<z>
.getSymbolicName()))<z>
compareTo(<z>
).getVersion()) < 0)<z>
current;<z>
= isCurrentLocal;<z>
;<z>
.getCapabilities().length<z>
).getCapabilities().length)<z>
;<z>
bestLocal = isCurrentLocal;<z>
Version) v;<z>
;<z>
getURI( )<z>
( DesignChoiceConstants.IMAGE_REF_TYPE_URL<z>
.equalsIgnoreCase( getSource( ) )<z>
.IMAGE_REF_TYPE_FILE<z>
getSource( ) ) )<z>
getStringProperty( IImageItemModel.URI_PROP );<z>
;<z>
row) {<z>
(week - 1);<z>
.getListRow().get(row);<z>
()) {<z>
;<z>
currentRow.getListEvent().size();<z>
= new Event[numbersEvent];<z>
i < numbersEvent; i++) {<z>
);<z>
;<z>
, Map<String, String> params) {<z>
info("Create a new connector with "+snName + " name");<z>
(snName){<z>
AUTH_TOKEN), "test");<z>
:<z>
get(ISocialConnector.AUTH_TOKEN), "test");<z>
case Foursquare:<z>
;<z>
default : return null;<z>
] plates, int g)<z>
s3d;<z>
.groupIdx = g;<z>
)))<z>
().getBuffer();<z>
.plates=plates;<z>
)<z>
screen == null)<z>
screen = this.screen;<z>
;<z>
;<z>
, final Criteria criteria) {<z>
;<z>
));<z>
) {<z>
.fine(e.getMessage());<z>
return 0;<z>
f5)<z>
;<z>
* 5F - 10F;<z>
{<z>
.dead) {<z>
));<z>
h(10);<z>
this.K();<z>
;<z>
) {<z>
.setDamage(100);<z>
{<z>
if (this.passenger != null) {<z>
.passenger.mount(this);<z>
die();<z>
id, 1, 0.0F);<z>
{<z>
= this;<z>
) {<z>
ItemStack itemstack = entityminecart.getItem(j);<z>
{<z>
random.nextFloat() * 0.8F + 0.1F;<z>
0.1F;<z>
nextFloat() * 0.8F + 0.1F;<z>
itemstack.count > 0) {<z>
;<z>
{<z>
;<z>
-= k;<z>
;<z>
0.05F;<z>
) * f3);<z>
.nextGaussian() * f3 + 0.2F);<z>
f3);<z>
.addEntity(entityitem);<z>
);<z>
this.type == 2) {<z>
0.0F);<z>
return true;<z>
} else {<z>
true;<z>
() {<z>
(<z>
ctx);<z>
(query);<z>
result = res;<z>
"1")<z>
)<z>
boolean equals(Object obj) {<z>
obj) return true;<z>
false;<z>
obj instanceof DeleteRequest == false) return false;<z>
(DeleteRequest)obj;<z>
;<z>
return false;<z>
;<z>
) {<z>
objects.size());<z>
objects) {<z>
;<z>
return results;<z>
(L2Clan clan, L2SiegeFlagInstance hq)<z>
clan.getHasCastle() > 0)<z>
getHasCastle()).setHQ(hq);<z>
activate(ComponentContext ctxt) {<z>
"Starting ESB...");<z>
);<z>
.getBundleContext();<z>
);<z>
TenantServiceBusInitializer();<z>
registerService(<z>
);<z>
;<z>
(<z>
ServiceBusConstants.SYNAPSE_CONFIG_LOCK, lock);<z>
.getConfigSystemRegistry();<z>
=<z>
));<z>
();<z>
null) {<z>
).setProperty("mediation.event.broker", eventBroker);<z>
= initESB(configurationManager.<z>
).getCurrentConfigurationName());<z>
synCfgRegistration = null;<z>
ServiceRegistration synEnvRegistration = null;<z>
getSynapseConfiguration() != null) {<z>
Properties();<z>
new SynapseConfigurationServiceImpl(contextInfo.getSynapseConfiguration(),<z>
SUPER_TENANT_ID, configCtxSvc.getServerConfigContext());<z>
= bndCtx.registerService(<z>
props);<z>
initPersistence(synCfgSvc,<z>
).getCurrentConfigurationName());<z>
bndCtx.registerService(<z>
.getName(),<z>
new MPMShutdownHandler(<z>
getAxisConfiguration()),<z>
;<z>
)) {<z>
.debug("SynapseConfigurationService Registered");<z>
if (configTrackingService != null) {<z>
) {<z>
.debug("Publishing the SynapseConfiguration to the " +<z>
"ConfigurationTrackingService");<z>
(contextInfo.<z>
());<z>
} else {<z>
+<z>
;<z>
contextInfo.getSynapseEnvironment() != null) {<z>
();<z>
(),<z>
));<z>
.registerService(<z>
);<z>
isDebugEnabled()) {<z>
"SynapseEnvironmentService Registered");<z>
{<z>
handleFatal("Couldn't register the SynapseEnvironmentService, " +<z>
"SynapseEnvironment not found");<z>
();<z>
SynapseRegistrationsServiceImpl(synCfgRegistration, synEnvRegistration,<z>
SUPER_TENANT_ID, configCtxSvc.getServerConfigContext());<z>
.getName(),<z>
props);<z>
setProperty(<z>
, configurationManager);<z>
) {<z>
"Couldn't initialize the ESB...", e);<z>
catch (Throwable t) {<z>
log.fatal("Failed to initialize ESB due to a fatal error", t);<z>
savedInstanceState) {<z>
);<z>
loginok);<z>
accessToken = null;<z>
extras = getIntent().getExtras();<z>
) {<z>
(AccessControlLoginActivity.AuthenticationTokenKey);<z>
R.id.viewTokenText);<z>
setText(accessToken.getRawToken());<z>
,<z>
agent) {<z>
this.friendName = fiendName;<z>
= friends;<z>
.knownCells = knownCells;<z>
.coordinate = coordinate;<z>
myName = myName;<z>
.agent = agent;<z>
List getSelection() {<z>
ArrayList();<z>
.getScriptProject();<z>
getSelection().toList();<z>
BuildpathModifier<z>
(project);<z>
list.size(); i++) {<z>
obj = list.get(i);<z>
IProjectFragment) {<z>
;<z>
BPListElement cpElement = BuildpathModifier<z>
existingEntries, element);<z>
;<z>
obj instanceof IScriptProject) {<z>
BuildpathModifier<z>
(), project,<z>
BPE_SOURCE);<z>
entry == null)<z>
BPListElement.createFromExisting(<z>
project);<z>
add(cpElement);<z>
} catch (ModelException e) {<z>
new ArrayList();<z>
return selectedList;<z>
()<z>
DeleteCommand(pim, console);<z>
contact;<z>
command;<z>
String aName, String type,<z>
)<z>
_printer.enterDTD();<z>
);<z>
( eName );<z>
;<z>
aName );<z>
( ' ' );<z>
printText( type );<z>
null ) {<z>
' ' );<z>
valueDefault );<z>
{<z>
_printer.printText( " \"" );<z>
( value );<z>
_printer.printText( '"' );<z>
);<z>
)<z>
_printer.breakLine();<z>
) {<z>
;<z>
IRenderingSettingsPrx getRenderingSettingsService(<z>
)<z>
DSOutOfServiceException<z>
c = null;<z>
getConnector(ctx);<z>
== null)<z>
new DSOutOfServiceException(<z>
;<z>
c.getRenderingSettingsService();<z>
ice_ping();<z>
if (prx == null)<z>
(<z>
);<z>
;<z>
e) {<z>
);<z>
getConnector(ctx);<z>
.getRenderingSettingsService();<z>
) {<z>
(<z>
);<z>
{<z>
;<z>
;<z>
1];<z>
[0] = g;<z>
;<z>
apiReasonEnum(final String enumSource)<z>
"");<z>
(results, enumSource);<z>
) {<z>
super();<z>
+ " : %s", data);<z>
(colors, "colors is null or contains a null");<z>
!= 1, "Must provide at least 2 colors or none at all.");<z>
.data = data;<z>
this.label = label;<z>
legend = legend;<z>
.copyOf(colors);<z>
DataFlavor flavor) throws UnsupportedFlavorException, IOException {<z>
if (flavor == DATA_FLAVOR) {<z>
;<z>
else {<z>
flavor);<z>
int hashCode() {<z>
final int prime = 31;<z>
hashCode();<z>
);<z>
result;<z>
private void runChecks() {<z>
LicenseValidator validator;<z>
)) != null) {<z>
());<z>
mService.checkLicense(<z>
), validator.getPackageName(),<z>
));<z>
.add(validator);<z>
catch (RemoteException e) {<z>
;<z>
handleServiceConnectionError(validator);<z>
text, String localPath)<z>
text;<z>
localPath;<z>
length(),<z>
);<z>
)<z>
println(e);<z>
, int current) {<z>
charAt(0);<z>
) {<z>
;<z>
false;<z>
) {<z>
pathBounds = tree.getPathBounds(path);<z>
pathBounds));<z>
" is not visible"));<z>
) {<z>
oldDate = null;<z>
if (currentDate!=null)<z>
.clone();<z>
date==null)<z>
.currentDate = null;<z>
getInstance();<z>
;<z>
(dateType==Consts.TYPE_DATE) {<z>
0);<z>
Calendar.MINUTE,0);<z>
(Calendar.SECOND,0);<z>
(Calendar.MILLISECOND,0);<z>
eventFiredByCalendar)<z>
setCalendar(currentDate);<z>
.date.setText(buildText());<z>
;i++)<z>
.dateChanged(oldDate,getDate());<z>
;<z>
getDefaultNotebook_args(<z>
String authenticationToken)<z>
this();<z>
.authenticationToken = authenticationToken;<z>
) {<z>
));<z>
);<z>
true) {<z>
) {<z>
EditorColors.TEARLINE_COLOR);<z>
? Color.black : result;<z>
;<z>
component);<z>
void rule__ThreadGroupType__Group_3__1() throws RecognitionException {<z>
keepStackSize();<z>
.FOLLOW_rule__ThreadGroupType__Group_3__1__Impl_in_rule__ThreadGroupType__Group_3__153654);<z>
);<z>
--;<z>
(RecognitionException re) {<z>
reportError(re);<z>
);<z>
);<z>
public static String extractFileNameWithSuffix( String filePathName )<z>
( filePathName == null )<z>
;<z>
= filePathName.lastIndexOf( '\\' );<z>
backSlashPos = filePathName.lastIndexOf( '/' );<z>
= slashPos > backSlashPos ? slashPos : backSlashPos;<z>
0 ? slashPos + 1 : 0 );<z>
(int anIndex) {<z>
int target = anIndex;<z>
index = anIndex + 1;<z>
elements.length)<z>
0;<z>
[index];<z>
!= null) {<z>
)) % elements.length;<z>
;<z>
)<z>
target || hashIndex <= index);<z>
hashIndex <= index);<z>
(match) {<z>
element;<z>
;<z>
index++;<z>
index >= elements.length)<z>
;<z>
elements[index];<z>
= null;<z>
void editorOpened(IEditorPart part) {<z>
part instanceof JavaEditor) {<z>
;<z>
model != null) {<z>
);<z>
public void clear(String layerId) {<z>
.contains(layerId)) {<z>
new IllegalStateException(layerId<z>
);<z>
;<z>
.hasNext();) {<z>
);<z>
contains(layerId))<z>
remove();<z>
);) {<z>
;<z>
))<z>
);<z>
;<z>
(String serverName)<z>
this.serverName = serverName;<z>
this;<z>
groupId) throws SystemException {<z>
(groupId)) {<z>
remove(blogsEntry);<z>
public String getKind() {<z>
lang.Object ref = kind_;<z>
ref instanceof String)) {<z>
.ByteString) ref).toStringUtf8();<z>
s;<z>
;<z>
{<z>
(String) ref;<z>
public boolean onCreateOptionsMenu(Menu menu) {<z>
();<z>
menu);<z>
;<z>
, final String iServerAddress, final int iServerPort) {<z>
iNode;<z>
iServerAddress;<z>
networkPort = iServerPort;<z>
Date();<z>
configuration = new OContextConfiguration();<z>
;<z>
STATUS.CONNECTING;<z>
;<z>
flags_band_name) {<z>
coding = new FlagCoding(flags_band_name);<z>
);<z>
.addFlag(INVALID_INPUT_FLAG_NAME, INVALID_INPUT_FLAG_MASK, INVALID_INPUT_FLAG_DESCRIPTION);<z>
ALGORITHM_FAILURE_FLAG_DESCRIPTION);<z>
(LAI_OUT_OF_RANGE_FLAG_NAME, LAI_OUT_OF_RANGE_FLAG_MASK, LAI_OUT_OF_RANGE_FLAG_DESCRIPTION);<z>
.addFlag(FCOVER_OUT_OF_RANGE_FLAG_NAME, FCOVER_OUT_OF_RANGE_FLAG_MASK,<z>
FCOVER_OUT_OF_RANGE_FLAG_DESCRIPTION);<z>
.addFlag(LAIXCAB_OUT_OF_RANGE_FLAG_NAME, LAIXCAB_OUT_OF_RANGE_FLAG_MASK,<z>
LAIXCAB_OUT_OF_RANGE_FLAG_DESCRIPTION);<z>
;<z>
;<z>
createLabel(String text, Composite parent) {<z>
(parent, SWT.NONE);<z>
.setText(text);<z>
FILL_HORIZONTAL);<z>
2;<z>
newLabel.setLayoutData(gd);<z>
.setFont(parent.getFont());<z>
;<z>
{<z>
;<z>
to == null) {<z>
tr("no participating way with role ''to''"));<z>
;<z>
)<z>
, ClassNotFoundException {<z>
;<z>
SnmpMibAgent>() ;<z>
XmlSerializer serializer) throws IOException {<z>
.startTag(null, "activity");<z>
);<z>
));<z>
);<z>
getBody());<z>
));<z>
"activity");<z>
] bytes) {<z>
Blob() {<z>
.length; }<z>
String toString() {<z>
"]";<z>
{<z>
_escapedModelProxy == null) {<z>
JIRAIssue)ProxyUtil.newProxyInstance(_classLoader,<z>
);<z>
_escapedModelProxy;<z>
() {<z>
this) + " " +<z>
"numMsgs:" + numMsgs;<z>
{<z>
fSubjectControlDisposeListener == null) {<z>
new DisposeListener() {<z>
e) {<z>
();<z>
return fSubjectControlDisposeListener;<z>
) {<z>
;<z>
) {<z>
0];<z>
;<z>
()<z>
request = createRequest("getbalance");<z>
(request);<z>
;<z>
e) {<z>
);<z>
setAppInfo(String newAppInfo) {<z>
;<z>
;<z>
if (eNotificationRequired())<z>
appInfo));<z>
(SerializableString sstr)<z>
, JsonGenerationException<z>
"write String value");<z>
();<z>
len = str.length();<z>
(len == 0) {<z>
(TOKEN_LITERAL_EMPTY_STRING);<z>
<= MAX_SHARED_STRING_LENGTH_BYTES && _seenStringValueCount >= 0) {<z>
_findSeenStringValue(str);<z>
0) {<z>
_writeSharedStringValueReference(ix);<z>
] raw = sstr.asUnquotedUTF8();<z>
;<z>
{<z>
+ 1) >= _outputEnd) {<z>
();<z>
typeToken = (byteLen == len)<z>
) + byteLen)<z>
) + byteLen)<z>
++] = (byte) typeToken;<z>
;<z>
_outputTail += byteLen;<z>
>= 0) {<z>
_addSeenStringValue(sstr.getValue());<z>
} else {<z>
: TOKEN_BYTE_LONG_STRING_UNICODE;<z>
(typeToken);<z>
, raw.length);<z>
);<z>
public byte[] getBinaryValue(Base64Variant b64variant)<z>
throws IOException, JsonParseException<z>
= currentNode();<z>
(n != null) {<z>
;<z>
data != null) {<z>
;<z>
.isPojo()) {<z>
getPojo();<z>
{<z>
ob;<z>
return null;<z>
{<z>
range = table.getVisibleRange();<z>
) {<z>
{<z>
null) {<z>
getStart(), values);<z>
(isInserted){<z>
;<z>
table.setPageStart(start);<z>
(false);<z>
widget != null) {<z>
view.asWidget());<z>
(q, range, callback);<z>
{<z>
(getSelectionRange() == null)<z>
;<z>
.handleFocusGained();<z>
()<z>
PREFERENCE_LDIF_LINE_WIDTH ) );<z>
( BrowserCoreConstants.PREFERENCE_LDIF_LINE_SEPARATOR ) );<z>
setSelection( coreStore<z>
PREFERENCE_LDIF_SPACE_AFTER_COLON ) );<z>
coreStore<z>
.getDefaultBoolean( BrowserCoreConstants.PREFERENCE_LDIF_INCLUDE_VERSION_LINE ) );<z>
.setRawValue( coreStore<z>
.PREFERENCE_FORMAT_CSV_ATTRIBUTEDELIMITER ) );<z>
( coreStore<z>
getDefaultString( BrowserCoreConstants.PREFERENCE_FORMAT_CSV_VALUEDELIMITER ) );<z>
setRawValue( coreStore<z>
( BrowserCoreConstants.PREFERENCE_FORMAT_CSV_QUOTECHARACTER ) );<z>
setRawValue( coreStore<z>
.PREFERENCE_FORMAT_CSV_LINESEPARATOR ) );<z>
setRawValue( coreStore<z>
getDefaultString( BrowserCoreConstants.PREFERENCE_FORMAT_CSV_BINARYENCODING ) );<z>
PREFERENCE_FORMAT_CSV_ENCODING ) );<z>
setRawValue( getPreferenceStore().getDefaultString(<z>
;<z>
getPreferenceStore().getDefaultString(<z>
) );<z>
tableQuoteWidget.setRawValue( getPreferenceStore().getDefaultString(<z>
);<z>
.getDefaultString(<z>
.PREFERENCE_FORMAT_TABLE_LINESEPARATOR ) );<z>
getPreferenceStore().getDefaultString(<z>
.PREFERENCE_FORMAT_TABLE_BINARYENCODING ) );<z>
xlsValueDelimiterWidget.setRawValue( coreStore<z>
( BrowserCoreConstants.PREFERENCE_FORMAT_XLS_VALUEDELIMITER ) );<z>
setRawValue( coreStore<z>
);<z>
;<z>
super.performDefaults();<z>
void stop() throws LifecycleException<z>
get();<z>
OpenShiftRepository repo = repository.get();<z>
("Shutting down Arquillian OpenShift Express container at " + conf.getRootContextUrl());<z>
{<z>
unmarkArquillianLifeCycle();<z>
(conf.isDiscardHistory()) {<z>
state = repo.getLastSavedState();<z>
(state);<z>
state + ">.");<z>
public void setAge(int newAge) {<z>
oldAge = age;<z>
;<z>
(eNotificationRequired())<z>
PERSON__AGE, oldAge, age));<z>
)<z>
;<z>
.class);<z>
minValue, double maxValue) {<z>
;<z>
;<z>
;<z>
void decRef()<z>
();<z>
r == 0 && _pool != null)<z>
);<z>
_pool.recycleMessage(this);<z>
)<z>
IllegalStateException();<z>
public String getLabel(String language) {<z>
get(language);<z>
s != null) {<z>
.getName();<z>
else {<z>
;<z>
ZooKeeperServerBean(ZooKeeperServer zks) {<z>
Date();<z>
zks = zks;<z>
getClientPort();<z>
, final String configPropRemoveDesc) {<z>
;<z>
final ModelNode node = new ModelNode();<z>
);<z>
configPropRemoveDesc));<z>
);<z>
.setEmptyObject();<z>
;<z>
AbstractSessionCache session,<z>
) {<z>
mutable(key);<z>
boolean additional = false;<z>
equals(this.key)) {<z>
, this.key)) {<z>
additional = true;<z>
{<z>
session).hasChild(key)) {<z>
NodeNotFoundException(key);<z>
node = session.mutable(key);<z>
!= null;<z>
additional) {<z>
;<z>
.isEmpty()) {<z>
newParent = null;<z>
} else {<z>
).next();<z>
.newParent = newParentKey;<z>
);<z>
= this.appended.get();<z>
= null;<z>
null) {<z>
);<z>
) {<z>
;<z>
node;<z>
createStorePtConsentRequestType(PatientVO patientVO) {<z>
= new StorePtConsentRequestType();<z>
patientPreference = new PatientPreferencesType();<z>
);<z>
"createStorePtConsentRequestType - patientVO.getAssigningAuthorityID(): "<z>
.getAssigningAuthorityID());<z>
getPatientID());<z>
setAssigningAuthority(patientVO.getAssigningAuthorityID());<z>
(patientVO.getPatientPreferences() != null) {<z>
getPatientPreferences();<z>
patientPreferencesVO.getOptIn());<z>
if (patientPreferencesVO.getFineGrainedPolicyCriteria() != null<z>
() > 0) {<z>
);<z>
fineGrainedPolicyCriterionVO : patientPreferencesVO<z>
.getFineGrainedPolicyCriteria()) {<z>
;<z>
());<z>
) {<z>
true);<z>
{<z>
setPermit(false);<z>
if (fineGrainedPolicyCriterionVO.getDocumentTypeCode() != null<z>
.isEmpty()) {<z>
CeType documentTypeCode = new CeType();<z>
.setCode(fineGrainedPolicyCriterionVO.getDocumentTypeCode());<z>
fineGrainedPolicyCriterion.setDocumentTypeCode(documentTypeCode);<z>
() != null<z>
{<z>
CeType userRole = new CeType();<z>
());<z>
);<z>
getPurposeOfUse() != null<z>
().isEmpty()) {<z>
new CeType();<z>
());<z>
);<z>
(fineGrainedPolicyCriterionVO.getConfidentialityCode() != null<z>
().isEmpty()) {<z>
;<z>
.getConfidentialityCode());<z>
confidentialityCode);<z>
;<z>
(fineGrainedPolicyCriteria);<z>
);<z>
consentRequest;<z>
getBinaryStream( int columnIndex )<z>
.getBinaryStream( columnIndex );<z>
Point start, Point aim, boolean fillShooted) {<z>
boolean done = false;<z>
();<z>
start.getY();<z>
.getX();<z>
getY();<z>
, cy, sx, sy);<z>
));<z>
c;<z>
- cy) / c;<z>
, (int)cy);<z>
prevTile;<z>
while (! done) {<z>
;<z>
+= TRACE_RAY_COEF * sinf;<z>
cx < getMapWidth() * View.TILE_WIDTH &&<z>
.TILE_HEIGHT) {<z>
;<z>
)cy);<z>
players.values()) {<z>
p != currentPlayer<z>
View.TILE_WIDTH/2<z>
2) {<z>
done = true;<z>
fillShooted) {<z>
hitedPlayer = p;<z>
(prevTile)) {<z>
()) == '#') {<z>
true;<z>
{<z>
true;<z>
int)cy);<z>
(int id, Bundle args) {<z>
(id) {<z>
LOADER_FEATURED_CASTS:<z>
, Cast.PROJECTION, null, null,<z>
.SORT_ORDER_DEFAULT);<z>
;<z>
{<z>
();<z>
final Iterator iterator = collection.iterator();<z>
Iterator() {<z>
hasNext() {<z>
;<z>
() {<z>
return iterator.next();<z>
{<z>
();<z>
;<z>
R> callback) {<z>
;<z>
= routingStrategy.getRoutingKey(command);<z>
callback);<z>
(Exception e) {<z>
e.getMessage(), e));<z>
int style)<z>
style);<z>
action;<z>
text;<z>
= tooltip;<z>
image = image;<z>
style;<z>
) parent).addItem(this);<z>
{<z>
IExtensionRegistry registry = Platform.getExtensionRegistry();<z>
.getExtensionPoint("org.eclipse.ui.editors");<z>
point == null)<z>
return null;<z>
getExtensions();<z>
extensions.length; i++){<z>
[i].getConfigurationElements();<z>
;j++){<z>
[j].getAttribute("id");<z>
==0)<z>
[j].getAttribute("class"));<z>
null;<z>
final SelectionListener listener) {<z>
LinkControlData(key, values);<z>
FILL, true, false);<z>
gd.horizontalSpan= 3;<z>
gd.horizontalIndent= indent;<z>
);<z>
new GridLayout();<z>
;<z>
= 0;<z>
.horizontalSpacing= 0;<z>
.numColumns= 2;<z>
);<z>
.setLayoutData(gd);<z>
);<z>
setFont(JFaceResources.getDialogFont());<z>
, false, false);<z>
.isLinux() ? -2 : 3;<z>
x + offset;<z>
.setLayoutData(gd);<z>
setData(data);<z>
());<z>
() {<z>
getName(AccessibleEvent e) {<z>
"</?[aA][^>]*>", ""));<z>
});<z>
true, false);<z>
= widthHint;<z>
;<z>
.setText(label);<z>
link.setLayoutData(gd);<z>
);<z>
setLink(link);<z>
linkSelected= { false };<z>
.addSelectionListener(new SelectionAdapter() {<z>
) {<z>
true;<z>
null) {<z>
widgetSelected(e);<z>
});<z>
addMouseListener(new MouseAdapter() {<z>
MouseEvent e) {<z>
;<z>
MouseEvent e) {<z>
0]) {<z>
.getSelection());<z>
setFocus();<z>
]= false;<z>
checkBox);<z>
);<z>
link.addTraverseListener(new TraverseListener() {<z>
{<z>
{<z>
= SWT.TRAVERSE_NONE;<z>
);<z>
setFocus();<z>
linkSelected[0]= false;<z>
);<z>
;<z>
;<z>
(checkBox);<z>
);<z>
fCheckBoxes.add(checkBox);<z>
;<z>
return checkBox;<z>
HashResult[] hashes) {<z>
length != hashes.length) {<z>
hashes.length+" hashes");<z>
;<z>
i++) {<z>
!= hashes[i].type) {<z>
type.name())) {<z>
());<z>
false;<z>
{<z>
name()+" not equal");<z>
false;<z>
;<z>
icrc1(int crc, int onech)<z>
<< 8;<z>
i++)<z>
!= 0)<z>
) ^ 4129;<z>
ans = (ans << 1) & 0xFFFF;<z>
;<z>
, PrimitiveId target) throws IllegalArgumentException {<z>
CheckParameterUtil.ensureParameterNotNull(target, "target");<z>
? "" : role;<z>
);<z>
deliverToSubscription(final Subscription sub, final QueueEntry entry)<z>
))<z>
.isSuspended()<z>
)<z>
&& mightAssign(sub, entry)<z>
sub.wouldSuspend(entry))<z>
sub)))<z>
restoreCredit(entry);<z>
);<z>
();<z>
) {<z>
(selector.equals(ATTRIBUTE_SIZE)<z>
equals(ATTRIBUTE_ITEMS)) {<z>
"Read-Only attribute: "<z>
selector);<z>
} else {<z>
;<z>
() throws RecognitionException {<z>
EObject current = null;<z>
;<z>
(grammarAccess.getSimplePropertyRule());<z>
(FOLLOW_ruleSimpleProperty_in_entryRuleSimpleProperty833);<z>
ruleSimpleProperty();<z>
._fsp--;<z>
iv_ruleSimpleProperty;<z>
);<z>
RecognitionException re) {<z>
,re);<z>
;<z>
current;<z>
Node node) {<z>
XFrame frame = new XFrame(node);<z>
);<z>
boolean inCenter) {<z>
setInCenter(inCenter);<z>
width;<z>
;<z>
"COMMUNITY");<z>
{<z>
DoubleParameter("WIDTH", width),<z>
, height) });<z>
clearTutorialSetting(SharedPreferences settings) {<z>
edit();<z>
false);<z>
);<z>
getSchema(String typeName) throws IOException {<z>
(typeName);<z>
();<z>
, String virtualMachineUUID) throws RimpException, TException<z>
;<z>
);<z>
public void clearEvents(long beforeTime)<z>
query = MessageFormat.format(<z>
[] {<z>
Long.toString(beforeTime)<z>
(query);<z>
void normalizeTimes(JourneyHeaderElement journey) {<z>
journey.getTimePoints();<z>
()) {<z>
-1;<z>
int dayOffset = 0;<z>
{<z>
.get(i);<z>
int arrivalTime = timepoint.getArrivalTime();<z>
getDepartureTime();<z>
+= dayOffset * MINUTES_IN_DAY;<z>
{<z>
+= MINUTES_IN_DAY;<z>
++;<z>
;<z>
< arrivalTime) {<z>
MINUTES_IN_DAY;<z>
dayOffset++;<z>
.setArrivalTime(arrivalTime);<z>
(departureTime);<z>
;<z>
{<z>
);<z>
"DST";<z>
new TargetControlledCreaturePermanent())));<z>
1));<z>
)));<z>
(ability);<z>
xmlbeans.XmlString xgetAssetIdentifier()<z>
))<z>
check_orphaned();<z>
;<z>
ASSETIDENTIFIER$26, 0);<z>
target;<z>
final String iname,<z>
)<z>
) {<z>
) {<z>
iname;<z>
(URL)urls.get(fn);<z>
(url == null) {<z>
(fn);<z>
file);<z>
(MalformedURLException e) {<z>
{<z>
);<z>
) {<z>
);<z>
'/', '.');<z>
Package pkg;<z>
get(fn);<z>
) {<z>
, man, url, null);<z>
{<z>
, null, null,<z>
, null);<z>
name, pkg);<z>
;<z>
});<z>
EditorContext editorContext) {<z>
== null) ?<z>
()<z>
String result;<z>
;<z>
null)<z>
this.getName();<z>
);<z>
return result;<z>
boolean isGenerated(Field field) {<z>
.class);<z>
null) {<z>
= field.getType();<z>
) == Generator.AUTO_INCREMENT<z>
.isAssignableFrom(type))) {<z>
;<z>
value() == Generator.UUID<z>
class.isAssignableFrom(type)<z>
))) {<z>
return true;<z>
return false;<z>
SourceCacheObject sourceCacheObject) {<z>
SourceCacheObject sample = new SourceCacheObject();<z>
.getType());<z>
;<z>
!= null) {<z>
;<z>
else {<z>
();<z>
.URL, sourceCacheObject.getUrl());<z>
.getImageUrl());<z>
.CONTENT, sourceCacheObject.getContent());<z>
));<z>
sourceCacheObject.getLastModified());<z>
));<z>
values);<z>
XMLStreamWriter wr) throws XMLStreamException {<z>
;<z>
tblClass);<z>
(instList == null) {<z>
);<z>
());<z>
writeNamespace(null, XML_URI);<z>
("class", tblClass.getName());<z>
().size()));<z>
{<z>
"r");<z>
.writeToXML(wr);<z>
writeEndElement();<z>
) {<z>
(ExperimentDesignUI.Row row) {<z>
return row.getAssayAcc();<z>
{<z>
notNull(socket, "socket");<z>
ArgumentChecker.notNull(inputStream, "inputStream");<z>
_socket = socket;<z>
_reader = _context.createMessageReader(inputStream);<z>
pageName) {<z>
(<z>
));<z>
"Create new Language properties files.");<z>
(ArtifactRepository repo) throws CoreException {<z>
;<z>
(request);<z>
.getMirrors());<z>
() {<z>
.getCoreImplClassLoader();<z>
coreImplClassLoader);<z>
(this);<z>
, final String tableName,<z>
throws StorageException {<z>
TABLES_SERVICE_TABLES_NAME.equals(tableName);<z>
this.getEntity().writeEntity(opContext)<z>
.getValueAsString() : null;<z>
INSERT) {<z>
);<z>
getRowKey());<z>
, TableOperation, TableResult>(<z>
) {<z>
final CloudTableClient client, final TableOperation operation,<z>
OperationContext opContext) throws Exception {<z>
(client.getTransformedEndPoint(opContext), tableName,<z>
(isTableEntry, tableIdentity, false),<z>
) : null,<z>
;<z>
;<z>
), isTableEntry, request.getOutputStream(),<z>
);<z>
(request, opContext));<z>
.INSERT) {<z>
HttpURLConnection.HTTP_CONFLICT) {<z>
), operation,<z>
;<z>
{<z>
this.getResult(), operation,<z>
request.getErrorStream());<z>
);<z>
= null;<z>
;<z>
opContext);<z>
();<z>
res;<z>
== HttpURLConnection.HTTP_NO_CONTENT) {<z>
getResult().getStatusCode(),<z>
;<z>
,<z>
.getErrorStream());<z>
, options.getRetryPolicyFactory(), opContext);<z>
,<z>
NotificationChain msgs ) {<z>
LayerFactory oldLayerFactory = layerFactory;<z>
= newLayerFactory;<z>
)) {<z>
new ENotificationImpl(this, Notification.SET,<z>
.MAP__LAYER_FACTORY, oldLayerFactory, newLayerFactory);<z>
null)<z>
msgs = notification;<z>
add(notification);<z>
return msgs;<z>
thrift.TException<z>
mutateRows_args args = new mutateRows_args();<z>
.setTableName(tableName);<z>
);<z>
args.setAttributes(attributes);<z>
args);<z>
resetTask()<z>
;<z>
().func_48672_f();<z>
field_48283_i = 100;<z>
= false;<z>
).func_48664_a(field_48279_m);<z>
, String tableName)<z>
(), tableName));<z>
setFatal();<z>
public EntriesEnumeration(Enumeration enumeration, String rootPath)<z>
enumeration;<z>
rootPath;<z>
;<z>
(String[] argv){<z>
(true){<z>
println("BtNondft server starts");<z>
);<z>
PORT_BT_RANDOM);<z>
)<z>
labelText == null )<z>
generateBy instanceof LabelItemDesign )<z>
);<z>
;<z>
()<z>
new List4Impl();<z>
return list4;<z>
.lang.Exception{<z>
PrefixEntry object =<z>
();<z>
;<z>
.String nillableValue = null;<z>
.lang.String prefix ="";<z>
lang.String namespaceuri ="";<z>
) && !reader.isEndElement())<z>
reader.next();<z>
)!=null){<z>
fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",<z>
;<z>
!=null){<z>
= null;<z>
indexOf(":") > -1){<z>
":"));<z>
==null?"":nsPrefix;<z>
(":")+1);<z>
!"PrefixEntry".equals(type)){<z>
;<z>
(PrefixEntry)ExtensionMapper.getTypeObject(<z>
reader);<z>
util.Vector();<z>
next();<z>
reader.next();<z>
reader.getName())){<z>
.String content = reader.getElementText();<z>
(<z>
;<z>
next();<z>
());<z>
.isEndElement())<z>
reader.next();<z>
isStartElement())<z>
);<z>
.xml.stream.XMLStreamException e) {<z>
Exception(e);<z>
;<z>
containsString(String string, List objects,<z>
lowerCase) {<z>
if (lowerCase) {<z>
string = string.toLowerCase();<z>
objects) {<z>
lowerCase) {<z>
{<z>
;<z>
else {<z>
) {<z>
return true;<z>
false;<z>
String url) {<z>
int start = 0;<z>
= 0;<z>
("://");<z>
0) {<z>
(0, end);<z>
start = end + 3;<z>
indexOf('/', start);<z>
if (end > 0) {<z>
url.substring(start, end);<z>
end);<z>
.indexOf(':');<z>
> 0) {<z>
hostAndPort.substring(0, index);<z>
.substring(index + 1));<z>
} else {<z>
= hostAndPort;<z>
} else {<z>
url;<z>
recoveryNodes){<z>
AbstractStackNode<P>, AbstractNode>();<z>
i) {<z>
> recoveryNode = recoveryNodes.getFirst(i);<z>
.getSecond(i);<z>
j >= 0; --j){<z>
prod = prods.get(j);<z>
++, prod, recoveryNode);<z>
int startLocation = recoveryNode.getStartLocation();<z>
)];<z>
, startLocation, prod);<z>
);<z>
.initEdges();<z>
);<z>
edges.add(continuer);<z>
, startLocation);<z>
);<z>
recoverLiteral, recoverLiteral.getResult());<z>
return recoveredNodes;<z>
{<z>
;<z>
(this, result);<z>
;<z>
caseAStringUnit(<z>
AStringUnit node) {<z>
(this.token == null) {<z>
this.token = node.getString();<z>
.getText();<z>
doesUserHavePemissionsOnStoragePool() {<z>
pool =<z>
getStoragePoolDao().get(getStoragePoolId(),<z>
,<z>
).isFiltered());<z>
null;<z>
monitor, IAdaptable info) throws ExecutionException {<z>
);<z>
);<z>
add(newElement);<z>
().init_Actor_3011(newElement);<z>
);<z>
getRequest()).setNewElement(newElement);<z>
newElement);<z>
activateModule(Module m) {<z>
{<z>
processFocusOn();<z>
= m;<z>
String getCharset() {<z>
null) {<z>
;<z>
{<z>
charset;<z>
(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {<z>
.createDataStoreNode();<z>
{<z>
.newCancelledCommandResult();<z>
newElement);<z>
, monitor, info);<z>
;<z>
CommandResult.newOKCommandResult(newElement);<z>
Closure closure) {<z>
new ArrayList();<z>
.asIterator(self);<z>
closure, answer, iter);<z>
KeyEvent e)<z>
;<z>
))<z>
.KEY_TYPED:<z>
);<z>
.KEY_PRESSED:<z>
processKeyPressed(e);<z>
] lists)<z>
alist;<z>
NumLists;<z>
lists.length; l++)<z>
];<z>
(alist,"");<z>
();<z>
JspException<z>
value);<z>
)<z>
);<z>
;<z>
return EVAL_PAGE;<z>
getAttributeCertificates(<z>
type,<z>
Provider provider)<z>
throws NoSuchStoreException, CMSException<z>
null)<z>
populateCertCrlSets();<z>
provider, _certSet);<z>
return _attributeStore;<z>
SettingsManager(BugReportDialog dialog) {<z>
= dialog;<z>
= new SortedProperties();<z>
("session.properties");<z>
(String raw) {<z>
return raw;<z>
type) return Integer.parseInt(raw);<z>
raw);<z>
) return Short.parseShort(raw);<z>
Byte.parseByte(raw);<z>
type) return Float.parseFloat(raw);<z>
(raw);<z>
parseBoolean(raw);<z>
.charAt(0);<z>
? extends Enum>)type, raw);<z>
("Huh?");<z>
oldChild, Node newChild)<z>
.hasNext();)<z>
== oldChild)<z>
!= null)<z>
set(newChild);<z>
.parent(null);<z>
.remove();<z>
parent(null);<z>
CommandMap() {<z>
super();<z>
();<z>
File zipfile, File directory) throws IOException {<z>
= new ZipFile(zipfile);<z>
> entries = zfile.entries();<z>
entries.hasMoreElements()) {<z>
entry = entries.nextElement();<z>
);<z>
(entry.isDirectory()) {<z>
.mkdirs();<z>
else {<z>
().mkdirs();<z>
;<z>
(in, file);<z>
} finally {<z>
close();<z>
modelBuilder,<z>
Status status, Cache cache)<z>
);<z>
> sorter = new ReplicationModelBuilder.SimpleSorterByName();<z>
sort = req.getParameter("sort");<z>
(sort == null) {<z>
)) {<z>
sorter = new ReplicationModelBuilder.SimpleSorterByStatus();<z>
(sort.equalsIgnoreCase("lastRun") ||<z>
equalsIgnoreCase("lastRunTime")) {<z>
new ReplicationModelBuilder.SimpleSorterByLastRun();<z>
buildSimpleList(definitions, sorter);<z>
) {<z>
String.format("DefaultBucketProperties [allowSiblings=%s, lastWriteWins=%s, nVal=%s, backend=%s, vclockProps=%s, precommitHooks=%s, postcommitHooks=%s, capProps=%s, chashKeyFunction=%s, linkWalkFunction=%s, search=%s]",<z>
vclockProps, precommitHooks, postcommitHooks,<z>
, chashKeyFunction, linkWalkFunction, search);<z>
()<z>
{<z>
this );<z>
{<z>
;<z>
) throws Exception<z>
getLastOutputCleared(this);<z>
(this, exec, "image");<z>
(exec.ph, a));<z>
get(int value) {<z>
(value) {<z>
;<z>
return CONTINUOUS;<z>
return ONSERVERINIT;<z>
return null;<z>
args, boolean isWrite)<z>
LastfmException {<z>
request;<z>
isWrite) {<z>
);<z>
args.entrySet()) {<z>
;<z>
HttpPost postrequest = new HttpPost(API_ROOT);<z>
"UTF-8"));<z>
) {<z>
;<z>
else {<z>
API_ROOT).buildUpon();<z>
()) {<z>
param.getValue());<z>
.build().toString());<z>
response;<z>
request);<z>
IOException io_exc) {<z>
new LastfmException("Cannot communicate with Last.fm", io_exc);<z>
SAXParserFactory.newInstance();<z>
class LastfmResponseHandler extends DefaultHandler {<z>
public boolean isOk;<z>
errorCode;<z>
public String errorDescr;<z>
,String>>();<z>
mChars;<z>
<String,String> mCurrentDataSet = null;<z>
start, int length)<z>
SAXException {<z>
start, length);<z>
if (mChars != null) {<z>
(ch, start, length));<z>
qName)<z>
throws SAXException {<z>
, qName);<z>
{<z>
);<z>
= null;<z>
("error")) {<z>
);<z>
else if (localName.equals("name") ||<z>
("key") ||<z>
{<z>
) {<z>
.toString());<z>
public void startElement(String uri, String localName,<z>
, Attributes attributes) throws SAXException {<z>
localName, qName, attributes);<z>
("lfm")) {<z>
(uri, "status");<z>
(status.equals("ok")) {<z>
.isOk = true;<z>
} else {<z>
.isOk = false;<z>
) {<z>
;<z>
)) {<z>
getValue(uri, "code"));<z>
) {<z>
;<z>
;<z>
if (localName.equals("name") ||<z>
||<z>
localName.equals("subscriber")) {<z>
();<z>
LastfmResponseHandler();<z>
.newSAXParser();<z>
"UTF-8"));<z>
;<z>
e) {<z>
(e);<z>
handler.isOk) {<z>
dataSets;<z>
else {<z>
(handler.errorCode, handler.errorDescr);<z>
i,INakedActivityNode node){<z>
ARTIFICIAL_FORK_ID;<z>
, forkId);<z>
(), forkId);<z>
i++;<z>
getOpaeumId() + ARTIFICIAL_FORK_ID);<z>
i;<z>
) {<z>
(counters != null) {<z>
amount);<z>
.COUNTER_GROUP.equals(group) && (<z>
) ||<z>
COUNTER_REDUCE_PROCESSED_GROUPS.equals(counter))) {<z>
<amount;i++) {<z>
next();<z>
;<z>
( ISchedulingRule rule ) {<z>
rule instanceof ChildFetcherScheduleRule )<z>
return true;<z>
false;<z>
> accounts, int index) {<z>
size());<z>
.iterator();<z>
; index > 0; --index) {<z>
it.next();<z>
it.next();<z>
public void endDocument() throws SAXException<z>
(allowDocuments)<z>
;<z>
IChannelMessageSerializer localSerializer) {<z>
);<z>
();<z>
messenger);<z>
) {<z>
table.setValueAt(<z>
).getName(),<z>
(),<z>
));<z>
throws RecognitionException {<z>
_type = T__61;<z>
DEFAULT_TOKEN_CHANNEL;<z>
"main");<z>
= _type;<z>
state.channel = _channel;<z>
IMonitor mon) throws Exception {<z>
HDF5Loader(fileName);<z>
loader.setAsyncLoad(true);<z>
loadTree(mon);<z>
if (ltree != null) {<z>
);<z>
ltree);<z>
{<z>
() {<z>
while (loader.isLoading()) {<z>
;<z>
;<z>
InterruptedException e) {<z>
refreshTree();<z>
;<z>
ltree.getGroup());<z>
()) {<z>
.get(n));<z>
(HDF5Loader.createMetaData(ltree));<z>
}).start();<z>
event){<z>
;<z>
());<z>
ClickHandler() {<z>
(ClickEvent event) {<z>
);<z>
;<z>
(roleBasedItemProxy);<z>
;<z>
(new ClickHandler() {<z>
) {<z>
.hide();<z>
;<z>
);<z>
{<z>
.data = data;<z>
.model = new ObjectEditorModel(this);<z>
String tagName,<z>
StoredProject sp) {<z>
).getDBService();<z>
paramTagName = "tagname";<z>
;<z>
String query = "select pv "<z>
+ paramTagName<z>
+ " and pv.project =:" + paramProject;<z>
>();<z>
tagName);<z>
paramProject, sp);<z>
.doHQL(query, parameters, 1);<z>
0) {<z>
null;<z>
} else {<z>
(ProjectVersion) projectVersions.get(0);<z>
Date date) {<z>
compile("\\$\\{(.+?)\\}").matcher(startingName);<z>
String,String>();<z>
matcher.find()) {<z>
= matcher.group(1);<z>
"}";<z>
date));<z>
;<z>
: replacements.entrySet()) {<z>
entry.getValue());<z>
startsWith(".")) {<z>
substring(1);<z>
))) {<z>
;<z>
else {<z>
+"."+suffix;<z>
)<z>
JetspeedRunData) data).getJs_peid());<z>
readGradeForm(data, state, "return");<z>
(STATE_MESSAGE) == null)<z>
grade_submission_option(data, "return");<z>
, final String modelId) {<z>
<List<LogicalModelSummary>>() {<z>
{<z>
out.println(message);<z>
) {<z>
;<z>
-1);<z>
);<z>
(domainId != null && modelId != null) {<z>
, modelId);<z>
datasourceSelectionDialogModel.getSelectedIndex());<z>
else {<z>
;<z>
;<z>
throws TransportServiceException<z>
(sessionHandler == null)<z>
();<z>
logger.isDebugEnabled())<z>
"No session.handler set in service description, defaulting to: "<z>
sessionHandler);<z>
ClassUtils.NO_ARGS, classLoader);<z>
Throwable e)<z>
), e);<z>
E> list2) {<z>
E>();<z>
= new HashBag<E>(list2);<z>
list1) {<z>
)) {<z>
.add(e);<z>
;<z>
private String getMappingErrorMessage() {<z>
.format(<z>
.SelfEncapsulateField_cannot_analyze_selected_field,<z>
);<z>
event) throws Exception {<z>
;<z>
findFirstComponentOfType(UIActionTypeForm.class) ;<z>
, null) ;<z>
.refresh() ;<z>
600) ;<z>
.addUIComponentToUpdateByAjax(uiActionMan) ;<z>
() {<z>
boolean disableSOAP12 = false;<z>
disableSOAP12Parameter = axisService<z>
.axis2.Constants.Configuration.DISABLE_SOAP12);<z>
disableSOAP12Parameter != null<z>
disableSOAP12Parameter.getValue())) {<z>
;<z>
disableSOAP12;<z>
public GitState(GitServerOperations server,<z>
eventBus,<z>
,<z>
)<z>
eventBus, globalDisplay, session);<z>
;<z>
(CMISMapping cmisMapping, PropertyDefinition propDef)<z>
.getName();<z>
getCmisPropertyId(propertyQName);<z>
CMISPropertyId(propertyQName, propertyId);<z>
, cmisPropertyId, propDef, this);<z>
+ userId + " was not updated because they didn't enter anything.");<z>
"alert('Failed to save status. If the problem persists, contact your system administrator.');";<z>
{<z>
.subclassesOf(HttpServlet.class),<z>
),<z>
());<z>
(Object o) {<z>
if (this == o) return true;<z>
.getClass()) return false;<z>
QueryResult) o;<z>
false;<z>
maxId) return false;<z>
;<z>
that.resultsPerPage) return false;<z>
;<z>
total != that.total) return false;<z>
that.query)) return false;<z>
)<z>
return false;<z>
) : that.tweets != null)<z>
return false;<z>
warning != null)<z>
;<z>
;<z>
symbol) {<z>
= true;<z>
symbol instanceof StandardSymbol) {<z>
.symbol = (StandardSymbol) symbol;<z>
false;<z>
enabledLine = false;<z>
enabledVertex = false;<z>
(symbol instanceof StandardLineSymbol) {<z>
enabledLine = true;<z>
;<z>
= lineSymbol.getOutlineColor();<z>
lineColor != null) {<z>
setBackground(lineColor);<z>
.setSelected(true);<z>
;<z>
else {<z>
false);<z>
;<z>
StandardPolygonSymbol) {<z>
enabledFill = true;<z>
= true;<z>
) symbol;<z>
;<z>
fillColor != null) {<z>
);<z>
setSelected(true);<z>
());<z>
} else {<z>
setSelected(false);<z>
) {<z>
;<z>
= true;<z>
;<z>
(StandardPointSymbol) symbol;<z>
.getSize());<z>
setVisible(enabledLine);<z>
enabledLine);<z>
(chkLine.isSelected());<z>
());<z>
(enabledVertex);<z>
lblSize.setVisible(enabledVertex);<z>
|| enabledLine);<z>
|| enabledLine);<z>
(enabledLine);<z>
);<z>
setVisible(enabledFill);<z>
setVisible(enabledFill);<z>
&& enabledLine);<z>
else {<z>
;<z>
throw new RuntimeException(<z>
;<z>
;<z>
final TextEdit edit) {<z>
;<z>
catch (final MalformedTreeException e) {<z>
;<z>
(final BadLocationException e) {<z>
);<z>
) {<z>
;<z>
url = new URL("http://data.wsdot.wa.gov/mobile/HighwayAlerts.js.gz");<z>
urlConn = url.openConnection();<z>
(urlConn.getInputStream());<z>
new GZIPInputStream(bis);<z>
= new InputStreamReader(gzin);<z>
new BufferedReader(is);<z>
jsonFile = "";<z>
line;<z>
= in.readLine()) != null)<z>
;<z>
close();<z>
(jsonFile);<z>
obj.getJSONObject("alerts");<z>
.getJSONArray("items");<z>
; j++) {<z>
j);<z>
startRoadwayLocation = item.getJSONObject("StartRoadwayLocation");<z>
.getDouble("Longitude")),<z>
("HeadlineDescription"),<z>
("EventCategory")))));<z>
catch (Exception e) {<z>
, e);<z>
);<z>
subject) throws IOException {<z>
) {<z>
.getEncoded();<z>
X509Name) {<z>
);<z>
new DEROutputStream(bout);<z>
;<z>
getDERObject());<z>
();<z>
else {<z>
("unsupported input class: "<z>
getClass().toString());<z>
execute(IProtocolSessionManager protocolSessionManager) throws ActionException {<z>
();<z>
);<z>
prepareMessage();<z>
STATUS.OK);<z>
);<z>
actionResponse, protocol);<z>
actionResponse;<z>
e) {<z>
throw new ActionException(e);<z>
,<z>
IElementsIndex index,<z>
boolean newInstanceCompletion)<z>
!currentContext.acceptModelsElements())<z>
;<z>
).acceptElementEntry(entry))<z>
return null;<z>
;<z>
proposalContent;<z>
getEnhancement(entry, proposalContent, newInstanceCompletion);<z>
enhancement != null)<z>
replaceString;<z>
name.length();<z>
();<z>
length();<z>
enhancement != null)<z>
enhancement.cursorShift;<z>
;<z>
();<z>
getValue();<z>
proposalContent, index, val, entry);<z>
image = labelProvider.getImage(val);<z>
proposalContent;<z>
(DOLLAR_SIGN))<z>
;<z>
;<z>
int objType = 0;<z>
;<z>
)<z>
)))<z>
+= "-[local]";<z>
getModule();<z>
null)<z>
"]";<z>
if (dispString.length() == 0)<z>
= entry.getEntryPath();<z>
+= "-[namespace]";<z>
entry);<z>
) > 0)<z>
")";<z>
cp = null;<z>
))<z>
image,<z>
;<z>
.setViewer(viewer);<z>
,<z>
fileOloc, null);<z>
.setViewer(viewer);<z>
enhancement != null)<z>
null)<z>
);<z>
+= replOffset;<z>
caretExitOffset);<z>
cp.setResolver(resolver);<z>
cp.setTriggerCharacters(getProposalTriggerCharacters());<z>
cp;<z>
void postAttributeUpdateFromUIDL(UIDL uidl, ApplicationConnection client) {<z>
if (this.pid == null) {<z>
);<z>
= client;<z>
formItemClickRegistration == null) {<z>
new FormItemClickHandler() {<z>
event) {<z>
;<z>
event.getForm(), false);<z>
), false);<z>
()), true);<z>
});<z>
);<z>
Attachment> attachments) {<z>
APIRequest(ServerCredentials.APIBASE<z>
+ ServerCredentials.ITEMS<z>
item.getKey() + "/children?content=json",<z>
);<z>
);<z>
.disposition = "xml";<z>
templ.updateType = "attachment";<z>
"Using the templ key of the first new attachment for now...");<z>
).key;<z>
return templ;<z>
getWithPrefix(String prefix) {<z>
Vector<String> result;<z>
node;<z>
iter;<z>
;<z>
(prefix)) {<z>
node = m_Root.find(prefix);<z>
= new TrieIterator(node);<z>
iter.hasNext())<z>
);<z>
result;<z>
int hashCode() {<z>
if (__hashCodeCalc) {<z>
0;<z>
__hashCodeCalc = true;<z>
1;<z>
() != null) {<z>
.hashCode();<z>
!= null) {<z>
;<z>
) {<z>
);<z>
__hashCodeCalc = false;<z>
_hashCode;<z>
boolean addAll(SparseLongSet that) {<z>
(that == null) {<z>
throw new IllegalArgumentException("null that");<z>
isEmpty()) {<z>
(that);<z>
that.isEmpty();<z>
if (that.isEmpty()) {<z>
return false;<z>
) {<z>
return false;<z>
size == 1) {<z>
;<z>
;<z>
;<z>
int bl = that.size();<z>
, bl);<z>
() throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
) {<z>
().getAlternatives());<z>
;<z>
);<z>
state._fsp--;<z>
) return ;<z>
.backtracking==0 ) {<z>
.getPrimitiveLiteralExpCSAccess().getAlternatives());<z>
{<z>
re);<z>
,re);<z>
restoreStackSize(stackSize);<z>
, int z) {<z>
, z, 0);<z>
);<z>
req) throws ClientProtocolException, IOException {<z>
.execute(req);<z>
= res.getEntity();<z>
if (entity != null) {<z>
)));<z>
res);<z>
void stepInto() {<z>
;<z>
;<z>
mPassiveListenerEnabled;<z>
mNetworkListenerEnabled;<z>
boolean mDidFirstInit;<z>
MIN_LOCATION_UPDATE_MS;<z>
.what) {<z>
case MSG_UPDATE_TWILIGHT:<z>
() && mLocation != null<z>
UiModeManager.MODE_NIGHT_AUTO) {<z>
0, 0);<z>
MSG_GET_NEW_LOCATION_UPDATE:<z>
!mNetworkListenerEnabled) {<z>
+MIN_LOCATION_UPDATE_MS)<z>
SystemClock.elapsedRealtime()) {<z>
= false;<z>
mEmptyLocationListener);<z>
networkLocationEnabled;<z>
isProviderEnabled(LocationManager.NETWORK_PROVIDER);<z>
) {<z>
false;<z>
mNetworkListenerEnabled && networkLocationEnabled) {<z>
SystemClock.elapsedRealtime();<z>
mEmptyLocationListener);<z>
!mDidFirstInit) {<z>
= true;<z>
mLocation == null) {<z>
) {<z>
(isDoingNightMode() && mLocation != null<z>
mNightMode == UiModeManager.MODE_NIGHT_AUTO) {<z>
0, 0);<z>
boolean passiveLocationEnabled;<z>
(LocationManager.PASSIVE_PROVIDER);<z>
passiveLocationEnabled = false;<z>
mPassiveListenerEnabled = true;<z>
.PASSIVE_PROVIDER,<z>
0, LOCATION_UPDATE_DISTANCE_METER , mLocationListener);<z>
!(mNetworkListenerEnabled && mPassiveListenerEnabled)) {<z>
.getLong(KEY_LAST_UPDATE_INTERVAL);<z>
interval *= 1.5;<z>
(interval == 0) {<z>
LOCATION_UPDATE_ENABLE_INTERVAL_MIN;<z>
} else if (interval > LOCATION_UPDATE_ENABLE_INTERVAL_MAX) {<z>
= LOCATION_UPDATE_ENABLE_INTERVAL_MAX;<z>
bundle = new Bundle();<z>
sendMessageDelayed(newMsg, interval);<z>
<String> providers =<z>
), true).iterator();<z>
providers.hasNext()) {<z>
.getLastKnownLocation(providers.next());<z>
null || (lastKnownLocation != null &&<z>
== null) {<z>
currentTime = new Time();<z>
.currentTimeMillis());<z>
lngOffset = FACTOR_GMT_OFFSET_LONGITUDE *<z>
3600 : 0));<z>
"fake");<z>
417000.0f);<z>
System.currentTimeMillis());<z>
synchronized (mLock) {<z>
mLocation = location;<z>
> getUnit(final String unitName) throws FactoryException {<z>
contains(unitName, METERS)) {<z>
return SI.METER;<z>
)) {<z>
return NonSI.DEGREE_ANGLE;<z>
unitName, SECONDS)) {<z>
return SI.SECOND;<z>
unitName, MINUTES)) {<z>
;<z>
(contains(unitName, HOURS)) {<z>
;<z>
(contains(unitName, DAYS)) {<z>
DAY;<z>
} else {<z>
if (unitFormat == null) {<z>
unitFormat = UnitFormat.getInstance();<z>
unitName);<z>
{<z>
"Unit not known : " + unitName, e);<z>
{<z>
()) {<z>
c.value.equals(v)) {<z>
return c;<z>
;<z>
Object data) {<z>
if (functionJDBCType != null) {<z>
[0]);<z>
functionJDBCType);<z>
setResultType(returnType);<z>
) data;<z>
]{<z>
.distinct,<z>
(node.jjtGetChild(0))<z>
args, buf);<z>
pageName, String initialName, boolean collectTemplates)<z>
, StructuredSelection.EMPTY);<z>
initialFilename = initialName;<z>
.collectTemplates = collectTemplates;<z>
;<z>
title, FileFilter filter, File initialDir) {<z>
ClientMiscUtils.MAC) {<z>
FileDialog.LOAD);<z>
filter != null) {<z>
setFilenameFilter(new FilenameFilterAdapter(filter));<z>
initialDir != null) {<z>
));<z>
);<z>
true);<z>
;<z>
(selectedFileName != null) {<z>
), selectedFileName);<z>
{<z>
JFileChooser();<z>
fd.setDialogTitle(title);<z>
OPEN_DIALOG);<z>
if (filter != null) {<z>
;<z>
if (initialDir != null) {<z>
);<z>
;<z>
JFileChooser.APPROVE_OPTION) {<z>
return fd.getSelectedFile();<z>
null;<z>
put(final Iterable<Entity> entityIterable) {<z>
>() {<z>
<Key> call() throws Exception {<z>
entityIterable);<z>
});<z>
static void main(String[] args) {<z>
Display d = new Display();<z>
);<z>
.setText("GraphSnippet6");<z>
().getSystemImage(SWT.ICON_INFORMATION);<z>
.ICON_WARNING);<z>
);<z>
));<z>
);<z>
(shell, SWT.NONE);<z>
;<z>
++) {<z>
);<z>
);<z>
NODES_FISHEYE, "Error", image3);<z>
NONE, n1, n2);<z>
n3);<z>
n3, n3);<z>
), true);<z>
;<z>
!shell.isDisposed()) {<z>
(!d.readAndDispatch()) {<z>
);<z>
image1.dispose();<z>
);<z>
();<z>
throws RecognitionException {<z>
stackSize = keepStackSize();<z>
(FOLLOW_rule__AdditiveExpression__Group_1__0__Impl_in_rule__AdditiveExpression__Group_1__013764);<z>
();<z>
--;<z>
if (state.failed) return ;<z>
;<z>
);<z>
_fsp--;<z>
.failed) return ;<z>
(RecognitionException re) {<z>
;<z>
;<z>
);<z>
, int y,<z>
c, Color background ) {<z>
/ 2;<z>
.height - BAR_HEIGHT;<z>
* 2);<z>
= c;<z>
= background;<z>
);<z>
) interval, BAR_HEIGHT);<z>
* 2; i += 4 ) {<z>
BAR_HEIGHT);<z>
intervalColor);<z>
+ interval, barStartY, interval, BAR_HEIGHT);<z>
* 2; i += 4 ) {<z>
BAR_HEIGHT);<z>
new GeneralPath();<z>
;<z>
;<z>
2 * interval, barStartY + BAR_HEIGHT);<z>
* 2 * interval, barStartY);<z>
, barStartY);<z>
(color);<z>
;<z>
;<z>
() {<z>
ClassLoader.getCallerClassLoader();<z>
{<z>
.getPackages();<z>
else {<z>
;<z>
fnSumflt3args5() {<z>
query = new XQuery(<z>
);<z>
= result(query);<z>
result = res;<z>
("0")<z>
(final byte[] s) {<z>
) {<z>
length; c++) {<z>
;<z>
]) o :<z>
;<z>
].toString();<z>
null;<z>
Socket socket, String host, int port,<z>
IOException {<z>
.socket = socket;<z>
host;<z>
;<z>
= autoClose;<z>
;<z>
double maxSpacing ) {<z>
("not implemented yet.");<z>
, int delayMs)<z>
reason_ = reason;<z>
delayMs;<z>
Bundle bundle) throws DeploymentException {<z>
<String, GBeanData>();<z>
: connectionDefinitions) {<z>
ManagedConnectionFactoryWrapper.class, ManagedConnectionFactoryWrapperGBean.GBEAN_INFO);<z>
getManagedConnectionFactoryClass();<z>
();<z>
.add("ResourceAdapter");<z>
("LogWriter");<z>
getConfigProperty(), bundle, ignore);<z>
;<z>
, managedConnectionfactoryClassName);<z>
managedConnectionFactoryGBeanData.setAttribute("connectionFactoryInterface", connectionfactoryInterface);<z>
connectionDefinition.getConnectionFactoryImplClass());<z>
;<z>
getConnectionImplClass());<z>
setReferencePattern("ValidatorFactory", validatorName);<z>
(connectionfactoryInterface, managedConnectionFactoryGBeanData);<z>
return managedConnectionFactoryInfos;<z>
boolean selectDevice(LayoutDevice device) {<z>
size();<z>
; i < count ; i++) {<z>
{<z>
;<z>
true;<z>
return false;<z>
void createDefaultFolders() throws Exception {<z>
(profile, auth, handler);<z>
(profile));<z>
createFolder();<z>
.Constants.FOLDER_SENT(profile));<z>
createFolder();<z>
);<z>
);<z>
Constants.FOLDER_DRAFTS(profile));<z>
.createFolder();<z>
boolean isValidForPrefix(String name, String prefix) {<z>
;<z>
, Token lastToken) {<z>
[] {<z>
new PropertyOne<Element_div>("element_div", element_div)<z>
}, firstToken, lastToken);<z>
encoding )<z>
.getTemporaryRootDirectory(), encoding );<z>
public void validate(Source source, Result result)<z>
IOException {<z>
== null) {<z>
= (SAXSource) source;<z>
result;<z>
(result != null) {<z>
setContentHandler(saxResult.getHandler());<z>
= saxSource.getXMLReader();<z>
) {<z>
SAXParserFactory spf = SAXParserFactory.newInstance();<z>
(true);<z>
).getXMLReader();<z>
.parsers.SAXParser) {<z>
getProperty(SECURITY_MANAGER);<z>
) {<z>
SECURITY_MANAGER, securityManager);<z>
catch (SAXException exc) {}<z>
Exception e ) {<z>
);<z>
;<z>
{<z>
false;<z>
();<z>
());<z>
setEntityResolver(fResolutionForwarder);<z>
;<z>
reader.setContentHandler(this);<z>
this);<z>
= saxSource.getInputSource();<z>
(is);<z>
null);<z>
JAXPValidationMessageFormatter.formatMessage(fComponentManager.getLocale(),<z>
getName()}));<z>
compareInput) {<z>
)) {<z>
null;<z>
= (ICompareInput) compareInput;<z>
input == null) {<z>
return null;<z>
null;<z>
te = input.getLeft();<z>
instanceof IResourceProvider) {<z>
IResourceProvider) te;<z>
if (rp == null) {<z>
();<z>
instanceof IResourceProvider) {<z>
= (IResourceProvider) te;<z>
) {<z>
getAncestor();<z>
te instanceof IResourceProvider) {<z>
;<z>
null) {<z>
return rp.getResource();<z>
return null;<z>
ModelNode node) {<z>
version = new ModelNode();<z>
node.hasDefined(MANAGEMENT_MAJOR_VERSION)) {<z>
.get(MANAGEMENT_MAJOR_VERSION));<z>
(node.hasDefined(MANAGEMENT_MINOR_VERSION)) {<z>
set(node.get(MANAGEMENT_MINOR_VERSION));<z>
(MANAGEMENT_MICRO_VERSION)) {<z>
set(node.get(MANAGEMENT_MICRO_VERSION));<z>
version;<z>
findAll()<z>
= null;<z>
= factory.createEntityManager();<z>
begin();<z>
getResultList();<z>
().commit();<z>
);<z>
;<z>
{<z>
this("classification",<z>
ModsConstants.AUTHORITY,<z>
ModsConstants.EDITION,<z>
.DISPLAY_LABEL,<z>
LANG,<z>
,<z>
,<z>
SCRIPT);<z>
public static void setFightMode(int fightMode) {<z>
)) {<z>
openTab();<z>
WIDGET, fightMode + 11);<z>
null) {<z>
click();<z>
int determineLastDayOfWeekInMonth() {<z>
null) {<z>
();<z>
0 || day>7) {<z>
new IllegalArgumentException("Last xx day of the month has to be a day of week (0-7)");<z>
getDayOfWeek();<z>
();<z>
DAY_OF_MONTH));<z>
(Calendar.DAY_OF_WEEK) - dayOfWeek;<z>
dayDiff > 0) {<z>
add(Calendar.DAY_OF_WEEK, -dayDiff);<z>
dayDiff < 0) {<z>
.DAY_OF_WEEK, -7 - dayDiff);<z>
);<z>
decodeRoundRect4() {<z>
(0.120000005f),<z>
0.120000005f),<z>
2.8799999f) - decodeX(0.120000005f),<z>
(0.120000005f),<z>
;<z>
roundRect;<z>
) {<z>
= 0;<z>
;<z>
for (CompanyStatistics companyStatistics :<z>
()) {<z>
(RequestStatistics requestStatistics :<z>
)) {<z>
();<z>
count++;<z>
;<z>
int start ) {<z>
= true;<z>
= 0;<z>
- 1;<z>
) {<z>
charAt(tmpOffset);<z>
(c)) {<z>
;<z>
{<z>
;<z>
;<z>
return offset;<z>
path) {<z>
();<z>
;) {<z>
.next();<z>
(s);<z>
{<z>
'/');<z>
();<z>
void onResume() {<z>
) {<z>
);<z>
getActivity()).getFilterListFragment();<z>
null) {<z>
fl.clear();<z>
.switchToActiveTasks();<z>
onResume();<z>
;<z>
.registerReceiver(notifyReceiver, intentFilter);<z>
showListSettingsPopover();<z>
);<z>
ProjectImportConfiguration importConfiguration, boolean checkoutAllProjects,<z>
{<z>
);<z>
;<z>
this.checkoutAllProjects = checkoutAllProjects;<z>
workingSets;<z>
, new OpenMavenConsoleAction());<z>
addJobChangeListener(new CheckoutJobChangeListener());<z>
baseName) {<z>
baseName = baseName;<z>
"/" + baseName + ".properties";<z>
"] as base name. Fallback name is ["<z>
"]");<z>
{<z>
;<z>
result = 1;<z>
: map.hashCode());<z>
: tail.hashCode());<z>
result;<z>
(Path path)<z>
{<z>
_streams.get(path);<z>
() : null;<z>
) {<z>
= new RotateStream(path);<z>
WeakReference<RotateStream>(stream));<z>
;<z>
protected String getPage() {<z>
{<z>
;<z>
PortletDisplay portletDisplay =<z>
.getAttribute("portletDisplay");<z>
.isShowPortletCssIcon()) {<z>
null;<z>
("portlet-css portlet-css-icon lfr-js-required");<z>
("../portlet/portlet_css");<z>
("look-and-feel");<z>
(false);<z>
.getURLPortletCss());<z>
);<z>
String guid) {<z>
;<z>
NSqlQuery(db.getConnection());<z>
.prepare("Select guid "<z>
" where guid=:guid and linked=true");<z>
guid);<z>
= query.exec();<z>
(!check)<z>
, "Notebook SQL isLinked failed.");<z>
next()) {<z>
true;<z>
return false;<z>
.portlet.announcements.model.AnnouncementsDelivery getDelivery(<z>
long deliveryId)<z>
.portal.kernel.exception.PortalException,<z>
portal.kernel.exception.SystemException {<z>
(deliveryId);<z>
fileResources, final String workspaceUri) {<z>
fileResource = null;<z>
pathInWorkspace;<z>
.SEPARATOR) {<z>
new Path(workspaceUri);<z>
createURI(pathInWorkspace.toString());<z>
fileResource2 : fileResources) {<z>
= fileResource2;<z>
.getURI().equals(pathInWorkspaceURI))<z>
;<z>
null;<z>
) {<z>
model;<z>
= new XcgiServer();<z>
.mailServer = MailServer.getInstance();<z>
= FeedbackServer.getInstance();<z>
getAccessPatternsInGroup( final Object groupID )<z>
throws TeiidComponentException, QueryMetadataException {<z>
isInstanceOf(TableRecord.class, groupID);<z>
)groupID;<z>
;<z>
(groupUUID);<z>
);<z>
(<z>
ExecutionContext executionContext) {<z>
LinkContract) executionContext<z>
(EXECUTIONCONTEXT_KEY_LINKCONTRACT_PER_MESSAGE);<z>
Object component,<z>
final String propertyName, final Object param) {<z>
(new Runnable() {<z>
) {<z>
.doCallSetter(component,<z>
param);<z>
;<z>
{<z>
equals(languageCode)) {<z>
compile("^[0-9a-záãâàéêíóõôúüçA-ZÁÃÂÀÉÊÍÓÕÔÚÜÇ]+$");<z>
);<z>
{<z>
) {<z>
(n);<z>
public BndWordRule() {<z>
T_INSTRUCTION);<z>
Analyzer.options, bsvc.T_OPTION);<z>
(Analyzer.directives, bsvc.T_DIRECTIVE);<z>
public final void rule__ScriptValueExpression__Group__1__Impl() throws RecognitionException {<z>
();<z>
( state.backtracking==0 ) {<z>
;<z>
);<z>
);<z>
._fsp--;<z>
(state.failed) return ;<z>
) {<z>
);<z>
(RecognitionException re) {<z>
reportError(re);<z>
,re);<z>
restoreStackSize(stackSize);<z>
visit(AnyElement node) {<z>
(node)) {<z>
(node);<z>
;<z>
{<z>
itemPropertyDescriptors.add<z>
.getRootAdapterFactory(),<z>
),<z>
"_UI_Characteristic_parent_feature"),<z>
),<z>
SmmPackage.Literals.CHARACTERISTIC__PARENT,<z>
null));<z>
void setRegionDecoder(BitmapRegionDecoder decoder) {<z>
decoder);<z>
= decoder.getWidth();<z>
.getHeight();<z>
);<z>
{<z>
XQuery query = new XQuery(<z>
);<z>
= result(query);<z>
;<z>
)<z>
factory) {<z>
).getCanonicalName());<z>
) {<z>
);<z>
);<z>
();<z>
) {<z>
o;<z>
e.getValue() instanceof String) {<z>
getValue();<z>
)).replace("@DATA_DIR@", dataDirRoot);<z>
setValue(string);<z>
());<z>
params);<z>
{<z>
this.complete){<z>
return this.complete;<z>
r, float price) {<z>
addressID = r.getAddressID();<z>
productID = r.getProductID();<z>
int catID = r.getPriceCategoryID();<z>
.toString(productID);<z>
addKey = Integer.toString(addressID);<z>
= Integer.toString(catID);<z>
HashMap categoryMap = getMap(prodKey, addKey);<z>
) categoryMap.get(catKey);<z>
= 0;<z>
{<z>
prev = f.floatValue();<z>
;<z>
.put(addKey, catKey, f);<z>
, int offset) throws BadLocationException {<z>
;n--) {<z>
c = doc.getChar(n);<z>
|| c =='\n' || c == '\0') {<z>
offset-n-1);<z>
Exception e) {<z>
));<z>
;<z>
public List<ContentRecordVO> getReferencedContents() {<z>
);<z>
this.getReferencedContentsId();<z>
) {<z>
.size(); i++) {<z>
i));<z>
;<z>
Throwable t) {<z>
msg = "Error getting referenced contents by content " + this.getContentId();<z>
, "getReferencedContents", msg );<z>
);<z>
return referencedContents;<z>
static void removeResourcePermission(long companyId,<z>
,<z>
lang.String actionId)<z>
.kernel.exception.PortalException,<z>
.SystemException {<z>
()<z>
companyId, name, scope, primKey, roleId,<z>
);<z>
String hostName) {<z>
URLName> recordsColl = null;<z>
= true;<z>
run();<z>
length == 0 )<z>
foundOriginalMX = false;<z>
;<z>
records == null &&<z>
".") &&<z>
.lastIndexOf(".") != -1<z>
+1);<z>
Type.MX).run();<z>
( records != null )<z>
<Record>() {<z>
Record arg1) {<z>
).getPriority();<z>
;<z>
;<z>
< records.length; i++)<z>
(MXRecord) records[i];<z>
mx.getTarget().toString();<z>
URLName(<z>
, targetString.length() - 1)<z>
recordsColl.add(uName);<z>
foundOriginalMX = false;<z>
);<z>
( !foundOriginalMX )<z>
();<z>
)<z>
new URLName(SMTP_PROTOCOL_PREFIX + hostName));<z>
{<z>
("DnsResolver.getMXRecordsForHost(): Failed get MX record for host '"+hostName+"'.",e);<z>
;<z>
() {<z>
OliveColorScheme(),<z>
);<z>
java.lang.String value)<z>
SAXException<z>
value;<z>
.lang.Exception e) {<z>
);<z>
Order order) {<z>
("insertOrder", order);<z>
, order);<z>
).size(); i++) {<z>
get(i);<z>
));<z>
);<z>
() {<z>
endA == null) {<z>
return 0;<z>
else {<z>
endA;<z>
Time time, Locale locale)<z>
time == null)<z>
return null;<z>
null)<z>
getDefault();<z>
;<z>
return format.format(time);<z>
String qName, boolean startReaper) throws Exception {<z>
.getQueueDescriptor(qName);<z>
if (null != qDesc) {<z>
, pipeCollectionLocker);<z>
null;<z>
void re00543() {<z>
query = new XQuery(<z>
);<z>
final QT3Result res = result(query);<z>
res;<z>
true)<z>
map, final InstanceIdentifier identifier,<z>
state)<z>
throws SoapFault, IOException<z>
= getCoordinator(endpoint, map);<z>
coordinator, identifier);<z>
port;<z>
);<z>
);<z>
(state);<z>
port.statusOperation(status);<z>
boolean decryptData() throws SSLException {<z>
;<z>
.OK;<z>
Status.OK) {<z>
flip();<z>
this.inPlain);<z>
;<z>
);<z>
Status.OK) {<z>
decrypted = true;<z>
;<z>
) throws IOException {<z>
);<z>
pInput.readUnsignedShort();<z>
);<z>
pInput.readUnsignedShort();<z>
pInput.readUnsignedShort();<z>
pInput.readUnsignedShort();<z>
pInput.readUnsignedShort();<z>
pInput.readUnsignedShort();<z>
readInt();<z>
byte[] data;<z>
) {<z>
:<z>
- 20];<z>
data);<z>
PCHG_COMP_HUFFMAN:<z>
.readInt();<z>
;<z>
];<z>
.length; i++) {<z>
i] = pInput.readShort();<z>
- 20 - 8 - compInfoSize];<z>
readFully(compData);<z>
= new byte[originalDataSize];<z>
.length);<z>
compression);<z>
PaletteChange[startLine + lineCount][];<z>
{<z>
= maxReg - minReg + 1;<z>
new MutableIndexColorModel.PaletteChange[numChanges];<z>
;<z>
() {<z>
0.25;<z>
i += step) {<z>
.E, i));<z>
(i, i);<z>
.log(i);<z>
(log) && log > 0) {<z>
log);<z>
int hashCode() {<z>
int hash = 7;<z>
+ JodaBeanUtils.hashCode(getCurrency());<z>
);<z>
getMaturityDate());<z>
(getRate());<z>
));<z>
hashCode(getRegion());<z>
.hashCode();<z>
java.awt.event.ActionEvent evt) {<z>
0) {<z>
.getSelectedRow());<z>
removerProjeto();<z>
popularTabelaProjetos();<z>
;<z>
ex) {<z>
ex);<z>
));<z>
(String term)<z>
(;;)<z>
indexOf(term);<z>
-1)<z>
;<z>
);<z>
return take;<z>
();<z>
e)<z>
boolean booleanValue(Object obj) {<z>
{<z>
false;<z>
class) {<z>
(Boolean) obj;<z>
) {<z>
) obj).intValue() != 0;<z>
;<z>
operationFailedStatusBarMessage(String failureMessage)<z>
Image icon = ApplicationRegistry.getImage(FAILURE_IMAGE);<z>
if(_mbeanView != null)<z>
icon, failureMessage);<z>
)<z>
throws Throwable {<z>
{<z>
.getCause();<z>
instanceof WrappedException) {<z>
getCause();<z>
;<z>
) {<z>
(field == null) {<z>
throw new IllegalArgumentException();<z>
switch (field) {<z>
:<z>
return isSetNotebookCounts();<z>
TAG_COUNTS:<z>
);<z>
TRASH_COUNT:<z>
isSetTrashCount();<z>
();<z>
{<z>
{<z>
item.remove();<z>
private void writeCountryName(GenericTypedGrPostal countryName)<z>
throws XMLStreamException {<z>
;<z>
writeGenericTypedGrPostal(countryName);<z>
;<z>
NodeHello nodeHello) {<z>
fcpListener : getListeners()) {<z>
, nodeHello);<z>
queueCount) {<z>
== 0) {<z>
;<z>
;<z>
null;<z>
count = queueCount;<z>
public long xor(long b) {<z>
{<z>
^ b;<z>
return value_;<z>
Integer> inLivingIDs)<z>
.iterator();<z>
)<z>
theIterator.next();<z>
(theEntityId) == false)<z>
.remove();<z>
currentOwner;<z>
<CompoundAnnotationProxy> pl) {<z>
.Compound> buf =<z>
Attribute.Compound>();<z>
(); l=l.tail) {<z>
);<z>
buf.toList();<z>
)<z>
null &&<z>
&&<z>
!= null &&<z>
&&<z>
!= null &&<z>
) &&<z>
(orgUnit != null &&<z>
orgUnit)) &&<z>
&&<z>
.organization)) &&<z>
!= null &&<z>
street)) &&<z>
state != null &&<z>
)) &&<z>
!= null &&<z>
)) &&<z>
&&<z>
)) &&<z>
(dnQualifier != null &&<z>
) o).dnQualifier)) &&<z>
&&<z>
X500DistinguishedName) o).surname)) &&<z>
&&<z>
)) &&<z>
&&<z>
).initials)) &&<z>
!= null &&<z>
).generation)) &&<z>
!= null &&<z>
) o).email)) &&<z>
!= null &&<z>
);<z>
) {<z>
= new DependencyMap();<z>
())<z>
(file, result, overridingOnes);<z>
result;<z>
final void mKEYWORD_13() throws RecognitionException {<z>
= KEYWORD_13;<z>
DEFAULT_TOKEN_CHANNEL;<z>
|| templateVariable)) ) {<z>
"KEYWORD_13", "!literal || templateVariable");<z>
"for");<z>
type = _type;<z>
channel = _channel;<z>
getImageDescriptor(String imageString) {<z>
);<z>
descriptor == null) {<z>
+ imageString);<z>
registry.put(imageString, descriptor);<z>
return descriptor;<z>
Reader reader, final Closure closure) {<z>
new BufferedReader(reader);<z>
() {<z>
) throws IOException {<z>
(out);<z>
;<z>
= new BooleanClosureWrapper(closure);<z>
{<z>
) {<z>
write(line);<z>
.newLine();<z>
.flush();<z>
out;<z>
String toString() {<z>
new StringWriter();<z>
buffer);<z>
(IOException e) {<z>
);<z>
toString();<z>
)<z>
{<z>
rowIds.isEmpty()) {<z>
;<z>
Fragment>(rowIds.size());<z>
();<z>
{<z>
rowId);<z>
null) {<z>
.add(rowId);<z>
} else {<z>
;<z>
DELETED_DEPENDENT) {<z>
;<z>
isEmpty()) {<z>
;<z>
false);<z>
addAll(fetched);<z>
;<z>
final MessageEvent e)<z>
{<z>
msg = e.getMessage();<z>
ChannelBuffer) msg, e);<z>
) {<z>
= new StringBuffer();<z>
"CREATE TABLE collection_values(");<z>
.append(" collection_entry_id INTEGER PRIMARY KEY,");<z>
sb.append(" collection_id INTEGER,");<z>
append(" name TEXT,");<z>
" url TEXT");<z>
")");<z>
();<z>
relationshipKey) {<z>
= null;<z>
entity().relationshipNamed(relationshipKey);<z>
relationship.userInfo() != null) {<z>
("ERXInverseRelationshipName");<z>
result == null) {<z>
inverseForRelationshipKey(relationshipKey);<z>
;<z>
LdapException<z>
( entry );<z>
getMatchingRuleRegistry().contains( oldOid ) )<z>
LdapUnwillingToPerformException( ResultCodeEnum.UNWILLING_TO_PERFORM,<z>
err( I18n.ERR_353, oldOid ) );<z>
().getString();<z>
;<z>
() );<z>
isSchemaEnabled( schemaName ) )<z>
);<z>
.getString();<z>
newOid );<z>
( MetaSchemaConstants.M_OID_AT, newOid );<z>
;<z>
;<z>
.setDn( newDn );<z>
, targetEntry, schemaManager<z>
;<z>
oldOid );<z>
.add( comparator );<z>
) {<z>
);<z>
(generalCategory) {<z>
:<z>
case Character.LOWERCASE_LETTER:<z>
:<z>
.MODIFIER_LETTER:<z>
case Character.OTHER_LETTER:<z>
Character.LETTER_NUMBER:<z>
return true;<z>
false;<z>
public void unsetDayWorking() {<z>
oldDayWorking = dayWorking;<z>
= dayWorkingESet;<z>
= DAY_WORKING_EDEFAULT;<z>
= false;<z>
())<z>
));<z>
) throws TransactionException<z>
();<z>
jtaTransaction = txManager.getTransaction();<z>
== null)<z>
createStaticMessage("XATransaction is null"));<z>
;<z>
catch (RollbackException e)<z>
TransactionException(e);<z>
catch (SystemException e)<z>
new TransactionException(e);<z>
{<z>
foo();<z>
;<z>
> emptyMap = super.foo();<z>
method(emptyMap);<z>
createMiddle() throws OpenR66ProtocolPacketException {<z>
) {<z>
("Not enough data");<z>
] away = new byte[1];<z>
] = way;<z>
filename.getBytes(), " "<z>
(blocksize).getBytes(), " "<z>
), " ".getBytes(),<z>
), " ".getBytes(),<z>
code).getBytes());<z>
, EscherRecordFactory recordFactory )<z>
);<z>
pos = offset + HEADER_SIZE;<z>
;<z>
0, bytesAfterHeader);<z>
+ 8;<z>
filename )<z>
!= null && !sourceImage.isDisposed( ) )<z>
;<z>
= null;<z>
, filename );<z>
( ).width<z>
.height )<z>
;<z>
);<z>
;<z>
(Object key1, Object value1,<z>
Object key2, Object value2,<z>
Object key3, Object value3) {<z>
, key3 },<z>
,<z>
value2, value3 });<z>
String type)<z>
throws Exception {<z>
{<z>
case 0: return PKIXExtensions.BasicConstraints_Id;<z>
KeyUsage_Id;<z>
case 2: return PKIXExtensions.ExtendedKeyUsage_Id;<z>
;<z>
return PKIXExtensions.IssuerAlternativeName_Id;<z>
: return PKIXExtensions.SubjectInfoAccess_Id;<z>
case 6: return PKIXExtensions.AuthInfoAccess_Id;<z>
: return PKIXExtensions.CRLDistributionPoints_Id;<z>
default: return new ObjectIdentifier(type);<z>
RecommendedItem> getTopItems(int howMany,<z>
LongPrimitiveIterator possibleItemIDs,<z>
rescorer,<z>
throws TasteException {<z>
(possibleItemIDs != null, "argument is null");<z>
null, "argument is null");<z>
,<z>
.getInstance()));<z>
false;<z>
= Double.NEGATIVE_INFINITY;<z>
{<z>
next();<z>
) {<z>
double preference;<z>
estimator.estimate(itemID);<z>
{<z>
, preference);<z>
rescoredPref > lowestTopValue)) {<z>
);<z>
if (full) {<z>
;<z>
(topItems.size() > howMany) {<z>
;<z>
topItems.poll();<z>
getValue();<z>
size = topItems.size();<z>
{<z>
;<z>
;<z>
);<z>
));<z>
;<z>
{<z>
String oldFile = file;<z>
;<z>
))<z>
TEMPLATE__FILE, oldFile, file));<z>
InputStream input,<z>
decorator, final boolean safeMode)<z>
(input, "UTF-8", decorator, safeMode);<z>
(Object obj, Exception exception) {<z>
exception != null) {<z>
++;<z>
m_Debug)<z>
;<z>
;<z>
(m_Debug)<z>
System.err.println(<z>
m_Completed<z>
m_Failed<z>
", overall=" + m_NumSetups);<z>
(m_Failed > 0)) {<z>
m_Failed > 0) {<z>
if (m_Debug)<z>
);<z>
);<z>
;<z>
exception;<z>
() throws internal_error<z>
(); itm.hasMoreElements(); )<z>
(null);<z>
throws RecognitionException {<z>
();<z>
.getCharsetCharsetParserRuleCall_0_0());<z>
);<z>
;<z>
_fsp--;<z>
.getCharsetCharsetParserRuleCall_0_0());<z>
) {<z>
(re);<z>
re);<z>
);<z>
resourceUtil) {<z>
) {<z>
);<z>
0].getResource())));<z>
()) {<z>
VISIBILITY_INACTIVE.addMessageKey(Messages.GUI_CONTEXTMENU_TITLE_INACTIVE_PUBLISH_PARENTFOLDER_0);<z>
} catch (CmsException e) {<z>
{<z>
e.getLocalizedMessage(), e);<z>
.VISIBILITY_ACTIVE;<z>
height, int dx, int dy) {<z>
== null) {<z>
nx = width / WATERMARK_WIDTH;<z>
= height / WATERMARK_HEIGHT;<z>
i++) {<z>
{<z>
WATERMARK_WIDTH);<z>
(WATERMARK_HEIGHT, height - j * WATERMARK_HEIGHT);<z>
h, null);<z>
void onFinishWizardActivity() {<z>
().flags;<z>
(applicationFlags & ApplicationInfo.FLAG_DEBUGGABLE) != 0<z>
) {<z>
this)) {<z>
class));<z>
);<z>
{<z>
CalibrationWizardActivity.class));<z>
();<z>
void appendUserProfile(StringBuilder sb) {<z>
ARGUMENT_SEPARATOR);<z>
());<z>
append(TextProtocolDriver.ARGUMENT_SEPARATOR);<z>
;<z>
.ARGUMENT_SEPARATOR);<z>
.getIconUrl());<z>
ARGUMENT_SEPARATOR);<z>
);<z>
public String toString()<z>
().getName() +<z>
spi +<z>
+<z>
, boolean isHardError, String msg, Throwable cause)<z>
;<z>
errorCode;<z>
_isHardError = isHardError;<z>
clearUniqueFindersCache(BookmarksEntry bookmarksEntry) {<z>
FINDER_PATH_FETCH_BY_UUID_G,<z>
Object[] {<z>
(),<z>
.valueOf(bookmarksEntry.getGroupId())<z>
});<z>
synchronized void destroy() {<z>
;<z>
;<z>
= 0;<z>
bar() {<z>
interceptorCalledFirst)<z>
.decoratorCalledFirst = true;<z>
bar();<z>
String varname, boolean enabled) throws CoreException {<z>
!= null)<z>
IStatus.ERROR, NLS.bind(<z>
varname), null));<z>
getID());<z>
infoList == null) {<z>
;<z>
(), infoList);<z>
());<z>
.getTasks(), varname, enabled);<z>
job, varname, enabled));<z>
] args) throws Exception {<z>
= "--name=NSS\nnssSecmodDirectory=.\n ";<z>
.security.pkcs11.SunPKCS11(nssCfg);<z>
p);<z>
toCharArray());<z>
()));<z>
.out.println();<z>
"passphrase".toCharArray();<z>
);<z>
);<z>
Address> getCCAddresses(Project project) {<z>
getExtension(PeopleExtension.class);<z>
) {<z>
Collections.emptyList();<z>
);<z>
.awt.event.MouseEvent m) {<z>
dragging) {<z>
to = getSelectedRow();<z>
if (!isDraggableRow(to)) {<z>
{<z>
-1 && from != -1) {<z>
= from;<z>
, from);<z>
size()) {<z>
= list.remove(from);<z>
, removed);<z>
.fireTableDataChanged();<z>
, to);<z>
;<z>
to, to);<z>
length) throws SQLException {<z>
java.sql.PreparedStatement pStmt = null;<z>
);<z>
, length);<z>
} finally {<z>
{<z>
.close();<z>
) {<z>
;<z>
handleException(Throwable exc)<z>
;<z>
new LogMessage();<z>
(s);<z>
msg.print(exc);<z>
msg);<z>
registry.getUserNotifier().notifyError("Data Retrieval Failure",<z>
;<z>
viewer.setStatus("", false);<z>
getChildBones(String b) {<z>
"root")) {<z>
return cbs;<z>
else {<z>
];<z>
, int rowIndex,<z>
Sharing> grid) {<z>
);<z>
, model);<z>
add(ib);<z>
getName()));<z>
hp.setSpacing(3);<z>
.getEventCode());<z>
) {<z>
{<z>
;<z>
});<z>
;<z>
, Object... partsAndCounts )<z>
index + 3 )<z>
.next();<z>
( "originalprop.prop" ) );<z>
);<z>
;<z>
( results.hasNext() );<z>
public synchronized int read() throws IOException {<z>
;<z>
;<z>
null || localIn == null) {<z>
;<z>
) {<z>
;<z>
{<z>
buf;<z>
(localBuf == null) {<z>
"luni.24"));<z>
{<z>
localBuf[pos++] & 0xFF;<z>
1;<z>
public boolean vetos() {<z>
;<z>
(messageText, MessageType.WARNING);<z>
configuration = new MessageUserDialogConfiguration(<z>
) {<z>
IActionConfiguration getOkActionConfiguration() {<z>
("Equipment.Creation.OverwriteMessage.OKButton"));<z>
;<z>
UserDialog(parentComponent, configuration);<z>
.show();<z>
result.isCanceled();<z>
{<z>
.compile(".*"+tagName+"=\"(.*?)\".*");<z>
{<z>
Matcher matcher = tagPattern.matcher(tags);<z>
{<z>
;<z>
null;<z>
[]) {<z>
()))<z>
StringIndexOutOfBoundsException(offset);<z>
length;<z>
+ len;<z>
> value.length)<z>
(newCount);<z>
offset + len, count - offset);<z>
, offset, len);<z>
count = newCount;<z>
;<z>
, JComponent newEditor) {<z>
);<z>
maybeRemoveEditorBorder(newEditor);<z>
(newEditor);<z>
.setInheritsPopupMenu(true);<z>
newEditor);<z>
newEditor, "Editor");<z>
Object that) {<z>
{<z>
= (MemMessageIdList) that;<z>
(thatListMem.getMessageIds());<z>
;<z>
Vector getVelocity(byte d) {<z>
d) {<z>
0x2:<z>
, 0, -0.2);<z>
0x3:<z>
(0, 0, 0.2);<z>
:<z>
0.2, 0, 0);<z>
:<z>
Vector(0.2, 0, 0);<z>
, 0, 0);<z>
public void writeDouble(double d) {<z>
;<z>
) {<z>
throw new IllegalStateException("Unreachable section!");<z>
) {<z>
);<z>
(true);<z>
.setModalityType(ModalityType.APPLICATION_MODAL);<z>
"created") Date created) {<z>
new UserProfile();<z>
;<z>
;<z>
.setCreated(created);<z>
userProfile;<z>
SQLException {<z>
{<z>
:<z>
case Connection.TRANSACTION_READ_UNCOMMITTED:<z>
:<z>
.TRANSACTION_REPEATABLE_READ:<z>
Connection.TRANSACTION_SERIALIZABLE: {<z>
this.isolation = level;<z>
: {<z>
();<z>
final int debug_getNChildren() {<z>
{<z>
super.debug_getNChildren();<z>
;<z>
rule__ArrayRange__Group_3__0__Impl() throws RecognitionException {<z>
();<z>
));<z>
.FOLLOW_KEYWORD_13_in_rule__ArrayRange__Group_3__0__Impl8220);<z>
.getFullStopFullStopKeyword_3_0());<z>
) {<z>
;<z>
,re);<z>
);<z>
, TransformationSupport support, MutableComponentModel model)<z>
keySet())<z>
plasticClass.getAnnotation(c);<z>
!= null)<z>
(c);<z>
(model, annotation);<z>
(IFeatureInfo info, int index) throws CoreException {<z>
();<z>
index];<z>
if (oldValue != null) {<z>
FeatureInfo) oldValue).setInTheModel(true);<z>
info;<z>
property;<z>
index) {<z>
INFO_DESCRIPTION :<z>
= P_DESCRIPTION;<z>
:<z>
;<z>
case INFO_COPYRIGHT :<z>
;<z>
;<z>
(AccumuloConfiguration conf) {<z>
();<z>
new HashMap<Long,Session>();<z>
TSERV_SESSION_MAXIDLE);<z>
= new TimerTask() {<z>
public void run() {<z>
maxIdle);<z>
, 1000));<z>
description,<z>
, String creatorId,<z>
, String content,<z>
) {<z>
this.pk = pk;<z>
.name = name;<z>
this.description = description;<z>
;<z>
this.beginDate = beginDate;<z>
= endDate;<z>
creatorId = creatorId;<z>
importance;<z>
this.version = version;<z>
keywords;<z>
.content = content;<z>
this.status = status;<z>
;<z>
readFileList(PolicyInfo info) throws IOException {<z>
fileListPath = info.getFileListPath();<z>
);<z>
(fileListPath == null) {<z>
;<z>
);<z>
.getProperty("targetReplication"));<z>
policyName = info.getName();<z>
= policyStateMap.get(policyName);<z>
)) {<z>
now();<z>
fileListPath);<z>
new BufferedReader(new InputStreamReader(in));<z>
{<z>
+ fileListPath, e);<z>
list;<z>
= null;<z>
readLine()) != null) {<z>
);<z>
FileSystem fs = p.getFileSystem(conf);<z>
makeQualified(p);<z>
FileStatus stat = null;<z>
fs, p);<z>
{<z>
targetReplication) {<z>
add(stat);<z>
selectLimit) {<z>
{<z>
();<z>
IOException e) {<z>
LOG.error("Encountered error in file list read ", e);<z>
.resetFileListRead();<z>
;<z>
getTool(Point2D.Double p)<z>
boolean showText = false;<z>
contains(p)) showText = true;<z>
&& showText)<z>
path.outlineContains(p, 10.0))<z>
= false;<z>
, 3.0))<z>
;<z>
)<z>
);<z>
);<z>
;<z>
> getTypesToCheck() {<z>
);<z>
)))<z>
(t != null)<z>
.getClassifier(), t);<z>
();<z>
isEmpty())<z>
);<z>
: incomming)<z>
().getTypes())<z>
))<z>
.values();<z>
();<z>
groupRequired() {<z>
_currentIsFirstInGroup) {<z>
= false;<z>
return true;<z>
{<z>
;<z>
public void loadState(IPath path) {<z>
();<z>
file.exists()) {<z>
connections.clear();<z>
FileReader reader = null;<z>
reader = new FileReader(file);<z>
memento = XMLMemento.createReadRoot(reader);<z>
{<z>
SiteConnection siteConnection = restoreConnection(child);<z>
!= null && siteConnection.shouldRestore()) {<z>
add(siteConnection);<z>
catch (IOException e) {<z>
(SyncingPlugin.getDefault(),<z>
.SiteConnectionManager_ERR_FailedToLoadConnections, e);<z>
catch (CoreException e) {<z>
);<z>
catch (Exception e1) {<z>
(SyncingPlugin.getDefault(),<z>
e1);<z>
{<z>
if (reader != null) {<z>
;<z>
e) {<z>
refresh()<z>
).getSymbolicName();<z>
().getName();<z>
.getDescription();<z>
.getBundleInfo().getVersion();<z>
.getBundleInfo().getVendor();<z>
getBundleInfo().getFragmentHost();<z>
.getBundleInfo().getActivator();<z>
(name);<z>
);<z>
;<z>
);<z>
.setValue(provider);<z>
fragmentHostEntry.setValue(fragmentHost);<z>
;<z>
);<z>
getDestination(Room room, String portalName) {<z>
room, portalName));<z>
) {<z>
.println("Portal identifier " + portalName + " not found.");<z>
return null;<z>
) {<z>
)) {<z>
("en");<z>
,<z>
,<z>
;<z>
setDefault(locale);<z>
);<z>
GuiUtils.setLocale(locale);<z>
I18n.setLocale(locale);<z>
( )<z>
;<z>
javac.tree.JCTree.JCExpression> makeParams(<z>
parameters )<z>
.tools.javac.util.List<z>
JCExpression>nil();<z>
parameters.entrySet() )<z>
getValue() ) );<z>
result;<z>
(final EqualityKey key) {<z>
this.assertMap.put( key,<z>
);<z>
protected Composite createNameText(Composite parent) {<z>
);<z>
SWT.BORDER);<z>
nameData = new GridData(GridData.FILL_HORIZONTAL);<z>
);<z>
addFocusListener(new FocusAdapter() {<z>
SuppressWarnings("synthetic-access")<z>
void focusLost(FocusEvent e) {<z>
(propertiesEditionComponent != null)<z>
)));<z>
);<z>
.addKeyListener(new KeyAdapter() {<z>
"synthetic-access")<z>
void keyPressed(KeyEvent e) {<z>
== SWT.CR) {<z>
null)<z>
()));<z>
);<z>
, UmlViewsRepository.DeploymentSpecification.Properties.name);<z>
(name, "eef::Text");<z>
UmlViewsRepository.SWT_KIND), null);<z>
return parent;<z>
int pts) {<z>
;<z>
);<z>
;<z>
protected User _getCurrentUser() {<z>
User currentUser = null;<z>
getUser();<z>
IllegalStateException e) {<z>
;<z>
new Parcelable.Creator<Context>() {<z>
Context createFromParcel(Parcel in) {<z>
(in);<z>
[] newArray(int size) {<z>
];<z>
(int featureID) {<z>
{<z>
GMFGraphPackage.CUSTOM_FIGURE__QUALIFIED_CLASS_NAME:<z>
equals(qualifiedClassName);<z>
.CUSTOM_FIGURE__CUSTOM_CHILDREN:<z>
customChildren.isEmpty();<z>
featureID);<z>
)<z>
.size())<z>
null);<z>
public void shutdown()<z>
);<z>
1000, TimeUnit.SECONDS );<z>
catch ( InterruptedException e )<z>
<DoubleValueBean> getBeanList(String currentValue) {<z>
= new ArrayList<DoubleValueBean>(7);<z>
ret;<z>
> vals = DOEUtils.expand(currentValue);<z>
DoubleValueBean(dbl.doubleValue()));<z>
return ret;<z>
setDeactivateEvent(JsScopeUiEvent deactivate)<z>
;<z>
this;<z>
(OEntity var1) {<z>
var1);<z>
, this.bh)));<z>
));<z>
handleInsert(InsertionContext context, LookupElement item) {<z>
();<z>
Document doc = context.getDocument();<z>
"(){\n}()");<z>
editor = context.getEditor();<z>
;<z>
, line, line + 1);<z>
);<z>
value, SingleKeyValueProperty keyValueProperty)<z>
InvalidXMLDataException, InvalidObjectSpecificationException, AccessorInvocationException {<z>
value, object);<z>
} catch (NumberFormatException e) {<z>
.getName() + ": keyValueProperty "<z>
);<z>
) {<z>
e;<z>
{<z>
": keyValueProperty "<z>
);<z>
UrlFragments srcUrlFragments, UrlFragments destUrlFragments) {<z>
{<z>
getFragment());<z>
repositoryUrl, String taskId) {<z>
repositoryUrl);<z>
isNotNull(taskId);<z>
tasks) {<z>
getTaskId().equals(taskId)) {<z>
;<z>
null;<z>
artifactDescriptorInvalid( RepositoryEvent event )<z>
( "Invalid artifact descriptor for " + event.getArtifact() + ": "<z>
.getException().getMessage() );<z>
getTypeInterceptors(AnnotatedType<?> beanType)<z>
interceptors = _interceptorMap.get(beanType);<z>
(interceptors == null) {<z>
(beanType);<z>
);<z>
interceptors;<z>
(RI iterable)<z>
== null)<z>
);<z>
<E>(iterable);<z>
<Contact> map) {<z>
.constructArray();<z>
.getKeys();<z>
) {<z>
get(i));<z>
set(i, contact);<z>
;<z>
private String findResource(String path) {<z>
path);<z>
.exists()) {<z>
server.getHopHome(), path);<z>
;<z>
) throws DataException<z>
if ( this.rowCount == 0 )<z>
.exprValueMap == null )<z>
.exprValueMap = this.getValueMap( );<z>
else if ( currReadIndex < currRowIndex + 1 )<z>
;<z>
;<z>
+ 1;<z>
IOException e )<z>
RD_LOAD_ERROR,<z>
);<z>
return exprValueMap;<z>
boolean isApprovedSectionContentOnly()<z>
sectionFilterStatus == SectionFilterStatus.APPROVED_ONLY )<z>
;<z>
;<z>
) {<z>
()) {<z>
;<z>
{<z>
errorType;<z>
storage) {<z>
;<z>
.streamNumber = streamNumber;<z>
= name;<z>
host;<z>
.storage = storage;<z>
(final LoanAndGrantData loanAndGrantData) {<z>
isEmpty(loanAndGrantData.title)) {<z>
(loanAndGrantData.title);<z>
View.VISIBLE);<z>
.GONE);<z>
)) {<z>
));<z>
.scrollTo(0, 0);<z>
.setVisibility(View.VISIBLE);<z>
);<z>
.setVisibility(View.GONE);<z>
{<z>
urlLabel.setText(loanAndGrantData.url);<z>
.GONE);<z>
(!isEmpty(loanAndGrantData.state)) {<z>
locationLabel.setText(loanAndGrantData.state);<z>
setVisibility(View.VISIBLE);<z>
View.GONE);<z>
{<z>
setText(loanAndGrantData.governmentType);<z>
View.VISIBLE);<z>
governmentTypeRow.setVisibility(View.GONE);<z>
loanAndGrantData.loanType)) {<z>
loanTypeLabel.setText(loanAndGrantData.loanType);<z>
VISIBLE);<z>
.GONE);<z>
!isEmpty(loanAndGrantData.agency)) {<z>
);<z>
setVisibility(View.VISIBLE);<z>
.GONE);<z>
.industry)) {<z>
.industry);<z>
setVisibility(View.VISIBLE);<z>
GONE);<z>
GONE);<z>
? View.VISIBLE : View.GONE);<z>
);<z>
View.VISIBLE : View.GONE);<z>
? View.VISIBLE : View.GONE);<z>
? View.VISIBLE : View.GONE);<z>
.GONE);<z>
View.GONE);<z>
GONE);<z>
VISIBLE : View.GONE);<z>
.VISIBLE : View.GONE);<z>
VISIBLE);<z>
.VISIBLE);<z>
OnClickListener() {<z>
{<z>
visitData(loanAndGrantData);<z>
});<z>
(new View.OnClickListener() {<z>
public void onClick(View v) {<z>
;<z>
);<z>
String createNewName(ICompilationUnit cu, IPackageFragment destination) {<z>
.getElementName()))<z>
;<z>
))<z>
null;<z>
= 1;<z>
(true) {<z>
;<z>
== 1)<z>
cu.getElementName());<z>
cu.getElementName()});<z>
&& !fAutoGeneratedNewNames.contains(newName)) {<z>
add(newName);<z>
.removeJavaLikeExtension(newName);<z>
i++;<z>
{<z>
Class>();<z>
for (Class c : getClasses())<z>
(ac))<z>
c);<z>
s;<z>
shareActivityForUser(JRAuthenticatedUser user) {<z>
"[shareActivityForUser]");<z>
.getProviderName());<z>
)<z>
, -1);<z>
) > descMaxChars) {<z>
(0, 255));<z>
.getDeviceToken();<z>
toJson();<z>
(activityJson);<z>
new StringBuilder();<z>
;<z>
append("&device_token=").append(deviceToken);<z>
("&url_shortening=true");<z>
user.getProviderName());<z>
);<z>
.append(mUrlEncodedAppName);<z>
() + "/api/v2/activity";<z>
+ url + " data: " + body);<z>
JRDictionary();<z>
, USERDATA_ACTION_SHARE_ACTIVITY);<z>
.put(USERDATA_ACTIVITY_KEY, mActivity);<z>
));<z>
.getBytes());<z>
TAG, "[shareActivityForUser] connection started for url: " + url);<z>
ResolveInfo newResult(PackageParser.ServiceIntentInfo filter,<z>
match) {<z>
filter;<z>
service.info, mFlags)) {<z>
return null;<z>
PackageParser.Service service = info.service;<z>
applicationInfo.flags<z>
) == 0) {<z>
null;<z>
final ResolveInfo res = new ResolveInfo();<z>
= PackageParser.generateServiceInfo(service,<z>
);<z>
!= 0) {<z>
= filter;<z>
;<z>
.mPreferredOrder;<z>
= match;<z>
info.hasDefault;<z>
.labelRes;<z>
nonLocalizedLabel;<z>
res.icon = info.icon;<z>
res;<z>
int countByGroupId(long groupId) throws SystemException {<z>
;<z>
getResult(FINDER_PATH_COUNT_BY_GROUPID,<z>
);<z>
{<z>
new StringBundler(2);<z>
.append(_SQL_COUNT_BLOGSSTATSUSER_WHERE);<z>
append(_FINDER_COLUMN_GROUPID_GROUPID_2);<z>
sql = query.toString();<z>
Session session = null;<z>
;<z>
;<z>
.getInstance(q);<z>
add(groupId);<z>
Long)q.uniqueResult();<z>
) {<z>
);<z>
) {<z>
valueOf(0);<z>
(FINDER_PATH_COUNT_BY_GROUPID,<z>
, count);<z>
(session);<z>
.intValue();<z>
private static ClassMapping findClassMapping(MetaDataContext context,<z>
rel) {<z>
isClassMappingName(clsName, cls))<z>
;<z>
if (isClassMappingName(clsName, rel))<z>
return rel;<z>
_loc.get("target-wrong-cls", new Object[]<z>
, cls, rel }));<z>
private void processInput(String input) {<z>
(!input.equals("quit")) {<z>
= handleChangeRequest(input);<z>
(scale) {<z>
initialWorkers);<z>
catch (Exception ignored) {<z>
{<z>
boolean warn = log.isWarnEnabled();<z>
();<z>
("objectClass");<z>
) {<z>
objectClass.getValues()) {<z>
.toString().toLowerCase();<z>
) {<z>
);<z>
false;<z>
true;<z>
owner, Object feature,<z>
Object child, Collection<?> selection) {<z>
childFeature = feature;<z>
= child;<z>
== UtilitiesPackage.Literals.EXPRESSION_IN_OCL__BODY_EXPRESSION<z>
.Literals.EXPRESSION_IN_OCL__GENERATED_TYPE<z>
== UtilitiesPackage.Literals.EXPRESSION_IN_OCL__CONTEXT_VARIABLE<z>
EXPRESSION_IN_OCL__RESULT_VARIABLE<z>
;<z>
{<z>
return getString("_UI_CreateChild_text2",<z>
]{getTypeText(childObject),<z>
, getTypeText(owner)});<z>
, child, selection);<z>
(null) {<z>
{<z>
'[');<z>
target);<z>
target.append(']');<z>
) {<z>
();<z>
objectfabric.Transaction inner = startRead_objectfabric(outer);<z>
(inner, INT4_INDEX);<z>
: 0;<z>
);<z>
;<z>
(String s, char splitChar) {<z>
));<z>
) {<z>
{<z>
;<z>
.longitude) {<z>
return -1;<z>
0;<z>
() {<z>
;<z>
;<z>
= null;<z>
;<z>
[] words, int len)<z>
words == null)<z>
make (len);<z>
wordsNeeded (words, len);<z>
<= 1)<z>
: make (words[0]);<z>
= new IntNum ();<z>
= words;<z>
num.ival = len;<z>
;<z>
.commands.Command getConnectionCompleteCommand(<z>
CreateConnectionRequest request )<z>
(ConnectionCommand) request.getStartCommand( );<z>
== null )<z>
null;<z>
getSource( );<z>
( !( getHost( ) instanceof ColumnEditPart )<z>
( ) == sourcePart<z>
getParent( ) == sourcePart.getParent( ) )<z>
;<z>
getHost( );<z>
( targetPart );<z>
addJoinConditionCommand = new AddJoinConditionCommand( sourcePart,<z>
;<z>
return addJoinConditionCommand;<z>
ucar.nc2.NetcdfFile file,<z>
CancelTask cancelTask) throws IOException {<z>
file;<z>
myRaf = raf;<z>
headerParser = new FysatHeader();<z>
read(myRaf, ncfile);<z>
;<z>
int totalCurrentUsers) {<z>
.MOST_USERS_EVER_ONLINE);<z>
== null) {<z>
= new MostUsersEverOnline();<z>
.setDate(new Date());<z>
totalCurrentUsers);<z>
= new Config();<z>
MOST_USERS_EVER_ONLINE);<z>
getTotal());<z>
repository.add(config);<z>
most;<z>
;<z>
();<z>
p[1]) : 0;<z>
> total) {<z>
.setDate(new Date());<z>
(totalCurrentUsers);<z>
));<z>
update(config);<z>
return most;<z>
));<z>
);<z>
most;<z>
boolean isNewData, ExprEvaluatorContext exprEvaluatorContext)<z>
)<z>
size() - 1;<z>
0) && (leftResult == null))<z>
return null;<z>
false;<z>
= false;<z>
i <= len; i++)<z>
isNewData, exprEvaluatorContext);<z>
null)<z>
= true;<z>
if (!mustCoerce)<z>
leftResult.equals(rightResult))<z>
return false;<z>
) rightResult);<z>
)<z>
false;<z>
= true;<z>
!hasNonNullRow) || (hasNullRow))<z>
;<z>
;<z>
().size() - 1;<z>
) && (leftResult == null))<z>
return null;<z>
= false;<z>
hasNullRow = false;<z>
i++)<z>
evaluate(eventsPerStream, isNewData, exprEvaluatorContext);<z>
if (rightResult != null)<z>
;<z>
(!mustCoerce)<z>
!leftResult.equals(rightResult))<z>
return false;<z>
rightResult);<z>
!leftResult.equals(right))<z>
false;<z>
hasNullRow = true;<z>
!hasNonNullRow) || (hasNullRow))<z>
null;<z>
;<z>
, PdfIndirectReference outlines, PdfWriter writer) {<z>
);<z>
writer = writer;<z>
, pages);<z>
.USEOUTLINES);<z>
outlines);<z>
SQLException {<z>
;<z>
) {<z>
MySQLpricelist.removeAll();<z>
} else {<z>
.clear();<z>
save();<z>
(String username, String password)<z>
throws CannotCreateSessionException, PermissionDeniedException,<z>
!= null) {<z>
ClientError(<z>
"Session already active. Create a new omero.client or closeSession()");<z>
{<z>
(__previous == null) {<z>
ClientError(<z>
;<z>
(__previous);<z>
__previous = null;<z>
username == null) {<z>
("omero.user");<z>
.equals(username)) {<z>
ClientError("No username specified");<z>
null) {<z>
= getProperty("omero.pass");<z>
{<z>
"No password specified");<z>
prx = null;<z>
0;<z>
3) {<z>
reason = null;<z>
) {<z>
__ic.getLogger().warning(<z>
" - createSession retry: " + retries);<z>
(getImplicitContext().getContext());<z>
put(AGENT.value, __agent);<z>
);<z>
, ctx);<z>
, rtr);<z>
();<z>
Ice.Identity();<z>
.name = __uuid;<z>
.category = rtr.getCategoryForClient();<z>
.__ic, this.__oa);<z>
, id);<z>
{<z>
{<z>
;<z>
+ ":" + wrapped.reason;<z>
;<z>
ConnectTimeoutException cte) {<z>
;<z>
;<z>
{<z>
ClientError("Obtained null object proxy");<z>
.uncheckedCast(prx);<z>
{<z>
ClientError(<z>
"Obtained object proxy is not a ServiceFactory");<z>
.getPropertyWithDefault(<z>
, "-1");<z>
valueOf(keep_alive);<z>
i);<z>
} catch (NumberFormatException nfe) {<z>
__cb.id);<z>
setCallback(ClientCallbackPrxHelper.uncheckedCast(raw));<z>
} catch (RuntimeException e) {<z>
);<z>
throw e;<z>
} catch (Exception e) {<z>
();<z>
RuntimeException(e);<z>
value, getSessionId());<z>
return this.__sf;<z>
Integer findPOrderSlipLineCntByCondition(<z>
throws ServiceException {<z>
= super.createSqlParam();<z>
param);<z>
setConditionParam(conditions, param);<z>
(Integer.class,<z>
param)<z>
.getSingleResult();<z>
Exception e) {<z>
);<z>
rule__ImportExpression__ValuesAssignment_2_1_1() throws RecognitionException {<z>
keepStackSize();<z>
0 ) {<z>
());<z>
pushFollow(FOLLOW_ruleQuotedString_in_rule__ImportExpression__ValuesAssignment_2_1_130345);<z>
ruleQuotedString();<z>
_fsp--;<z>
(state.failed) return ;<z>
==0 ) {<z>
.getImportExpressionAccess().getValuesQuotedStringParserRuleCall_2_1_1_0());<z>
catch (RecognitionException re) {<z>
;<z>
);<z>
);<z>
Object hidden, Object seen, int steps) {<z>
double total = 0;<z>
steps; i++) {<z>
(hidden, seen, steps);<z>
total;<z>
device, String profile)<z>
equals("GL")) {<z>
;<z>
, true);<z>
glpMap.get(profile);<z>
== glp) {<z>
));<z>
;<z>
public DoubleAssert isNotEqualTo(double other) {<z>
) return this;<z>
;<z>
(unexpectedEqual(actual, other));<z>
)<z>
null;<z>
null;<z>
) {<z>
(myShortPaths.isEmpty()) {<z>
);<z>
;<z>
(CaseInsensitiveString columnCase, Cell cell) {<z>
) {<z>
(<z>
;<z>
public final void rule__ExpCS__Group_0__2__Impl() throws RecognitionException {<z>
stackSize = keepStackSize();<z>
==0 ) {<z>
.getExpCSAccess().getOwnedExpressionAssignment_0_2());<z>
pushFollow(FollowSets000.FOLLOW_rule__ExpCS__OwnedExpressionAssignment_0_2_in_rule__ExpCS__Group_0__2__Impl18501);<z>
);<z>
;<z>
(state.failed) return ;<z>
( state.backtracking==0 ) {<z>
.getOwnedExpressionAssignment_0_2());<z>
re) {<z>
;<z>
(input,re);<z>
stackSize);<z>
T content, int siteId) {<z>
this.pos = pos;<z>
this.type = type;<z>
;<z>
siteId=siteId;<z>
, final Composite parent) {<z>
TWISTIE | Section.EXPANDED);<z>
.ContractMeasureServicesQualityPropertiesEditionPart_ContractsmeasuresGroupLabel);<z>
GridData.FILL_HORIZONTAL);<z>
horizontalSpan = 3;<z>
;<z>
Composite contractsmeasuresGroup = widgetFactory.createComposite(contractsmeasuresSection);<z>
GridLayout();<z>
.numColumns = 3;<z>
;<z>
contractsmeasuresGroup);<z>
return contractsmeasuresGroup;<z>
getGeneralAnswerFbIsNotEmpty(){<z>
dat.isNotEmpty(getGeneralAnswerFeedback());<z>
void setLayout(boolean vertical) {<z>
];<z>
;<z>
=true;<z>
;<z>
;<z>
=0;<z>
=0;<z>
cph=0;<z>
=new UVec3();<z>
id=0;<z>
) {<z>
=new UVertexList();<z>
: nodes) {<z>
add(0,cpy);<z>
.max(cpw,n.width);<z>
.height-padding;<z>
1))) cpy+=padding;<z>
++;<z>
=0;<z>
=cpy;<z>
v[id++].y);<z>
(GUINode n : nodes) {<z>
n.isNewRow) {<z>
(cpw,cpx+last.width);<z>
=0;<z>
+=rowh;<z>
rowh=0;<z>
!=null) cpx+=last.width;<z>
cpy);<z>
cpw,cpx+n.width);<z>
,n.height);<z>
)-1) cph=cpy+rowh;<z>
last=n;<z>
id++;<z>
service(HttpServletRequest req,<z>
)<z>
IOException {<z>
;<z>
Throwable e) {<z>
log.error("Internal Morse Code error", e);<z>
());<z>
final EObject eObject) {<z>
(JdbcSource.class, eObject);<z>
= (JdbcSource) eObject;<z>
();<z>
int len, char[] convtBuf )<z>
< len )<z>
newLen = len * 2;<z>
newLen < 0 )<z>
= Integer.MAX_VALUE;<z>
;<z>
char aChar;<z>
;<z>
int outLen = 0;<z>
;<z>
< end )<z>
= in[off++];<z>
)<z>
[off++];<z>
)<z>
value = 0;<z>
)<z>
[off++];<z>
( aChar )<z>
case '0' :<z>
'1' :<z>
:<z>
'3' :<z>
case '4' :<z>
:<z>
'6' :<z>
'7' :<z>
'8' :<z>
:<z>
( value << 4 ) + aChar - '0';<z>
:<z>
case 'b' :<z>
:<z>
:<z>
:<z>
case 'f' :<z>
aChar - 'a';<z>
case 'A' :<z>
case 'B' :<z>
case 'C' :<z>
'D' :<z>
'E' :<z>
:<z>
+ 10 + aChar - 'A';<z>
new IllegalArgumentException( "Malformed \\uxxxx encoding." );<z>
outLen++] = (char) value;<z>
if ( aChar == 't' )<z>
= '\t';<z>
aChar == 'r' )<z>
'\r';<z>
'n' )<z>
'\n';<z>
if ( aChar == 'f' )<z>
= '\f';<z>
aChar;<z>
) aChar;<z>
0, outLen );<z>
RecognitionException {<z>
;<z>
));<z>
pushFollow(FOLLOW_ruleMULTIPLICITY_in_rule__Port__MultiplicityAssignment_343798);<z>
);<z>
--;<z>
());<z>
catch (RecognitionException re) {<z>
;<z>
re);<z>
stackSize);<z>
private PooledByteBuffer allocateContainer() {<z>
PooledByteBuffer buf;<z>
{<z>
containerStack.pop();<z>
{<z>
new PooledByteBuffer();<z>
return buf;<z>
IDocument d, DocumentCommand c) {<z>
c.offset;<z>
== 0)<z>
? offset - 1 : offset);<z>
d.getLineInformationOfOffset(p);<z>
int lineOffset= line.getOffset();<z>
, lineOffset, offset);<z>
lineOffset, "indentation must not be negative");<z>
text);<z>
prefix= findPrefixRange(d, line);<z>
(), prefix.getLength());<z>
, prefix.getLength());<z>
);<z>
< offset) {<z>
) == '/') {<z>
.append(" * ");<z>
) {<z>
.shiftsCaret= false;<z>
+ buf.length();<z>
);<z>
();<z>
p;<z>
replacementLength);<z>
= lineDelimiter + indentation + " */";<z>
.EDITOR_ADD_JAVADOC_TAGS)) {<z>
);<z>
ICompilationUnit unit= getCompilationUnit();<z>
{<z>
;<z>
c, indentation, lineDelimiter, unit);<z>
restOfLine);<z>
.equals("*"))<z>
buf.append(string);<z>
) {<z>
{<z>
;<z>
buf.append(restOfLine);<z>
.append(endTag);<z>
.getLength())<z>
lengthToAdd;<z>
toString();<z>
BadLocationException excp) {<z>
() {<z>
this.height != 0) {<z>
;<z>
this.db.execute("select height from users where uid = " +<z>
.uid + ";");<z>
0;<z>
== null) {<z>
1;<z>
) {<z>
rs.getDouble("height");<z>
;<z>
(SQLException e) {<z>
return 0;<z>
return height;<z>
() {<z>
_xsd == null) {<z>
StringPool.BLANK;<z>
_xsd;<z>
onZeroOrMore(DZeroOrMorePattern p) {<z>
start("zeroOrMore");<z>
);<z>
unwrapGroup(p.getChild());<z>
;<z>
;<z>
equals(Object entry) {<z>
{<z>
;<z>
instanceof LSBCacheEntry)) {<z>
;<z>
;<z>
(oEntry.font) &&<z>
oEntry.frc));<z>
) throws Exception {<z>
{<z>
Exception("properties not provided, don't know where to listen");<z>
= null;<z>
networkContacts = new HashMap();<z>
keySet()) {<z>
;<z>
)) {<z>
properties.getProperty(propName);<z>
== null) {<z>
.trim();<z>
.length() == 0) {<z>
;<z>
("http://" + value);<z>
e) {<z>
throw new Exception("Invalid host:port value in "+ propName +<z>
);<z>
length()) {<z>
;<z>
length()) == '.') {<z>
CONTACT_SOCKET_PREFIX.length()+1);<z>
length() == 0) {<z>
throw new Exception("Missing network name in property: " + propName);<z>
url);<z>
URL> listenSockets;<z>
{<z>
(networkContacts.isEmpty()) {<z>
("if the metadata server listens on all interfaces (0.0.0.0), " +<z>
CONTACT_SOCKET_PREFIX + ".public\"");<z>
);<z>
{<z>
networkContacts.values());<z>
) {<z>
);<z>
listenSockets = listenSockets;<z>
.defaultContact = defaultContact;<z>
networkContacts;<z>
boolean eIsSet(int featureID) {<z>
(featureID) {<z>
case ExpressionsPackage.UNLIMITED_NATURAL_LITERAL_EXP__INTEGER_SYMBOL :<z>
== null<z>
null<z>
equals(integerSymbol);<z>
UNLIMITED_NATURAL_LITERAL_EXP__UNLIMITED :<z>
() != UNLIMITED_EDEFAULT;<z>
case ExpressionsPackage.UNLIMITED_NATURAL_LITERAL_EXP__EXTENDED_INTEGER_SYMBOL :<z>
== null<z>
null<z>
: !EXTENDED_INTEGER_SYMBOL_EDEFAULT<z>
(extendedIntegerSymbol);<z>
UNLIMITED_NATURAL_LITERAL_EXP__LONG_SYMBOL :<z>
return LONG_SYMBOL_EDEFAULT == null<z>
null<z>
;<z>
eIsSet(featureID);<z>
refresh() {<z>
if (url != null) {<z>
+description+"</a></html>");<z>
);<z>
, tr("Right click = copy to clipboard")));<z>
{<z>
+ description + "</html>");<z>
null);<z>
(null);<z>
longClick(final OnLongClickListener listener) {<z>
$Action<Object>() {<z>
Object object, Activity link, int index) {<z>
View) {<z>
) object;<z>
(listener);<z>
);<z>
;<z>
field) {<z>
(field) {<z>
case HOST:<z>
();<z>
();<z>
g )<z>
, 0 );<z>
;<z>
( _currentFrame >= _numFrames ) {<z>
_currentFrame = 0;<z>
{<z>
;<z>
.description = description;<z>
, this);<z>
public static ILocalVariable createUnresolvedLocaVariable(final VariableBinding compilerBinding,<z>
final JavaElement parent) {<z>
;<z>
parent);<z>
name = new String(compilerBinding.name);<z>
compilerBinding.type.signature());<z>
.modifiers,<z>
());<z>
> dependencies,<z>
) {<z>
IndexerDebugOptions.STORAGE_CALLS,<z>
;<z>
isEmpty()) {<z>
;<z>
{<z>
;<z>
() {<z>
Log log = new Log();<z>
+ conn.getConnectionIp());<z>
("was called", "ServerThread");<z>
);<z>
.receive();<z>
e) {<z>
.printStackTrace();<z>
catch (IOException e) {<z>
);<z>
image){<z>
pdf, page);<z>
out.println("CACHE: ADD: " + key);<z>
.put(key, image);<z>
(useDisk){<z>
;<z>
(saveFilePath).mkdirs();<z>
.getAbsolutePath());<z>
key);<z>
(saveFilePath).exists()){<z>
().save(saveFilePath);<z>
(Throwable e) {<z>
.println(e.getMessage());<z>
());<z>
);<z>
maxScore) {<z>
offset=offset;<z>
this.len=len;<z>
docs;<z>
.scores=scores;<z>
matches;<z>
.maxScore=maxScore;<z>
T> iterator, C closure) {<z>
(iterator != null && closure != null) {<z>
()) {<z>
next());<z>
return closure;<z>
AccessPermission perms)<z>
permissions = perms;<z>
userPass;<z>
;<z>
) {<z>
.clear();<z>
{<z>
();<z>
name);<z>
) {<z>
getRootChecker();<z>
null) {<z>
(name, checker);<z>
<? extends GrantedAuthority> authorities) {<z>
sortedAuthorities =<z>
GrantedAuthority>(new AuthorityComparator());<z>
{<z>
add(grantedAuthority);<z>
;<z>
) {<z>
)) {<z>
);<z>
(loc)) {<z>
log(Level.WARNING, String.format(<z>
.getId()));<z>
loc, spawn.getHp(), spawn<z>
.getKeeper());<z>
refreshFigure( )<z>
getHandle( ),<z>
getBorder( ) );<z>
getListHandleAdapt( ).getSize( ) );<z>
) );<z>
;<z>
DesignElementHandle) getModel( ) );<z>
getParent( ) ).setLayoutConstraint( this,<z>
),<z>
;<z>
markDirty( );<z>
(){<z>
makeInfo(<z>
);<z>
{<z>
webappUrl.startsWith("/"), "Webapp URL must start with a slash.");<z>
Publication publication = null;<z>
1);<z>
length() > 0) {<z>
;<z>
pubId = info.getPublicationId();<z>
) WebAppContextUtils<z>
(ProcessInfoProvider.ROLE);<z>
();<z>
getSession(request);<z>
pubId)) {<z>
);<z>
) {<z>
AccessControlException(e);<z>
!= null) {<z>
"] exists.");<z>
publication;<z>
Object handleRuntimeOperationsException(ProxyContext ctx,<z>
RuntimeOperationsException e,<z>
[] args)<z>
.getTargetException();<z>
) throws RepositoryException {<z>
nodePath == null) {<z>
new UnsupportedRepositoryOperationException("JCR-2774");<z>
session.nodeExists(nodePath)) {<z>
nodePath);<z>
isNodeType(NT_REP_ACE)) {<z>
" defines ACL or ACE.");<z>
par1Str)<z>
- 1)).equals(par1Str))<z>
getSentMessageList().add(par1Str);<z>
);<z>
name) {<z>
Field result = type.getDeclaredField(name);<z>
setAccessible(true);<z>
result;<z>
} catch (NoSuchFieldException e) {<z>
new IllegalArgumentException("Could not access "<z>
.getName()<z>
+ e.getMessage());<z>
static String getAminoAcid1(String codon)<z>
AminoAcid aminoAcid : AminoAcid.values())<z>
.name().equals(codon))<z>
.getCode_1();<z>
;<z>
() {<z>
backtracking++;<z>
start = input.mark();<z>
;<z>
) {<z>
.println("impossible: "+re);<z>
!state.failed;<z>
.rewind(start);<z>
;<z>
=false;<z>
success;<z>
static _Fields findByThriftId(int fieldId) {<z>
(fieldId) {<z>
case 1:<z>
TRACKERS;<z>
return null;<z>
file) {<z>
(!TestUtils.isTest(file)) {<z>
LineUtil.countLines(file);<z>
Double2D location, String id, double diameter)<z>
diameter, Color.BLUE, id);<z>
agentLocation = location;<z>
(8));<z>
e)<z>
.err.println("Exception generated: " + e);<z>
);<z>
;<z>
catch (NumberFormatException e)<z>
e);<z>
.printStackTrace();<z>
.exit(1);<z>
public ExplicitAcceptDispositionChangeListener(QueueEntry entry, Subscription_0_10 subscription_0_10)<z>
_entry = entry;<z>
;<z>
protected void configureShell(Shell shell) {<z>
.configureShell(shell);<z>
isMulti)<z>
EEFRuntimeUIMessages.EMFModelViewerDialog_multi_selection_title);<z>
setText(EEFRuntimeUIMessages.EMFModelViewerDialog_single_element_title);<z>
void onFrameChanged(final Object selectedValue) {<z>
selectedValue) {<z>
new Runnable() {<z>
run() {<z>
();<z>
);<z>
if (selectedValue instanceof XStackFrame) {<z>
selectedValue;<z>
;<z>
(Script script) {<z>
> functions = getFunctions();<z>
();<z>
){<z>
();<z>
functions.get(key));<z>
reloadLogicalToPhysical() {<z>
, String> p2n = getLogicalNodeMap();<z>
;<z>
) {<z>
)) {<z>
LOG.warn("logical node mapped to two physical nodes!");<z>
));<z>
) {<z>
TsapiTrace.traceEntry("getObservers[]", this);<z>
tsCall.getHandOff();<z>
);<z>
== null)<z>
) == 0)) {<z>
("getObservers[]", this);<z>
return null;<z>
<CallObserver>();<z>
) {<z>
i$.next();<z>
)<z>
;<z>
("getObservers[]", this);<z>
()];<z>
.toArray(observerArray);<z>
{<z>
privData = null;<z>
throws TException {<z>
field;<z>
();<z>
(true)<z>
= iprot.readFieldBegin();<z>
STOP) {<z>
switch (field.id) {<z>
:<z>
== TType.STRING) {<z>
= iprot.readString();<z>
{<z>
field.type);<z>
:<z>
{<z>
iprot.readListBegin();<z>
[]>(_list45.size);<z>
++_i46)<z>
] _elem47;<z>
();<z>
_elem47);<z>
;<z>
else {<z>
(iprot, field.type);<z>
skip(iprot, field.type);<z>
.readFieldEnd();<z>
);<z>
;<z>
Database db, Integer languageId)<z>
= "" + languageId;<z>
.info("key:" + key);<z>
)CacheController.getCachedObject("localeCache", key);<z>
(locale != null)<z>
+ locale);<z>
;<z>
languageId != null)<z>
languageVO = getLanguageVO(db, languageId);<z>
new Locale(languageVO.getLanguageCode());<z>
)<z>
+ e, e);<z>
;<z>
locale;<z>
control) {<z>
(this) {<z>
{<z>
+ control);<z>
) {<z>
= new byte[1];<z>
message[0] = (byte)control;<z>
message.length, 0);<z>
{<z>
) return true;<z>
) return true;<z>
;<z>
) {<z>
null) {<z>
"AuthUtils.createSignOfByteAray() bytes cannot be NULL");<z>
bytes.length);<z>
, ContentValues values) {<z>
mDatabase.isReadOnly()){<z>
getWritableDatabase();<z>
, null, values);<z>
(double in, double out){<z>
.add(in);<z>
);<z>
Ind = 0;<z>
Oud = 0;<z>
{<z>
{<z>
return null;<z>
;<z>
{<z>
switch (featureID) {<z>
case RDFPackage.URI_ELEMENT__URI:<z>
null : !URI_EDEFAULT.equals(uri);<z>
URI_ELEMENT__NAMESPACE:<z>
!= null;<z>
return super.eIsSet(featureID);<z>
Exception<z>
))<z>
logMethodIn(<z>
TRACE,<z>
new Object[]{<z>
, id<z>
flush();<z>
(id);<z>
;<z>
String groupId =<z>
.createGroupKey(plGroupName,<z>
)));<z>
isCreateMembership(m.getMembershipType()) &&<z>
m.getMembershipType()))<z>
)<z>
(<z>
TRACE,<z>
m;<z>
(Exception e)<z>
("Identity operation error: ", e);<z>
getMembershipType()) &&<z>
(groupId, m.getUserName()))<z>
if (log.isTraceEnabled())<z>
logMethodOut(<z>
LogLevel.TRACE,<z>
m;<z>
catch (Exception e)<z>
handleException("Identity operation error: ", e);<z>
log.isTraceEnabled())<z>
.logMethodOut(<z>
LogLevel.TRACE,<z>
return null;<z>
(String url, XMLElement xml) {<z>
rootNode = xml;<z>
State.READY;<z>
this.getNumOutlets());<z>
Bundle savedInstanceState) {<z>
super.onCreate(savedInstanceState);<z>
layout.manage_category);<z>
;<z>
.topFunction(this);<z>
(R.id.lv_categoryAll);<z>
R.id.btn_newCategory);<z>
(), Publics.list_Category);<z>
btn_categoryNew.setOnClickListener(handleAddNew);<z>
(cateAdapter);<z>
.setOnItemClickListener(handleClick);<z>
;<z>
,<z>
Regexp regexp,<z>
,<z>
@Optional @Reference Value matchRef,<z>
,<z>
)<z>
(regexp == null)<z>
FALSE;<z>
EMPTY;<z>
.create(env, regexp, subject);<z>
ArrayValue regs;<z>
isDefault())<z>
regs = null;<z>
);<z>
, subject, offset) < 0) {<z>
null)<z>
);<z>
(regexpState);<z>
return LongValue.ZERO;<z>
0;<z>
regs != null) {<z>
) {<z>
);<z>
env));<z>
()));<z>
);<z>
regexpState.group(env));<z>
;<z>
i < count; i++) {<z>
)<z>
(env, i);<z>
(isOffsetCapture) {<z>
; j++) {<z>
new ArrayValueImpl();<z>
(empty);<z>
append(LongValue.MINUS_ONE);<z>
create(j), part);<z>
ArrayValueImpl();<z>
group);<z>
i)));<z>
;<z>
name != null)<z>
name, part);<z>
i), part);<z>
++) {<z>
);<z>
getGroupName(i);<z>
name != null)<z>
(name, group);<z>
(i), group);<z>
;<z>
;<z>
LongValue.ONE;<z>
void explicitWaitForPage() {<z>
WAIT_FOR_PAGE_TO_LOAD_TIME);<z>
{<z>
WebElement apply(WebDriver driver) {<z>
()) {<z>
);<z>
Exception e) {<z>
getMessage());<z>
return null;<z>
);<z>
)<z>
= true;<z>
( );<z>
() {<z>
)<z>
= new RegistryObjectFactoryMulti(this);<z>
;<z>
final RenderedImage image, final Function function){<z>
int visibleBand = CoverageUtilities.getVisibleBand(image);<z>
candidate = image.getColorModel();<z>
;<z>
;<z>
if(candidate instanceof IndexColorModel){<z>
IndexColorModel) candidate;<z>
final int mapSize = colors.getMapSize();<z>
int[mapSize];<z>
ARGB);<z>
;<z>
);<z>
(candidate instanceof ComponentColorModel){<z>
;<z>
();<z>
;<z>
TYPE_USHORT){<z>
;<z>
];<z>
0; j<mapSize;j++){<z>
*255/mapSize;<z>
255 << 24;<z>
;<z>
8;<z>
b = v << 0;<z>
= a|r|g|b;<z>
;<z>
1);<z>
{<z>
function);<z>
else{<z>
Errors.format(Errors.Keys.ILLEGAL_CLASS_$2,<z>
, IndexColorModel.class));<z>
setColorModel(model);<z>
, layout, null, OpImage.OP_COMPUTE_BOUND);<z>
List<String>> collectionShareData) {<z>
MIN_COLLECTION_ID;<z>
new HashMap<String, Integer>();<z>
entrySet()) {<z>
= data.getKey();<z>
data.getValue();<z>
null<z>
shareData.gnutella)) {<z>
.<Integer> emptyList());<z>
else {<z>
{<z>
String friend : shareData.friends) {<z>
.get(friend);<z>
{<z>
collectionId = currentId;<z>
, collectionId);<z>
collectionId, friend);<z>
);<z>
shareList.add(friend);<z>
.put(collectionId, shareList);<z>
;<z>
.get(createKey(file));<z>
<Integer> emptyList()) {<z>
);<z>
);<z>
collectionId);<z>
{<z>
.get(createKey(file));<z>
{<z>
(1);<z>
put(createKey(file), collections);<z>
add(DEFAULT_SHARED_COLLECTION_ID);<z>
(View view) {<z>
(view == mShuffleButton) {<z>
);<z>
== mRepeatButton) {<z>
();<z>
(int newHeight) {<z>
== null) {<z>
);<z>
minTouched = new int[len];<z>
];<z>
minTouched.length < newHeight) {<z>
newHeight,<z>
);<z>
= new int[len];<z>
len];<z>
, 0, newMinTouched, 0,<z>
;<z>
, 0,<z>
);<z>
newMinTouched;<z>
= newRowOffsetsRLE;<z>
addStationIDPropertyDescriptor(Object object)<z>
itemPropertyDescriptors.add(createItemPropertyDescriptor(<z>
(),<z>
),<z>
, "_UI_Station_stationID_feature", "_UI_Station_type"),<z>
ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,<z>
);<z>
Object managedBean, String beanKey) {<z>
(managedBean));<z>
mr == null) {<z>
InvalidMetadataException(<z>
getClassToExpose(managedBean));<z>
desc, mr.getCurrencyTimeLimit());<z>
(mr.isLog()) {<z>
"true");<z>
mr.getLogFile())) {<z>
;<z>
(mr.getPersistPolicy())) {<z>
());<z>
(mr.getPersistPeriod() >= 0) {<z>
);<z>
) {<z>
FIELD_PERSIST_NAME, mr.getPersistName());<z>
) {<z>
getPersistLocation());<z>
(int timeout) throws XAException<z>
timeout;<z>
return true;<z>
context,<z>
TypeSelectionExtension extension) {<z>
;<z>
| SWT.RESIZE);<z>
;<z>
= context;<z>
= scope;<z>
= elementKinds;<z>
fSelectionMode= NONE;<z>
extension;<z>
) {<z>
.getSelectionValidator();<z>
static PresentationManager addPresentationManager(String meetingId,<z>
rootDir)<z>
synchronized(presentationManagers)<z>
(meetingId);<z>
if (pmgr == null)<z>
);<z>
if (!rootDir.equals("IGNORE_DMS"))<z>
init();<z>
;<z>
);<z>
return pmgr;<z>
cl) throws cfmRunTimeException {<z>
(wrapper.value instanceof cfData))<z>
return false;<z>
))<z>
cl);<z>
typeHint))<z>
);<z>
return false;<z>
public byte[] fetchGzip() {<z>
] objArray = null;<z>
true);<z>
catch (Throwable e) {<z>
());<z>
;<z>
{<z>
("Figuring out our hostnames");<z>
);<z>
);<z>
= host.getHostAddress();<z>
.getHostName();<z>
String canonicalHostName = host.getCanonicalHostName();<z>
;<z>
add(hostName)) {<z>
);<z>
0) {<z>
0, firstDot));<z>
if (hostNames.add(canonicalHostName)) {<z>
firstDot = canonicalHostName.indexOf(".");<z>
(firstDot > 0) {<z>
0, firstDot));<z>
+<z>
);<z>
changeHeight(short height) {<z>
;<z>
gupdate = new RASF_update();<z>
);<z>
= new UpdateGraphic();<z>
.rasf_update(gupdate);<z>
);<z>
throws XMLStreamException {<z>
isDefined()) {<z>
();<z>
()) {<z>
.BRIDGES.getLocalName());<z>
: node.asPropertyList()) {<z>
Element.BRIDGE.getLocalName());<z>
getName());<z>
BridgeDefinition.ATTRIBUTES) {<z>
{<z>
;<z>
else {<z>
(), writer);<z>
;<z>
writeEndElement();<z>
;<z>
setSubColumnHeader(JViewport subColumnHeader) {<z>
();<z>
;<z>
{<z>
subColumnHeader, SUB_COLUMN_HEADER);<z>
(null != old) {<z>
(old);<z>
("subColumnHeader", old, subColumnHeader);<z>
;<z>
repaint();<z>
null) {<z>
getViewport());<z>
(), old);<z>
(_subColumnHeader != null) {<z>
(), SwingConstants.HORIZONTAL);<z>
_subColumnHeader, SwingConstants.HORIZONTAL);<z>
private boolean needMessagePass(final Factor sepSet) {<z>
.getDimensionIDs()) {<z>
))) {<z>
true;<z>
false;<z>
{<z>
) {<z>
);<z>
(int featureID) {<z>
) {<z>
.INNER_CLASS_VIEWMAP__CLASS_NAME:<z>
CLASS_NAME_EDEFAULT.equals(className);<z>
case GMFGenPackage.INNER_CLASS_VIEWMAP__CLASS_BODY:<z>
!CLASS_BODY_EDEFAULT.equals(classBody);<z>
.eIsSet(featureID);<z>
{<z>
this.statementEventListeners) {<z>
listener);<z>
) {<z>
>(userIds.size());<z>
0);<z>
userId : userIds) {<z>
;<z>
!= null) {<z>
users.add(user);<z>
{<z>
add(userId);<z>
userIdsToSearch.size() > 0) {<z>
ldap = getLDAPClient();<z>
> ldapUsers = ldap.searchUsersByIds(userIdsToSearch);<z>
ldapUsers) {<z>
user != null) {<z>
), user);<z>
users.add(user);<z>
users;<z>
atom1, Atom atom2,<z>
int color){<z>
d = atom1.distance(atom2);<z>
= gap;<z>
Point3d.unitVector(atom1, atom2);<z>
(current < d){<z>
.x * current,<z>
.y + v12.y * current,<z>
.z * current);<z>
.transformToScreen(renderer.overallMatrix);<z>
ys, dummyAtom.zs, color);<z>
+= gap;<z>
void copy(BytesRef bytes) throws IOException {<z>
;<z>
bytes.offset;<z>
{<z>
blockSize - upto;<z>
{<z>
) {<z>
(currentBlock);<z>
;<z>
];<z>
= 0;<z>
blockSize;<z>
byteCount) {<z>
currentBlock, upto, left);<z>
blockSize;<z>
byteCount -= left;<z>
;<z>
} else {<z>
);<z>
;<z>
() {<z>
);<z>
IWorkingSet workingSet : workingSets) {<z>
).equalsIgnoreCase(TaskWorkingSetUpdater.ID_TASK_WORKING_SET)) {<z>
;<z>
return false;<z>
(File dataDir) throws IOException {<z>
(dataDir.exists()) {<z>
loadData(dataDir, line2Data);<z>
uriInfo,<z>
) {<z>
.getContentGraph();<z>
);<z>
();<z>
);<z>
= new GraphNode(binding, contentGraph);<z>
RDF.type, CURIE.CuriePrefixBinding);<z>
CURIE.prefix);<z>
.deleteProperties(CURIE.binding);<z>
finally {<z>
;<z>
("./", uriInfo);<z>
l) {<z>
;<z>
used, ns = size;<z>
.length; i++) {<z>
.kids[i];<z>
ok != null) {<z>
.addAll(k, l + 1);<z>
{<z>
) ch = copyKids();<z>
;<z>
<< i;<z>
null ? 0 : k.size);<z>
(ch, nu, ns);<z>
) {<z>
);<z>
(lockMode == LockMode.None) {<z>
("Locking mode None is not supported.");<z>
this.validator = validator;<z>
this.cacheUsage = cacheUsage;<z>
initAction;<z>
new File(dir, "cache.properties");<z>
putAll(properties);<z>
void ensureArraySize()<z>
== null)<z>
= new MemberVisitor[ARRAY_SIZE_INCREMENT];<z>
memberVisitors.length == memberVisitorCount)<z>
] newMemberVisitors =<z>
+<z>
];<z>
arraycopy(memberVisitors, 0,<z>
newMemberVisitors, 0,<z>
;<z>
= newMemberVisitors;<z>
.launcher.OperaLauncherProtos.LauncherStatusResponse parseDelimitedFrom(<z>
io.InputStream input,<z>
.protobuf.ExtensionRegistryLite extensionRegistry)<z>
.io.IOException {<z>
);<z>
{<z>
);<z>
{<z>
return null;<z>
, final InputInfo ii)<z>
throws QueryException {<z>
, val);<z>
.trim());<z>
) {<z>
ZERO.castErr(val, ii);<z>
) {<z>
{<z>
null;<z>
String sessionId)<z>
{<z>
!= null) {<z>
isAuthenticated(sessionId)) {<z>
thriftAuthenticatorService.getSessionInfo(sessionId);<z>
=<z>
;<z>
;<z>
populateCurrentCarbonContextFromAuthSession(carbonContextHolder, currentSession);<z>
getDecision(request);<z>
} finally {<z>
carbonContextHolder.endTenantFlow();<z>
} else {<z>
= "User is not authenticated. Please login first.";<z>
authErrorMsg);<z>
;<z>
} else {<z>
initErrorMsg = "Thrift Authenticator service or Entitlement " +<z>
initErrorMsg);<z>
;<z>
e) {<z>
String errorMsg = "Error occurred when invoking the Thrift based Entitlement Service.";<z>
errorMsg, e);<z>
throw new EntitlementException(errorMsg);<z>
boolean onTextContextMenuItem(CharSequence title) {<z>
boolean handled = false;<z>
{<z>
();<z>
handled = true;<z>
)) {<z>
copyContent();<z>
true;<z>
, mMenuItemsStrings[PASTE])) {<z>
pasteContent();<z>
true;<z>
handled;<z>
{<z>
, ShaderProgramConstants.ATTRIBUTE_POSITION_LOCATION, ShaderProgramConstants.ATTRIBUTE_POSITION);<z>
, ShaderProgramConstants.ATTRIBUTE_TEXTURECOORDINATES);<z>
);<z>
;<z>
ShaderProgramConstants.UNIFORM_TEXTURE_0);<z>
getUniformLocation(ShaderProgramConstants.UNIFORM_COLOR);<z>
() {<z>
ret = new ICreateConnectionFeature[0];<z>
ICreateConnectionFeature>();<z>
()) {<z>
, conPattern));<z>
[] a = getCreateConnectionFeaturesAdditional();<z>
{<z>
.add(element);<z>
retList.toArray(ret);<z>
(PropertyValue values, Type type) {<z>
] strings = values.getMultiValues();<z>
elementType = ClassicReflections.getCollectionElementType(type);<z>
strings.length);<z>
(elementType);<z>
.length; i++) {<z>
]));<z>
return list;<z>
Builder setLocalPort(int value) {<z>
;<z>
localPort_ = value;<z>
onChanged();<z>
;<z>
) throws TException<z>
send_list_existing_indexes();<z>
;<z>
public static EventIdentifier convert(AccessProto.EventIdentifier eventIdentifier)<z>
)<z>
;<z>
);<z>
.hasSourceIdentifier())<z>
()));<z>
)<z>
getLocalId());<z>
return result;<z>
<WorkflowTask> queryHistoricTasks(WorkflowTaskQuery query)<z>
();<z>
query.getTaskId() != null)<z>
));<z>
(taskId);<z>
null)<z>
query.getProcessId());<z>
processInstanceId);<z>
)<z>
.toPrefixString());<z>
!= null)<z>
);<z>
if (query.getProcessName() != null)<z>
getProcessNameMTSafe(query.getProcessName());<z>
.processDefinitionKey(processName);<z>
query.getWorkflowDefinitionName() != null)<z>
.getProcessKey(query.getWorkflowDefinitionName());<z>
);<z>
if (query.getTaskCustomProps() != null)<z>
query.getTaskCustomProps(), historicQuery);<z>
getProcessCustomProps() != null)<z>
);<z>
)<z>
(query.isActive())<z>
);<z>
historicQuery.processFinished();<z>
getOrderBy() != null)<z>
));<z>
List<HistoricTaskInstance> results;<z>
query.getLimit();<z>
> 0)<z>
listPage(0, limit);<z>
.list();<z>
);<z>
project, boolean create){<z>
fDiscoveredInfoHolderMap.get(project);<z>
holder == null && create){<z>
holder = new DiscoveredInfoHolder();<z>
holder);<z>
holder;<z>
dispose() {<z>
);<z>
.viewer != null)<z>
.removeResourceChangeListener(this);<z>
.dispose();<z>
(Graph graph, Vertex other) {<z>
>();<z>
());<z>
.addAll(this.getOutgoing());<z>
.addAll(other.getIncoming());<z>
(other.getOutgoing());<z>
: edges) {<z>
;<z>
e.getToVertex();<z>
other && to==this)) {<z>
detach();<z>
== other) {<z>
attach(this, to);<z>
else if (to == other) {<z>
e.attach(from, this);<z>
;<z>
void rule__Project__Group__1() throws RecognitionException {<z>
);<z>
;<z>
;<z>
._fsp--;<z>
catch (RecognitionException re) {<z>
;<z>
;<z>
(stackSize);<z>
) throws org.w3c.domts.DOMTestIncompatibleException {<z>
(factory);<z>
contentType = getContentType();<z>
contentType, "hc_staff", true);<z>
, float w) {<z>
hw = w / 2.0f;<z>
;<z>
, lzsf, lzs;<z>
rzof, rzsf, rzs;<z>
float tysf, tys;<z>
y;<z>
* ty));<z>
);<z>
;<z>
);<z>
) / 11.0);<z>
;<z>
) * lf / 11.0);<z>
z - br.z) / 11.0);<z>
/ 11);<z>
* lf);<z>
= -xby, yby = xbx;<z>
.class)) {<z>
);<z>
copy(r.m);<z>
MeshBuf.Vertex v : vs) {<z>
v.pos.z;<z>
+ bl.x;<z>
yby) + bl.y;<z>
) {<z>
;<z>
{<z>
X = w - x;<z>
* z) + br.z;<z>
y;<z>
* xbx) + (ny * ybx);<z>
;<z>
.tex.y;<z>
(File what, String ext) {<z>
.renameTo(what);<z>
{<z>
;<z>
ext;<z>
makePrettyName();<z>
;<z>
setRules() {<z>
.getEnabledRules();<z>
<Rule>();<z>
).getMinSelectionIndex();<z>
();<z>
first1 >= 0) {<z>
++) {<z>
getSelectionModel().isSelectedIndex(i))<z>
i));<z>
>= 2) {<z>
true;<z>
else {<z>
clear();<z>
false;<z>
public XdsRuntimeException(<z>
ErrorCode errorCode,<z>
,<z>
Severity severity,<z>
)<z>
();<z>
errorCode);<z>
(codeContext);<z>
(severity);<z>
this.location = location;<z>
TagData tagData) {<z>
.getAttributeString("var");<z>
{<z>
new VariableInfo(<z>
.AT_END)<z>
{<z>
;<z>
)this.get("EVN");<z>
{<z>
.error("Unexpected error accessing data - this is probably a bug in the source code generator.", e);<z>
RuntimeException(e);<z>
;<z>
contentID, OMContainer parent,<z>
OMXMLParserWrapper builder, OMFactory factory) {<z>
false);<z>
contentID;<z>
optimize = true;<z>
;<z>
;<z>
TEXT_NODE;<z>
{<z>
();<z>
if (component instanceof JTextComponent)<z>
JTextArea))<z>
"text";<z>
if (component instanceof JCheckBox)<z>
return "checkbox";<z>
component instanceof JRadioButton)<z>
"radio";<z>
if (component instanceof JButton)<z>
return "button";<z>
return "";<z>
MethodDeclaration declaration, boolean allowRemove,<z>
, String annotationNameLabel) {<z>
;<z>
null)<z>
return null;<z>
;<z>
)<z>
null;<z>
compilationUnit, cu, overridden);<z>
compilationUnit == null)<z>
null;<z>
;<z>
(methodDecl == null)<z>
return null;<z>
= (MethodDeclaration) methodDecl;<z>
), annotationNameLabel });<z>
;<z>
{<z>
= DATE_FORMAT.parse(date);<z>
e) {<z>
"Could not parse " + date + " as date: ", e);<z>
;<z>
{<z>
();<z>
if (startPos > raf.length())<z>
return null;<z>
seek(startPos);<z>
;<z>
{<z>
case MagicMimeEntry.STRING_TYPE: {<z>
0;<z>
int index = typeStr.indexOf(">");<z>
(index != -1) {<z>
+ 1, typeStr<z>
);<z>
isBetween = true;<z>
{<z>
().length();<z>
allocate(len);<z>
), 0, len);<z>
case MagicMimeEntry.SHORT_TYPE:<z>
LESHORT_TYPE:<z>
{<z>
2);<z>
array(), 0, 2);<z>
case MagicMimeEntry.LELONG_TYPE:<z>
MagicMimeEntry.BELONG_TYPE: {<z>
(4);<z>
, 0, 4);<z>
: {<z>
buf = ByteBuffer.allocate(1);<z>
, 1);<z>
default: {<z>
= null;<z>
buf;<z>
void readObject(ObjectInputStream stream)<z>
IOException, ClassNotFoundException {<z>
.defaultReadObject();<z>
(stream);<z>
= SerialUtilities.readPaint(stream);<z>
SerialUtilities.readPaint(stream);<z>
.outlineStroke = SerialUtilities.readStroke(stream);<z>
) {<z>
.PUSH );<z>
"Change Size" );<z>
) {<z>
;<z>
SelectionEvent event ) {<z>
( customSize ) {<z>
.DEFAULT );<z>
cCombo.setLayoutData( gridData );<z>
;<z>
else {<z>
new GridData( 100, 100 );<z>
.setLayoutData( gridData );<z>
customSize = true;<z>
getParent();<z>
( true, true );<z>
;<z>
)<z>
[] result;<z>
(requestLock)<z>
)<z>
dataFlavors.clone();<z>
)<z>
wait();<z>
InterruptedException ie)<z>
if (! mimeTypesDelivered)<z>
requestInProgress = true;<z>
clipboard);<z>
)<z>
wait();<z>
)<z>
;<z>
= dataFlavors;<z>
.canCache)<z>
dataFlavors = null;<z>
false;<z>
.notifyAll();<z>
return result;<z>
() {<z>
ProgressDialog.show(this, "",<z>
);<z>
);<z>
();<z>
;<z>
] = c;<z>
= c;<z>
; map1[i++] = '/'; }<z>
map2 = new byte[128];<z>
[i] = -1;<z>
}<z>
getOutputBlockSize()<z>
;<z>
if (forEncryption)<z>
return baseBlockSize;<z>
1 - 2 * defHash.length;<z>
status, Version origin ) {<z>
;<z>
status = status;<z>
;<z>
{<z>
long[8];<z>
[0]=4810363371522L;<z>
data[1]=3782918067826688000L;<z>
]=-3314649324770821214L;<z>
253L;<z>
data;<z>
) {<z>
manager) {<z>
);<z>
manager.startTimer(manager.hideDelay);<z>
DefaultPopupManager manager) {<z>
;<z>
DefaultPopupManager manager) {<z>
manager.setState(ACTIVE_STATE);<z>
void onSourceMouseOver(DefaultPopupManager manager) {<z>
);<z>
(DefaultPopupManager manager) {<z>
INACTIVE_STATE);<z>
Object o) {<z>
{<z>
return false;<z>
) o;<z>
desc );<z>
(String component, GamepadListener listener,<z>
)<z>
(component);<z>
== null)<z>
= new ComponentHandler(component, controller,<z>
AxisFilter(deadZonePercent));<z>
component, handler);<z>
);<z>
catch (IllegalArgumentException e)<z>
);<z>
()<z>
map( Class<?> type )<z>
type.getName();<z>
EditorCell_Collection editorCells) {<z>
;<z>
floor2 = 0;<z>
int floor3 = 0;<z>
) {<z>
.relayout();<z>
(StyleAttributes.SCRIPT_KIND);<z>
{<z>
NORMAL:<z>
());<z>
SUPERSCRIPT:<z>
.getHeight());<z>
floor3 + floor2;<z>
throws Exception{<z>
backendServerURL + "ReportTemplateAdmin";<z>
configCtx, serviceURL);<z>
client = stub._getServiceClient();<z>
.getOptions();<z>
.ENABLE_MTOM, Constants.VALUE_TRUE);<z>
);<z>
);<z>
{<z>
Channel.Type.TYPE_PLAYLIST, listener);<z>
+ 4 + 4 + 1);<z>
id.length() != 32){<z>
new IllegalArgumentException("Playlist id needs to have a length of 32.");<z>
;<z>
== null){<z>
.toBytes("00000000000000000000000000000000"));<z>
byte)0x00);<z>
put(Hex.toBytes(id));<z>
.put((byte)0x02);<z>
-1);<z>
(0);<z>
buffer.putInt(1);<z>
((byte)0x00);<z>
buffer.flip();<z>
.register(channel);<z>
.COMMAND_GETPLAYLIST, buffer);<z>
UnsupportedMethod {<z>
.CMSCAT_LIST)) {<z>
().get(CacheGroup.CMSCAT_LIST);<z>
)) {<z>
;<z>
0)) {<z>
;<z>
(limit);<z>
.CMSCAT_LIST, cats);<z>
cats;<z>
removeLecturesFromCourse(Course course) throws SQLException {<z>
);<z>
{<z>
lecture);<z>
;<z>
.endTransaction();<z>
( @Nonnull ExtensionSerializer extensionSerializer ) {<z>
1, 0, 0 ) );<z>
.toDelegateVersion( 1, 0, 0 );<z>
).verify();<z>
()<z>
(string == null)<z>
getName()<z>
"[name=" + getTypeName()<z>
", rowType=" + rowType<z>
indexNames<z>
;<z>
return string;<z>
boolean master) {<z>
();<z>
(this,"Resource_View");<z>
= model;<z>
document;<z>
),null);<z>
);<z>
);<z>
);<z>
JViewport viewport = createViewport();<z>
;<z>
;<z>
update();<z>
)) {<z>
.invokeLater(new Runnable(){<z>
() {<z>
getString("Info.resourceView"),"warnedResourceView");<z>
);<z>
public String getWorkflowURI()<z>
null)<z>
return null;<z>
getConclusion().getDirectTypeOf();<z>
mValue) {<z>
consume(TokenType.POINT, false);<z>
dValue = mValue;<z>
TokenType.VALUE) {<z>
;<z>
VALUE, false);<z>
.E_NUMBER) {<z>
parseDoubleLiteral(dValue);<z>
dValue;<z>
fingerPoint) {<z>
.fingerDown(fingerPoint);<z>
(collection.getActive() == null) {<z>
activePhoto = null;<z>
{<z>
));<z>
getPhoto());<z>
BigInteger[] buildLambdas(){<z>
= 2*_n;<z>
[_n][cols];<z>
; r < _n ; r++){<z>
BigInteger v = BigInteger.ONE;<z>
BigInteger.valueOf(r+1);<z>
{<z>
[c] = v;<z>
);<z>
){<z>
) {<z>
.ONE;<z>
else {<z>
;<z>
r < _n ; r++) {<z>
;<z>
c < cols ; c++) {<z>
;<z>
{<z>
r) {<z>
r];<z>
++){<z>
mod(_MOD);<z>
_n];<z>
0 ; i < _n ; i++) {<z>
_n+i];<z>
res;<z>
BlogsEntry fetchByG_S_Last(long groupId, int status,<z>
{<z>
;<z>
- 1, count,<z>
);<z>
)) {<z>
0);<z>
null;<z>
) {<z>
email;<z>
= name;<z>
this.adress = adress;<z>
;<z>
this.id = id;<z>
) throws RecognitionException {<z>
());<z>
.FOLLOW_ruleQPREF_in_entryRuleQPREF14395);<z>
;<z>
;<z>
after(grammarAccess.getQPREFRule());<z>
EOF,FollowSets000.FOLLOW_EOF_in_entryRuleQPREF14402);<z>
re) {<z>
;<z>
recover(input,re);<z>
, ExecutableTemplate template, int fromLine) {<z>
FeatureAccess.hasAccess(Role.TESTER)) {<z>
toString(body));<z>
int socketTimeout)<z>
throws TrustedHttpClientException {<z>
new DefaultHttpClient();<z>
CONNECTION_TIMEOUT, connectionTimeout);<z>
;<z>
))) {<z>
, pass);<z>
.ANY, creds);<z>
= null;<z>
execute(httpUriRequest);<z>
httpClient);<z>
response;<z>
{<z>
).shutdown();<z>
e);<z>
;<z>
response = null;<z>
;<z>
)) {<z>
;<z>
response);<z>
);<z>
response;<z>
catch (Exception e) {<z>
) {<z>
responseMap.remove(response);<z>
);<z>
e);<z>
itemListHolder)<z>
WebMarkupContainer("entrySelectorFrame");<z>
new GreyBlueRoundedBorder("blueBorder");<z>
blueBorder.setOutputMarkupId(true);<z>
);<z>
.add(getFilterForm());<z>
);<z>
add(itemListHolder);<z>
ClassFile readFrom(DataInput din,<z>
loader,<z>
,<z>
,<z>
outerClass)<z>
.readInt();<z>
{<z>
"Incorrect magic number: 0x" +<z>
magic));<z>
);<z>
short major = din.readShort();<z>
);<z>
())<z>
.toSynchronized(false);<z>
;<z>
getConstant(index);<z>
= din.readUnsignedShort();<z>
superClass = null;<z>
(index > 0) {<z>
;<z>
);<z>
setVersion(major, minor);<z>
;<z>
int size = din.readUnsignedShort();<z>
) {<z>
();<z>
;<z>
.getRootName());<z>
din.readUnsignedShort();<z>
i<size; i++) {<z>
(cf, din, attrFactory));<z>
();<z>
size; i++) {<z>
cf, din, attrFactory));<z>
();<z>
{<z>
din, attrFactory);<z>
.addAttribute(attr);<z>
if (attr instanceof InnerClassesAttr) {<z>
)attr;<z>
loader != null) {<z>
getInnerClassesInfo();<z>
++) {<z>
i];<z>
.getInnerClass())) {<z>
!= null) {<z>
;<z>
getOuterClass();<z>
== null && outer != null) {<z>
cf.mOuterClass = readOuterClass<z>
attrFactory, loadedClassFiles);<z>
.getModifiers();<z>
cf.mModifiers<z>
.isStatic())<z>
innerFlags.isPrivate())<z>
innerFlags.isProtected())<z>
);<z>
if (info.getOuterClass() == null ||<z>
) {<z>
getInnerClass();<z>
(inner != null) {<z>
ClassFile innerClass = readInnerClass<z>
loader, attrFactory, loadedClassFiles, cf);<z>
!= null) {<z>
) != null) {<z>
().getValue();<z>
if (cf.mInnerClasses == null) {<z>
();<z>
mInnerClasses.add(innerClass);<z>
;<z>
{<z>
int stackSize = keepStackSize();<z>
) {<z>
));<z>
=2;<z>
;<z>
RULE_REGULAR_EXPRESSION) ) {<z>
;<z>
alt104) {<z>
1 :<z>
FOLLOW_rule__LiteralList__Group_2__0_in_rule__LiteralList__Group__2__Impl24546);<z>
);<z>
--;<z>
return ;<z>
if ( state.backtracking==0 ) {<z>
.getGroup_2());<z>
re) {<z>
reportError(re);<z>
recover(input,re);<z>
;<z>
ContentStream createContentFractalimageJpeg() {<z>
)<z>
();<z>
content = null;<z>
;<z>
= new ContentStreamImpl();<z>
content.setFileName("image.jpg");<z>
"image/jpeg");<z>
bos.toByteArray()));<z>
.close();<z>
} catch (IOException e) {<z>
e);<z>
e.printStackTrace();<z>
;<z>
[] cachedRangeMarkers) {<z>
if (!mySyncMarkerIsValid) return;<z>
();<z>
) : marker.getEndOffset();<z>
> actualEndOffset) {<z>
{<z>
getDocument(myVirtualFile);<z>
(document == null) {<z>
mySyncMarkerIsValid = false;<z>
, document.getTextLength());<z>
());<z>
(cachedRangeMarkers != null) {<z>
(RangeMarker cachedRangeMarker : cachedRangeMarkers) {<z>
) &&<z>
.getStartOffset() == start &&<z>
cachedRangeMarker.getEndOffset() == end) {<z>
= cachedRangeMarker;<z>
, end, true);<z>
setMarker(marker);<z>
(!marker.isValid()) {<z>
mySyncMarkerIsValid = false;<z>
.dispose();<z>
;<z>
= null;<z>
marker;<z>
)<z>
plasticClass.check();<z>
return description.compareTo(o.description);<z>
parser) throws Exception {<z>
.START_TAG) {<z>
IllegalStateException("Parser not in proper position, or bad XML.");<z>
= new MonitorPacket();<z>
false;<z>
(!done) {<z>
;<z>
(parser.getName()))) {<z>
.nextText();<z>
("false".equalsIgnoreCase(value)) {<z>
.setMonitor(false);<z>
(true);<z>
())) {<z>
= true;<z>
packet;<z>
public void createPartControl(final Composite parent) {<z>
.H_SCROLL<z>
SWT.V_SCROLL);<z>
));<z>
(new ViewLabelProvider());<z>
;<z>
(getViewSite());<z>
();<z>
hookContextMenu();<z>
);<z>
();<z>
)<z>
this.getHeaderRevisionDate(headerEntries);<z>
translationsRevisionDate = null;<z>
)<z>
getLastChanged();<z>
!= null)<z>
(poFileRevisionDate != null)<z>
.after(poFileRevisionDate) ? translationsRevisionDate : poFileRevisionDate;<z>
translationsRevisionDate;<z>
? null : poFileRevisionDate;<z>
Widget title) {<z>
, new Image(image) );<z>
;<z>
.setWidget( 0, 1, title );<z>
++;<z>
{<z>
);<z>
!= null) {<z>
removeStreamListener(listener);<z>
{<z>
= potentialListeners.iterator();<z>
{<z>
= iter.next();<z>
{<z>
.remove();<z>
{<z>
{<z>
(treeState.restoreExpandedElements(memento,<z>
;<z>
restoreQuery(memento));<z>
{<z>
super.load(rootElement);<z>
List attributes = rootElement.getAttributes();<z>
: attributes) {<z>
attr = (Attribute)attribute;<z>
getValue());<z>
String generatePassword() {<z>
SecureRandom random = new SecureRandom();<z>
130, random).toString(12);<z>
10, randString.length());<z>
{<z>
--;<z>
0)<z>
true);<z>
{<z>
ValueCellEditor editor = new ValueCellEditor(parent);<z>
getValidator() != null){<z>
());<z>
editor;<z>
int readINs(long rollForwardLsn, boolean mapDbOnly,<z>
LogEntryType inType3,<z>
boolean requireExactMatch) throws IOException, DatabaseException {<z>
reader = new INFileReader(env,<z>
nextAvailableLsn,<z>
mapDbOnly, info.partialCheckpointStartLsn,<z>
;<z>
(inType1 != null) {<z>
;<z>
!= null) {<z>
.addTargetType(inType2);<z>
(inType3 != null) {<z>
.addTargetType(inType3);<z>
numINsSeen = 0;<z>
;<z>
)) {<z>
;<z>
.ID_DB_ID);<z>
= false;<z>
(mapDbOnly && isMapDb) {<z>
= true;<z>
!mapDbOnly && !isMapDb) {<z>
isTarget = true;<z>
(isTarget) {<z>
dbId);<z>
if (db == null) {<z>
else {<z>
reader, db, requireExactMatch);<z>
++;<z>
(dbId);<z>
reader.getNRepeatIteratorReads();<z>
return numINsSeen;<z>
e) {<z>
.getLastLsn(), "readNonMapIns", e);<z>
;<z>
) throws ParseException {<z>
6);<z>
LogItem(<z>
, parts[TIME]),<z>
LEVEL],<z>
],<z>
SOURCE],<z>
);<z>
} catch (Exception e) {<z>
;<z>
lang.Exception{<z>
=<z>
();<z>
int event;<z>
;<z>
;<z>
.lang.String namespaceuri ="";<z>
!reader.isEndElement())<z>
reader.next();<z>
,"type")!=null){<z>
fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",<z>
"type");<z>
){<z>
.String nsPrefix = null;<z>
){<z>
0,fullTypeName.indexOf(":"));<z>
"":nsPrefix;<z>
;<z>
{<z>
getNamespaceContext().getNamespaceURI(nsPrefix);<z>
getTypeObject(<z>
;<z>
java.util.Vector();<z>
.isEndElement()) {<z>
|| reader.hasText()){<z>
() || reader.hasText()){<z>
String content = reader.getElementText();<z>
.setAnyURI(<z>
utils.ConverterUtil.convertToAnyURI(content));<z>
reader.getLocalName());<z>
} else {<z>
;<z>
{<z>
e);<z>
return object;<z>
final void mT__19() throws RecognitionException {<z>
= T__19;<z>
_channel = DEFAULT_TOKEN_CHANNEL;<z>
'*');<z>
state.type = _type;<z>
;<z>
printStream)<z>
nibble;<z>
) & 0x0F];<z>
;<z>
= hexTable[data & 0x0F];<z>
printStream.print((char)nibble);<z>
public void setIgnoreRegExCase(final boolean aCaseInsensitive)<z>
aCaseInsensitive) {<z>
isEmpty()) {<z>
currentRule : mCustomOrderDeclaration) {<z>
;<z>
.CASE_INSENSITIVE;<z>
AbstractCubeNode parent,Member member){<z>
();<z>
= parent.levelHolder.getNext();<z>
= member;<z>
.parent = parent;<z>
boolean contains(Charset cs) {<z>
).equals("US-ASCII"))<z>
cs instanceof JIS_X_0201)<z>
SJIS)<z>
(cs instanceof JIS_X_0208));<z>
) {<z>
));<z>
; i.hasNext(); ) {<z>
i.next();<z>
;<z>
(cls.file);<z>
return classStubs;<z>
opStateCheck() {<z>
int mem = code[ip++];<z>
(); return;}<z>
(s, mem);<z>
void i_unwind (Executor e) throws CALExecutorException {<z>
.push (record);<z>
));<z>
hwnd, long wParam, long lParam) {<z>
hwnd, wParam, lParam);<z>
result != null) return result;<z>
{<z>
OS.VERSION (6, 0)) {<z>
;<z>
| OS.WS_VSCROLL)) != 0) {<z>
RECT ();<z>
, windowRect);<z>
= new RECT ();<z>
.GWL_EXSTYLE);<z>
bits1, false, bits2);<z>
false, vVisible = false;<z>
new SCROLLBARINFO ();<z>
sizeof;<z>
psbi)) {<z>
OS.STATE_SYSTEM_INVISIBLE) == 0;<z>
, OS.OBJID_VSCROLL, psbi)) {<z>
] & OS.STATE_SYSTEM_INVISIBLE) == 0;<z>
= new RECT ();<z>
;<z>
;<z>
) != 0) {<z>
cornerRect.left = trimRect.left;<z>
) : 0);<z>
{<z>
- trimRect.right;<z>
) : 0);<z>
.bottom) {<z>
long hDC = OS.GetWindowDC (hwnd);<z>
);<z>
);<z>
SWT.RESIZE) != 0) {<z>
long hwndScroll = shell.scrolledHandle ();<z>
drawGripper = hwnd == hwndScroll;<z>
if (!drawGripper) {<z>
shellRect = new RECT ();<z>
);<z>
(hwndScroll, 0, shellRect, 2);<z>
bottom;<z>
drawGripper) {<z>
, null);<z>
ReleaseDC (hwnd, hDC);<z>
return result;<z>
Kernel1D_F32 kernel ,<z>
ImageFloat32 image, ImageFloat32 dest,<z>
) {<z>
float[] dataSrc = image.data;<z>
dest.data;<z>
k1 = kernel.data[0];<z>
[1];<z>
.data[2];<z>
[3];<z>
= kernel.data[4];<z>
[5];<z>
;<z>
];<z>
];<z>
getRadius();<z>
yBorder = includeBorder ? 0 : radius;<z>
.getWidth();<z>
image.getHeight()-yBorder;<z>
< height; i++ ) {<z>
startIndex + i*dest.stride+radius;<z>
stride - radius;<z>
j+width-radius;<z>
< jEnd; j++ ) {<z>
indexSrc = j;<z>
++])*k1;<z>
++])*k2;<z>
[indexSrc++])*k3;<z>
])*k4;<z>
k5;<z>
k6;<z>
++])*k7;<z>
++])*k8;<z>
)*k9;<z>
;<z>
public UserNode createUserNode(UserNode parent) throws Exception<z>
;<z>
nodeName = nameTextBox.getValue();<z>
child = parent.addChild(nodeName);<z>
child);<z>
return child;<z>
(String uuid, long companyId,<z>
orderByComparator)<z>
NoSuchConsumerPortletException, SystemException {<z>
uuid,<z>
;<z>
) {<z>
;<z>
(6);<z>
append(_NO_SUCH_ENTITY_WITH_KEY);<z>
"uuid=");<z>
uuid);<z>
(", companyId=");<z>
companyId);<z>
StringPool.CLOSE_CURLY_BRACE);<z>
());<z>
{<z>
ArrayList<>();<z>
boolean makeList = true;<z>
= false;<z>
false;<z>
true) {<z>
while (true) {<z>
);<z>
() == ')') {<z>
wasDot)<z>
(")");<z>
!makeList)<z>
message("dot.in.wrong.context"));<z>
) == '.' || wasDot) {<z>
&& !wasDot) {<z>
;<z>
InvalidReadSyntaxDot();<z>
getNextChar())) || wasDot) {<z>
if (!wasDot) {<z>
();<z>
skipWhitespaces();<z>
getCurrentChar() == ')')<z>
);<z>
) {<z>
;<z>
LispObject object = parseObject(isBackQuote);<z>
if (object != null)<z>
(object);<z>
.size()-1);<z>
isBackQuote);<z>
(cdr == null) {<z>
;<z>
')')<z>
throw new InvalidReadSyntax(")");<z>
cdr = parseObject(isBackQuote);<z>
);<z>
wasCons = true;<z>
= false;<z>
;<z>
getCurrentChar() != ')')<z>
(JelispBundle.message("dot.in.wrong.context"));<z>
false;<z>
parseObject(isBackQuote);<z>
{<z>
data.add(object);<z>
| InvalidReadSyntaxDot e) {<z>
) (e instanceof InvalidReadSyntaxDot<z>
;<z>
countObservers() == 0)<z>
;<z>
);<z>
;<z>
();<z>
(getMyCurrentIndex() + 1);<z>
1 && wasCons))) {<z>
)<z>
return LispList.listAsIs(data);<z>
return LispList.list(data);<z>
;<z>
db) {<z>
execSQL("CREATE TABLE " + DB.TABLE_NAME + " (\n"<z>
DB.ID + " INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,\n"<z>
+ " TEXT NOT NULL,\n"<z>
.PORT + " INTEGER NOT NULL,\n"<z>
.SAME_ID + " INTEGER NOT NULL,\n"<z>
" INTEGER NOT NULL DEFAULT 0,\n"<z>
+ " INTEGER NOT NULL DEFAULT 0,\n"<z>
PASSWORD_ID + " INTEGER NOT NULL DEFAULT 0"<z>
+ ");");<z>
PBEStringEncryptor getPBEStringEncryptor(<z>
final String registeredName) {<z>
=<z>
stringEncryptors.get(registeredName);<z>
(hibernateEncryptor == null) {<z>
;<z>
getEncryptor();<z>
() {<z>
.getType())) {<z>
;<z>
null;<z>
Chromosome> chromosomes) throws IOException {<z>
InputStream is = null;<z>
);<z>
is = new FileInputStream(file);<z>
("\\s");<z>
InputStreamReader(is));<z>
String nextLine;<z>
>();<z>
)) != null) {<z>
pattern.split(nextLine);<z>
length > 1) {<z>
String key = tokens[0];<z>
length - 1];<z>
i < tokens.length; i++) {<z>
);<z>
key, sites);<z>
{<z>
;<z>
finally {<z>
close();<z>
(CoffeeNode body)<z>
(CoffeeNodeTypes.PARENS);<z>
;<z>
, Axis1D yTrans, Axis1D zTrans )<z>
= xTrans;<z>
yAxis = yTrans;<z>
zTrans;<z>
NChoice choice) throws ParseException {<z>
;<z>
<String>();<z>
;<z>
;<z>
) {<z>
{<z>
LOOK_AHEAD:<z>
LL:<z>
case JAVA:<z>
:<z>
AT:<z>
] = jj_gen;<z>
break label_9;<z>
i = Text();<z>
i);<z>
;<z>
);<z>
true) {<z>
jj_ntk():jj_ntk) {<z>
LOOK_AHEAD:<z>
:<z>
:<z>
STRING_LITERAL:<z>
case AT:<z>
;<z>
break label_10;<z>
innerPostTokens);<z>
;<z>
;<z>
u;}<z>
throw new Error("Missing return statement in function");<z>
() throws DebugException {<z>
(canSuspend()) {<z>
debugSuspend();<z>
public void maximiserTexte()<z>
if(this.getItemCount() > 0)<z>
;<z>
dimensions) {<z>
];<z>
];<z>
peaks];<z>
new Vector[peaks];<z>
peaks];<z>
upper = 50;<z>
;<z>
= new Double[dimensions];<z>
; i++) {<z>
;<z>
] position = new Double[dimensions];<z>
++) {<z>
++) {<z>
getRandomNumber(lower, upper);<z>
= 1;<z>
(position);<z>
(minHeight, maxHeight);<z>
(minWidth, maxWidth);<z>
.of(oneVector);<z>
Object[][] getContents() {<z>
] {<z>
,<z>
, "Detalles" },<z>
{ "FileChooser.detailsViewButtonToolTipText", "Detalles" },<z>
, "Atributos" },<z>
,<z>
"FileChooser.fileNameHeaderText", "Nombre" },<z>
"FileChooser.fileNameLabelText", "Nombre de archivo:" },<z>
1o" },<z>
},<z>
},<z>
},<z>
},<z>
},<z>
, "Lista" },<z>
"Lista" },<z>
{ "FileChooser.listViewButtonToolTipText", "Lista" },<z>
},<z>
,<z>
, "Carpeta nueva" },<z>
,<z>
{ "FileChooser.refreshActionLabelText", "Renovar" },<z>
},<z>
"FileChooser.upFolderAccessibleName", "Arriba" },<z>
, "Subir un nivel" },<z>
"View Menu" },<z>
, "View Menu" },<z>
},<z>
{<z>
.y;<z>
= eigenvec[1].x;<z>
.y);<z>
, b.y, 1.0);<z>
) {<z>
new StringBuilder();<z>
ba) {<z>
< 0x7e))<z>
sb.append((char) b);<z>
;<z>
);<z>
) {<z>
) {<z>
CONFIGREFERENCE_TYPE__ATTRIBUTE:<z>
).clear();<z>
;<z>
case PowrmartPackage.CONFIGREFERENCE_TYPE__REFOBJECTNAME:<z>
);<z>
case PowrmartPackage.CONFIGREFERENCE_TYPE__TYPE:<z>
);<z>
.eSet(featureID, newValue);<z>
)<z>
)<z>
;<z>
));<z>
colorScheme.getBackgroundColor());<z>
);<z>
)<z>
( currentSlider >= 0 ) {<z>
ActionEvent.ACTION_PERFORMED, "" );<z>
;<z>
= -1;<z>
setCursor( lastCursor );<z>
UnsupportedEncodingException {<z>
= currentPageNumber - 1;<z>
<= 0) return null;<z>
));<z>
] formAdbRequest(String req) {<z>
length(), req);<z>
] result;<z>
getBytes(DEFAULT_ENCODING);<z>
(UnsupportedEncodingException uee) {<z>
printStackTrace();<z>
null;<z>
) + 4;<z>
result;<z>
,<z>
throws Exception {<z>
("GlNamesMode", AccountingRules.getGlNamesMode());<z>
debug("start editPrevious of Loan Product Action ");<z>
);<z>
() {<z>
null) {<z>
defInterestRateValue;<z>
;<z>
() throws SQLException {<z>
Thread.currentThread());<z>
);<z>
();<z>
+Thread.currentThread());<z>
{<z>
;<z>
) {<z>
.getGPConfiguration().getRandomGenerator().<z>
* a_genotype.getTotalFitness();<z>
0;<z>
();<z>
size();<z>
getGPFitnessEvaluator();<z>
), (float) chosen);<z>
) {<z>
;<z>
;<z>
{<z>
false;<z>
;<z>
) {<z>
< pop.getFitnessRank(num)) {<z>
;<z>
- 1) {<z>
(popSize - 1 < 1) {<z>
num = 1;<z>
getRandomGenerator().<z>
);<z>
(num);<z>
init() {<z>
{<z>
();<z>
(8);<z>
);<z>
String httpMethodOverrideHeadersProperty =<z>
getProperty(HTTP_METHOD_OVERRIDE_HEADERS_PROP);<z>
httpMethodOverrideHeadersProperty != null && httpMethodOverrideHeadersProperty<z>
: null;<z>
initRegistries();<z>
initAlternateShortcutMap();<z>
initMediaTypeMapper();<z>
initHandlers();<z>
)) {<z>
);<z>
logger.trace("Request Handlers Chain : {}", requestHandlersChain);<z>
);<z>
;<z>
logger.debug("Request User Handlers: {}", String<z>
);<z>
,<z>
));<z>
format("%1$s", errorUserHandlers));<z>
this.ofFactoryRegistry<z>
;<z>
this.mediaTypeMapper);<z>
"AlternateShortcutMap: {}", this.alternateShortcutMap);<z>
properties);<z>
.servletConfig);<z>
);<z>
);<z>
, this.applications);<z>
new ArrayList<String>();<z>
null) {<z>
this.httpMethodOverrideHeaders.length; ++i)<z>
this.httpMethodOverrideHeaders[i]);<z>
"HttpMethodOverrideHeaders: {}", httpMethodOverrideHeadersList);<z>
) {<z>
("An Exception occurred when logging the configuration {}", e);<z>
GLAutoDrawable drawable) {<z>
) {<z>
;<z>
);<z>
();<z>
= drawable.getGL();<z>
.getContext();<z>
();<z>
, 0, w, h);<z>
;<z>
;<z>
, -100.0, +100.0);<z>
(GL.GL_MODELVIEW);<z>
gl.glLoadIdentity();<z>
float uscale = outTex.getMaxTextureCoordS();<z>
= outTex.getMaxTextureCoordT();<z>
0.0f;<z>
sx = +1.0f;<z>
)) {<z>
;<z>
= -1.0f;<z>
cy = 0.0f;<z>
1.0f;<z>
if (outTex.isFlippedY()) {<z>
1.0f;<z>
= -1.0f;<z>
.GL_DEPTH_BUFFER_BIT);<z>
glEnable(outTex.getTextureTarget());<z>
;<z>
getTextureID());<z>
a);<z>
.glBegin(GL.GL_QUADS);<z>
) * vscale);<z>
0.0f);<z>
;<z>
glVertex2f(w, 0.0f);<z>
;<z>
);<z>
cy + sy * 0.0f) * vscale);<z>
0.0f, h);<z>
();<z>
.getTextureTarget(), 0);<z>
;<z>
);<z>
= System.nanoTime();<z>
frameRateLastNanos) / 1000000.0);<z>
/ 1000.0f;<z>
+ (instantaneousRate * 0.1f);<z>
now;<z>
connConfig, String id,<z>
connection) {<z>
= id;<z>
(connection);<z>
logger.fine(id);<z>
;<z>
= connConfig.getPort();<z>
>();<z>
<String>();<z>
IOException<z>
buffer = new byte[BUFFER_SIZE];<z>
true)<z>
= stream.read(buffer);<z>
(length < 0) return;<z>
(buffer, 0, length);<z>
final String sampleInfo) {<z>
{<z>
();<z>
= new ArrayList<String>(TYPICAL_SAMPLE_HEADERS);<z>
BufferedReader(new StringReader(sampleInfo));<z>
) {<z>
readLine();<z>
line == null) {<z>
(line);<z>
header = getHeaderLabel(entry);<z>
null) {<z>
(header);<z>
{<z>
new MprcException("Failed to parse sample headers", e);<z>
finally {<z>
(reader);<z>
;<z>
public void passo7(){<z>
setLeftChield(node3);<z>
quadro.atualizar();<z>
compareHigh(Mao m) {<z>
String s;<z>
.c5);<z>
;<z>
m.c4);<z>
;<z>
c3);<z>
) return s;<z>
);<z>
null) return s;<z>
m.c1);<z>
(s!=null) return s;<z>
;<z>
storeCompressedRegistryXMLOracle(DetailedDataSource dsource, Document doc)<z>
throws ConfigurationException {<z>
null;<z>
+ UPDATECOMPRESSEDREGISTRYXML2;<z>
.getSchema() + SELECTCOMPRESSEDXMLFORUPDATE2;<z>
))<z>
+ "\n");<z>
conn = dsource.getConnectionNoVersionCheck();<z>
false);<z>
ByteArrayOutputStream();<z>
.output.Format.getRawFormat());<z>
= new GZIPOutputStream(bout);<z>
xout.output(doc, gout);<z>
);<z>
.toByteArray();<z>
;<z>
);<z>
.prepareStatement(UPDATECOMPRESSEDREGISTRYXML);<z>
ohack = conn.prepareStatement(SELECTCOMPRESSEDXMLFORUPDATE);<z>
.executeUpdate();<z>
rs = ohack.executeQuery();<z>
(rs.next()) {<z>
.getClob(1);<z>
();<z>
.write(xml);<z>
clobout.close();<z>
;<z>
rs.close();<z>
ohack.close();<z>
;<z>
return ret;<z>
IOException e) {<z>
);<z>
e) {<z>
.getMessage(), e);<z>
} finally {<z>
DetailedDataSource.close(conn);<z>
void onInserted(){<z>
) {<z>
;<z>
0;<z>
);<z>
hasNext() ) {<z>
.next(), index++ );<z>
public void clear() {<z>
null) {<z>
; i.hasNext(); ) {<z>
i.next();<z>
, 0);<z>
0;<z>
noBigDescs)<z>
= MINBIGSIZE;<z>
coreType) {<z>
) {<z>
case EnvironmentPackage.FILTER_CONTAINER__OWNED_FILTERS:<z>
return getOwnedFilters();<z>
resolve, coreType);<z>
handleBuffer(final RemotingConnection connection, final HornetQBuffer buffer)<z>
;<z>
setDataReceived();<z>
);<z>
StompFrame request;<z>
request = decoder.decode(buffer);<z>
Exception e)<z>
LOGGER.errorDecodingPacket(e);<z>
== null)<z>
);<z>
().clearContext();<z>
));<z>
Cartouche() {<z>
setOpaque(false);<z>
new GridBagLayout());<z>
;<z>
15, 90, 15, 3);<z>
.REMAINDER;<z>
anchor = GridBagConstraints.WEST;<z>
, 3, 15, 90);<z>
, Object> parameters) {<z>
);<z>
function = function;<z>
parameters;<z>
public String getDuplicateHandling()<z>
getProperty(SftpConnector.PROPERTY_DUPLICATE_HANDLING);<z>
if (endpointValue != null)<z>
endpointValue;<z>
= connector.getDuplicateHandling();<z>
!= null)<z>
return connectorValue;<z>
return DUPLICATE_HANDLING_DEFAULT;<z>
Object element, int columnIndex) {<z>
image = null;<z>
(columnIndex == 0) {<z>
PMDUiConstants.ICON_LABEL_ERR_DFA);<z>
return image;<z>
getExtensionType() {<z>
();<z>
if (binding instanceof PolicySubject) {<z>
PolicySubject)binding).getExtensionType();<z>
return null;<z>
pop() {<z>
sp-1)%length;<z>
= buffer.get(newSp);<z>
if ( result != null ) {<z>
, result, null) ) {<z>
= newSp;<z>
{<z>
= null;<z>
return result;<z>
, byte[] exportContext, UserContext userContext)<z>
exportContext.length == 0)<z>
IllegalArgumentException("Must provide a non null or empty exportContext to ReleaseExport.");<z>
= new ReleaseExport();<z>
releaseExport.setRegistrationContext(registrationContext);<z>
exportContext);<z>
.setUserContext(userContext);<z>
return releaseExport;<z>
{<z>
setRect(decodeX(1.3333334f),<z>
1.0f),<z>
(1.3333334f),<z>
(1.0f));<z>
return rect;<z>
public synchronized int hashCode() {<z>
;<z>
* result;<z>
;<z>
)<z>
;<z>
()<z>
&& labelFeature.eIsProxy())<z>
InternalEObject oldLabelFeature = (InternalEObject)labelFeature;<z>
labelFeature = (GenFeature)eResolveProxy(oldLabelFeature);<z>
!= oldLabelFeature)<z>
)<z>
, oldLabelFeature, labelFeature));<z>
;<z>
(ComponentAdapter componentAdapter) {<z>
);<z>
) {<z>
return getLocalInstance(componentAdapter);<z>
parent != null) {<z>
());<z>
return null;<z>
VirtualMachine virtualMachine,<z>
,<z>
final Hypervisor originalHypervisor)<z>
();<z>
());<z>
HypervisorConnection conn =<z>
jobCreator.hypervisorConnectionConfiguration(originalHypervisor);<z>
=<z>
(virtualMachineDesciptionBuilder.build(), conn,<z>
"admin");<z>
currentState))<z>
.add(VirtualMachineStateTransition.POWEROFF);<z>
=<z>
DECONFIGURE, extraData)<z>
);<z>
Task redisTask =<z>
getId()), TaskType.HA_UNDEPLOY);<z>
.getDatacenter();<z>
());<z>
;<z>
));<z>
tarantinoTask.getId();<z>
(NotFoundException e)<z>
e;<z>
e)<z>
.error("Error enqueuing the undeploy task dto to the virtual factory with error: "<z>
());<z>
EventType.VM_UNDEPLOY,<z>
.GENERIC_OPERATION_ERROR.getMessage());<z>
systemLog(SeverityType.CRITICAL, ComponentType.VIRTUAL_MACHINE,<z>
e.getMessage());<z>
(APIError.GENERIC_OPERATION_ERROR);<z>
();<z>
return null;<z>
private void createButtons(Composite tblComposite) {<z>
PUSH | SWT.CENTER);<z>
"Edit");<z>
= new GridData (GridData.HORIZONTAL_ALIGN_BEGINNING);<z>
80;<z>
setLayoutData(gridData);<z>
() {<z>
{<z>
int selectionIndex = 0;<z>
.getItemCount() >0 ){<z>
i++) {<z>
) {<z>
= i;<z>
()){<z>
objRecord = mapperRecList.getRecord(selectionIndex);<z>
getOpVariable());<z>
(objRecord.getExpression());<z>
();<z>
true);<z>
;<z>
PUSH | SWT.CENTER);<z>
delete.setText("Delete");<z>
GridData.HORIZONTAL_ALIGN_BEGINNING);<z>
;<z>
gridData);<z>
{<z>
widgetSelected(SelectionEvent e) {<z>
>();<z>
).getItemCount(); i++) {<z>
) {<z>
;<z>
sort(arlCheckedIndexes);<z>
size()]);<z>
1 ; j>=0; j--) {<z>
arrSortedIndexes[j]);<z>
tableViewer.refresh();<z>
);<z>
});<z>
final String url) {<z>
"The url failed to be unmapped from application '"<z>
+ "'";<z>
successMessage = "The url was successfully unmapped from application '"<z>
;<z>
) {<z>
execute() throws Exception {<z>
getApplication(appName);<z>
null) {<z>
;<z>
>(<z>
application.getUris());<z>
remove(url);<z>
uris);<z>
;<z>
public void setDefinition(Element definition) {<z>
definition);<z>
String boolStr = definition.getAttributeValue("translucent");<z>
!= null) {<z>
.isTranslucentSupported = boolStr.equals("true");<z>
"transparent");<z>
) {<z>
= boolStr.equals("true");<z>
"primitive");<z>
{<z>
"true");<z>
throws XmlPullParserException, IOException {<z>
();<z>
"from");<z>
!= null) {<z>
);<z>
getAttributeValue(null, "stamp");<z>
description = XmlUtils.getTagText(parser);<z>
;<z>
value, CSSStyleDeclaration declaration, boolean important) {<z>
SubPropertySetter) SUB_SETTERS.get(lowerCaseName);<z>
) {<z>
value, declaration, important);<z>
setPropertyValueLCAlt(lowerCaseName, value, important);<z>
{<z>
consumeStack(cpg) > 0) {<z>
.pushValue(getDefaultValue());<z>
obj);<z>
, int start, int end,<z>
OrderByComparator orderByComparator) throws SystemException {<z>
,<z>
orderByComparator);<z>
URLHandler lookupHandlerFromCache(String requestURI) {<z>
requestURI);<z>
;<z>
(handler == null) {<z>
= findURLHandlerByURIInternal(requestURI);<z>
(key, handler));<z>
{<z>
;<z>
{<z>
return handler;<z>
(String operator,<z>
String value,<z>
) {<z>
operator.equals( "!= null" ) ) {<z>
;<z>
append( value );<z>
;<z>
) {<z>
();<z>
sum = 0.0D;<z>
) {<z>
:<z>
; x += stepSize)<z>
x);<z>
case 1:<z>
<upperValue; x += smallStep) {<z>
;<z>
(double) 2;<z>
return sum;<z>
{<z>
_is = is;<z>
= encoding;<z>
(sourceFile != null) {<z>
);<z>
;<z>
} else {<z>
("eval:");<z>
;<z>
.setLineNumber(1);<z>
_peek = -1;<z>
= -1;<z>
final ComputationTarget target) {<z>
properties = createValueProperties()<z>
, _curveName)<z>
()).get();<z>
;<z>
long timeout,<z>
timeoutUnit) throws InstallerException,<z>
CLIException, InterruptedException {<z>
System.currentTimeMillis()<z>
toMillis(timeout);<z>
;<z>
] servers;<z>
= provisioning<z>
, timeoutUnit);<z>
CloudProvisioningException e) {<z>
InstallerException(<z>
e);<z>
{<z>
new CLIException("Cloudify bootstrap on provider "<z>
() + " timed-out. "<z>
+ "Please try to run again using the –timeout option.", e);<z>
if (servers.length == 0) {<z>
IllegalArgumentException(<z>
;<z>
isLoggable(Level.FINE)) {<z>
MachineDetails server : servers) {<z>
);<z>
.isAgentRunning()) {<z>
(<z>
);<z>
(servers, end);<z>
: servers) {<z>
null;<z>
getConfiguration().isBootstrapManagementOnPublicIp()) {<z>
;<z>
else {<z>
.getPrivateAddress();<z>
ipAddress,<z>
, null, null).toURL();<z>
("http", null, ipAddress,<z>
).toURL();<z>
restAdminUrl, Utils.millisUntil(end),<z>
TimeUnit.MILLISECONDS);<z>
.info("Rest service is available at: " + restAdminUrl<z>
+ '.');<z>
.info("Webui service is available at: " + webUIUrl + '.');<z>
(final IOException e) {<z>
stopManagementMachines();<z>
CLIException("Cloudify bootstrap on provider "<z>
()<z>
+ e.getMessage(), e);<z>
(final URISyntaxException e) {<z>
stopManagementMachines();<z>
new CLIException("Bootstrap-cloud failed. Reason: "<z>
getMessage(), e);<z>
{<z>
);<z>
new CLIException("Cloudify bootstrap on provider "<z>
getProvider() + " timed-out. "<z>
"Please try to run again using the –timeout option.", e);<z>
) {<z>
;<z>
e;<z>
} catch (final InstallerException e) {<z>
);<z>
throw e;<z>
final InterruptedException e) {<z>
;<z>
;<z>
map() {<z>
, Object>();<z>
, id);<z>
);<z>
, modules.split(","));<z>
map.put("openejb.log.factory", "org.apache.openejb.maven.util.MavenLogStreamFactory");<z>
!= null) {<z>
putAll(properties);<z>
return map;<z>
) {<z>
()) {<z>
ENTITY == p.getSource()) {<z>
return true;<z>
;<z>
private void readObject(ObjectInputStream in)<z>
ClassNotFoundException, IOException {<z>
);<z>
(in);<z>
) {<z>
IOException ee = new IOException(<z>
;<z>
(e);<z>
;<z>
public void clear() {<z>
().lock();<z>
root = null;<z>
= null;<z>
.clear();<z>
= 0;<z>
{<z>
).unlock();<z>
(Sheet sheet,<z>
startingRow, double reqImageHeightMM) {<z>
null;<z>
null;<z>
0.0D;<z>
;<z>
= 0.0D;<z>
double rowCoordinatesPerMM = 0.0D;<z>
startingRow;<z>
;<z>
reqImageHeightMM) {<z>
);<z>
== null) {<z>
sheet.createRow(toRow);<z>
= row.getHeightInPoints() /<z>
.POINTS_PER_MILLIMETRE;<z>
rowHeightMM;<z>
++;<z>
;<z>
(int)reqImageHeightMM) {<z>
HSSFSheet) {<z>
,<z>
TOTAL_ROW_COORDINATE_POSITIONS);<z>
new ClientAnchorDetail(startingRow, toRow,<z>
(int)reqImageHeightMM * AddDimensionedImage.EMU_PER_MM);<z>
rowHeightMM);<z>
< 0) {<z>
overlapMM = 0.0D;<z>
instanceof HSSFSheet) {<z>
TOTAL_ROW_COORDINATE_POSITIONS /<z>
int)(overlapMM * rowCoordinatesPerMM);<z>
EMU_PER_MM;<z>
new ClientAnchorDetail(startingRow,<z>
);<z>
return(clientAnchorDetail);<z>
static Subscription getByCursor(Cursor cursor) {<z>
= new Subscription();<z>
);<z>
return sub;<z>
toString()<z>
str = new StringBuffer();<z>
);<z>
)<z>
append(getProductCatId())<z>
);<z>
"ProductCatName = ")<z>
(getProductCatName())<z>
.append("\n");<z>
return(str.toString());<z>
{<z>
= System.getProperty("catalina.base");<z>
catalina == null) {<z>
;<z>
;<z>
void moveLineContents(LineBox current, int ty) {<z>
; i++) {<z>
);<z>
(child.getY() + ty);<z>
(child instanceof InlineLayoutBox) {<z>
ty);<z>
) {<z>
channels + ", defaultChannel=" + defaultChannel + ", finger=" + finger<z>
nickName<z>
", serverPassword="<z>
+ samplePeriodMs + "]";<z>
, short itemdata) {<z>
setId(id);<z>
(world);<z>
);<z>
;<z>
;<z>
;<z>
getChunk()));<z>
(isChunkLoaded()) {<z>
1, getItemData());<z>
));<z>
).setPickupDelay(PICKUP_DELAY);<z>
;<z>
();<z>
) {<z>
INSTANCE == null) {<z>
new PluginDownloader();<z>
INSTANCE;<z>
String getHeader(String name)<z>
= headers.get(name);<z>
;<z>
= new StringBuilder();<z>
true;<z>
for (Object val : vals)<z>
(first) first = false;<z>
;<z>
.toHeaderString(val));<z>
;<z>
String iClusterName) {<z>
.PERMISSION_UPDATE);<z>
getClusterIdByName(iClusterName));<z>
);<z>
, long w) {<z>
;<z>
function_pointer = caps.glProgramUniform4ui64NV;<z>
(function_pointer);<z>
function_pointer);<z>
<?> c) {<z>
() {<z>
run() {<z>
tripleCollection.retainAll(c);<z>
;<z>
{<z>
(1, parent.getColumnCount());<z>
;<z>
);<z>
{<z>
column = i;<z>
row = index;<z>
++) {<z>
accessibleTableListeners.elementAt(j);<z>
getCell(event);<z>
accessible;<z>
++) {<z>
.getPositionAttribute(index);<z>
= positionObj.pointValue();<z>
children[j].getSizeAttribute(index);<z>
sizeObj.sizeValue();<z>
width) {<z>
= this;<z>
;<z>
)<z>
if (declarations == null)<z>
, this, RoutePackage.MODEL__DECLARATIONS);<z>
;<z>
public Atom gte(NumericAtom value)<z>
= value.doubleValue();<z>
);<z>
User u, String srcTag)<z>
srcTag;<z>
.get("SOURCE", k);<z>
null) {<z>
});<z>
s != null) {<z>
, s.getKey(), s);<z>
s);<z>
(u);<z>
;<z>
, int length) throws IOException<z>
+ length > bytes.length)) {<z>
throw new IOException("Could not read block (block start: " + start<z>
+ length + ", data length: "<z>
.length + ").");<z>
;<z>
result, 0, length);<z>
return result;<z>
Connection con,<z>
String userId) throws SQLException {<z>
<ClassifiedDetail>();<z>
query =<z>
= null;<z>
rs = null;<z>
;<z>
, instanceId);<z>
prepStmt.setString(2, userId);<z>
prepStmt.executeQuery();<z>
while (rs.next()) {<z>
ClassifiedDetail classified = recupClassified(rs);<z>
(classified);<z>
finally {<z>
close(rs, prepStmt);<z>
listClassifieds;<z>
() {<z>
String ret = prefixToString();<z>
* ID.BYTES);<z>
tagsNo; i++) {<z>
.BYTES;<z>
ret += " "<z>
+ UnsignedBytes.join(<z>
.copyOfRange(key, offset, offset + 2<z>
BYTES));<z>
ret;<z>
builder,<z>
,<z>
Icon icon,<z>
tooltipText,<z>
SmartPsiElementPointer>> pointers,<z>
> cellRenderer,<z>
{<z>
;<z>
;<z>
myIcon = icon;<z>
myTooltipText = tooltipText;<z>
= empty;<z>
private void writeOutRTF(StyledDocument doc) throws IOException,<z>
getFileFromChooser(".", JFileChooser.SAVE_DIALOG,<z>
MutableFilter.EXT_RTF,<z>
("FiletypeRTF"));<z>
(whatFile != null) {<z>
FileOutputStream(whatFile);<z>
);<z>
());<z>
);<z>
;<z>
refreshOnUpdate();<z>
public static Temperature fromCelciusValue(double celciusValue) {<z>
Temperature();<z>
celciusValue + 273.15;<z>
newInstance;<z>
) {<z>
ref.getBase()) )<z>
0;<z>
SNP);<z>
tracker, ref);<z>
{<z>
vc);<z>
emptyID() ) {<z>
;<z>
) ) {<z>
, sampleName);<z>
);<z>
fixReferenceBase ) {<z>
;<z>
tracker, ref.getLocus());<z>
;<z>
("couchDbConnector") CouchDbConnector db, MRSFacilityAdapter facilityAdapter,<z>
) {<z>
super(Facility.class, db);<z>
facilityAdapter;<z>
.allMotechModuleFacilities = allMotechModuleFacilities;<z>
, InputCursor m) {<z>
(source);<z>
id = id;<z>
this.positionX = positionX;<z>
= positionY;<z>
m;<z>
doPropertyChange(PropertyChangeEvent event) {<z>
getProperty();<z>
)) {<z>
fChangeListener.propertyChange(event);<z>
)) {<z>
IWorkingSet) event.getNewValue();<z>
{<z>
(fWorkingSetFilter != null) {<z>
notifyWorkingSetContentChange();<z>
(event);<z>
Item getAncestor(int level) throws RepositoryException {<z>
remote.getAncestor(level));<z>
(RemoteException ex) {<z>
RemoteRepositoryException(ex);<z>
public PromotionStatusBuilder timestampDate(Date timestampDate) {<z>
== null) {<z>
"Cannot format a null date.");<z>
.STARTED_FORMAT).format(timestampDate);<z>
return this;<z>
) throws StandardException<z>
)<z>
;<z>
column.length != this.column.length)<z>
false;<z>
i++)<z>
[i]) != 0)<z>
;<z>
true;<z>
int codePointBefore(CharSequence seq, int index) {<z>
if (seq == null) {<z>
throw new NullPointerException();<z>
seq.length();<z>
> len) {<z>
IndexOutOfBoundsException();<z>
.charAt(--index);<z>
0) {<z>
;<z>
.charAt(index);<z>
if (isSurrogatePair(high, low)) {<z>
, low);<z>
return low;<z>
throws Exception {<z>
();<z>
String>() {<z>
String, String> entry) {<z>
getRequest() + " expired");<z>
;<z>
executor, 5000, listener, "window2monitor");<z>
, 1000, 4000);<z>
;<z>
"Press any key to add another request...");<z>
;<z>
);<z>
());<z>
out.println("Press any key to add response...");<z>
.in.read();<z>
);<z>
, "Response1");<z>
) {<z>
.info("Request1 was not present in window");<z>
else {<z>
responseFuture1.getRequest());<z>
));<z>
out.println("Press any key to get rid of our reference to Window");<z>
;<z>
();<z>
destroy();<z>
;<z>
window2 = null;<z>
);<z>
);<z>
System.in.read();<z>
shutdown();<z>
{<z>
createFS(int addr, CASImpl cas) {<z>
.useExistingInstance) {<z>
.getJfsFromCaddr(addr);<z>
{<z>
, xcomp_Type.this);<z>
.jcas.putJfsFromCaddr(addr, fs);<z>
return fs;<z>
return fs;<z>
xcomp_Type.this);<z>
name, String currentVersion) throws Exception {<z>
"http://dev.bukkit.org/server-mods/" + name.toLowerCase() + "/files.rss";<z>
(pluginUrlString);<z>
).getInputStream());<z>
doc.getDocumentElement().normalize();<z>
.getElementsByTagName("item");<z>
(0);<z>
1) {<z>
= (Element) firstNode;<z>
firstElementTagName = firstElement.getElementsByTagName("title");<z>
0);<z>
firstNameElement.getChildNodes();<z>
0).getNodeValue();<z>
;<z>
() {<z>
SSLContext.getInstance("TLS");<z>
[] {new DummyTrustManager()};<z>
.security.SecureRandom());<z>
.getSocketFactory();<z>
) {<z>
);<z>
HDFSState hdfsState, Session session, IN request) {<z>
;<z>
} catch (Exception ex) {<z>
), 1);<z>
();<z>
log = true;<z>
NFS4Exception) {<z>
(NFS4Exception) ex;<z>
;<z>
.getError());<z>
(ex instanceof FileNotFoundException) {<z>
response.setStatus(NFS4ERR_NOENT);<z>
} else if (ex instanceof IOException) {<z>
;<z>
{<z>
setStatus(NFS4ERR_INVAL);<z>
ex instanceof UnsupportedOperationException) {<z>
NFS4ERR_NOTSUPP);<z>
if (ex instanceof AccessControlException) {<z>
);<z>
} else {<z>
);<z>
String msg = session.getSessionID() + " Error for client "<z>
().getSimpleName();<z>
) {<z>
(msg, ex);<z>
} else {<z>
;<z>
response;<z>
scale)<z>
()),<z>
)));<z>
(d.width, d.height);<z>
(Graphics2D)img.getGraphics();<z>
(0,0);<z>
(p, scale);<z>
();<z>
;<z>
(g, d);<z>
(q);<z>
1/scale);<z>
, format, output);<z>
return true;<z>
catch ( Exception e ) {<z>
;<z>
;<z>
self) {<z>
literalString = UMLFactory.eINSTANCE.createLiteralString();<z>
);<z>
;<z>
short clip(float sample)<z>
) ? 32767 :<z>
-32768.0f) ? -32768 :<z>
));<z>
) {<z>
WCSServerFactory.PARAMETERS, serverURL, security));<z>
version == null){<z>
throw new IllegalArgumentException("unkonwed version : " + version);<z>
;<z>
originalVersionId_)<z>
UtestSearch();<z>
("accessRoleId", roleId_);<z>
undoAllDeletedEntities(UserRole.class, search);<z>
, search);<z>
class, roleId_);<z>
stop(BundleContext context) throws Exception {<z>
(themeListenerRegistration != null) {<z>
.unregister();<z>
themeListenerRegistration = null;<z>
context = null;<z>
null;<z>
signed, boolean big_endian) throws Exception {<z>
] bf = null;<z>
!fp) {<z>
radix).toByteArray();<z>
size == 4) {<z>
floatToIntBits(Float.parseFloat(s));<z>
= new byte[size];<z>
; i++) {<z>
i) * 8)) & 0xff);<z>
== 8) {<z>
s));<z>
[size];<z>
; i++) {<z>
);<z>
new Exception("Unsupported floating point format");<z>
[size];<z>
) != 0) {<z>
= (byte)0xff;<z>
) {<z>
length - i - 1];<z>
length - i - 1 : i;<z>
] = b;<z>
rs;<z>
DBException<z>
null)<z>
(type == 1)<z>
new File(fileName);<z>
new File(cheminFichier);<z>
if(!src.exists())<z>
;<z>
if(dest.exists())<z>
;<z>
();<z>
(Exception e)<z>
;<z>
src, dest);<z>
tmp == false)<z>
"Impossible de copier le fichier de la base", 3);<z>
(type == 2)<z>
(cheminFichier);<z>
.exists())<z>
delete();<z>
.createNewFile();<z>
catch (Exception e)<z>
+ e.getMessage(), 3);<z>
id);<z>
FileOutputStream destinationFile = null;<z>
destinationFile = new FileOutputStream(dest);<z>
(echantillon);<z>
close();<z>
(Exception e)<z>
);<z>
] points,<z>
SimpleSeriesRenderer seriesRenderer, float yAxisValue, int seriesIndex) {<z>
;<z>
points.length;<z>
.setColor(seriesRenderer.getColor());<z>
);<z>
;<z>
< length; i += 4) {<z>
];<z>
points[i + 1];<z>
2];<z>
+ 3];<z>
paint);<z>
));<z>
public void displayChanged(DisplayEvent e)<z>
VisADException, RemoteException {<z>
{<z>
2;<z>
());<z>
DisplayEvent.FRAME_DONE) {<z>
(count > 0) {<z>
));<z>
count--;<z>
) {<z>
(this) {<z>
this.notify();<z>
--;<z>
setPathArrays(float[] knots,<z>
positions) {<z>
length != positions.length)<z>
(J3dI18N.getString("PositionPathInterpolator0"));<z>
knots);<z>
positions);<z>
fieldChanged(Field field, int context) {<z>
PROGRAMMATIC) {<z>
();<z>
;<z>
<= 1) {<z>
screen, this.defaultCommand );<z>
HttpServletRequest request) {<z>
username = request.getParameter("USERNAME");<z>
;<z>
(password)) {<z>
String credentials = request.getHeader("Authorization");<z>
("Basic ")) {<z>
("Basic ", ""));<z>
"Found HTTP Basic credentials", module);<z>
= credentials.split(":");<z>
) {<z>
;<z>
parts[0];<z>
password = parts[1];<z>
{<z>
;<z>
getPropertyValue("security.properties", "username.lowercase"))) {<z>
;<z>
.getPropertyValue("security.properties", "password.lowercase"))) {<z>
password.toLowerCase();<z>
();<z>
.put("login.username", username);<z>
password);<z>
;<z>
public Pointcut pmoving(int steps) {<z>
AndPCD(<z>
(),<z>
TurtleMovingStepsPCD(steps));<z>
) throws RecognitionException {<z>
= keepStackSize();<z>
state.backtracking==0 ) {<z>
;<z>
(state.failed) return ;<z>
if ( state.backtracking==0 ) {<z>
).getLeftCurlyBracketKeyword_0_3());<z>
{<z>
);<z>
,re);<z>
;<z>
boolean forRebalance) {<z>
TapAgentsAction.Add);<z>
;<z>
hostId, TapAgentsAction.Del);<z>
return host;<z>
synchronized boolean destroyCounter(String counterName) throws EXistException {<z>
{<z>
counters.remove(counterName);<z>
serializeTable();<z>
) {<z>
new EXistException("Unable to remove counter from counter store file.");<z>
return true;<z>
else {<z>
;<z>
int tree, final int stage) throws IOException {<z>
final AbstractTreeIterator i = getTree(tree);<z>
(i != null) {<z>
tw.getRawMode(tree))) {<z>
tw<z>
);<z>
} else {<z>
;<z>
getRawPath(), stage);<z>
(), i.idOffset());<z>
getFileMode(tree));<z>
;<z>
importDatabase(Database database, final DatabaseImporter importer) {<z>
{<z>
NotifyDescriptor.WARNING_MESSAGE);<z>
).notify(msg);<z>
getUI(importer);<z>
ui != null) {<z>
);<z>
();<z>
;<z>
);<z>
panel instanceof ValidationPanel) {<z>
panel;<z>
ChangeListener() {<z>
{<z>
isProblem());<z>
});<z>
);<z>
{<z>
(false);<z>
ui.unsetup(true);<z>
{<z>
();<z>
null;<z>
if (importer instanceof LongTask) {<z>
= (LongTask) importer;<z>
String containerSource = database.getName();<z>
;<z>
, containerSource);<z>
() {<z>
{<z>
importer);<z>
{<z>
setSource(containerSource);<z>
finishImport(container);<z>
(Exception ex) {<z>
RuntimeException(ex);<z>
;<z>
{<z>
.WARNING, "", ex);<z>
{<z>
nt, message);<z>
);<z>
);<z>
ssdpPacket);<z>
.nextInt(1800 / 2));<z>
ssdpPacket);<z>
.nextInt(1800 / 2));<z>
private void iniciar() {<z>
= new Jogo();<z>
;<z>
= false;<z>
();<z>
);<z>
null){<z>
interrupt();<z>
thread_jogo = null;<z>
System.gc();<z>
{<z>
() {<z>
(!jogo.isFimJogo()) {<z>
(!PAUSADO) {<z>
(jogo.getMontarTabuleiro()) {<z>
);<z>
;<z>
getFase().getTextoFase());<z>
setVisible(true);<z>
;<z>
;<z>
.getInstance().getBuffer()) {<z>
0:<z>
();<z>
case 1:<z>
;<z>
case 2:<z>
moverBaixo();<z>
case 3:<z>
();<z>
4:<z>
();<z>
);<z>
();<z>
);<z>
fimJogo();<z>
(5000);<z>
;<z>
setVisible(true);<z>
){<z>
(ext.getMessage());<z>
setErroTexto(ext.getMessage());<z>
Exception ex1) {<z>
.getMessage());<z>
;<z>
});<z>
start();<z>
loggerName, String levelName) {<z>
.getLogger(loggerName);<z>
if (logger != null) {<z>
levelName != null) {<z>
.parse(levelName);<z>
newLevel);<z>
{<z>
setLevel(null);<z>
} else {<z>
(<z>
+ loggerName);<z>
VirtualFile... vFiles) {<z>
VirtualFile file : vFiles) {<z>
;<z>
) return false;<z>
;<z>
() {<z>
Exec_f);<z>
.AddCommand("echo", Echo_f);<z>
Cmd.AddCommand("cmdlist", List_f);<z>
, Alias_f);<z>
);<z>
> getNamingContexts(ConnectionConfig connectionConfig) throws Exception {<z>
return (Collection<DN>)invoke(<z>
,<z>
ConnectionConfig.class.getName() }<z>
{<z>
(removed) {<z>
();<z>
();<z>
= false;<z>
true;<z>
(new LWCProtectionRemovePostEvent(this));<z>
{<z>
Status.ACTIVE) {<z>
.Status.INACTIVE);<z>
checkAndSaveHistory();<z>
removed = true;<z>
getDatabaseThread().removeProtection(this);<z>
).removeProtection(id);<z>
();<z>
NSDictionary nsdictionary, WOElement woelement) {<z>
("input", nsdictionary, woelement);<z>
())<z>
) + "> 'value' attribute not present or is a constant");<z>
);<z>
WOAssociation)_associations.removeObjectForKey("dateformat");<z>
);<z>
removeObjectForKey("useDecimalNumber");<z>
removeObjectForKey("blankIsNull");<z>
;<z>
_numberFormat != null) {<z>
).getName() + "> Cannot have 'dateFormat' and 'numberFormat' attributes at the same time.");<z>
){<z>
e2;<z>
) return e1;<z>
== null)<z>
comp = COMPARABLE_COMPARATOR;<z>
:e1;<z>
IOException<z>
= new byte[i];<z>
int j;<z>
1)<z>
;<z>
void enableDragging() {<z>
dgr.setComponent(shapeView);<z>
+ shapeView);<z>
null) {<z>
clear();<z>
>, DropTarget>();<z>
).keySet()) {<z>
.get(gr);<z>
) != null) {<z>
.getDropTarget());<z>
(shapeView, DnDConstants.ACTION_MOVE, new MoveActionDropListener(<z>
) view), true));<z>
) throws XMLSecurityException {<z>
this._constructionElement.getFirstChild();<z>
decode(t.getData());<z>
throws ThinklabException {<z>
_session = session;<z>
concept;<z>
) {<z>
).retrieveConcept(concept);<z>
isPartOfSourceFile() {<z>
();<z>
ast != null) {<z>
.class);<z>
!= null) {<z>
.isPartOfSourceFile(getOffset());<z>
;<z>
int removeDir(File dir) {<z>
[] files=dir.listFiles();<z>
null)<z>
;<z>
0;<z>
(File file: files) {<z>
isDirectory())<z>
;<z>
else if(file.isFile()) {<z>
;<z>
.remove(key);<z>
count++;<z>
return count;<z>
, boolean insensitive)<z>
super(matcher);<z>
.insensitive = insensitive;<z>
= new ArrayList();<z>
{<z>
new EntriesHandler(dir);<z>
CvsApplicationLevelConfiguration.getCharset());<z>
return entriesHandler;<z>
Exception ex) {<z>
, ENTRIES, true);<z>
{<z>
(new Runnable() {<z>
() {<z>
;<z>
, dir.getAbsolutePath(), entries),<z>
"message.error.invalid.entries.title"));<z>
;<z>
return entriesHandler;<z>
toString()<z>
()) return super.toString();<z>
toString());<z>
(" (first: ");<z>
append(first);<z>
", last: ");<z>
);<z>
result.append(')');<z>
();<z>
(MenuItem item) {<z>
(item);<z>
);<z>
);<z>
toMillis(false)));<z>
)) {<z>
101:<z>
));<z>
taskState = 2;<z>
;<z>
case 102:<z>
global_app.getLastLocation()) < 300) {<z>
));<z>
= 0;<z>
);<z>
.show();<z>
return true;<z>
statement) {<z>
;<z>
();<z>
= getConverter().getMethodReturnType();<z>
= returnValue != null && methodReturnType != null ?<z>
:<z>
;<z>
= new ReturnStatement(<z>
V> dst) {<z>
"SkeletonTreeMap.swapKey: key " + key + " already exists in target map"); }<z>
" does not exist in source map"); }<z>
skmap.remove(key);<z>
dst.ghosts; }<z>
.put(key, sk);<z>
tryConsume() {<z>
)) == null) return null;<z>
cloneAndConsume("statements");<z>
instanceof EObject) {<z>
param = createEObjectConsumer((EObject)value);<z>
())) {<z>
.PARSER_RULE_CALL;<z>
);<z>
obj;<z>
param;<z>
return null;<z>
void initEditors() {<z>
] pages = fWindow.getPages();<z>
.length; i++) {<z>
;<z>
{<z>
[j].getEditor(false);<z>
i].isPartVisible(editor)) {<z>
(editor);<z>
mode) {<z>
mode;<z>
) {<z>
();<z>
mode == Mode.PLAYBACK) {<z>
setPlaybackMode();<z>
boolean confirmRestart() {<z>
return MessageDialog.openConfirm(<z>
),<z>
COMPOSITE_RESTART_DIALOG_TITLE,<z>
);<z>
public List<Node> getDescendants() {<z>
<Node>();<z>
);<z>
descendants;<z>
, int transparency) {<z>
transparency);<z>
Graphics2D gc = ret.createGraphics();<z>
setComposite(AlphaComposite.Src);<z>
0, 0, null);<z>
;<z>
ret;<z>
{<z>
= new HashSet();<z>
).getMart().getSchemas()<z>
);) {<z>
Schema) i.next();<z>
schema,<z>
;<z>
0;<z>
new HashSet();<z>
iterator(); j<z>
);) {<z>
);<z>
!usedRels.contains(rel)) {<z>
.add(rel);<z>
(new RelationComponent(rel, this),<z>
indent++),<z>
;<z>
);<z>
.add(schemaComponent,<z>
extRels.size()),<z>
TABLE_LAYER);<z>
.listener);<z>
{<z>
null) {<z>
();<z>
return fRegistry;<z>
{<z>
;<z>
null, null, null, null);<z>
true;<z>
while (loop) {<z>
.moveToNext()) {<z>
);<z>
{<z>
;<z>
cursor.close();<z>
s;<z>
{<z>
System.out;<z>
m_tempErr = System.err;<z>
.setOut(new PrintStream(m_pipedOut));<z>
.setErr(new PrintStream(m_pipedOut));<z>
m_loggingThread.start();<z>
;<z>
= new CmsUpdateDBManager();<z>
(m_updateBean);<z>
);<z>
catch (Exception e) {<z>
);<z>
);<z>
{<z>
;<z>
(m_pipedOut != null) {<z>
;<z>
e) {<z>
m_tempOut);<z>
;<z>
String tablename) throws Exception<z>
<String>();<z>
);<z>
String columnQuery = "select COLUMN_NAME, DATA_TYPE from USER_TAB_COLUMNS WHERE TABLE_NAME = ?";<z>
= connection.prepareStatement(columnQuery);<z>
statement.setString(1, tablename);<z>
.executeQuery();<z>
))<z>
1));<z>
resultSet.getString(2);<z>
"BLOB"));<z>
resultSet.close();<z>
statement.close();<z>
.size()];<z>
);i++)<z>
= isLob.get(i);<z>
{cols, isLobArray};<z>
c_(int i) {<z>
.STONE;<z>
1) {<z>
= Block.COBBLESTONE;<z>
{<z>
Block.SMOOTH_BRICK;<z>
(block);<z>
hashCode() {<z>
;<z>
;<z>
) : 0);<z>
;<z>
> getSpecificListing(String item)<z>
throws ThinklabException {<z>
);<z>
<Object>();<z>
) {<z>
) {<z>
)));<z>
else {<z>
u : getHierarchyStrings(c))<z>
ret.add(u);<z>
} else {<z>
;<z>
ret;<z>
int getSelectedRowCount()<z>
iMin = listSelectionModel.getMinSelectionIndex();<z>
);<z>
0;<z>
<= iMax; i++)<z>
)<z>
count++;<z>
return count;<z>
other) {<z>
.getClass())) {<z>
));<z>
int lastComparison = 0;<z>
other;<z>
));<z>
{<z>
return lastComparison;<z>
) {<z>
.success);<z>
{<z>
lastComparison;<z>
;<z>
C> f) {<z>
A, C>() {<z>
A a) {<z>
g.f(a));<z>
void rule__Elliptical_arc_argument__Group__7__Impl() throws RecognitionException {<z>
;<z>
);<z>
=2;<z>
1);<z>
LA42_0==5) ) {<z>
alt42=1;<z>
alt42) {<z>
:<z>
);<z>
rulecomma();<z>
state._fsp--;<z>
.getElliptical_arc_argumentAccess().getCommaParserRuleCall_7());<z>
) {<z>
reportError(re);<z>
);<z>
(stackSize);<z>
) {<z>
Parameters.NumAtomicPerComp; partNum++) {<z>
+ 1) % Parameters.NumAtomicPerComp;<z>
], createType(),<z>
Parameters.XYRange) + 1);<z>
NumAtomicPerComp; partNum++) {<z>
partNum];<z>
() < Parameters.NumConnPerAtomic) {<z>
(Parameters.NumAtomicPerComp);<z>
], createType(),<z>
) + 1);<z>
{<z>
javaTypeDescriptor, this ) {<z>
String name, WrapperOptions options) throws SQLException {<z>
);<z>
int index, WrapperOptions options) throws SQLException {<z>
.getInt( index ), options );<z>
throws SQLException {<z>
;<z>
( Notification notification ) {<z>
if (NotificationUtilities.getRemovedChildren(notification) == null<z>
"EMPTY";<z>
;<z>
length; i++) {<z>
getRemovedChildren(notification)[i]);<z>
.toString();<z>
void dialogChanged()<z>
getText().length() == 0)<z>
"Message Listener class name must be specified");<z>
matches("[a-zA-Z_][a-zA-Z_0-9]*"))<z>
"Message Listener interface name must be validated");<z>
.getText().matches("[a-zA-Z_][a-zA-Z_0-9]*"))<z>
);<z>
getText().matches("[a-zA-Z_][a-zA-Z_0-9]*"))<z>
updateStatus("Activation class name must be validated");<z>
;<z>
(<z>
sb,<z>
,<z>
boolean printAnnotations,<z>
{<z>
.name(type));<z>
if (this instanceof StringNode) {<z>
' ');<z>
sb.append(getString());<z>
if (type == Token.FUNCTION) {<z>
sb.append(' ');<z>
!= Token.NAME) {<z>
("<invalid>");<z>
else {<z>
getString());<z>
else if (type == Token.NUMBER) {<z>
.append(' ');<z>
getDouble());<z>
if (printSource) {<z>
= getLineno();<z>
1) {<z>
;<z>
append(lineno);<z>
printAnnotations) {<z>
[] keys = getSortedPropTypes();<z>
i++) {<z>
];<z>
PropListItem x = lookupProperty(type);<z>
;<z>
(type));<z>
);<z>
String value;<z>
type) {<z>
.toString();<z>
.append(value);<z>
append(']');<z>
printType) {<z>
) {<z>
jsType.toString();<z>
if (jsTypeString != null) {<z>
append(" : ");<z>
;<z>
BootstrapManager bootstrap,<z>
MercuryAttributePrimitive ownAttribute,<z>
{<z>
bootstrap = bootstrap;<z>
;<z>
globalBootstrap = globalBootstrap;<z>
public void run() {<z>
{<z>
= (Finalizer)queue.remove();<z>
;<z>
) {<z>
DocType getNewDocType() {<z>
size() > 0) {<z>
().get(0);<z>
_newDocType;<z>
(Class parentType,<z>
elementType,<z>
Element el,<z>
,<z>
)<z>
SOAP12Address)extReg.createExtension(parentType,<z>
elementType);<z>
.ATTR_LOCATION);<z>
DOMUtils.getAttributeNS(el,<z>
Constants.NS_URI_WSDL,<z>
ATTR_REQUIRED);<z>
)<z>
locationURI);<z>
requiredStr != null)<z>
requiredStr));<z>
;<z>
wantsToBePlayed() {<z>
if (handlePossibleGrandMarketBuy())<z>
false;<z>
return true;<z>
name) {<z>
name, "name cannot be null");<z>
this.outputProperties.get(name);<z>
int start, int end) {<z>
;<z>
.set(source);<z>
;<z>
end;<z>
JarInfo> getIn(final JarInfo n) {<z>
<JarInfo>();<z>
) {<z>
);<z>
;<z>
ownerId) {<z>
.SORCERY}, "{3}{U}");<z>
= "AVR";<z>
true);<z>
());<z>
;<z>
.io.ObjectInputStream s)<z>
, ClassNotFoundException<z>
defaultReadObject();<z>
();<z>
, s, null);<z>
{<z>
List>();<z>
myDocumentMulticaster.getListeners()));<z>
(myEditReadOnlyMulticaster.getListeners()));<z>
()));<z>
(myEditorMouseMotionMulticaster.getListeners()));<z>
getListeners()));<z>
()));<z>
>(mySelectionMulticaster.getListeners()));<z>
()));<z>
getListeners()));<z>
.getListeners()));<z>
;<z>
delete(<z>
UserGroupInformation ugi,<z>
@DefaultValue(DelegationParam.DEFAULT)<z>
final DelegationParam delegation,<z>
DEFAULT)<z>
,<z>
.NAME) @DefaultValue(DoAsParam.DEFAULT)<z>
final DoAsParam doAsUser,<z>
.NAME) final UriFsPathParam path,<z>
@DefaultValue(DeleteOpParam.DEFAULT)<z>
DeleteOpParam op,<z>
)<z>
final RecursiveParam recursive<z>
IOException, InterruptedException {<z>
path, op, recursive);<z>
{<z>
public Response run() throws IOException {<z>
);<z>
(ugi, delegation, username, doAsUser,<z>
recursive);<z>
} finally {<z>
null);<z>
);<z>
protected CustomTxtParserInputWizardPage(ISelection selection, CustomTxtTraceDefinition definition) {<z>
;<z>
{<z>
CustomTxtParserInputWizardPage_windowTitleNew);<z>
CustomTxtParserInputWizardPage_descriptionNew;<z>
else {<z>
(Messages.CustomTxtParserInputWizardPage_windowTitleEdit);<z>
.CustomTxtParserInputWizardPage_desccriptionEdit;<z>
setDescription(defaultDescription);<z>
selection = selection;<z>
definition = definition;<z>
definition != null) {<z>
;<z>
Exception {<z>
();<z>
();<z>
));<z>
);<z>
.getValue().trim();<z>
) return;<z>
)) return;<z>
TextField();<z>
.setName(name);<z>
(label);<z>
;<z>
contains(field)) {<z>
.show("The text field name (" + name + ") has been used.");<z>
} else {<z>
;<z>
field.setQuestion(question);<z>
.save(question);<z>
+ name + "=" + label);<z>
.refresh();<z>
);<z>
SimplifiedCardinalDirection orientation) {<z>
= new Vector<FGESegment>();<z>
FGESegment s : getSegments()) {<z>
(), orientation);<z>
boolean cutsAnOtherSegment = false;<z>
(FGESegment s2 : getSegments()) {<z>
(!s.equals(s2)) {<z>
s2.intersect(hl);<z>
{<z>
true;<z>
(intersect instanceof FGEEmptyArea) {<z>
{<z>
("Unexpected intersection: " + intersect);<z>
;<z>
if (!cutsAnOtherSegment) {<z>
keptSegments.add(s);<z>
size() == 0) {<z>
FGEEmptyArea();<z>
(keptSegments.size() == 1) {<z>
.firstElement();<z>
;<z>
{<z>
.size() == 0) {<z>
chain.add(s);<z>
} else {<z>
firstElement().getP1())) {<z>
), s.getP1()));<z>
.getP1())) {<z>
.add(0, s);<z>
().getP2())) {<z>
add(s);<z>
())) {<z>
s.getP1()));<z>
{<z>
"Multiple chains not implemented yet");<z>
= new Vector<FGEPoint>();<z>
.firstElement().getP1());<z>
(FGESegment s : chain) {<z>
());<z>
return new FGEPolylin(pts);<z>
(String flavor) {<z>
.equalsIgnoreCase("DocFlavor.BYTE_ARRAY")) {<z>
.BYTE_ARRAY.AUTOSENSE;<z>
("DocFlavor.INPUT_STREAM")) {<z>
.AUTOSENSE;<z>
)) {<z>
AUTOSENSE;<z>
d;<z>
c, Boolean wlbVerifyCert) throws<z>
= "pool.set_wlb_verify_cert";<z>
c.getSessionReference();<z>
wlbVerifyCert)};<z>
= c.dispatch(method_call, method_params);<z>
public static void setAppContext( Context appContext )<z>
= appContext;<z>
;<z>
decl, Element target) {<z>
(isJAXBBindingElement(decl)) {<z>
(Constants.NS_XMLNS, "jaxb")) {<z>
, JAXWSBindingsConstants.NS_JAXB_BINDINGS);<z>
(JAXWSBindingsConstants.NS_JAXB_BINDINGS, "version")) {<z>
);<z>
"extensionBindingPrefixes")) {<z>
.NS_JAXB_BINDINGS, "jaxb:extensionBindingPrefixes", "xjc");<z>
.NS_XJC_BINDINGS);<z>
(target);<z>
copyInscopeNSAttributes(decl);<z>
decl)) {<z>
Constants.NS_XMLNS, "JAXWS")) {<z>
);<z>
;<z>
;<z>
else {<z>
) != decl.getOwnerDocument()) {<z>
true);<z>
target.appendChild(decl);<z>
public MDRRuleGroupInstance findByC_C_First(long classNameId, long classPK,<z>
orderByComparator)<z>
, SystemException {<z>
(classNameId,<z>
orderByComparator);<z>
!= null) {<z>
return mdrRuleGroupInstance;<z>
StringBundler(6);<z>
append(_NO_SUCH_ENTITY_WITH_KEY);<z>
;<z>
append(classNameId);<z>
msg.append(", classPK=");<z>
);<z>
.CLOSE_CURLY_BRACE);<z>
msg.toString());<z>
QueryMetadata metadata, boolean forCountRow, boolean subQuery) {<z>
select = metadata.getProjection();<z>
getJoins();<z>
getTarget();<z>
);<z>
.getGroupBy();<z>
getHaving();<z>
;<z>
;<z>
;<z>
forCountRow) {<z>
size() == 1 && !subQuery) {<z>
);<z>
else {<z>
(SELECT_COUNT);<z>
boolean first = true;<z>
(JoinExpression je : joins) {<z>
(!first) {<z>
append(COMMA);<z>
));<z>
= false;<z>
")");<z>
) {<z>
()) {<z>
);<z>
) && !subQuery) {<z>
);<z>
} else {<z>
SELECT);<z>
|| metadata.isDistinct()) {<z>
);<z>
else {<z>
;<z>
) : FROM);<z>
instanceof Operation && subQuery) {<z>
source);<z>
} else {<z>
.getType().getName());<z>
(candidatePath)) {<z>
(source);<z>
(where != null) {<z>
.handle(where);<z>
1) {<z>
serializeVariables(joins);<z>
getConstantToLabel().isEmpty()) {<z>
getParams());<z>
()) {<z>
(COMMA, groupBy);<z>
{<z>
(having);<z>
isEmpty() && !forCountRow) {<z>
append(ORDER_BY);<z>
= true;<z>
> os : orderBy) {<z>
first) {<z>
COMMA);<z>
.getTarget());<z>
));<z>
;<z>
().isRestricting()) {<z>
();<z>
).getOffset();<z>
;<z>
;<z>
static KBCommentSoap toSoapModel(KBComment model) {<z>
;<z>
);<z>
());<z>
));<z>
.getCompanyId());<z>
(model.getUserId());<z>
;<z>
;<z>
());<z>
model.getClassNameId());<z>
(model.getClassPK());<z>
model.getContent());<z>
.getHelpful());<z>
soapModel;<z>
{<z>
;<z>
: dependentViewSql) {<z>
.viewName;<z>
if (force) {<z>
);<z>
else {<z>
, true);<z>
.removeSchemaObject(session, existingView);<z>
{<z>
(session, view);<z>
, viewName);<z>
dependentViewSql) {<z>
, true);<z>
failedView);<z>
protected AbstractFrameBodyTextInfo(byte textEncoding, String text) {<z>
);<z>
, textEncoding);<z>
);<z>
(<z>
CodedInputStream input)<z>
.io.IOException {<z>
).buildParsed();<z>
getTasks(String repositoryUrl) {<z>
>();<z>
if (repositoryUrl != null) {<z>
.values()) {<z>
().equals(repositoryUrl)) {<z>
;<z>
return repositoryTasks;<z>
createFollower(int index, IEObjectConsumer inst) {<z>
{<z>
(lastRuleCallOrigin, this, 0, inst);<z>
: return null;<z>
String user, final String password) {<z>
!= null;<z>
)) {<z>
baseUrl += "/";<z>
URL(baseUrl);<z>
MalformedURLException e) {<z>
e);<z>
{<z>
);<z>
;<z>
JvmClassWriter(final String className)<z>
);<z>
.className = className;<z>
, this<z>
, '/')))));<z>
;<z>
addConstant(new JvmConstant(JvmConstant.CONSTANT_Class, this<z>
JvmConstant("java/lang/Object"))));<z>
mw = this.createMethod("<init>", "()V",<z>
.PRIVATE);<z>
0);<z>
;<z>
.addOp(JvmOp.RETURN);<z>
(IEntity entity) {<z>
entity) {<z>
return true;<z>
;<z>
,<z>
message) {<z>
appAttemptId, RMAppAttemptEventType.LAUNCH_FAILED);<z>
;<z>
protected InvocableMemberMetadataCustomDataKey(final Integer modifier,<z>
final List<AnnotationMetadata> annotations,<z>
List<AnnotatedJavaType> parameterTypes,<z>
JavaSymbolName> parameterNames,<z>
<JavaType> throwsTypes) {<z>
);<z>
parameterTypes = parameterTypes;<z>
parameterNames = parameterNames;<z>
.throwsTypes = throwsTypes;<z>
, boolean permanent) throws PageException {<z>
.getByUuid(pageUuid);<z>
if(page == null){<z>
return null;<z>
;<z>
page.getSpace().getUnixName();<z>
if (permanent) {<z>
);<z>
.getPageUuid());<z>
e) {<z>
, e);<z>
) {<z>
e);<z>
getUid());<z>
(withChildren) {<z>
: children) {<z>
withChildren, permanent);<z>
else {<z>
Page parent = page.getParent();<z>
{<z>
child);<z>
.setParent(parent);<z>
+ 1);<z>
child);<z>
addPageCache(spaceUname, child);<z>
Space space = page.getSpace();<z>
);<z>
;<z>
.getPageUuid())) {<z>
null);<z>
space);<z>
true;<z>
info("Space home page removed: " + spaceUname);<z>
) {<z>
removeHomepage)<z>
(Page.REMOVED_HOMEPAGE);<z>
REMOVED);<z>
;<z>
spaceUname, page);<z>
else {<z>
page.setParent(null);<z>
.removePageComments(page.getUid());<z>
setTouchedInfo(userReadingService, page);<z>
getPageProgress();<z>
.removeObject(page);<z>
(progress != null)<z>
.removeObject(progress);<z>
getPageUuid());<z>
if(histories != null){<z>
histories) {<z>
);<z>
removeByPageUid(page.getUid());<z>
));<z>
, page);<z>
pageUuid);<z>
getPageEventListeners(page.getPageUuid());<z>
.length > 0){<z>
.info("Page saved event dispatching...");<z>
) {<z>
);<z>
(PageEventHanderException e) {<z>
);<z>
page;<z>
) {<z>
byte[] keybyte;<z>
"ƒþX]Lh/‘".getBytes("ISO-8859-1");<z>
{<z>
= "ƒþX]Lh/‘".getBytes();<z>
keybyte;<z>
category )<z>
if ( allowedContentTypes == null )<z>
true;<z>
if ( isCategoryOfAllowedContentTypes( category ) )<z>
;<z>
() )<z>
if ( isCategoryOrAnyDescendantsOfAllowedContentTypes( child ) )<z>
true;<z>
;<z>
{<z>
(node);<z>
editorCell = provider.createEditorCell(editorContext);<z>
;<z>
VirtualMachineImpl vm, PacketStream ps)<z>
{<z>
();<z>
, ps);<z>
, File file) {<z>
file;<z>
current != null) {<z>
ancestors.contains(current)) {<z>
return true;<z>
);<z>
false;<z>
IUnixSession us) {<z>
us = us;<z>
);<z>
getLogger();<z>
, NotificationChain msgs)<z>
= arrayType;<z>
;<z>
)<z>
oldArrayType, newArrayType);<z>
msgs.add(notification);<z>
msgs;<z>
Object obj) {<z>
(obj == null) {<z>
false;<z>
()) {<z>
false;<z>
(DefaultLiteral<T>) obj;<z>
value == null) {<z>
true;<z>
this.value == null) {<z>
;<z>
other.value == null) {<z>
;<z>
.value.getClass());<z>
otherVal)) {<z>
return false;<z>
true;<z>
, String destAbsPath, boolean removeExisting,<z>
, ConstraintViolationException, VersionException,<z>
AccessDeniedException, PathNotFoundException, ItemExistsException, RepositoryException<z>
.equals(getName()))<z>
);<z>
parseAbsPath(destAbsPath);<z>
if (destNodePath.isIndexSetExplicitly())<z>
);<z>
;<z>
parseAbsPath(srcAbsPath);<z>
;<z>
NodeImpl destParentNode =<z>
).getInternalPath(), true);<z>
== null || destParentNode == null)<z>
"No node exists at source path " + srcAbsPath<z>
" or no node exists one level above on destenation " + destAbsPath);<z>
(PermissionType.ADD_NODE);<z>
e)<z>
.getMessage());<z>
srcNode<z>
()).getQName());<z>
=<z>
destParentNode.getData(),<z>
NODE);<z>
= null;<z>
!= null)<z>
(destNodePath.getInternalPath());<z>
)<z>
allowsSameNameSiblings())<z>
= "A node with name (" + destAbsPath + ") is already exists.";<z>
new ItemExistsException(msg);<z>
ItemDataCloneVisitor initializer =<z>
().getInternalName(),<z>
getTransientNodesManager(), removeExisting,<z>
);<z>
.getData().accept(initializer);<z>
() > 0)<z>
(initializer.getItemDeletedExistingStates(true));<z>
initializer.getItemAddStates());<z>
performFinish() {<z>
IRunnableWithProgress op = new IRunnableWithProgress() {<z>
InterruptedException {<z>
.getURI(), monitor);<z>
isOpenNewlyCreatedDiagramEditor() && diagram != null) {<z>
TaiPanDiagramEditorUtil.openDiagram(diagram);<z>
PartInitException e) {<z>
e.getStatus());<z>
, true, op);<z>
{<z>
;<z>
) {<z>
{<z>
());<z>
} else {<z>
());<z>
;<z>
null;<z>
,<z>
FormException {<z>
ArrayList<String>();<z>
Composite parent) {<z>
);<z>
;<z>
setLayout(new GridLayout());<z>
.top = top;<z>
needEncryption( Object value )<z>
)<z>
Expression) value;<z>
.CONSTANT<z>
exprValue.getType( ) ) )<z>
;<z>
false;<z>
ClientException {<z>
get(CommandContext.STRING_DATA);<z>
(ListCommandID.STR_ALIST_SWAP_AND_PUSH)<z>
.append(ListCommandID.STR_WHITE_SPACE)<z>
.KEY))<z>
)<z>
VALUE)).length)<z>
STR_CRLF);<z>
(CommandContext.STRING_DATA, sb);<z>
{<z>
if (null != this.lobReader) {<z>
.lobReader);<z>
getREnvConfig(final ILaunchConfiguration configuration, final boolean local)<z>
CoreException {<z>
IREnv rEnv = readREnv(configuration);<z>
getConfig() : null;<z>
(config == null) {<z>
, RCore.PLUGIN_ID, ICommonStatusConstants.LAUNCHCONFIG_ERROR,<z>
);<z>
= config.validate();<z>
) {<z>
, ICommonStatusConstants.LAUNCHCONFIG_ERROR,<z>
null));<z>
.isLocal()) {<z>
));<z>
return config;<z>
, ObjectSet set)<z>
for (ObjectInfo info : objectInfo) {<z>
x, info.y)) {<z>
(info);<z>
++) {<z>
[ii];<z>
) {<z>
, x, y));<z>
)<z>
{<z>
.homedns.dade.jcgrid.<z>
admin.GridAdmin();<z>
.start();<z>
(true) {<z>
;<z>
v.size());<z>
it = v.iterator();<z>
hasNext()) {<z>
WorkerStats) it.next();<z>
getWorkingFor() +<z>
));<z>
sleep(1000);<z>
CorrelationKey(String canonicalForm) {<z>
;<z>
: firstTilde);<z>
) {<z>
= new ArrayList<String>();<z>
);<z>
();<z>
) {<z>
;<z>
) {<z>
[i++]);<z>
] == '~') {<z>
;<z>
= new StringBuffer();<z>
{<z>
(chars[i]);<z>
);<z>
keys.size()];<z>
keys.toArray(_keyValues);<z>
else {<z>
= new String[0];<z>
{<z>
{<z>
)) {<z>
cloud);<z>
if(cloudConfig.domains != null){<z>
domains.length; i++) {<z>
;<z>
(domainName)){<z>
+".json";<z>
);<z>
= new VariablesProvider() {<z>
?> getVariables() {<z>
homeVariables = BeeQueueHome.instance.getHomeVariables();<z>
);<z>
return homeVariables;<z>
;<z>
;<z>
domainName, dt);<z>
(Atom atom)<z>
equals(atom.getSymbol()))<z>
;<z>
!= 1)<z>
return false;<z>
.getBonds();<z>
.getType() == 1;<z>
) {<z>
oldIconURI = iconURI;<z>
newIconURI;<z>
(eNotificationRequired())<z>
iconURI));<z>
additionalKeywords) {<z>
notNull(predicates);<z>
Assert.notNull(additionalKeywords);<z>
.predicates = predicates;<z>
LinkedMultiValueMap<String, Type>();<z>
(KEYWORDS);<z>
.keywordSuperset.putAll(additionalKeywords);<z>
> headers)<z>
{<z>
null) {<z>
);<z>
.createTextMessage(message);<z>
header : headers.keySet()) {<z>
headers.get(header));<z>
producer.send(jmsMsg);<z>
void rule__JvmParameterizedTypeReference__Group_1_2__1__Impl() throws RecognitionException {<z>
;<z>
.backtracking==0 ) {<z>
getArgumentsAssignment_1_2_1());<z>
pushFollow(FOLLOW_rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1_in_rule__JvmParameterizedTypeReference__Group_1_2__1__Impl38988);<z>
();<z>
;<z>
failed) return ;<z>
( state.backtracking==0 ) {<z>
getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1());<z>
re) {<z>
re);<z>
;<z>
);<z>
public void flush()<z>
0)<z>
poll();<z>
);<z>
;<z>
Object wsdl) throws ValidationInterruptedException {<z>
= super.validate(wsdl);<z>
false)<z>
;<z>
wsdlResource = null;<z>
wsdl);<z>
instanceof IFile) {<z>
IFile)wsdl;<z>
!= null) {<z>
final MultiStatus mStatus = (MultiStatus)<z>
EclipseMessageUtils.createEmptyOKMultiStatus("WSDL Validation");<z>
;<z>
(!IOUtil.validateURL(wsdlUrl)) {<z>
wsdlUrl));<z>
validation.internal.eclipse.WSDLValidator<z>
wsdlUrl).getValidationMessages();<z>
0) {<z>
) {<z>
== IValidationMessage.SEV_ERROR) {<z>
msg;<z>
{<z>
.createSOAResourceWarnStatus(wsdlResource,<z>
null);<z>
} else {<z>
= getBasicStatusModel(<z>
IStatus.WARNING);<z>
msg);<z>
status;<z>
, ReachingDefs rdef) {<z>
();<z>
();<z>
);<z>
addAll(initial_set);<z>
){<z>
) W.remove();<z>
;<z>
getDependencies(et, rdef);<z>
{<z>
.prev[i];<z>
null) : "Something wrong with " + et;<z>
et);<z>
.contains(et2))<z>
);<z>
; ) {<z>
);<z>
.getValues(et);<z>
()]);<z>
Navigator() {<z>
[] next(Object node){<z>
node).next;<z>
){<z>
return ((ExactTemp) node).prev;<z>
[] roots_for_scc =<z>
]);<z>
buildSCC(roots_for_scc, et_navigator);<z>
(scc_set);<z>
return ts_scc.getFirst();<z>
( Composite parent,<z>
data, EObject eParent, String sProperty )<z>
null;<z>
.TYPE_NUMBERIC<z>
TextEditorComposite.TYPE_NONE )<z>
getUIFactory( )<z>
,<z>
);<z>
Exception e )<z>
getUIFactory( )<z>
,<z>
;<z>
TextEditorComposite.TYPE_DATETIME )<z>
getUIFactory( )<z>
createDateTimeDataElementComposite( parent,<z>
,<z>
,<z>
sProperty );<z>
catch ( Exception e )<z>
)<z>
createDateTimeDataElementComposite( parent,<z>
,<z>
;<z>
null )<z>
FILL_HORIZONTAL );<z>
= 3;<z>
.setLayoutData( gd );<z>
( this );<z>
;<z>
String toString() {<z>
+ ";";<z>
();<z>
length; i++ ) {<z>
);<z>
< length - 1) {<z>
+= ";";<z>
;<z>
public void rawStore(InternalCDORevision revision, OMMonitor monitor)<z>
();<z>
String... params) {<z>
) != 0))<z>
false;<z>
);<z>
"POST");<z>
(true);<z>
.setDoOutput(true);<z>
false);<z>
;<z>
uc.setInstanceFollowRedirects(false);<z>
"Mozilla/5.0 authURL/" + version);<z>
.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");<z>
uc.getOutputStream());<z>
);<z>
(out, "ip", this.ipAddress);<z>
out, "action", action);<z>
; ++x)<z>
;<z>
();<z>
out.close();<z>
)));<z>
readLine();<z>
("YES");<z>
;<z>
)<z>
in.readLine();<z>
();<z>
;<z>
Exception e) {<z>
, e);<z>
return false;<z>
final int port )<z>
port );<z>
Date date) {<z>
<List<TaskActivity>>() {<z>
getValue(ServiceCallResult result) {<z>
return result.getTaskActivityList();<z>
date));<z>
public void endElement(String name) throws SAXException {<z>
iasDescriptor) {<z>
;<z>
{<z>
stdCharacters(currentText);<z>
1;<z>
);<z>
locLength - nameLength);<z>
Curation database, final String accessionNumber) {<z>
Preconditions.checkNotNull(database, "Database has to be specified");<z>
(ProteinSequence) getSession()<z>
createQuery("select e.sequence from ProteinDatabaseEntry e where e.database=:database and e.accessionNumber=:accessionNumber")<z>
.setEntity("database", database)<z>
)<z>
);<z>
) {<z>
View lv = getLogicalView(fv);<z>
(lv);<z>
container = fv.getContainer();<z>
FontRenderContext frc = sun.swing.SwingUtilities2.<z>
(container);<z>
iter;<z>
.getContainer();<z>
{<z>
getLineInstance(c.getLocale());<z>
{<z>
.getLineInstance();<z>
LineBreakMeasurer(text, iter, frc);<z>
();<z>
0; i<n; i++ ) {<z>
lv.getView(i);<z>
GlyphView ) {<z>
child.getStartOffset();<z>
;<z>
.toIteratorIndex(p0));<z>
.nextLayout( Float.MAX_VALUE,<z>
p1), false );<z>
));<z>
(text.getBeginIndex());<z>
) {<z>
entrySet()) {<z>
entry.getKey();<z>
{<z>
);<z>
)<z>
{<z>
++).getFileName();<z>
if ( m_filter.matchesPattern(fname))<z>
;<z>
;<z>
getContentUrl(Item item, String contentCategory) throws Exception<z>
item.getComponents())<z>
contentCategory))<z>
c.getContent().getXLinkHref();<z>
null;<z>
expected, char[] actual) {<z>
expected != actual) {<z>
expected == null || actual == null) {<z>
;<z>
));<z>
ResourceEntry[] findResources(long hModule) {<z>
= new ArrayList();<z>
new ResourceLanguagesCallback() {<z>
long lpParam) {<z>
fromPointer(pName,<z>
), wLanguage);<z>
;<z>
return 1;<z>
{<z>
, long lpParam) {<z>
, pName, langs);<z>
ResourceTypesCallback types = new ResourceTypesCallback() {<z>
hModule, long pType, long lpParam) {<z>
return EnumResourceNames(hModule, pType, names);<z>
;<z>
size()]);<z>
main (String args[])<z>
)<z>
);<z>
= null;<z>
(args.length == 1)<z>
args[0]);<z>
null)<z>
);<z>
loginProperties.get("GAMECODE"));<z>
PROPERTY_GAMEPORT));<z>
() {<z>
) {<z>
.getConnection();<z>
=<z>
.class);<z>
}<z>
) {}<z>
clientRemoved(IWarlockClient client) {}<z>
(IWarlockClient client) {}<z>
});<z>
SGEConnection.PROPERTY_KEY));<z>
System.out.println(">> Sleeping for 10 seconds while listeners and the connection events happen (probably a better way to poll for this) <<");<z>
10);<z>
catch (InterruptedException e) {<z>
.printStackTrace();<z>
} catch (IOException e) {<z>
e.getMessage());<z>
);<z>
.exit(0);<z>
) {<z>
;<z>
startPosition = startPosition;<z>
sequence = sequence;<z>
= codonTableKey;<z>
;<z>
AminoAcid aa : sequence) {<z>
aa != null) {<z>
true;<z>
getMissingBundles(File missingfile) throws Exception {<z>
);<z>
().parse(missingfile, handler);<z>
size()]);<z>
visitVariableStatement(DartVariableStatement node) {<z>
(childNode == node.getVariables()) {<z>
return PropertyDescriptorHelper.DART_VARIABLE_STATEMENT_VARIABLES;<z>
{<z>
return visitStatement(node);<z>
)<z>
.configureShell( newShell );<z>
.getString( "SchemaViewSortingDialog.ViewSorting" ) );<z>
()<z>
false, "/html/controls.html", true);<z>
.setResizable(false);<z>
.setSize(640, 480);<z>
setLocationRelativeTo(frame);<z>
dialog.setVisible(true);<z>
(ExtensionBuilder builder)<z>
managed_4_2.JBossASLocalContainer.class);<z>
class);<z>
.v110.OnlineResourceType ort) {<z>
URI uri = null;<z>
ort.getHref());<z>
} catch (URISyntaxException ex) {<z>
Level.WARNING, null, ex);<z>
(uri != null) {<z>
.onlineResource(uri);<z>
;<z>
Object... params)<z>
UnableToCompleteException {<z>
params));<z>
UnableToCompleteException();<z>
) {<z>
assert chkSource != null;<z>
chkResult != null;<z>
null;<z>
chkSource && chkResult) {<z>
LayersCheckState.Final;<z>
chkSource) {<z>
;<z>
else if (chkResult) {<z>
Result;<z>
state;<z>
) {<z>
Function<NamePart, String>() {<z>
NamePart namePart) {<z>
);<z>
;<z>
public boolean isMultiple() {<z>
);<z>
);<z>
return _isMultiple;<z>
MessageInternal msg)<z>
getMessageID();<z>
;<z>
= msg.getUserID();<z>
);<z>
();<z>
msg.getExpiration();<z>
msg.getTimestamp();<z>
getPriority();<z>
getTypedProperties();<z>
{<z>
(tokenNames, e);<z>
parseFrom(<z>
protobuf.ByteString data)<z>
.protobuf.InvalidProtocolBufferException {<z>
;<z>
{<z>
<String>();<z>
StringReader(input));<z>
TermAttribute.class);<z>
);<z>
incrementToken()) {<z>
{<z>
term = termattr.term();<z>
.add(term);<z>
stream.end();<z>
.close();<z>
{<z>
, input));<z>
);<z>
(IOException e) {<z>
;<z>
printStackTrace();<z>
]);<z>
{<z>
;<z>
(Window.FEATURE_INDETERMINATE_PROGRESS);<z>
UpnpBrowserApp) getApplication());<z>
()) {<z>
);<z>
);<z>
activate(ComponentContext cCtx) throws Exception {<z>
.debug("Activating DashBoard");<z>
getClass().getResource("dashboard-template.ssp");<z>
getName(),<z>
,<z>
MediaType.APPLICATION_XHTML_XML_TYPE, true);<z>
public void closeLgui(String name) {<z>
item = null;<z>
{<z>
(name);<z>
!= null) {<z>
) {<z>
(null);<z>
);<z>
hours, int minutes, int seconds) {<z>
, name)) {<z>
;<z>
hours = hours;<z>
;<z>
seconds;<z>
+days+" days, "<z>
minutes+" minutes, and "+seconds+" seconds.");<z>
;<z>
,<z>
) String pp) {<z>
;<z>
List<Linia> listaLinii = null;<z>
mgrDatabase.createNamedQuery("wszystkieLinie")<z>
);<z>
);<z>
, pp);<z>
log.info("Budowanie wiadomosci z przystankow ");<z>
String out = messageBuilder.buildMessageLinia(listaLinii,<z>
PRZYSTANEK);<z>
.info("Wyslanie wiadomosci");<z>
(out, format);<z>
) {<z>
printStackTrace();<z>
INTERNAL_SERVER_ERROR)<z>
();<z>
initializePrograms() {<z>
MAX_LIGHTING_MODEL.ordinal(); progIndex++) {<z>
new ProgramPairs();<z>
);<z>
, shaderFilenames[progIndex].fragmentShaderFilename);<z>
("PosTransform.vert", "UniformColor.frag");<z>
{<z>
{<z>
.accept(v);<z>
(this);<z>
) {<z>
(firstTranscripts != null) {<z>
firstTranscripts;<z>
<Transcript>();<z>
()) {<z>
relationship.getSubjectFeature();<z>
if (transcript instanceof Transcript) {<z>
;<z>
{<z>
0);<z>
Transcript t : temp){<z>
.getUniqueName()) > 0){<z>
= t;<z>
= tempTanscript;<z>
.size() == 1){<z>
firstTranscripts = temp.get(0);<z>
firstTranscripts;<z>
PrintWriter getWriter() throws IOException {<z>
.writer == null) {<z>
getWriter());<z>
.writer;<z>
name)<z>
TypeFactory.create();<z>
return factory.getEnvironmentType(name);<z>
() {<z>
Call> values = callMap.values();<z>
; it.hasNext(); ) {<z>
it.next();<z>
continue;<z>
"Cancel " + call);<z>
));<z>
remove();<z>
(Position var0, Position var1)<z>
= var0.x - var1.x;<z>
= var0.z - var1.z;<z>
PI * 180.0D + 180.0D;<z>
.ZNeg)) : Orientations.XPos;<z>
int nextNBits(int bitsToGet) {<z>
next, next2next;<z>
1;<z>
.bytePointer;<z>
fillOrder == 1) {<z>
[bp];<z>
== l) {<z>
= 0x00;<z>
;<z>
bp + 1) == l) {<z>
[bp + 1];<z>
;<z>
else {<z>
= data[bp + 1];<z>
= data[bp + 2];<z>
) {<z>
[bp] & 0xff];<z>
bp == l) {<z>
= 0x00;<z>
;<z>
) {<z>
] & 0xff];<z>
= 0x00;<z>
{<z>
1] & 0xff];<z>
+ 2] & 0xff];<z>
} else {<z>
RuntimeException("TIFF_FILL_ORDER tag must be either 1 or 2.");<z>
bitsLeft = 8 - bitPointer;<z>
- bitsLeft;<z>
= 0;<z>
(bitsFromNextByte > 8) {<z>
;<z>
8;<z>
++;<z>
- bitsLeft);<z>
>> (8 - bitsFromNextByte);<z>
;<z>
{<z>
;<z>
table2[bitsFromNext2NextByte]) >>><z>
8 - bitsFromNext2NextByte);<z>
i3;<z>
bytePointer++;<z>
;<z>
else {<z>
(bitsFromNextByte == 8) {<z>
= 0;<z>
++;<z>
} else {<z>
= bitsFromNextByte;<z>
i2;<z>
return i;<z>
throws IOException<z>
;<z>
i)<z>
).openStream();<z>
4048];<z>
1; )<z>
;<z>
object) {<z>
itemPropertyDescriptors.add<z>
(ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),<z>
(),<z>
getString("_UI_OPMLink_source_feature"),<z>
"_UI_PropertyDescriptor_description", "_UI_OPMLink_source_feature", "_UI_OPMLink_type"),<z>
Literals.OPM_LINK__SOURCE,<z>
));<z>
(Object that) {<z>
null)<z>
;<z>
instanceof getSyncChunk_result)<z>
)that);<z>
;<z>
String type, String template, RestClient client) {<z>
this.type = type;<z>
;<z>
client = client;<z>
IIdentity getLocalIdentity() throws CtxBrokerException {<z>
cssOwnerId = null;<z>
.getThisNetworkNode();<z>
;<z>
InvalidFormatException e) {<z>
, e);<z>
cssOwnerId;<z>
final CrazyLocale locale, final Object... args)<z>
(), args);<z>
, Bukkit.getOnlinePlayers(), args);<z>
throws Exception {<z>
=<z>
;<z>
WorkspaceEntry> wsEntries = repositoryService.getCurrentRepository()<z>
.getConfiguration()<z>
getWorkspaceEntries();<z>
= null;<z>
wsEntries) {<z>
) {<z>
;<z>
wsInitRootNodeType;<z>
{<z>
, Constants.SetType.EXPANSION);<z>
"Odyssey";<z>
.hasBoosters = true;<z>
;<z>
;<z>
.numBoosterUncommon = 3;<z>
1;<z>
this.ratioBoosterMythic = 8;<z>
(List<ByteClass> list) {<z>
for (ByteClass bc : list) {<z>
;<z>
Configs.isLogMode())<z>
out.println("compiling:" + name);<z>
);<z>
, 0, bts.length));<z>
T> BigDecimal sumNullableBigDecimal(<z>
source,<z>
)<z>
todo();<z>
long teamId,<z>
name, java.lang.String description)<z>
.exception.PortalException,<z>
liferay.portal.kernel.exception.SystemException {<z>
updateTeam(teamId, name, description);<z>
execute() {<z>
toString());<z>
;<z>
);<z>
);<z>
_myHistory.add("");<z>
if(autoclear) {<z>
clear();<z>
public void offerField(final Field field)<z>
synchronized (pending)<z>
(), field);<z>
encoding)<z>
throws IOException {<z>
new ByteArrayOutputStream();<z>
;<z>
.toByteArray();<z>
getInputPinLabel_5097Parser() {<z>
inputPinLabel_5097Parser == null) {<z>
);<z>
inputPinLabel_5097Parser;<z>
)<z>
(activity);<z>
.setMessage(R.string.send_coins_add_address_dialog_title);<z>
)<z>
DialogInterface dialog, final int id)<z>
getFragmentManager(), address, suggestedAddressLabel);<z>
);<z>
);<z>
();<z>
{<z>
, location);<z>
reference;<z>
PositionConstants.NORTH_SOUTH) {<z>
NORTH:<z>
case PositionConstants.SOUTH:<z>
switch (location & PositionConstants.EAST_WEST) {<z>
.WEST:<z>
:<z>
)<z>
IOException {<z>
totallen = seq.getMicrosecondLength() / 1000000;<z>
(totallen + 4));<z>
, format, (int) len);<z>
) throws TextParseException {<z>
if( internalName != null ) {<z>
internalName;<z>
} else {<z>
TransientZone.class ) {<z>
if( internalName != null ) {<z>
return internalName;<z>
{<z>
;<z>
internalName = Name.fromString( internalNameString );<z>
;<z>
(IRubyElement element, String replacementString, int replacementOffset,<z>
, String displayString,<z>
String additionalProposalInfo, int objectType,<z>
] userAgentImages, String location)<z>
cursorPosition, image, displayString,<z>
, location);<z>
this.element = element;<z>
()<z>
rightGroupContentVisible = true;<z>
this.setupContentSize(lastKnownWidth,lastKnownHeight);<z>
;<z>
true);<z>
setUrl("images/opentriangle.gif");<z>
.setTabContentVisible(true);<z>
(final Event event) {<z>
.getPrefix();<z>
(getName());<z>
() {<z>
doInTransaction(TransactionStatus status) {<z>
event);<z>
return null;<z>
);<z>
} finally {<z>
ThreadCategory.setPrefix(prefix);<z>
final Project project)<z>
null)<z>
>> facets = facetFactory.getFacetTypes();<z>
facets)<z>
(project, facet);<z>
DelaunayError {<z>
;<z>
== null){<z>
= assignZValuesWithoutNotFlat();<z>
{<z>
);<z>
)<z>
(50,50,1000,600);<z>
if(b1 & (!b2))<z>
(Color.red);<z>
3);i++)<z>
;<z>
= Y[i];<z>
[i+1];<z>
= Y[i+1];<z>
;<z>
b1 = b2 = false;<z>
{<z>
switch (featureID) {<z>
Status_and_action_oldPackage.SAM_SCHEMA_VALUE__IS_INITIAL:<z>
();<z>
SAM_SCHEMA_VALUE__IS_INHIBITING:<z>
;<z>
case Status_and_action_oldPackage.SAM_SCHEMA_VALUE__SAM_SCHEMA_VARIABLE:<z>
if (resolve) return getSamSchemaVariable();<z>
basicGetSamSchemaVariable();<z>
.SAM_SCHEMA_VALUE__SAM_SOURCE_SCHEMA_ACTIONS:<z>
;<z>
Status_and_action_oldPackage.SAM_SCHEMA_VALUE__SAM_SOURCE_SCHEMA_VALUES:<z>
);<z>
Status_and_action_oldPackage.SAM_SCHEMA_VALUE__SAM_TARGET_SCHEMA_VALUES:<z>
getSamTargetSchemaValues();<z>
.SAM_SCHEMA_VALUE__SAM_OPERATORS:<z>
return getSamOperators();<z>
.SAM_SCHEMA_VALUE__SAM_SCHEMA_ACTIONS:<z>
;<z>
.eGet(featureID, resolve, coreType);<z>
IEObjectConsumer inst) {<z>
index) {<z>
;<z>
);<z>
: return null;<z>
() {<z>
SWT.TITLE);<z>
.Group_AOI);<z>
VERTICAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL));<z>
, Messages.Navigate_Selection, getFieldEditorParent());<z>
);<z>
(int stringIndex, CharSequence testString,<z>
matchResult) {<z>
if (!innerSet.hasConsumed(matchResult))<z>
, testString, matchResult);<z>
, matchResult);<z>
(nextIndex < 0) {<z>
;<z>
} else {<z>
return nextIndex;<z>
public UpdateTimeObservationLinkTargetElementCommand(<z>
TransactionalEditingDomain domain, String label,<z>
affectedFiles, Request request, EditPart hostPart) {<z>
domain, label, affectedFiles);<z>
request;<z>
= hostPart;<z>
() {<z>
encoding = this.defaultEncoding;<z>
encoding == null) {<z>
encoding = System.getProperty("file.encoding");<z>
{<z>
;<z>
;<z>
final Iterable<String> groupSplitted) {<z>
List<String> listPatternDays = Lists<z>
groupSplitted, new PatternMatcherPredicate(ADD_DAYS_PATTERN)));<z>
size() == 0) {<z>
0;<z>
listPatternDays.size() == 1) {<z>
));<z>
else {<z>
new VariableException(<z>
toString());<z>
.apache.thrift.TException {<z>
.apache.thrift.protocol.TField schemeField;<z>
iprot.readStructBegin();<z>
while (true)<z>
.readFieldBegin();<z>
) {<z>
{<z>
case 1:<z>
.protocol.TType.STRING) {<z>
readString();<z>
true);<z>
{<z>
schemeField.type);<z>
2:<z>
STRING) {<z>
();<z>
setFault_codeIsSet(true);<z>
{<z>
, schemeField.type);<z>
:<z>
) {<z>
struct.fault_message = iprot.readString();<z>
(true);<z>
else {<z>
.type);<z>
4:<z>
TType.STRING) {<z>
();<z>
);<z>
else {<z>
type);<z>
.type);<z>
iprot.readFieldEnd();<z>
.readStructEnd();<z>
;<z>
() {<z>
= super.createNewShowlet();<z>
, this.getContentType());<z>
showlet);<z>
) {<z>
"init");<z>
return FAILURE;<z>
;<z>
(GL gl) throws Exception<z>
--index >= 0;)<z>
);<z>
random(int x) {<z>
1) * amount);<z>
(x < 0)<z>
= 0;<z>
if (x > 0xff)<z>
= 0xff;<z>
return x;<z>
public void onPlayerBedEnter(PlayerBedEnterEvent event){<z>
));<z>
()){<z>
().getName())){<z>
event.setCancelled(true);<z>
BedCheck(), 80);<z>
()<z>
();<z>
);<z>
capitalize (m.name ()));<z>
parameters ().addElement (parm);<z>
();<z>
type (null);<z>
boolean trig, boolean react){<z>
= f;<z>
m;<z>
= b;<z>
hit = h;<z>
trig;<z>
;<z>
) {<z>
memoryMapCacheEnabled;<z>
if(!memoryMapCacheEnabled) {<z>
.clean();<z>
) {<z>
ByteArrayOutputStream out = new ByteArrayOutputStream();<z>
).write(out);<z>
();<z>
toByteArray());<z>
e) {<z>
;<z>
;<z>
enable)<z>
.setEditable(enable);<z>
; i < answers.length; i++)<z>
answer.setEditable(enable);<z>
() {<z>
new ArrayList();<z>
;<z>
.getPoints();<z>
)<z>
);<z>
;<z>
{<z>
;<z>
(CompletionOnSingleNameReference.class);<z>
);<z>
;<z>
) {<z>
Thread[] threads = getThreads();<z>
getDeclaredField("threadLocals");<z>
threadLocalsField.setAccessible(true);<z>
= Thread.class.getDeclaredField("inheritableThreadLocals");<z>
(true);<z>
"java.lang.ThreadLocal$ThreadLocalMap");<z>
);<z>
.setAccessible(true);<z>
i++) {<z>
;<z>
null) {<z>
.get(threads[i]);<z>
, tableField);<z>
;<z>
, tableField);<z>
{<z>
);<z>
throws IOException {<z>
.getAttribute("SERVER");<z>
;<z>
());<z>
(),<z>
));<z>
set("True");<z>
copy);<z>
.handleReceived(clientHttpReq.getHttpChannel());<z>
startSending();<z>
catch (IOException e) {<z>
);<z>
String relationName) throws GenericEntityException {<z>
if (relatedOneCache == null)<z>
newInstance();<z>
value = relatedOneCache.get(relationName);<z>
{<z>
getRelatedOne(relationName);<z>
null)<z>
relationName, value);<z>
value;<z>
restoreCondition()<z>
if (_player == null)<z>
;<z>
_mp);<z>
;<z>
(_paDuel)<z>
teleportBack();<z>
!= null)<z>
for (L2Effect temp : _debuffs)<z>
(temp != null)<z>
.exit();<z>
(int code){<z>
;<z>
switch(code){<z>
case 1:<z>
error_message=code +": User not found";<z>
96:<z>
code+": Invalid signature";<z>
97:<z>
": Missing signature";<z>
98:<z>
": Login failed / Invalid auth token";<z>
99:<z>
;<z>
case 100:<z>
=code+": Invalid API Key";<z>
:<z>
error_message=code+": Service currently unavailable";<z>
111:<z>
=code+ ": Format \"xxx\" not found";<z>
112:<z>
+ ": Method \"xxx\" not found";<z>
114:<z>
code+ ": Invalid SOAP envelope";<z>
115:<z>
+ ": Invalid XML-RPC Method Call";<z>
116:<z>
": Bad URL found";<z>
108:<z>
": Invalid frob";<z>
code;<z>
int color)<z>
;<z>
float[3];<z>
.colorToHSV(color, hsv);<z>
2] *= 0.8f;<z>
(hsv);<z>
;<z>
) {<z>
.DEBUG ))<z>
);<z>
return numxfs;<z>
<T> preparedQuery, int resultFlags) {<z>
);<z>
(SQLException e) {<z>
e);<z>
onError(int errorCode, String errorMessage) {<z>
mNumErrors++;<z>
);<z>
!= null) {<z>
VERBOSE)) {<z>
().getSimpleName()<z>
response);<z>
);<z>
e) {<z>
, Log.VERBOSE)) {<z>
.v(TAG, "Session.onError: caught RemoteException while responding", e);<z>
else {<z>
TAG, Log.VERBOSE)) {<z>
v(TAG, "Session.onError: already closed");<z>
byte b) {<z>
1);<z>
ByteBuffer bb = getBuffer(pos);<z>
= pos % _bufferSize;<z>
(i, b);<z>
(String name)<z>
{<z>
(log.isDebugEnabled()) {<z>
(sm.getString("selectorContext.methodUsingString",<z>
;<z>
));<z>
public boolean process(EventObject evt) throws SipException {<z>
": "<z>
+ ": processing "<z>
log(evt));<z>
) {<z>
evt;<z>
mProxy);<z>
.State.INCOMING_CALL;<z>
(event,<z>
);<z>
();<z>
;<z>
createPeerProfile(event.getRequest());<z>
=<z>
));<z>
);<z>
,<z>
mPeerSessionDescription);<z>
;<z>
) {<z>
(RequestEvent) evt, Response.OK);<z>
return true;<z>
} else {<z>
;<z>
String encode(String s) {<z>
== null)<z>
null;<z>
;<z>
(UnsupportedEncodingException e) {<z>
return null;<z>
> outerMap) {<z>
: outerMap.entrySet()) {<z>
();<z>
).first;<z>
second;<z>
manager.filePathsDirty(files, dirs);<z>
) {<z>
getThreadFactory();<z>
= configuration.getBindAddress();<z>
connectTimeout = configuration.getConnectTimeout();<z>
getSocketFactory();<z>
();<z>
configuration.getServerAddress();<z>
);<z>
();<z>
();<z>
== null) {<z>
"threadFactory");<z>
) {<z>
MESSAGES.nullVar("factory");<z>
{<z>
);<z>
null) {<z>
.nullVar("handler");<z>
== null) {<z>
"readExecutor");<z>
()<z>
null)<z>
);<z>
null;<z>
void addImports(String importList)<z>
)<z>
)<z>
; stringTokenizer.hasMoreTokens(); )<z>
nextToken();<z>
= "import " + token + ";" + NL;<z>
hasMoreTokens())<z>
;<z>
newImport);<z>
if (imports != null)<z>
(imports);<z>
Definition wsdlDef,TypeLibraryCodeGenContext typeLibrarycodeGenCtx)<z>
PreProcessFailedException{<z>
== null)<z>
;<z>
(serviceQName != null)<z>
());<z>
);<z>
getTargetNamespace()));<z>
() {<z>
isSelected()<z>
LIBTORRENT_SEED_RATIO_LIMIT.getValue()<z>
)seedHoursSpinner.getValue())<z>
BittorrentSettings.LIBTORRENT_SEED_TIME_LIMIT.getValue()<z>
.TORRENT_SHOW_POPUP_BEFORE_DOWNLOADING.getValue();<z>
int index, IEObjectConsumer inst) {<z>
) {<z>
(this, this, 0, inst);<z>
default: return null;<z>
{<z>
world = world;<z>
;<z>
= axis;<z>
;<z>
negative;<z>
= AntiShare.getInstance();<z>
();<z>
long[] mk_tokenSet_105() {<z>
[8];<z>
8658654068736L;<z>
;<z>
2]=-8070450528070402169L;<z>
3]=2030L;<z>
data;<z>
NonBlockingActor(Object targetObject) {<z>
format("Dispatch %s", targetObject));<z>
));<z>
MethodInvocation>(executor,<z>
new FailureHandlingDispatch<MethodInvocation>(<z>
new ReflectionDispatch(targetObject),<z>
;<z>
(IOperationContext operationContext) {<z>
"Migration to Indent Layout");<z>
this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {<z>
getName() {<z>
return "MoveEditor to indent Layout";<z>
) {<z>
"MoveEditor to indent Layout";<z>
() {<z>
"jetbrains.mps.lang.editor.structure.CellModel_Collection";<z>
) {<z>
;<z>
node) {<z>
.moveToIndentLayout(node);<z>
() {<z>
return false;<z>
);<z>
new AbstractMigrationRefactoring(operationContext) {<z>
public String getName() {<z>
;<z>
public String getAdditionalInfo() {<z>
"CellModel_RefNodeList migration";<z>
public String getFqNameOfConceptToSearchInstances() {<z>
;<z>
SNode node) {<z>
== null;<z>
(SNode node) {<z>
), true);<z>
{<z>
+ (false));<z>
"jetbrains.mps.lang.editor.structure.IndentLayoutNewLineChildrenStyleClassItem", null);<z>
true));<z>
).addElement(indentStyle);<z>
isShowAsIntention() {<z>
false;<z>
});<z>
remove(K key)<z>
.remove(key);<z>
!= null)<z>
();<z>
T> predicate)<z>
item : values)<z>
apply(item))<z>
item);<z>
public void afterPropertiesSet() throws Exception {<z>
(m_resourceDao != null, "property resourceDao must be set to a non-null value");<z>
;<z>
"property filterDao must be set to a non-null value");<z>
(m_transactionTemplate != null, "property transactionTemplate must be set to a non-null value");<z>
!= null, "property reportPersister must be set to a non-null value");<z>
);<z>
);<z>
, "eventForwarder property must be set to a non-null value");<z>
final Priority priority) {<z>
, category, type);<z>
);<z>
;<z>
{<z>
() == null) {<z>
getDefaultInstance();<z>
, OperaIntervals.DEFAULT_RESPONSE_TIMEOUT.getMs());<z>
initView(View view, ArrivalInfo stopInfo) {<z>
.route);<z>
.id.destination);<z>
;<z>
id.status);<z>
);<z>
();<z>
();<z>
setText(arrivalInfo.getShortName());<z>
getHeadsign()));<z>
(stopInfo.getStatusText());<z>
eta = stopInfo.getEta();<z>
0) {<z>
.setText(R.string.stop_info_eta_now);<z>
{<z>
valueOf(eta));<z>
());<z>
etaView.setTextColor(color);<z>
(DateUtils.formatDateTime(context,<z>
stopInfo.getDisplayTime(),<z>
FORMAT_SHOW_TIME|<z>
DateUtils.FORMAT_NO_NOON|<z>
);<z>
;<z>
null) {<z>
(arrivalInfo.getTripId());<z>
values != null) {<z>
getAsString(ObaContract.Trips.NAME);<z>
.id.trip_info);<z>
{<z>
string.trip_info_noname);<z>
);<z>
View.VISIBLE);<z>
else {<z>
.id.trip_info);<z>
);<z>
other) {<z>
))) {<z>
().getName());<z>
int lastComparison = 0;<z>
)other;<z>
);<z>
) {<z>
return lastComparison;<z>
()) {<z>
, typedOther.sessionid);<z>
lastComparison != 0) {<z>
lastComparison;<z>
return 0;<z>
FilePath> paths) {<z>
myProject);<z>
SHOW_DIALOG;<z>
;<z>
readonlyStatusHandler.ensureFilesWritable(collectFiles(paths));<z>
).SHOW_DIALOG = savedOption;<z>
hashCode() {<z>
);<z>
();<z>
aux;<z>
.hashCode();<z>
* result + aux;<z>
this.cssName.hashCode();<z>
* result + aux;<z>
: this.i18n.hashCode();<z>
aux;<z>
0 : this.format.hashCode();<z>
37 * result + aux;<z>
result;<z>
) {<z>
i++) {<z>
;<z>
;<z>
= 0;<z>
= 0;<z>
0;<z>
= 0;<z>
, ValidationProcessor v) {<z>
() == 0)) {<z>
;<z>
{<z>
println("An error occured: Cannot run without a ValidationProcessor.");<z>
().iterator();<z>
)) {<z>
toString();<z>
(typeRef);<z>
, ds);<z>
IOException e) {<z>
;<z>
v);<z>
getDataStores()){<z>
null;<z>
;<z>
{<z>
();<z>
++) {<z>
getFeatureSource(typeNames[p])<z>
getFeatures(), null);<z>
IOException e1) {<z>
printStackTrace();<z>
) {<z>
);<z>
= makeEnvelope();<z>
dsm, envelope, null);<z>
(IOException e1) {<z>
e1.printStackTrace();<z>
catch (Exception e1) {<z>
();<z>
)<z>
dsm.keySet().iterator();<z>
it.hasNext()) {<z>
new HashMap();<z>
.next().toString();<z>
.get(key);<z>
+ ".Sources");<z>
);<z>
; j++) {<z>
j].trim();<z>
);<z>
sources.put(ss, fs);<z>
} catch (Exception e) {<z>
printStackTrace();<z>
env = null;<z>
);<z>
getProperty("Bounds.maxX"));<z>
"Bounds.maxX"));<z>
"Bounds.maxY"));<z>
maxy);<z>
) {<z>
println("Envelope not specified in Transaction.properties.");<z>
;<z>
) {<z>
Integer.MIN_VALUE, Integer.MAX_VALUE,<z>
Integer.MAX_VALUE);<z>
BatchValidationResults vr = new BatchValidationResults();<z>
"Feature Integrety Test Results");<z>
(vr.toString());<z>
(Exception e) {<z>
);<z>
toString()<z>
() +<z>
+<z>
+<z>
> 0 ? ", "+constant : "");<z>
{<z>
expressionSide instanceof BinaryExpression) {<z>
) expressionSide, addAll, variableScope);<z>
else if(expressionSide instanceof NotExpression) {<z>
(NotExpression) expressionSide, variableScope);<z>
MethodCallExpression) {<z>
methodCallExpression = (MethodCallExpression) expressionSide;<z>
);<z>
) {<z>
(PropertyExpression) expressionSide;<z>
null, variableScope);<z>
String text) {<z>
length() > 0) {<z>
.trim());<z>
_isReadOnly) {<z>
(true);<z>
();<z>
);<z>
private void realSendError() throws IOException<z>
isCommitted())<z>
new IllegalStateException("Can not send an error, headers have been already written");<z>
setContentType("text/html");<z>
(100);<z>
lsp = resMessage.indexOf('\n');<z>
(<z>
substring(0, lsp)) + "</TITLE>")<z>
.append(<z>
(0, lsp)) + "</H2>");<z>
lsp > 0)<z>
"</PRE>");<z>
.append("<HR>");<z>
sb.append(Identification.serverIdHtml);<z>
);<z>
length());<z>
());<z>
();<z>
doForce() {<z>
);<z>
);<z>
PortletTestCase seq)<z>
RENDER_JOIN_POINT, new PortletRenderTestAction()<z>
context) throws PortletException, IOException<z>
cookieMap = createCookieMap(request);<z>
.containsKey("foo"));<z>
));<z>
).toString());<z>
;<z>
return get;<z>
});<z>
, new PortletRenderTestAction()<z>
RenderResponse response, PortletTestContext context) throws PortletException, IOException<z>
, String> cookieMap = createCookieMap(request);<z>
cookieMap.get("foo"));<z>
.get("bar"));<z>
;<z>
);<z>
;<z>
);<z>
2, UTP5.ACTION_JOIN_POINT, new PortletActionTestAction()<z>
context) throws PortletException, IOException<z>
createCookieMap(request);<z>
;<z>
cookieMap.get("bar"));<z>
response.setEvent("Event", null);<z>
;<z>
PortletEventTestAction()<z>
PortletException, IOException<z>
request);<z>
("foo"));<z>
cookieMap.get("bar"));<z>
});<z>
.RENDER_JOIN_POINT, new PortletRenderTestAction()<z>
throws PortletException, IOException<z>
.toString());<z>
addHeader("Cookie", "foo=foo_value5; bar=bar_value6");<z>
get;<z>
;<z>
, UTP5.RESOURCE_JOIN_POINT, new PortletResourceTestAction()<z>
, IOException<z>
);<z>
("foo"));<z>
;<z>
);<z>
});<z>
String var_name, String streamname )<z>
return "((org.omg.CORBA_2_3.portable.OutputStream)" + streamname +<z>
").write_Abstract(" + var_name + ");";<z>
part) {<z>
Substitution) {<z>
(part))<z>
;<z>
(editingContext, mode, part);<z>
FIBWidget> applyValidation(FIBWidget object) {<z>
))) {<z>
GenerateDefaultName();<z>
;<z>
FIBWidgetDeclaredAsDynamicShouldHaveAName, FIBWidget>(this, object,<z>
fixProposal1, fixProposal2);<z>
;<z>
) {<z>
){<z>
+ "status:OUT_OF_SERVICE");<z>
==LocationProvider.TEMPORARILY_UNAVAILABLE){<z>
provider+ "status:TEMPORARILY_UNAVAILABLE");<z>
LocationProvider.AVAILABLE){<z>
tv.addtext(provider+ "status:AVAILABLE");<z>
) {<z>
;<z>
if (this.isVirtual()) {<z>
sql = "INSERT INTO `permissions_entity` (`prefix`, `suffix`, `name`, `type`) VALUES (?, ?, ?, ?)";<z>
{<z>
sql = "UPDATE `permissions_entity` SET `prefix` = ?, `suffix` = ? WHERE `name` = ? AND `type` = ?";<z>
());<z>
(SQLException e) {<z>
if (this.isVirtual()) {<z>
this.virtual = false;<z>
;<z>
);<z>
this.virtual = false;<z>
public void outputClass(PrintStream out) {<z>
(hclass.isInterface())<z>
replace('.','/')));<z>
));<z>
hclass.getSuperclass()!=null)<z>
.replace('.','/')));<z>
))<z>
;<z>
] interfaces=hclass.getInterfaces();<z>
length;i++)<z>
));<z>
] hfields=hclass.getDeclaredFields();<z>
) {<z>
;<z>
.isConstant())<z>
.equals("java.lang.String"))<z>
))+'"';<z>
()==HClass.Float)<z>
hfields[i].getConstant());<z>
getType()==HClass.Double)<z>
());<z>
);<z>
())+value);<z>
length;i++) {<z>
);<z>
{<z>
String[] {<z>
};<z>
DialectRuntimeRegistry registry,<z>
rootClassLoader,<z>
) {<z>
clone = new MVELDialectRuntimeData();<z>
rootClassLoader = rootClassLoader;<z>
merge( registry,<z>
excludeClasses );<z>
onAdd( registry,<z>
);<z>
clone;<z>
public void set (int n)<z>
/ 8;<z>
);<z>
int pos)<z>
("virtualinvoke");<z>
;<z>
);<z>
) {<z>
);<z>
0) {<z>
).getAttribute("remote-host");<z>
0);<z>
"user-name");<z>
getAttribute("auth-token");<z>
;<z>
();<z>
; ++i) {<z>
item(i) instanceof Text) {<z>
)).getNodeValue());<z>
DatasetConfigTreeModel(DatasetConfigTreeNode node, DatasetConfig config) {<z>
node);<z>
= node;<z>
config = config;<z>
getReportDesitation() {<z>
) {<z>
reportDialog.getReportDesitation();<z>
else {<z>
reportDestination;<z>
void fireModulesAdded() {<z>
myPathToModule.values()) {<z>
(module);<z>
public Node getLastChild() {<z>
;<z>
mChildNodes.lastElement();<z>
NoSuchElementException e) {<z>
return lastChild;<z>
)<z>
[m_SystemIndex], status);<z>
int)(regValue);<z>
FileObject outFile, String _Line) {<z>
key = outFile.toString();<z>
.containsKey( key )) {<z>
new LogFileObject(outFile) );<z>
catch (Exception E) {<z>
))).println(_Line);<z>
, int line) throws IOException {<z>
= getFileHistoryName();<z>
.getAbsoluteFile()))<z>
new FileOutputStream(fhn, true);<z>
line).getBytes("utf8"));<z>
out.close();<z>
void onFinally() {<z>
()) {<z>
dialog.dismiss();<z>
public void kNodeLangFunc2() {<z>
query = new XQuery(<z>
);<z>
(query);<z>
result = res;<z>
)<z>
("XPDY0002")<z>
AIAccessor accessor)<z>
(accessor);<z>
().getTemplate().npcId);<z>
;<z>
;<z>
) {<z>
;<z>
;<z>
);<z>
(qualifier == null) {<z>
= inverseQualifier;<z>
new NSMutableArray<EOQualifier>();<z>
addObject(qualifier);<z>
;<z>
(qualifiers);<z>
EOFetchSpecification("${relationship.actualDestination.name}", qualifier, sortOrderings);<z>
;<z>
).objectsWithFetchSpecification(fetchSpec);<z>
editingContext(), fullQualifier, sortOrderings);<z>
() {<z>
if (input == null)<z>
input = new CachedMetadataRepositories();<z>
input;<z>
String removeComma(String s)<z>
;<z>
return s;<z>
boolean getPreserveLockingKeysOnCopy(Class dataObjectClass) {<z>
;<z>
(dataObjectClass);<z>
) {<z>
();<z>
preserveLockingKeysOnCopy;<z>
(final ComponentContext context) {<z>
removeNotificationListener(this);<z>
(<z>
(),<z>
));<z>
removeMetadataTrigger(ROO_EQUALS);<z>
that) {<z>
if (that == null)<z>
return false;<z>
();<z>
= true && that.isSetTinfo();<z>
that_present_tinfo) {<z>
if (!(this_present_tinfo && that_present_tinfo))<z>
false;<z>
that.tinfo))<z>
return false;<z>
.isSetCredentials();<z>
();<z>
if (this_present_credentials || that_present_credentials) {<z>
!(this_present_credentials && that_present_credentials))<z>
;<z>
))<z>
;<z>
);<z>
true && that.isSetBatch();<z>
if (this_present_batch || that_present_batch) {<z>
))<z>
;<z>
that.batch))<z>
return false;<z>
();<z>
();<z>
if (this_present_columns || that_present_columns) {<z>
&& that_present_columns))<z>
;<z>
.columns))<z>
return false;<z>
= true && this.isSetSsiList();<z>
that.isSetSsiList();<z>
this_present_ssiList || that_present_ssiList) {<z>
this_present_ssiList && that_present_ssiList))<z>
;<z>
ssiList))<z>
return false;<z>
this.isSetSsio();<z>
;<z>
if (this_present_ssio || that_present_ssio) {<z>
)<z>
return false;<z>
ssio))<z>
false;<z>
.isSetAuthorizations();<z>
&& that.isSetAuthorizations();<z>
that_present_authorizations) {<z>
this_present_authorizations && that_present_authorizations))<z>
false;<z>
authorizations))<z>
return false;<z>
this_present_waitForWrites = true;<z>
that_present_waitForWrites = true;<z>
if (this_present_waitForWrites || that_present_waitForWrites) {<z>
(this_present_waitForWrites && that_present_waitForWrites))<z>
;<z>
this.waitForWrites != that.waitForWrites)<z>
false;<z>
;<z>
attributeName) {<z>
if (StringUtils.isBlank(attributeName)) {<z>
"attributeName was null or blank");<z>
this.attributeName = attributeName;<z>
type,<z>
url)<z>
IOException, UnsupportedCallbackException, KeyStoreException,<z>
, CertificateException<z>
password, url);<z>
)<z>
(); }<z>
io.IOException e) {<z>
active0);<z>
;<z>
)<z>
case 61:<z>
& 0x40L) != 0L)<z>
1, 6);<z>
) != 0L)<z>
, 8);<z>
(active0 & 0x400L) != 0L)<z>
, 10);<z>
0x800L) != 0L)<z>
11);<z>
);<z>
MultiTermQuery query) throws IOException {<z>
= getTopLevelQuery();<z>
int[1];<z>
) {<z>
{<z>
) * boost);<z>
]++;<z>
return true;<z>
;<z>
[0]);<z>
return result;<z>
() {<z>
= new StringWriter();<z>
PrintWriter print = new PrintWriter(writer);<z>
"uuid", this.uuid);<z>
("%1$20s: %2$s\n", "device", this.device);<z>
("%1$20s: %2$s\n", "network", this.network);<z>
;<z>
("%1$20s: %2$s\n", "MAC", this.MAC);<z>
.MTU);<z>
);<z>
.metrics);<z>
this.physical);<z>
, "currentlyAttached", this.currentlyAttached);<z>
);<z>
"%1$20s: %2$s\n", "IP", this.IP);<z>
"netmask", this.netmask);<z>
"gateway", this.gateway);<z>
"DNS", this.DNS);<z>
;<z>
bondMasterOf);<z>
);<z>
.VLANSlaveOf);<z>
("%1$20s: %2$s\n", "management", this.management);<z>
this.otherConfig);<z>
disallowUnplug);<z>
, "tunnelAccessPIFOf", this.tunnelAccessPIFOf);<z>
, this.tunnelTransportPIFOf);<z>
.toString();<z>
Throwable t, boolean silent) {<z>
setConnectionInProgress.remove(address);<z>
address);<z>
!silent) {<z>
);<z>
( final int oldExpected, final int newExpected )<z>
, "pom", "jar", "sha1" );<z>
( nexusRepoNewAttributesDir, "pom", "jar", "sha1" );<z>
MatcherAssert.assertThat( oldFound,<z>
) );<z>
( newFound,<z>
Matchers.equalTo( newExpected ) );<z>
assertThat( oldFound + newFound,<z>
;<z>
void setStatus(boolean success) {<z>
);<z>
success) {<z>
;<z>
R.color.successGreen));<z>
{<z>
(R.string.operationForm_status_error));<z>
.errorRed));<z>
addDiscriminatorRestrictionToGrid(final ViewDefinitionState view) {<z>
getComponentByReference("grid");<z>
.setCustomRestriction(new CustomRestriction() {<z>
void addRestriction(final SearchCriteriaBuilder searchBuilder) {<z>
SearchRestrictions.or(<z>
()),<z>
,<z>
.ACCEPTED.getStringValue())));<z>
});<z>
eventId) {<z>
(isEnabled(WINDOW_PAGE_EVENTS)) {<z>
System.out.println(WINDOW_PAGE_EVENTS<z>
getWindowId(window)<z>
")");<z>
Builder setMinDuration(int value) {<z>
bitField0_ |= 0x00000100;<z>
minDuration_ = value;<z>
();<z>
return this;<z>
... args) {<z>
Types.toObject(context, self);<z>
(context, "join");<z>
(!Types.isCallable(func)) {<z>
;<z>
, array);<z>
public void startDocument() throws SAXException<z>
Lists.newArrayListWithExpectedSize(100);<z>
handlingId = false;<z>
= new StringBuffer();<z>
ReadMemoryAccess memory) throws IOException {<z>
) < DOSHDRSZ) {<z>
IOException("Not a Dos Header");<z>
);<z>
e_oemid);<z>
;<z>
e_res2);<z>
();<z>
.getBytes(dos_message);<z>
public Collection<RequestQueue> getRequestQueues() {<z>
queues.values());<z>
);<z>
(queueList);<z>
) {<z>
;<z>
"{$activityName}", activity.getName())<z>
.getName())<z>
.getName())<z>
("{$indicators}", addIndicators())<z>
;<z>
html = new StringBuilder();<z>
html.append(contents);<z>
openVCardActivity(Contact c) {<z>
;<z>
);<z>
));<z>
;<z>
packet )<z>
put( packet );<z>
( InterruptedException ie )<z>
) {<z>
sql =<z>
, Auction.class);<z>
.ordinal());<z>
);<z>
();<z>
ByteBuffer src, int byteOffset) {<z>
ByteBuffer ret = src.duplicate();<z>
byteOffset);<z>
();<z>
(ByteOrder.nativeOrder());<z>
return ret;<z>
actionId, String afterAction,<z>
boolean needSeparator) {<z>
);<z>
= actionId;<z>
afterAction = afterAction;<z>
needSeparator;<z>
executer, String channel,<z>
Signature signature) {<z>
0)) {<z>
.getStringValue(0);<z>
vname);<z>
this.reply(channel, "Venadname gespeichert.");<z>
} catch (DatabaseException e) {<z>
, "Interner Datenbankfehler.");<z>
ConstraintException e) {<z>
;<z>
return false;<z>
persist) {<z>
= configurationName;<z>
;<z>
= persist;<z>
format, App app) {<z>
] cArray = format.toCharArray();<z>
; i++) {<z>
cArray.length - 1) {<z>
app);<z>
;<z>
else {<z>
]);<z>
protected void printQuoted(final String text) {<z>
(text.contains("\n")) {<z>
"'''");<z>
(text);<z>
print("'''");<z>
(qt);<z>
text));<z>
);<z>
, int len) throws IOException {<z>
populateBuffer()) {<z>
;<z>
readLength = currentBufferByteCount - currentBufferOffset;<z>
> len) {<z>
= len;<z>
, off, readLength);<z>
;<z>
return readLength;<z>
} else {<z>
1;<z>
) {<z>
= null;<z>
InputStream is = null;<z>
;<z>
this.connectionTimeout);<z>
this.readTimeout);<z>
;<z>
connection.connect();<z>
int responseCode = connection.getResponseCode();<z>
(final int acceptableCode : this.acceptableCodes) {<z>
acceptableCode) {<z>
log.isDebugEnabled()) {<z>
".");<z>
return true;<z>
{<z>
);<z>
) {<z>
is = connection.getInputStream();<z>
IOUtils.toString(is);<z>
), value));<z>
e) {<z>
,e);<z>
{<z>
is);<z>
) {<z>
();<z>
return false;<z>
, File source, File dst) throws SVNException {<z>
context.getPristineProps(source);<z>
getBaseInfo(source,<z>
.WCDbBaseInfo.BaseInfoField.changedRev,<z>
, ISVNWCDb.WCDbBaseInfo.BaseInfoField.revision,<z>
.WCDbBaseInfo.BaseInfoField.reposUuid);<z>
= baseInfo.changedAuthor;<z>
baseInfo.changedDate;<z>
changedRev = baseInfo.changedRev;<z>
checksum;<z>
;<z>
reposRootUrl;<z>
final String reposUuid = baseInfo.reposUuid;<z>
, source.getAbsolutePath());<z>
, changedAuthor,<z>
null);<z>
;<z>
handleEvent(event);<z>
compareTo( final Offering o )<z>
|| !( o instanceof Offering ) )<z>
1;<z>
;<z>
off.turns.length )<z>
.length - this.turns.length;<z>
1 )<z>
.price - off.price;<z>
.lowestBuffId )<z>
- off.lowestBuffId;<z>
0 ] != off.turns[ 0 ] )<z>
0 ] - off.turns[ 0 ];<z>
price != off.price )<z>
- off.price;<z>
compareToIgnoreCase( off.botName );<z>
child, boolean fireEvent) {<z>
;<z>
if (fireEvent && shouldFireEvent()) {<z>
fireStructureChanged(child, IModelChangedEvent.REMOVE);<z>
;<z>
b) {<z>
(bus != b) {<z>
;<z>
= b.getExtension(QueryHandlerRegistry.class);<z>
reg != null) {<z>
this);<z>
void paintInline(RenderingContext c) {<z>
).isVisible()) {<z>
)) {<z>
c);<z>
, this, 0);<z>
);<z>
;<z>
;<z>
);<z>
(_textDecorations != null) {<z>
drawTextDecoration(c, this);<z>
{<z>
;<z>
public String toString() {<z>
new StringBuilder();<z>
builder.append("(");<z>
) {<z>
]);<z>
- 1 ) {<z>
" " );<z>
);<z>
;<z>
String> folderHierarchy) throws HttpException,<z>
new ArrayList<String>(folderHierarchy);<z>
);<z>
;<z>
("/dav.properties").openStream();<z>
properties.load(is);<z>
is.close();<z>
= properties.getProperty("fileEndingsToStore");<z>
);<z>
e : endingsArray) {<z>
fileEndings.add(e);<z>
("url");<z>
) {<z>
;<z>
);<z>
;<z>
= new HttpClient();<z>
);<z>
void acceptLocalType(TypeBinding typeBinding) {<z>
null;<z>
instanceof SourceTypeBinding) {<z>
)typeBinding).sourceStart());<z>
.getElementType() == IJavaScriptElement.TYPE) {<z>
resolved(typeBinding);<z>
addElement(res);<z>
if(SelectionEngine.DEBUG){<z>
print("SELECTION - accept type(");<z>
.toString());<z>
);<z>
> connections) {<z>
new HashMap<String, String>();<z>
== null) {<z>
result;<z>
: connections.entrySet()) {<z>
()));<z>
;<z>
) {<z>
31;<z>
;<z>
prime * result<z>
snippetId.hashCode());<z>
result = prime * result<z>
this.tagName.hashCode());<z>
;<z>
NodePanelEventHandler nodePanelEventHandler) {<z>
node, nodePanelEventHandler);<z>
.nodePanelEventHandler = nodePanelEventHandler;<z>
title));<z>
;<z>
, RockerSwitchDatagram.State.ON));<z>
.State.OFF));<z>
, RockerSwitchDatagram.State.ON));<z>
.State.OFF));<z>
(a1);<z>
);<z>
);<z>
b0);<z>
AsyncChannel channel) {<z>
(CMD_GET_AP_CONFIG);<z>
= (WifiConfiguration) resultMsg.obj;<z>
();<z>
ret;<z>
src, String[] fieldNames, String indexId,<z>
IndexException, NoSuchTableException {<z>
DataSource) {<z>
src;<z>
getName(), fieldNames, pm);<z>
} else {<z>
null) {<z>
();<z>
TEMPINDEXPREFIX + src.hashCode();<z>
; i++) {<z>
) < 0) {<z>
new UnknownFieldException(fieldNames[i]);<z>
== null) {<z>
).getTypeCode();<z>
length == 1) {<z>
;<z>
else {<z>
BTREE_ALPHANUMERIC_INDEX;<z>
tempName, fieldNames);<z>
!= null) {<z>
throw new IndexException("There is already an "<z>
;<z>
dsf.getTempFile("idx"));<z>
instantiateIndex(indexId);<z>
index.setFile(indexFile);<z>
fieldNames);<z>
;<z>
isCancelled()) {<z>
);<z>
;<z>
);<z>
, fieldNames, indexId, pm);<z>
catch (DriverLoadException e) {<z>
new IndexException("Cannot read source", e);<z>
catch (IncompatibleTypesException e) {<z>
("Cannot create an "<z>
, e);<z>
) {<z>
new IndexException("Cannot associate index with source", e);<z>
DriverException e) {<z>
throw new IndexException("Cannot access data to index", e);<z>
throws ClassNotFoundException {<z>
;<z>
.OsgiLocator.locate(factoryClass, factoryId);<z>
null) {<z>
newInstance();<z>
(Throwable e) {<z>
ClassLoader classLoader;<z>
;<z>
} catch (Exception x) {<z>
.toString(), x);<z>
"META-INF/services/" + factoryId;<z>
is = null;<z>
classLoader == null) {<z>
ClassLoader.getSystemResourceAsStream(serviceId);<z>
} else {<z>
= classLoader.getResourceAsStream(serviceId);<z>
is != null) {<z>
=<z>
new InputStreamReader(is, "UTF-8"));<z>
rd.readLine();<z>
rd.close();<z>
&&<z>
(factoryClassName)) {<z>
, classLoader);<z>
(Exception ex) {<z>
getProperty("java.home");<z>
.separator +<z>
+ File.separator + "jaxrs.properties";<z>
configFile);<z>
) {<z>
);<z>
load(new FileInputStream(f));<z>
.getProperty(factoryId);<z>
(factoryClassName, classLoader);<z>
{<z>
String systemProp =<z>
System.getProperty(factoryId);<z>
(systemProp != null) {<z>
;<z>
se) {<z>
fallbackClassName == null) {<z>
new ClassNotFoundException(<z>
);<z>
newInstance(fallbackClassName, classLoader);<z>
() {<z>
info("create db");<z>
.loadProperties();<z>
)<z>
("nakedgraph.factory"));<z>
("getInstance", new Class[0]);<z>
) m.invoke(null);<z>
"schema.generator")).newInstance();<z>
= properties.getProperty("tinkerdb");<z>
, "false");<z>
;<z>
} catch (Exception e) {<z>
new RuntimeException(e);<z>
public boolean matches(ERMimeType otherMimeType) {<z>
boolean matches;<z>
otherMimeType._mimeType))) {<z>
true;<z>
(otherMimeType == null) {<z>
matches = false;<z>
= _mimeType;<z>
;<z>
.indexOf('/');<z>
otherMimeTypeStr.indexOf('/');<z>
0, slashIndex);<z>
otherSlashIndex);<z>
.equals(otherBase)) {<z>
1);<z>
= otherMimeTypeStr.substring(otherSlashIndex + 1);<z>
(otherType);<z>
matches = false;<z>
matches;<z>
int lookupType(String typeName) throws SQLException {<z>
0;<z>
(typeName);<z>
.intValue();<z>
{<z>
SQLException(<z>
typeName);<z>
.initCause(e);<z>
throw toThrow;<z>
);<z>
.RemoteException<z>
.os.Parcel.obtain();<z>
writeInterfaceToken(DESCRIPTOR);<z>
(1):(0)));<z>
.writeInt(interactionId);<z>
);<z>
recycle();<z>
{<z>
optionalCommaAndNewline(1);<z>
;<z>
= false;<z>
return this;<z>
DrawFile getDrawFile(String pngPath) throws IOException {<z>
(pngPath).getCanonicalFile();<z>
)) {<z>
drawFile.getPng().getCanonicalFile();<z>
.equals(searched)) {<z>
drawFile;<z>
) {<z>
);<z>
(searched)) {<z>
drawFile;<z>
;<z>
, long time, TimeUnit timeunit) {<z>
check(key);<z>
time < 0)<z>
time);<z>
;<z>
timeunit);<z>
key, timeoutMillis);<z>
PyObject checkerArg, PyObject cls,<z>
) {<z>
__findattr__(checkerName);<z>
null) {<z>
null;<z>
result;<z>
.getThreadState();<z>
threadState.enterRecursiveCall(" in " + checkerName);<z>
__call__(checkerArg);<z>
{<z>
);<z>
result;<z>
(String internalName) {<z>
new ArrayList();<z>
(internalName)) {<z>
getOptions();<z>
) {<z>
;<z>
= option.getValue();<z>
) {<z>
vals.contains(opvalue))<z>
(opvalue);<z>
endsWith("."))) {<z>
] iname_info = internalName.split("\\.");<z>
= iname_info[0];<z>
refname = iname_info[1];<z>
;<z>
superOption.getPushActions();<z>
{<z>
PushAction po = pos[i];<z>
(refname)) {<z>
;<z>
++) {<z>
suboptions[j];<z>
= option.getValue();<z>
> 0) {<z>
opvalue))<z>
.add(opvalue);<z>
else {<z>
po.containsOption(refname)) {<z>
);<z>
< l; j++) {<z>
= os[j];<z>
= option.getValue();<z>
&& opvalue.length() > 0) {<z>
(!vals.contains(opvalue))<z>
add(opvalue);<z>
} else {<z>
internalName)) {<z>
getOptions();<z>
n; i++) {<z>
Option option = ops[i];<z>
option.getValue();<z>
&& opvalue.length() > 0) {<z>
opvalue))<z>
add(opvalue);<z>
return vals;<z>
DebugPooledByteBufferAllocator(int timeout, boolean saveStacks) {<z>
;<z>
;<z>
();<z>
();<z>
(AncestorEvent event) {<z>
)<z>
}<z>
{<z>
0, active0);<z>
return 1;<z>
curChar)<z>
case 61:<z>
((active0 & 0x4000000000L) != 0L)<z>
;<z>
case 65:<z>
97:<z>
);<z>
69:<z>
case 101:<z>
, 0xa4000L);<z>
case 72:<z>
:<z>
jjMoveStringLiteralDfa2_0(active0, 0x200L);<z>
case 73:<z>
:<z>
);<z>
:<z>
case 110:<z>
jjMoveStringLiteralDfa2_0(active0, 0x10050000L);<z>
79:<z>
case 111:<z>
active0, 0x480000000L);<z>
case 80:<z>
case 112:<z>
;<z>
:<z>
:<z>
return jjMoveStringLiteralDfa2_0(active0, 0x2000L);<z>
case 83:<z>
case 115:<z>
0L)<z>
jjStartNfaWithStates_0(1, 30, 50);<z>
(active0, 0x2c00000000000L);<z>
case 85:<z>
117:<z>
active0, 0x100000000L);<z>
jjStartNfa_0(0, active0);<z>
(CharSequence str) {<z>
);<z>
&& (val <= mEnd)) {<z>
val) {<z>
mPrevious = mCurrent;<z>
= val;<z>
notifyChange();<z>
);<z>
<String> getActiveForeignSourceNames() {<z>
;<z>
if (m_foreignSourceNames == null) {<z>
();<z>
return m_foreignSourceNames;<z>
} finally {<z>
;<z>
() {<z>
.inputContext;<z>
ic != null) {<z>
resetInput();<z>
ZkSessionManager zkSessionManager,<z>
) {<z>
,zkSessionManager,privileges);<z>
this.serializer = serializer;<z>
iteratorDelimiter = iteratorDelimiter;<z>
this.prefix = iteratorPrefix;<z>
JournalStructure> findByGroupId(<z>
)<z>
.exception.SystemException {<z>
.findByGroupId(groupId);<z>
public boolean eIsSet( int featureID )<z>
switch ( featureID )<z>
.DIAL_REGION__INNER_RADIUS :<z>
isSetInnerRadius( );<z>
:<z>
return isSetOuterRadius( );<z>
);<z>
) {<z>
channel <= BLUE)<z>
mean[channel];<z>
;<z>
)<z>
w != null ) {<z>
w.getInsets();<z>
jif != null ) {<z>
);<z>
} else {<z>
);<z>
) {<z>
out.print(name + " width: ");<z>
);<z>
;<z>
System.out.println(thumbHeight);<z>
String language) throws Exception<z>
properties = new Properties();<z>
defaultContent =<z>
;<z>
documentName);<z>
language, getDefaultWikiLanguage(wiki))) {<z>
.documentAccessBridge.getDocumentContent(documentName, language);<z>
loadPropertiesFromString(properties, content, documentName);<z>
);<z>
return properties;<z>
, double defaultValue) {<z>
();<z>
);<z>
defaultValue;<z>
{<z>
= Double.parseDouble(value);<z>
(NumberFormatException e) {<z>
result;<z>
delete() {<z>
(false);<z>
)<z>
().loadStorage(url);<z>
storage.delete();<z>
)<z>
;<z>
t) {<z>
STATUS.CLOSED;<z>
{<z>
);<z>
public Holder(<z>
seq)<z>
seq.size(); i++)<z>
);<z>
())<z>
0:<z>
IssuerSerial.getInstance(tObj, false);<z>
case 1:<z>
, false);<z>
:<z>
= ObjectDigestInfo.getInstance(tObj, false);<z>
new IllegalArgumentException("unknown tag in Holder");<z>
salsa20ColumnHalfround(int[] workBuffer)<z>
;<z>
[ 0]), 9);<z>
;<z>
);<z>
7);<z>
);<z>
;<z>
, 18);<z>
workBuffer[ 6]), 7);<z>
10]), 9);<z>
+ workBuffer[14]), 13);<z>
2]), 18);<z>
workBuffer[11]), 7);<z>
);<z>
[ 3]), 13);<z>
);<z>
Object fileObj) throws PageException {<z>
))<z>
"fileObj",<z>
.toTypeName(fileObj)+"], only File Object produced by FileOpen supported");<z>
(FileStreamWrapper)fileObj).readLine();<z>
IOException e) {<z>
Caster.toPageException(e);<z>
cancelarEdicaoInclusao(){<z>
println("cancelarEdicaoInclusao()");<z>
;<z>
;<z>
public String getUsername()<z>
null)<z>
();<z>
return null;<z>
createWindowContentPane()<z>
navigationCommandGroup = getAdvisor()<z>
();<z>
;<z>
(getTaskPaneIconGenerator());<z>
setOnlyOneExpanded(onlyOneExpanded);<z>
, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER),<z>
;<z>
.setOneTouchExpandable(false);<z>
return framedPage;<z>
void run(){<z>
[14];<z>
;<z>
new byte[5];<z>
new DatagramPacket(buf2,buf2.length);<z>
byte[255];<z>
buf3.length);<z>
(0);<z>
catch (SocketException e1) {<z>
();<z>
(packetx);<z>
{<z>
e.printStackTrace();<z>
());<z>
split(":");<z>
.out.println(data);<z>
x=0;<z>
int y=0;<z>
int type=0;<z>
(dat[0]);<z>
);<z>
);<z>
(Exception e){<z>
=-1;<z>
=-1;<z>
;<z>
;<z>
EventRunner();<z>
(y==3000){<z>
ER.keyAgent(x);<z>
) {<z>
);<z>
{<z>
;<z>
=false;<z>
(type==2){<z>
, y);<z>
(HeadlessException e) {<z>
.printStackTrace();<z>
e) {<z>
printStackTrace();<z>
true;<z>
8){<z>
.moveLocation(x, y);<z>
HeadlessException e) {<z>
e.printStackTrace();<z>
{<z>
printStackTrace();<z>
Activate=true;<z>
{<z>
;<z>
} catch (HeadlessException e) {<z>
.printStackTrace();<z>
AWTException e) {<z>
();<z>
true;<z>
5000) && (type==5000)){<z>
Activate=true;<z>
ER.clickLocation(x, y);<z>
} catch (HeadlessException e) {<z>
();<z>
catch (AWTException e) {<z>
);<z>
;<z>
{<z>
new UpdateFrame(socket,IP,port);<z>
);<z>
);<z>
EL.start();<z>
, long timestamp) {<z>
Entry entry = map.get(key);<z>
entry == null) {<z>
Entry(key, value, timestamp);<z>
);<z>
moveToTail(entry);<z>
request ) throws EucalyptusCloudException {<z>
;<z>
);<z>
();<z>
null ) {<z>
getRequest().getUserData() ) );<z>
) {<z>
= "";<z>
}<z>
);<z>
( userData.getBytes() ) ) );<z>
vmAllocInfo;<z>
name, TrecContentSource trecSrc,<z>
IOException {<z>
mark = 0;<z>
;<z>
title = null;<z>
;<z>
) {<z>
,h1);<z>
mark = h2+HEADER_END_LENGTH;<z>
, h2, null);<z>
dateStr != null) {<z>
.parseDate(dateStr);<z>
, TI, TI_END, h2, null);<z>
clear();<z>
(name);<z>
docData.setDate(date);<z>
title);<z>
.toString());<z>
return docData;<z>
(<z>
, final ITemplateWriter templateWriter) {<z>
super();<z>
templateModeName = templateModeName;<z>
templateParser;<z>
this.templateWriter = templateWriter;<z>
RecognitionException {<z>
;<z>
backtracking==0 ) {<z>
.getMemberAccess().getNameAssignment_2_1_6_0_0_2());<z>
);<z>
;<z>
state._fsp--;<z>
.failed) return ;<z>
.backtracking==0 ) {<z>
.getNameAssignment_2_1_6_0_0_2());<z>
catch (RecognitionException re) {<z>
;<z>
);<z>
;<z>
{<z>
();<z>
("class", clazz.getName());<z>
getDeclaredFields();<z>
{<z>
class) continue;<z>
)) continue;<z>
true);<z>
Object value;<z>
obj);<z>
e) {<z>
(e);<z>
);<z>
ClassInfo.isModel(type)) {<z>
Element f = element.addElement("object");<z>
));<z>
null) {<z>
(Model) value, f, true);<z>
} else {<z>
element.addElement("field");<z>
);<z>
(value != null) {<z>
Util.toString(field, value));<z>
user) {<z>
)<z>
Uniqueness.NODE_PATH)<z>
User.FRIEND))<z>
.RATED), OUTGOING)<z>
.evaluator(this);<z>
return averageRecommendations(user, traversal);<z>
args)<z>
();<z>
);<z>
);<z>
vtkExtractSelectedFrustum selector = new vtkExtractSelectedFrustum();<z>
);<z>
.SetHeight(3.0);<z>
(1.0);<z>
cone.SetResolution(10);<z>
new vtkPolyDataMapper();<z>
(cone.GetOutput());<z>
aSphere = new vtkActor();<z>
;<z>
);<z>
GetProperty().SetRepresentationToWireframe();<z>
.GetRenderer().AddActor(aSphere);<z>
;<z>
600);<z>
.setVisible(true);<z>
CreateFrustum(new double[] {<z>
1.0,<z>
1.0,<z>
10.,1.0,<z>
10.,-10.,1.0,<z>
,1.0,<z>
,-10.,1.0,<z>
,10.,1.0,<z>
-10.,1.0,<z>
;<z>
.GetFrustum();<z>
GetNormals();<z>
));<z>
).GetJavaArray()));<z>
FunctionValue(1001,11,11));<z>
,0));<z>
.SetInput(cone.GetOutput());<z>
;<z>
);<z>
mapFrustum = new vtkDataSetMapper();<z>
SetInputConnection(selector.GetOutputPort());<z>
SetMapper(mapFrustum);<z>
actorFrustum);<z>
canvas.lock();<z>
canvas.GetRenderer().ResetCamera();<z>
canvas.unlock();<z>
.RemoveActor(aSphere);<z>
String logout(){<z>
null;<z>
null;<z>
return "/login.xhtml";<z>
setTrPoint(TrPoint newTrPoint)<z>
= trPoint;<z>
= newTrPoint;<z>
(eNotificationRequired())<z>
, oldTrPoint, trPoint));<z>
{<z>
m[curr_model].frame_num);<z>
);<z>
.length;<z>
].mod.f[f0_index];<z>
.f[f1_index];<z>
length; i++) {<z>
].interp_frame.pn[i];<z>
= f0.pn[i];<z>
PositionNormal pn1 = f1.pn[i];<z>
.x;<z>
+ frac * pn1.y;<z>
;<z>
pn0.nx + frac * pn1.nx;<z>
frac * pn1.ny;<z>
frac * pn1.nz;<z>
{<z>
.triplane[i];<z>
[0].pn_index],<z>
].pn_index],<z>
],<z>
);<z>
{<z>
if (result != null) {<z>
return super.debug_getNChildren();<z>
;<z>
actionPerformed(GuiButton par1GuiButton)<z>
!par1GuiButton.enabled)<z>
== 1)<z>
.displayGuiScreen(parentGuiScreen);<z>
par1GuiButton.id == 0)<z>
(null);<z>
createClicked)<z>
createClicked = true;<z>
.nextLong();<z>
();<z>
if (!MathHelper.stringNullOrLengthZero(s))<z>
Long.parseLong(s);<z>
if (l1 != 0L)<z>
l = l1;<z>
numberformatexception)<z>
s.hashCode();<z>
0;<z>
("creative"))<z>
i = 1;<z>
(mc);<z>
new PlayerControllerSP(mc);<z>
WorldType.worldTypes[field_46030_z]));<z>
;<z>
.id == 3)<z>
;<z>
.drawButton = !moreOptions;<z>
= moreOptions;<z>
drawButton = moreOptions;<z>
(moreOptions)<z>
= StringTranslate.getInstance();<z>
"gui.done");<z>
.getInstance();<z>
("selectWorld.moreWorldOptions");<z>
par1GuiButton.id == 2)<z>
equals("survival"))<z>
field_40232_h = false;<z>
;<z>
true;<z>
();<z>
else if (gameMode.equals("hardcore"))<z>
;<z>
= "creative";<z>
();<z>
= false;<z>
"survival";<z>
();<z>
= false;<z>
);<z>
if (par1GuiButton.id == 4)<z>
;<z>
func_35363_g();<z>
)<z>
;<z>
field_46030_z >= WorldType.worldTypes.length)<z>
field_46030_z = 0;<z>
worldTypes[field_46030_z].getCanBeCreated())<z>
;<z>
>= WorldType.worldTypes.length)<z>
= 0;<z>
true);<z>
func_35363_g();<z>
{<z>
) {<z>
close();<z>
;<z>
catch (IOException e) {<z>
return false;<z>
static int getLocalHostIntAddress() {<z>
1) {<z>
byte[] address;<z>
.getAddress();<z>
{<z>
("Fail to get local host address. Set 127.0.0.1");<z>
localHostIntAddress = 0x7F000001;<z>
;<z>
ret = 0;<z>
; i >= 0; i--) {<z>
& 0xff);<z>
= ret;<z>
localHostIntAddress;<z>
String key, Object[] args) {<z>
null;<z>
);<z>
= args;<z>
) {<z>
) {<z>
])args.clone();<z>
] = "null";<z>
= MessageFormat.format(value, nonNullArgs);<z>
(IllegalArgumentException iae) {<z>
StringBuffer();<z>
;<z>
) {<z>
);<z>
toString();<z>
return iString;<z>
private synchronized void buildJamJarHandler() {<z>
(m_logger.isLoggable(Level.INFO))<z>
;<z>
;<z>
e) {<z>
);<z>
m_logger.isLoggable(Level.INFO))<z>
);<z>
getInstance()<z>
());<z>
!= null && libDirectory.exists()<z>
libDirectory.isDirectory()) {<z>
() {<z>
) {<z>
.endsWith(".jar");<z>
);<z>
0) {<z>
.length; i++) {<z>
jars[i])){<z>
(Level.INFO))<z>
i].getAbsolutePath());<z>
i]);<z>
insertJarToCache(jars[i]);<z>
SQLException e) {<z>
e);<z>
Latitude, int Longitude ) {<z>
super();<z>
.Jid = Jid;<z>
.Latitude = Latitude;<z>
;<z>
respond(IRequestCycle requestCycle)<z>
();<z>
getResponse();<z>
this.lastModified != null)<z>
.setLastModifiedTime(this.lastModified);<z>
= new MergedResponse(origResponse);<z>
.setResponse(merged);<z>
new MergedRequest(origRequest));<z>
: this.resources)<z>
handler = new ResourceRequestHandler(<z>
,<z>
pageParameters);<z>
respond(requestCycle);<z>
304 == merged.status)<z>
.setRequest(origRequest);<z>
ArrayList<String> getSchemas() throws SQLException<z>
;<z>
;<z>
);<z>
)<z>
(rs.getString("TABLE_CAT"));<z>
.close();<z>
schemas;<z>
eUnset(int featureID) {<z>
(featureID) {<z>
LINE__XFROM:<z>
;<z>
LINE__YFROM:<z>
;<z>
LINE__XTO:<z>
(XTO_EDEFAULT);<z>
case FxgPackage.LINE__YTO:<z>
setYTo(YTO_EDEFAULT);<z>
.LINE__X:<z>
setX(X_EDEFAULT);<z>
LINE__Y:<z>
Y_EDEFAULT);<z>
FxgPackage.LINE__ROTATION:<z>
);<z>
.LINE__SCALE_X:<z>
(SCALE_X_EDEFAULT);<z>
.LINE__SCALE_Y:<z>
);<z>
case FxgPackage.LINE__BLEND_MODE:<z>
(BLEND_MODE_EDEFAULT);<z>
FxgPackage.LINE__ALPHA:<z>
(ALPHA_EDEFAULT);<z>
:<z>
(ID_EDEFAULT);<z>
:<z>
;<z>
.LINE__VISIBLE:<z>
setVisible(VISIBLE_EDEFAULT);<z>
case FxgPackage.LINE__TRANSFORM:<z>
null);<z>
.LINE__FILTERS:<z>
clear();<z>
:<z>
((Fill)null);<z>
FxgPackage.LINE__STROKE:<z>
;<z>
case FxgPackage.LINE__MASK:<z>
);<z>
;<z>
, String property, String value) {<z>
.get(id);<z>
) throw new NullPointerException("No conversation Map for " + id);<z>
map.put(property, value);<z>
public String toString() {<z>
new StringBuilder();<z>
sb.append("{");<z>
hostedZoneId + ", ");<z>
"DNSName: " + dNSName + ", ");<z>
append("}");<z>
sb.toString();<z>
void createFormContent(IManagedForm managedForm) {<z>
();<z>
setText("Form with wrapped controls");<z>
ColumnLayout();<z>
layout.topMargin = 0;<z>
.bottomMargin = 5;<z>
leftMargin = 10;<z>
rightMargin = 10;<z>
10;<z>
.verticalSpacing = 10;<z>
layout.maxNumColumns = 4;<z>
1;<z>
);<z>
"Link Section",<z>
;<z>
"Link Section",<z>
2);<z>
(managedForm, "Mixed Section",<z>
;<z>
, "Link Section",<z>
4);<z>
(managedForm, "Control Section",<z>
);<z>
(managedForm, "Sample Section",<z>
;<z>
(managedForm, "Sample Section",<z>
5);<z>
, "Mixed Section",<z>
);<z>
, "Sample Section",<z>
2);<z>
,<z>
);<z>
managedForm, "Sample Section",<z>
, 4);<z>
(managedForm, "Sample Section",<z>
;<z>
createMixedSection(managedForm, "Mixed Section",<z>
;<z>
"Sample Section",<z>
2);<z>
, "Control Section",<z>
"An example of a section with form controls");<z>
void setMenu (Menu menu) {<z>
;<z>
0;<z>
!= null) {<z>
(SWT.ERROR_INVALID_ARGUMENT);<z>
.Pt_MENUABLE;<z>
OS.Pt_MENUABLE);<z>
;<z>
permissionsElement, String siteId) {<z>
);<z>
);<z>
();<z>
allowedPermLevels.contains(PermissionLevelManager.PERMISSION_LEVEL_NAME_CUSTOM)) {<z>
(PermissionLevelManager.PERMISSION_LEVEL_NAME_CUSTOM);<z>
getChildNodes();<z>
; m++)<z>
m);<z>
)<z>
Element)permissionsNode;<z>
{<z>
null &&<z>
) != null) {<z>
);<z>
);<z>
))<z>
(permissionElement.getAttribute(PERMISSION_TYPE));<z>
.createDBMembershipItem(permissionName, permissionLevelName, permissionType);<z>
.getPermissionLevelName())){<z>
);<z>
getLength(); l++)<z>
item(l);<z>
.getNodeType() == Node.ELEMENT_NODE)<z>
= (Element)customPermNode;<z>
.equals(CUSTOM_PERMISSIONS)) {<z>
new PermissionsMask();<z>
customPermList = permissionManager.getCustomPermissions();<z>
customPermList.size(); c++) {<z>
c);<z>
;<z>
mask.put(customPermName, hasPermission);<z>
;<z>
(level);<z>
;<z>
);<z>
(NumberFormatException nfe) {<z>
.error(nfe);<z>
Exception e) {<z>
e);<z>
membershipItemSet;<z>
out) throws IOException {<z>
getChannel();<z>
FileOutputStream(out).getChannel();<z>
, destinationChannel);<z>
();<z>
close();<z>
findTuscanyWar(File hostDir) {<z>
) {<z>
return null;<z>
hostDir.listFiles()) {<z>
hookLib = new File(contextDir, "tomcat-lib");<z>
()) {<z>
()) {<z>
().endsWith(".jar")) {<z>
{<z>
return contextDir;<z>
return null;<z>
) {<z>
);<z>
MapLayer) node.getUserObject());<z>
map != null);<z>
;<z>
String name)<z>
();<z>
(name, page);<z>
page;<z>
, String parameters,<z>
String returnType) {<z>
methodType;<z>
classType = classType;<z>
.methodName = methodName;<z>
.parameters = parameters;<z>
this.returnType = returnType;<z>
int columnIndex, BigDecimal x) throws SQLException {<z>
columnIndex, x);<z>
Throwable t) {<z>
);<z>
OutputFormat<K,V> out,<z>
taskContext)<z>
InterruptedException {<z>
out;<z>
this.taskContext = taskContext;<z>
) throws NonCorbaException {<z>
();<z>
someField = "test";<z>
e;<z>
, ArrayList<String> list) throws NamingException {<z>
== null) {<z>
list = new ArrayList<String>();<z>
|| "".equals(roleName)) {<z>
return list;<z>
(dn), username});<z>
();<z>
roleSearchSubtreeBool) {<z>
.setSearchScope(SearchControls.SUBTREE_SCOPE);<z>
else {<z>
);<z>
new String[] { roleName });<z>
NamingEnumeration results =<z>
search(roleBase, filter, constraints);<z>
.hasMore()) {<z>
.next();<z>
.getAttributes();<z>
{<z>
= addAttributeValues(roleName, attrs, list);<z>
;<z>
int hashCode() {<z>
hashCode()<z>
3 * op.hashCode()<z>
: cls.hashCode())<z>
obj.hashCode());<z>
)<z>
( addInstanceSupport( explicit_address, true ));<z>
(EClassifier eType)<z>
<?> instanceClass = getInstanceClass(eType);<z>
lang.Boolean.TYPE)<z>
"java.lang.Boolean";<z>
== java.lang.Byte.TYPE)<z>
return "java.lang.Byte";<z>
== java.lang.Character.TYPE)<z>
"java.lang.Character";<z>
java.lang.Double.TYPE)<z>
;<z>
instanceClass == java.lang.Float.TYPE)<z>
"java.lang.Float";<z>
.Integer.TYPE)<z>
"java.lang.Integer";<z>
.lang.Long.TYPE)<z>
return "java.lang.Long";<z>
.lang.Short.TYPE)<z>
;<z>
null;<z>
createValueText(Composite parent) {<z>
.value, AmlViewsRepository.SWT_KIND));<z>
;<z>
= new GridData(GridData.FILL_HORIZONTAL);<z>
setLayoutData(valueData);<z>
value.addFocusListener(new FocusAdapter() {<z>
"synthetic-access")<z>
e) {<z>
!= null)<z>
)));<z>
;<z>
.addKeyListener(new KeyAdapter() {<z>
@SuppressWarnings("synthetic-access")<z>
e) {<z>
(e.character == SWT.CR) {<z>
null)<z>
value.getText()));<z>
);<z>
.value);<z>
, "eef::Text");<z>
, null);<z>
return parent;<z>
.xmlbeans.XmlString xgetOwner()<z>
monitor())<z>
;<z>
.xmlbeans.XmlString target = null;<z>
0);<z>
;<z>
TasteException {<z>
props.getProperty(DATA_SOURCE_KEY)),<z>
.getProperty(GET_PREFERENCE_SQL_KEY),<z>
GET_PREFERENCE_TIME_SQL_KEY),<z>
props.getProperty(GET_USER_SQL_KEY),<z>
props.getProperty(GET_ALL_USERS_SQL_KEY),<z>
GET_NUM_ITEMS_SQL_KEY),<z>
(GET_NUM_USERS_SQL_KEY),<z>
(SET_PREFERENCE_SQL_KEY),<z>
,<z>
getProperty(GET_USERS_SQL_KEY),<z>
,<z>
(GET_PREFS_FOR_ITEM_SQL_KEY),<z>
props.getProperty(GET_NUM_PREFERENCE_FOR_ITEM_KEY),<z>
),<z>
.getProperty(GET_MAX_PREFERENCE_KEY),<z>
.getProperty(GET_MIN_PREFERENCE_KEY));<z>
void formatInteger033() {<z>
new XQuery(<z>
;<z>
result(query);<z>
result = res;<z>
)<z>
] initPoint3fArray(int N) {<z>
N];<z>
) {<z>
);<z>
return result;<z>
public Widget asWidget() {<z>
;<z>
.setHeadingText("Dialog Test");<z>
(PredefinedButton.YES, PredefinedButton.NO);<z>
);<z>
TestData.DUMMY_TEXT_SHORT));<z>
;<z>
setHideOnButtonClick(true);<z>
.setWidth(300);<z>
();<z>
);<z>
Resources.IMAGES.side_list());<z>
complex.setHeadingText("BorderLayout Dialog");<z>
complex.setWidth(400);<z>
setHeight(225);<z>
true);<z>
= new BorderLayoutContainer();<z>
(layout);<z>
;<z>
.setHeadingText("West");<z>
150);<z>
, 0, 0));<z>
setLayoutData(data);<z>
layout.setWestWidget(panel);<z>
ContentPanel();<z>
("Center");<z>
layout.setCenterWidget(panel);<z>
);<z>
.setWidth(400);<z>
.setMargins(10);<z>
;<z>
b.addSelectHandler(new SelectHandler() {<z>
(SelectEvent event) {<z>
simple.show();<z>
;<z>
);<z>
= new TextButton("Layout");<z>
SelectHandler() {<z>
SelectEvent event) {<z>
);<z>
);<z>
;<z>
;<z>
propertyName) throws RepositoryException,<z>
InternalQName name = readName(parentNode, propertyName);<z>
null)<z>
RepositoryException("Mandatory item " + propertyName + "not found for "<z>
getAsString());<z>
name;<z>
visit(ASTClear node, Object data)<z>
, data);<z>
Item createItem(Attributes attributes) {<z>
();<z>
"id"));<z>
;<z>
getDatatype().valueOf(<z>
("restricted")<z>
!= null)<z>
value);<z>
Exception ex) {<z>
))<z>
(attributes.getValue("refID"));<z>
item;<z>
static String decrypt(String encryptedSecret) {<z>
CipherInformation cipherInformation = new CipherInformation();<z>
(ALGORITHM);<z>
CipherOperationMode.DECRYPT);<z>
(EncodingType.BIGINTEGER16);<z>
CipherFactory.createCipher(cipherInformation, key);<z>
.getBytes()));<z>
public static void configurePersistenceUnitInfos(<z>
String, PersistenceUnitConfigurer> configuration)<z>
configurer = new PersistenceUnitConfigurer()<z>
final TapestryPersistenceUnitInfo unitInfo)<z>
User.class);<z>
TEST_PERSISTENCE_UNIT, configurer);<z>
()<z>
configure(final TapestryPersistenceUnitInfo unitInfo)<z>
"org.h2.Driver")<z>
addProperty("javax.persistence.jdbc.url", "jdbc:h2:mem:test")<z>
)<z>
.addProperty("eclipselink.logging.level", "fine")<z>
;<z>
.TEST_PERSISTENCE_UNIT_2, configurer2);<z>
<URL> getJarFileUrls() {<z>
== null)<z>
;<z>
return _jarFiles;<z>
(ObjectInputStream ois) throws IOException,<z>
ois.defaultReadObject();<z>
(ois, bcsListeners);<z>
final String repositoryId, final Gav gav )<z>
, InterruptedException<z>
repositoryId, gav, artifact );<z>
).waitForCalmPeriod( 200 );<z>
PApplet parent, int iwidth, int iheight) {<z>
;<z>
multisampleEnabled = false;<z>
);<z>
multisampleLevel = 4;<z>
setParent(parent);<z>
iheight);<z>
Coupon[] payments) {<z>
super(payments);<z>
payments.length];<z>
] instanceof CouponIborGearing), "First coupon should be CouponFixed or a CouponIborGearing");<z>
CouponFixed);<z>
length; looppay++) {<z>
instanceof CouponIborRatchet), "Next coupons should be CouponFixed or CouponIborRatchet");<z>
[looppay] instanceof CouponFixed);<z>
removeAllElements() {<z>
size = getSize();<z>
if (size > 0) {<z>
.clear();<z>
1);<z>
null;<z>
<T> list) {<z>
IModel<T>>();<z>
) {<z>
));<z>
result;<z>
WebAppContext wac)<z>
;<z>
.setContextClassLoader(wac.getClassLoader());<z>
= new InitialContext();<z>
.lookup ("java:comp");<z>
"env");<z>
(old_loader);<z>
void resizeImageAndSaveThumbnails(String _filename, boolean isFromFavorite) {<z>
MEDIA_MOUNTED)) {<z>
_filename;<z>
fullSizeImage;<z>
isFromFavorite) {<z>
;<z>
{<z>
;<z>
;<z>
;<z>
= true;<z>
toString(), options);<z>
> 0 && options.outHeight > 0) {<z>
FULL_SIZE_IMAGE_WIDTH = options.outWidth;<z>
.outHeight;<z>
!= null)<z>
fullSizeBitmap.recycle();<z>
;<z>
;<z>
{<z>
.getCameraFileSmallFavorite(filename);<z>
{<z>
= fileHelper.getCameraFileSmallEntry(filename);<z>
bitmap);<z>
);<z>
getBitmap(fullSizeImage, THUMBNAIL_MAX_WIDTH, THUMBNAIL_MAX_HEIGHT);<z>
;<z>
{<z>
fileHelper.getCameraFileThumbnailFavorite(filename);<z>
else {<z>
fileHelper.getCameraFileThumbnailEntry(filename);<z>
(thumbnail, bitmap);<z>
();<z>
s) {<z>
;<z>
();<z>
= (float)bounds.getY();<z>
)bounds.getWidth();<z>
)bounds.getHeight();<z>
h) + y,<z>
,<z>
new Color[] { color9,<z>
decodeColor(color9,color10,0.5f),<z>
);<z>
{<z>
instanceof IBNode)) {<z>
return false;<z>
) o;<z>
(fHashCode != rhs.fHashCode) {<z>
;<z>
;<z>
KademliaOverlayKey key) {<z>
getLocalConfig().getBucketSize();<z>
visibilityRestrictedLocalLookup(key, localBucketSize);<z>
() throws MojoExecutionException,<z>
;<z>
;<z>
("Type Mapping Output Location", typeFile.getParentFile());<z>
() {<z>
, 4);<z>
< 4; i++) {<z>
{<z>
(i, j));<z>
;<z>
(ComponentAdapter<?> componentAdapter) {<z>
componentAdapter.getComponentKey();<z>
).containsKey(key)) {<z>
);<z>
).add(componentAdapter);<z>
;<z>
;<z>
public void fireStateChanged() {<z>
(this);<z>
);<z>
ChangeListener changeListener : changeListeners) {<z>
event);<z>
) {<z>
difference.getId()) {<z>
DifferenceConstants.TEXT_VALUE_ID:<z>
.getLocalName())) {<z>
return RETURN_IGNORE_DIFFERENCE_NODES_SIMILAR;<z>
.ELEMENT_NUM_ATTRIBUTES_ID:<z>
);<z>
.ATTR_NAME_NOT_FOUND_ID:<z>
ignoreEmptyValueDifference(difference);<z>
DifferenceConstants.ATTR_VALUE_ID:<z>
difference);<z>
RETURN_ACCEPT_DIFFERENCE;<z>
String getRequestToken() {<z>
CommonsHttpOAuthProvider(<z>
, URL_ADDRESS + ACCESS_TOKEN_ENDPOINT_URL,<z>
+ AUTHORIZE_WEBSITE_URL);<z>
consumer, CALLBACK_URL);<z>
getToken());<z>
(GoodReadsApp.ACCESS_TOKEN_SECRET,<z>
);<z>
(TAG, url);<z>
url;<z>
catch(Exception e) {<z>
toString());<z>
;<z>
null;<z>
Path createCompilerclasspath() {<z>
null) {<z>
= new Path(getProject());<z>
;<z>
visit(JSContinueNode node)<z>
._offset))<z>
label = node.getLabel();<z>
._offset <= label.getEnd())<z>
.setType(LocationType.IN_LABEL);<z>
())<z>
IN_GLOBAL);<z>
);<z>
IOException {<z>
(file,"ISO-8859-1");<z>
>();<z>
(String str:stringCollection) {<z>
int pos = str.indexOf(',');<z>
;<z>
str.substring(pos+1);<z>
,Integer.parseInt(revision));<z>
f);<z>
file,"ISO-8859-1",stringCollection);<z>
;<z>
String toString() {<z>
);<z>
) {<z>
return "" + m_value_float;<z>
retType == CommandGene.IntegerClass) {<z>
+ m_value_int;<z>
CommandGene.LongClass) {<z>
"" + m_value_long;<z>
{<z>
;<z>
+ retType;<z>
item) {<z>
.getValue();<z>
);<z>
T entity = this.editedEntity;<z>
values);<z>
new HashMap<String,Object>();<z>
;<z>
;<z>
()<z>
item.getPermissionLevel() != null<z>
!= null)<z>
);<z>
;<z>
public HttpUriRequest getRedirect(<z>
request,<z>
HttpResponse response,<z>
final HttpContext context) throws ProtocolException {<z>
.handler.getLocationURI(response, context);<z>
().getMethod();<z>
METHOD_NAME)) {<z>
HttpHead(uri);<z>
else {<z>
(uri);<z>
RecognitionException {<z>
int stackSize = keepStackSize();<z>
;<z>
;<z>
;<z>
) {<z>
(re);<z>
re);<z>
restoreStackSize(stackSize);<z>
PShape ss) {<z>
(ss));<z>
.getChildCount(); i++) {<z>
child=ss.getChild(i);<z>
PShapeFamilyNames[child.getFamily()]);<z>
child);<z>
, int direction,<z>
{<z>
& FOCUSABLES_ACCESSIBILITY) == FOCUSABLES_ACCESSIBILITY) {<z>
add(this);<z>
, direction, focusableMode);<z>
)<z>
++i)<z>
AlertLevel result = VALUES_ARRAY[i];<z>
toString().equals(literal))<z>
result;<z>
return null;<z>
, Map<String,Double> val) {<z>
{<z>
>();<z>
complete_ms_avg.put(key, val);<z>
getSubtypesForType(Type type) {<z>
type);<z>
subtypes == null) {<z>
NO_TYPE;<z>
()]);<z>
) {<z>
next;<z>
outer: do {<z>
)<z>
= e.next;<z>
(e == null) {<z>
, i, n; Object ek;<z>
index) < 0 ||<z>
i >= (n = t.length))<z>
break outer;<z>
.hash == MOVED) {<z>
)<z>
ek).first;<z>
tab = (Node[])ek;<z>
1);<z>
e.key;<z>
= e.val) == null);<z>
;<z>
void init(UpdateHandler uhandler, SolrCore core) {<z>
) {<z>
();<z>
uhandler = uhandler;<z>
)) {<z>
(debug) {<z>
", next id=" + id, " this is a reopen... nothing else to do.");<z>
.reload();<z>
dataDir;<z>
dataDir, TLOG_NAME);<z>
mkdirs();<z>
tlogDir);<z>
id = getLastLogId() + 1;<z>
{<z>
+ ", next id=" + id);<z>
TransactionLog oldLog = null;<z>
) {<z>
f = new File(tlogDir, oldLogName);<z>
;<z>
(oldLog, false);<z>
Exception e) {<z>
f, e);<z>
f);<z>
for (TransactionLog ll : logs) {<z>
(ll);<z>
.size() >= 2) break;<z>
256);<z>
} catch (SolrException e) {<z>
(), e);<z>
.SERVER_ERROR,<z>
);<z>
= getRecentUpdates();<z>
.getVersions(numRecordsToKeep);<z>
.getLatestOperation();<z>
1; i>=0; i--) {<z>
startingUpdates.deleteList.get(i);<z>
,du.version));<z>
--) {<z>
get(i);<z>
pointer);<z>
;<z>
2);<z>
, version);<z>
} finally {<z>
);<z>
{<z>
(input == null)<z>
null;<z>
ArrayList<O>();<z>
in;<z>
)<z>
?>) input;<z>
if (input instanceof Object[])<z>
) input);<z>
;<z>
);<z>
> 1) {<z>
throw new RuntimeException(<z>
);<z>
.size() == 1) {<z>
next();<z>
return null;<z>
isFunctionalProperty(ATermAppl p) {<z>
;<z>
{<z>
p + " is not a known property" );<z>
;<z>
())<z>
;<z>
{<z>
() )<z>
setExplanation( DependencySet.INDEPENDENT );<z>
return true;<z>
.isFunctional() ) {<z>
) )<z>
) );<z>
;<z>
) )<z>
return false;<z>
= role.isDatatypeRole()<z>
, ATermUtils.TOP_LIT )<z>
);<z>
min2P );<z>
static String template2Html(Template template) {<z>
StringBuffer info = new StringBuffer();<z>
= getStyleSheet();<z>
(info, 0, styles);<z>
getImageURL(SymfonyPluginImages.DESC_OBJS_TEMPLATE);<z>
body = null;<z>
imageUrl != null) {<z>
);<z>
.toExternalForm();<z>
.getSourceModule();<z>
template.getElementName();<z>
.getTypes().length > 0) {<z>
= module.getTypes()[0];<z>
0) {<z>
= type.getTypes()[0];<z>
);<z>
;<z>
e) {<z>
);<z>
20, 2, true);<z>
info, header.toString());<z>
StringBuffer content = new StringBuffer();<z>
(body != null)<z>
append(body);<z>
content.toString()));<z>
info);<z>
return info.toString();<z>
index, boolean persisted, PreferencesHint preferencesHint) {<z>
();<z>
(NotationFactory.eINSTANCE.createHintedDiagramLinkStyle());<z>
);<z>
UMLVisualIDRegistry.getType(LoopNodeEditPart.VISUAL_ID));<z>
, persisted);<z>
);<z>
.getPreferenceStore();<z>
, "LoopNode");<z>
.initFontStyleFromPrefs(node, prefStore, "LoopNode");<z>
;<z>
.getType(LoopNodeKeywordEditPart.VISUAL_ID));<z>
;<z>
node, prefStore, "LoopNode");<z>
node;<z>
public String getReminderQueryAnswer() {<z>
{<z>
BLANK;<z>
;<z>
{<z>
= GeneratorUtils.types( schema, includes );<z>
if (simpleTypes) {<z>
("Generating simple types");<z>
);) {<z>
(XSDTypeDefinition) itr.next();<z>
getName() == null) {<z>
(!xsdType.getTargetNamespace()<z>
getTargetNamespace())) {<z>
XSDSimpleTypeDefinition) {<z>
.fine(xsdType.getName());<z>
);<z>
if (complexTypes) {<z>
fine("Generating complex types");<z>
itr.hasNext();) {<z>
.next();<z>
) == null) {<z>
)<z>
getTargetNamespace())) {<z>
instanceof XSDComplexTypeDefinition) {<z>
.fine(xsdType.getName());<z>
createType((XSDComplexTypeDefinition) xsdType, 0);<z>
{<z>
("XERRORX generating " + xsdType);<z>
printStackTrace();<z>
(schema.getTargetNamespace());<z>
hasNext();) {<z>
;<z>
== null ) {<z>
;<z>
.getName(), gtType);<z>
Object[] input = new Object[] {<z>
gtSchema, Schemas.getTargetPrefix(schema), this<z>
(getSchemaClassTemplateName(), input);<z>
.toUpperCase()<z>
;<z>
(result, className, sourceLocation);<z>
ServiceException {<z>
super.checkBlacklistDataChange();<z>
(m_blacklistStatus.isDone()) {<z>
(<z>
turmeric.security.errorlibrary.ErrorConstants.SVC_SECURITY_SET_BLACKLIST_STATUS_ERROR,<z>
.errorlibrary.ErrorConstants.ERRORDOMAIN));<z>
scanDynamicDestination(T pojo, Message message) {<z>
{<z>
{<z>
field.setAccessible(true);<z>
, getDestinationOf(message));<z>
IllegalAccessException e) {<z>
throw new RuntimeException(e);<z>
private String getMountpoint(String mountpoint) {<z>
= mountpoint.trim();<z>
(mountpoint)) {<z>
;<z>
startsWith("/")) {<z>
;<z>
return mountpoint;<z>
createStageOutputsMethod() {<z>
);<z>
Statement> statements = Lists.create();<z>
StageOutput.class)))<z>
)<z>
));<z>
()) {<z>
()));<z>
);<z>
.getLocations()) {<z>
ExpressionBuilder(factory, list)<z>
t(StageOutput.class))<z>
.newObject(<z>
),<z>
NullWritable.class)),<z>
t(outputFormatType)))<z>
)<z>
);<z>
factory, list)<z>
;<z>
newMethodDeclaration(<z>
)<z>
.class))<z>
()<z>
,<z>
StageOutput.class)),<z>
,<z>
),<z>
statements);<z>
trace(String msg) {<z>
if (debug) {<z>
.println("###RowSets: " + msg);<z>
(final String fieldName,<z>
final UpdateRequestProcessor next) {<z>
super(next);<z>
this.fieldName = fieldName;<z>
)<z>
.name = name;<z>
;<z>
OMElement addRequestElement) throws AxisFault {<z>
.debug("Request: add");<z>
"tas:attachmentMetadata");<z>
);<z>
= _xpathHelper.getRequiredElement(addRequestElement, "tas:authCredentials");<z>
;<z>
= _xpathHelper.getElement(addRequestElement, "tas:localFileURL");<z>
, "tas:payload");<z>
_xpathHelper.getElement(addRequestElement, "tas:plaintext");<z>
) {<z>
("None of tas:payload, tas:localFileURL, tas:plaintext "<z>
"elements is present in the message.");<z>
null;<z>
if (localFileUrlElement != null) {<z>
.trim();<z>
);<z>
.add(credentials, metadata, localFileUrl);<z>
(payloadElement != null) {<z>
.trim());<z>
.length);<z>
(credentials, metadata, payload);<z>
if (plaintextElement != null) {<z>
).trim().getBytes();<z>
);<z>
(credentials, metadata, payload);<z>
_omFactory.createOMElement("addResponse", _tasOmNamespace);<z>
_omFactory.createOMElement("url", _tasOmNamespace);<z>
(storedUrl);<z>
;<z>
responseElement;<z>
} catch (Exception e) {<z>
e);<z>
.convertExceptionToSOAPFault(e);<z>
> params) {<z>
{<z>
HTTP_BIND_ENABLED_DEFAULT);<z>
.equalsIgnoreCase(HTTP_BIND_PORT)) {<z>
setUnsecureHttpBindPort(HTTP_BIND_PORT_DEFAULT);<z>
if (property.equalsIgnoreCase(HTTP_BIND_SECURE_PORT)) {<z>
HTTP_BIND_SECURE_PORT_DEFAULT);<z>
] array, int[] position)<z>
int L = array.length;<z>
.length;<z>
;<z>
=0; i<R; i++)<z>
-3;<z>
)<z>
)<z>
]-1];<z>
;<z>
IOException {<z>
();<z>
FileInputStream(CONFIGURATION_FILE));<z>
{<z>
.fatal("Configuration could not be loaded.", e);<z>
throw e;<z>
;<z>
private List<ExtendedMappedParametrizedObjectEntry> getWorkspaceComponentEntries(WorkspaceEntry workspaceEntry)<z>
entries = new ArrayList<ExtendedMappedParametrizedObjectEntry>();<z>
if (workspaceEntry.getAccessManager() != null)<z>
add(workspaceEntry.getAccessManager());<z>
) != null)<z>
));<z>
workspaceEntry.getInitializer() != null)<z>
getInitializer());<z>
)<z>
add(workspaceEntry.getLockManager());<z>
) != null)<z>
));<z>
workspaceEntry.getContainer() != null)<z>
);<z>
getValueStorages() != null)<z>
workspaceEntry.getContainer().getValueStorages())<z>
);<z>
return entries;<z>
eIsSet(int featureID) {<z>
featureID) {<z>
MenuPackageImpl.OPAQUE_MENU_SEPARATOR__OPAQUE_ITEM:<z>
null : !OPAQUE_ITEM_EDEFAULT.equals(opaqueItem);<z>
(featureID);<z>
Context ctx) {<z>
"id", "password",<z>
, null,<z>
;<z>
.getCount();<z>
();<z>
{<z>
values = new ContentValues();<z>
{<z>
)));<z>
getString(2) != null) {<z>
)));<z>
) {<z>
3)));<z>
null);<z>
;<z>
close();<z>
public int hashCode() {<z>
;<z>
;<z>
kind.hashCode();<z>
token.hashCode();<z>
return result;<z>
() {<z>
() == objectsPerPage)<z>
1;<z>
() - wieldedItems.size())<z>
objectsPerPage == 0 ? 0<z>
;<z>
String message)<z>
(verbose) {<z>
(message);<z>
{<z>
(monsterId);<z>
!= null) {<z>
maxMob(monsterId)));<z>
;<z>
;<z>
) throws SAXException {<z>
size() == 0){<z>
.endDocument();<z>
String getDestinationLabel() {<z>
= getJavaElementDestination();<z>
(destination == null)<z>
;<z>
ALL_FULLY_QUALIFIED);<z>
) {<z>
XCreateWindowParams(new Object[] {<z>
,<z>
(parentWindow)}));<z>
) {<z>
;<z>
) {<z>
();<z>
null;<z>
{<z>
current = first;<z>
null) {<z>
getNext() == valve) {<z>
));<z>
);<z>
== basic) first = null;<z>
(valve instanceof Contained)<z>
) valve).setContainer(null);<z>
) {<z>
instanceof Lifecycle) {<z>
.stop();<z>
e) {<z>
;<z>
);<z>
()<z>
int size = -1;<z>
IPersistableDebugElement.class);<z>
if (elmt != null)<z>
(fRendering, IDebugPreferenceConstants.PREF_COL_SIZE_BY_MODEL))<z>
PREF_COL_SIZE_BY_MODEL);<z>
;<z>
size;<z>
)<z>
int soundFormat = 0;<z>
.getChannels() == 1 )<z>
getSampleSizeInBits() == 8 )<z>
AL_FORMAT_MONO8;<z>
audioFormat.getSampleSizeInBits() == 16 )<z>
AL_FORMAT_MONO16;<z>
+<z>
;<z>
== 2 )<z>
.getSampleSizeInBits() == 8 )<z>
= AL10.AL_FORMAT_STEREO8;<z>
( audioFormat.getSampleSizeInBits() == 16 )<z>
AL_FORMAT_STEREO16;<z>
"Illegal sample size in method " +<z>
"'setAudioFormat'" );<z>
"Audio data neither mono nor stereo in " +<z>
);<z>
soundFormat;<z>
) audioFormat.getSampleRate();<z>
, String output, List<IRegion> inputOffOnRegions,<z>
throws CoreException<z>
))<z>
null ? "Output OFF/ON regions was null"<z>
DEBUG);<z>
.PLUGIN_ID,<z>
;<z>
new StringBuilder(output);<z>
; i--)<z>
i);<z>
);<z>
.getOffset(),<z>
+ inputRegion.getLength());<z>
) + outputRegion.getLength(),<z>
;<z>
();<z>
Object... objects) {<z>
: objects) {<z>
o == null) {<z>
return true;<z>
;<z>
, String oldBranchName, String newBranchName)<z>
;<z>
= oldBranchName;<z>
this.newBranchName = newBranchName;<z>
throws org.apache.thrift.TException {<z>
);<z>
oprot.writeStructBegin(STRUCT_DESC);<z>
db_name != null) {<z>
);<z>
;<z>
;<z>
this.tbl_name != null) {<z>
oprot.writeFieldBegin(TBL_NAME_FIELD_DESC);<z>
.writeString(this.tbl_name);<z>
.writeFieldEnd();<z>
writeFieldBegin(MAX_INDEXES_FIELD_DESC);<z>
writeI16(this.max_indexes);<z>
();<z>
writeFieldStop();<z>
.writeStructEnd();<z>
.JournalArticleResource fetchByPrimaryKey(<z>
resourcePrimKey)<z>
.SystemException {<z>
fetchByPrimaryKey(resourcePrimKey);<z>
Object value) {<z>
{<z>
MultipartFile) value;<z>
));<z>
) {<z>
ex);<z>
instanceof byte[]) {<z>
value);<z>
;<z>
.model.Release findByPrimaryKey(<z>
long releaseId)<z>
liferay.portal.NoSuchReleaseException,<z>
.SystemException {<z>
findByPrimaryKey(releaseId);<z>
public void _dstore_0(int pc) {<z>
pc);<z>
classformat_store, new String[] {<z>
.DSTORE_0],<z>
getLocalVariableName(pc, 0)<z>
);<z>
);<z>
(ATerm p, ATermAppl domain) {<z>
(!PelletOptions.USE_TRACING) {<z>
;<z>
= getRole(p);<z>
r == null) {<z>
false;<z>
);<z>
if( domains == null) {<z>
false;<z>
domain);<z>
{<z>
;<z>
(p, domain));<z>
(explanation)) {<z>
;<z>
(allExplanations.isEmpty()) {<z>
remove(domain);<z>
;<z>
isNoop() {<z>
isEmpty()) {<z>
return true;<z>
diff : diffs) {<z>
)) {<z>
false;<z>
return true;<z>
getTemplateRequest)<z>
{<z>
(getTemplateRequest);<z>
());<z>
byte[] d,<z>
int l) {<z>
<< IO.NODEPOWER,<z>
;<z>
().dirty = true;<z>
() {<z>
,<z>
TIFF_ASCII);<z>
documentBuilder) {<z>
documentBuilder);<z>
{<z>
();<z>
);<z>
.numColumns = 3;<z>
, 3);<z>
)).widthHint = convertWidthInCharsToPixels(50);<z>
).grabExcessHorizontalSpace = true;<z>
doFillIntoGrid(parent, 3);<z>
.fEditedValidator != null) {<z>
.fEditedValidator.getValidatorType()<z>
());<z>
(<z>
().getName())) {<z>
parent);<z>
} else {<z>
, SWT.FILL);<z>
;<z>
;<z>
(data);<z>
= new GridLayout();<z>
3;<z>
-5;<z>
;<z>
layout.marginTop = -5;<z>
);<z>
);<z>
();<z>
createFieldListeners();<z>
parent);<z>
;<z>
throws IOException {<z>
setDimseRQHandler(createServiceRegistry());<z>
(conn);<z>
;<z>
.setAssociationAcceptor(true);<z>
conn);<z>
public void removeIndividualScopePermission(<z>
long companyId, long groupId, String name,<z>
PermissionedModel permissionedModel, long roleId, String actionId)<z>
SystemException {<z>
permissionedModel, roleId,<z>
(name, actionId),<z>
.OPERATOR_REMOVE);<z>
isOfficialPhotoPublicAndPreferred() {<z>
;<z>
isProfilePhotoPublic()) return false;<z>
();<z>
<String, String> attrs) {<z>
super(attrs);<z>
.isNotNull(parent);<z>
this.parent = parent;<z>
() {<z>
StringBuilder builder = new StringBuilder();<z>
getGold()).append("g ");<z>
"s ");<z>
.append("c");<z>
return builder.toString();<z>
t) {<z>
{<z>
.parse(t.term());<z>
null) {<z>
setType(DATE_TYPE);<z>
.add(t);<z>
e) {<z>
> activities, final String user) {<z>
() {<z>
public boolean apply(ActivityInIteration activity) {<z>
));<z>
;<z>
throws ProcessingException {<z>
SECONDS);<z>
e != null) {<z>
);<z>
;<z>
InterruptedException e) {<z>
);<z>
ByteBuffer put(ByteBuffer src) {<z>
this)<z>
new IllegalArgumentException();<z>
remaining();<z>
> remaining())<z>
BufferOverflowException();<z>
++)<z>
));<z>
this;<z>
) {<z>
(frame,<z>
,<z>
),<z>
,<z>
, mousePosition.y,<z>
mousePositionOnScreen.x,<z>
mousePositionOnScreen.y,<z>
;<z>
,<z>
final ParserRun parserRun) {<z>
setId(id);<z>
);<z>
;<z>
);<z>
{<z>
if (cellEditor instanceof ComboBoxCellEditor) {<z>
cellEditor.getValue();<z>
(value instanceof Integer) {<z>
).intValue();<z>
intVal == -1) {<z>
;<z>
typeRefs[intVal];<z>
return newValue;<z>
{<z>
;<z>
;<z>
{<z>
();<z>
(perUserMaxActive == null) {<z>
;<z>
.put(username, value);<z>
Exception{<z>
();<z>
store;<z>
null;<z>
keypair = kp;<z>
if(isroot){<z>
,cavec);<z>
else{<z>
generateSelfSignedV3Certificate(keypair,praxvec,cavec);<z>
name);<z>
;<z>
name));<z>
File.separator +name);<z>
);<z>
;<z>
.get(0));<z>
{<z>
.setCertificateEntry(alias, cert);<z>
[] chain = new X509Certificate[1];<z>
cert;<z>
;<z>
(bOut,passw.toCharArray());<z>
name+".p12"));<z>
();<z>
;<z>
;<z>
.println("*********************Zertifikat Ende***************************\n");<z>
void opAddDayTimeDurations5() {<z>
new XQuery(<z>
ctx);<z>
query);<z>
res;<z>
true)<z>
context)<z>
{<z>
, one);<z>
()<z>
;<z>
.bindFromRequest();<z>
.hasErrors())<z>
= badRequest(form.errorsAsJson());<z>
get();<z>
.FIND.byId(incoming.id);<z>
storedVersion.name = incoming.name;<z>
documentationUrl = incoming.documentationUrl;<z>
storedVersion.majorVersion = getMajorVersion(storedVersion);<z>
();<z>
;<z>
;<z>
SurfaceHolder.Callback() {<z>
) {<z>
;<z>
, int format,<z>
int width, int height) {<z>
draw();<z>
void surfaceDestroyed(SurfaceHolder holder) {<z>
byte[] buffer) {<z>
value >>> 16) & 0xff);<z>
);<z>
>>> 0) & 0xff);<z>
private void createListeners() {<z>
== null)<z>
listeners = new ArrayList<IContentChangedListener>();<z>
, final Type type) {<z>
ret = null;<z>
)) {<z>
type);<z>
) {<z>
= ta;<z>
ret;<z>
checkInvalidRuleRef(Token ruleID) {<z>
();<z>
(0)) ) {<z>
.grammarError(ErrorType.PARSER_RULES_NOT_ALLOWED,<z>
ruleID, ruleID.getText());<z>
) {<z>
);<z>
hasProperty(REP_DISABLED);<z>
listener, Event event) {<z>
{<z>
PRODUCT_ADDED:<z>
listener.productAdded(event);<z>
PRODUCT_REMOVED:<z>
);<z>
delimiter)<z>
new Vector();<z>
= true;<z>
subString;<z>
)<z>
);<z>
(tokenLocation > 0)<z>
tokenLocation);<z>
subString);<z>
.substring(tokenLocation + 1);<z>
;<z>
input);<z>
)];<z>
i++)<z>
;<z>
;<z>
,<z>
ApplicationTemplates templates,<z>
,<z>
,<z>
,<z>
errorPopupManager,<z>
ConsolePopupPresenterWidget> consolePopup,<z>
translator,<z>
{<z>
(modelProvider, applicationResources);<z>
applicationResources = applicationResources;<z>
consoleManager;<z>
errorPopupManager = errorPopupManager;<z>
= translator;<z>
this.constants = constants;<z>
.sideTabExtendedVmStyle().ensureInjected();<z>
;<z>
;<z>
{<z>
instanceof JavaExtensionStatement) {<z>
, ctx);<z>
.init(ctx);<z>
) {<z>
e);<z>
write("helper ");<z>
);<z>
;<z>
();<z>
iterator();<z>
;<z>
= null;<z>
isStaticQvtoCall(ctx, extension)) {<z>
assert parameterNamesIterator.hasNext();<z>
;<z>
;<z>
);<z>
);<z>
modelManager.registerSelfAlias(selfParameterName);<z>
;<z>
("(");<z>
)) {<z>
;<z>
(" : ");<z>
.next()));<z>
)) {<z>
;<z>
write(") : ");<z>
getReturnType(extension, ctx)));<z>
;<z>
ExpressionExtensionStatement) {<z>
, ctx);<z>
} else if (extension instanceof CreateExtensionStatement) {<z>
) extension);<z>
if (extension instanceof WorkflowSlotExtensionStatement) {<z>
migrateWorkflowSlotExtension((WorkflowSlotExtensionStatement) extension, ctx);<z>
else {<z>
getName());<z>
) {<z>
modelManager.unregisterSelfAlias(selfParameterName);<z>
writeln("}");<z>
main(String[] args) throws Exception {<z>
;<z>
in, 0, -2);<z>
Exception("expected ArrayIndexOutOfBoundsException");<z>
catch (ArrayIndexOutOfBoundsException aiobe) {}<z>
.length);<z>
throw new Exception("expected ArrayIndexOutOfBoundsException");<z>
}<z>
selection)<z>
CoreException {<z>
, selection);<z>
compareTo(putAll_args other) {<z>
other.getClass())) {<z>
);<z>
lastComparison = 0;<z>
= (putAll_args)other;<z>
compareTo(typedOther.isSetMapName());<z>
(lastComparison != 0) {<z>
return lastComparison;<z>
isSetMapName()) {<z>
(this.mapName, typedOther.mapName);<z>
if (lastComparison != 0) {<z>
lastComparison;<z>
compareTo(typedOther.isSetKeys());<z>
if (lastComparison != 0) {<z>
lastComparison;<z>
{<z>
keys, typedOther.keys);<z>
if (lastComparison != 0) {<z>
return lastComparison;<z>
isSetValues());<z>
) {<z>
lastComparison;<z>
) {<z>
this.values, typedOther.values);<z>
(lastComparison != 0) {<z>
return lastComparison;<z>
0;<z>
InternalEObject otherEnd, int featureID, NotificationChain msgs)<z>
switch (featureID)<z>
AlfPackage.DO_STATEMENT__BLOCK:<z>
return basicSetBlock(null, msgs);<z>
AlfPackage.DO_STATEMENT__CONDITION:<z>
, msgs);<z>
);<z>
int discardPerWorkingCopyInfo(CompilationUnitImpl workingCopy) throws DartModelException {<z>
= null;<z>
&& workingCopy.hasUnsavedChanges()) {<z>
;<z>
PerWorkingCopyInfo info = null;<z>
) {<z>
getOwner();<z>
perWorkingCopyInfos.get(owner);<z>
if (workingCopyToInfos == null) {<z>
return -1;<z>
);<z>
null) {<z>
1;<z>
() - 1);<z>
.getUseCount() == 0) {<z>
);<z>
) {<z>
remove(owner);<z>
{<z>
);<z>
workingCopy.closeBuffer();<z>
null) {<z>
);<z>
delta != null) {<z>
.delta);<z>
();<z>
{<z>
;<z>
;<z>
{<z>
case 1 :<z>
);<z>
2 :<z>
append("<<");<z>
(getStereotype(eObject) );<z>
);<z>
case 3 :<z>
("<<");<z>
.append(getStereotype(eObject) );<z>
result.append(">> ");<z>
(proc.getName() );<z>
, showMask));<z>
toString();<z>
super I> property, Object value) {<z>
), value);<z>
) {<z>
;<z>
(IllegalAccessException e) {<z>
(e);<z>
e) {<z>
throw new ModelExecutionException(e);<z>
<ListQueuesResult> listQueuesAsync(<z>
ListQueuesRequest listQueuesRequest,<z>
)<z>
throws AmazonServiceException, AmazonClientException {<z>
new Callable<ListQueuesResult>() {<z>
() throws Exception {<z>
ListQueuesResult result;<z>
listQueuesRequest);<z>
Exception ex) {<z>
;<z>
throw ex;<z>
listQueuesRequest, result);<z>
;<z>
;<z>
) {<z>
(component);<z>
;<z>
), 0, 0));<z>
();<z>
classInfo)<z>
?> clazz = classInfo.getType();<z>
superType = null;<z>
isInterface() == false)<z>
superClazz = clazz.getSuperclass();<z>
superClazz != null)<z>
) getTypeInfo(superClazz);<z>
superType;<z>
importers.models.DocumentProtos.ExtId parseDelimitedFrom(<z>
io.InputStream input,<z>
extensionRegistry)<z>
{<z>
;<z>
.mergeDelimitedFrom(input, extensionRegistry)) {<z>
builder.buildParsed();<z>
} else {<z>
return null;<z>
private FeatureStore mergeLayers(String outputFileNoExt) throws IOException {<z>
= featureStores;<z>
shpFileName = outputFileNoExt + ".shp";<z>
;<z>
shpFile);<z>
".shx"));<z>
(outputFileNoExt + ".dbf"));<z>
+ ".fix"));<z>
+ ".qix"));<z>
canWrite())<z>
shpFile.createNewFile()) {<z>
shpFileName);<z>
} catch (IOException e) {<z>
"Cannot write to file " + shpFileName).initCause(e);<z>
shpFileURL;<z>
;<z>
(MalformedURLException e) {<z>
().initCause(e);<z>
storesToMerge.size() == 1) {<z>
;<z>
;<z>
);<z>
.createDataStore(shpFileURL);<z>
));<z>
(fc.reader());<z>
else {<z>
mergeFeatureStores(storesToMerge, shpFileURL);<z>
(Exception e) {<z>
( e );<z>
shpFileURL);<z>
);<z>
;<z>
resources = service.members(null);<z>
get(0);<z>
0).getMap());<z>
LayerFactory factory = map.getLayerFactory();<z>
.createLayer(resource);<z>
(false);<z>
(layer);<z>
(FeatureStore.class, null);<z>
return udigStore;<z>
() throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
0 ) {<z>
;<z>
) return ;<z>
==0 ) {<z>
;<z>
re) {<z>
;<z>
re);<z>
stackSize);<z>
get (Object key)<z>
(key);<z>
) {<z>
== null) {<z>
key)) {<z>
_misses++;<z>
{<z>
;<z>
;<z>
int i) {<z>
(specialTokens == null)<z>
new java.util.NoSuchElementException("No specials in token");<z>
elementAt(i);<z>
f, BuildPropertiesResource resource) {<z>
;<z>
;<z>
e) {<z>
printStackTrace();<z>
) {<z>
.startList(title));<z>
{<z>
) {<z>
));<z>
{<z>
.fileWrapper.write("--");<z>
fileWrapper.writeEOL();<z>
importAssessment(ValueChangeEvent e)<z>
ContextUtil.lookupParam("sourceType");<z>
.getNewValue();<z>
equals(sourceType)) {<z>
endsWith(".zip")) {<z>
true;<z>
uploadFile, true, true);<z>
= false;<z>
(uploadFile, false, true);<z>
) {<z>
;<z>
, false);<z>
isCP = false;<z>
uploadFile, false, false);<z>
{<z>
();<z>
= new StreamResult(System.out);<z>
obj, result);<z>
private void updateOverlays() {<z>
);<z>
== null) {<z>
(this, mapView);<z>
.getOverlays().add(myLocationOverlay);<z>
);<z>
, screenDensity, "arrets",<z>
.class);<z>
, markerIconBmpsForVelo, screenDensity, "stations",<z>
class);<z>
Void) null);<z>
, ? super V> selector) throws Exception<z>
null)<z>
"No null selector");<z>
V> entry : localCache.entrySet())<z>
entry.getKey();<z>
final V value = entry.getValue();<z>
<V>()<z>
get()<z>
value;<z>
public long getExpireTime()<z>
;<z>
)<z>
key, info);<z>
) {<z>
() +<z>
, getHtmlAlign()) +<z>
)) +<z>
(), getHtmlArchive()) +<z>
()) +<z>
+<z>
) +<z>
getAttributeName(), getHtmlName()) +<z>
)) +<z>
+<z>
()) +<z>
) ;<z>
(String name) {<z>
);<z>
this.cell0;<z>
this.selector1) return this.cell1;<z>
result;<z>
;<z>
)<z>
)<z>
.delegate.toSortedSet();<z>
,<z>
long resourceId)<z>
{<z>
_permissionLocalService.unsetUserPermissions(userId, actionIds,<z>
;<z>
boolean shouldNack) {<z>
shouldAck;<z>
.shouldNack = shouldNack;<z>
();<z>
final int interfac, final String text) {<z>
get(interfac);<z>
(!talkFace.isValid()) {<z>
return false;<z>
talkFace.getChildCount(); i++) {<z>
)) {<z>
true;<z>
false;<z>
getPais() {<z>
;<z>
EmpPais>(new EmpPais());<z>
), false);<z>
();<z>
, "empPais.empPaisId", 200);<z>
setAllowBlank(false);<z>
cmbPais.setStore(pais);<z>
ALL);<z>
);<z>
);<z>
cmbPais.setValueField("empPaisId");<z>
setForceSelection(true);<z>
(200);<z>
.setEditable(false);<z>
cmbPais;<z>
OutputStream out, final String taskName,<z>
TimeUnit maxIntervalUnit) {<z>
= out;<z>
taskName = taskName;<z>
NANOSECONDS.convert(maxIntervalTime, maxIntervalUnit);<z>
{<z>
IDs.PREF_RECOGNIZE_APIS_BY_PREFIX_ALONE,<z>
, getFieldEditorParent());<z>
;<z>
,<z>
;<z>
addField(pathEditor);<z>
)<z>
( attributeHierarchy == null )<z>
;<z>
0 )<z>
.isString() )<z>
return IValue.EMPTY_STRING_VALUE;<z>
.EMPTY_BINARY_VALUE;<z>
.getValueSize() == 1 )<z>
.getValues()[0] );<z>
return null;<z>
,<z>
TestOutcomes allTestOutcomes,<z>
reporter) {<z>
;<z>
generateReportFor(testOutcome, allTestOutcomes);<z>
) {<z>
ReportGenerationFailedError(<z>
e);<z>
(String cmd) {<z>
) {<z>
);<z>
);<z>
) {<z>
;<z>
return false;<z>
int positionOffsetPixels) {<z>
mCurrent.getPaddingLeft()<z>
();<z>
- mArrowPadding;<z>
(positionOffsetPixels > 0) {<z>
getPaddingLeft();<z>
.min(positionOffsetPixels, maxOffset - 1);<z>
* offset, 0);<z>
maxOffset -= this.getPaddingRight();<z>
maxOffset);<z>
0, 0);<z>
Position newRef)<z>
if (oldRef == null)<z>
String message = "nullValue.OldRefIsNull";<z>
).severe(message);<z>
(message);<z>
(newRef == null)<z>
"nullValue.NewRefIsNull";<z>
).severe(message);<z>
message);<z>
newRef);<z>
l : this.layers)<z>
oldRef, newRef);<z>
.setExtentOutOfDate();<z>
public void startFailSafeShutdown(String msg)<z>
haltThread = _failSafeHaltThread;<z>
null)<z>
);<z>
;<z>
() {<z>
= new StringBuffer();<z>
(desc != null) {<z>
"<p>");<z>
sb.append(desc);<z>
);<z>
return sb.toString();<z>
(int pointerIndex, MotionEvent event) {<z>
pointerId = event.getPointerId(pointerIndex);<z>
pointerFlag = (1 << pointerId);<z>
= pointerId;<z>
(pointerId);<z>
mLastReceivedUpPointerActive = isActivePointer(pointerId);<z>
mReceivedPointersDown &= ~pointerFlag;<z>
pointerFlag;<z>
] = 0;<z>
= 0;<z>
] = 0;<z>
(mActivePointers == 0) {<z>
= false;<z>
if (mPrimaryActivePointerId == pointerId) {<z>
mPrimaryActivePointerId = INVALID_POINTER_ID;<z>
(String field, String part1, String part2,<z>
) throws ParseException {<z>
field)) {<z>
.parseInt(part1);<z>
parseInt(part2);<z>
pad(num1)),<z>
, inclusive);<z>
catch (NumberFormatException e) {<z>
new ParseException(e.getMessage());<z>
;<z>
{<z>
null)<z>
"Map cannot be null");<z>
result = new MapEditorPart[1];<z>
.syncInDisplayThread(new Runnable(){<z>
run() {<z>
PlatformUI.getWorkbench().getActiveWorkbenchWindow();<z>
if (win == null)<z>
;<z>
null)<z>
;<z>
refs ) {<z>
);<z>
) {<z>
(MapEditorPart) e;<z>
())) {<z>
;<z>
);<z>
result[0];<z>
Exception {<z>
.SYNAPSE_XML, SAMPLE_CONFIG_ROOT_PATH + "synapse_sample_100.xml");<z>
("addurl", SYNAPSE_BASE_URL + "soap/StockQuoteProxy");<z>
super.setUp();<z>
protected static String getNodePath(<z>
{<z>
sb = new StringBundler(4);<z>
(PortletKeys.WIKI));<z>
;<z>
.getNodeId());<z>
(".xml");<z>
toString();<z>
static void glTexCoord4h(<z>
,<z>
short t,<z>
,<z>
short q) {<z>
).glTexCoord4h(<z>
q);<z>
public StringConversion getSpecificConversion(String name) {<z>
name);<z>
m_context != null) {<z>
);<z>
return conv;<z>
,<z>
Shard, Text> output, Reporter reporter)<z>
throws IOException {<z>
.info("Construct a shard writer for " + key);<z>
iconf.getConfiguration());<z>
=<z>
currentTimeMillis();<z>
, temp, iconf);<z>
values.hasNext()) {<z>
.next();<z>
process(form);<z>
();<z>
reporter;<z>
) {<z>
= false;<z>
) throws IOException {<z>
() {<z>
) {<z>
closed) {<z>
fReporter.setStatus("closing");<z>
Thread.sleep(1000);<z>
} catch (InterruptedException e) {<z>
{<z>
start();<z>
(writer != null) {<z>
);<z>
{<z>
= true;<z>
);<z>
key + ", writer = " + writer);<z>
(key, DONE);<z>
role){<z>
.clear();<z>
username));<z>
"role", role));<z>
CMD_ASSIGN_ROLE);<z>
long swap) {<z>
makeVersion(3, 0, 0))<z>
);<z>
(Pattern pattern) {<z>
;<z>
(SWT.ERROR_INVALID_ARGUMENT);<z>
;<z>
);<z>
) return;<z>
.backgroundPattern = pattern;<z>
;<z>
private boolean isManipulatedField(String name) {<z>
(name))<z>
))<z>
startsWith(MethodCreator.METHOD_FLAG_PREFIX)));<z>
public SimpleFieldSet getFieldSet() {<z>
;<z>
"Identity", identity);<z>
.putSingle("NodeIdentifier", nodeIdentifier);<z>
(identifier != null)<z>
.putSingle("Identifier", identifier);<z>
fs;<z>
payload) {<z>
StringBuilder sb = new StringBuilder();<z>
(int i : payload) {<z>
(char) i);<z>
sb.toString();<z>
{<z>
)<z>
case Donor: return 0l;<z>
;<z>
-1l;<z>
, String username, String password) {<z>
);<z>
, address.getPort(), "/");<z>
MalformedURLException e) {<z>
ElasticSearchException("", e);<z>
) {<z>
);<z>
password;<z>
encode(userPassword.getBytes());<z>
else {<z>
;<z>
[] getContent() {<z>
!= null)) {<z>
loadContent();<z>
content;<z>
() {<z>
if (eIsProxy())<z>
;<z>
;<z>
;<z>
(author);<z>
", version: ");<z>
(version);<z>
", since: ");<z>
.append(since);<z>
;<z>
result.toString();<z>
throws OpenSigException {<z>
;<z>
this.servico = servico;<z>
;<z>
this.status = status;<z>
() {<z>
boolean[featureDefinition.getNumberOfFeatures()];<z>
<n; i++) {<z>
) > 0);<z>
, IOException{<z>
= "";<z>
;<z>
;i++){<z>
);<z>
read1 = byteStream.read();<z>
= byteStream.read();<z>
read2;<z>
-1;<z>
new HashMap<Integer, String>();<z>
);<z>
{<z>
;<z>
readByte){<z>
1:<z>
.read();<z>
byteStream.read();<z>
read2;<z>
];<z>
;j++){<z>
byte) byteStream.read();<z>
;<z>
val);<z>
case 3:<z>
case 4:<z>
]);<z>
case 5:<z>
6:<z>
byte[8]);<z>
++;<z>
case 7:<z>
= byteStream.read();<z>
byteStream.read();<z>
= (read1 << 8)+read2;<z>
classIndices.put(i, classIndex);<z>
8:<z>
read(new byte[2]);<z>
case 9:<z>
10:<z>
11:<z>
case 12:<z>
new byte[4]);<z>
);<z>
read1 = byteStream.read();<z>
;<z>
classIndex = (read1 << 8)+read2;<z>
));<z>
(name);<z>
= name.replace("/", ".");<z>
("\\.");<z>
.println(name);<z>
){<z>
"";<z>
split[0];<z>
{<z>
i];<z>
;<z>
);<z>
;<z>
annotated,<z>
)<z>
annList) {<z>
annotated.addAnnotation(ann);<z>
model )<z>
model ));<z>
( Throwable e ){<z>
printStackTrace();<z>
return( null );<z>
> getModelResourceOwnerDefaultActions(<z>
) {<z>
;<z>
{<z>
e.getPropertyName();<z>
if (StringConstants.TEXT_COMPONENT_LINE_WRAP_PROPERTY.equals(name)<z>
equals(name)) {<z>
;<z>
String toString() {<z>
"ResourceRoleId=> resourceId=" + resourceId +<z>
domainId +<z>
" roleId=" + roleId +<z>
;<z>
str;<z>
(FileAttrs attrs) {<z>
false;<z>
return false;<z>
UserInfo ui = getUserInfo();<z>
(ui.error != null) return false;<z>
uid) {<z>
0;<z>
== attrs.gid) {<z>
.permissions & IFileSystem.S_IWGRP) != 0;<z>
) != 0;<z>
(<z>
,<z>
,<z>
containerid,<z>
)<z>
null;<z>
(db_name);<z>
RawStoreFactory)<z>
.MODULE);<z>
.getCurrentContextManager());<z>
segmentid, containerid);<z>
container =<z>
,<z>
MODE_READONLY);<z>
pagenumber);<z>
page != null)<z>
));<z>
();<z>
.println("page " + pagenumber + " not found");<z>
);<z>
;<z>
xact = null;<z>
)<z>
;<z>
!= null)<z>
;<z>
();<z>
catch (StandardException se)<z>
, ViewId vid) {<z>
view: views) {<z>
ViewId tmp=view.getVid();<z>
vid))<z>
return true;<z>
false;<z>
Query setShort(int position, short val)<z>
setParameter(position, val);<z>
;<z>
protected AbstractEvaluationEnvironment(<z>
> parent) {<z>
= parent;<z>
public HolidayCampRegistrationRequest clone() {<z>
, holidayCampRegistrationRequestData.clone());<z>
;<z>
String, Object>(4);<z>
put("state", "uncomplete");<z>
"required", true);<z>
, null);<z>
());<z>
.put("enfant", stepState);<z>
);<z>
, "unavailable");<z>
.put("required", true);<z>
stepState.put("errorMsg", null);<z>
));<z>
).put("reglements", stepState);<z>
(4);<z>
("state", "unavailable");<z>
put("required", false);<z>
put("errorMsg", null);<z>
ArrayList<String>());<z>
"document", stepState);<z>
4);<z>
);<z>
.put("required", true);<z>
, null);<z>
ArrayList<String>());<z>
, stepState);<z>
return clone;<z>
(LetExp letExp, DiagnosticChain diagnostics,<z>
Object, Object> context) {<z>
letExp, diagnostics, context)) return false;<z>
);<z>
diagnostics, context);<z>
diagnostics, context);<z>
;<z>
EObject)letExp, diagnostics, context);<z>
;<z>
, context);<z>
EObject)letExp, diagnostics, context);<z>
, context);<z>
validateLetExp_validateTypeIsInType(letExp, diagnostics, context);<z>
result;<z>
Provider<T>> key, Errors errors)<z>
{<z>
, errors);<z>
, JitLimitation.NO_JIT);<z>
key, delegate);<z>
private boolean osMatch(String os) {<z>
)<z>
return true;<z>
== null)<z>
;<z>
(currentOS);<z>
, String value) {<z>
);<z>
setConfigKey(key);<z>
(value == null ? "" : value);<z>
configDAO.persist(config);<z>
public void onReceive(Context context, Intent intent,<z>
device) {<z>
= mDeviceManager.findDevice(device);<z>
cachedDevice == null) {<z>
.w(TAG, "received ACTION_DISAPPEARED for an unknown device: " + device);<z>
)) {<z>
synchronized (mCallbacks) {<z>
{<z>
.onDeviceDeleted(cachedDevice);<z>
{<z>
startLine;<z>
;<z>
fWindowSize, getWidth());<z>
PropertyGroup plugin) {<z>
);<z>
;<z>
"Adds a player to your property.";<z>
"/property AddToProperty <player> [property]";<z>
;<z>
= 2;<z>
.add("property addtoproperty");<z>
;<z>
NotNull XPathType left, @NotNull XPathType type) {<z>
ChoiceType) {<z>
left).getTypes();<z>
{<z>
if (isAssignable(t, type)) {<z>
;<z>
;<z>
|| type.canBePromotedTo(left);<z>
, int start) {<z>
= new int[1];<z>
byteToInt(start, 1, data);<z>
;<z>
getStrutsAction(<z>
portletId) {<z>
String rootPortletId = PortletConstants.getRootPortletId(portletId);<z>
)) {<z>
;<z>
return "/document_library/view_file_entry";<z>
newExpressionsAreEquivalent(<z>
NotNull PsiNewExpression newExpression1,<z>
PsiNewExpression newExpression2) {<z>
classReference1 =<z>
.getClassReference();<z>
=<z>
getClassReference();<z>
classReference1 == null || classReference2 == null) {<z>
return false;<z>
= classReference1.getText();<z>
getText())) {<z>
return false;<z>
PsiExpression[] arrayDimensions1 =<z>
.getArrayDimensions();<z>
[] arrayDimensions2 =<z>
.getArrayDimensions();<z>
)) {<z>
return false;<z>
final PsiArrayInitializerExpression arrayInitializer1 =<z>
.getArrayInitializer();<z>
PsiArrayInitializerExpression arrayInitializer2 =<z>
);<z>
(arrayInitializer1, arrayInitializer2)) {<z>
;<z>
newExpression1.getQualifier();<z>
;<z>
expressionsAreEquivalent(qualifier1, qualifier2)) {<z>
false;<z>
PsiExpressionList argumentList1 = newExpression1.getArgumentList();<z>
PsiExpression[] args1;<z>
== null) {<z>
args1 = null;<z>
);<z>
PsiExpressionList argumentList2 = newExpression2.getArgumentList();<z>
final PsiExpression[] args2;<z>
(argumentList2 == null) {<z>
;<z>
;<z>
return expressionListsAreEquivalent(args1, args2);<z>
long getNextDelGen() {<z>
== -1) {<z>
return 1;<z>
{<z>
delGen + 1;<z>
, String viewId) {<z>
), ctx<z>
, ctx.getPortletRequest().getPortletMode()<z>
);<z>
out) {<z>
values) {<z>
appendXML(value, name, out);<z>
() {<z>
-1)<z>
;<z>
;<z>
) throws HeadlessException<z>
(title);<z>
addPropertyChangeListener("titlePane", new PropertyChangeListener()<z>
void propertyChange(PropertyChangeEvent evt)<z>
ThreadUtil.invokeLater(new Runnable()<z>
public void run()<z>
;<z>
);<z>
;<z>
(ResourceUtil.getIcyIconImages());<z>
);<z>
systemMenuCallback = null;<z>
true;<z>
.getTitlePane(this));<z>
true;<z>
= true;<z>
) throws SQLException {<z>
println(" ********************* not implemented @ "<z>
.getFileName() + " line "<z>
;<z>
;<z>
PropertyChangeEvent event )<z>
if ( getBuilder( ) != null )<z>
( );<z>
put(Object key, Object value) {<z>
maskNull(key);<z>
;<z>
indexFor(hash, table.length);<z>
next) {<z>
k, e.key)) {<z>
.value;<z>
e.value = value;<z>
e.recordAccess(this);<z>
return oldValue;<z>
modCount++;<z>
;<z>
null;<z>
main(String[] args) throws Exception {<z>
connectionFactory = null;<z>
;<z>
;<z>
null;<z>
MessageConsumer consumer = null;<z>
;<z>
null;<z>
= null;<z>
final Properties env = new Properties();<z>
(Context.INITIAL_CONTEXT_FACTORY, INITIAL_CONTEXT_FACTORY);<z>
));<z>
"username", DEFAULT_USERNAME));<z>
DEFAULT_PASSWORD));<z>
;<z>
System.getProperty("connection.factory", DEFAULT_CONNECTION_FACTORY);<z>
"\"");<z>
(ConnectionFactory) context.lookup(connectionFactoryString);<z>
"\" in JNDI");<z>
getProperty("destination", DEFAULT_DESTINATION);<z>
"\"");<z>
lookup(destinationString);<z>
"Found destination \"" + destinationString + "\" in JNDI");<z>
);<z>
false, Session.AUTO_ACKNOWLEDGE);<z>
destination);<z>
= session.createConsumer(destination);<z>
start();<z>
System.getProperty("message.count", DEFAULT_MESSAGE_COUNT));<z>
.getProperty("message.content", DEFAULT_MESSAGE);<z>
+ content);<z>
0; i < count; i++) {<z>
= session.createTextMessage(content);<z>
;<z>
i < count; i++) {<z>
;<z>
+ message.getText());<z>
e) {<z>
.getMessage());<z>
e;<z>
{<z>
if (context != null) {<z>
;<z>
) {<z>
.close();<z>
) {<z>
int c;<z>
, runStateOffset,<z>
c = runState, c - 1);<z>
builder, long durationMillis)<z>
= durationMillis / 1000 / 60;<z>
60 * 1000)) / 1000;<z>
':');<z>
10)<z>
.append('0');<z>
;<z>
final void rule__TypeParameterCS__OwnedExtendsAssignment_1_0_2_1() throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
==0 ) {<z>
.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_0_2_1_0());<z>
pushFollow(FollowSets002.FOLLOW_ruleTypedRefCS_in_rule__TypeParameterCS__OwnedExtendsAssignment_1_0_2_149065);<z>
);<z>
_fsp--;<z>
failed) return ;<z>
state.backtracking==0 ) {<z>
());<z>
(RecognitionException re) {<z>
(re);<z>
;<z>
stackSize);<z>
public void addRightComponent( JComponent component )<z>
0 && !components.isEmpty() )<z>
( rowSpacing );<z>
);<z>
);<z>
xy( 4, row, "right,bottom" ) );<z>
public String toString() {<z>
))<z>
();<z>
);<z>
append(" (name: ");<z>
;<z>
;<z>
);<z>
result.append(')');<z>
);<z>
, Object elementAt, int i) {<z>
(elementAt);<z>
);<z>
, elementAt, i, true, true);<z>
().decode(component);<z>
valueToString.put(elementAt, string);<z>
return string;<z>
inicializarCodigos() {<z>
new RandomAccessFile("codigos.alt", "rw");<z>
){<z>
);<z>
(1);<z>
ramCods.close();<z>
) {<z>
getMessage());<z>
)<z>
text);<z>
(line);<z>
setPos(pos);<z>
, ByLineSource source )<z>
StringBuffer text = new StringBuffer();<z>
();<z>
);<z>
( index >= 0 )<z>
line.substring( index + 6 );<z>
"}" ) >= 0 ) && line != null )<z>
;<z>
source.getNextLine();<z>
if ( line != null )<z>
, line.indexOf( "}" ) ) );<z>
() ) != null )<z>
"{tip" )<z>
|| line.startsWith( "{quote" ) )<z>
( text, line );<z>
, text.toString() );<z>
) {<z>
icecastPort<z>
".mp3";<z>
.isDebugEnabled())<z>
log.debug("Broadcast to {}", shoutPath);<z>
shoutPath);<z>
Client c = manager.getESLClient();<z>
)) {<z>
shoutPath);<z>
() + rcc.getCommandArgs());<z>
), rcc.getCommandArgs());<z>
response, conferenceEventListener);<z>
{<z>
;<z>
();<z>
boolean descending) {<z>
== null) return null;<z>
(values);<z>
);<z>
);<z>
descending));<z>
return result;<z>
createSettingsPane()<z>
SpringLayout() );<z>
SpringLayoutUtils.addSeparator( panel, "Serial settings" );<z>
) );<z>
add( this.portSelect );<z>
);<z>
.add( this.portRateSelect );<z>
.add( createRightAlignedLabel( "Data bits" ) );<z>
add( this.dataBitsSelect );<z>
( "Parity" ) );<z>
panel.add( this.paritySelect );<z>
"Stop bits" ) );<z>
.add( this.stopBitsSelect );<z>
add( createRightAlignedLabel( "Flow control" ) );<z>
flowControlSelect );<z>
SpringLayoutUtils.addSeparator( panel, "Terminal settings" );<z>
;<z>
this.rawMode );<z>
createRightAlignedLabel( "Send newlines?" ) );<z>
add( this.sendEnter );<z>
panel, " " );<z>
);<z>
panel.add( this.connectButton );<z>
add( createRightAlignedLabel( "" ) );<z>
.disconnectButton );<z>
4 );<z>
;<z>
) {<z>
();<z>
for (LayerInfo li : layer) {<z>
getDefaultStyle();<z>
)) {<z>
;<z>
.save(li);<z>
) {<z>
(Level.WARNING, "Could not find default style for resource "<z>
.getResource() + " resetting the default to point", e);<z>
.DEFAULT_POINT));<z>
);<z>
)) {<z>
.save(li);<z>
catalog.getLayerGroups();<z>
groups) {<z>
group.getStyles();<z>
false;<z>
{<z>
styles.get(i);<z>
equals(style)) {<z>
).getDefaultStyle());<z>
dirty = true;<z>
if(dirty)<z>
.save(group);<z>
(style);<z>
(byte[] bytes) {<z>
;<z>
;<z>
0;<z>
++) {<z>
>> 4 ];<z>
i])];<z>
result;<z>
{<z>
region;<z>
().isMetaRegion() &&<z>
)) {<z>
{<z>
) +<z>
.getRegionNameAsString());<z>
} else {<z>
fqe.getRequeueCount() <= 0) {<z>
+ region.getRegionNameAsString() + " has too many " +<z>
"ms");<z>
requestSplit(region)) {<z>
;<z>
catch (IOException e) {<z>
+<z>
getRegionName())) : ""),<z>
RemoteExceptionHandler.checkIOException(e));<z>
blockingWaitTime / 100));<z>
;<z>
region, false);<z>
) throws RecognitionException {<z>
;<z>
pushFollow(FOLLOW_rule__JvmParameterizedTypeReference__Group__0__Impl_in_rule__JvmParameterizedTypeReference__Group__043424);<z>
);<z>
state._fsp--;<z>
failed) return ;<z>
);<z>
rule__JvmParameterizedTypeReference__Group__1();<z>
--;<z>
(state.failed) return ;<z>
RecognitionException re) {<z>
;<z>
re);<z>
;<z>
.Slot object){<z>
if("default".equals(presentation)){<z>
, presentation);<z>
return null;<z>
im, StructElement s) {<z>
d = dilate(im,s);<z>
im,s);<z>
();<z>
.getProcessor();<z>
);<z>
++) {<z>
++) {<z>
ep.getPixel(x,y) );<z>
d;<z>
static String getTemplate(Direction direction) {<z>
) {<z>
case OUTGOING:<z>
;<z>
:<z>
DIRECTION_INCOMING;<z>
BOTH:<z>
DIRECTION_BOTH;<z>
new IllegalArgumentException("Unsupported direction!");<z>
void shouldRefuseIllegalCellCharacters() {<z>
+ NEW_LINE +<z>
+<z>
{<z>
, DEAD_CELL},<z>
},<z>
DEAD_CELL}<z>
GridReader();<z>
] loadedCells = gridReader.loadFrom(gridContents);<z>
expectedCells));<z>
void populateModel() {<z>
();<z>
();<z>
DefaultTableModel) getModel();<z>
().getColumnCount(true)]);<z>
{<z>
++) {<z>
InputList.NONE_OPTION, 0, i);<z>
String title, String message, IPath initialPath) {<z>
{ IFolder.class };<z>
, false);<z>
TypedViewerFilter(acceptedClasses, null);<z>
ILabelProvider lp= new WorkbenchLabelProvider();<z>
cp= new WorkbenchContentProvider();<z>
= fCurrJProject.getProject();<z>
(), lp, cp);<z>
.setValidator(validator);<z>
);<z>
(message);<z>
;<z>
);<z>
(new ResourceComparator(ResourceComparator.NAME));<z>
;<z>
(res != null) {<z>
);<z>
.open() == Window.OK) {<z>
getFirstResult();<z>
return null;<z>
public void setFudgeTaxonomyId(final int fudgeTaxonomyId) {<z>
Short.MAX_VALUE) {<z>
("fudgeTaxonomyId must be 16-bit signed integer");<z>
_fudgeTaxonomyId = fudgeTaxonomyId;<z>
() {<z>
(port == 5222) {<z>
null;<z>
else {<z>
valueOf(port);<z>
Long> messageIds, MessageStatus messageStatus) {<z>
(messageIds, messageStatus);<z>
;<z>
e) {<z>
);<z>
;<z>
wrapDoc) throws Exception {<z>
();<z>
(upAcc);<z>
(upAcc);<z>
throws RecognitionException {<z>
stackSize = keepStackSize();<z>
if ( state.backtracking==0 ) {<z>
.getFunType100Access().getGroup_2_1_1());<z>
;<z>
input.LA(1);<z>
) {<z>
1;<z>
) {<z>
case 1 :<z>
pushFollow(FOLLOW_rule__FunType100__Group_2_1_1__0_in_rule__FunType100__Group_2_1__1__Impl49135);<z>
();<z>
--;<z>
state.failed) return ;<z>
loop159;<z>
);<z>
) {<z>
).getGroup_2_1_1());<z>
catch (RecognitionException re) {<z>
reportError(re);<z>
re);<z>
restoreStackSize(stackSize);<z>
)<z>
(windowId).getInfo();<z>
catch (PortletInvokerException e)<z>
"Could not access portlet invoker for locating window " + windowId, e);<z>
return null;<z>
public ParClassDecl() {<z>
;<z>
(), 1);<z>
Opt(), 2);<z>
List(), 3);<z>
, 4);<z>
other)<z>
== false)<z>
false;<z>
other;<z>
other) && exists == r.exists &&<z>
r.durable &&<z>
consumerCount &&<z>
.messageCount &&<z>
== null<z>
== null<z>
);<z>
(Collection<OutputFile> skeletons, String skeletonBasePath,<z>
Collection<UniversalFile> implementations, String implementationBasePath) {<z>
skeletons;<z>
= skeletonBasePath;<z>
implementations;<z>
implementationBasePath = implementationBasePath;<z>
(TreePath path)<z>
clearSelectionPathStates();<z>
path);<z>
private void setDialogTitle(String dialogType) {<z>
(dialogType.equals(DIALOG_TYPE_EXPORT)) {<z>
;<z>
.equals(DIALOG_TYPE_IMPORT)) {<z>
.setText("Import Log");<z>
void initializeConnection() {<z>
) return;<z>
, true ) {<z>
Map.Entry eldest) {<z>
) > 16;<z>
recent_outgoing_requests_mon = new AEMonitor( "PEPeerTransportProtocol:ROR" );<z>
();<z>
other_peer_bt_have_version, other_peer_az_have_version );<z>
getCurrentTime();<z>
PEPeerTransport.CONNECTION_WAITING_FOR_HANDSHAKE;<z>
HANDSHAKING );<z>
();<z>
{<z>
.get(servletContext, configuration);<z>
id);<z>
), configuration);<z>
content = "<html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" " +<z>
"<head><title><i18n:message key=\"scoreExplanation\"/>: " + searchTerm + "</title></head>" +<z>
(hit).toHtml()) +<z>
"<h3><i18n:message key=\"scoreForQuery\"/>" + query + "</h3>" +<z>
.getExplanation(query, hit) +<z>
;<z>
;<z>
content), i18nTransformer);<z>
getInputStream(), searchTerm);<z>
{<z>
);<z>
;<z>
( Bundle bundle, File basefile )<z>
;<z>
this.basefile = basefile;<z>
.Message other) {<z>
GenericResult) {<z>
SenseiGenericResultBPO.GenericResult)other);<z>
} else {<z>
other);<z>
return this;<z>
Object instance) throws ValidationException {<z>
) {<z>
throw new ValidationException("'" + attribute<z>
"' must not be null");<z>
instance;<z>
) throws Exception<z>
(transformInfoInterface);<z>
();<z>
EdGraGra parent) {<z>
g = null;<z>
get(parent);<z>
{<z>
> v = ht.get("TG");<z>
null && !v.isEmpty()) {<z>
EdGraph) v.lastElement();<z>
v.remove(g);<z>
)<z>
"TG");<z>
if (ht.isEmpty())<z>
.storeGraGra.remove(parent);<z>
updateTrash();<z>
g;<z>
awt.event.ActionEvent evt)<z>
();<z>
();<z>
boolean equals(Object object) {<z>
{<z>
;<z>
Stats) object;<z>
rhs.checksum)<z>
;<z>
Image image)<z>
Error<z>
image instanceof Gray32Image)) {<z>
jjil.core.Error(<z>
jjil.core.Error.PACKAGE.ALGORITHM,<z>
.IMAGE_NOT_GRAY32IMAGE,<z>
,<z>
);<z>
== null ||<z>
.getWidth() ||<z>
() != image.getHeight()) {<z>
new Gray8Image(<z>
image.getWidth(),<z>
;<z>
Gray32Image gray = (Gray32Image) image;<z>
.getData();<z>
imageOutput.getData();<z>
i++) {<z>
this.nThreshold) ?<z>
;<z>
super.setOutput(this.imageOutput);<z>
targetParent, boolean namespaceRepairing) {<z>
ElementImpl clone;<z>
if (options.isPreserveModel()) {<z>
, targetParent, namespaceRepairing);<z>
else {<z>
, factory, namespaceRepairing);<z>
{<z>
.item(i);<z>
, null, true, false);<z>
);<z>
)));<z>
;<z>
boolean inheritBandwidth)<z>
instanceof DuplexLink))<z>
println("SIMULATOR ERROR: You can only attach a DuplexLink" +<z>
" to a DuplexInterface!");<z>
exit(1);<z>
link;<z>
link1 = duplexlink.getSimplexLink1();<z>
= duplexlink.getSimplexLink2();<z>
hasFreeOutgoing())<z>
attach(link1, inheritBandwidth);<z>
;<z>
(link1, inheritBandwidth);<z>
, inheritBandwidth);<z>
(UUID ownerId) {<z>
.ARTIFACT}, "{1}");<z>
"MBS";<z>
add("Equipment");<z>
)));<z>
2, 2)));<z>
));<z>
int column, String line) {<z>
this.fileName = fileName;<z>
;<z>
column;<z>
;<z>
final void rule__JvmTypeReference__Group_0__0() throws RecognitionException {<z>
keepStackSize();<z>
FOLLOW_rule__JvmTypeReference__Group_0__0__Impl_in_rule__JvmTypeReference__Group_0__025716);<z>
);<z>
_fsp--;<z>
state.failed) return ;<z>
(FOLLOW_rule__JvmTypeReference__Group_0__1_in_rule__JvmTypeReference__Group_0__025719);<z>
);<z>
_fsp--;<z>
state.failed) return ;<z>
RecognitionException re) {<z>
re);<z>
;<z>
restoreStackSize(stackSize);<z>
element, String managedBuildRevision) {<z>
super(false);<z>
false;<z>
if(parentFldInfo != null){<z>
parentFldInfo.getParent();<z>
parentFolderInfo = parentFldInfo;<z>
isExtensionToolChain = true;<z>
;<z>
= element.getChildren(OptionEnablementExpression.NAME);<z>
> 0)<z>
= new BooleanExpressionApplicabilityCalculator(enablements);<z>
element);<z>
(this);<z>
targetPlatforms =<z>
element.getChildren(ITargetPlatform.TARGET_PLATFORM_ELEMENT_NAME);<z>
targetPlatforms.length > 1) {<z>
> 0) {<z>
this, targetPlatforms[0], managedBuildRevision);<z>
builders =<z>
.getChildren(IBuilder.BUILDER_ELEMENT_NAME);<z>
{<z>
builders.length > 0) {<z>
;<z>
= element.getChildren();<z>
length; ++l) {<z>
toolChainElement = toolChainElements[l];<z>
{<z>
ITool.TOOL_ELEMENT_NAME)) {<z>
, managedBuildRevision);<z>
addTool(toolChild);<z>
.SUPPORTED_PROPERTIES)){<z>
;<z>
void initialize()<z>
)<z>
);<z>
);<z>
.class.toString();<z>
.toString();<z>
.class.toString();<z>
.toString();<z>
);<z>
.toString();<z>
.class.toString();<z>
);<z>
public Marketplace_Reader(Marketplace_Main market,char mode)<z>
.market = market;<z>
if(mode=='R')<z>
initFileOpenChooser());<z>
'W')<z>
;<z>
should_override_base_urls() {<z>
);<z>
pageUrls = new PageUrls(page, configuration);<z>
;<z>
);<z>
.open();<z>
"http://prod.server/myapp/somepage");<z>
final void rule__Justification__Group_6__1() throws RecognitionException {<z>
= keepStackSize();<z>
pushFollow(FollowSets000.FOLLOW_rule__Justification__Group_6__1__Impl_in_rule__Justification__Group_6__116690);<z>
);<z>
._fsp--;<z>
FOLLOW_rule__Justification__Group_6__2_in_rule__Justification__Group_6__116693);<z>
);<z>
_fsp--;<z>
RecognitionException re) {<z>
(re);<z>
);<z>
);<z>
(String id, boolean showLooseBBox) {<z>
);<z>
add(toggleAdvanced());<z>
advancedContainer = new WebMarkupContainer("advancedContainer");<z>
.setOutputMarkupId(true);<z>
advancedPanel = new WebMarkupContainer("advanced");<z>
);<z>
("looseBBoxContainer");<z>
.setVisible(showLooseBBox);<z>
;<z>
fastBBoxCheck);<z>
add(looseBBoxContainer);<z>
WebMarkupContainer excludeGeomlessContainer = new WebMarkupContainer("excludeGeometrylessContainer");<z>
);<z>
new PropertyModel(this, "excludeGeometryless"));<z>
(excludeGeomlessCheck);<z>
add(excludeGeomlessContainer);<z>
new PropertyModel(this, "pkMetadata")));<z>
add(advancedPanel);<z>
add(advancedContainer);<z>
userAction) {<z>
= userAction;<z>
);<z>
;<z>
a, ObjectVisitor v, FieldIdentifier f) {<z>
(f == null) {<z>
); i++) {<z>
getType();<z>
(a, v, f);<z>
a);<z>
i++) {<z>
getField(i);<z>
();<z>
BasicNamedFieldIdentifier(field));<z>
v.exitType();<z>
{<z>
f, a);<z>
static SQLResult getRowSetFromQuery(<z>
conn,<z>
,<z>
,<z>
String fromTable,<z>
,String> whereParams<z>
throws SQLException<z>
();<z>
CallableStatement cstmt = null;<z>
= null;<z>
null;<z>
String query = null;<z>
String columnQuery = "";<z>
i++)<z>
(i > 0)<z>
;<z>
conn, selectColumns.get(i));<z>
.length() == 0)<z>
;<z>
= "";<z>
i = 0;<z>
);<z>
)<z>
paramsIter.next();<z>
.getKey();<z>
> 0 )<z>
;<z>
);<z>
++;<z>
whereQuery.length() > 0)<z>
= "WHERE " + whereQuery;<z>
.format(<z>
fromSchema, fromTable),<z>
(query);<z>
= 1;<z>
whereParams.entrySet().iterator();<z>
())<z>
String>)paramsIter.next();<z>
.getValue();<z>
cstmt.setString( i, value );<z>
;<z>
.lap("prepare query");<z>
executeQuery();<z>
(query);<z>
);<z>
t.lap("cache row set");<z>
(SQLException e)<z>
;<z>
;<z>
;<z>
SQLUtils.cleanup(cstmt);<z>
t.report();<z>
return result;<z>
String value) {<z>
|| value == null) {<z>
"The extension attribute name or value cannot be null.");<z>
.put(name, value);<z>
return this;<z>
void configureComponents(MavenSession session) {<z>
getLocalRepository().getBasedir());<z>
localRepository);<z>
() {<z>
if (coolBarManager instanceof CoolBarManager) {<z>
return (CoolBarManager)coolBarManager;<z>
return null;<z>
(<z>
long browserTrackerId)<z>
SystemException {<z>
return getService().fetchBrowserTracker(browserTrackerId);<z>
private boolean tryConvergeJournalSpool() throws IOException {<z>
,<z>
"bad state: %s", bnState);<z>
) {<z>
= editLog.getCurSegmentTxId();<z>
.info("Loading edits into backupnode to try to catch up from txid "<z>
);<z>
=<z>
;<z>
);<z>
();<z>
editStreamsAll<z>
, target - 1);<z>
.newArrayList();<z>
EditLogInputStream s : editStreamsAll) {<z>
.getCurSegmentTxId()) {<z>
s);<z>
;<z>
this) {<z>
getCurSegmentTxId() - 1) {<z>
debug("Logs rolled while catching up to current segment");<z>
;<z>
= null;<z>
Collection<EditLogInputStream> editStreams<z>
.selectInputStreams(<z>
),<z>
);<z>
EditLogInputStream s : editStreams) {<z>
)) {<z>
= s;<z>
) {<z>
.getCurSegmentTxId()<z>
+ ". This indicates that there is an error in synchronization in BackupImage");<z>
return false;<z>
getEditLog().getLastWrittenTxId() - lastAppliedTxId;<z>
LOG.info("Going to finish converging with remaining " + remainingTxns<z>
" txns from in-progress stream " + stream);<z>
loader =<z>
, lastAppliedTxId);<z>
;<z>
getLastAppliedTxId();<z>
.getLastWrittenTxId();<z>
finally {<z>
FSEditLog.closeAllStreams(editStreams);<z>
.info("Successfully synced BackupNode with NameNode at txnid " +<z>
lastAppliedTxId);<z>
BNState.IN_SYNC);<z>
;<z>
public void setVisibility(int visibility) {<z>
(proxy != null) {<z>
if (visibility == GONE) {<z>
();<z>
else if (visibility == VISIBLE) {<z>
(proxy);<z>
.setVisibility(visibility);<z>
)<z>
new Dimension( 470, 16 ) );<z>
options =<z>
"useTabbedChatFrame", "Use tabbed, rather than multi-window, chat" },<z>
,<z>
"Add a graphical CLI to tabbed chat" },<z>
},<z>
, "Use a popup window for /friends and /who" },<z>
{ "chatLinksUseRelay", "Use the relay browser when clicking on chat links" },<z>
,<z>
},<z>
"mergeHobopolisChat", "Merge clan dungeon channel displays into /clan" },<z>
,<z>
,<z>
,<z>
);<z>
ImageWare create(ImagePlus imp, int type) {<z>
if (imp == null)<z>
throw_null();<z>
) {<z>
.BYTE:<z>
.getStack(), ImageWare.CREATE);<z>
SHORT:<z>
;<z>
:<z>
);<z>
ImageWare.DOUBLE:<z>
.CREATE);<z>
ArrayStoreException(<z>
"Unknown type " + type + ".\n" +<z>
password) throws InvalidLoginDataException, AccountBlockedException, TooManyFailedPasswordAttemptsException {<z>
InvalidLoginDataException();<z>
(email);<z>
);<z>
();<z>
;<z>
;<z>
(user);<z>
user;<z>
now) throws Exception {<z>
false;<z>
lift_element, lift_qualifier, MDValue.ANY);<z>
{<z>
get(0).getValue();<z>
;<z>
);<z>
before(now)) {<z>
verbose) {<z>
;<z>
) {<z>
! quiet) {<z>
.getHandle() + ", lift date=" + liftStr);<z>
(! checkOnly)<z>
context, item);<z>
if (! liftOnly)<z>
(verbose)<z>
+ ", lift date=" + liftStr);<z>
, item);<z>
)<z>
, e);<z>
);<z>
;<z>
, item.getID());<z>
;<z>
{<z>
)) {<z>
{<z>
return cm;<z>
null;<z>
String sourcename, float value )<z>
!= null )<z>
);<z>
, 0 );<z>
{<z>
K, Option<V>>() {<z>
<V> f(final K k) {<z>
(k);<z>
public static SpecialClassType forSpecial (ClassDefinition theClass,<z>
{<z>
()) return null;<z>
theClass.getType();<z>
+ stack.getContextCodeString();<z>
existing = getType(typeKey,stack);<z>
) {<z>
(existing instanceof SpecialClassType)) return null;<z>
(SpecialClassType) existing;<z>
= getTypeCode(type,theClass,stack);<z>
TYPE_NONE) {<z>
theClass);<z>
stack);<z>
stack.push(result);<z>
pop(true);<z>
return result;<z>
{<z>
;<z>
) String id) {<z>
.fromString(id);<z>
> recordIds = repository.getVariants(recordId);<z>
<Record>();<z>
(RecordId variant : recordIds) {<z>
add(repository.newRecord(variant));<z>
);<z>
RecordNotFoundException e) {<z>
());<z>
(Exception e) {<z>
INTERNAL_SERVER_ERROR.getStatusCode());<z>
) {<z>
= new ToolEventListener[1];<z>
) {<z>
(Node[] nodes) {<z>
this.nodes = nodes;<z>
[nodes.length];<z>
; i++) {<z>
i];<z>
.getSize();<z>
) {<z>
= null;<z>
(-1);<z>
drag(float displacementX, float displacementY) {<z>
if (nodes != null) {<z>
averageSize = 0f;<z>
< nodes.length; i++) {<z>
nodes[i];<z>
= sizes[i];<z>
INTENSITY;<z>
LIMIT) {<z>
LIMIT;<z>
averageSize += size;<z>
;<z>
averageSize /= nodes.length;<z>
;<z>
;<z>
{<z>
));<z>
= mary.generateXML("Hello world");<z>
(tokens);<z>
focusControl) {<z>
);<z>
= this;<z>
= control.parent) != null) {<z>
if (control.setFocus ()) return;<z>
shell.setSavedFocus (focusControl);<z>
shell.vboxHandle;<z>
;<z>
OS.gtk_widget_grab_focus (focusHandle);<z>
)) return;<z>
;<z>
name, Type type, boolean isParameter,<z>
isOutput) {<z>
(name, type), isOutput);<z>
= lvalue.getDerivedLvalues();<z>
++)<z>
;<z>
) {<z>
ContextData)context;<z>
data = (HospitalDistanceCalculationData)value;<z>
currentHospital = data.getHospital();<z>
getEmergency();<z>
()];<z>
.getLocationY()];<z>
;<z>
== null || difTotal < contextData.minDistance){<z>
.minDistance = difTotal;<z>
= currentHospital;<z>
IOException {<z>
logger.log("Collecting PMD analysis files...");<z>
),<z>
isMavenBuild(build));<z>
).act(pmdCollector);<z>
.getLogMessages());<z>
(), project);<z>
;<z>
;<z>
new HotSwapPassFactory("inferTypes", false) {<z>
(final AbstractCompiler<z>
) {<z>
) {<z>
, Node root) {<z>
topScope);<z>
());<z>
root);<z>
Node scriptRoot, Node originalRoot) {<z>
scriptRoot);<z>
(String requestHint) {<z>
getSemanticHint();<z>
.DurationConstraint_3023).getSemanticHint();<z>
;<z>
requestHint) || durObsOnMessage.equals(requestHint);<z>
) {<z>
) rotationBox.getSelectedItem();<z>
parseInt(selectedRotation);<z>
(NumberFormatException e) {<z>
e.printStackTrace();<z>
(rotationItem);<z>
/ 180);<z>
(rotatedImage));<z>
rotationBox.getSelectedItem();<z>
complete()<z>
> 0)<z>
;<z>
();<z>
.hide();<z>
this.visible = false;<z>
{<z>
);<z>
Intent(context, intentClass);<z>
(intentUri);<z>
public ReadyStatus(ReadyStatus other) {<z>
()) {<z>
= new LoadingStatus(other.update_status);<z>
(String user,<z>
String jobId,<z>
attemptId,<z>
<String> setup,<z>
> jvmArguments,<z>
File currentWorkDirectory,<z>
String stdout,<z>
IOException {<z>
null;<z>
)).getRaw();<z>
= 0;<z>
String cmdLine =<z>
jvmArguments,<z>
stderr), logSize, true);<z>
p = new Path(allocator.getLocalPathForWrite(<z>
,<z>
;<z>
= writeCommand(cmdLine, rawFs, p);<z>
=<z>
[]{taskControllerExe,<z>
,<z>
)),<z>
(),<z>
commandFile};<z>
shExec = new ShellCommandExecutor(command);<z>
)) {<z>
"launchTask: " + Arrays.toString(command));<z>
();<z>
e) {<z>
(shExec == null) {<z>
1;<z>
;<z>
;<z>
137) {<z>
LOG.warn("Exception thrown while launching task JVM : "<z>
+ StringUtils.stringifyException(e));<z>
;<z>
());<z>
return exitCode;<z>
if (LOG.isDebugEnabled()) {<z>
.debug("Output from LinuxTaskController's launchTask follows:");<z>
));<z>
;<z>
) {<z>
{<z>
);<z>
{<z>
e);<z>
);<z>
true);<z>
();<z>
) {<z>
(sender, "grieflog.rollback")) {<z>
null;<z>
sender instanceof Player) {<z>
(Player)sender);<z>
else {<z>
getGLPlayer((ConsoleCommandSender)sender);<z>
if(args.length == 1) {<z>
;<z>
;<z>
[1].equalsIgnoreCase("we")) {<z>
{<z>
new ArrayList<String>();<z>
) {<z>
);<z>
;<z>
} else {<z>
args.length; i++) {<z>
2) {<z>
arguments.add(args[i]);<z>
= new ArgumentParser(arguments);<z>
error) {<z>
"Sorry, an error occured. Please check if you formatted the arguments right.");<z>
} else {<z>
getResult());<z>
true;<z>
else {<z>
sendMessage(ChatColor.DARK_RED + "You can't have a worldedit selection so you can't use this command!");<z>
return true;<z>
} else {<z>
()) {<z>
YELLOW + "[GriefLog] You are already doing a rollback, you can't have multiple rollbacks at the time.");<z>
;<z>
else {<z>
new ArgumentParser(args);<z>
{<z>
.DARK_RED + "Sorry, an error occured. Please check if you formatted the arguments right.");<z>
{<z>
getResult());<z>
return true;<z>
else {<z>
);<z>
return true;<z>
webModuleData) throws GBeanAlreadyExistsException {<z>
boolean getAutocommit()<z>
if (_conn == null)<z>
true;<z>
);<z>
(SQLException e) {<z>
_error.error(e);<z>
;<z>
int index) {<z>
()) {<z>
) + ").");<z>
return null;<z>
) m_children.elementAt(index);<z>
{<z>
) {<z>
parseLong(atts.getValue("time_of_start"));<z>
TAG, "Time of start: " + timeOfStart);<z>
{<z>
, "parse time_of_start error", e);<z>
{<z>
;<z>
new LearningData();<z>
setLearningData(learningData);<z>
card.setCategory(new Category());<z>
setId(count);<z>
count);<z>
+= 1;<z>
"gr");<z>
) {<z>
);<z>
= atts.getValue("e");<z>
eAttr != null) {<z>
Float.parseFloat(eAttr));<z>
"ac_rp");<z>
= atts.getValue("u");<z>
String rtrpAttr = atts.getValue("rt_rp");<z>
!= null) {<z>
setRetReps(Integer.parseInt(rtrpAttr));<z>
){<z>
(acrpAttr);<z>
null){<z>
) == 1){<z>
0 && acrp == 0){<z>
;<z>
acrp);<z>
"lps");<z>
null){<z>
lpsAttr));<z>
"ac_rp_l");<z>
null){<z>
));<z>
("rt_rp_l");<z>
!= null){<z>
);<z>
("l_rp");<z>
!= null && timeOfStart != 0L) {<z>
atts.getValue("n_rp");<z>
){<z>
lrpAttr)) * MILLSECS_PER_DAY;<z>
.parseDouble(nrpAttr)) * MILLSECS_PER_DAY;<z>
lrp));<z>
nrp));<z>
new StringBuffer();<z>
, Integer status) {<z>
)<z>
(Restrictions.eq("status", status))<z>
"processRun.id", processRunId))<z>
("user.id"));<z>
();<z>
{<z>
;<z>
>();<z>
();<z>
) {<z>
);<z>
);<z>
(isDynamic) {<z>
(mass, localInertia);<z>
new DefaultMotionState(startTransform);<z>
myMotionState, shape, localInertia);<z>
= new RigidBody(cInfo);<z>
);<z>
return body;<z>
String toString() {<z>
= new StringBuilder("get_table_names_by_filter_result(");<z>
= true;<z>
;<z>
.success == null) {<z>
sb.append("null");<z>
else {<z>
append(this.success);<z>
first = false;<z>
append(", ");<z>
sb.append("o1:");<z>
this.o1 == null) {<z>
);<z>
else {<z>
this.o1);<z>
false;<z>
.append(", ");<z>
("o2:");<z>
== null) {<z>
;<z>
} else {<z>
(this.o2);<z>
false;<z>
sb.append(", ");<z>
.append("o3:");<z>
null) {<z>
"null");<z>
} else {<z>
this.o3);<z>
= false;<z>
(")");<z>
.toString();<z>
parentCtgId) throws Exception {<z>
ArrayList();<z>
;<z>
("##################################################################################################");<z>
("END OF COPY CATEGORY AND PACKAGE - total packageCount : " + packageList.size());<z>
out.println("##################################################################################################");<z>
i++) {<z>
(IPackageModel)packageList.get(i);<z>
pkg);<z>
.println(" 0.5 초간 딜레이! ");<z>
(500);<z>
public static synchronized TimeZone getTimeZone(String id) {<z>
id);<z>
(zone != null) {<z>
return zone;<z>
.startsWith("GMT")) {<z>
getCustomTimeZone(id);<z>
{<z>
) GMT.clone();<z>
return zone;<z>
) {<z>
;<z>
null) {<z>
word();<z>
} else {<z>
+ divider + tag;<z>
block, BlockFace attachedFace, boolean seekAlternative) {<z>
(block, attachedFace, seekAlternative)) {<z>
;<z>
(BlockFace face : BlockFaces.NESW) {<z>
(face).getMaterial();<z>
.deniedNeighbours.contains(mat)) {<z>
return false;<z>
return true;<z>
return false;<z>
)<z>
;<z>
int fn;<z>
) set_index();<z>
= new Entry();<z>
.elements();<z>
;<z>
( f.hasMoreElements() )<z>
);<z>
!= null )<z>
); }<z>
)<z>
("input error");<z>
)<z>
++;<z>
;<z>
;<z>
fn;<z>
SocketAddress localAddr,<z>
) throws IOException {<z>
();<z>
null)<z>
new NullPointerException();<z>
);<z>
)<z>
;<z>
;<z>
0)<z>
(localAddr);<z>
(address != null)<z>
);<z>
{<z>
();<z>
;<z>
res,<z>
final int depth, final ISourceReference sourceElement)<z>
{<z>
)) {<z>
return 0;<z>
int severity = 0;<z>
(sourceElement == null) {<z>
;<z>
} else {<z>
PROBLEM, true,<z>
);<z>
!= null && markers.length > 0) {<z>
int i = 0; i < markers.length<z>
) {<z>
i];<z>
)) {<z>
(IMarker.SEVERITY, -1);<z>
== IMarker.SEVERITY_WARNING<z>
) {<z>
severity = val;<z>
(severity == IMarker.SEVERITY_ERROR) {<z>
return ERRORTICK_ERROR;<z>
.SEVERITY_WARNING) {<z>
return ERRORTICK_WARNING;<z>
0;<z>
public ParentSettings combineWith(ParentSettings otherSettings) {<z>
);<z>
.mySkipBackground = otherSettings.mySkipBackground || mySkipBackground;<z>
mySelectionPainted || mySelectionPainted;<z>
settings;<z>
getEarthSunDistance(final int julianDay) {<z>
.assertGreaterThan("julianDay <= 0", julianDay, 0);<z>
julianDay < 367);<z>
distanceCollection.get(0);<z>
();<z>
iter.hasNext();) {<z>
iter.next();<z>
element.getJulianDay() > julianDay) {<z>
;<z>
getDistance();<z>
= distanceCollection.get(<z>
1);<z>
;<z>
match_length) {<z>
0;<z>
;<z>
while (true) {<z>
if (lookahead < 1) {<z>
flush == JZlib.Z_NO_FLUSH) {<z>
0;<z>
lookahead == 0) {<z>
0) {<z>
) &<z>
0xffff;<z>
if (hash_head != 0L &&<z>
& 0xffff) <= w_size - 1) {<z>
JZlib.Z_HUFFMAN_ONLY) {<z>
hash_head);<z>
match_length >= 0) {<z>
-<z>
0);<z>
;<z>
max_lazy_match && lookahead >= 0) {<z>
match_length --;<z>
;<z>
window[strstart +<z>
) &<z>
0xffff;<z>
strstart & w_mask] = head[ins_h];<z>
) strstart;<z>
!= 0);<z>
++;<z>
} else {<z>
;<z>
0;<z>
] & 0xff;<z>
&<z>
{<z>
0xff);<z>
lookahead --;<z>
strstart ++;<z>
bflush) {<z>
;<z>
) {<z>
return 0;<z>
flush == JZlib.Z_FINISH);<z>
) {<z>
{<z>
return 1;<z>
else {<z>
0;<z>
0;<z>
.uml2.uml.Reception object){<z>
if("default".equals(presentation)){<z>
createGraphElementReception(object, presentation);<z>
null;<z>
Object> _params) {<z>
;<z>
getPresentation(), enabled);<z>
t) {<z>
{<z>
.error("User's action doUpdate method failed. Action:" + "ImplementMethod", t);<z>
);<z>
int input[]) {<z>
; i < input.length; i++)<z>
i] + " ");<z>
;<z>
builder) {<z>
myClassName);<z>
klass != null) {<z>
.safeRunnerForClass(klass);<z>
boolean diiRequest ) {<z>
( !hasClientInterceptors ) return;<z>
!isClientPIEnabledForThisThread() ) return;<z>
=<z>
)threadLocalClientRequestInfoStack.get();<z>
ClientRequestInfoImpl info = null;<z>
info =<z>
();<z>
) {<z>
info.setDIIInitiate( false );<z>
|| !info.getRetryRequest() ) {<z>
;<z>
info );<z>
;<z>
( false );<z>
();<z>
) {<z>
.setDIIInitiate( true );<z>
final Intent intent) {<z>
,R.xml.preference,false);<z>
(context);<z>
{<z>
run() {<z>
.getApplicationContext();<z>
);<z>
();<z>
)<z>
getGenerateBy( );<z>
genBy instanceof ReportItemDesign )<z>
genBy;<z>
= design.getOnRender( );<z>
String javaEventHandler = design.getJavaClass( );<z>
null<z>
|| design instanceof ExtendedItemDesign )<z>
.getTaskType( ) != IEngineTask.TASK_RUN )<z>
onRender( content );<z>
(Synchronization act)<z>
InvalidSynchronizationException, WrongStateException,<z>
if (act == null)<z>
();<z>
throw new WrongStateException(<z>
get_model_twophase_arjunacore_ATCoordinator_1());<z>
void clear()<z>
Triangle next;<z>
; start = next)<z>
next = start.listNext;<z>
listNext = null;<z>
--;<z>
++;<z>
;<z>
listTail = listHead;<z>
;<z>
> selectedChangeLists, final boolean withMovedTrees) {<z>
<Change>();<z>
, new Comparator<CommittedChangeList>() {<z>
(final CommittedChangeList o1, final CommittedChangeList o2) {<z>
);<z>
;<z>
: selectedChangeLists) {<z>
.getChanges();<z>
(Change c: changes) {<z>
result, c);<z>
return result;<z>
Document xmlDocument) throws ParseException {<z>
new Project();<z>
();<z>
"person");<z>
personElements.size(); i++) {<z>
.get(i);<z>
(assemblePerson(childElement));<z>
aProject;<z>
{<z>
= "";<z>
dest = dest;<z>
= length;<z>
this.buffer = new byte[length];<z>
, 0, length);<z>
keyFunc,<z>
<S> visited) {<z>
s1))<z>
return true;<z>
s1);<z>
(s2);<z>
) != Iterables.size(followers2))<z>
;<z>
= Multimaps.index(followers1, keyFunc);<z>
followers2) {<z>
f);<z>
key1s = index.get(key2);<z>
() != 1)<z>
false;<z>
keyFunc, visited))<z>
;<z>
;<z>
private SystemMessage findMessage(String msgId,Locale locale)<z>
;<z>
.hasNext();)<z>
;<z>
.equals(msgId))<z>
return msg;<z>
(isLenient)<z>
null;<z>
);<z>
public ModifiedCompoundImpl (<z>
modification,<z>
) {<z>
|| modifiedResidue==null) {<z>
("Null argument(s)");<z>
= new HashSet<StructureGroup>(1);<z>
;<z>
= null;<z>
);<z>
{<z>
ArrayList();<z>
++) {<z>
add(i);<z>
ret;<z>
public void triggerAlarm(int alarmID) {<z>
(alarmID == 1) {<z>
deleteThisGameObject();<z>
{<z>
++;<z>
restartAlarm();<z>
MouseEvent e)<z>
.isPopupTrigger())<z>
(),<z>
, e.getY());<z>
.BUTTON3 &&<z>
)<z>
(selection.getMarkerRange() != null &&<z>
())<z>
click_range = null;<z>
())<z>
selection.clear();<z>
e.getPoint());<z>
(feature == null)<z>
.isShiftDown())<z>
if(feature instanceof Feature)<z>
(<z>
;<z>
add((FeatureSegment)feature);<z>
)<z>
selection.set(<z>
));<z>
(FeatureSegment)feature);<z>
instanceof Feature)<z>
).getUserData();<z>
).getFeature();<z>
= null;<z>
).canDirectEdit() &&<z>
() &&<z>
)<z>
= clicked_feature.getSegments();<z>
++)<z>
k);<z>
segment_range = this_segment.getRawRange();<z>
border<z>
() - start) * fraction);<z>
= border<z>
) - start) * fraction);<z>
.getPoint().x <= segment_end) ||<z>
().x >= segment_start) )<z>
segment_start+segment_end)/2;<z>
)) ||<z>
isForwardSegment()))<z>
this_segment.getStart();<z>
;<z>
();<z>
);<z>
= false;<z>
();<z>
setActiveFeature(clicked_feature);<z>
repaint();<z>
ActionEvent evt) {<z>
cbGameType.getSelectedItem();<z>
));<z>
).add("Human");<z>
players) {<z>
());<z>
this.cbDeckType.getSelectedItem());<z>
(false);<z>
.getSelectedItem());<z>
cbRange.getSelectedItem());<z>
());<z>
.createTable(roomId, options);<z>
) {<z>
.ERROR_MESSAGE);<z>
)))) {<z>
) {<z>
equals("Human")) {<z>
getTableId())) {<z>
);<z>
(roomId, table.getTableId());<z>
;<z>
;<z>
(FileNotFoundException ex) {<z>
);<z>
{<z>
(ex);<z>
ClassNotFoundException ex) {<z>
(ex);<z>
, "Error joining table.", "Error", JOptionPane.ERROR_MESSAGE);<z>
table.getTableId());<z>
= null;<z>
part) {<z>
.binarySearch(parts, part);<z>
{<z>
return false;<z>
add(part);<z>
Collections.sort(parts);<z>
;<z>
true;<z>
) {<z>
updater =<z>
();<z>
);<z>
true);<z>
ded.addDataChangedListener(updater, true);<z>
updater);<z>
index) {<z>
length()) {<z>
int line = 1;<z>
0; i--) {<z>
{<z>
++;<z>
return line;<z>
return 0;<z>
) {<z>
FDB_EVENTS_TABLE,<z>
"date_time"},<z>
, null, null, null, null);<z>
generalexpression96() {<z>
new XQuery(<z>
);<z>
(file("docs/works.xml")));<z>
;<z>
= result(query);<z>
res;<z>
false)<z>
, String path,<z>
String name )<z>
( filePattern );<z>
;<z>
name = name;<z>
;<z>
);<z>
= file.isDirectory( );<z>
toURL( );<z>
&& this.url != null )<z>
( url.getPath( ) );<z>
file.getPath( );<z>
file.isDirectory( );<z>
isFile = file.isFile( );<z>
( Exception e )<z>
getAnalysisCount() {<z>
) {<z>
;<z>
;<z>
SQLException<z>
();<z>
clob.getCharLength();<z>
} catch (IOException e) {<z>
;<z>
private void maybeAddToSymbolTable(Node n) {<z>
null) {<z>
(n);<z>
processEqExpression(Expression expr)<z>
;<z>
left = stack.pop();<z>
InMemoryFailure)<z>
);<z>
peek();<z>
;<z>
push(result);<z>
.peek();<z>
void setStorageLocation(String value) {<z>
= Preferences.userRoot();<z>
.replace('/', File.separatorChar);<z>
);<z>
)) {<z>
;<z>
;<z>
(Object object) {<z>
)object).getName();<z>
null || label.length() == 0 ?<z>
) :<z>
"_UI_Event_type") + " " + label;<z>
(final Iterable<C> command) {<z>
.debug("Going to execute chain of commands {}", command);<z>
> result = Lists.newArrayList();<z>
= new CountDownLatch(1);<z>
{<z>
public void run() {<z>
(), result);<z>
);<z>
.await();<z>
(InterruptedException e) {<z>
e);<z>
return result;<z>
GroupingUnitType unitType, ULocale loc )<z>
this.unitType = unitType;<z>
.groupingUnit2CDateUnit( unitType ),<z>
;<z>
EditorCell createCollection_fgeak3_a(EditorContext editorContext, SNode node) {<z>
= EditorCell_Collection.createIndent2(editorContext, node);<z>
);<z>
createRefCell_fgeak3_a0(editorContext, node));<z>
return editorCell;<z>
Set flavorsSet) {<z>
)];<z>
);<z>
=<z>
new DataFlavorComparator(IndexedComparator.SELECT_WORST);<z>
.sort(flavors, comparator);<z>
return flavors;<z>
Object> fields, String prefix, Object obj)<z>
)<z>
);<z>
(IllegalAccessException e)<z>
{<z>
.getProject());<z>
);<z>
.isReadOnly()) {<z>
).getProject());<z>
} else {<z>
.getProject());<z>
15), eoModelTable);<z>
);<z>
){<z>
= a;<z>
a2;<z>
this;<z>
(int numberOfNodes) {<z>
this.numberOfNodes = numberOfNodes;<z>
= false;<z>
false;<z>
momentumFactor = 0.9;<z>
ParserState() {<z>
, int yyTop) {<z>
0+yyTop]));<z>
yyVals[0+yyTop]);<z>
;<z>
() {<z>
return true;<z>
;<z>
false;<z>
String nickname) {<z>
connectDatabase()) {<z>
return -1;<z>
query = "SELECT * FROM voti_libri WHERE ISBN=? AND username=?;";<z>
PreparedStatement prstmt = con.prepareStatement(query);<z>
.setString(1, ISBN);<z>
, nickname);<z>
prstmt.executeQuery();<z>
) {<z>
;<z>
{<z>
"INSERT INTO voti_libri(ISBN,username,voto) VALUES (?,?,?);";<z>
.prepareStatement(query);<z>
(1, ISBN);<z>
.setString(2, nickname);<z>
(3, voto);<z>
executeUpdate();<z>
close();<z>
();<z>
;<z>
} catch (SQLException e) {<z>
out<z>
.println("Errore. Impossibile eseguire l'operazione richiesta.\n");<z>
;<z>
return -2;<z>
= "SELECT * FROM libri_table WHERE ISBN=?;";<z>
.prepareStatement(query);<z>
.setString(1, ISBN);<z>
prstmt.executeQuery();<z>
!= null) {<z>
query = "UPDATE libri_table SET voto=((voto+?)/2) WHERE ISBN=?";<z>
);<z>
setString(1, ISBN);<z>
;<z>
);<z>
;<z>
(SQLException e) {<z>
System.out<z>
);<z>
);<z>
3;<z>
return 1;<z>
) {<z>
GL_NEAREST) {<z>
= GL10.GL_LINEAR;<z>
} else {<z>
= GL10.GL_NEAREST;<z>
mParam],<z>
"mag") +<z>
?<z>
: "linear"));<z>
set(int propertyIndex, Object newValue)<z>
(propertyIndex)<z>
NAME:<z>
newValue);<z>
super.set(propertyIndex, newValue);<z>
boolean severe) {<z>
(toWrite != null) {<z>
if (severe) {<z>
.DATABASE_PREFIX + toWrite);<z>
else {<z>
PREFIX + this.DATABASE_PREFIX + toWrite);<z>
jj_3R_348() {<z>
jj_scan_token(HOOK)) return true;<z>
if (jj_3R_255()) return true;<z>
(jj_scan_token(COLON)) return true;<z>
(jj_3R_255()) return true;<z>
return false;<z>
long bytes) {<z>
;<z>
{<z>
bytes = 0;<z>
.append(bytes);<z>
;<z>
.append(bytes / 1024);<z>
(" kilobytes or ");<z>
/ (1024 * 1024));<z>
);<z>
1024 * 1024 * 1024));<z>
;<z>
);<z>
{<z>
, object, aDrawing);<z>
object.addObserver(this);<z>
));<z>
ToolBox.MACOS) {<z>
);<z>
();<z>
Notification notification) {<z>
(notification);<z>
{<z>
:<z>
:<z>
BRANCH_POINT__REVISION:<z>
:<z>
:<z>
(), false, true));<z>
;<z>
IRegion subject) {<z>
getSelectedNode(editor);<z>
;<z>
==null) {<z>
new FindContainerVisitor(selectedNode);<z>
());<z>
.getStatementOrArgument();<z>
.Declaration) {<z>
.getDeclarationModel();<z>
);<z>
public LockStateStore(Uid u, OutputObjectState s)<z>
u;<z>
;<z>
_next = null;<z>
,<z>
reason,<z>
admin) {<z>
.debug("tempBanPlayer called");<z>
;<z>
* 1000);<z>
("Tempban primTime is " + primTime + ", final time is " + time);<z>
set("tempBans." + player, null);<z>
+ player);<z>
;<z>
);<z>
);<z>
);<z>
AttrViewObserver o) {<z>
{<z>
;<z>
get() == null) {<z>
observers.remove(i);<z>
;<z>
(o == wr.get()) {<z>
wr;<z>
null;<z>
plasticClass)<z>
filter(new Predicate<PlasticMethod>()<z>
accept(PlasticMethod method)<z>
contains(method.getDescription());<z>
});<z>
> getStandardVars( Action cmd ) throws IOException {<z>
);<z>
getInputs() != null ) {<z>
.getInputs() ) {<z>
), v.getDefault());<z>
());<z>
vars;<z>
Place result) {<z>
();<z>
if (result != null) {<z>
mItem = result;<z>
getName());<z>
.setText(mItem.getDescription());<z>
: mItem.getNotice());<z>
float rating;<z>
mItem.getVoted() != 0) {<z>
;<z>
} else {<z>
rating = 0;<z>
));<z>
);<z>
else {<z>
, Toast.LENGTH_LONG).show();<z>
,<z>
_grp,<z>
String _nam,<z>
_y )<z>
;<z>
( this );<z>
name = _nam;<z>
20;<z>
20;<z>
()<z>
log(2, "PROXY_SERVER/GET_HTTP_PROXY_SERVER");<z>
return httpProxyServer;<z>
) {<z>
value) {<z>
TOP;<z>
: return CENTER;<z>
case BOTTOM_VALUE: return BOTTOM;<z>
return null;<z>
(<z>
newTimeUs, int newFlags) {<z>
offset = newOffset;<z>
= newSize;<z>
newTimeUs;<z>
= newFlags;<z>
public void properties(String propsString) {<z>
",");<z>
.length);<z>
keyVal : keyVals) {<z>
;<z>
{<z>
"(" + keyVal +<z>
);<z>
1].trim());<z>
putAll(props);<z>
String kbaseName,<z>
kbaseFolder) throws IOException,<z>
;<z>
);<z>
() ) {<z>
;<z>
is = ifile.getContents();<z>
.load( is );<z>
finally {<z>
( is != null ) {<z>
;<z>
= props.getProperty( "files", "" );<z>
( "files", files );<z>
new ByteArrayOutputStream();<z>
);<z>
baos.close();<z>
) ) {<z>
, true, true, null );<z>
else {<z>
, null );<z>
){<z>
];<z>
i++)<z>
.doubleValue();<z>
params;<z>
, Element owner) {<z>
= referenceGenerator.generateReference(owner);<z>
!= null) {<z>
.getClass().getName());<z>
String s;<z>
.alice.core.criterion.InternalReferenceKeyedCriterion) {<z>
.getKey();<z>
.core.criterion.ExternalReferenceKeyedCriterion) {<z>
.ExternalReferenceKeyedCriterion) criterion).getKey();<z>
{<z>
.toString();<z>
() == 0) {<z>
s = ".";<z>
);<z>
IOException {<z>
();<z>
fileSegment.synch();<z>
.synch();<z>
finally {<z>
();<z>
doExecute() throws Exception<z>
HashMap();<z>
("globalKey", "infoglue");<z>
PropertySetManager.getInstance("jdbc", args);<z>
);<z>
getName() + "_defaultToolName", defaultToolName);<z>
() + "_defaultRepositoryId", defaultRepositoryId);<z>
+ "_defaultGUI", defaultGUI);<z>
"_theme", theme);<z>
"_toolbarVariant", toolbarVariant);<z>
, "0", "ServerNodeProperties");<z>
notificationMessage);<z>
"success";<z>
int store_food_id) {<z>
)) {<z>
);<z>
);<z>
request;<z>
) {<z>
{<z>
();<z>
1024);<z>
commentPtr) {<z>
SelectionParser)this.sourceParser).selectionStart;<z>
).selectionEnd;<z>
.sourceParser.scanner.commentStarts[commentPtr];<z>
[commentPtr];<z>
.javadocEnd) {<z>
if (SelectionEngine.DEBUG) {<z>
;<z>
super.checkDeprecation(commentPtr);<z>
else {<z>
.docComment = null;<z>
;<z>
)<z>
super(inTab.getTabName());<z>
new StartPageTabContent(inTab));<z>
;<z>
);<z>
());<z>
add(menu);<z>
.coreCss().newTabTextbox());<z>
MAX_TAB_NAME_LENGTH);<z>
()<z>
BlurEvent event)<z>
);<z>
));<z>
).remove(textBox);<z>
));<z>
).add(menu);<z>
});<z>
)<z>
(final KeyUpEvent ev)<z>
!ev.isAnyModifierKeyDown())<z>
.setTabName(textBox.getText());<z>
textBox.getText()));<z>
);<z>
addItem("Change Layout", new Command()<z>
void execute()<z>
showTabLayoutSelector();<z>
);<z>
()<z>
public void execute()<z>
());<z>
(menu);<z>
add(textBox);<z>
());<z>
(true);<z>
());<z>
);<z>
, new Command()<z>
)<z>
.delete(tab);<z>
});<z>
addItem(removeItem);<z>
addObserver(UpdatedStartPageTabNameResponseEvent.class,<z>
>()<z>
final UpdatedStartPageTabNameResponseEvent event)<z>
getId())<z>
setText(textBox.getText());<z>
).remove(textBox);<z>
.add(getLabel());<z>
;<z>
);<z>
UpdatedStartPageLayoutResponseEvent.class,<z>
()<z>
UpdatedStartPageLayoutResponseEvent event)<z>
tab.getId())<z>
;<z>
getContents()).renderGadgets();<z>
).refreshGadgetMetadata();<z>
);<z>
getEventBus().addObserver(GadgetAddedToStartPageEvent.class,<z>
Observer<GadgetAddedToStartPageEvent>()<z>
final GadgetAddedToStartPageEvent event)<z>
isActive)<z>
.getGadget(), true);<z>
().notifyObservers(<z>
false)));<z>
ArrayList<GadgetDefinition>();<z>
.getGadgetDefinition());<z>
).fetchMetaData();<z>
;<z>
public NodePencil() {<z>
Color(153, 153, 153);<z>
size = 10f;<z>
(boolean[] done) {<z>
(numChains > 0) {<z>
;<z>
numChains;<z>
return chains[numChains];<z>
= false;<z>
= 0;<z>
0;<z>
message)<z>
XmlPullParserException {<z>
.TEXT, message);<z>
;<z>
l, int i1) {<z>
object = null;<z>
) {<z>
);<z>
) {<z>
);<z>
if (oclass == WorldGenStrongholdLeftTurn.class) {<z>
i1);<z>
(oclass == WorldGenStrongholdRightTurn.class) {<z>
l, i1);<z>
class) {<z>
l, i1);<z>
) {<z>
;<z>
) {<z>
);<z>
WorldGenStrongholdCrossing.class) {<z>
, i1);<z>
== WorldGenStrongholdChestCorridor.class) {<z>
;<z>
else if (oclass == WorldGenStrongholdLibrary.class) {<z>
j, k, l, i1);<z>
(oclass == WorldGenStrongholdPortalRoom.class) {<z>
);<z>
;<z>
,<z>
ExportHandler eh)<z>
"";<z>
.getDeity() != null)<z>
".", false);<z>
= "OUTPUTNAME";<z>
;<z>
if (aTok.countTokens() > 1)<z>
aTok.nextToken();<z>
aTok.nextToken();<z>
(subTag))<z>
().getSuppressBioField(BiographyField.DEITY))<z>
getDisplayName();<z>
)<z>
getSuppressBioField(BiographyField.DEITY))<z>
.getOutputName(deity);<z>
else if ("DOMAINLIST".equals(subTag))<z>
);<z>
subTag))<z>
errorPrint("Output Sheet uses DEITY.FOLLOWERALIGN: "<z>
;<z>
"ALIGNMENT".equals(subTag))<z>
.ALIGNMENT);<z>
null ? "" : al.getAbb();<z>
else if ("APPEARANCE".equals(subTag))<z>
(StringKey.APPEARANCE);<z>
(subTag))<z>
= pc.getDescription(deity);<z>
))<z>
);<z>
subTag))<z>
= deity<z>
(ListKey.DEITYWEAPON);<z>
, Constants.PIPE, true);<z>
equals(subTag))<z>
PANTHEON), ", ");<z>
equals(subTag))<z>
(deity,<z>
), true);<z>
subTag))<z>
;<z>
)<z>
);<z>
subTag))<z>
WORSHIPPERS);<z>
;<z>
() {<z>
;<z>
.prepareBooleanQuery(QueryLanguage.SPARQL, queryString);<z>
getDataset());<z>
bq.evaluate();<z>
) {<z>
;<z>
Exception {<z>
= 12;<z>
"asc";<z>
= new File(args[0]);<z>
;<z>
length; i++) {<z>
[i]);<z>
.exists()) {<z>
sourceFile.getAbsolutePath());<z>
System.exit(1);<z>
(sourceFile);<z>
(args.length == 1) {<z>
add(new File("."));<z>
;<z>
new JMeterReportParser(model);<z>
.setSourceFiles(sourceFiles);<z>
run();<z>
);<z>
(new FileWriter(targetFile));<z>
createReport());<z>
);<z>
String mapStyle )<z>
( mapStyle == null )<z>
= INLINE_MODE;<z>
mapStyle;<z>
.BaselineResizeBehavior getBaselineResizeBehavior(<z>
c) {<z>
null) {<z>
);<z>
.OTHER;<z>
void onAttach() {<z>
.onAttach();<z>
);<z>
(XSDModelGroup modelGroup,<z>
{<z>
{<z>
)iter.next();<z>
particle.getContent();<z>
if (content instanceof XSDModelGroup) {<z>
XSDModelGroup)content, children);<z>
content instanceof XSDModelGroupDefinition) {<z>
XSDModelGroupDefinition)content;<z>
()) {<z>
getResolvedModelGroupDefinition();<z>
children);<z>
content instanceof XSDElementDeclaration) {<z>
) != 0) {<z>
particle, this));<z>
{<z>
);<z>
txt) {<z>
txt.replaceAll("&", "&#38;");<z>
= txt.replaceAll("<", "&#60;");<z>
);<z>
replaceAll("\"", "&#34;");<z>
.replaceAll("'", "&#39;");<z>
;<z>
iwc) throws Exception {<z>
service = getService(iwc);<z>
null) {<z>
)service.getPrimaryKey());<z>
;<z>
, product );<z>
; ++c) indexs += c;<z>
+<z>
length());<z>
cs) {<z>
);<z>
OMContainer parent, QName text, int nodeType,<z>
OMFactory factory) {<z>
factory);<z>
textNS =<z>
text.getPrefix());<z>
":" + text.getLocalPart();<z>
void setRepresents(EObject newValue) {<z>
!= null) {<z>
.setSelection(new StructuredSelection(newValue));<z>
} else {<z>
());<z>
public void opNumericSubtractulng2args3() {<z>
XQuery query = new XQuery(<z>
;<z>
;<z>
res;<z>
("184467440737095516")<z>
context, URLConnection connection)<z>
;<z>
connection.getHeaderField("icy-name");<z>
);<z>
build_file_name();<z>
) {<z>
();<z>
getSOAPBody();<z>
getLocalName();<z>
{<z>
final Node responseNode = body.getFirstChild();<z>
);<z>
;<z>
());<z>
1000));<z>
return true;<z>
} catch (SOAPException e) {<z>
return false;<z>
Object> getProperties() {<z>
.getBundle().getHeaders();<z>
, Object>();<z>
PRODUCT_NAME, "Apache Tuscany SCA");<z>
Constants.BUNDLE_VERSION));<z>
;<z>
;<z>
StackValue visitProperty(JetProperty property, StackValue receiver) {<z>
= property.getInitializer();<z>
== null) {<z>
();<z>
) {<z>
Void fun(VariableDescriptor descriptor) {<z>
));<z>
, varType);<z>
return null;<z>
;<z>
return StackValue.none();<z>
, SNode nodeToReportError, String errorTextPrefix) {<z>
, NameUtil.nodeFQName(toConcept))) {<z>
;<z>
;<z>
;<z>
return false;<z>
addNormalisationRules(final Repository serverConfigurationRdf,<z>
QueryAllConfiguration nextSettings)<z>
serverConfigurationRdf);<z>
INFO)<z>
;<z>
())<z>
NormalisationRule nextNormalisationRuleConfiguration = results.get(nextNormalisationRuleUri);<z>
);<z>
public static void main( String[] args )<z>
{<z>
new Mongo();<z>
( "mbtest" );<z>
MessageBus( db );<z>
loop( new Listener() {<z>
DBObject message ) {<z>
println( message );<z>
;<z>
price) {<z>
, price);<z>
writeSpeed;<z>
this.readSpeed = readSpeed;<z>
TaskListener listener)<z>
InterruptedException {<z>
.getEnvironment(listener);<z>
;<z>
child(resolvedPropertiesFile);<z>
exists()) {<z>
.getLogger()<z>
println(<z>
;<z>
null;<z>
readToString();<z>
expand(s);<z>
();<z>
));<z>
);<z>
: p.entrySet()) {<z>
.getKey().toString(),<z>
)));<z>
(values);<z>
{<z>
: listeners) {<z>
nextState);<z>
KahluaTableIterator iterator() {<z>
= delegate.keys();<z>
new KahluaTableIterator() {<z>
;<z>
Object curKey;<z>
, int nArguments) {<z>
) {<z>
getKey(), getValue());<z>
return 0;<z>
boolean advance() {<z>
if (enumeration.hasMoreElements()) {<z>
();<z>
);<z>
;<z>
= null;<z>
curValue = null;<z>
false;<z>
getKey() {<z>
curKey;<z>
public Object getValue() {<z>
return curValue;<z>
(final String name, final Object value) {<z>
Validate.notNull(name, "Property name cannot be null");<z>
nodeProperties == null) {<z>
,Object>();<z>
.nodeProperties.put(name, value);<z>
int getSignalStrengthScore(){<z>
0;<z>
.getWifi()!=null){<z>
.strength>1){<z>
*10;<z>
!=null){<z>
))>1){<z>
());<z>
percent;<z>
signalstrenthScore/100;<z>
StringBuffer buf) {<z>
null) {<z>
append(charset);<z>
.append(' ');<z>
super.output(buf);<z>
(collate != null) {<z>
buf.append(" COLLATE ");<z>
.append(collate);<z>
public void shutdown() {<z>
;<z>
false;<z>
(mtStateManagementThread != null)<z>
();<z>
Link instantiate(SerializationStreamReader streamReader)<z>
readString());<z>
Object newValue)<z>
(featureID)<z>
MIXED_BOOL__VAL:<z>
(Boolean)newValue);<z>
, newValue);<z>
(FacesContext context, UIComponent component,<z>
String value) {<z>
return null;<z>
(int n) {<z>
;<z>
= 0;<z>
while (0 < n) {<z>
bit + 1;<z>
= n / 2;<z>
bit;<z>
new ISelectionListener() {<z>
, ISelection selection) {<z>
)null);<z>
if (selection instanceof IStructuredSelection) {<z>
).getFirstElement();<z>
.isTraceLimit()) {<z>
.invokeLater(new Runnable() {<z>
public void run() {<z>
;<z>
});<z>
{<z>
(pc);<z>
classformat_load, new String[] {<z>
],<z>
, 3)<z>
;<z>
;<z>
) {<z>
&& adapter != null) {<z>
)) {<z>
T) object;<z>
instanceof IAdaptable) {<z>
;<z>
return null;<z>
public boolean equals(Object obj) {<z>
if (!(obj instanceof Pair)) {<z>
;<z>
;<z>
) &&<z>
object2.equals(otherPair.object2));<z>
checkModifiers() {<z>
)) {<z>
checkModifiers();<z>
isInnerClass() && !isConstant())<z>
);<z>
) {<z>
= 7;<z>
;<z>
0);<z>
;<z>
;<z>
(){<z>
){<z>
b == false)<z>
false;<z>
true;<z>
(SimpleNode expression) {<z>
super(-1);<z>
, 0);<z>
();<z>
Consts.RunnerType rt) {<z>
rt) {<z>
REDUFO:<z>
(0);<z>
case BLUEUFO:<z>
return scaledRunners.get(1);<z>
GREENUFO:<z>
;<z>
case GREENRODUFO:<z>
3);<z>
:<z>
(4);<z>
case YELLOWRODUFO:<z>
;<z>
:<z>
6);<z>
REDLOOPUFO:<z>
.get(7);<z>
YELLOWLOOPUFO:<z>
(8);<z>
return null;<z>
() {<z>
(modelProvider,<z>
(),<z>
.instance().getClientStorage());<z>
static boolean deleteDirectory(File sourceDirectory,<z>
filter, boolean recursive, boolean deleteItself) {<z>
(sourceDirectory, filter);<z>
|| !sourceDirectory.canRead()<z>
|| !sourceDirectory.isDirectory())<z>
("Source is not in a legal state.");<z>
files = (filter != null ? sourceDirectory<z>
());<z>
File file : files) {<z>
()) {<z>
recursive)<z>
);<z>
else {<z>
(!file.delete())<z>
;<z>
() : true;<z>
(Property propertyAnnotation,<z>
ParamType paramType,<z>
,<z>
genericType,<z>
annotations,<z>
Member member) {<z>
, annotations, member);<z>
name(), member);<z>
public boolean canSave() {<z>
{<z>
false;<z>
))) {<z>
;<z>
))) {<z>
;<z>
) {<z>
false;<z>
objs = treeViewer.getCheckedElements();<z>
objs)) {<z>
return false;<z>
true;<z>
) throws InstantiationException, IllegalAccessException, ClassNotFoundException {<z>
null) {<z>
split(",");<z>
name : names) {<z>
));<z>
) {<z>
;<z>
= timeout;<z>
this.hostUuid = hostUuid;<z>
String server, String spawnpoint,<z>
int serverstate, boolean attractloop, boolean loadgame) {<z>
;<z>
checksum = 0;<z>
attractloop)<z>
("paused", "0");<z>
.Printf("------- Server Initialization -------\n");<z>
"\n");<z>
(sv.demofile != null)<z>
close();<z>
catch (Exception e) {<z>
svs.spawncount++;<z>
= Defines.ss_dead;<z>
= sv.state;<z>
server_t();<z>
.realtime = 0;<z>
loadgame;<z>
.attractloop = attractloop;<z>
configstrings[Defines.CS_NAME] = server;<z>
{<z>
CS_AIRACCEL] = ""<z>
value;<z>
= SV_MAIN.sv_airaccelerate.value;<z>
else {<z>
configstrings[Defines.CS_AIRACCEL] = "0";<z>
;<z>
);<z>
.name = server;<z>
value; i++) {<z>
[i].state > Defines.cs_connected)<z>
].state = Defines.cs_connected;<z>
= -1;<z>
1000;<z>
server;<z>
] = server;<z>
iw[] = { checksum };<z>
.ss_game) {<z>
.CM_LoadMap("", false, iw);<z>
else {<z>
1] = "maps/" + server + ".bsp";<z>
(<z>
;<z>
;<z>
checksum;<z>
);<z>
i++) {<z>
+ i] = "*" + i;<z>
1 + i]);<z>
ss_loading;<z>
state;<z>
), spawnpoint);<z>
G_RunFrame();<z>
;<z>
sv.state = serverstate;<z>
sv.state;<z>
);<z>
);<z>
sv.name, Defines.CVAR_SERVERINFO<z>
Defines.CVAR_NOSET);<z>
public void waitForInitialization() {<z>
);<z>
(true) {<z>
);<z>
(initialized) {<z>
log.info("Coordination znode structure initialized");<z>
Thread.sleep(INITIALIZATION_SLEEP_PERIOD);<z>
"Znode structure is not initialized. Waiting {} ms", INITIALIZATION_SLEEP_PERIOD);<z>
e) {<z>
warn("Sleep interrupted", e);<z>
void ensureCapacity() {<z>
== size) {<z>
size << 1];<z>
0, size);<z>
temp;<z>
{<z>
Persistent) object;<z>
ObjectContext context = persistent.getObjectContext();<z>
null) {<z>
(persistent, getName(), false);<z>
ClassCastException e) {<z>
new PropertyException("Object is not a Persistent: '"<z>
.getName()<z>
e);<z>
) {<z>
= path;<z>
= container;<z>
context;<z>
, Object obj1, Object obj2,<z>
obj5,<z>
Object obj8,<z>
exception)<z>
(level))<z>
).append(obj2)<z>
.append(obj5).append(obj6)<z>
).append(obj8), exception);<z>
int featureID) {<z>
switch (featureID) {<z>
PACKAGE_USE__PACKAGE_:<z>
return package_ != null;<z>
ExperimentalPackage.PACKAGE_USE__SETTING:<z>
!setting.isEmpty();<z>
eIsSet(featureID);<z>
,<z>
{<z>
).createCriteria(InvoiceDTO.class);<z>
addUserCriteria(criteria, userId);<z>
addPeriodCriteria(criteria, start, end);<z>
;<z>
);<z>
uniqueResult();<z>
Key from, Key to, Integer batchSize) {<z>
rowKey = rowKey;<z>
info1 = info1;<z>
;<z>
;<z>
= batchSize;<z>
) {<z>
TorrentUtil.getMagnetURLParameters(_torrent));<z>
;<z>
(JButton) e.getSource();<z>
);<z>
(DataTable table) {<z>
table.getPageCount();<z>
(pageCount != -1)<z>
table.getPageIndex() < pageCount - 1;<z>
false;<z>
RangeMatchingContext rangeOnField(String fieldName) {<z>
)<z>
)<z>
ignoreAnalyzer();<z>
{<z>
.isEventDispatchThread()) {<z>
.run();<z>
else {<z>
(runnable);<z>
) {<z>
list = new ArrayList<Topic>();<z>
Topic("Animations", 5));<z>
;<z>
list;<z>
console) throws LanguageException, Exception {<z>
node.getType()) {<z>
:<z>
Keyword.INICIO:<z>
getNext();<z>
FIM:<z>
));<z>
node.getNext();<z>
FUNCAODEFINIDA:<z>
);<z>
());<z>
blk.toString());<z>
blocks.add(blk);<z>
return blk.getBegin();<z>
ESCREVER:<z>
console);<z>
;<z>
case Keyword.DEFINIR:<z>
executeDefine(node);<z>
getNext();<z>
.CALCULAR:<z>
;<z>
getNext();<z>
null;<z>
() throws RecognitionException {<z>
int _type = OctalLiteral;<z>
;<z>
;<z>
int alt6=2;<z>
= input.LA(1);<z>
{<z>
;<z>
alt6) {<z>
1 :<z>
matchRange('0','7');<z>
loop6;<z>
EarlyExitException eee =<z>
input);<z>
eee;<z>
;<z>
true);<z>
;<z>
int LA7_0 = input.LA(1);<z>
{<z>
alt7=1;<z>
(alt7) {<z>
case 1 :<z>
);<z>
.type = _type;<z>
) {<z>
) {<z>
true;<z>
{<z>
false;<z>
;<z>
SimpleName simpleName, Collection<ICommandAccess> proposals) {<z>
);<z>
;<z>
int type= bodyDeclaration.getNodeType();<z>
if (type == ASTNode.METHOD_DECLARATION) {<z>
) ? IProposalRelevance.CREATE_PARAMETER_PREFIX_OR_SUFFIX_MATCH : IProposalRelevance.CREATE_PARAMETER;<z>
UnresolvedElementsSubProcessor_createparameter_description, BasicElementLabels.getJavaElementName(name));<z>
JavaPluginImages.IMG_CORRECTION_LOCAL);<z>
null, relevance, image));<z>
) bodyDeclaration, node)) {<z>
.CREATE_LOCAL_PREFIX_OR_SUFFIX_MATCH : IProposalRelevance.CREATE_LOCAL;<z>
, BasicElementLabels.getJavaElementName(name));<z>
);<z>
));<z>
.getNodeType() == ASTNode.ASSIGNMENT) {<z>
;<z>
ASTNode.EXPRESSION_STATEMENT) {<z>
getParent();<z>
;<z>
getParent().getLocationInParent())) {<z>
;<z>
else {<z>
.remove(statement, null);<z>
label= CorrectionMessages.UnresolvedElementsSubProcessor_removestatement_description;<z>
(ISharedImages.IMG_TOOL_DELETE);<z>
, IProposalRelevance.REMOVE_ASSIGNMENT, image);<z>
proposal);<z>
EObject element,<z>
{<z>
)) {<z>
, hoverRegion, previous);<z>
(Image) element;<z>
= new StringBuffer();<z>
;<z>
;<z>
);<z>
(previous, element,<z>
.toString(), getLabelProvider());<z>
private String getDisplayText(LocalFileItem item) {<z>
.AUDIO) {<z>
getNameProperty(item, true);<z>
} else {<z>
);<z>
(Map<String, String> params,<z>
namespace) {<z>
if (namespace == null)<z>
namespace = "fb_sig";<z>
+ "_";<z>
prefix_len = prefix.length();<z>
);<z>
: params.entrySet()) {<z>
) {<z>
.getKey().substring(prefix_len),<z>
));<z>
) {<z>
)) {<z>
;<z>
tmpTime = fb_params.get(FacebookParam.TIME<z>
());<z>
'.') > 0)<z>
tmpTime.indexOf('.'));<z>
Long.parseLong(tmpTime);<z>
) {<z>
HashMap<String, String>();<z>
!params.containsKey(namespace)<z>
) {<z>
;<z>
fb_params;<z>
JukeboxDevice(String mjb_id) {<z>
this.service = PlaybackService.getInstance();<z>
String>();<z>
mjb_id;<z>
);<z>
(String firstName){<z>
;<z>
sendKeys(firstName);<z>
();<z>
wait(1000);<z>
.xpath("//div[@id='content']/div[3]/table"));<z>
By.tagName("td"));<z>
td:tdList){<z>
(firstName)){<z>
true;<z>
;<z>
() {<z>
cause == 302)) {<z>
;<z>
return 100;<z>
) {<z>
{<z>
event.setCancelled(true);<z>
savedInstanceState) {<z>
(savedInstanceState);<z>
R.layout.routechooser);<z>
()).getDatabase();<z>
true);<z>
"stop");<z>
getSerializableExtra("result");<z>
getRoutes();<z>
layout.simple_list_item_1, routes));<z>
getNumber() +<z>
);<z>
!= null) {<z>
{<z>
;<z>
onVehicleMove( VehicleMoveEvent event )<z>
).getPassenger() instanceof Player )<z>
) );<z>
(String serviceName, HttpServletRequest request) throws Exception {<z>
;<z>
callback = request.getParameter("callback");<z>
("id");<z>
(service, entityId, callback);<z>
boolean cancel() {<z>
null) stopButton.setEnabled(false);<z>
);<z>
.cancel();<z>
{<z>
AppDefinition appDef = null;<z>
WorkflowProcess process = workflowManager.getRunningProcessById(processId);<z>
!= null) {<z>
packageId = process.getPackageId();<z>
;<z>
(packageId, packageVersion);<z>
if (packageDef != null) {<z>
;<z>
AppUtil.setCurrentAppDefinition(appDef);<z>
appDef;<z>
getRSSUrl() {<z>
new StringBuilder();<z>
append(getComponentId());<z>
"&login=");<z>
getUserDetail().getLogin()));<z>
append("&password=");<z>
.getOrganizationController().getUserFull(<z>
;<z>
return builder.toString();<z>
)<z>
if ( object instanceof Suspendable )<z>
).resume();<z>
, int featureID, NotificationChain msgs) {<z>
(featureID) {<z>
case GmlPackage.GRID_LIMITS_TYPE__GRID_ENVELOPE:<z>
;<z>
, msgs);<z>
AttachmentTable( Attachment a ) {<z>
;<z>
fileName = a.getName();<z>
;<z>
();<z>
.lastModified = a.getLastModified();<z>
() != null ) {<z>
).getUUID() );<z>
);<z>
{<z>
) {<z>
NOT_A_START_TAG);<z>
Event next;<z>
{<z>
();<z>
catch (IOException ex) {<z>
;<z>
getType() == END_TAG;<z>
holder) {<z>
);<z>
(), 2));<z>
exp(power);<z>
result;<z>
writeObject(java.io.ObjectOutputStream s)<z>
IOException {<z>
);<z>
;<z>
TreeitemComparator) {<z>
TreeitemComparator)_sortAsc;<z>
.isAscending()) {<z>
writeBoolean(true);<z>
());<z>
(c.byValue());<z>
;<z>
if (!written) {<z>
writeBoolean(false);<z>
writeObject(_sortAsc);<z>
;<z>
{<z>
TreeitemComparator c = (TreeitemComparator)_sortDsc;<z>
) {<z>
true);<z>
c.shallIgnoreCase());<z>
);<z>
written = true;<z>
if (!written) {<z>
);<z>
.writeObject(_sortDsc);<z>
String logType,<z>
String objectId, Date logStartTime, String status) {<z>
.activityLogId = activityLogId;<z>
.logType = logType;<z>
.objectId = objectId;<z>
;<z>
= status;<z>
, final String password)<z>
{<z>
;<z>
;<z>
} catch (FileNotFoundException e) {<z>
, "Failed to load OpenShift configuration file.");<z>
) {<z>
);<z>
configuration.getLibraServer());<z>
CDOTransferMapping parent,<z>
monitor)<z>
source, parent, monitor);<z>
public int countFaces() {<z>
0;<z>
comps = getComponents();<z>
i++)<z>
);<z>
temp;<z>
) {<z>
< 4) {<z>
);<z>
else {<z>
.getAbsolutePath());<z>
SpatialDatabaseService(db);<z>
args[2]);<z>
(layer != null) {<z>
new ShapefileExporter(db);<z>
.getName());<z>
< args.length; i++) {<z>
("[\\.\\-]");<z>
String, String>();<z>
fields[0];<z>
;<z>
(fields.length > 1) {<z>
null;<z>
value;<z>
;<z>
) {<z>
;<z>
);<z>
} else {<z>
"Creating and exporting new layer: "+name);<z>
);<z>
exportLayer(name);<z>
(Exception e) {<z>
": " + e);<z>
err);<z>
else {<z>
2]);<z>
db.shutdown();<z>
, int i) {<z>
).text(name);<z>
())<z>
return null;<z>
= list.get(i);<z>
href = link.attr("href");<z>
return href;<z>
() {<z>
this, "Line:",<z>
, JOptionPane.QUESTION_MESSAGE);<z>
null)<z>
(line));<z>
BadLocationException e) {<z>
+ line);<z>
NumberFormatException e) {<z>
line);<z>
void gotoSitemap() {<z>
);<z>
equals("")) {<z>
Command() {<z>
{<z>
String>();<z>
());<z>
());<z>
Target.TOP, parameter);<z>
getBodyElement().appendChild(form);<z>
form.submit();<z>
leaveCommand);<z>
{<z>
(crs);<z>
baseCRS = crs.getBaseCRS();<z>
);<z>
{<z>
findLoggedInUserPrivileges();<z>
== false) {<z>
;<z>
;<z>
= getEntityManager();<z>
);<z>
tx.begin();<z>
persist(o);<z>
;<z>
;<z>
} catch (Exception e) {<z>
.SEVERE, "RequestFactoryUtils.removeAdminKeyOnly() Error: remove(): o=" + o, e);<z>
e.printStackTrace();<z>
finally {<z>
if (tx.isActive()) {<z>
tx.rollback();<z>
);<z>
;<z>
muteOutput(SoundDevice sd) {<z>
) {<z>
(sd).mute();<z>
void kSeqExprCast1275() {<z>
final XQuery query = new XQuery(<z>
;<z>
);<z>
;<z>
(true)<z>
(Block doorHalf, boolean left) {<z>
doorHalf, true);<z>
;<z>
left) {<z>
|= 0x1;<z>
else {<z>
~0x1;<z>
.setData(data);<z>
getNextIndex (char what, int from) {<z>
from);<z>
(i > 0)<z>
) {<z>
int slashCount = 1;<z>
{}<z>
1) {<z>
, i + 1);<z>
} else {<z>
return i;<z>
i;<z>
public void endDocument()<z>
)<z>
throws XMLSecurityException {<z>
.getBaseLocalName();<z>
getBaseNamespace();<z>
getLocalName();<z>
;<z>
localnameIS) ||<z>
(namespaceIS)) {<z>
[] = { namespaceIS +":"+ localnameIS,<z>
+":"+ localnameSHOULDBE};<z>
XMLSecurityException("xml.WrongElement", exArgs);<z>
par2List, Random par3Random)<z>
field_75024_a)<z>
ComponentStrongholdCrossing.class);<z>
;<z>
public List<String> getLocales() {<z>
String>();<z>
Locale> it = FacesContext.getCurrentInstance()<z>
hasNext();) {<z>
toString());<z>
return l;<z>
recursiveDelete(File dir) {<z>
.listFiles()) {<z>
f.getAbsolutePath());<z>
()) {<z>
f);<z>
else {<z>
;<z>
.delete();<z>
public createTable_args(<z>
tableName,<z>
)<z>
();<z>
;<z>
columnFamilies = columnFamilies;<z>
ruleTemplateId, List documentTypes) {<z>
());<z>
("docTypeName", documentTypes);<z>
, ruleTemplateId);<z>
("currentInd", Boolean.TRUE);<z>
.TRUE);<z>
;<z>
;<z>
(generateFromToDateCriteria(new Date()));<z>
();<z>
kNumericAdd51() {<z>
XQuery(<z>
);<z>
res = result(query);<z>
;<z>
true)<z>
("XPTY0004")<z>
(<z>
) {<z>
= tokensDeclaration;<z>
Nullable final Editor editor) {<z>
) return;<z>
;<z>
(editor);<z>
).line;<z>
= new Runnable() {<z>
) {<z>
);<z>
)){<z>
);<z>
);<z>
;<z>
i--){<z>
= regions[i];<z>
!region.isExpanded()){<z>
(true);<z>
(processor);<z>
public void addResolution(T item)<z>
(referencedObject != null)<z>
(<z>
);<z>
getReferenceClass()))<z>
("Cannot resolve a "<z>
+ " Reference to a "<z>
.getClass().getSimpleName());<z>
.equals(item.getCDOMCategory()))<z>
= category.getParentCategory();<z>
(item.getCDOMCategory()))<z>
new IllegalArgumentException("Cannot resolve "<z>
getName()<z>
" Reference to category "<z>
+ category);<z>
;<z>
file, int offset) {<z>
PsiElement element = null;<z>
).isInjectedFragment(file)) {<z>
= InjectedLanguageUtil.findInjectedElementNoCommit(file, offset);<z>
{<z>
offset);<z>
element == null) {<z>
element = file;<z>
return element;<z>
value) {<z>
desc = new PropertyDescriptor() {<z>
, value);<z>
, false);<z>
);<z>
, false);<z>
;<z>
public INTERNAL serverScTempSize(CompletionStatus cs, Throwable t)<z>
INTERNAL(SERVER_SC_TEMP_SIZE, cs);<z>
)<z>
(t);<z>
(Level.WARNING))<z>
;<z>
;<z>
exc;<z>
void someMethod(String arg) {<z>
();<z>
);<z>
{<z>
"RuntimeException invoking receiveResult: " + e.toString());<z>
{<z>
-1);<z>
} catch (KeeperException e) {<z>
, e);<z>
} catch (InterruptedException e) {<z>
e);<z>
, boolean resolve, boolean coreType) {<z>
switch (featureID) {<z>
ThingmlPackage.PORT__OWNER:<z>
return getOwner();<z>
:<z>
return getReceives();<z>
:<z>
return getSends();<z>
(featureID, resolve, coreType);<z>
(DataSource dataSource, String qualifiedTableName) {<z>
boolean success;<z>
con = null;<z>
= null;<z>
(qualifiedTableName);<z>
? SQLUtil.getTableNameWithoutSchema(qualifiedTableName) : qualifiedTableName;<z>
getConnection();<z>
.getMetaData();<z>
schema, tableName, null);<z>
{<z>
true;<z>
SQLException e) {<z>
.debug("Error getting database metadata for DROP TABLE command. " +<z>
);<z>
;<z>
{<z>
safeClose(rs);<z>
con);<z>
.getTransactionManager();<z>
oldTransaction = null;<z>
();<z>
{<z>
);<z>
= null;<z>
con = dataSource.getConnection();<z>
;<z>
sql = SQLUtil.DROP_TABLE + qualifiedTableName;<z>
);<z>
(sql);<z>
success = true;<z>
{<z>
;<z>
(con);<z>
Exception e) {<z>
);<z>
false;<z>
} finally {<z>
if (oldTransaction != null) {<z>
.resume(oldTransaction);<z>
{<z>
();<z>
success;<z>
void addGraphAttribute(ServletRequest request) throws ServletException {<z>
;<z>
graphIdString = request.getParameter("graph_id");<z>
graphId = Integer.parseInt(graphIdString);<z>
"id", graphId).getSingleResult();<z>
);<z>
("statsGraph", statsGraph);<z>
finally {<z>
commit();<z>
e) {<z>
throw new ServletException(e);<z>
addPictureToNode(MapNodePositionHolder positionHolder,<z>
) {<z>
= positionHolder.getNode();<z>
.addNewNode(selected, 0,<z>
isLeft());<z>
(addNewNode, positionHolder.getImageHtml());<z>
, Map<Long, T> mapping,<z>
endian) {<z>
type != null;<z>
!= null;<z>
sizeExpr != null;<z>
!= null;<z>
;<z>
= mapping;<z>
this.size = sizeExpr;<z>
byteOrder = endian;<z>
();<z>
()) {<z>
(), entry.getKey());<z>
{<z>
(Dependency dependency_) {<z>
if(isConformFromDependency(dependency_)) {<z>
createConformAdapter();<z>
return null;<z>
package_) {<z>
if(isViewFromPackage(package_)) {<z>
;<z>
return null;<z>
Class class_) {<z>
) {<z>
);<z>
return null;<z>
{<z>
)) {<z>
createRationaleAdapter();<z>
;<z>
comment_) {<z>
if(isProblemFromComment(comment_)) {<z>
);<z>
return null;<z>
(Conform object) {<z>
;<z>
Adapter caseView(View object) {<z>
);<z>
(ViewPoint object) {<z>
createViewPointAdapter();<z>
(Rationale object) {<z>
createRationaleAdapter();<z>
(Problem object) {<z>
();<z>
{<z>
();<z>
pcl) {<z>
super.addPropertyChangeListener(DISPLAY_UNITS_PROPERTY, pcl);<z>
addPropertyChangeListener(BANDHEIGHT_PROPERTY, pcl);<z>
super.addPropertyChangeListener(COLORS_PROPERTY, pcl);<z>
public String toString()<z>
;<z>
.getSimpleName());<z>
;<z>
getId());<z>
{<z>
);<z>
.append(_lifecycle.getStateName());<z>
);<z>
();<z>
{<z>
);<z>
new ServerSocket(port);<z>
catch (IOException e) {<z>
+ port);<z>
e);<z>
;<z>
while (true) {<z>
== null) {<z>
server.accept();<z>
) {<z>
("Telnet server will accept no more incoming connections");<z>
close();<z>
(-1);<z>
stop = false;<z>
getInetAddress().isLoopbackAddress()) {<z>
);<z>
log.warn("attempt to connect from remote location: "<z>
());<z>
;<z>
, true);<z>
(<z>
"ISO-8859-1"));<z>
(new OutputStreamWriter(<z>
;<z>
);<z>
("Give password:");<z>
out.flush();<z>
(char)0xff);<z>
write((char)0xfb);<z>
write((char)0x01);<z>
.flush();<z>
.flush();<z>
trimTelnetNegotiationCommands(in.readLine());<z>
= md5(line);<z>
getProperty("framework.password"))) {<z>
);<z>
log.warn("wrong password");<z>
null;<z>
;<z>
((char)0xfc);<z>
.write((char)0x01);<z>
.flush();<z>
.println();<z>
);<z>
out.print(PROMPT);<z>
;<z>
= trimTelnetNegotiationCommands(in.readLine());<z>
elems = line.split("\\s");<z>
].trim().toLowerCase();<z>
AutobahnCommand command = commands.get(cmd);<z>
) {<z>
elems);<z>
out.println(response);<z>
{<z>
println("command not recognized");<z>
(Exception e1) {<z>
.error("connection dropped", e1);<z>
;<z>
stop) {<z>
shutdown);<z>
() {<z>
= vendorRepository.findAllSortedByName();<z>
{<z>
;<z>
){};<z>
).build();<z>
getLabelControl(final Composite parent) {<z>
== null) {<z>
assertCompositeNotNull(parent);<z>
.LEFT | SWT.WRAP);<z>
getFont());<z>
);<z>
!"".equals(fLabelText)) {<z>
fLabel.setText(fLabelText);<z>
else {<z>
setText(".");<z>
(false);<z>
;<z>
{<z>
;<z>
DatabaseConfigurationException e) {<z>
+ e.getMessage(), e);<z>
return null;<z>
rule__XConstructorCall__Group_3__0() throws RecognitionException {<z>
keepStackSize();<z>
FollowSets004.FOLLOW_rule__XConstructorCall__Group_3__0__Impl_in_rule__XConstructorCall__Group_3__091736);<z>
;<z>
._fsp--;<z>
state.failed) return ;<z>
);<z>
);<z>
;<z>
return ;<z>
(RecognitionException re) {<z>
reportError(re);<z>
;<z>
restoreStackSize(stackSize);<z>
) {<z>
FEATURE_PROCESS_DOCDECL.equals(name)) {<z>
;<z>
} else {<z>
name);<z>
{<z>
editorContext, node, "/");<z>
);<z>
);<z>
"");<z>
return editorCell;<z>
Long instanceId) {<z>
;<z>
RowCallbackHandler handler = new RowCallbackHandler() {<z>
public void processRow(ResultSet rs) throws SQLException {<z>
));<z>
JobParameter value = null;<z>
(type == ParameterType.STRING) {<z>
;<z>
type == ParameterType.LONG) {<z>
rs.getLong(6));<z>
DOUBLE) {<z>
);<z>
type == ParameterType.DATE) {<z>
));<z>
(2), value);<z>
[] { instanceId }, handler);<z>
return new JobParameters(map);<z>
toString() {<z>
;<z>
true;<z>
append("nssi:");<z>
== null) {<z>
);<z>
{<z>
.nssi);<z>
= false;<z>
")");<z>
toString();<z>
public void execute() {<z>
if (vmOmapiRegister) {<z>
omapiHost,omapiPort,omapiKeyName, omapiKeyValue);<z>
;<z>
omapiOverWrite);<z>
) {<z>
;<z>
) {<z>
;<z>
);<z>
() {<z>
IInformationControlCreator() {<z>
"deprecation")<z>
public IInformationControl createInformationControl(Shell parent) {<z>
String tooltipAffordanceString = null;<z>
getTooltipAffordanceString();<z>
catch (Exception e) {<z>
NONE, new HtmlTextPresenter(), tooltipAffordanceString) {<z>
) {<z>
().getCursorLocation();<z>
location.y) {<z>
;<z>
setLocation(location);<z>
,<z>
year,<z>
week,<z>
day) {<z>
;<z>
] args) throws Exception<z>
= "src/main/webapp/";<z>
;<z>
= new WebAppContext();<z>
;<z>
(webappDirLocation + "/WEB-INF/web.xml");<z>
root.setResourceBase(webappDirLocation);<z>
(true);<z>
.setHandler(root);<z>
();<z>
();<z>
Bundle savedInstanceState) {<z>
onCreate(savedInstanceState);<z>
;<z>
setContentView(R.layout.activity_recipe_047);<z>
setSouthPanelReadOnly(boolean readOnly)<z>
if (readOnly)<z>
;<z>
true);<z>
public double getPercentageCompleted(Algorithm algorithm) {<z>
if (previousBest == null) {<z>
);<z>
return 0.0;<z>
().getPosition());<z>
distance < minChange)<z>
;<z>
minChangeCounter = 0;<z>
return minChangeCounter / maxConsecutiveMinChange;<z>
doCancelAction() {<z>
)) {<z>
.setValue(VcsShowConfirmationOption.Value.DO_NOTHING_SILENTLY);<z>
super.doCancelAction();<z>
PackageInfo> infos) {<z>
resource, resourceKey);<z>
dictionaryOption;<z>
.size()];<z>
;<z>
int index = 0;<z>
PackageInfo i : infos) {<z>
i.Id;<z>
= i.Title;<z>
;<z>
setLists(values, texts);<z>
);<z>
(String raw) {<z>
length());<z>
{<z>
('\n' == c) {<z>
("\\n");<z>
) {<z>
append("\\\"");<z>
== c) {<z>
append("\\\\");<z>
} else {<z>
c);<z>
return buf.toString();<z>
Nullable Object left, @Nullable Object right) {<z>
(left);<z>
= asUnlimitedNaturalValue(right);<z>
return isUnlimited(right) ? leftValue : rightValue;<z>
) {<z>
) {<z>
.getCounter(groupName, counterName);<z>
, counterName);<z>
)<z>
== null)<z>
null;<z>
;<z>
o : results)<z>
(o));<z>
return newResults;<z>
l)<z>
listeners.remove(l);<z>
this;<z>
() {<z>
content == null) {<z>
LinearLayout(mContext);<z>
width, height));<z>
mContext)<z>
.main, root);<z>
(width, height);<z>
0, content.getMeasuredWidth(),<z>
content.getMeasuredHeight());<z>
confirm).setOnClickListener(this);<z>
Bitmap mBackground=<z>
.createBitmap(width, height, BITMAP_CONFIG);<z>
DisplayMetrics.DENSITY_DEFAULT);<z>
(mBackground);<z>
canvas);<z>
showBitmap(mBackground);<z>
Monitor monitor,<z>
,<z>
,<z>
,<z>
cause){<z>
;<z>
{<z>
Problem problem =<z>
.createProblem(contextClassName,<z>
,<z>
;<z>
);<z>
} else {<z>
, contextClassName);<z>
throws RecognitionException {<z>
null;<z>
= null;<z>
==0 ) {<z>
;<z>
(FOLLOW_ruleResourceBody_in_entryRuleResourceBody1094);<z>
ruleResourceBody();<z>
;<z>
.failed) return current;<z>
if ( state.backtracking==0 ) {<z>
current =iv_ruleResourceBody;<z>
current;<z>
re) {<z>
recover(input,re);<z>
);<z>
;<z>
) {<z>
(request)) {<z>
;<z>
);<z>
.isDirectRequest(request)) {<z>
(request));<z>
;<z>
();<z>
final String s) {<z>
pluginloaded == false) {<z>
PluginForHost plugin = JDUtilities.getPluginForHost("youtube.com");<z>
throw new IllegalStateException("youtube plugin not found!");<z>
;<z>
.Youtube.unescape(s);<z>
Control createControl(Composite parent) {<z>
SWT.NONE);<z>
;<z>
.NONE);<z>
));<z>
setText("Project name:");<z>
.BORDER);<z>
;<z>
txtProjectName.setText(projectName);<z>
new ModifyListener() {<z>
void modifyText(ModifyEvent e) {<z>
(false, true)) {<z>
old = projectName;<z>
trim();<z>
old, projectName);<z>
} finally {<z>
programmaticChange.set(false);<z>
});<z>
composite;<z>
) {<z>
;<z>
get (new LONG (address));<z>
null) return XPCOM.NS_ERROR_FAILURE;<z>
;<z>
args.length);<z>
).method23 (args);<z>
void grabSelectedRange()<z>
(!rationalizeLocation ())<z>
,<z>
"grab failed - current location cannot be parsed");<z>
getSelectionRange();<z>
)<z>
, "grab failed - nothing is selected");<z>
location_text.getText();<z>
(old_location_text.endsWith ("))"))<z>
new_text =<z>
.length () - 2);<z>
"," + selected_range.getStart () +<z>
selected_range.getEnd () + "))");<z>
(old_location_text.endsWith (")"))<z>
new_text =<z>
);<z>
new_text + "," + selected_range.getStart () +<z>
+ selected_range.getEnd () + ")");<z>
setText(old_location_text + "," +<z>
.getStart () +<z>
".." + selected_range.getEnd ());<z>
!rationalizeLocation())<z>
setText (old_location_text);<z>
frame, "grab failed - location cannot be parsed after " +<z>
;<z>
()<z>
result = this._outputString;<z>
this._outputStream != null)<z>
();<z>
result;<z>
MenuItem item) {<z>
()) {<z>
R.id.settings:<z>
;<z>
.startActivity(intent);<z>
return true;<z>
item);<z>
sUserId, String componentId)<z>
AdminException {<z>
sUserId, getAllGroupsOfUser(sUserId), Integer.<z>
));<z>
{<z>
null || !revision.isValid()) {<z>
create(SVNErrorCode.CL_ARG_PARSING_ERROR, "Invalid revision number supplied");<z>
SVNLogType.FSFS);<z>
;<z>
static void main(String[] args) {<z>
;<z>
;<z>
{<z>
INT_INPUT_POLICY,<z>
InputPolicy.DEFAULT_INPUT_POLICY<z>
, OutputPolicy.DEFAULT_OUTPUT_POLICY);<z>
2) });<z>
"Example 1 output: " + addResult.toString());<z>
MODULE_NAME, "add"), new InputPolicy[] {<z>
InputPolicy.DEFAULT_INPUT_POLICY,<z>
.DEFAULT_INPUT_POLICY<z>
;<z>
);<z>
));<z>
CAL_VALUE_OUTPUT_POLICY);<z>
]);<z>
] {<z>
InputPolicy.DEFAULT_INPUT_POLICY,<z>
)}, OutputPolicy.DEFAULT_OUTPUT_POLICY);<z>
5), allPrimesResult});<z>
"Example 3 output: " + primesList.toString());<z>
Exception e) {<z>
);<z>
.printStackTrace();<z>
) throws IOException, JsonProcessingException {<z>
(value == null) {<z>
writeNull();<z>
{<z>
();<z>
writeFieldName("$ref");<z>
;<z>
"$id");<z>
value.getId());<z>
writeEndObject();<z>
IPropertiesEditionPart getPropertiesEditionPart(int kind, String key) {<z>
.equals(key)) {<z>
null) {<z>
.getProvider(TarotViewsRepository.class);<z>
!= null) {<z>
LeastAtLast.class, kind, this);<z>
((IPropertiesEditionListener)basePart);<z>
IPropertiesEditionPart)basePart;<z>
;<z>
protected void onDraw (Canvas canvas)<z>
(canvas);<z>
JSONException {<z>
();<z>
STATUS_GOOD, 0);<z>
0);<z>
.put(STATUS_SEVERE_DELAYS, 0);<z>
STATUS_PART_CLOSURE, 0);<z>
counterMap.put(STATUS_PART_SUSPENDED, 0);<z>
, 0);<z>
STATUS_OTHER, 0);<z>
("lines");<z>
{<z>
lines.getJSONObject(index);<z>
"Line: " + line.toString());<z>
("status");<z>
",");<z>
String statusMessage : statusMessages) {<z>
(statusMessage)) {<z>
+ 1);<z>
{<z>
STATUS_OTHER) + 1);<z>
<String>();<z>
counterMap.entrySet()) {<z>
getValue() == 0) {<z>
, entry.getValue());<z>
add(codeAndCount);<z>
("/", codes);<z>
{<z>
= Looper.myQueue();<z>
this);<z>
L1PcInstance pc, String cmdName, String arg) {<z>
;<z>
nameId = tok.nextToken();<z>
;<z>
()) {<z>
(tok.nextToken());<z>
int randomrange = 0;<z>
)) {<z>
, 10);<z>
parseNpcId(nameId);<z>
;<z>
(npc == null) {<z>
.sendPackets(new S_SystemMessage("Cannot find NPC."));<z>
i++) {<z>
randomrange, 0);<z>
("%s(%d) (%d) has been summoned. (range: %d)", npc<z>
npcid, count, randomrange);<z>
S_SystemMessage(msg));<z>
catch (NoSuchElementException e) {<z>
sendErrorMessage(pc, cmdName);<z>
) {<z>
pc, cmdName);<z>
Exception e) {<z>
e.getLocalizedMessage(), e);<z>
+ " error."));<z>
{<z>
x1 < x1) {<z>
.x1 = bounds.x1;<z>
< y1) {<z>
this.y1 = bounds.y1;<z>
(bounds.x2 > x2) {<z>
.x2 = bounds.x2;<z>
bounds.y2 > y2) {<z>
bounds.y2;<z>
parts) {<z>
{<z>
(part);<z>
return this;<z>
{<z>
);<z>
new HashSet<String>();<z>
{<z>
LibDescriptor s : lc.getLibraries()) {<z>
(s.path);<z>
().getBundleHome(path) : null;<z>
getClassLoader());<z>
path);<z>
path);<z>
|| !oldValue) {<z>
, lc.hiddenLanguages());<z>
, newLibs, refreshFiles);<z>
myLoadedLibs = newLibs;<z>
() {<z>
) {<z>
handleCheckin(true);<z>
public Details newTransientDetails(IObject object)<z>
SecurityViolation {<z>
("transientDetails");<z>
object);<z>
void setAccessLogged()<z>
arguments.get(ARG_LOG_OPTIONS);<z>
)<z>
true;<z>
logflags.indexOf('A') >= 0;<z>
('R') >= 0;<z>
ITokenScanner getConstantScanner()<z>
== null)<z>
SassConstantScanner(colorManager);<z>
return constantScanner;<z>
disposeUIResources() {<z>
(myPanel != null){<z>
;<z>
();<z>
null;<z>
() {<z>
.clear();<z>
!= null) {<z>
) {<z>
p));<z>
multiply(final PolynomialFunction p) {<z>
;<z>
{<z>
;<z>
- p.coefficients.length);<z>
.length, i + 1);<z>
++j) {<z>
coefficients[i-j];<z>
;<z>
theHandle )<z>
FederateNotExecutionMember, RTIinternalError<z>
);<z>
theHandle );<z>
;<z>
null )<z>
RTIinternalError( "handle: " + handle );<z>
return instance.getName();<z>
StartElement startelement) {<z>
(startelement.getName());<z>
(startelement.getAttributes());<z>
));<z>
allowreply, Byte allowgetattach, Byte allowpostattach) {<z>
;<z>
allowview = allowview;<z>
allowpost = allowpost;<z>
allowreply = allowreply;<z>
= allowgetattach;<z>
;<z>
String value) {<z>
value.endsWith("\"")) {<z>
, value.length() - 1);<z>
} else {<z>
return value;<z>
public ExpressionHelper( )<z>
exprParser = new ExpressionParserUtility( );<z>
;<z>
( );<z>
String getHighestChromKey(){<z>
() > 0)<z>
;<z>
null;<z>
throws SystemException {<z>
: findAll()) {<z>
(ratingsEntry);<z>
)<z>
();<z>
private static void createArcOfSameType(<z>
final Arc a,<z>
final GraphObject src,<z>
final GraphObject tar,<z>
G,<z>
) throws TypeException {<z>
;<z>
!= null) {<z>
src, (Node)tar);<z>
.setContextUsage(a.getContextUsage());<z>
p.addMappingFast(a, a2);<z>
) {<z>
());<z>
{<z>
"Step pushout: Cannot create edge! "<z>
;<z>
) {<z>
(ex.getLocalizedMessage());<z>
final private boolean jj_3R_94() {<z>
Token xsp;<z>
= jj_scanpos;<z>
()) {<z>
;<z>
()) {<z>
xsp;<z>
jj_3R_101()) {<z>
= xsp;<z>
{<z>
= xsp;<z>
()) {<z>
xsp;<z>
()) {<z>
jj_scanpos = xsp;<z>
()) {<z>
= xsp;<z>
{<z>
jj_scanpos = xsp;<z>
{<z>
= xsp;<z>
(jj_3R_108()) {<z>
xsp;<z>
if (jj_3R_109()) return true;<z>
return false;<z>
){<z>
>();<z>
;<z>
new Report("name", filesByFormat);<z>
("format");<z>
0));<z>
public void close()<z>
java.io.IOException<z>
, -4742752445160157748L);<z>
catch (java.lang.RuntimeException e) {<z>
throw e;<z>
.IOException e) {<z>
throw e;<z>
(java.lang.Exception e) {<z>
UnexpectedException("undeclared checked exception", e);<z>
(Token first, Token second) {<z>
(0);<z>
);<z>
SEPARATOR);<z>
.append(second.termText());<z>
), first.startOffset(), second<z>
, "gram");<z>
0);<z>
result;<z>
final void rule__CellColor__ColorAssignment_2() throws RecognitionException {<z>
keepStackSize();<z>
( state.backtracking==0 ) {<z>
));<z>
(FollowSets004.FOLLOW_ruleRGB_in_rule__CellColor__ColorAssignment_2105047);<z>
);<z>
._fsp--;<z>
.failed) return ;<z>
state.backtracking==0 ) {<z>
));<z>
re) {<z>
(re);<z>
);<z>
);<z>
?> parent, View view, int position,<z>
) {<z>
= mAdapter;<z>
), 0);<z>
final WorkQueue wq, final SitePaths site,<z>
,<z>
grm)<z>
, IOException {<z>
injector = i;<z>
= wq;<z>
;<z>
= ruf;<z>
= grm;<z>
allConfigs(site);<z>
void rule__LinDef__Group_0__2__Impl() throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
) {<z>
);<z>
state.failed) return ;<z>
if ( state.backtracking==0 ) {<z>
getEqualsSignKeyword_0_2());<z>
re) {<z>
);<z>
,re);<z>
(stackSize);<z>
, Player p, UpdateProxy proxy) {<z>
proxy.getWatchedItems();<z>
{<z>
.getNewEntities();<z>
= items.getKnownEntities();<z>
getLocation();<z>
PacketBuilder pb = new PacketBuilder();<z>
109);<z>
knownItems) {<z>
) {<z>
), loc);<z>
getId() + 32768);<z>
writeByte(offsets[0]);<z>
(offsets[1]);<z>
(Item i : newItems) {<z>
i.getLocation(), loc);<z>
writeShort(i.getId());<z>
);<z>
]);<z>
.write(pb.toPacket());<z>
(UserModel user, SearchResultEntry userEntry) {<z>
user);<z>
.password = "StoredInLDAP";<z>
.ldap.displayName, "");<z>
displayName)) {<z>
) {<z>
.getAttributes())<z>
getValue());<z>
user.displayName = displayName;<z>
{<z>
= userEntry.getAttribute(displayName);<z>
null && attribute.hasValue()) {<z>
attribute.getValue();<z>
.email, "");<z>
(email)) {<z>
)) {<z>
getAttributes())<z>
+ "}", userAttribute.getValue());<z>
;<z>
} else {<z>
= userEntry.getAttribute(email);<z>
hasValue()) {<z>
getValue();<z>
> teams) {<z>
{<z>
1) : null;<z>
= teams.get(t);<z>
) : null;<z>
> team.getComparisonValue())<z>
getComparisonValue())) {<z>
;<z>
{<z>
createDefaultEditPolicies();<z>
.SEMANTIC_ROLE,<z>
());<z>
, createLayoutEditPolicy());<z>
new ParserState() {<z>
) {<z>
])), null, null);<z>
yyVal;<z>
) {<z>
event.getPlayer();<z>
) {<z>
player.getWorld();<z>
world)) {<z>
plugin.stopCreepersday(world);<z>
) {<z>
);<z>
(String newLONGNAME) {<z>
= lONGNAME;<z>
;<z>
(eNotificationRequired())<z>
RifPackage.DATATYPEDEFINITIONBINARYFILE__LONGNAME, oldLONGNAME, lONGNAME));<z>
{<z>
Translucency.ACS_ACCURACY)]);<z>
!= null){<z>
setColor(r1Color);<z>
, 2*LR1, 2*LR1);<z>
null){<z>
;<z>
;<z>
;<z>
;<z>
getColumnName(int col) {<z>
switch (col) {<z>
case NAME:<z>
"Name";<z>
case TARGET:<z>
"Target";<z>
:<z>
return "To Dep PK";<z>
CARDINALITY:<z>
return "To Many";<z>
null;<z>
( )<z>
return getLibraryHandleAdapter( SessionHandleAdapter.getInstance( )<z>
) );<z>
)<z>
MidiSystem.getSequencer();<z>
open();<z>
paused = true;<z>
e)<z>
null;<z>
)<z>
.IOException, ClassNotFoundException<z>
;<z>
();<z>
Entry[numBuckets];<z>
int size = s.readInt();<z>
size; i++)<z>
.readObject();<z>
);<z>
, value);<z>
() throws IOException {<z>
docID == NO_MORE_DOCS) {<z>
;<z>
;<z>
termFreq = 0;<z>
(true) {<z>
in.getFilePointer();<z>
SimpleTextUtil.readLine(in, scratch);<z>
scratch, DOC)) {<z>
))) {<z>
in.seek(lineStart);<z>
!omitTF) {<z>
;<z>
;<z>
, scratchUTF16);<z>
scratchUTF16.length);<z>
termFreq = 0;<z>
= false;<z>
) {<z>
;<z>
.chars, 0, scratchUTF16.length);<z>
, POS)) {<z>
START_OFFSET)) {<z>
END_OFFSET)) {<z>
, PAYLOAD)) {<z>
} else {<z>
: "scratch=" + scratch.utf8ToString();<z>
|| liveDocs.get(docID))) {<z>
);<z>
{<z>
termFreq;<z>
;<z>
= NO_MORE_DOCS;<z>
EObject create(EClass eClass) {<z>
getClassifierID()) {<z>
case IntentIndexerPackage.INTENT_INDEX:<z>
;<z>
.INTENT_INDEX_ENTRY:<z>
);<z>
("The class '" + eClass.getName()<z>
"' is not a valid classifier");<z>
visitCode(Code obj) {<z>
).getSignature();<z>
.indexOf(")[");<z>
{<z>
stack.resetForMethodEntry(this);<z>
+ 1);<z>
();<z>
);<z>
() {<z>
(ENVIRONMENT_INSTANCE == null) {<z>
();<z>
return ENVIRONMENT_INSTANCE.props;<z>
)<z>
= txt;<z>
= num;<z>
= ml;<z>
) {<z>
oldEditPartProviderPriority = editPartProviderPriority;<z>
? EDIT_PART_PROVIDER_PRIORITY_EDEFAULT : newEditPartProviderPriority;<z>
))<z>
, editPartProviderPriority));<z>
) throws InitializationError {<z>
;<z>
;<z>
{<z>
this == obj) return true;<z>
obj == null) return false;<z>
(obj instanceof CreateJobRequest == false) return false;<z>
CreateJobRequest)obj;<z>
) == null) return false;<z>
) == false) return false;<z>
getManifest() == null) return false;<z>
false;<z>
return false;<z>
getManifestAddendum()) == false) return false;<z>
return false;<z>
== false) return false;<z>
true;<z>
{<z>
= theX;<z>
_myY = theY;<z>
_myParent = theParent;<z>
Address createBusinessAddress(Attributes attrs) {<z>
;<z>
getPrintableAttribute(attrs.get("st"));<z>
))<z>
setPropertyValue((String) val);<z>
.get("co"));<z>
if (! val.equals(""))<z>
.setPropertyValue((String) val);<z>
get("l"));<z>
if (! val.equals(""))<z>
setPropertyValue((String) val);<z>
.get("street"));<z>
! val.equals(""))<z>
val);<z>
(attrs.get("postalAddress"));<z>
))<z>
String) val);<z>
attrs.get("postalCode"));<z>
if (! val.equals(""))<z>
(String) val);<z>
));<z>
val.equals(""))<z>
((String) val);<z>
;<z>
) {<z>
== false || selectedFile == null) {<z>
()) {<z>
removeAll();<z>
(jMenuItemOpen);<z>
add(jMenuItemEdit);<z>
.add(jMenuItemPrint);<z>
);<z>
);<z>
jDesktopPopupMenu.addSeparator();<z>
.add(jMenuItemMail);<z>
.isEditable(selectedFile)) {<z>
;<z>
{<z>
(false);<z>
)) {<z>
jMenuItemPrint.setEnabled(true);<z>
{<z>
false);<z>
;<z>
else {<z>
;<z>
;<z>
.addSeparator();<z>
jDesktopPopupMenu.add(jMenuItemBrowse);<z>
.getY());<z>
EditorCell createCollection_s4nv53_a(EditorContext editorContext, SNode node) {<z>
, node);<z>
("Collection_s4nv53_a");<z>
(editorContext, node));<z>
().getScope())) {<z>
));<z>
().getScope())) {<z>
(editorContext, node));<z>
{<z>
this.createCollection_s4nv53_d0(editorContext, node));<z>
return editorCell;<z>
getAccessibleStateSet()<z>
= super.getAccessibleStateSet();<z>
(state)<z>
CHECKED);<z>
;<z>
, boolean before)<z>
getParent() != null)<z>
return false;<z>
instanceof ASTJImport)<z>
if (node instanceof ASTJImport)<z>
;<z>
node instanceof ASTJPackage)<z>
insertFirst(newSibling, CompilationUnit.IMPORTS_PROPERTY);<z>
<?>)<z>
IMPORTS_PROPERTY);<z>
return false;<z>
instanceof ASTJAbstractType<?>)<z>
)<z>
TYPES_PROPERTY, node, before);<z>
instanceof ASTJImport)<z>
, CompilationUnit.TYPES_PROPERTY);<z>
)<z>
);<z>
false;<z>
ASTJPackage)<z>
.PACKAGE_PROPERTY);<z>
return false;<z>
(this);<z>
;<z>
)<z>
});<z>
, "edu.umich.robot.april.ViewObstaclesReadOnly");<z>
setString("viewer.walls.class", "edu.umich.robot.april.ViewWalls");<z>
(config, "viewer.walls.obstacles.");<z>
;<z>
"edu.umich.robot.april.ViewSkybox");<z>
, "../common/north.jpg");<z>
;<z>
("viewer.skybox.east_image", "../common/east.jpg");<z>
;<z>
"../common/top.jpg");<z>
);<z>
String str){<z>
str = str.trim();<z>
str);<z>
;<z>
false;<z>
NumberFormatException e){<z>
split = str.split(":");<z>
split.length == 2){<z>
(split[0]);<z>
parseByte(split[1]);<z>
true;<z>
(NumberFormatException ex){<z>
id = 0;<z>
= 0;<z>
= false;<z>
;<z>
;<z>
;<z>
erode() {<z>
(isInvertedLut())<z>
);<z>
filter(MAX);<z>
, PrintStream err,<z>
String> args) throws Exception {<z>
!= 2) {<z>
err.println("Expected 2 arguments: schema json_data_file");<z>
println("Use '-' as json_data_file for stdin.");<z>
return 1;<z>
get(0));<z>
InputStream input;<z>
;<z>
(1).equals("-")) {<z>
;<z>
= false;<z>
{<z>
);<z>
= true;<z>
> reader =<z>
>(schema);<z>
.read(null,<z>
, input));<z>
> writer =<z>
<Object>(schema);<z>
(out, null);<z>
writer.write(datum, e);<z>
;<z>
finally {<z>
) {<z>
.close();<z>
return 0;<z>
{<z>
= 31;<z>
result = 1;<z>
action.hashCode());<z>
hashCode());<z>
result;<z>
Variant> attributes, final Exception e )<z>
= new WriteAttributeResults ();<z>
final String name : attributes.keySet () )<z>
new WriteAttributeResult ( e ) );<z>
return results;<z>
void generateConfigJS(DynmapCore core) {<z>
isLoginSupportEnabled();<z>
;<z>
();<z>
.append("var config = {\n");<z>
sb.append(" url : {\n");<z>
sb.append(" configuration: '");<z>
);<z>
;<z>
sb.append(" update: '");<z>
, login_enabled?"standalone/update.php?world={world}&ts={timestamp}":"standalone/dynmap_{world}.json?_={timestamp}"));<z>
append("',\n");<z>
sb.append(" sendmessage: '");<z>
.getString("url/sendmessage", "standalone/sendmessage.php"));<z>
.append("',\n");<z>
;<z>
));<z>
.append("',\n");<z>
(" register: '");<z>
configuration.getString("url/register", "standalone/register.php"));<z>
"',\n");<z>
append(" tiles: '");<z>
));<z>
append("',\n");<z>
" markers: '");<z>
login_enabled?"standalone/markers.php?marker=":"tiles/"));<z>
;<z>
.getBytes(cs_utf8);<z>
);<z>
;<z>
FileOutputStream(f);<z>
;<z>
(IOException iox) {<z>
getPath(), iox);<z>
} finally {<z>
if(fos != null) {<z>
close();<z>
}<z>
;<z>
{<z>
NodeTest nodetest) throws OXPathException {<z>
"Illegal node test with style axis");<z>
XPathNameTest)nodetest).isSuffixWildcard()) {<z>
new OXPathException("style::* not yet supported.");<z>
getLast());<z>
wrappedNode);<z>
catch (NullPointerException e) {<z>
;<z>
ConstantValue() {<z>
<String>() {<z>
) {<z>
replace("\\${", "${");<z>
);<z>
IllegalArgumentException e) {<z>
);<z>
internalToString(String value) {<z>
.convertToJavaString(value, false);<z>
replace("${", "\\${");<z>
return result;<z>
parentDisposable,<z>
@Nullable VirtualFilePointerListener listener,<z>
NotNull String path,<z>
, String> fileAndUrl) {<z>
FilePointerPartNode root = myPointers.get(listener);<z>
node;<z>
{<z>
);<z>
(listener, root);<z>
root;<z>
0, fileAndUrl);<z>
VirtualFilePointerImpl pointer;<z>
leaf == null) {<z>
;<z>
);<z>
;<z>
pointer.myNode.incrementUsageCount(1);<z>
root.checkStructure();<z>
pointer;<z>
double preSd ){<z>
0){<z>
);<z>
(this.possibleSplitpoint != null) {<z>
) {<z>
>= 0) {<z>
;<z>
possibleSplitpoint = node;<z>
{<z>
- this.epsilon) < 0) {<z>
splitPossible = false;<z>
}else{<z>
possibleSplitpoint = node;<z>
static void glValidateProgramPipeline(<z>
pipeline) {<z>
.glValidateProgramPipeline(<z>
);<z>
visibility) {<z>
StringBuffer s = new StringBuffer();<z>
("DXFVertex [");<z>
append("bulge: ");<z>
append(b + ", ");<z>
.append("x: ");<z>
s.append(x + ", ");<z>
;<z>
.append(y + ", ");<z>
);<z>
+ ", ");<z>
append("visibility: ");<z>
);<z>
.append("]");<z>
s.toString();<z>
n)<z>
;<z>
Z = 0;<z>
(byte) (n / 4);<z>
);<z>
= new HoloSpeaker[n];<z>
; i++)<z>
);<z>
();<z>
));<z>
incNdata();<z>
));<z>
);<z>
calcFromByte(fluxFichier2.readByte());<z>
1);<z>
e)<z>
.println("catch7z : " + e);<z>
, SystemException<z>
println("TheatreParticipantAT.rollback");<z>
));<z>
(txID);<z>
(success)<z>
().addMessage("Theatre booking cancelled\n");<z>
addMessage("Something went wrong (Transaction not registered?)\n");<z>
();<z>
{<z>
size = memoizedSerializedSize;<z>
return size;<z>
size = 0;<z>
(bitField0_ & 0x00000001) == 0x00000001)) {<z>
.protobuf.CodedOutputStream<z>
computeBoolSize(1, enable_);<z>
+= getUnknownFields().getSerializedSize();<z>
memoizedSerializedSize = size;<z>
size;<z>
propertyName) {<z>
.find(Iterators.forArray(methods),<z>
propertyName)),<z>
;<z>
(<z>
String resourcePath224,java.lang.String contentText225<z>
rmi.RemoteException<z>
.ExceptionException<z>
axis2.context.MessageContext _messageContext = null;<z>
.getName());<z>
;<z>
);<z>
;<z>
env = null;<z>
;<z>
.services.UpdateTextContent dummyWrappedType = null;<z>
)),<z>
xml.namespace.QName("http://services.resource.registry.carbon.wso2.org",<z>
)));<z>
env);<z>
_messageContext.setEnvelope(env);<z>
_operationClient.addMessageContext(_messageContext);<z>
true);<z>
AxisFault f){<z>
OMElement faultElt = f.getDetail();<z>
!=null){<z>
){<z>
faultElt.getQName());<z>
.forName(exceptionClassName);<z>
.Exception ex=<z>
Exception) exceptionClass.newInstance();<z>
;<z>
.forName(messageClassName);<z>
,messageClass,null);<z>
getMethod("setFaultMessage",<z>
[]{messageClass});<z>
messageObject});<z>
registry.resource.services.ExceptionException){<z>
;<z>
.getMessage(), ex);<z>
.lang.ClassCastException e){<z>
f;<z>
(java.lang.ClassNotFoundException e) {<z>
;<z>
{<z>
f;<z>
java.lang.reflect.InvocationTargetException e) {<z>
throw f;<z>
{<z>
;<z>
java.lang.InstantiationException e) {<z>
throw f;<z>
{<z>
;<z>
}else{<z>
f;<z>
{<z>
getSender().cleanup(_messageContext);<z>
,<z>
className,<z>
,<z>
String title,<z>
] elements ) {<z>
, bundle);<z>
title = title;<z>
bundle = bundle;<z>
(elements);<z>
public void showGPULimit(){<z>
1];<z>
x,0);<z>
"GL_MAX_VARYING_VECTORS: "+x[0]);<z>
K key, V value) {<z>
.get(key);<z>
if (currentValue == null) {<z>
, value);<z>
currentValue instanceof List) {<z>
;<z>
} else {<z>
new ArrayList<V>();<z>
add((V) currentValue);<z>
value);<z>
valueList);<z>
size++;<z>
) {<z>
.createShadedRelief();<z>
));<z>
null, Double.class));<z>
return srt;<z>
WaybackRequest wbRequest,<z>
,<z>
{<z>
wbRequest.getReplayTimestamp();<z>
.getCaptureTimestamp();<z>
) < resDateStr.length()) {<z>
;<z>
);<z>
public synchronized void processSessionReplication() {<z>
.isTraceEnabled()) {<z>
());<z>
version.incrementAndGet();<z>
();<z>
;<z>
false;<z>
false;<z>
currentTimeMillis();<z>
= false;<z>
{<z>
.fullReplicationWindow = -1;<z>
int type) {<z>
= type;<z>
type == SWITCH_NONE){<z>
setVisible(false);<z>
.setVisible(false);<z>
type == SWITCH_CLOSE){<z>
openImg.setVisible(true);<z>
closeImg.setVisible(false);<z>
{<z>
setVisible(false);<z>
(true);<z>
IShaderProgramFactory shaderProgramFactory) {<z>
new ShaderProgramCreationPanel(shaderProgramFactory);<z>
);<z>
.add(panel);<z>
JPanel initNaam(String s)<z>
JPanel();<z>
));<z>
"Artist name:");<z>
naam.add(Naam);<z>
nametxt = new JTextField(s);<z>
);<z>
.setLabelFor(nametxt);<z>
.add(nametxt);<z>
;<z>
) {<z>
if (StringUtils.isBlank(taxonomyIdOrName)){<z>
null;<z>
) &&<z>
){<z>
throw new CmsException("Use RepositoryUser.getFolksonomy() to retrieve a folskonomy");<z>
ByteArrayOutputStream os = null;<z>
= getSession();<z>
getTaxonomyNodeByIdOrName(session, taxonomyIdOrName);<z>
(taxonomyNode == null){<z>
;<z>
|| ResourceRepresentationType.TAXONOMY_INSTANCE.equals(taxonomyOutput)||<z>
{<z>
cmsRepositoryEntityFactoryForActiveClient.newTaxonomy());<z>
(fetchLevel != null){<z>
(fetchLevel) {<z>
:<z>
();<z>
case FULL:<z>
loadAllChildren(taxonomy.getRootTopics());<z>
taxonomyOutput) ){<z>
(T) taxonomy;<z>
1);<z>
.getResults().add(taxonomy);<z>
;<z>
ResourceRepresentationType.XML.equals(taxonomyOutput)||<z>
.JSON.equals(taxonomyOutput)){<z>
= null;<z>
;<z>
()<z>
.prettyPrint(prettyPrint)<z>
.representationType(taxonomyOutput)<z>
);<z>
, true, serializationConfiguration);<z>
(), "UTF-8");<z>
(T) taxonomy;<z>
"Invalid resource representation type for taxonomy "+taxonomyOutput);<z>
}catch(RepositoryException ex){<z>
new CmsException(ex);<z>
e) {<z>
);<z>
);<z>
throws IOException<z>
Kind.FILE)<z>
new IOException("not a file");<z>
(nfd.getNativeFD());<z>
)<z>
DEFAULT)<z>
hHint);<z>
;<z>
getChildren();<z>
i++)<z>
ws[i];<z>
= false;<z>
))<z>
(!coolBarChildrenExist())<z>
hide = true;<z>
result.y += BAR_SIZE;<z>
(i > 0)<z>
hide = false;<z>
(!hide)<z>
hHint, flushCache);<z>
);<z>
y;<z>
if (wHint != SWT.DEFAULT)<z>
wHint;<z>
SWT.DEFAULT)<z>
result.y = hHint;<z>
result;<z>
) {<z>
(aLatitudeE6, aLongitudeE6);<z>
aDesription;<z>
mID = aID;<z>
;<z>
) {<z>
isRunning()) {<z>
();<z>
+ heartbeatRecheckInterval < now) {<z>
();<z>
lastHeartbeatCheck = now;<z>
)) {<z>
{<z>
DatanodeDescriptor d : datanodes) {<z>
.needKeyUpdate = true;<z>
now;<z>
(Exception e) {<z>
, e);<z>
;<z>
{<z>
drawTicks )<z>
();<z>
.setLineColor( 0 );<z>
( LineFormatRecord.LINE_PATTERN_SOLID );<z>
1 );<z>
r.setAuto( true );<z>
r.setDrawTicks( drawTicks );<z>
.setColourPaletteIndex( (short) 77 );<z>
r;<z>
private void makeSplitStatusPage(String className) throws IOException {<z>
get(className);<z>
PrintWriter outFile = new PrintWriter(<z>
)));<z>
addStandardHtmlProlog(outFile, "Split point status for " + className,<z>
;<z>
;<z>
.containsKey(className)) {<z>
null) {<z>
outFile.println("<p>Some code is included in the initial fragment (<a href=\""<z>
"initial", packageName)<z>
);<z>
} else {<z>
);<z>
(int sp : splitPointsWithClass(className)) {<z>
+ sp + ": "<z>
) + "</p>");<z>
{<z>
;<z>
packageName, outFile);<z>
(outFile);<z>
close();<z>
getPrimaryColor() {<z>
Color temp = new Color(<z>
.getColor().getR(),<z>
().getG(),<z>
),<z>
(byte) 0xFF<z>
;<z>
{<z>
name.startsWith("org.kohsuke")<z>
("org.apache.maven")<z>
|| name.startsWith("org.sonatype")<z>
|| name.startsWith("org.cyberneko")<z>
|| name.startsWith("org.codehaus.plexus"))<z>
ClassNotFoundException(name);<z>
(name, resolve);<z>
) {<z>
;<z>
(element == null) {<z>
return null;<z>
= createPendingUpdateAdapter();<z>
(parent, element, placeholder);<z>
return new Object[] { placeholder };<z>
)<z>
File zipFile = null;<z>
: files)<z>
".zip"))<z>
zipFile = f;<z>
zipFile != null)<z>
());<z>
files)<z>
.getName());<z>
IllegalArgumentException {<z>
)<z>
);<z>
guid);<z>
()<z>
);<z>
);<z>
, 2, 6, "px" );<z>
.steps, 0 );<z>
;<z>
, 0, 6, "px" );<z>
( "Feature Descriptor:" );<z>
"feature_descriptor_size :", 8, 0 );<z>
fdBins, 0 );<z>
.addNumericField( "closest/next_closest_ratio :", rod, 2 );<z>
addMessage( "Geometric Consensus Filter:" );<z>
"px" );<z>
.addNumericField( "inlier_ratio :", minInlierRatio, 2 );<z>
featuresModelIndex ] );<z>
);<z>
, registrationModelStrings, registrationModelStrings[ registrationModelIndex ] );<z>
interpolate );<z>
.showDialog();<z>
wasCanceled())<z>
;<z>
= (float) gd.getNextNumber();<z>
int) gd.getNextNumber();<z>
gd.getNextNumber();<z>
);<z>
= (int) gd.getNextNumber();<z>
;<z>
gd.getNextNumber();<z>
float) gd.getNextNumber();<z>
float) gd.getNextNumber();<z>
featuresModelIndex = gd.getNextChoiceIndex();<z>
gd.getNextChoiceIndex();<z>
interpolate = gd.getNextBoolean();<z>
ELASTIC)<z>
elastic_param.showDialog())<z>
;<z>
;<z>
instance___rmul__(PyObject o) {<z>
Object ctmp = __coerce_ex__(o);<z>
Py.None)<z>
);<z>
[])ctmp)[0];<z>
[])ctmp)[1];<z>
) {<z>
);<z>
getThreadState();<z>
())<z>
);<z>
o1);<z>
{<z>
ts.recursion_depth;<z>
) throws Exception {<z>
;<z>
();<z>
secret_access_key);<z>
) > 0) {<z>
listAllMyBuckets(null);<z>
.entries;<z>
if(buckets != null) {<z>
;<z>
{<z>
Bucket) {<z>
Bucket)tmp;<z>
startsWith(prefix)) {<z>
.name;<z>
;<z>
if(!found) {<z>
();<z>
if(usingPreSignedUrls()) {<z>
);<z>
.getBucket();<z>
)) {<z>
;<z>
addShutdownHook(new Thread() {<z>
) {<z>
local_addr);<z>
});<z>
(String href, String base) throws TransformerException<z>
=<z>
(TransformInfoHttpStoreInterface) parentTransformInfoInterface;<z>
new AbFilePath(<z>
+ FREEBLISKET_PATH_GLOBALS.getInstance().XSLPATH +<z>
() +<z>
.SEPARATOR + href);<z>
config.type.LogConfigTypes.LOGGING.contains(<z>
.XMLLOGGING))<z>
.getInstance(<z>
href +<z>
+ base +<z>
"\nNew path= " + fileAbPath.toString() +<z>
FREEBLISKET_PATH_GLOBALS.getInstance().XSLPATH + " is a urlglobal" +<z>
basicURIResolver.getExtension(),<z>
);<z>
StreamSource(new CryptFileReader(<z>
getInstance().UNCRYPTED_EXTENSION,<z>
.ENCRYPTED_EXTENSION).getInputStream(fileAbPath));<z>
TransformerException e)<z>
;<z>
)<z>
throw new TransformerException(e);<z>
{<z>
(m_options == null) {<z>
DHtmlCollection.OPTION);<z>
;<z>
void clear() {<z>
) {<z>
.clearLog();<z>
throws SQLException {<z>
synchronized (connection_) {<z>
{<z>
(this, "setPoolable", poolable);<z>
;<z>
poolable;<z>
{<z>
se.getSQLException();<z>
args) throws Throwable<z>
();<z>
.getParameterTypes();<z>
equals(Object.class))<z>
= args[0];<z>
isProxyClass(value.getClass()))<z>
Boolean.FALSE;<z>
) Proxy.getInvocationHandler(value);<z>
(handler._factory);<z>
"hashCode") && params.length == 0)<z>
;<z>
params.length == 0)<z>
) + "]";<z>
openSession();<z>
);<z>
MILLISECONDS) : response.get();<z>
(MessageProperties.class);<z>
.getContentEncoding());<z>
in;<z>
);<z>
{<z>
(is, new Inflater(true));<z>
read();<z>
'H')<z>
);<z>
();<z>
(is);<z>
));<z>
)<z>
.read();<z>
= is.read();<z>
in = _factory.getHessianInput(is);<z>
in.startReplyBody();<z>
);<z>
in.completeReply();<z>
;<z>
(char) code + "' is an unknown code");<z>
)<z>
throw new HessianRuntimeException(e);<z>
.close();<z>
();<z>
String getOrganizerUTF8()<z>
String xyz = "";<z>
null != organizer)<z>
"UTF-8"));<z>
(UnsupportedEncodingException e)<z>
printStackTrace();<z>
return xyz;<z>
) {<z>
== null) {<z>
initializeMarkupLanguages();<z>
.lastIndexOf('.');<z>
lastIndexOfDot + 1);<z>
languageClass = languageByFileExtension.get(extension);<z>
!= null) {<z>
get(languageClass);<z>
null;<z>
Editable s) {<z>
s.length() == 0)<z>
);<z>
(String groupName) throws NativeAccessException {<z>
;<z>
catch (Throwable exc) {<z>
+ exc.getLocalizedMessage());<z>
)<z>
null)<z>
doLogin(packet1login);<z>
null;<z>
(loginTimer++ == 600)<z>
kickUser("Took too long to log in");<z>
.processReadPackets();<z>
boolean check_scope) throws Exception {<z>
)<z>
throw new NullPointerException("Property value cannot be null");<z>
(propertyFieldType)) {<z>
Boolean.parseBoolean(propertyValue);<z>
{<z>
);<z>
.equals(propertyFieldType)) {<z>
.readBytesLong(propertyValue);<z>
)) {<z>
Byte.parseByte(propertyValue);<z>
TYPE.equals(propertyFieldType)) {<z>
Util.readBytesDouble(propertyValue);<z>
TYPE.equals(propertyFieldType)) {<z>
);<z>
.equals(propertyFieldType)) {<z>
.parseFloat(propertyValue);<z>
propertyFieldType)) {<z>
=null;<z>
;<z>
toUpperCase());<z>
Throwable ex) {<z>
null)<z>
=Util.getAddress(addr_scope);<z>
propertyValue);<z>
.IPv6) {<z>
tmp=prefix + propertyValue;<z>
;<z>
;<z>
isLinkLocalAddress()) {<z>
Inet6Address)retval;<z>
getScopeId();<z>
scope == 0) {<z>
;<z>
) {<z>
=ret;<z>
return retval;<z>
propertyValue;<z>
player)<z>
player) < 1)<z>
;<z>
;<z>
)<z>
== null)<z>
<MessageProcessor>();<z>
;<z>
length) {<z>
));<z>
16));<z>
8));<z>
);<z>
{<z>
new javax.swing.JPanel();<z>
new javax.swing.JPanel();<z>
();<z>
();<z>
= new javax.swing.JButton();<z>
= new javax.swing.JSeparator();<z>
= new javax.swing.JButton();<z>
swing.JButton();<z>
;<z>
= new javax.swing.JTable();<z>
javax.swing.JPanel();<z>
= new javax.swing.JScrollPane();<z>
javax.swing.JTextArea();<z>
.CardLayout());<z>
(jPanel3, "card4");<z>
.BorderLayout());<z>
;<z>
);<z>
);<z>
("jButton2");<z>
jButton2);<z>
javax.swing.SwingConstants.VERTICAL);<z>
);<z>
jButton3.setText("jButton3");<z>
add(jButton3);<z>
;<z>
;<z>
awt.BorderLayout.NORTH);<z>
setViewportView(m_jTableResult);<z>
;<z>
, "resultset");<z>
.BorderLayout());<z>
);<z>
setViewportView(m_txtResulltText);<z>
);<z>
"updatecount");<z>
public static void filter() throws Throwable {<z>
"[SecureCAS]: CAS Filter for URL -> " + request.url);<z>
("username")) {<z>
controllerCheck = getControllerInheritedAnnotation(Check.class);<z>
if (controllerCheck != null) {<z>
(controllerCheck);<z>
;<z>
!= null) {<z>
);<z>
("[SecureCAS]: user is not authenticated");<z>
;<z>
String casLoginUrl = CASUtils.getCasLoginUrl(true);<z>
redirect(casLoginUrl);<z>
final TableColumn column, final int index) {<z>
SelectionAdapter selectionAdapter = new SelectionAdapter() {<z>
(SelectionEvent e) {<z>
;<z>
);<z>
.getTable().setSortDirection(dir);<z>
getTable().setSortColumn(column);<z>
resultsViewer.refresh();<z>
return selectionAdapter;<z>
org.apache.thrift.TException {<z>
, 0));<z>
);<z>
;<z>
(gets);<z>
;<z>
);<z>
,<z>
dependent) {<z>
;<z>
METHOD_INSN) return false;<z>
MethodInsnNode mi = (MethodInsnNode) insn;<z>
;<z>
.getArgumentTypes(mi.desc);<z>
;<z>
(argIndex < argTypes.length);<z>
argIndex].getInternalName());<z>
start() {<z>
pendingPresences.addAll(presences);<z>
); i++) {<z>
)) {<z>
) {<z>
null) {<z>
(<z>
);<z>
m_historyProperties;<z>
propertyChange(PropertyChangeEvent evt) {<z>
() instanceof ListModel) {<z>
).removeListDataListener(this);<z>
.getNewValue() instanceof ListModel) {<z>
;<z>
).addListDataListener(this);<z>
){<z>
hits++;<z>
;<z>
;<z>
onPrepareDialogBuilder(AlertDialog.Builder builder)<z>
.OnKeyListener()<z>
keyCode, KeyEvent event)<z>
.canUseKey(keyCode))<z>
= keyCode;<z>
;<z>
if (shouldPersist()) {<z>
(mValue);<z>
().dismiss();<z>
return true;<z>
;<z>
});<z>
final String query ) throws SQLException {<z>
= null;<z>
= null;<z>
sql = createQuery( query );<z>
.prepare( sql );<z>
();<z>
rs );<z>
);<z>
close( st );<z>
private void add(IStructuredSelection selection) {<z>
();<z>
if (libs == null)<z>
);<z>
.initialize(this.getHomeDirectory(), fDialog<z>
;<z>
();<z>
<String> getInputExtensionsAttribute() {<z>
size() == 0) ) {<z>
(getSuperClass() != null) {<z>
();<z>
{<z>
String>();<z>
;<z>
double r, double mu, double sigma) {<z>
6.2831853071795862D) * sigma);<z>
sigma;<z>
z * z);<z>
nv;<z>
input) {<z>
if (input != null) {<z>
;<z>
.replaceAll("\n", " ");<z>
;<z>
return input;<z>
jj_3_4() {<z>
) return true;<z>
;<z>
;<z>
xsp = jj_scanpos;<z>
(jj_scan_token(65)) {<z>
xsp;<z>
(jj_scan_token(64)) return true;<z>
false;<z>
author, String date) throws IOException {<z>
File(markdownFilePath);<z>
FileUtils.readFileToString(markdownFile);<z>
+ markdownFileString;<z>
);<z>
markdownFile, markdownFileString);<z>
.out.println("Saving file...");<z>
templateId) throws SystemException {<z>
journalTemplate : findByTemplateId(templateId)) {<z>
);<z>
height, int arcWidth, int arcHeight)<z>
(width / 2);<z>
(height / 2);<z>
2;<z>
int b = arcHeight / 2;<z>
) - (arcWidth / 2);<z>
);<z>
int xDiff = arcWidth / 2;<z>
yDiff = arcHeight / 2;<z>
- yDiff);<z>
height - yDiff);<z>
, width - xDiff, y);<z>
, height);<z>
= 0, yyy = b;<z>
, b2 = b * b;<z>
b2);<z>
+ a2);<z>
2);<z>
t = -a2 * yyy;<z>
* a2 * yyy;<z>
a2;<z>
yyy >= 0 && xxx <= a)<z>
;<z>
0)<z>
yc - yyy - translateY);<z>
xxx != 0 && yyy != 0)<z>
- yyy - translateY);<z>
translateY);<z>
(t + b2 * xxx <= crit1 ||<z>
+ a2 * yyy <= crit3)<z>
++;<z>
+= d2xt;<z>
t += dxt;<z>
a2 * yyy > crit2)<z>
yyy--;<z>
+= d2yt;<z>
+= dyt;<z>
xxx++;<z>
+= d2xt;<z>
+= dxt;<z>
yyy--;<z>
dyt += d2yt;<z>
+= dyt;<z>
String parameterName, String parameterValue )<z>
() == null )<z>
);<z>
;<z>
arg == null )<z>
parameterName<z>
serviceAction.getInputActionArguments() );<z>
(); i.hasNext(); )<z>
();<z>
parameterName ) )<z>
.value = parameterValue;<z>
return this;<z>
container = new InputParamContainer();<z>
container.name = parameterName;<z>
= parameterValue;<z>
.add( container );<z>
;<z>
evt) {<z>
"");<z>
);<z>
.setEditable(false);<z>
);<z>
)<z>
);<z>
Layers getLayers(VerificationResult target) {<z>
if (target == null) {<z>
new IllegalArgumentException("Verification result cannot be null.");<z>
(target.size() == 0) {<z>
throw new IllegalArgumentException("Verification result is empty.");<z>
new LayersComputation(target).getResult();<z>
IStrategoTerm invoke(Context context, IStrategoTerm term)<z>
= context.getFactory();<z>
= term;<z>
.getConstructor() : null;<z>
if(cons4 == extraction._consPureDesugaring_1)<z>
null;<z>
0);<z>
)extraction.constNil0)})});<z>
if(true)<z>
;<z>
;<z>
== extraction._consInjectDesugaring_4)<z>
IStrategoTerm d_16 = null;<z>
getSubterm(0);<z>
;<z>
Fail20;<z>
if(true)<z>
;<z>
;<z>
;<z>
null;<z>
Document openXMLFile(File f){<z>
SAXBuilder();<z>
(f);<z>
;<z>
ex){<z>
;<z>
;<z>
return null;<z>
() {<z>
);<z>
2));<z>
, AbstractDataset.FLOAT64));<z>
data);<z>
).doubleValue()/2;<z>
;<z>
0).doubleValue());<z>
/200.0);<z>
scale;<z>
result;<z>
String getRegistryID(Employee employee) {<z>
employee;<z>
) != null) {<z>
getRegularDetail().getRegistryID();<z>
return null;<z>
( String file )<z>
verifyExpectedResult( file, false );<z>
( VerificationException e )<z>
.getMessage() );<z>
String getImage( final int effectId )<z>
String imageName = EffectDatabase.getImageName( effectId );<z>
;<z>
public SimpleFeature next() throws DataStoreRuntimeException {<z>
{<z>
return inserter.next();<z>
);<z>
) {<z>
)<z>
getLastHeartBeat();<z>
{<z>
.instance()<z>
.warn(<z>
time);<z>
);<z>
broadcastPresence(true);<z>
SemanticException<z>
REPEAT_HEADER_PROP, Boolean<z>
.valueOf( value ) );<z>
, boolean persisted, PreferencesHint preferencesHint) {<z>
createShape();<z>
NotationFactory.eINSTANCE.createHintedDiagramLinkStyle());<z>
));<z>
;<z>
persisted);<z>
node.setElement(domainElement);<z>
IPreferenceStore)preferencesHint.getPreferenceStore();<z>
.initForegroundFromPrefs(node, prefStore, "MergeNode");<z>
, "MergeNode");<z>
"MergeNode");<z>
(MergeNodeAppliedStereotypeEditPart.VISUAL_ID));<z>
;<z>
(Location)label5099.getLayoutConstraint();<z>
.setX(0);<z>
(5);<z>
node;<z>
()<z>
)<z>
return false;<z>
true;<z>
containsUserGroup(long pk, long userGroupPK)<z>
throws SystemException {<z>
[] { pk, userGroupPK };<z>
)FinderCacheUtil.getResult(FINDER_PATH_CONTAINS_USERGROUP,<z>
, this);<z>
(value == null) {<z>
,<z>
;<z>
) {<z>
throw processException(e);<z>
null) {<z>
Boolean.FALSE;<z>
FinderCacheUtil.putResult(FINDER_PATH_CONTAINS_USERGROUP,<z>
, value);<z>
return value.booleanValue();<z>
{<z>
{<z>
(observer)) {<z>
observer);<z>
IIOMetadata streamMetadata, IIOImage image,<z>
IOException {<z>
image == null)<z>
throw new IllegalArgumentException("image == null");<z>
image.hasRaster())<z>
("Cannot write rasters");<z>
);<z>
output == null)<z>
);<z>
== null)<z>
param = getDefaultWriteParam();<z>
ImageOutputStream ios = (ImageOutputStream) output;<z>
.getRenderedImage();<z>
(ri instanceof BufferedImage) {<z>
) ri;<z>
;<z>
encode();<z>
{<z>
"Image not of type BufferedImage");<z>
final Element elem)<z>
throws BadLocationException, IOException {<z>
true;<z>
text(elem);<z>
;<z>
obj) {<z>
if (!(obj instanceof SearchCriteria)) {<z>
false;<z>
other = (SearchCriteria) obj;<z>
.equals(other.getValue());<z>
value) {<z>
(key);<z>
) {<z>
(key, value);<z>
.contains(value)) {<z>
(key,<z>
"CONFIG_LIST_SEPARATOR") + value);<z>
throws Exception {<z>
);<z>
();<z>
stop();<z>
) throws FOPException {<z>
.setLayoutMasterSet(this);<z>
HashMap<String, SimplePageMaster>();<z>
PageSequenceMaster>();<z>
mergeContext) throws DeploymentException {<z>
bundle = mergeContext.getBundle();<z>
webApp.getServlet()) {<z>
)) {<z>
servlet.getServletClass();<z>
servletClassName);<z>
) {<z>
(ServletSecurity.class);<z>
(servletSecurity == null) {<z>
.httpMethodConstraints().length > 0) {<z>
) {<z>
);<z>
) {<z>
"HTTP protocol method could not be null or empty string in the ServletSecurity annotation of the class " + servletClassName);<z>
= httpMethod.trim();<z>
WebDeploymentValidationUtils.isValidHTTPMethod(httpMethod)) {<z>
+ servletClassName);<z>
{<z>
);<z>
EmptyRoleSemantic.DENY)) {<z>
new DeploymentException("EmptyRoleSemantic with value DENY is not allowed in combination with a non-empty rolesAllowed list in the class " + servletClassName);<z>
catch (ClassNotFoundException e) {<z>
);<z>
void onEvtCancel()<z>
= null;<z>
.onEvtCancel();<z>
{<z>
for(SpoutPlayer p : players) {<z>
ExtraFurnaces.guimap.get(p);<z>
;<z>
) {<z>
.clearContents(i + 36, false);<z>
false);<z>
(InsertColumnEvent<BaseColumn, DTCellValue52> event) {<z>
);<z>
();<z>
allColumns = event.getColumns();<z>
= event.getColumnsData();<z>
.size(); iCol++ ) {<z>
iCol );<z>
.get( iCol );<z>
dc = new DynamicColumn<BaseColumn>( column,<z>
,<z>
eventBus );<z>
!column.isHideColumn() );<z>
cellValueFactory.convertColumnData( column,<z>
;<z>
columns.add( dc );<z>
.add( dcd );<z>
new InsertInternalDecisionTableColumnEvent( columns,<z>
,<z>
.redraw() );<z>
ice );<z>
) ) {<z>
scheduleDeferred( new Command() {<z>
) {<z>
);<z>
} );<z>
) {<z>
.session<z>
.createCriteria(ListaDeExercicios.class)<z>
"turma", turma)).list();<z>
return listaDeExercicios;<z>
final List<Entity> orderedProducts) {<z>
>();<z>
orderedProducts);<z>
;<z>
DDetails add(<z>
eventType,<z>
func)<z>
) ;<z>
this ;<z>
boolean canEditModelObject( Object object ) {<z>
!= null) {<z>
; iter.hasNext();) {<z>
;<z>
canEdit(object, getActiveEditor())) {<z>
;<z>
false;<z>
getConfigHashKey()<z>
+<z>
monitoringTypesString + ":" +<z>
();<z>
out)<z>
("# Part 3 - hole list");<z>
out.println("0");<z>
;<z>
out.println("0");<z>
, FXDigitalOptionSecurity object) {<z>
deserializer, msg, object);<z>
);<z>
.class, CALL_CURRENCY_FIELD_NAME));<z>
.hasField(PAYMENT_CURRENCY_FIELD_NAME)) {<z>
getValue(Currency.class, PAYMENT_CURRENCY_FIELD_NAME));<z>
} else {<z>
warn("Found old version of FXDigitalOption, setting payment currency to put currency - this should not happen, report to support@opengamma.com");<z>
());<z>
(msg.getDouble(PUT_AMOUNT_FIELD_NAME));<z>
(CALL_AMOUNT_FIELD_NAME));<z>
, msg.getMessage(EXPIRY_FIELD_NAME)));<z>
));<z>
);<z>
int position, View convertView, ViewGroup viewGroup) {<z>
;<z>
= getItem(position);<z>
) {<z>
(sourceItemLayoutResource, null);<z>
else {<z>
(ViewGroup) convertView;<z>
);<z>
CENTER_CROP);<z>
.CENTER_CROP);<z>
)) {<z>
);<z>
;<z>
isSmallScreen()) {<z>
sourceImageView.setDefaultHeight(120);<z>
;<z>
{<z>
;<z>
());<z>
sourceImageView.loadImage();<z>
(Exception e) {<z>
(), e);<z>
setSourceItemView(sourceItemView);<z>
;<z>
sourceItemView;<z>
void setupExtendedCommand() {<z>
SharedData.getInstance();<z>
;<z>
true);<z>
("mkdir -p /cache/recovery/\n");<z>
sdata.addRecoveryMessage("echo 'boot-recovery' >/cache/recovery/command\n");<z>
"echo 'print ROM Updater by elegos' > /cache/recovery/extendedcommand\n");<z>
;<z>
;<z>
RecognitionException {<z>
stackSize = keepStackSize();<z>
);<z>
rule__XThrowExpression__Group__1__Impl();<z>
_fsp--;<z>
;<z>
;<z>
();<z>
state._fsp--;<z>
.failed) return ;<z>
{<z>
);<z>
input,re);<z>
);<z>
) {<z>
x;<z>
_lY = y;<z>
= z;<z>
= _lX * _lY * _lZ;<z>
byte[_size];<z>
{<z>
) {<z>
return null;<z>
alias =<z>
properties.getProperty("org.apache.ws.security.crypto.merlin.keystore.alias");<z>
(alias != null) {<z>
= alias.trim();<z>
;<z>
value)<z>
return 0;<z>
return 16256;<z>
;<z>
public ProjectListBuilder(final Project project,<z>
panel,<z>
AbstractTreeStructure treeStructure,<z>
comparator,<z>
boolean showRoot) {<z>
, treeStructure, comparator, showRoot);<z>
);<z>
;<z>
= new MyPsiTreeChangeListener();<z>
(myPsiTreeChangeListener);<z>
;<z>
getInstance(myProject).addFileStatusListener(myFileStatusListener);<z>
);<z>
);<z>
();<z>
void resetState() {<z>
= 0;<z>
myCurrentScreenY = 0;<z>
= null;<z>
= 0;<z>
;<z>
0;<z>
classes) {<z>
Class[classes.length];<z>
wrappedArguments.length; i++) {<z>
;<z>
(c == null) continue;<z>
isPrimitive()) {<z>
Integer.TYPE) {<z>
c = Integer.class;<z>
(c == Byte.TYPE) {<z>
Byte.class;<z>
.TYPE) {<z>
class;<z>
Double.TYPE) {<z>
;<z>
{<z>
Float.class;<z>
{<z>
class;<z>
] = c;<z>
;<z>
(DirectedGraph g)<z>
);<z>
);<z>
boolean withCurrency) {<z>
price)) {<z>
withCurrency);<z>
formatedPrice);<z>
);<z>
} else {<z>
.setVisibility(View.GONE);<z>
deriving() throws ParseException {<z>
naamList naamList;<z>
naam;<z>
Token firstToken=token;<z>
(2)) {<z>
(DERIVING);<z>
jj_consume_token(LEFT_PAREN);<z>
();<z>
);<z>
firstToken.next,token);}<z>
} else {<z>
jj_ntk():jj_ntk) {<z>
DERIVING:<z>
);<z>
);<z>
}<z>
31] = jj_gen;<z>
-1);<z>
();<z>
"Missing return statement in function");<z>
{<z>
null) {<z>
);<z>
return Collections.unmodifiableList(inputStreams);<z>
(String input) {<z>
= new StringTokenizer(input, " ");<z>
nextToken();<z>
whiteTokens.hasMoreTokens()) {<z>
output += whiteTokens.nextToken();<z>
output;<z>
(MetadataImplementor metadata, AnnotationInstance generator) {<z>
, "name", String.class );<z>
HashMap<String, String>();<z>
PersistentIdentifierGenerator.CATALOG );<z>
SCHEMA );<z>
useNewIdentifierGenerators();<z>
= EnumConversionHelper.generationTypeToGeneratorStrategyName(<z>
,<z>
) {<z>
put( TableGenerator.CONFIG_PREFER_SEGMENT_PER_ENTITY, "true" );<z>
"table", parameterMap, TableGenerator.TABLE_PARAM );<z>
.SEGMENT_COLUMN_PARAM );<z>
;<z>
, "valueColumnName", parameterMap, TableGenerator.VALUE_COLUMN_PARAM );<z>
parameterMap.put(<z>
.INCREMENT_PARAM,<z>
.class ) )<z>
.put(<z>
,<z>
.class ) + 1 )<z>
, parameterMap, MultipleHiLoPerTableGenerator.ID_TABLE );<z>
;<z>
);<z>
;<z>
parameterMap.put(<z>
MAX_LO,<z>
.class ) - 1 )<z>
> 0 ) {<z>
);<z>
name, strategy, parameterMap ) );<z>
( "Add table generator with name: %s", name );<z>
() {<z>
.launch4j.config.Msg();<z>
.setStartupErr(startupErr);<z>
ret.setBundledJreErr(bundledJreErr);<z>
setJreVersionErr(jreVersionErr);<z>
(launcherErr);<z>
);<z>
;<z>
String[] args)<z>
;<z>
return this;<z>
)<z>
"コマンドライン引数が不正です。", x);<z>
name,<z>
Contact> contacts,<z>
{<z>
;<z>
new ImpsContactListAddress(selfAddress, name);<z>
,<z>
;<z>
,<z>
);<z>
AsyncTransaction tx = new AsyncTransaction(mTransactionManager) {<z>
) {<z>
ERROR_CREATING_LIST,<z>
;<z>
response) {<z>
notifyContactListCreated(list);<z>
usePrensencePolling()) {<z>
;<z>
} else {<z>
(list, null);<z>
;<z>
index, IEObjectConsumer inst) {<z>
index) {<z>
this, 0, inst);<z>
null;<z>
IOException {<z>
!=null)<z>
started();<z>
)<z>
);<z>
(name));<z>
;<z>
Throwable e) {<z>
);<z>
;<z>
if(listener!=null)<z>
();<z>
resource) {<z>
(null == resources) {<z>
PrivacyPolicyResourceForm.class);<z>
this.resources.add(resource);<z>
int featureID)<z>
switch (featureID)<z>
case HiddentokenmergertestPackage.SINGLE_REF__OBJ:<z>
null;<z>
case HiddentokenmergertestPackage.SINGLE_REF__REF:<z>
return ref != null;<z>
eIsSet(featureID);<z>
BasePatrolAI(Hashtable hashtable,<z>
ownerLayerInterface, GameInput gameInput)<z>
super(ownerLayerInterface, gameInput);<z>
.MAX_DISTANCE);<z>
;<z>
{<z>
(decode_ready)<z>
;<z>
vd.synthesis_init(vi[0]);<z>
init(vd);<z>
;<z>
;<z>
portletResponse) {<z>
portletResponseImpl =<z>
portletResponse;<z>
.model.Portlet portlet =<z>
portletResponseImpl.getPortlet();<z>
);<z>
)<z>
= getPropertyFromSet<z>
.AUTHENTICATION_PROVIDER_PARAMETER<z>
;<z>
.model.DLFileEntry deleteDLFileEntry(<z>
portlet.documentlibrary.model.DLFileEntry dlFileEntry)<z>
liferay.portal.kernel.exception.SystemException {<z>
dlFileEntry);<z>
) throws IOException {<z>
hashedKey.arrayOffset()<z>
+ hashedKey.position());<z>
) {<z>
();<z>
;<z>
[thisPrefix] = numBytesWritten;<z>
+ keyHashSize > uncompressedBuffer.length) {<z>
throw new IOException("Out of room to write to uncompressed buffer for block "<z>
16)<z>
.length<z>
numEntriesInBlock);<z>
hashedKey.array().length) {<z>
("Need to copy " + keyHashSize<z>
hashedKey.arrayOffset()<z>
+ hashedKey.position() + ", num entries written in block: "<z>
;<z>
), hashedKey.arrayOffset()<z>
), uncompressedBuffer, uncompressedOffset, keyHashSize);<z>
position(), uncompressedBuffer, uncompressedOffset<z>
;<z>
uncompressedOffset += keyHashSize + valueSize;<z>
;<z>
getHeaderMetadata() {<z>
();<z>
);<z>
("team-a", info.getTeamA());<z>
;<z>
.getMaps());<z>
return ex;<z>
typeName) {<z>
format("The proxy type %s must be annotated with %s, %s, or %s", typeName,<z>
), JsonRpcProxy.class<z>
getSimpleName());<z>
( Object[] selection ) {<z>
= null;<z>
) {<z>
] instanceof IContainer) {<z>
)) {<z>
.PLUGIN_ID, 0, CLOSED_PROJECT_MESSAGE, null);<z>
) {<z>
[0]);<z>
else {<z>
fileNameText.getText());<z>
MODEL_PROJECT_MESSAGE, null);<z>
} else {<z>
, fileNameText.getText());<z>
.PLUGIN_ID, 0, FOLDER_MESSAGE, null);<z>
} else {<z>
null);<z>
.getSeverity() == IStatus.ERROR) {<z>
new StringNameValidator(null);<z>
);<z>
))) {<z>
));<z>
result;<z>
Map<String, String> attributes)<z>
);<z>
, attributes);<z>
(Job job,<z>
, MasterConfig config)<z>
false;<z>
, TimeUnit.MINUTES);<z>
= false;<z>
gotIt)<z>
= mergeResults.size();<z>
.currentTimeMillis();<z>
if (config.getSaveTmpResultToFile()) {<z>
> 0) {<z>
= true;<z>
size += 1;<z>
("unchecked")<z>
HashMap[size];<z>
(flag)<z>
[0] = job.getJobResult();<z>
String, Object>> r : mergeResults) {<z>
size -= 1;<z>
r;<z>
StringBuilder(<z>
getJobName())<z>
(size)<z>
append(", total merged count: ")<z>
toString());<z>
);<z>
new StringBuilder(<z>
job.getJobName())<z>
(",once merge consume : ")<z>
() - beg)<z>
));<z>
;<z>
;<z>
error("can't got trunk to load recover data.");<z>
catch(InterruptedException ex)<z>
(gotIt)<z>
);<z>
return gotIt;<z>
final void mT__19() throws RecognitionException {<z>
_type = T__19;<z>
DEFAULT_TOKEN_CHANNEL;<z>
("depends");<z>
_type;<z>
state.channel = _channel;<z>
IFile createPropsFileForImplProjects(IProject implProject,<z>
, String consumerId,<z>
IProgressMonitor monitor)<z>
CoreException {<z>
getConsumerPropertiesFile(implProject);<z>
;<z>
) {<z>
= SOAConsumerUtil.loadConsumerProperties(implProject);<z>
.setProperty(SOAProjectConstants.PROPS_KEY_CLIENT_NAME, clientName);<z>
consumerId != null ? consumerId : "";<z>
.setProperty(SOAProjectConstants.PROPS_KEY_CONSUMER_ID, consumerID);<z>
setProperty(SOAProjectConstants.PROPS_KEY_SCPP_VERSION,<z>
PROPS_DEFAULT_SCPP_VERSION);<z>
.PROPS_ENV_MAPPER) == false) {<z>
configReg =<z>
).getActiveRepositorySystem()<z>
);<z>
())) {<z>
.setProperty(SOAProjectConstants.PROPS_ENV_MAPPER,<z>
getEnvironmentMapperImpl());<z>
properties<z>
== false<z>
properties<z>
) == true) {<z>
.setProperty(<z>
,<z>
FALSE.toString());<z>
properties, monitor);<z>
;<z>
(BuildSettings settings) {<z>
= settings.getProjectWorkDir();<z>
(projectWorkDir != null) {<z>
new FilenameFilter() {<z>
) {<z>
.endsWith(".resolve");<z>
;<z>
if (files != null) {<z>
for (File file : files) {<z>
.delete();<z>
IOException {<z>
) {<z>
throw new NullPointerException("Path to redirect is null");<z>
);<z>
, true);<z>
{<z>
= getResourceResponse();<z>
;<z>
;<z>
PartialResponseWriter partialResponseWriter;<z>
.getResponseWriter();<z>
if (responseWriter instanceof PartialResponseWriter) {<z>
PartialResponseWriter) responseWriter;<z>
} else {<z>
);<z>
.startDocument();<z>
url);<z>
.endDocument();<z>
facesContext.responseComplete();<z>
} else {<z>
UnsupportedEncodingException(<z>
"Can only redirect during RESOURCE_PHASE if a JSF partial/Ajax request has been triggered");<z>
, Entity par5Entity)<z>
(par1World.isRemote)<z>
, par4);<z>
& 8) != 0)<z>
par4, i);<z>
{<z>
File(testSrc, "WsCompileExample.java"));<z>
= new File(testClasses, "lib");<z>
);<z>
new File("test"));<z>
= new ArrayList();<z>
);<z>
"JarPointer.jar"), arList, testClasses);<z>
= {<z>
, ".",<z>
).replace('\\', '/'),<z>
.replace('\\', '/')<z>
);<z>
.compile(args1) != 0) {<z>
new AssertionError("Failure in first compile!");<z>
err.println("Second compile!!!");<z>
String[] {<z>
"-d", ".",<z>
),<z>
getPath().replace('\\', '/')<z>
!= 0) {<z>
;<z>
public TranslationTransform( final long[] translation )<z>
translation.length );<z>
= translation.clone();<z>
this.inverse = new InverseTranslationTransform( numTargetDimensions );<z>
public JSplitPane(int newOrientation,<z>
Component newLeftComponent,<z>
){<z>
(newOrientation,<z>
.getBoolean("SplitPane.continuousLayout"),<z>
newLeftComponent, newRightComponent);<z>
public boolean contains( Object o )<z>
);<z>
powerOfTenVelocity, int location, int direction,<z>
) throws Exception<z>
, 62, 2, basicColor);<z>
.maxVelocity = powerOfTenVelocity;<z>
;<z>
;<z>
this.getCharWidth();<z>
public void rollback() {<z>
()) {<z>
.rollback(transaction);<z>
public boolean saveTournament(File file) {<z>
;<z>
;<z>
) {<z>
return false;<z>
toString() {<z>
.format(<z>
;<z>
double getScale()<z>
getValue(AVKey.MAP_SCALE);<z>
: 1;<z>
void setRange (final Range range) {<z>
;<z>
start_position;<z>
int end_position;<z>
).isForwardFeature ()) {<z>
start_position = range.getStart ();<z>
getEnd ();<z>
{<z>
getEnd ();<z>
);<z>
);<z>
{<z>
);<z>
else {<z>
(this);<z>
.setRawPosition (start_position);<z>
end == null) {<z>
.makeMarkerFromRawPosition (end_position);<z>
} else {<z>
removeMarkerChangeListener (this);<z>
end_position);<z>
e) {<z>
getFeature().getIDString()+ " internal error - " +<z>
start_position);<z>
addMarkerChangeListener (this);<z>
this);<z>
{<z>
_HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE) {<z>
.class.getName());<z>
.class.getName());<z>
);<z>
FINDER_CLASS_NAME_LIST);<z>
BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat,<z>
{<z>
super(BLOOM_CODEC_NAME);<z>
delegatePostingsFormat = delegatePostingsFormat;<z>
= bloomFilterFactory;<z>
float failureRate() {<z>
total=0;<z>
_rollover ? HISTORY_SIZE : _index);i++)<z>
[i];<z>
.isDebugEnabled()) {<z>
_index+<z>
_rollover+<z>
total+<z>
_index)));<z>
HISTORY_SIZE : _index));<z>
y) {<z>
final InsetsImmutable _insets = getInsets();<z>
getLeftWidth() ;<z>
_insets.getTopHeight() ;<z>
y);<z>
pkg) {<z>
instanceof SamplePackage) {<z>
= (SamplePackage)pkg;<z>
.equals(this.getVersion());<z>
false;<z>
onStop()<z>
);<z>
;<z>
> actions) {<z>
= new ArrayList<Action>();<z>
!= null) {<z>
sortedActions.addAll(actions);<z>
sort(sortedActions);<z>
sortedActions;<z>
checkAccess(Job job) {<z>
);<z>
= null;<z>
null) {<z>
);<z>
checkAccess(callerUGI, JobACL.VIEW_JOB)) {<z>
;<z>
;<z>
double handle1Y, double handle2X,<z>
{<z>
handle2Y,<z>
, toY);<z>
{<z>
configuration.getProperty(SOLR_URL_PROP_KEY);<z>
if(url == null){<z>
);<z>
);<z>
.format("Trying to access Solr-Server at URL: %s", url));<z>
= server.ping();<z>
toString()));<z>
Solr.server = server;<z>
) {<z>
);<z>
) {<z>
field) {<z>
:<z>
getColumn_parent();<z>
case PREDICATE:<z>
return getPredicate();<z>
RANGE:<z>
();<z>
CONSISTENCY_LEVEL:<z>
();<z>
();<z>
) {<z>
new XDialogPeer(target);<z>
(target, peer);<z>
;<z>
addRequestHandlerClass(String command,<z>
? extends RequestHandler> handler, boolean silent) {<z>
command.charAt(0) == '/')<z>
= command.substring(1);<z>
command;<z>
commandWithSlash) != null) {<z>
System.out.println("RemoteControl: ignoring duplicate command " + command<z>
());<z>
else {<z>
(!silent) {<z>
System.out.println("RemoteControl: adding command \"" +<z>
) + ")");<z>
;<z>
phaseInDegrees, float lowestDegree)<z>
retVal = phaseInDegrees;<z>
lowestDegree)<z>
)<z>
retVal += 360.0f;<z>
else if (retVal>=lowestDegree+360.0f)<z>
retVal>=lowestDegree+360.0f)<z>
-= 360.0f;<z>
return retVal;<z>
resources, IReorgQueries queries) throws CoreException {<z>
.ReadOnlyResourceFinder_0;<z>
RefactoringCoreMessages.ReadOnlyResourceFinder_1;<z>
question, modelElements, resources, queries);<z>
code, AbstractPattern listPattern) {<z>
code;<z>
&& listPattern != null) {<z>
();<z>
listPattern.copyPosition();<z>
= listPattern;<z>
initializeReportService( ) throws BirtException<z>
!reportServiceInitialized )<z>
(<z>
( ), null );<z>
true;<z>
() {<z>
, proxyHost);<z>
, proxyPort);<z>
"http.nonProxyHosts", nonProxyHosts);<z>
);<z>
truststorePass);<z>
, KeyEvent event) {<z>
();<z>
)) {<z>
true;<z>
return false;<z>
webView = getCurrentTopWebView();<z>
;<z>
null) return false;<z>
.META_CTRL_ON);<z>
hasModifiers(KeyEvent.META_SHIFT_ON);<z>
switch(keyCode) {<z>
:<z>
isCtrlPressed()) {<z>
{<z>
(getPrevTab());<z>
{<z>
());<z>
return true;<z>
KeyEvent.KEYCODE_SPACE:<z>
{<z>
);<z>
) {<z>
;<z>
return true;<z>
.KEYCODE_BACK:<z>
(!noModifiers) break;<z>
;<z>
return true;<z>
:<z>
if (!noModifiers) break;<z>
;<z>
true;<z>
KEYCODE_DPAD_LEFT:<z>
ctrl) {<z>
goBack();<z>
;<z>
KEYCODE_DPAD_RIGHT:<z>
{<z>
goForward();<z>
;<z>
:<z>
ctrl) {<z>
selectAll();<z>
true;<z>
KeyEvent.KEYCODE_C:<z>
{<z>
);<z>
;<z>
case KeyEvent.KEYCODE_T:<z>
()) {<z>
.isShiftPressed()) {<z>
openIncognitoTab();<z>
else {<z>
);<z>
true;<z>
.dispatchKey(keyCode, event);<z>
(String text)<z>
!= null)<z>
("/*"))<z>
return " * ";<z>
(text.startsWith("//"))<z>
"// ";<z>
.startsWith("#"))<z>
"# ";<z>
return StringUtil.EMPTY;<z>
byte type,byte req) {<z>
byte[3];<z>
magic;<z>
1] = type;<z>
= req;<z>
) throws RecognitionException {<z>
stackSize = keepStackSize();<z>
().getNoModesAssignment_5_1_1_1_0());<z>
);<z>
();<z>
state._fsp--;<z>
getBusTypeAccess().getNoModesAssignment_5_1_1_1_0());<z>
{<z>
re);<z>
(input,re);<z>
;<z>
() {<z>
y;<z>
z;<z>
>= N) {<z>
;<z>
; kk++) {<z>
kk+1] & LOWER_MASK);<z>
mag01[y & 0x1];<z>
1; kk++) {<z>
[kk+1] & LOWER_MASK);<z>
^ mag01[y & 0x1];<z>
);<z>
mag01[y & 0x1];<z>
;<z>
[mti++];<z>
^= y >>> 11;<z>
7) & TEMPERING_MASK_B;<z>
(y << 15) & TEMPERING_MASK_C;<z>
y ^= (y >>> 18);<z>
if (mti >= N) {<z>
;<z>
) {<z>
1] & LOWER_MASK);<z>
) ^ mag01[z & 0x1];<z>
1; kk++) {<z>
LOWER_MASK);<z>
^ mag01[z & 0x1];<z>
(mt[0] & LOWER_MASK);<z>
];<z>
0;<z>
++];<z>
z >>> 11;<z>
TEMPERING_MASK_B;<z>
TEMPERING_MASK_C;<z>
>> 18);<z>
);<z>
int offset, String token)<z>
)<z>
return null;<z>
)<z>
return null;<z>
.getImageDescriptorRegistry();<z>
;<z>
display = string;<z>
trim().length() > 0)<z>
+= " - " + description;<z>
length(), string.length(),<z>
null, description);<z>
()<z>
null )<z>
return 0;<z>
return keys.size();<z>
)<z>
"");<z>
setAttribute(Credentials.CREDENTIALS, credentials);<z>
, username);<z>
, credentials);<z>
);<z>
ExperimenterGroup[] containedGroups(long experimenterId) {<z>
List<ExperimenterGroup> groups = iQuery<z>
findAllByQuery(<z>
,<z>
addId(experimenterId));<z>
groups.size()]);<z>
C value) {<z>
(context, parent, value)) {<z>
).focus();<z>
return true;<z>
return false;<z>
(<z>
) {<z>
result = new TransformationResult(<z>
;<z>
Operation op;<z>
);<z>
(TransformationException e) {<z>
error("Error during transformation of: " + jupiterActivity, e);<z>
;<z>
(<z>
{<z>
add(textEdit);<z>
()) {<z>
.getUsersWithReadOnlyAccess();<z>
usersWithReadOnlyAccess.remove(host);<z>
usersWithReadOnlyAccess.isEmpty()) {<z>
for (IActivity activity : result.executeLocally) {<z>
(new QueueItem(usersWithReadOnlyAccess, activity));<z>
result;<z>
(long clipRgn) {<z>
.cairo;<z>
clipRgn == 0) {<z>
data.clipRgn != 0) {<z>
data.clipRgn);<z>
data.clipRgn = 0;<z>
if (cairo != 0) {<z>
clippingTransform = null;<z>
damageRgn, 0);<z>
else {<z>
;<z>
.gdk_gc_set_clip_region(handle, clipping);<z>
} else {<z>
= OS.gdk_region_new();<z>
(data.clipRgn, data.clipRgn);<z>
, clipRgn);<z>
if (cairo != 0) {<z>
[6];<z>
(cairo, data.clippingTransform);<z>
.damageRgn, clipRgn);<z>
{<z>
clipping = clipRgn;<z>
damageRgn != 0) {<z>
.gdk_region_new();<z>
clipRgn);<z>
clipping, data.damageRgn);<z>
clipping);<z>
clipping);<z>
setMembers(List<MemberImpl> lsMembers) {<z>
());<z>
>();<z>
: lsMembers) {<z>
member != null) {<z>
.localMember(),<z>
), member.getUuid());<z>
);<z>
null) {<z>
;<z>
) > 0) {<z>
add(new Runnable() {<z>
run() {<z>
ClusterImpl.this,<z>
;<z>
MembershipListener listener : listeners) {<z>
);<z>
);<z>
localMember()) {<z>
clusterMember);<z>
add(clusterMember);<z>
{<z>
> it = clusterMembers.keySet();<z>
(final Member member : it) {<z>
(!setNew.contains(member)) {<z>
{<z>
public void run() {<z>
MembershipEvent membershipEvent = new MembershipEvent(ClusterImpl.this,<z>
, MembershipEvent.MEMBER_REMOVED);<z>
listeners) {<z>
);<z>
});<z>
clusterMembers.clear();<z>
mapMembers.clear();<z>
for (Member member : setNew) {<z>
member).getAddress(), member);<z>
;<z>
);<z>
Runnable notification : notifications) {<z>
notification);<z>
static EvolutionState possiblyRestoreFromCheckpoint(String[] args)<z>
x++)<z>
equals(A_CHECKPOINT))<z>
]);<z>
(args[x+1]);<z>
catch(Exception e)<z>
("An exception was generated upon starting up from a checkpoint.\nHere it is:\n" + e);<z>
;<z>
{<z>
boolean success = true;<z>
_factory.validateObject(item))) {<z>
success = false;<z>
(item);<z>
(this) {<z>
_numActive;<z>
_idlePool.size() + 1;<z>
_maxIdle) {<z>
setState(State.IDLING, null);<z>
if (this._lifo) {<z>
item);<z>
addLast(item);<z>
_statMaxIdle);<z>
numActive+numIdle, this._statMaxTotal);<z>
sPrepareDestroy(item);<z>
) {<z>
._numActive = numActive;<z>
();<z>
public void endElementHandler(<z>
,<z>
String localName,<z>
String qName,<z>
handler)<z>
);<z>
showClassChangeDialog(Player player)<z>
CustomConfig.ENABLE_SIMPLE_2NDCLASS)<z>
= player.getPlayerClass();<z>
.getRace();<z>
()))<z>
() == 0)<z>
))<z>
0:<z>
;<z>
case 3:<z>
, 2716, 1006));<z>
:<z>
;<z>
case 9:<z>
SM_DIALOG_WINDOW(0, 3398, 1006));<z>
ordinal() == 1)<z>
switch(playerClass.ordinal())<z>
case 0:<z>
3057, 2008));<z>
3:<z>
);<z>
case 6:<z>
));<z>
9:<z>
, 4080, 2008));<z>
, String to, String file) {<z>
parent, modal);<z>
("Copy");<z>
);<z>
().width;<z>
= this.getSize().height;<z>
.f = fg;<z>
- w) / 2;<z>
.height - h) / 2;<z>
this.setLocation(left, top);<z>
);<z>
= new File(file);<z>
isDirectory()) {<z>
(true);<z>
} else {<z>
setIndeterminate(false);<z>
);<z>
setMaximum(100);<z>
, this);<z>
task.addPropertyChangeListener(<z>
new PropertyChangeListener() {<z>
public void propertyChange(PropertyChangeEvent evt) {<z>
(evt.getPropertyName())) {<z>
);<z>
});<z>
);<z>
[] buffer) {<z>
*nx;<z>
.length;<z>
0; i<leni; i++) {<z>
;<z>
++;<z>
catch(Exception e) {<z>
, buffer, x, y, z);<z>
MessageID messageID, Message message, long sequenceNumber) {<z>
) {<z>
NullPointerException("Message ID can't be null");<z>
.messageID = messageID;<z>
= message.copy(true, true);<z>
;<z>
= false;<z>
getAddress());<z>
String> configuration) {<z>
());<z>
OverrideOperationCompiler.class, getClassifier());<z>
(info, ooc);<z>
;<z>
{<z>
) {<z>
();<z>
;<z>
{<z>
) proxyInfos[i];<z>
(proxyInfo));<z>
return proxies;<z>
.openejb.util.ArrayEnumeration) {<z>
.ArrayEnumeration) retValue;<z>
>= 0; --i) {<z>
);<z>
, Util.getEJBProxy(proxyInfo));<z>
enumeration;<z>
.Enumeration) {<z>
;<z>
util.ArrayList();<z>
hasMoreElements()) {<z>
;<z>
;<z>
.ArrayEnumeration(proxies);<z>
{<z>
.apache.openejb.ProxyInfo) retValue;<z>
(proxyInfo);<z>
{<z>
(genHTML);<z>
acc = klass.getAccessFlagsObj();<z>
(acc.isPublic()) {<z>
;<z>
else if (acc.isProtected()) {<z>
"protected ");<z>
)) {<z>
("private ");<z>
()) {<z>
.append("static ");<z>
) {<z>
);<z>
()) {<z>
buf.append("final ");<z>
()) {<z>
buf.append("strict ");<z>
if (acc.isEnum()) {<z>
.append("[enum] ");<z>
()) {<z>
"[synthetic] ");<z>
klass.isInterface()) {<z>
);<z>
{<z>
.append("class");<z>
' ');<z>
;<z>
genSig = klass.getGenericSignature();<z>
genSig != null) {<z>
(" [signature ");<z>
);<z>
buf.append("] ");<z>
else {<z>
(' ');<z>
);<z>
getHandle().toString());<z>
return buf.toString();<z>
WOComponent _cancel(WOComponent sender) {<z>
);<z>
();<z>
.dispose();<z>
page);<z>
throws RepositoryException<z>
);<z>
; i++)<z>
))<z>
))<z>
return true;<z>
false;<z>
minSupport) {<z>
= new ArrayList<T>();<z>
> entry : dataStructure.values()) {<z>
frequency, minSupport)) {<z>
frequentItems.add(entry.item);<z>
frequentItems;<z>
throws IOException {<z>
;<z>
) {<z>
);<z>
len = word.length();<z>
3) {<z>
{<z>
(len));<z>
);<z>
{<z>
.close();<z>
;<z>
searcher != null) {<z>
;<z>
= new IndexSearcher(this.spellIndex);<z>
encoding ) throws IOException<z>
( ResourceLoader.loadProperties(<z>
, true ));<z>
;<z>
(this.outputEncoding);<z>
[] getPaths(Map map) {<z>
= {};<z>
map.remove("path");<z>
mapping != null) {<z>
new String[] { mapping };<z>
map.remove("paths");<z>
{<z>
"").split(",");<z>
;<z>
postVisitJstPotentialAttributedMethod(<z>
JstPotentialAttributedMethod method) {<z>
getResolvedAttributedMethod() == null) {<z>
method<z>
;<z>
{<z>
potentialJstAttributedType);<z>
IJstMethod attributedMethod = attributedType<z>
)<z>
getMethod(<z>
? attributedType.getAttributeName()<z>
"",<z>
);<z>
null) {<z>
setResolvedAttributedMethod(attributedMethod);<z>
.accept(method, this);<z>
throws Exception<z>
();<z>
create());<z>
xmlReader = inputFactory.createXMLStreamReader(is);<z>
return TldMetaDataParser.parse(xmlReader);<z>
(is != null)<z>
;<z>
IOException e)<z>
(String[] args)<z>
SigarException {<z>
String pid;<z>
{<z>
pid = "$$";<z>
= args[0];<z>
;<z>
= sigar.getProcState(pid);<z>
state;<z>
+ ": " +<z>
.getState()));<z>
;<z>
View v) {<z>
) {<z>
trig_edit_done:<z>
"Clicked Done!");<z>
null) {<z>
();<z>
, mTrigId)) {<z>
i(TAG, "Validation succeeded!");<z>
);<z>
TAG, "Failed validation");<z>
(DIALOG_ID_INVALID_TIME_ALERT);<z>
;<z>
);<z>
{<z>
) {<z>
);<z>
drsPos) {<z>
= partno;<z>
.vindex = vindex;<z>
resultIndex;<z>
.fileno = fileno;<z>
.MISSING_RECORD : drsPos;<z>
{<z>
-1) {<z>
ICLocaleBusiness.getLocaleId(getLocale());<z>
;<z>
float maxAge) {<z>
(maxAge * 60.0f * 60.0f * 1000.0f);<z>
(m_rfsRepository);<z>
= 0;<z>
.isDirectory()) {<z>
.listFiles();<z>
!= null) {<z>
.length; i++) {<z>
;<z>
canWrite()) {<z>
expireDate) {<z>
;<z>
++;<z>
) {<z>
) {<z>
warn(<z>
(<z>
Messages.LOG_EXCERPT_CACHE_DELETE_ERROR_1,<z>
()),<z>
;<z>
count;<z>
TransformerException, SQLException, AuthorizeException<z>
n);<z>
null)<z>
"";<z>
= getAttributeValue(n, "element");<z>
);<z>
n, "language");<z>
+ qualifier<z>
;<z>
)<z>
;<z>
equals(""))<z>
;<z>
if (language == null)<z>
"en";<z>
isTest)<z>
qualifier, language, value);<z>
);<z>
== null)<z>
println("ERROR: schema '"+schema+"' was not found in the registry.");<z>
;<z>
;<z>
)<z>
element+"."+qualifier+"' was not found in the registry.");<z>
() {<z>
;<z>
);<z>
, String.class, null);<z>
("id", Integer.class, null);<z>
("state", State.class, null);<z>
Date.class, null);<z>
("validated", Boolean.class, null);<z>
("checked", Boolean.class, null);<z>
Random random = new Random();<z>
0; i < 10000; i++) {<z>
);<z>
setValue("Order " + i);<z>
);<z>
int rndInt = random.nextInt(4);<z>
.CREATED;<z>
{<z>
PROCESSING;<z>
) {<z>
= State.PROCESSED;<z>
== 2) {<z>
FINISHED;<z>
).setValue(stateToSet);<z>
(c.getTime());<z>
DAY_OF_MONTH, 1);<z>
.getContainerProperty(i, "validated").setValue(<z>
random.nextBoolean());<z>
getContainerProperty(i, "checked").setValue(<z>
;<z>
cont;<z>
()<z>
deadlock = false;<z>
deadlock)<z>
tmx.findDeadlockedThreads();<z>
null)<z>
true;<z>
getThreadInfo(ids,true,true);<z>
info = new StringBuilder();<z>
.append("DeadLock Found!\n");<z>
tis)<z>
());<z>
ti : tis)<z>
ti.getLockedSynchronizers();<z>
();<z>
&& monitors.length == 0)<z>
;<z>
);<z>
;<z>
getThreadName());<z>
.append(" is waiting to lock ");<z>
toString());<z>
.append(" which is held by ");<z>
.append(dl.getLockOwnerName());<z>
);<z>
)<z>
info.append("\t");<z>
append(dl.getThreadName());<z>
.append(" is waiting to lock ");<z>
());<z>
;<z>
;<z>
"\n");<z>
info.toString());<z>
.RESTART_ON_DEADLOCK)<z>
Announcements an = Announcements.getInstance();<z>
"Server has stability issues - restarting now.");<z>
startTelnetShutdown("DeadLockDetector - Auto Restart",60,true);<z>
_sleepTime);<z>
)<z>
e);<z>
(RsLiveData data) {<z>
null)<z>
null) {<z>
if (createChart(data)) {<z>
setActivePage(1);<z>
;<z>
!pauseUpdate){<z>
lastData = data;<z>
.count(); ++i) {<z>
.getPlot(i);<z>
());<z>
status.getDisplay());<z>
data);<z>
catch (Exception ex) {<z>
.printStackTrace();<z>
[] getSingleValues() {<z>
unsatisfiable;<z>
) {<z>
);<z>
= new Object[numColumns];<z>
= 0;<z>
(int bitPos : columnBitPositions) {<z>
=<z>
[bitPos];<z>
] = predicate.getValue();<z>
singleValues;<z>
public TextStyle crossReferenceTextStyle() {<z>
copy();<z>
);<z>
return textStyle;<z>
boolean secure, HttpParams params)<z>
IOException {<z>
;<z>
;<z>
{<z>
skip) {<z>
return "true";<z>
else {<z>
"false";<z>
(final String title, final String message) {<z>
boolean[] confirm = { false };<z>
new Runnable() {<z>
public void run() {<z>
title, message);<z>
);<z>
return confirm[0];<z>
readAtom(HGHandle handle,<z>
graph,<z>
HGHandle, HGAtomType> typeResolver,<z>
)<z>
object = null;<z>
getPersistent());<z>
).attachOverlayGraph(subgraph);<z>
layout.length-2];<z>
, layout.length-2);<z>
(layout[0]);<z>
layout[1],<z>
>(targetSet),<z>
;<z>
.getStore().detachOverlayGraph();<z>
object;<z>
void debug(GeneralPath gp) {<z>
.getPathIterator(new AffineTransform());<z>
6];<z>
.isDone()) {<z>
.currentSegment(coords);<z>
) {<z>
:<z>
println("close");<z>
SEG_CUBICTO:<z>
.err.println("cubic ("<z>
] + ") ("<z>
+ ") ("<z>
[5] + ")");<z>
.SEG_QUADTO:<z>
System.err.println("quad ("<z>
1] + ") ("<z>
);<z>
case PathIterator.SEG_LINETO:<z>
SEG_MOVETO:<z>
println((type == iter.SEG_LINETO ?<z>
)<z>
", "<z>
] + ")");<z>
;<z>
.next();<z>
) throws InvalidGridGeometryException {<z>
) {<z>
gridToCRS2D;<z>
throw new InvalidGridGeometryException(ErrorKeys.NO_TRANSFORM2D_AVAILABLE);<z>
() throws RepositoryException {<z>
storedQueryPath == null) {<z>
throw new ItemNotFoundException("Not a stored query");<z>
;<z>
(final Light light){<z>
light);<z>
(light);<z>
;<z>
;<z>
true);<z>
();<z>
public String[] getConfiguredContentTypes(ISourceViewer sourceViewer) {<z>
{<z>
.DEFAULT_CONTENT_TYPE,<z>
ICPartitions.C_MULTI_LINE_COMMENT,<z>
ICPartitions.C_SINGLE_LINE_COMMENT,<z>
C_STRING,<z>
ICPartitions.C_CHARACTER,<z>
C_PREPROCESSOR,<z>
ICPartitions.C_SINGLE_LINE_DOC_COMMENT,<z>
C_MULTI_LINE_DOC_COMMENT<z>
final Path p,<z>
CacheConfig cacheConf, final Reference r,<z>
preferredEncodingInCache) throws IOException {<z>
preferredEncodingInCache);<z>
;<z>
r.getFileRegion());<z>
() {<z>
v) {<z>
) {<z>
:<z>
Mode.EDIT_MODE;<z>
fillData();<z>
;<z>
setText(R.string.button_done);<z>
case EDIT_MODE:<z>
NORMAL_MODE;<z>
);<z>
setVisibility(View.VISIBLE);<z>
button_edit);<z>
public void visitLibraryClass(LibraryClass libraryClass)<z>
)<z>
.visitLibraryClass(libraryClass);<z>
synchronized void setHosting(boolean hosting) {<z>
= hosting;<z>
for (HostingListener listener : hostingListener) {<z>
;<z>
FocusEvent e) {<z>
quitting() && imp!=null) {<z>
log("focusGained: "+imp);<z>
WindowManager.setCurrentWindow(this);<z>
{<z>
);<z>
(game == null) {<z>
;<z>
put(name, game);<z>
game;<z>
(java.io.InputStream stream) {<z>
, 1);<z>
jj_input_stream);<z>
token = new Token();<z>
-1;<z>
0;<z>
-1;<z>
void writeConfig_IndexSource_AnalogTrigger(final boolean value)<z>
, status);<z>
&= ~kConfig_IndexSource_AnalogTrigger_BitfieldMask;<z>
0)) << kConfig_IndexSource_AnalogTrigger_BitfieldOffset) & kConfig_IndexSource_AnalogTrigger_BitfieldMask;<z>
], regValue, status);<z>
GetRegistrationStatusTypes(String languageCode)<z>
, SOLAAccessFault {<z>
;<z>
result = {null};<z>
) {<z>
) {<z>
(<z>
getRegistrationStatusTypes(languageCodeTmp),<z>
class);<z>
});<z>
>) result[0];<z>
run() {<z>
);<z>
false, InstallJaiStartup.this);<z>
();<z>
String productName;<z>
{<z>
CorePlugin.log("there is no product so default to uDig", null);<z>
"uDig";<z>
{<z>
);<z>
MessageDialog(<z>
.getShell(),<z>
Messages.InstallJaiStartup_1,<z>
.InstallJaiStartup_2,<z>
)}, 0);<z>
d.open();<z>
restart();<z>
) {<z>
);<z>
() throws RecognitionException {<z>
_type = RULE_ID;<z>
= DEFAULT_TOKEN_CHANNEL;<z>
=2;<z>
(1);<z>
'^') ) {<z>
=1;<z>
) {<z>
:<z>
;<z>
(1)<='z') ) {<z>
consume();<z>
;<z>
(mse);<z>
mse;}<z>
2;<z>
int LA2_0 = input.LA(1);<z>
) ) {<z>
=1;<z>
{<z>
1 :<z>
(1)<='z') ) {<z>
();<z>
mse = new MismatchedSetException(null,input);<z>
mse);<z>
}<z>
loop2;<z>
;<z>
type = _type;<z>
state.channel = _channel;<z>
public char next(final char c) throws JSONException<z>
n = next();<z>
if (n != c)<z>
c + "' and instead saw '" + n + "'");<z>
;<z>
String uri) {<z>
))<z>
;<z>
) {<z>
(datatypeLibrary == null)<z>
? findRegexEngine() : regexEngine);<z>
datatypeLibrary;<z>
() throws RecognitionException {<z>
keepStackSize();<z>
;<z>
;<z>
;<z>
_fsp--;<z>
());<z>
RecognitionException re) {<z>
re);<z>
,re);<z>
(stackSize);<z>
String getConfirmMessage()<z>
getMessage(FacesContext.getCurrentInstance(),<z>
);<z>
return MessageFormat.format(fileConfirmMsg,<z>
});<z>
) throws IOException {<z>
InputStream inputStream = null;<z>
);<z>
installBundle(location, inputStream);<z>
return bundle.getBundleId();<z>
catch (Exception e) {<z>
.getMessage());<z>
initCause(e);<z>
ioex;<z>
{<z>
inputStream != null) {<z>
close();<z>
{<z>
) {<z>
;<z>
;<z>
this.chunksHigh = chunksHigh;<z>
;<z>
.chunkWidth = chunkWidth;<z>
chunkHeight;<z>
chunkDepth = chunkDepth;<z>
RegionFile.VERSION_DEFLATE;<z>
chunksHigh*chunksDeep;<z>
this.chunkData = new ByteChunk[nChunks];<z>
.chunkMtime = new int[nChunks];<z>
Object that) {<z>
== null)<z>
false;<z>
(that instanceof finishTableOperation_result)<z>
.equals((finishTableOperation_result)that);<z>
false;<z>
UUID videoId) throws ServiceException {<z>
result = videoQueries.getVideoUrl(videoId);<z>
null) {<z>
new ServiceException("The video does not exist.");<z>
videoId, result.toString());<z>
e) {<z>
new ServiceException(e);<z>
) {<z>
);<z>
wallOffsets,<z>
tailZone)<z>
super(id);<z>
= transitions;<z>
wallOffsets;<z>
standardOffsets;<z>
;<z>
iTailZone = tailZone;<z>
void makePrompt(String title, String confirmButtonStr,<z>
final Method confirmButtonMethod) {<z>
(this);<z>
dialog.setTitle(title);<z>
layout.logger_file_dialog);<z>
final EditText filenameEdit = (EditText) dialog<z>
R.id.dialog_file_name_edit);<z>
directoryEdit = (EditText) dialog<z>
);<z>
(Button) dialog<z>
dialog_confirm_button);<z>
(Button) dialog<z>
(R.id.dialog_cancel_button);<z>
.setText(confirmButtonStr);<z>
setText(Environment.getExternalStorageDirectory()<z>
);<z>
{<z>
v) {<z>
;<z>
});<z>
{<z>
onClick(View v) {<z>
if (mExternalStorageWriteable) {<z>
);<z>
) {<z>
.makeText(LoggerEditor.this,<z>
"Enter a nonempty filename", Toast.LENGTH_LONG)<z>
.show();<z>
;<z>
{<z>
LoggerEditor.this,<z>
LENGTH_LONG).show();<z>
, ".xml");<z>
directory = format(directory, "/");<z>
setAccessible(true);<z>
filename,<z>
);<z>
e) {<z>
"Error when invoking method {}",<z>
;<z>
);<z>
str, String properEnding) {<z>
str.trim();<z>
{<z>
str += properEnding;<z>
return str;<z>
);<z>
show();<z>
public boolean deletePlyrdat(String name){<z>
getOfflinePlayer(name).isOnline()){<z>
);<z>
return false;<z>
String name, int dft) {<z>
value = getInitParameter(name);<z>
if (value == null)<z>
value = getInitParameter(name);<z>
> 0)<z>
return Integer.parseInt(value);<z>
;<z>
setupItemClickEventHandler() {<z>
) {<z>
long id) {<z>
_tracker.trackClick("/click/categories/category");<z>
.class);<z>
arg2);<z>
;<z>
EXTRA_CATEGORYID, categoryId);<z>
;<z>
;<z>
) {<z>
this.myVisible;<z>
newValue;<z>
"visible", oldValue, newValue);<z>
int featureID) {<z>
(featureID) {<z>
TRANSFORM__MATRIX:<z>
null;<z>
.TRANSFORM__COLOR_TRANSFORM:<z>
null;<z>
(featureID);<z>
, Unmarshaller unmarshaller) {<z>
if (logger.isTraceEnabled()) {<z>
("Unmarshaller placed back into pool");<z>
null);<z>
unmarshaller);<z>
{<z>
= new String[] {<z>
) };<z>
;<z>
("checking modules, database: " + modulesDatabase);<z>
(modulesDatabase);<z>
;<z>
Content c = null;<z>
ContentCreateOptions opts = ContentCreateOptions<z>
);<z>
++) {<z>
)) {<z>
.info("Skipping module installation: "<z>
i]);<z>
.equals("")) {<z>
);<z>
[i]);<z>
.exists()) {<z>
() + f.getName();<z>
(moduleUri, f, opts);<z>
warning("looking for "<z>
[i] + " as resource");<z>
= options.getModuleRoot()<z>
];<z>
.getClass().getResourceAsStream(<z>
i]);<z>
{<z>
throw new NullPointerException(<z>
i]<z>
;<z>
c = ContentFactory<z>
);<z>
insertContent(c);<z>
IOException e) {<z>
.logException("fatal error", e);<z>
throw new RuntimeException(e);<z>
{<z>
("fatal error", e);<z>
new RuntimeException(e);<z>
finally {<z>
;<z>
String generateConcat(String... expressions) {<z>
if (expressions.length == 1) {<z>
[0];<z>
buffer = new StringBuffer();<z>
i++) {<z>
+ ", ");<z>
1]);<z>
{<z>
buffer.append(")");<z>
);<z>
(<z>
MatrixValueI res,<z>
MatrixValueI lhs,<z>
ParseException<z>
(<z>
rhs.getEle(2)),<z>
)));<z>
.sub(<z>
)),<z>
(2))));<z>
(<z>
)),<z>
)));<z>
;<z>
] v, double[] Xv) {<z>
< prob.l; i++) {<z>
i] = 0;<z>
i]) {<z>
* s.getValue();<z>
throws IllegalArgumentException {<z>
.length);<z>
d = 0;<z>
iterator();<z>
Entry e;<z>
) != null) {<z>
[e.getIndex()]);<z>
d;<z>
(final Class101EndSub class101EndSub) throws DaoException {<z>
LOG.debug("Create a new Class101EndSub entity");<z>
);<z>
.save(class101EndSub);<z>
(HibernateException e) {<z>
DaoException(e);<z>
void orderItemDefs() {<z>
);<z>
index = 1;<z>
;) {<z>
;<z>
.setSequence(index);<z>
++;<z>
, boolean output, boolean fault)<z>
{<z>
new HashSet<QName>();<z>
> services = getOperationsForConfigFromModelObject(modelObj);<z>
(ServiceInterface baseService : services) {<z>
getOperations();<z>
serviceOperation : ops) {<z>
) != null && input) {<z>
getInputType());<z>
getOutputType() != null && output) {<z>
));<z>
{<z>
add(serviceOperation.getFaultType());<z>
typesList;<z>
dest) {<z>
null;<z>
= new FileOutputStream(dest);<z>
new POIFSFileSystem(<z>
FileInputStream(source));<z>
fs);<z>
wb.write(fos);<z>
{<z>
;<z>
{<z>
.close();<z>
catch (Exception ei) {<z>
);<z>
public UIComponent createComponent(FacesContext context,<z>
,<z>
String rendererType) {<z>
(defaultApplication != null) {<z>
defaultApplication.createComponent(context,<z>
);<z>
);<z>
public String toClientString() {<z>
128);<z>
(sb);<z>
.toString();<z>
boolean equals(Object o) {<z>
{<z>
false;<z>
(MessageHeader) o;<z>
)<z>
this.payloadDescriptor<z>
this.ttl<z>
mh.hops == this.hops<z>
;<z>
{<z>
();<z>
this.setText(<z>
.getString(<z>
),<z>
()<z>
'C');<z>
setImageDescriptor(new ApplicationImageDescriptor(<z>
).getImagePath(IJAMConst.IMAGE_KEY_CLP_GIF)<z>
);<z>
void spawnParticle(EnumPixelmonParticles particle,<z>
double posZ,<z>
{<z>
fx;<z>
EntityGastlyParticle.class)<z>
posY, posZ, 0, 0,<z>
;<z>
.getConstructor(<z>
, double.class,<z>
double.class).newInstance(<z>
0d, 0d, 0d);<z>
addEffect(fx);<z>
{<z>
e.printStackTrace();<z>
, final boolean flag) {<z>
hierarchyBrowserManager = HierarchyBrowserManager.getInstance(myProject);<z>
;<z>
);<z>
builders = myBuilders.values();<z>
(final HierarchyTreeBuilder builder : builders) {<z>
);<z>
) {<z>
&&<z>
(":" + SOAPConstants.FAULT_CODE_VERSION_MISMATCH)) {<z>
prefix = namespace.getPrefix();<z>
)){<z>
debug("prefix being used in the outgoing soap envelope is : " + prefix);<z>
.startsWith(prefix + ":")) {<z>
if(log.isDebugEnabled()){<z>
.debug("stripping old prefix and adding the new one - " + prefix);<z>
(':') + 1;<z>
substring(index);<z>
soapFaultCode = prefix + ":" + soapFaultCode;<z>
.isDebugEnabled()){<z>
"soapFaultCode is being set to : " + soapFaultCode);<z>
return soapFaultCode;<z>
JFileChooser a) {<z>
.size(); i++) {<z>
i))).rescanCurrentDirectory(a);<z>
, boolean isComplete) {<z>
{<z>
);<z>
else {<z>
task);<z>
step != currentStep) {<z>
step;<z>
.setValue(currentStep);<z>
currentStep >= maxSteps || isComplete) {<z>
= STEP.get(locale);<z>
("X", maxSteps + "");<z>
));<z>
(progressBar.getMaximum());<z>
;<z>
else {<z>
STEP.get(locale);<z>
"X", currentStep + "");<z>
, maxSteps + ""));<z>
CmsException {<z>
.getUri();<z>
(currentUri);<z>
!CmsResourceTypeXmlContainerPage.isContainerPage(containerPage)) {<z>
(<z>
,<z>
("");<z>
cms.readResource(cntPagePath);<z>
e) {<z>
isDebugEnabled()) {<z>
());<z>
;<z>
containerPage;<z>
trigger, int stateMask, int offset) {<z>
viewer.getDocument();<z>
instanceof PySourceViewer) {<z>
pySourceViewer = (PySourceViewer) viewer;<z>
;<z>
pyEdit.getIndentPrefs().getIndentationString();<z>
} else {<z>
).getIndentationString();<z>
0) {<z>
setAddLocalImport(true);<z>
document, trigger, stateMask, offset);<z>
, long releaseTime, long latestEdition) {<z>
(UpdateListener updateListener : getListeners()) {<z>
, latestEdition);<z>
amazon.ec2.RebootInstancesItemType param){<z>
{<z>
]{};<z>
List list =<z>
localItem);<z>
.add(param);<z>
localItem =<z>
.toArray(<z>
;<z>
void setSchema(String schema) throws Exception {<z>
)))) {<z>
;<z>
;<z>
)<z>
!= element)<z>
;<z>
null)<z>
, null, msgs);<z>
if (newElement != null)<z>
;<z>
msgs = basicSetElement(newElement, msgs);<z>
);<z>
(eNotificationRequired())<z>
.PATH_NAME_EXP__ELEMENT, newElement, newElement));<z>
name, String value, int resultNum)<z>
{<z>
;<z>
lastId;<z>
boolean throwError )<z>
();<z>
fromConverters = getConverterFrom( from );<z>
== null )<z>
throwError )<z>
, from );<z>
;<z>
( msg );<z>
;<z>
( to );<z>
toConverters == null )<z>
throwError )<z>
.format( "Cannot find converters for to=%s for from=%s", to, from );<z>
.severe( msg );<z>
new XDocConverterException( msg );<z>
;<z>
)<z>
.getFirstConverter();<z>
if ( throwError && converter == null )<z>
( throwError )<z>
;<z>
( msg );<z>
( msg );<z>
;<z>
;<z>
( converter == null )<z>
( throwError )<z>
"Cannot find converters via %s for to=%s for from=%s", via, to, from );<z>
);<z>
( msg );<z>
;<z>
void useSelectedLines(boolean selectedLines) {<z>
())<z>
);<z>
null)<z>
);<z>
(final EntityManager em) {<z>
.getCriteriaBuilder().createQuery(clazz);<z>
from(clazz);<z>
();<z>
EdgeIterator() {<z>
edgeIterationIndex;<z>
EdgeType>();<z>
();<z>
) {<z>
.next(), true);<z>
.hasNext()) {<z>
.next();<z>
edgeIterationIndex)<z>
.edgeIterationIndex = edgeIterationIndex;<z>
edge);<z>
);<z>
() {<z>
request, scco);<z>
value) throws Exception {<z>
NODESET);<z>
) {<z>
).getNodeValue();<z>
nodeValue)) {<z>
<String>();<z>
i++) {<z>
(i).getNodeValue());<z>
MessageFormat.format("Document does not have a node with value: {0} at {1}, values: {2}", value,<z>
values));<z>
Composite parent, IWorkbenchPartSite partSite, ISelectionChangedListener valueSelect) {<z>
, partSite, valueSelect);<z>
parent.getDisplay();<z>
(new FillLayout());<z>
{<z>
Listener() {<z>
Event event) {<z>
handleContextClick();<z>
new Listener() {<z>
Event event) {<z>
button == 1)<z>
);<z>
) {<z>
Event event) {<z>
== 1)<z>
);<z>
;<z>
));<z>
<ISelectionChangedListener>();<z>
(String identifier, String elementSymbol)<z>
);<z>
;<z>
ruleBooleanLiteral() throws RecognitionException {<z>
();<z>
).getGroup());<z>
;<z>
);<z>
._fsp--;<z>
().getGroup());<z>
catch (RecognitionException re) {<z>
);<z>
recover(input,re);<z>
stackSize);<z>
, ILoggingEvent eventObject) {<z>
{<z>
, eventObject.getLoggerName());<z>
if (useThreadName) {<z>
);<z>
getMDCPropertyMap();<z>
) {<z>
()) {<z>
key);<z>
{<z>
.get(key), field);<z>
void unbind() {<z>
(AbstractBinding binding : myBindings) {<z>
;<z>
myBindings.clear();<z>
boolean verbose,<z>
, String prefix) {<z>
log = log;<z>
verbose;<z>
;<z>
prefix;<z>
userName)<z>
throws DatabaseException, ParseException, IOException<z>
= new Location();<z>
;<z>
investigationName);<z>
;<z>
db.add(locationToAdd);<z>
return locationToAdd.getId();<z>
(<z>
final FunctionCall guardedNode) {<z>
FunctionCallPreconditionAssertion functionCallPreconditionAssertion = AstNodeCreatorHelper<z>
);<z>
(expression);<z>
.setGuardedNode(guardedNode);<z>
;<z>
getViewHtml(FieldConfig fieldConfig, FieldLayoutItem fieldLayoutItem)<z>
fieldConfig);<z>
);<z>
public void onEnable() {<z>
PM.clearStorage();<z>
loadConfig();<z>
();<z>
.registerEvents(Listeners, this);<z>
().registerEvents(MiscListeners, this);<z>
setupVault();<z>
setupLogBlock();<z>
WorldGuard.setupWorldGuard();<z>
Towny.setupTowny();<z>
(this);<z>
this);<z>
= new Metrics(this);<z>
;<z>
} catch (IOException e) {<z>
INFO);<z>
<String> getResourcePaths(final String path)<z>
;<z>
return _servletContext.getResourcePaths(path);<z>
optionallyPrependSlash(final String path) {<z>
String resolved = path;<z>
== null) {<z>
= EMPTY;<z>
(resolved)) {<z>
+ resolved;<z>
return resolved;<z>
) {<z>
jl = new JLabel(msg);<z>
null,<z>
);<z>
params, String prefix)<z>
) {<z>
.TITLE_FONT_SUFFIX));<z>
else {<z>
setFont(JFreeChart.DEFAULT_TITLE_FONT);<z>
null) {<z>
;<z>
+ ChartParams.TITLE_HORIZONTAL_ALIGNMENT_SUFFIX) != null) {<z>
(params.getHorizontalAlignment(prefix<z>
);<z>
.TITLE_VERTICAL_ALIGNMENT_SUFFIX) != null) {<z>
(params<z>
getVerticalAlignment(prefix + ChartParams.TITLE_VERTICAL_ALIGNMENT_SUFFIX));<z>
TITLE_COLOR_SUFFIX) != null) {<z>
);<z>
) != null) {<z>
));<z>
!= null) {<z>
getRectangleInsets(prefix + ChartParams.TITLE_PADDING_SUFFIX));<z>
.TITLE_URL_SUFFIX) != null) {<z>
getString(prefix + ChartParams.TITLE_URL_SUFFIX));<z>
public String create(User user) throws DaoException {<z>
user);<z>
checkGlobalUnique(userId);<z>
(), userId);<z>
create(key, user);<z>
return userId;<z>
QName name,<z>
attributes,<z>
,<z>
,<z>
location,<z>
)<z>
), namespaceCtx, location, schemaType);<z>
= attributes;<z>
namespaces;<z>
public void actionPerformed(ActionEvent e)<z>
.getSelectedIndex();<z>
-1)<z>
);<z>
().setDefaultTemplate(name);<z>
to) {<z>
{<z>
position] = secondRepresentation.getGeneAt(position);<z>
String, String> attrs) {<z>
{<z>
);<z>
ok = true;<z>
{<z>
'f':<z>
) {<z>
handleFading(attrs);<z>
.startGeoElement(eName, attrs);<z>
ok) {<z>
.println("error in <element>: " + eName);<z>
> getAccounts() throws Exception {<z>
(MailService.class) ;<z>
getAccounts(getCurrentUser()) ;<z>
e) {<z>
return null ;<z>
} catch (IndexOutOfBoundsException ex) {<z>
null ;<z>
(XMLElement event) {<z>
= event.getStringAttribute("name");<z>
);<z>
if(desc!=null) {<z>
);<z>
(sb==null) {<z>
);<z>
eventDescription.put(name, sb);<z>
getContent().trim());<z>
events.put(name, event);<z>
)<z>
selected.getAbsoluteFile();<z>
.content.Intent.ACTION_SEND);<z>
file.getName());<z>
type != null)<z>
type);<z>
);<z>
.fromFile(file));<z>
createChooser(i, "Share"));<z>
public ParamConfigBuilder forCookie() {<z>
ParamConfigBuilder builder : builders){<z>
);<z>
this;<z>
int id) {<z>
id) {<z>
case DIALOG_SAVE:<z>
mActivity);<z>
vib_dialog_text_entry, null);<z>
.vib_edit);<z>
);<z>
.Builder(mActivity)<z>
vib_dialog_text_entry)<z>
.setView(textEntryView)<z>
string.ok,<z>
.OnClickListener() {<z>
onClick(DialogInterface dialog, int whichButton) {<z>
;<z>
;<z>
(pattern);<z>
internal.R.string.cancel,<z>
DialogInterface.OnClickListener() {<z>
void onClick(DialogInterface dialog, int whichButton) {<z>
).create();<z>
OnFocusChangeListener() {<z>
void onFocusChange(View v, boolean hasFocus) {<z>
if (hasFocus) {<z>
).setSoftInputMode(<z>
.SOFT_INPUT_STATE_ALWAYS_VISIBLE);<z>
;<z>
requestFocus();<z>
;<z>
DIALOG_HELP:<z>
ScrollView(mActivity);<z>
8, 8, 8, 8);<z>
new TextView(mActivity);<z>
;<z>
.setTextSize(12);<z>
sView.addView(helpView);<z>
Builder(mActivity)<z>
(R.string.help)<z>
.R.string.ok, null)<z>
.show();<z>
Version v) {<z>
v instanceof VectorClock))<z>
throw new IllegalArgumentException("Cannot compare Versions of different types.");<z>
(VectorClock) v);<z>
) {<z>
;<z>
0) {<z>
);<z>
;<z>
getFirstProperty("ItemsPerPage");<z>
.DEFAULT_ITEMS_PER_PAGE;<z>
null) {<z>
itemsPerPage);<z>
policySet.length / itemsPerPageInt);<z>
) {<z>
= numberOfPages - 1;<z>
= pageNumber * itemsPerPageInt;<z>
pageNumber + 1) * itemsPerPageInt;<z>
[itemsPerPageInt];<z>
length; i++, j++) {<z>
= policySet[i];<z>
.setPolicySet(returnedPolicySet);<z>
numberOfPages);<z>
return paginatedPolicySet;<z>
newColor_rendering) {<z>
= color_rendering;<z>
color_rendering = newColor_rendering == null ? COLOR_RENDERING_EDEFAULT : newColor_rendering;<z>
())<z>
SvgPackage.SVG_TREF_ELEMENT__COLOR_RENDERING, oldColor_rendering, color_rendering));<z>
{<z>
> ret = null;<z>
container : fileContainers) {<z>
separatorChar) + ".class";<z>
(classFileName);<z>
;<z>
);<z>
(new ClassInfo(name, code));<z>
cis) {<z>
.className) != null)<z>
;<z>
ci.className.equals(name)) {<z>
c;<z>
{<z>
.startsWith("kilim.S")) {<z>
c);<z>
if (ret == null) {<z>
, 0, code.length);<z>
(IOException ignore) {<z>
ignore.getMessage());<z>
ret == null) {<z>
;<z>
ret;<z>
, SNode node) {<z>
);<z>
;<z>
getStyle();<z>
false);<z>
;<z>
;<z>
editorCell;<z>
) {<z>
;<z>
getMediaId());<z>
getCheckinId());<z>
));<z>
MEDIA_MEDIUM_LINK, checkinMedia.getMediumLink());<z>
initialValues);<z>
void traverse(VisitorIF visitor) throws Exception {<z>
(dest != null)<z>
(visitor);<z>
if (values != null) {<z>
i++) {<z>
if (values[i] != null)<z>
values[i].accept(visitor);<z>
public FSTInfo MethodDeclarator(boolean inTerminal) throws ParseException {<z>
("MethodDeclarator");<z>
t;FSTInfo n;<z>
(1); productionStart(inTerminal);<z>
;<z>
FSTInfo("<IDENTIFIER>",t.image));<z>
);<z>
("FormalParameters", n);<z>
n);<z>
(true) {<z>
1)?jj_ntk():jj_ntk) {<z>
case LBRACKET:<z>
jj_gen;<z>
;<z>
jj_consume_token(LBRACKET);<z>
RBRACKET);<z>
"Default",first,token);}<z>
;<z>
finally {<z>
trace_return("MethodDeclarator");<z>
long uintToLong(int i) {<z>
l = (long) i;<z>
) >>> 32;<z>
{<z>
append("id", id)<z>
recipientId)<z>
("delivererName", delivererName)<z>
("channel", channel)<z>
;<z>
final String filterStr) throws Exception<z>
(filterStr);<z>
coreMessages = coreQueueControl.listMessages(filter);<z>
[coreMessages.length];<z>
i = 0;<z>
Object> coreMessage : coreMessages)<z>
= HornetQMessage.coreMaptoJMSMap(coreMessage);<z>
jmsMessage;<z>
return jmsMessages;<z>
e)<z>
(e.getMessage());<z>
(AbstractVectorGraphicsIO graphics,<z>
) {<z>
super(graphics, doRestoreOnDispose);<z>
moduleInstance, UsesInstance uses, Object instance)<z>
.moduleInstance = moduleInstance;<z>
= uses;<z>
instance;<z>
asElement (Document document) {<z>
element = super.asElement( document );<z>
() ) );<z>
return element;<z>
Exception {<z>
();<z>
);<z>
));<z>
getTestData("test data explanation large conflict", "testData/testLargeConflict/profileRegistry");<z>
getTempFolder();<z>
reporegistry1, tempFolder);<z>
), tempFolder, null, false);<z>
= registry.getProfile("SDKProfile");<z>
);<z>
);<z>
, int k) {<z>
!this.x()) {<z>
;<z>
)) {<z>
false;<z>
i, k) > j) {<z>
;<z>
else {<z>
i, k);<z>
: biomebase.d();<z>
setBidiGlobalDir(int bidiGlobalDir) {<z>
.checkArgument(<z>
bidiGlobalDir <= 1,<z>
;<z>
bidiGlobalDir = bidiGlobalDir;<z>
state) {<z>
fActiveEditorCanProvideScopeSelection = state;<z>
.setEnabled(canSearchInSelection());<z>
fScope = getStoredScope(fSettingsStore, fCanSearchEnclosingProjects);<z>
);<z>
ModelNode trimNonSubsystem(ModelNode definition) {<z>
= definition.clone();<z>
keys()) {<z>
)) {<z>
);<z>
def;<z>
IOException, ParseException {<z>
)) return null;<z>
();<z>
(fs, parent);<z>
;<z>
( OutputStream os,<z>
String comment,<z>
throws IOException {<z>
.storeToXML(os, comment, encoding);<z>
public int showError() {<z>
int count = 0;<z>
: aWord) {<z>
.showError();<z>
{<z>
;<z>
return count;<z>
extractXPath(String xpathExpression, String content) {<z>
,<z>
NODESET);<z>
int segmentFileSizeMB) throws IOException {<z>
("init segHomePath=" + segmentHomePath + " segFileSizeMB=" + segmentFileSizeMB);<z>
;<z>
segmentHomePath;<z>
_segFileSizeMB = segmentFileSizeMB;<z>
this._recycleLimit = computeRecycleLimit(segmentFileSizeMB);<z>
this.open();<z>
String s, String key, boolean ignoreCase) {<z>
)<z>
;<z>
key.length() == 0)<z>
true;<z>
key)<z>
()<z>
) : key.equals(s);<z>
RecognitionException {<z>
keepStackSize();<z>
if ( state.backtracking==0 ) {<z>
.getExpCSAccess().getOwnedOperatorAssignment_1_1());<z>
);<z>
;<z>
_fsp--;<z>
state.failed) return ;<z>
==0 ) {<z>
getOwnedOperatorAssignment_1_1());<z>
{<z>
;<z>
;<z>
;<z>
&& LA182_0<=60)) ) {<z>
;<z>
switch (alt182) {<z>
1 :<z>
;<z>
;<z>
--;<z>
state.failed) return ;<z>
break loop182;<z>
while (true);<z>
backtracking==0 ) {<z>
).getOwnedOperatorAssignment_1_1());<z>
catch (RecognitionException re) {<z>
);<z>
input,re);<z>
stackSize);<z>
public JournalArticleDisplay getDisplay(<z>
,<z>
languageId, ThemeDisplay themeDisplay) {<z>
return getDisplay(<z>
, viewMode, languageId, themeDisplay,<z>
;<z>
,<z>
{<z>
ImageHyperlink link;<z>
text;<z>
.length / 2) {<z>
) children[pos * 2];<z>
;<z>
* 2 + 1];<z>
);<z>
(composite, SWT.NONE);<z>
.add(newLink);<z>
= newLink;<z>
{<z>
(HyperlinkEvent e) {<z>
source = e.getSource();<z>
source).getData() != null) {<z>
getData();<z>
getLink();<z>
{<z>
url.indexOf("?");<z>
= url;<z>
) {<z>
.replaceAll("\\?", "&");<z>
openUrl(url);<z>
true);<z>
().savePluginPreferences();<z>
IdeUiPlugin.getImage(ICON_BLOG_BLANK));<z>
);<z>
);<z>
));<z>
text);<z>
TableWrapData data = new TableWrapData();<z>
;<z>
.getSize().x - FEEDS_TEXT_WRAP_INDENT;<z>
= true;<z>
setLayoutData(data);<z>
(new PaintListener() {<z>
) {<z>
- FEEDS_TEXT_WRAP_INDENT;<z>
;<z>
);<z>
getBackground());<z>
= entry.getTitle();<z>
(0);<z>
(entry.getUpdatedDate() != null) {<z>
entry.getUpdatedDate();<z>
.getPublishedDate();<z>
String dateString = "";<z>
!= null) {<z>
;<z>
"";<z>
).trim() != "") {<z>
getAuthor();<z>
entryAuthor.length() > 0) {<z>
));<z>
TableWrapData();<z>
) {<z>
(IdeUiPlugin.getImage(ICON_BLOG_INCOMING));<z>
;<z>
linkData.indent = UPDATE_INDENTATION - 1;<z>
linkData);<z>
link.setData(entry);<z>
));<z>
, false, false);<z>
.swing.JSpinner();<z>
.swing.JLabel();<z>
= new JColorButton(Color.BLACK);<z>
Font("Tahoma", 0, 10));<z>
.valueOf(0.5f)));<z>
getMessage(NodePencilPanel.class, "NodePencilPanel.labelSize.text"));<z>
setContentAreaFilled(false);<z>
setFocusPainted(false);<z>
"Tahoma", 0, 10));<z>
.class, "NodePencilPanel.statusLabel.text"));<z>
new javax.swing.GroupLayout(this);<z>
.Alignment.LEADING)<z>
.addContainerGap()<z>
swing.LayoutStyle.ComponentPlacement.RELATED)<z>
PREFERRED_SIZE)<z>
javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)<z>
.ComponentPlacement.RELATED)<z>
, javax.swing.GroupLayout.PREFERRED_SIZE))<z>
swing.GroupLayout.Alignment.LEADING)<z>
javax.swing.GroupLayout.Alignment.BASELINE)<z>
GroupLayout.PREFERRED_SIZE)<z>
28, javax.swing.GroupLayout.PREFERRED_SIZE)<z>
.swing.GroupLayout.PREFERRED_SIZE)<z>
.PREFERRED_SIZE))<z>
javax.swing.GroupLayout.PREFERRED_SIZE)<z>
T> constructor, Object[] constructorArguments) {<z>
checkNotNull("constructorArguments", constructorArguments);<z>
parameterTypes = constructor.getParameterTypes();<z>
) {<z>
;<z>
0) {<z>
return NULL_PARAM_ARRAY;<z>
} else {<z>
(constructorArguments, parameterTypes);<z>
;<z>
constructorArguments;<z>
, String whereClause, String[] whereArgs) {<z>
whereClause, whereArgs);<z>
, whereClause, whereArgs);<z>
{<z>
(mBaseUri, packagesModified, Intent.ACTION_PROVIDER_CHANGED);<z>
&& mIsCallsTable) {<z>
;<z>
;<z>
{<z>
MessagePull)o;<z>
bs);<z>
, bs);<z>
(), bs);<z>
), bs);<z>
0;<z>
Paint outlinePaint) {<z>
(s) / 2;<z>
y);<z>
;<z>
gfx.setPaint(outlinePaint);<z>
), gfx.getFontRenderContext());<z>
outline = textTl.getOutline(null);<z>
gfx.translate(x, y);<z>
;<z>
-x, -y);<z>
gfx.setPaint(origPaint);<z>
pos, int length, int op)<z>
= m_ops.getOp(OpMap.MAPINDEX_LENGTH);<z>
- 1; i >= pos; i--)<z>
i));<z>
.setOp(pos,op);<z>
+ length);<z>
(int hpadding, int vpadding) {<z>
0, vpadding, hpadding));<z>
));<z>
hpadding));<z>
hpadding, vpadding, hpadding));<z>
parentShell,<z>
boolean primaryOnly,<z>
{<z>
dialog =<z>
(<z>
FACTORY),<z>
filter));<z>
.setValidator(new ISelectionStatusValidator() {<z>
validate(Object[] selection) {<z>
&& selection[0] instanceof EClass ) {<z>
, "");<z>
getString("MetamodelClassDialog.mustSelectClass");<z>
.ERROR, message);<z>
);<z>
setComparator(new ViewerComparator() {});<z>
.Util.getString("MetamodelClassDialog.selectClassTitle"));<z>
;<z>
.getMetamodelRegistry().getMetamodelDescriptors());<z>
;<z>
dialog;<z>
Request request)<z>
(request);<z>
hasBufferedResponse(request.getUrl()))<z>
;<z>
0;<z>
PortletRequest request, PortletWindow window)<z>
throws PortletContainerException {<z>
.getRemoteUser() != null ) {<z>
);<z>
return null;<z>
String message)<z>
.errorCode = errorCode;<z>
= message;<z>
) {<z>
= null;<z>
.reset();<z>
{<z>
InputStream in = resource.openInputStream();<z>
] = new byte[20000];<z>
(buffer);<z>
while (size > 0) {<z>
.write(buffer, 0, size);<z>
size = in.read(buffer);<z>
);<z>
int iSeriesIndex, double defaultThickness,<z>
)<z>
0d;<z>
= 0d;<z>
iSeriesIndex );<z>
( isStacked )<z>
? loaFrontFace[0].getY( )<z>
[3].getX( )<z>
- loaFrontFace[0].getX( );<z>
( )<z>
: loaFrontFace[2].getX( )<z>
;<z>
( dValue >= 0 )<z>
ssh.getInitialPositiveConeBottomWidth( ) ) )<z>
.setInitialPositiveConeBottomWidth( width );<z>
ssh.getInitialPositiveConeBottomWidth( );<z>
isNaN( ssh.getInitialNegativeConeBottomWidth( ) ) )<z>
);<z>
;<z>
width / initialWidth;<z>
value;<z>
initialize() {<z>
;<z>
) return;<z>
;<z>
.addSelectionListener(selectionListener);<z>
public void cAppWithIncorrectServerRole() throws MalformedURLException, RemoteException,<z>
InterruptedException {<z>
File.separator +<z>
separator + "serverRole-incorrect_1.0.0.car";<z>
));<z>
isCAppDeployed(sessionCookie, "incorrectServerRole",<z>
adminServiceApplicationAdmin), "Deployed serverRole-incorrect_1.0.0.car not in CApp List");<z>
;<z>
;<z>
,<z>
, Object a6, Object a7,<z>
Object a11,<z>
Object a15) throws Throwable {<z>
, a9,<z>
); }<z>
<URL> getResources(String name) {<z>
<URL>();<z>
(name);<z>
) {<z>
.getResources(strippedName);<z>
hasMoreElements()) {<z>
());<z>
) {<z>
;<z>
getResources(strippedName);<z>
while (urlEnum.hasMoreElements()) {<z>
());<z>
IOException e) {<z>
;<z>
urls;<z>
static final ContactSolverFunc resolveSingleCollision = new ContactSolverFunc() {<z>
info) {<z>
contactPoint, info);<z>
) {<z>
cachedFiles = getCachedRanges(attribute);<z>
) {<z>
return cachedFiles;<z>
;<z>
EMPTY_ARRAY;<z>
ranges;<z>
) {<z>
<TextRange>();<z>
;<z>
int j = 0;<z>
.createLexer(attribute.getProject());<z>
!= -1) {<z>
());<z>
;<z>
getTokenType() != null) {<z>
() == XPathTokenTypes.RBRACE) {<z>
);<z>
);<z>
if (j != -1) {<z>
1));<z>
{<z>
false));<z>
size() > 0) {<z>
);<z>
} else {<z>
ranges = EMPTY_ARRAY;<z>
else {<z>
[]{ attribute.getValueTextRange() };<z>
ranges));<z>
;<z>
(IProgressMonitor pm) throws CoreException {<z>
());<z>
[] changes= fChangeSignatureProcessor.getAllChanges();<z>
);<z>
} finally {<z>
null);<z>
;<z>
start, int end) {<z>
null) {<z>
;<z>
x.subSequence(start, end));<z>
return this;<z>
])<z>
{<z>
= 0;<z>
nArgs = argv.length;<z>
false;<z>
(argc < nArgs) {<z>
argv[argc++];<z>
) {<z>
;<z>
)) {<z>
);<z>
;<z>
.equals("-l")) {<z>
;<z>
)) {<z>
doScavengerRun = true;<z>
)) {<z>
;<z>
= true;<z>
("-f")) {<z>
argc < nArgs) {<z>
argc++];<z>
{<z>
;<z>
.equals("-h")) {<z>
argc < nArgs) {<z>
];<z>
File(envDir);<z>
else {<z>
;<z>
if (thisArg.equals("-d")) {<z>
if (argc < nArgs) {<z>
++];<z>
else {<z>
);<z>
(thisArg.equals("-s")) {<z>
{<z>
];<z>
} else {<z>
;<z>
if (thisArg.equals("-v")) {<z>
= true;<z>
else {<z>
thisArg + " is not a valid option.");<z>
envHome == null) {<z>
("-h is a required argument");<z>
(!listDbs &&<z>
) {<z>
(dbName == null) {<z>
);<z>
) {<z>
outputFile = System.out;<z>
{<z>
(new FileOutputStream(outputFileName));<z>
listDbs;<z>
, float par5, float par6)<z>
;<z>
i = amodelrenderer.length;<z>
< i; j++)<z>
modelrenderer = amodelrenderer[j];<z>
;<z>
(DocListener document, InputSource is) {<z>
(is, new SAXmyHtmlHandler(document));<z>
{<z>
;<z>
{<z>
new ExceptionConverter(ioe);<z>
Builder addAllRowChange(<z>
{<z>
(result.rowChange_.isEmpty()) {<z>
;<z>
, result.rowChange_);<z>
this;<z>
, URL context) throws MalformedURLException<z>
true);<z>
.getElementFromSource(source);<z>
)<z>
elem, "//DatasetList", null);<z>
null)<z>
)<z>
addRelevant(element, root, context);<z>
root;<z>
(int token, Object cookie, ImageView iView,<z>
imagePresent){<z>
null) {<z>
);<z>
void execDetailsEnd(int reqId)<z>
.execDetailsEnd(reqId);<z>
);<z>
) {<z>
);<z>
();<z>
= my.get(file);<z>
{<z>
;<z>
else {<z>
.endRow();<z>
Citation authority) {<z>
(info instanceof AbstractIdentifiedObject) {<z>
).getIdentifier(authority);<z>
return getIdentifier0(info, authority);<z>
protected boolean checkMayBreakBlockLocation(Block block) {<z>
getLocation();<z>
(arena == null) {<z>
diggingIfArenaUndefined) {<z>
;<z>
;<z>
this.floor.contains(blockLocation);<z>
else {<z>
{<z>
(diggingIfFloorUndefined) {<z>
: return false;<z>
GameStandard.DIGGING_EVERYWHERE: return true;<z>
(blockLocation);<z>
arena.contains(blockLocation);<z>
} else {<z>
);<z>
) {<z>
, int year, int monthOfYear,<z>
int dayOfMonth) {<z>
.getInstance();<z>
));<z>
dayOfMonth);<z>
setDate(certificationDate.getTimeInMillis());<z>
()));<z>
()<z>
) {<z>
= 0;<z>
return false;<z>
+= _inputEnd;<z>
-= _inputEnd;<z>
;<z>
, _inputBuffer.length);<z>
< 1) {<z>
_inputEnd = 0;<z>
count == 0) {<z>
);<z>
return false;<z>
= count;<z>
true;<z>
ioe) {<z>
new IoStreamException(ioe);<z>
Exception {<z>
== null) {<z>
;<z>
Date subject) {<z>
= nearbyDate(subject);<z>
)<z>
;<z>
return fullDateThisYear(subject);<z>
pTemplate,<z>
,<z>
Object pArg0,<z>
Object pArg1,<z>
pArg2,<z>
pArg3)<z>
isLoggingError ()) {<z>
format<z>
(pTemplate,<z>
new Object [] {<z>
pArg0,<z>
"" + pArg1,<z>
"" + pArg2,<z>
+ pArg3,<z>
),<z>
pRootCause);<z>
void addRowToSelection(int row) {<z>
;<z>
getCellSelectionEnabled()) {<z>
jTable.getColumnCount() - 1);<z>
RecognitionException {<z>
= keepStackSize();<z>
FOLLOW_rule__PortConnection__Group__0__Impl_in_rule__PortConnection__Group__0187373);<z>
);<z>
state._fsp--;<z>
.FOLLOW_rule__PortConnection__Group__1_in_rule__PortConnection__Group__0187376);<z>
);<z>
_fsp--;<z>
(RecognitionException re) {<z>
(re);<z>
,re);<z>
restoreStackSize(stackSize);<z>
void setJustificationRule(JustificationRule newJustificationRule) {<z>
justificationRule;<z>
justificationRule = newJustificationRule == null ? JUSTIFICATION_RULE_EDEFAULT : newJustificationRule;<z>
if (eNotificationRequired())<z>
.RICH_TEXT__JUSTIFICATION_RULE, oldJustificationRule, justificationRule));<z>
, boolean resolve, boolean coreType) {<z>
) {<z>
.VARIABLE_TYPE__GROUP:<z>
return getGroup();<z>
getGroup()).getWrapper();<z>
case ProcessPackage.VARIABLE_TYPE__TYPE:<z>
getType();<z>
VARIABLE_TYPE__VALUE:<z>
;<z>
.VARIABLE_TYPE__NAME:<z>
);<z>
(featureID, resolve, coreType);<z>
TokenStreamException {<z>
;<z>
);<z>
= null;<z>
tmp76_AST = null;<z>
astFactory.create(LT(1));<z>
currentAST, tmp76_AST);<z>
LITERAL_wchar);<z>
)currentAST.root;<z>
{<z>
) {<z>
;<z>
,_tokenSet_34);<z>
} else {<z>
throw ex;<z>
;<z>
public Authentication getAuthentication(){<z>
).getAuthentication();<z>
null &&<z>
&&<z>
next().getAuthority())<z>
) return null;<z>
return auth;<z>
final void ruleLEOpEquality() throws RecognitionException {<z>
= keepStackSize();<z>
backtracking==0 ) {<z>
));<z>
pushFollow(FollowSets000.FOLLOW_rule__LEOpEquality__Alternatives_in_ruleLEOpEquality6404);<z>
);<z>
._fsp--;<z>
failed) return ;<z>
if ( state.backtracking==0 ) {<z>
).getAlternatives());<z>
) {<z>
re);<z>
recover(input,re);<z>
);<z>
enchantments) {<z>
(Enchantment enchantment : enchantments){<z>
);<z>
request,<z>
)<z>
IOException {<z>
= WebloggerFactory.getWeblogger();<z>
);<z>
("id"));<z>
(c == null) {<z>
HttpServletResponse.SC_NOT_FOUND);<z>
} else {<z>
);<z>
);<z>
getAuthenticatedUser(), WeblogPermission.POST)) {<z>
));<z>
;<z>
content = StringEscapeUtils.escapeJavaScript(content);<z>
"content: \"" + content + "\" }";<z>
HttpServletResponse.SC_OK);<z>
);<z>
json);<z>
();<z>
).flush();<z>
).close();<z>
} else {<z>
;<z>
} catch (Exception e) {<z>
(e.getMessage());<z>
criteria)<z>
)<z>
isNew())<z>
= new ArrayList();<z>
CUSTOMER_ID, getCustomerId());<z>
;<z>
PaymentItemPeer.CUSTOMER_ID, getCustomerId());<z>
if (!lastPaymentItemsCriteria.equals(criteria))<z>
.doSelectJoinProject(criteria);<z>
= criteria;<z>
;<z>
PDFParseException {<z>
bimg = loadImageData(buf);<z>
.decodeImageData(bimg);<z>
return ByteBuffer.wrap(output);<z>
.String resourceName,<z>
int scope, long resourceActionBitwiseValue)<z>
exception.SystemException {<z>
(resourceName,<z>
, resourceActionBitwiseValue);<z>
public String getInfoText() {<z>
return "<html>" +<z>
createKeyInfoStructure(OutputProcessorChain outputProcessorChain) throws XMLStreamException, XMLSecurityException {<z>
);<z>
TAG_wsse_SecurityTokenReference, true, null);<z>
1);<z>
).getKeyId()));<z>
, attributes);<z>
(outputProcessorChain, WSSConstants.TAG_wsse_Reference);<z>
outputProcessorChain, WSSConstants.TAG_wsse_SecurityTokenReference);<z>
, XMLSecurityConstants.TAG_dsig_KeyInfo);<z>
addOutOfSync(IStatus status, IResource resource) {<z>
new Status(<z>
,<z>
,<z>
OUT_OF_SYNC_LOCAL,<z>
.getFullPath(), false)),<z>
;<z>
{<z>
;<z>
(status.isMultiStatus()) {<z>
);<z>
return status;<z>
{<z>
= new MultiStatus(<z>
PI_RESOURCES,<z>
OUT_OF_SYNC_LOCAL,<z>
, null);<z>
result.add(status);<z>
(entry);<z>
;<z>
] columns,<z>
List<String[]> values) {<z>
values);<z>
assert label != null;<z>
.label = label;<z>
{<z>
OK_INSTANCE;<z>
.getNewValue() != null) {<z>
getAffectedEditor()) {<z>
= event.getNewValue();<z>
(newValue instanceof String) {<z>
), (String)newValue);<z>
(), newValue);<z>
getAffectedEditor()) {<z>
;<z>
) {<z>
;<z>
;<z>
(IllegalArgumentException iae) {<z>
(iae);<z>
(WrappedException we) {<z>
.toDiagnostic(we);<z>
;<z>
getServerIP()<z>
s = null;<z>
"http.proxyHost") != null)<z>
),<z>
));<z>
80;<z>
URL url = new URL(_url);<z>
getPort() != -1) {<z>
port = url.getPort();<z>
getHost(), port);<z>
s.getLocalAddress().getHostAddress();<z>
null)<z>
s.close();<z>
)<z>
ex);<z>
.model.KaleoTaskAssignmentInstance> addTaskAssignmentInstances(<z>
,<z>
workflow.kaleo.model.KaleoTaskAssignment> kaleoTaskAssignments,<z>
io.Serializable> workflowContext,<z>
serviceContext)<z>
PortalException,<z>
SystemException {<z>
)<z>
,<z>
serviceContext);<z>
APDU) {<z>
0, 8,"DES");<z>
("DES/CBC/NoPadding", "SunJCE");<z>
IvParameterSpec ivSpec = new IvParameterSpec(iv_zero);<z>
, desSingleKey, ivSpec);<z>
= singleDesCipher.doFinal(C_MAC);<z>
);<z>
Exception e1) {<z>
null;<z>
= APDU[4] & 0xFF;<z>
8;<z>
4] & 0xFF;<z>
new byte[L];<z>
5, DataField, 0, L);<z>
L + 1;<z>
int padLength = 1;<z>
8!=0) {<z>
;<z>
++;<z>
[] toEnc = new byte[toEncLength];<z>
0, toEnc, 0, L);<z>
, toEncLength-L);<z>
new SecretKeySpec(S_ENC_24, "DESede");<z>
iv_zero);<z>
"DESede/CBC/NoPadding", "SunJCE");<z>
;<z>
(toEnc);<z>
catch (Exception e) {<z>
;<z>
byte[5+toEncLength + 8];<z>
);<z>
byte)Lc + (byte)padLength);<z>
, toEncLength);<z>
toEncLength, 8);<z>
resp;<z>
(_Fields field, Object value) {<z>
(field) {<z>
LOCATION:<z>
null) {<z>
();<z>
{<z>
String)value);<z>
CHUNK:<z>
(value == null) {<z>
);<z>
{<z>
);<z>
() {<z>
;<z>
= getField("ETT");<z>
{<z>
(FieldBodyETT) field.getBody();<z>
();<z>
);<z>
number, final Collection<FixedSizeByteBufferAllocatorImpl> slabs,<z>
final boolean allowAllocationToBiggerSlab )<z>
( number );<z>
;<z>
: slabs )<z>
;<z>
(final int cell) {<z>
(mySelectedContainer == null) return false;<z>
c: mySelectedContainer.getComponents()) {<z>
> 1) {<z>
false;<z>
;<z>
{<z>
int _type = T__29;<z>
int _channel = DEFAULT_TOKEN_CHANNEL;<z>
match("&&");<z>
= _type;<z>
.channel = _channel;<z>
throws IOException {<z>
line;<z>
) {<z>
line, -1);<z>
= result.length;<z>
if (nTokens != 2) {<z>
;<z>
0].trim(), genes);<z>
{<z>
;<z>
{<z>
BYTE;<z>
)) {<z>
KILOBYTE;<z>
n > -(1L << 30)) {<z>
MEGABYTE;<z>
-(1L << 40)) {<z>
GIGABYTE;<z>
(1L << 50)) {<z>
TERABYTE;<z>
{<z>
;<z>
else {<z>
EXABYTE;<z>
void runWithExceptions(InputStream is, OutputStream os) {<z>
IOException processException = null;<z>
os);<z>
catch (IOException e) {<z>
e;<z>
{<z>
{<z>
;<z>
(IOException e) {<z>
{<z>
processException);<z>
else {<z>
new RuntimeException(e);<z>
) {<z>
.close();<z>
e) {<z>
null) {<z>
RuntimeException(processException);<z>
} else {<z>
(e);<z>
if (processException != null) {<z>
);<z>
)<z>
();<z>
GROUP_ID_FUZZINESS.equals( resolutionFuzziness ) )<z>
getParentFile();<z>
);<z>
);<z>
groupParts = path.length - 4;<z>
);<z>
int count = 0;<z>
++ < groupParts )<z>
).length < 2 )<z>
;<z>
();<z>
( resolutionFuzziness ) )<z>
).getParentFile();<z>
( VERSION_FUZZINESS.equals( resolutionFuzziness ) )<z>
= deleteTarget.getParentFile();<z>
return deleteTarget;<z>
boolean hasclr)<z>
CommandHandler.isArrMatch(sheepcolors, args);<z>
;<z>
(loc, EntityType.SHEEP);<z>
;<z>
hasclr == true && iscolor == true)<z>
toUpperCase());<z>
(dye);<z>
sheep;<z>
) {<z>
(5, 2);<z>
xmin);<z>
.setOrdinate(0, 1, ymin);<z>
(1, 0, xmin);<z>
.setOrdinate(1, 1, ymax);<z>
0, xmax);<z>
);<z>
xmax);<z>
(3, 1, ymin);<z>
4, 0, xmin);<z>
);<z>
.createLinearRing(cs);<z>
void dispose() {<z>
if (isDisposed()) {<z>
disposables.dispose();<z>
= null;<z>
MAP map, final InstanceIdentifier identifier)<z>
, IOException<z>
;<z>
;<z>
;<z>
sfe) {<z>
SoapFault11.create(sfe);<z>
() {<z>
height;<z>
orientation = getOrientation();<z>
PORTRAIT) {<z>
;<z>
} else {<z>
();<z>
;<z>
public void updateDataSet(DataSet ds) {<z>
Node n : ds.getNodes()) {<z>
"amenity", "kindergarten");<z>
, "name");<z>
void selectAll() {<z>
().length();<z>
) {<z>
);<z>
public void setSource(ExpCS newSource)<z>
;<z>
= newSource;<z>
())<z>
.OPERATOR_CS__SOURCE, oldSource, source));<z>
shouldExecute()<z>
getRNG().nextFloat() >= field_48294_e)<z>
return false;<z>
)<z>
);<z>
, field_46105_a);<z>
return field_48295_b != null;<z>
T> clazzToSet, final T entityToSet) {<z>
super(sourceToSet);<z>
;<z>
clazz = clazzToSet;<z>
;<z>
entity = entityToSet;<z>
delete( final File file )<z>
)<z>
;<z>
if ( !file.exists() )<z>
return false;<z>
flag = file.delete();<z>
if ( flag )<z>
() + "]" );<z>
;<z>
{<z>
CREATURE}, "{3}{W}");<z>
= "TMP";<z>
("Bird");<z>
true);<z>
);<z>
this.toughness = new MageInt(2);<z>
.getInstance());<z>
false);<z>
.addTarget(new TargetPermanent(filter));<z>
this.addAbility(ability);<z>
String contentType, String mimeType, String encoding) {<z>
mimeType == null) {<z>
return false;<z>
mimeTypeToBuffer : mimeTypesToBuffer) {<z>
mimeTypeToBuffer.equalsIgnoreCase(mimeType)) {<z>
;<z>
return false;<z>
final PermanentToken permanent) {<z>
(permanent);<z>
;<z>
= permanent.expansionSetCode;<z>
public void functxFunctxYearMonthDuration3() {<z>
final XQuery query = new XQuery(<z>
ctx);<z>
query);<z>
= res;<z>
"P1Y")<z>
public void setVisible(boolean vis) {<z>
;<z>
vis && alignUnder != null) {<z>
alignUnder.requestFocusInWindow();<z>
private boolean r_consonant_pair() {<z>
int v_1;<z>
;<z>
int v_3;<z>
- cursor;<z>
(cursor < I_p1)<z>
return false;<z>
;<z>
v_2 = limit_backward;<z>
cursor;<z>
;<z>
cursor;<z>
(a_1, 7) == 0)<z>
limit_backward = v_2;<z>
false;<z>
;<z>
= cursor;<z>
limit_backward)<z>
v_2;<z>
return false;<z>
--;<z>
;<z>
;<z>
= v_2;<z>
;<z>
result) {<z>
) {<z>
;<z>
);<z>
else {<z>
"Ha habido algún error enviando las notificaciones.");<z>
private int resolveSizeAndStateRespectingMinSize(int minSize, int measuredSize,<z>
) {<z>
(minSize != SIZE_UNSPECIFIED) {<z>
(minSize, measuredSize);<z>
desiredWidth, measureSpec);<z>
} else {<z>
return measuredSize;<z>
public boolean equals(Object o) {<z>
o)<z>
;<z>
(!(o instanceof GlobalRef))<z>
false;<z>
t = this.get();<z>
.get();<z>
u == null))<z>
;<z>
if (t == u)<z>
return true;<z>
t.equals(u);<z>
entityName, String referencedEntityName, PropertyData propertyData) {<z>
(propertyData);<z>
this.entityName = entityName;<z>
referencedEntityName = referencedEntityName;<z>
accumulate(Object context, Object value) {<z>
) context;<z>
value);<z>
setAvaliableIncidences(Collection<Object> res) {<z>
;<z>
comparator);<z>
SwingWorker<Object, Object>() {<z>
doInBackground() throws Exception {<z>
null;<z>
protected void done() {<z>
();<z>
(!isComboIncidencesShowing) {<z>
);<z>
incidences.removeAllItems();<z>
(Object o : avaliableIncidences) {<z>
incidences.addItem(o);<z>
(selected);<z>
(!isComboIncidencesShowing)<z>
);<z>
.execute();<z>
() {<z>
{<z>
.getText();<z>
TEXT_STATE) {<z>
property = properties[currentPropertyIndex - 1];<z>
{<z>
((DataHandler)property);<z>
} else {<z>
[currentPropertyIndex - 1];<z>
else {<z>
new IllegalStateException();<z>
ExemptionMechanism(ExemptionMechanismSpi exmechSpi,<z>
, String mechanism) {<z>
mechanism;<z>
;<z>
provider = provider;<z>
false;<z>
) throws CoreException {<z>
if (bindings == null)<z>
ArrayList<IIndexName>();<z>
<IIndexName> polymorphicNames= null;<z>
);<z>
) {<z>
binding)) {<z>
index, binding, names);<z>
(flags & FIND_REFERENCES) != 0) {<z>
bindings) {<z>
if (binding != null) {<z>
specializations = IndexQueries.findSpecializations(binding);<z>
) {<z>
.add(spec)) {<z>
);<z>
(binding instanceof ICPPMethod) {<z>
) binding;<z>
, null);<z>
.length > 0) {<z>
polymorphicNames == null) {<z>
>();<z>
for (ICPPMethod mInBase : msInBases) {<z>
(mInBase)) {<z>
mInBase, polymorphicNames);<z>
names.isEmpty()) {<z>
(index, names, polymorphicNames);<z>
public void resultPlayerStatus(final MsgGroup mg) {<z>
.debug(mg.getResult());<z>
final HashMap<String, Integer> res = DirectiveHelper<z>
getResultStr());<z>
;<z>
public String toString() {<z>
;<z>
);<z>
append(id);<z>
).append('\'');<z>
(price);<z>
(description).append('\'');<z>
'\'');<z>
append(", numberOfCDs=").append(numberOfCDs);<z>
).append(totalDuration);<z>
'\'');<z>
(", tracks=").append(tracks);<z>
append('}');<z>
;<z>
includeGraphics) throws IOException {<z>
new OutputStreamWriter(os);<z>
XStream();<z>
.ID_REFERENCES);<z>
if (includeGraphics) {<z>
getRuleFlowModel(), writer);<z>
} else {<z>
getProcess(), writer);<z>
);<z>
{<z>
.log(t);<z>
String transformParameters(String matchedParameters) {<z>
);<z>
endsWith(")")){<z>
)-1);<z>
"") ) {<z>
return "";<z>
String>();<z>
currentClass().insideParameters();<z>
;<z>
int linesSoFar = generatedSource.size();<z>
lineTransformer =<z>
, false);<z>
("\\s*,\\s*")) {<z>
;<z>
linesSoFar);<z>
) - linesSoFar;<z>
i < removeN ; i++ ) {<z>
generatedSource.size()-1);<z>
.previousState();<z>
return parameters;<z>
setValue(T value) {<z>
;<z>
value = value;<z>
notifyAll();<z>
TitleBar(String toggleDialogName) {<z>
GridBagLayout());<z>
"minimized"));<z>
);<z>
lblTitle = new JLabel(toggleDialogName);<z>
HORIZONTAL));<z>
() {<z>
public void mouseClicked(MouseEvent e) {<z>
) {<z>
expand();<z>
} else {<z>
;<z>
tr("Click to minimize/maximize the panel content"));<z>
setTitle(toggleDialogName);<z>
{<z>
(httpClient);<z>
);<z>
: defaultHeaders.keySet()) {<z>
header));<z>
getInputStreams(List<String> paths) {<z>
rs = makeResources(paths);<z>
InputStream[rs.size()];<z>
) {<z>
get(i);<z>
r.getInputStream();<z>
IOException e) {<z>
e);<z>
return streams;<z>
throws Exception {<z>
).and()<z>
ownedBy("David")<z>
"This is the first").and()<z>
.whichDescriptionIs("This is the second").and()<z>
)<z>
whichDescriptionIs("This is the forth").and()<z>
()<z>
iAmLoggedInAs("David");<z>
)<z>
and()<z>
);<z>
appearsOnList("recent-cards");<z>
public String getNodeName(final int node)<z>
) {<z>
;<z>
.getNodeName(node);<z>
, IProject project) {<z>
this.project = project;<z>
;<z>
;<z>
.setWindowTitle("Saros - Configure project to share");<z>
SarosResourceSelectionPage("Select Resources to Share",<z>
(project));<z>
;<z>
wizard);<z>
protected void executeQueryCommand() {<z>
()<z>
)<z>
.getDiskGuid()));<z>
{<z>
eperson = null;<z>
("Shibboleth Sword compatibility activated.");<z>
));<z>
catch (AuthorizeException ae) {<z>
null) {<z>
("Shibboleth-based password authentication failed for user "+username+" because no such user exists.");<z>
return NO_SUCH_USER;<z>
eperson.canLogIn()) {<z>
+username+" because the eperson object is not allowed to login.");<z>
;<z>
(eperson.getRequireCertificate()) {<z>
("Shibboleth-based password authentication failed for user "+username+" because the eperson object requires a certificate to authenticate..");<z>
;<z>
(password)) {<z>
request, eperson);<z>
context.setCurrentUser(eperson);<z>
)+" has been authenticated via shibboleth using password-based sword compatibility mode.");<z>
return SUCCESS;<z>
else {<z>
);<z>
BAD_CREDENTIALS;<z>
RemoteException<z>
adminAsyncMessage newLogEvent;<z>
done)<z>
new RemoteException("serverAdminProxy: console disconnected");<z>
)<z>
)<z>
0);<z>
status);<z>
));<z>
] = addEvent(newLogEvent);<z>
(Object reader, Object semicolon) {<z>
(Reader) reader;<z>
ch;<z>
);<z>
&& ch != '\r');<z>
return r;<z>
(TagInfoXpString tagInfo, String value) throws ImageWriteException {<z>
, byteOrder);<z>
.tag, tagInfo,<z>
;<z>
);<z>
void updateCamera()<z>
gl.GL_PROJECTION);<z>
);<z>
);<z>
).getWorldTransform(chassisWorldTrans);<z>
.set(chassisWorldTrans.origin);<z>
cameraTargetPosition.y + cameraHeight) / 16.0f;<z>
Vector3f camToObject = new Vector3f();<z>
.sub(cameraTargetPosition, cameraPosition);<z>
cameraDistance = camToObject.length();<z>
correctionFactor = 0f;<z>
< minCameraDistance)<z>
cameraDistance)/cameraDistance;<z>
maxCameraDistance)<z>
*(maxCameraDistance-cameraDistance)/cameraDistance;<z>
;<z>
camToObject);<z>
tmp);<z>
10000.0);<z>
(IGL.GL_MODELVIEW);<z>
;<z>
,<z>
, cameraTargetPosition.z,<z>
);<z>
response)<z>
=response;<z>
_responseWrapped=_response instanceof ServletResponseWrapper;<z>
=false;<z>
_expired=false;<z>
_completed=false;<z>
;<z>
)<z>
_retry=retry;<z>
createFeature(Feature.Template ft) throws BioException,<z>
;<z>
, ft);<z>
) {<z>
ChangeVetoException("They don't like our term", e);<z>
RichSequence.FEATURES)) {<z>
features.add(f);<z>
{<z>
(this, RichSequence.FEATURES, f,<z>
null);<z>
;<z>
(cs) {<z>
cs.firePreChangeEvent(ce);<z>
f);<z>
;<z>
f;<z>
)<z>
.addFocusListener( new FocusAdapter( ) {<z>
e )<z>
( text.getText( ) );<z>
);<z>
text.addKeyListener( new KeyAdapter( ) {<z>
KeyEvent e )<z>
.keyCode == SWT.CR )<z>
);<z>
;<z>
{<z>
mouseDown( MouseEvent e )<z>
1;<z>
);<z>
mouseUp( MouseEvent e )<z>
);<z>
1 );<z>
;<z>
down.addMouseListener( new MouseAdapter( ) {<z>
void mouseDown( MouseEvent e )<z>
;<z>
( );<z>
e )<z>
;<z>
-1 );<z>
);<z>
() {<z>
!versionsInitialized) {<z>
();<z>
) {<z>
;<z>
return jvm_special_version;<z>
public EList<Trigger> getTriggers( )<z>
== null )<z>
( Trigger.class,<z>
;<z>
triggers;<z>
(Object o) {<z>
== null) {<z>
;<z>
instanceof Byte) {<z>
(Byte) o;<z>
else if (o instanceof Integer) {<z>
;<z>
) {<z>
Double) o;<z>
(o instanceof Float) {<z>
;<z>
if (o instanceof Long) {<z>
(long) (Long) o;<z>
{<z>
return null;<z>
, byte[] b2)<z>
i < b2.length; i++)<z>
!= b2[i])<z>
(mDebug)<z>
info("offset " + i + " differs (this is "<z>
(i - mOffset) + " bytes in from our offset.)");<z>
& 0xFF);<z>
.length - b2.length;<z>
[] nodes) {<z>
nodeManagerListeners) {<z>
nodes);<z>
) {<z>
view.getEAnnotation("Shortcut") != null) {<z>
;<z>
(view);<z>
) {<z>
.VISUAL_ID:<z>
case ShipEditPart.VISUAL_ID:<z>
.VISUAL_ID:<z>
{<z>
;<z>
;<z>
[] challenge ) {<z>
= new byte[14];<z>
[21];<z>
byte[24];<z>
] passwordBytes;<z>
getBytes( ServerMessageBlock.OEM_ENCODING );<z>
UnsupportedEncodingException uee ) {<z>
("Try setting jcifs.encoding=US-ASCII", uee);<z>
passwordLength = passwordBytes.length;<z>
{<z>
;<z>
, 0, p14, 0, passwordLength );<z>
);<z>
challenge, p24);<z>
return p24;<z>
height)<z>
width, y + height ) );<z>
);<z>
LINESTYLE_NONE);<z>
foreground.getBlue());<z>
), foreground.getBlue());<z>
char c )<z>
) )<z>
1;<z>
HEX_VALUE[c];<z>
[] argv) {<z>
"b", true);<z>
, st1.nextToken("b"));<z>
.hasMoreTokens();<z>
));<z>
;<z>
();<z>
, st2.nextToken("bc"));<z>
st2.hasMoreTokens();<z>
.nextToken());<z>
st2.hasMoreTokens();<z>
.nextToken(" ef"));<z>
;<z>
(" "));<z>
);<z>
));<z>
);<z>
;<z>
",");<z>
hasMoreTokens();<z>
"this is", st3.nextToken());<z>
);<z>
nextToken(" "));<z>
();<z>
st3.nextToken(","));<z>
hasMoreTokens();<z>
, st3.nextToken(" "));<z>
st3.hasMoreTokens();<z>
);<z>
);<z>
nextToken());<z>
) {<z>
) {<z>
0;<z>
underReplicatedBlocks;<z>
string) {<z>
text.getText();<z>
(editMaskParser != null) {<z>
;<z>
= editMaskParser.getFormattedResult();<z>
;<z>
(FIELD_TEXT, oldValue, formattedResult);<z>
} else {<z>
text.setText(string);<z>
;<z>
oldValidText = text.getText();<z>
();<z>
String dispatch(Message message) throws IOException {<z>
AvroClientHandler.class);<z>
= handler.dispatch(message);<z>
, format("response: %s", response));<z>
;<z>
) {<z>
));<z>
if (commandControl != CommandControl.NOT_OK) {<z>
.SYNTAX_OK;<z>
.trim().startsWith("{")<z>
{<z>
(previous + " {");<z>
<Iterator<String>>();<z>
);<z>
add(new VariatorSwapLetter(incorrectLine));<z>
'-'));<z>
VariatorAddOneCharBetweenWords(incorrectLine, ' '));<z>
it : all) {<z>
tryThis(it);<z>
!= null) {<z>
result;<z>
CANNOT_CORRECT;<z>
StringBuilder accumulatedName, String type, String name) {<z>
)) {<z>
+ ");\n");<z>
).iterator();<z>
while (das.hasNext()) {<z>
.next();<z>
contains(da.getType())) {<z>
");\n");<z>
(dataTypeTemplates, type).iterator();<z>
) {<z>
);<z>
new StringBuilder(accumulatedName + name + ".");<z>
());<z>
()<z>
= _includePath;<z>
if (_includePathIniCount != _iniCount) {<z>
= QuercusContext.INI_INCLUDE_PATH.getAsString(this);<z>
null;<z>
null;<z>
(includePath == null)<z>
".";<z>
return includePath;<z>
)<z>
throws XMLStreamException {<z>
;<z>
value);<z>
)<z>
{<z>
comps = getComponents(graph);<z>
() != 1) {<z>
);<z>
(){<z>
BOTTOM ){<z>
return true;<z>
() instanceof JViewport ){<z>
().height ){<z>
;<z>
;<z>
cons, GeoSegment segment) {<z>
(cons);<z>
this.segment = segment;<z>
);<z>
();<z>
);<z>
();<z>
();<z>
o){<z>
getClass().getMethods();<z>
Method m : cmds) {<z>
);<z>
!= null){<z>
;<z>
name = anot.name();<z>
) & Modifier.STATIC) != 0 )<z>
= null;<z>
target = o;<z>
;<z>
) {<z>
throw new IllegalCommandFormatException();<z>
) {<z>
();<z>
createDotNetString ("PART_ContentHost", false);<z>
template = OS.Control_Template (handle);<z>
template, name, handle);<z>
) {<z>
;<z>
handle);<z>
OS.GCHandle_Free (name);<z>
);<z>
scroller == 0) return 0;<z>
ScrollViewer_VerticalOffset (scroller);<z>
scroller);<z>
return (int) vertOffset;<z>
ScriptProject project,<z>
ISourceModule[] workingCopies) {<z>
;<z>
new NameLookup(cache.allProjectFragmentCache,<z>
cache.allPkgFragmentsCache, cache.isPackageCache,<z>
cache.rootToResolvedEntries);<z>
String name, Object value) {<z>
vs : vss)<z>
.set(name, value);<z>
;<z>
void populateClassInfoMap(final WebkitRemoteObject classInfo) {<z>
);<z>
).getRuntime().getProperties(<z>
() {<z>
]> result) {<z>
()) {<z>
{<z>
equals("class")) {<z>
.getValue();<z>
.put(classInfo, className);<z>
.countDown();<z>
});<z>
IOException ex) {<z>
countDown();<z>
);<z>
(InterruptedException e) {<z>
<Enumeration> getEnumerators() {<z>
> enumeratorSet = new TreeSet<Enumeration>(<z>
) {<z>
(Enumeration o1, Enumeration o2) {<z>
name.compareTo(o2.name);<z>
for (RowsetDefinition rowsetDefinition<z>
)<z>
Column column : rowsetDefinition.columnDefinitions) {<z>
!= null) {<z>
enumeratorSet.add(column.enumeration);<z>
>(enumeratorSet);<z>
XPath createXPath() {<z>
.newXPath();<z>
setNamespaceContext(createNamespaceContext());<z>
xpath;<z>
(AbstractHalfEdge that)<z>
.sym;<z>
;<z>
)<z>
.STYLE_PLAIN, Font.SIZE_SMALL);<z>
debug_font);<z>
g.setColor(0x0000FF);<z>
,canvas.getHeight());<z>
0xFFFFFF);<z>
y_off=0;<z>
=debug_pos;<z>
tmp_pos--)<z>
tmp_pos];<z>
="";<z>
length();tmp_i++)<z>
=='\n'))<z>
,Graphics.TOP | Graphics.LEFT);<z>
();<z>
;<z>
tmp_i);<z>
);<z>
;<z>
Curve getCurve() {<z>
(parent instanceof Curve)<z>
return (Curve) parent;<z>
return null;<z>
clear() {<z>
();<z>
clear();<z>
;<z>
getRecipients() {<z>
MailAddress>();<z>
(SpecialAddress.REVERSE_PATH);<z>
newRecipients;<z>
{<z>
angSt) % 360;<z>
toDegrees(angEnd) % 360;<z>
if (angStDeg > angEndDeg)<z>
;<z>
isBeamer)<z>
code.append(" ");<z>
;<z>
code);<z>
append("}");<z>
String s = LineOptionCode(geo, false);<z>
0) {<z>
.append("," + s + "] ");<z>
{<z>
.append("] ");<z>
"(");<z>
append(format(angStDeg));<z>
append(":");<z>
(r));<z>
.append(") arc (");<z>
));<z>
;<z>
(format(angEndDeg));<z>
);<z>
);<z>
(");\n");<z>
static void main(String[] args) {<z>
new File("C:\\Temp\\source.txt");<z>
= new File("C:\\Temp\\target.txt");<z>
;<z>
null;<z>
();<z>
).getChannel();<z>
,<z>
sourceChannel.size());<z>
) {<z>
e.printStackTrace();<z>
} finally {<z>
null) {<z>
);<z>
!= null) {<z>
.close();<z>
e) {<z>
();<z>
setTraceID(String traceID) {<z>
(traceID != null) {<z>
traceID = traceID;<z>
{<z>
traceID = "";<z>
)<z>
(nodeService == null)<z>
getNodeService();<z>
this.nodeService;<z>
getTagLexeme(IParseState state, int offset)<z>
state.getLexemeList();<z>
;<z>
== HTMLTokenTypes.START_TAG<z>
))<z>
;<z>
.getCeilingLexeme(offset);<z>
null)<z>
;<z>
typeIndex == HTMLTokenTypes.START_TAG<z>
)<z>
;<z>
int currentLexemeIndex = lexemeList.getLexemeIndex(currentLexeme);<z>
<= 0)<z>
;<z>
lexemeList.get(currentLexemeIndex - 1);<z>
previousLexeme.typeIndex == HTMLTokenTypes.START_TAG<z>
.END_TAG)<z>
)<z>
previousLexeme;<z>
;<z>
) {<z>
{<z>
:<z>
;<z>
:<z>
getCredentials();<z>
KEY_EXTENT:<z>
);<z>
case MUTATION:<z>
);<z>
new IllegalStateException();<z>
()<z>
null &&<z>
.hasReal() );<z>
()<z>
FlowPanel panel = new FlowPanel();<z>
);<z>
tableHeaderLabel());<z>
);<z>
header.addKeyUpHandler(this);<z>
.setValue(descriptor.isWithHeader());<z>
);<z>
;<z>
;<z>
;<z>
return panel;<z>
public static String selectAsString(<z>
node,<z>
String xpath,<z>
Node namespaceNode)<z>
.select(node, xpath, namespaceNode);<z>
convertToString(xpathResult, false);<z>
(Sequence[] args, Sequence contextSequence)<z>
XPathException {<z>
.isEmpty())<z>
Sequence.EMPTY_SEQUENCE;<z>
toNodeSet();<z>
();<z>
0);<z>
)).getInt();<z>
FunctionCall call = ref.getFunctionCall();<z>
new ValueSequence();<z>
getArgumentCount() == 5) {<z>
;<z>
(indexWorker == null)<z>
());<z>
);<z>
VALUE_COUNT, new IntegerValue(max));<z>
instanceof OrderedValuesIndex)<z>
START_VALUE, args[1]);<z>
+ "' ignored." );<z>
);<z>
max : occur.length);<z>
[2];<z>
ValueSequence data = new ValueSequence();<z>
) {<z>
;<z>
occur[j].getOccurrences(),<z>
.UNSIGNED_INT));<z>
(occur[j].getDocuments(),<z>
.UNSIGNED_INT));<z>
, Type.UNSIGNED_INT));<z>
[1] = data;<z>
contextSequence, null, params));<z>
();<z>
} else {<z>
.getIndexType();<z>
);<z>
null;<z>
);<z>
qnames != null && qnames.length > 0)<z>
);<z>
scanIndexKeys(docs, nodes, indexable);<z>
null || occur.length == 0)<z>
;<z>
length];<z>
length);<z>
);<z>
t;<z>
;<z>
] = new Sequence[2];<z>
ValueSequence();<z>
++) {<z>
[j].getValue();<z>
(occur[j].getOccurrences(),<z>
UNSIGNED_INT));<z>
),<z>
UNSIGNED_INT));<z>
;<z>
params[1] = data;<z>
null, params));<z>
;<z>
));<z>
return result;<z>
Object onSelectedFromAbort()<z>
page.setMessage("onSelectedFromAbort() invoked.");<z>
return page;<z>
void doAsserts() {<z>
) {<z>
verify();<z>
mConnectionNum == (i + 1);<z>
unit ) {<z>
= null;<z>
= unit.getLexicalUnitType();<z>
== LexicalUnit.SAC_PERCENTAGE ) {<z>
normalizePercentValue( unit.getFloatValue() ) );<z>
{<z>
unit.getFloatValue() * 100 ) );<z>
result;<z>
{<z>
StringTokenizer( source,<z>
;<z>
);<z>
{<z>
().trim();<z>
) ) {<z>
;<z>
"rule" ) ) {<z>
getRuleName( line );<z>
();<z>
lines,<z>
;<z>
addRule( ruleName,<z>
currentRule );<z>
) {<z>
line );<z>
new StringBuilder();<z>
counter = 0;<z>
( line ).append( "\n" );<z>
countBrackets( counter,<z>
line );<z>
{<z>
( counter,<z>
currentFunc );<z>
,<z>
);<z>
.startsWith( "declare" ) ) {<z>
String declarationName = getDeclarationName( line );<z>
= new StringBuilder();<z>
line ).append( "\n" );<z>
{<z>
laConsumeDeclarationToEnd( lines,<z>
);<z>
addDeclaredModel( declarationName,<z>
;<z>
if ( line.startsWith( "/*" ) ) {<z>
;<z>
).append( "\n" );<z>
laConsumeToEnd( lines,<z>
;<z>
.append( comment );<z>
line.startsWith( "expander" ) ) {<z>
usesDSL = true;<z>
{<z>
( line );<z>
( "\n" );<z>
;<z>
EditorContext editorContext, SNode node) {<z>
(editorContext, node, "(");<z>
("Constant_xn2ov4_a2a");<z>
).apply(editorCell);<z>
Style style = editorCell.getStyle();<z>
, true);<z>
.PUNCTUATION_LEFT, true);<z>
.setDefaultText("");<z>
;<z>
) {<z>
new HashSet();<z>
)) {<z>
.get(field));<z>
size();<z>
notifyCompletion(Exception exception) {<z>
this.exception = exception;<z>
.removePieceProgressListener(pieceListener);<z>
(stateListener);<z>
(new IIncomingFileTransferReceiveDoneEvent() {<z>
) {<z>
return TorrentFileTransfer.this.exception;<z>
public IIncomingFileTransfer getSource() {<z>
return TorrentFileTransfer.this;<z>
);<z>
compareTo(int otherHash) {<z>
== otherHash)<z>
;<z>
(hashcode > otherHash)<z>
1;<z>
1;<z>
fileSource) {<z>
= new StringReader(fileSource);<z>
,CoreConstants.ENCODING_UTF8);<z>
int bufferlength=1000;<z>
new char[bufferlength];<z>
(buf);<z>
){<z>
buf,0,read);<z>
);<z>
.close();<z>
out.close();<z>
close();<z>
IOException e) {<z>
;<z>
run() {<z>
));<z>
;<z>
())<z>
() + "] Waiting for datagrams ...");<z>
null;<z>
pkt = null;<z>
;<z>
hasShutdown() == false) {<z>
) {<z>
);<z>
( pkt == null) {<z>
, buf.length);<z>
, buf.length);<z>
buf.length);<z>
pkt);<z>
reusePkt = processDatagram(pkt);<z>
) {<z>
( Debug.EnableInfo && hasDebug())<z>
+ "] Error processing datagram, " + ex.toString());<z>
SocketException ex) {<z>
== false) {<z>
.toString());<z>
.println(ex);<z>
Exception ex) {<z>
() == false) {<z>
toString());<z>
.println(ex);<z>
)<z>
;<z>
protected void tearDown() throws Exception {<z>
();<z>
boolean shutdown;<z>
.close();<z>
= true;<z>
{<z>
;<z>
.equals( sqlState ) )<z>
;<z>
throw e;<z>
shutdown)<z>
(logicalDBName);<z>
;<z>
);<z>
, String command )<z>
= exitValue;<z>
;<z>
final void rule__DataSubcomponent__NameAssignment_0_0_0() throws RecognitionException {<z>
= keepStackSize();<z>
;<z>
,FollowSets010.FOLLOW_RULE_ID_in_rule__DataSubcomponent__NameAssignment_0_0_0261578);<z>
getNameIDTerminalRuleCall_0_0_0_0());<z>
) {<z>
reportError(re);<z>
re);<z>
(stackSize);<z>
{<z>
);<z>
);<z>
indexY)<z>
indexY)];<z>
{<z>
Hosts.isServiceLocal( input ) ) {<z>
.getFullName( ) );<z>
( input );<z>
) {<z>
ex );<z>
(final int maxALength) {<z>
.cornerPos;<z>
mep = cube.mEdgePos;<z>
uEdgePos;<z>
.dEdgePos;<z>
< stackASize; i++) {<z>
i].cubeTurn;<z>
(turn, cp);<z>
;<z>
turn, uep);<z>
(turn, dep);<z>
is_dEdgePos_inB(dep))<z>
= transformB.convert_uEdgePos_dEdgePos_to_udEdgePosB(uep, dep);<z>
convertTo_mEdgePos(mep);<z>
;<z>
mepB, cp);<z>
(mep_cp_d > maxSearchLength - maxALength) {<z>
;<z>
, udepB);<z>
{<z>
bpry++;<z>
, udepB);<z>
turnListB);<z>
, mep_udep_d);<z>
maxBLength++)<z>
, maxBLength);<z>
public void onTick()<z>
; i < 16; i++)<z>
16; j++)<z>
0.0F;<z>
;<z>
);<z>
++)<z>
i2++)<z>
int k2 = k1 + l & 0xf;<z>
;<z>
[k2 + i3 * 16];<z>
* 0.8F;<z>
[i + j * 16] * 0.01F;<z>
0.0F)<z>
+ j * 16] = 0.0F;<z>
j * 16] -= 0.06F;<z>
(Math.random() < 0.0050000000000000001D)<z>
= 1.5F;<z>
float af[] = field_1146_h;<z>
field_1146_h = field_1147_g;<z>
= af;<z>
256; k++)<z>
[k] * 2.0F;<z>
f1 > 1.0F)<z>
1.0F;<z>
< 0.0F)<z>
;<z>
float f2 = f1;<z>
f2 * 100F + 155F);<z>
f2 * f2 * 255F);<z>
* f2 * f2 * f2 * 128F);<z>
(anaglyphEnabled)<z>
* 11) / 100;<z>
+ l1 * 70) / 100;<z>
100;<z>
j1 = l2;<z>
j3;<z>
k3;<z>
)j1;<z>
] = (byte)l1;<z>
)j2;<z>
k * 4 + 3] = -1;<z>
getSelectedElement() {<z>
.getSelectionPaths();<z>
) {<z>
;<z>
]);<z>
() {<z>
) {<z>
configure() {<z>
(null);<z>
);<z>
listWrapper, DtoListWrapper.class);<z>
"Person A");<z>
, "Person B");<z>
par2)<z>
if (par2 == 15)<z>
;<z>
field_50060_d = false;<z>
par2 == 1)<z>
);<z>
28)<z>
getText().trim();<z>
.lineIsCommand(s))<z>
.sendChatMessage(s);<z>
);<z>
== 200)<z>
1);<z>
208)<z>
);<z>
(par2 == 201)<z>
19);<z>
else if (par2 == 209)<z>
19);<z>
field_50064_a.func_50037_a(par1, par2);<z>
() {<z>
) {<z>
Normal:<z>
(value);<z>
SaidNumber:<z>
;<z>
Expression:<z>
"%NUMBER", "number") + "); end";<z>
return null;<z>
public DLFileEntry toEntityModel() {<z>
;<z>
{<z>
;<z>
);<z>
;<z>
groupId);<z>
;<z>
dlFileEntryImpl.setUserId(userId);<z>
userName == null) {<z>
.BLANK);<z>
dlFileEntryImpl.setUserName(userName);<z>
);<z>
) {<z>
StringPool.BLANK);<z>
;<z>
Long.MIN_VALUE) {<z>
);<z>
createDate));<z>
if (modifiedDate == Long.MIN_VALUE) {<z>
;<z>
;<z>
;<z>
;<z>
(name == null) {<z>
setName(StringPool.BLANK);<z>
(name);<z>
if (extension == null) {<z>
.BLANK);<z>
(extension);<z>
) {<z>
(StringPool.BLANK);<z>
setMimeType(mimeType);<z>
(title == null) {<z>
;<z>
dlFileEntryImpl.setTitle(title);<z>
) {<z>
.setDescription(StringPool.BLANK);<z>
dlFileEntryImpl.setDescription(description);<z>
{<z>
dlFileEntryImpl.setExtraSettings(StringPool.BLANK);<z>
.setExtraSettings(extraSettings);<z>
;<z>
{<z>
(StringPool.BLANK);<z>
dlFileEntryImpl.setVersion(version);<z>
dlFileEntryImpl.setSize(size);<z>
);<z>
setSmallImageId(smallImageId);<z>
setLargeImageId(largeImageId);<z>
dlFileEntryImpl.setCustom1ImageId(custom1ImageId);<z>
custom2ImageId);<z>
manualCheckInRequired);<z>
.resetOriginalValues();<z>
return dlFileEntryImpl;<z>
throws Exception {<z>
(separateServerThread) {<z>
true);<z>
);<z>
else {<z>
;<z>
);<z>
) {<z>
serverThread.join();<z>
} else {<z>
;<z>
!= null) {<z>
print("Server Exception:");<z>
;<z>
{<z>
print("Client Exception:");<z>
throw clientException;<z>
, String path, boolean online,<z>
ServiceRegistryException {<z>
isBlank(baseUrl)) {<z>
throw new IllegalArgumentException("serviceType and baseUrl must not be blank");<z>
null;<z>
;<z>
);<z>
();<z>
();<z>
HostRegistrationJpaImpl hostRegistration = fetchHostRegistration(em, baseUrl);<z>
(hostRegistration == null) {<z>
throw new IllegalStateException(<z>
;<z>
(em, serviceType, baseUrl);<z>
(registration == null) {<z>
(isBlank(path)) {<z>
new IllegalArgumentException("path must not be blank when registering new services");<z>
) {<z>
);<z>
{<z>
;<z>
.persist(registration);<z>
} else {<z>
isNotBlank(path))<z>
setPath(path);<z>
.setOnline(online);<z>
jobProducer != null) {<z>
registration.setJobProducer(jobProducer);<z>
registration);<z>
commit();<z>
);<z>
.updateService(registration);<z>
;<z>
{<z>
null && tx.isActive()) {<z>
tx.rollback();<z>
ServiceRegistryException(e);<z>
finally {<z>
(em != null)<z>
.close();<z>
cbHandler,<z>
throws LoginException {<z>
);<z>
(name, subject, cbHandler, config);<z>
) {<z>
getClass().getName();<z>
);<z>
(name.endsWith("Factory")) {<z>
;<z>
)) {<z>
) - 10);<z>
;<z>
int size) {<z>
;<z>
rgument;<z>
= size;<z>
arg) {<z>
) {<z>
return getText(key);<z>
);<z>
if (arg instanceof String) {<z>
);<z>
]) {<z>
);<z>
{<z>
"' not String or Object[]");<z>
;<z>
(PayrollPeriodDs ds, PayrollPeriod e,<z>
throws Exception {<z>
) != null) {<z>
null<z>
) {<z>
.em.find(Payroll.class,<z>
);<z>
{<z>
e);<z>
LinkedHashMap<String, Object> makePresentableMap() {<z>
();<z>
getBaseRef().toString();<z>
) {<z>
;<z>
);<z>
);<z>
null) {<z>
getCrawlController().getState());<z>
) {<z>
.put("crawlExitStatus", cj.getCrawlController()<z>
));<z>
));<z>
));<z>
cj.getLaunchCount());<z>
));<z>
"isProfile", cj.isProfile());<z>
());<z>
.getAbsolutePath());<z>
.put("primaryConfigUrl",<z>
primaryConfig.getName());<z>
().exists())<z>
new LinkedList<String>();<z>
, logLines);<z>
, logLines);<z>
) {<z>
;<z>
()) {<z>
;<z>
());<z>
rateReportData());<z>
;<z>
, cj.elapsedReportData());<z>
());<z>
;<z>
));<z>
cj.hasApplicationContext() && !cj<z>
.isLaunchable()))<z>
getCrawlController().getLoggerModule()<z>
) {<z>
= new LinkedList<String>();<z>
pagedLines(cj.getCrawlController()<z>
.getFile(), -1,<z>
;<z>
, logLines);<z>
) {<z>
;<z>
>();<z>
.getConfigPaths().keySet()) {<z>
<String, String>();<z>
put("key", cppp);<z>
cj.getConfigPaths()<z>
);<z>
, path.getAbsolutePath());<z>
, getHrefPath(path, cj))<z>
);<z>
("url", urlRef.toString());<z>
(configFileInfo);<z>
"configFiles", configFiles);<z>
info;<z>
() {<z>
textField.getText())) {<z>
(modelUpdating) {<z>
false;<z>
= true;<z>
textField.getCaretPosition();<z>
());<z>
) {<z>
setCaretPosition(caret);<z>
finally {<z>
widgetUpdating = false;<z>
return true;<z>
return false;<z>
SdpPortManagerEvent event) {<z>
OFFER_GENERATED)<z>
.equals(SdpPortManagerEvent.ANSWER_GENERATED)) {<z>
(event.isSuccessful()) {<z>
OFFER_GENERATED)) {<z>
waitAnswerProcessed = true;<z>
);<z>
sdp);<z>
;<z>
, "application/sdp");<z>
();<z>
final IOException e) {<z>
.ERROR, e);<z>
.fail(e);<z>
getSipInitnalRequest());<z>
= new NegotiateException(event);<z>
);<z>
.fail(ex);<z>
(SdpPortManagerEvent.ANSWER_PROCESSED)) {<z>
.isSuccessful()) {<z>
if (waitAnswerProcessed) {<z>
(JoinCompleteEvent.Cause.JOINED, null);<z>
ex = new NegotiateException(event);<z>
ex);<z>
;<z>
public String getParameterName(int i) {<z>
getParameterNames();<z>
null || i >= pnames.length ) {<z>
);<z>
} else {<z>
i];<z>
deactivate(final ComponentContext componentContext) {<z>
().removeBundleListener(this);<z>
);<z>
);<z>
void setNodesSize(Float size) {<z>
;<z>
: nodes) {<z>
).setSize(size);<z>
(<z>
Document d)<z>
);<z>
this.d = d;<z>
MojoExecutionException {<z>
);<z>
DependencyNode rootNode;<z>
);<z>
();<z>
{<z>
);<z>
, localRepository,<z>
.getRemoteArtifactRepositories(), artifactMetadataSource, null,<z>
;<z>
this.dependencyArtifacts = result.getArtifacts();<z>
rootNode = listener.getRootNode();<z>
(ArtifactResolutionException exception) {<z>
;<z>
{<z>
MojoExecutionException("Invalid dependency version for artifact "<z>
getArtifact());<z>
scanner = new Scanner();<z>
;<z>
localDependencies = scanner.localDependencies.keySet();<z>
);<z>
Object element )<z>
;<z>
document;<z>
public void setEnumerationMaps()<z>
(new StaticEnumerationMap(TokenCategories.class));<z>
;<z>
protected ISharedEditorListener editorListener = new AbstractSharedEditorListener() {<z>
) {<z>
);<z>
);<z>
isChecked()) == false;<z>
private static void usage() {<z>
().toString()<z>
+ ". ");<z>
+ " TOOL");<z>
"where TOOL is one of:");<z>
-1;<z>
keySet()) {<z>
.length() > numberOfSpaces) {<z>
length();<z>
;<z>
values()) {<z>
));<z>
{<z>
print(" ");<z>
);<z>
out.println("All tools print help when invoked with help parameter");<z>
System.out.println("Example: opennlp SimpleTokenizer help");<z>
public SimpleService() {<z>
);<z>
stateChanger = new ServiceStateChanger(stateHandler, iconHelper,<z>
Persistable() {<z>
() throws ComponentPersistException {<z>
;<z>
;<z>
() {<z>
running = false;<z>
true) {<z>
join();<z>
{<z>
) {<z>
toURI());<z>
.replaceAll("/");<z>
VirtualFile> resources;<z>
{<z>
case PACKAGE:<z>
parent.getChildren();<z>
case SUBPACKAGES:<z>
getChildrenRecursively();<z>
scanLevel);<z>
resources.size());<z>
: resources) {<z>
(parent)));<z>
return result;<z>
) {<z>
);<z>
public VoidType noMoreInjections(VoidType none)<z>
{<z>
;<z>
logger.info("WS-NO-MORE-INJECTIONS invoked by " + caller);<z>
{<z>
;<z>
;<z>
();<z>
(Exception e) {<z>
isDebugEnabled()) {<z>
e);<z>
} else {<z>
.error(e.getMessage());<z>
(), null);<z>
resource.getCreatorDN())) {<z>
"WS-NO-MORE-INJECTIONS unauthorized " +<z>
"-- invoked by " + caller);<z>
;<z>
noMoreInjections();<z>
{<z>
e);<z>
;<z>
) {<z>
;<z>
;<z>
"OnAlarm";<z>
;<z>
());<z>
().getName());<z>
] filterNaNs(double[] input){<z>
0;<z>
0;<z>
; i++)<z>
)<z>
;<z>
.length-nnan];<z>
i++)<z>
)<z>
k++] = input[i];<z>
output;<z>
) {<z>
null) {<z>
;<z>
null;<z>
{<z>
getParent();<z>
parentContentPane = (parent).getContentPane();<z>
= parentContentPane<z>
.getLayoutManager();<z>
, getFigure().getBounds());<z>
;<z>
{<z>
= value;<z>
name;<z>
= literal;<z>
(IAdaptable source) {<z>
) source<z>
IGraphicalEditPart.class);<z>
{<z>
getMARelTypesOnSource();<z>
{<z>
);<z>
Collections.EMPTY_LIST;<z>
public String nulls(<z>
"p1") String p1,<z>
String p2,<z>
String p3) {<z>
, p1, p2, p3);<z>
ChartGroupingInfo removeGrouping(ReportFieldInfo reportFieldToRemove) {<z>
getGroupingsDirect().iterator(); iterator<z>
;) {<z>
iterator.next();<z>
).equals(reportFieldToRemove)) {<z>
();<z>
{<z>
).delete(grouping);<z>
;<z>
null;<z>
l) throws TorqueException<z>
).add(l);<z>
) this);<z>
() {<z>
TaskPersistenceManager tpm;<z>
TaskSpringTransactionManager(springTransactionManager, useJTA);<z>
useEMF) {<z>
, ttxm);<z>
else {<z>
= new TaskPersistenceManager(springEM, ttxm);<z>
return new TaskEventsAdminImpl(tpm);<z>
IOException {<z>
new ZipEntry("xl/_rels/workbook.xml.rels");<z>
zos.putNextEntry(entry);<z>
;<z>
);<z>
"<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">");<z>
writer.newLine();<z>
id = 1;<z>
{<z>
+ ".xml\"/>";<z>
+ data);<z>
newLine();<z>
;<z>
;<z>
);<z>
writer.newLine();<z>
write("</Relationships>");<z>
();<z>
;<z>
;<z>
) {<z>
if(parser == null) {<z>
.parts.EnumerationNameEditPart.VISUAL_ID));<z>
return parser;<z>
ggx2gxl(String filenameIn, String filenameOut,<z>
) {<z>
sourceName = srcName;<z>
);<z>
) {<z>
null) {<z>
handlerFactories = new ArrayList<String>();<z>
className);<z>
, boolean maximize) {<z>
"gui.geometry");<z>
arg != null) {<z>
arg);<z>
)) {<z>
(1));<z>
);<z>
x, y = screenDimension.y;<z>
) {<z>
m.group(5));<z>
.group(7));<z>
4).equals("-")) {<z>
.width - x - w;<z>
6).equals("-")) {<z>
y + screenDimension.height - y - h;<z>
));<z>
{<z>
));<z>
def;<z>
{<z>
(screenDimension);<z>
else {<z>
.getLocation();<z>
1000)/2;<z>
2;<z>
1000, 740));<z>
preferenceKey, def);<z>
{<z>
Integer(taxonId));<z>
(od == null) {<z>
);<z>
;<z>
(new Integer(taxonId), od);<z>
return od;<z>
obj, int modifiers,<z>
)<z>
, obj, modifiers);<z>
targetClass == clazz)<z>
});<z>
cache;<z>
Object object) {<z>
.add<z>
,<z>
getResourceLocator(),<z>
),<z>
getString("_UI_PropertyDescriptor_description", "_UI_DomainObject_name_feature", "_UI_DomainObject_type"),<z>
,<z>
GENERIC_VALUE_IMAGE,<z>
);<z>
) {<z>
super("Weka: Instance info");<z>
;<z>
initGUI();<z>
initFinished();<z>
int getRunningInstancePort()<z>
);<z>
if (port < 0)<z>
port;<z>
= null;<z>
0, null);<z>
1;<z>
)<z>
catch (IOException e)<z>
e, null);<z>
!= null)<z>
();<z>
catch (IOException e)<z>
port;<z>
entryRuleXClass() throws RecognitionException {<z>
state.backtracking==0 ) {<z>
(grammarAccess.getXClassRule());<z>
.FOLLOW_ruleXClass_in_entryRuleXClass667);<z>
;<z>
--;<z>
if (state.failed) return ;<z>
backtracking==0 ) {<z>
);<z>
(state.failed) return ;<z>
) {<z>
);<z>
,re);<z>
IOException, InterruptedException {<z>
: emulationPlugins) {<z>
);<z>
static void UpdatePrisoners()<z>
) return;<z>
();<z>
|| conn.isClosed()) return;<z>
= conn.prepareStatement("UPDATE jail_prisoners SET RemainTime = ?, JailName = ?, Offline = ?, TransferDest = ?, muted = ?, Inventory = ?, Permissions = ?, PreviousLocation = ? WHERE PlayerName = ?");<z>
)<z>
, p.getRemainingTime());<z>
.getJail().getName());<z>
, p.offlinePending());<z>
.getTransferDestination());<z>
));<z>
.getInventory());<z>
, p.getOldPermissionsString());<z>
(p.getPreviousPosition() == null)<z>
8, "");<z>
.getBlockZ()));<z>
executeUpdate();<z>
9, p.getName());<z>
.addBatch();<z>
ps.executeBatch();<z>
.commit();<z>
close();<z>
{<z>
) );<z>
);<z>
(final MavenModel model, final MavenModel parentModel) {<z>
MavenModel>() {<z>
) throws RemoteException {<z>
parentModel);<z>
;<z>
KerberosPreMasterSecret(ProtocolVersion protocolVersion,<z>
throws IOException {<z>
) ==<z>
ETYPE_DES3_CBC_HMAC_SHA1_KD) {<z>
new IOException(<z>
"are not supported for TLS Kerberos cipher suites");<z>
= protocolVersion;<z>
generator, protocolVersion);<z>
EncryptedData(sessionKey, preMaster,<z>
);<z>
;<z>
) {<z>
SSLKeyException<z>
"Kerberos premaster secret error").initCause(e);<z>
) {<z>
<String, Object>() {<z>
) {<z>
!= null;<z>
public Object get(Object o) {<z>
return properties.get(o);<z>
) {<z>
;<z>
) {<z>
);<z>
) {<z>
);<z>
public boolean containsValue(Object o) {<z>
UnsupportedOperationException();<z>
Object remove(Object o) {<z>
();<z>
extends Object> map) {<z>
new UnsupportedOperationException();<z>
void clear() {<z>
new UnsupportedOperationException();<z>
() {<z>
);<z>
> values() {<z>
throw new UnsupportedOperationException();<z>
> entrySet() {<z>
throw new UnsupportedOperationException();<z>
score, final boolean empty) {<z>
= new PacketBuilder();<z>
());<z>
? 0 : 1);<z>
if (!empty) {<z>
;<z>
writeInt(score);<z>
;<z>
agent, String label) {<z>
.isValid()) {<z>
return null;<z>
, label);<z>
;<z>
getNewMetadata();<z>
isLineLayout, SelectManyCheckbox selectManyCheckbox) {<z>
selectManyCheckbox.getColumns();<z>
.getRows();<z>
{<z>
(isLineLayout) {<z>
= 1;<z>
else {<z>
= 1;<z>
columns != null) {<z>
"The 'rows' and 'columns' attributes cannot be set together.");<z>
SelectItem>>();<z>
if (columns != null) {<z>
columns);<z>
} else if (rows != null) {<z>
= distributeItemsIntoRows(selectItems, isLineLayout, rows);<z>
itemsDistribution;<z>
getPageNRelease(int pageNum) {<z>
page = getPageN(pageNum);<z>
);<z>
page;<z>
DomSupportedAdaption(Domain domainParam, String adaptionParam) {<z>
super();<z>
domain = domainParam;<z>
(adaptionParam);<z>
()<z>
;<z>
;<z>
);<z>
public void setBase_DataType(DataType newBase_DataType) {<z>
oldBase_DataType = base_DataType;<z>
= newBase_DataType;<z>
))<z>
oldBase_DataType, base_DataType));<z>
event.ActionEvent evt) {<z>
!= null) {<z>
());<z>
theBean.setSelectedBean(null);<z>
() {<z>
propsPath = getPipelineProperty(PipelineXMLConstants.BWA_PATH);<z>
if (propsPath != null)<z>
.toString();<z>
.get(PATH);<z>
bwaPathAttr != null) {<z>
pathToBWA = bwaPathAttr;<z>
rgStr = properties.get(READ_GROUP);<z>
!= null) {<z>
= rgStr;<z>
);<z>
.getAbsolutePath();<z>
(2).getAbsolutePath();<z>
;<z>
get(4).getAbsolutePath();<z>
;<z>
;<z>
getScreenshotOverlay()<z>
);<z>
;<z>
imagePanel.paintComponent(g);<z>
;<z>
public final void execute(Annotation ann) {<z>
) ann;<z>
)) {<z>
= auth.actionName();<z>
) {<z>
).getControllerName();<z>
));<z>
public ChecksumFSOutputSummer(ChecksumFileSystem fs,<z>
Path file,<z>
boolean overwrite,<z>
replication,<z>
,<z>
Configuration conf)<z>
{<z>
,<z>
conf.getInt(LocalFileSystemConfigKeys.LOCAL_FS_STREAM_BUFFER_SIZE_KEY,<z>
LocalFileSystemConfigKeys.LOCAL_FS_STREAM_BUFFER_SIZE_DEFAULT),<z>
);<z>
CollapsibleInspector() {<z>
container = new CollapsiblePanes();<z>
.addExpansion();<z>
(new BorderLayout());<z>
.NORTH);<z>
final Map<HtmlTypeEnum,IElementInfo> map) {<z>
);<z>
.add(HtmlTypeEnum.COL);<z>
AttributeInfoMapImpl();<z>
attrs,ATTRS_ATTRS);<z>
;<z>
"width"));<z>
ATTRS_CELL_HALIGN);<z>
;<z>
XhtmlElementInfo(<z>
;<z>
), elementInfo);<z>
port) {<z>
.limit();<z>
);<z>
legacy_handshake_header));<z>
);<z>
;<z>
ContextAction buildPartial() {<z>
{<z>
new IllegalStateException(<z>
"build() has already been called on this Builder.");<z>
.ContextAction returnMe = result;<z>
= null;<z>
;<z>
onPlayerInteract(PlayerInteractEvent event) {<z>
== Action.RIGHT_CLICK_BLOCK) {<z>
);<z>
contains(block.getType())) {<z>
player = event.getPlayer();<z>
).getData();<z>
;<z>
].a() != true)<z>
if(!player.hasPermission("chairs.sit"))<z>
) {<z>
player.getVehicle().remove();<z>
, 0.5)) > plugin.distance)<z>
plugin.signcheck == true) {<z>
boolean sign1 = false;<z>
boolean sign2 = false;<z>
) == BlockFace.SOUTH) {<z>
= checkSign(block, BlockFace.EAST);<z>
;<z>
== BlockFace.WEST) {<z>
.NORTH);<z>
);<z>
)<z>
{<z>
getDescendingDirection() == BlockFace.SOUTH) {<z>
(block, BlockFace.EAST);<z>
, BlockFace.WEST);<z>
WEST) {<z>
.NORTH);<z>
SOUTH);<z>
maxchairwidth )<z>
())) {<z>
) != null)<z>
.remove();<z>
dropSeat(block);<z>
);<z>
(drops != null) {<z>
();<z>
== true) {<z>
plocation = player.getLocation();<z>
stairs.getDescendingDirection()) {<z>
NORTH:<z>
);<z>
case EAST:<z>
180);<z>
:<z>
270);<z>
:<z>
plocation.setYaw(0);<z>
teleport(plocation);<z>
(new ItemStack(Material.PUMPKIN_STEM));<z>
;<z>
DENY);<z>
public HelloHandler(String greeting)<z>
_greeting=greeting;<z>
;<z>
Atom getOtherAtom(Atom knownAtom){<z>
(knownAtom == firstAtom)<z>
secondAtom;<z>
)<z>
;<z>
return null;<z>
)<z>
width );<z>
;<z>
(registerAgent_result that) {<z>
if (that == null)<z>
false;<z>
return true;<z>
throws Exception {<z>
) ;<z>
.getRequestContext().getRequestParameter(OBJECTID) ;<z>
tabName.equals(UINodeTypeForm.SUPER_TYPE_TAB)) {<z>
.removeChildById(tabName) ;<z>
.NODETYPE_DEFINITION) ;<z>
.equals(UINodeTypeForm.DEFAULT_PRIMARY_TYPE_TAB) ||<z>
.equals(UINodeTypeForm.REQUIRED_PRIMARY_TYPE_TAB)) {<z>
;<z>
uiForm.setSelectedTab(UINodeTypeForm.CHILDNODE_DEFINITION) ;<z>
.addUIComponentToUpdateByAjax(uiForm.getParent()) ;<z>
{<z>
== null) {<z>
row, cols, rows);<z>
else {<z>
;<z>
_partialRedraw.x);<z>
);<z>
col + cols)<z>
x;<z>
+ rows)<z>
r.y;<z>
;<z>
);<z>
String s1, String s2) {<z>
(s1);<z>
);<z>
!= null) {<z>
(value1 + value2);<z>
} catch (ParseException e) {<z>
;<z>
images) {<z>
foo, images);<z>
updated);<z>
;<z>
[] injected) {<z>
StringBuffer sb = new StringBuffer();<z>
i++) {<z>
getClass().getName();<z>
.append(s);<z>
< injected.length-1) {<z>
(", ");<z>
toString();<z>
[] intToByteArray(int value) {<z>
{<z>
0xFF),<z>
0xFF),<z>
,<z>
value & 0xFF) };<z>
long value) {<z>
(id == null) {<z>
) > 150) {<z>
0, 150);<z>
) {<z>
mapTrackUsage_mon.enter();<z>
.get(id);<z>
long newLength;<z>
if (currentLength == null) {<z>
value;<z>
else {<z>
.longValue() + value;<z>
if (newLength > 1000) {<z>
));<z>
{<z>
exit();<z>
Interpolator interp)<z>
;<z>
layer;<z>
_toAlpha = alpha;<z>
OpenBitSet visitedDocs) {<z>
in = in;<z>
fieldInfo;<z>
visitedDocs;<z>
, int prevPos, int pos){<z>
assert(patternString != null);<z>
data;<z>
0;<z>
if (relSegmentStart <= 0) {<z>
= prevPos + 1 + relSegmentStart;<z>
} else {<z>
+ relSegmentStart;<z>
) {<z>
+ 1 + relSegmentEnd;<z>
else {<z>
relSegmentEnd;<z>
< data.length()))<z>
.length;<z>
);<z>
true;<z>
.String value) {<z>
) {<z>
);<z>
result.hasErrorText = true;<z>
value;<z>
this;<z>
boolean resolve, boolean coreType) {<z>
{<z>
CSV_DATA_FORMAT__AUTOGEN_COLUMNS:<z>
return isAutogenColumns();<z>
.CSV_DATA_FORMAT__CONFIG_REF:<z>
();<z>
:<z>
();<z>
CSV_DATA_FORMAT__STRATEGY_REF:<z>
getStrategyRef();<z>
(featureID, resolve, coreType);<z>
MalformedContentNameStringException {<z>
{<z>
MalformedContentNameStringException("ContentName native strings must begin with " + SEPARATOR);<z>
split(SEPARATOR);<z>
0) {<z>
return ROOT;<z>
;<z>
-1][];<z>
parts.length; ++i) {<z>
(parts[i]);<z>
return result;<z>
instance) {<z>
type == null) {<z>
|| instance instanceof SoapPrimitive) type = instance;<z>
;<z>
type instanceof SoapObject) {<z>
SoapObject so = (SoapObject) type;<z>
.getName(), null, null };<z>
(type instanceof SoapPrimitive) {<z>
SoapPrimitive) type;<z>
(), null, DEFAULT_MARSHAL };<z>
!= PropertyInfo.OBJECT_CLASS) {<z>
);<z>
tmp;<z>
;<z>
Bundle savedInstanceState) {<z>
();<z>
(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE);<z>
savedInstanceState);<z>
);<z>
());<z>
= new TrendsAdapter(getActivity());<z>
mTrendsAdapter);<z>
, null, this);<z>
IDataRowExpressionEvaluator createEvaluator( IBaseResultSet set )<z>
;<z>
Exception {<z>
1) {<z>
.println("USAGE: LogFormatter log_file");<z>
System.exit(2);<z>
args[0]);<z>
);<z>
);<z>
, "fileheader");<z>
getMagic() != FileTxnLog.TXNLOG_MAGIC) {<z>
]);<z>
2);<z>
.println("ZooKeeper Transactional Log File with dbid "<z>
() + " txnlog format version "<z>
+ fhdr.getVersion());<z>
0;<z>
while (true) {<z>
long crcValue;<z>
byte[] bytes;<z>
= logStream.readLong("crcvalue");<z>
.readBuffer("txnEntry");<z>
(EOFException e) {<z>
println("EOF reached after " + count + " txns.");<z>
== 0) {<z>
println("EOF reached after " + count + " txns.");<z>
Adler32();<z>
bytes.length);<z>
()) {<z>
("CRC doesn't match " + crcValue +<z>
.getValue());<z>
iab = BinaryInputArchive<z>
(new ByteArrayInputStream(bytes));<z>
hdr = new TxnHeader();<z>
.deserializeTxn(iab, hdr);<z>
getDateTimeInstance(DateFormat.SHORT,<z>
.getTime()))<z>
.toHexString(hdr.getClientId())<z>
Long.toHexString(hdr.getCxid())<z>
())<z>
)));<z>
.readByte("EOR") != 'B') {<z>
LOG.error("Last transaction was partial.");<z>
new EOFException("Last transaction was partial.");<z>
;<z>
, int end,<z>
OrderByComparator orderByComparator) throws SystemException {<z>
.findWithDynamicQuery(dynamicQuery,<z>
, end, orderByComparator);<z>
() throws RecognitionException {<z>
keepStackSize();<z>
if ( state.backtracking==0 ) {<z>
());<z>
int alt199=2;<z>
LA(1);<z>
{<z>
.LA(2);<z>
{<z>
alt199=1;<z>
alt199) {<z>
case 1 :<z>
;<z>
);<z>
--;<z>
) return ;<z>
;<z>
true);<z>
) {<z>
).getAttrsAssignment_1_1_0_1_0_1_0_1());<z>
catch (RecognitionException re) {<z>
reportError(re);<z>
recover(input,re);<z>
stackSize);<z>
) {<z>
0.0);<z>
addParameterChangeWarningListener(warningListener);<z>
Double(0.00),<z>
DISTANCE_RUP_WARN_MAX);<z>
);<z>
(warndistance);<z>
distanceRupParam.setNonEditable();<z>
);<z>
UserProfile fetchUserProfile(Facebook facebook) {<z>
facebook.userOperations().getUserProfile();<z>
).<z>
build();<z>
User user,<z>
remoteAddress,<z>
? extends VersionedProtocol> protocol) {<z>
ctx = instance.get();<z>
.user = user;<z>
= remoteAddress;<z>
.protocol = protocol;<z>
ctx.inRequest = true;<z>
void accept(IModelElementVisitor visitor,<z>
monitor) {<z>
, monitor)) {<z>
state : getAttributes()) {<z>
monitor.isCanceled()) {<z>
visitor, monitor);<z>
{<z>
.isCanceled()) {<z>
state.accept(visitor, monitor);<z>
eUnset( EStructuralFeature eFeature ) {<z>
eFeature)) {<z>
JdbcPackage.JDBC_SOURCE__JDBC_DRIVER:<z>
);<z>
JdbcPackage.JDBC_SOURCE__PROPERTIES:<z>
;<z>
case JdbcPackage.JDBC_SOURCE__JDBC_SOURCE_CONTAINER:<z>
;<z>
JDBC_SOURCE__IMPORT_SETTINGS:<z>
((JdbcImportSettings)null);<z>
JdbcPackage.JDBC_SOURCE__NAME:<z>
);<z>
:<z>
(DRIVER_NAME_EDEFAULT);<z>
JdbcPackage.JDBC_SOURCE__DRIVER_CLASS:<z>
DRIVER_CLASS_EDEFAULT);<z>
JDBC_SOURCE__USERNAME:<z>
USERNAME_EDEFAULT);<z>
JDBC_SOURCE__URL:<z>
);<z>
;<z>
(Class extensibleClass) {<z>
(4);<z>
= extensibleClass;<z>
{<z>
);<z>
clazz = clazz.getSuperclass();<z>
return result;<z>
) {<z>
) {<z>
case XtextPackage.TYPE_REF__METAMODEL:<z>
getMetamodel();<z>
();<z>
XtextPackage.TYPE_REF__CLASSIFIER:<z>
(resolve) return getClassifier();<z>
);<z>
coreType);<z>
process) throws InvalidEdgeException {<z>
;<z>
().getProcess() == process) {<z>
);<z>
);<z>
{<z>
isLoggable(Level.WARNING)) {<z>
;<z>
throw new InvalidEdgeException(this);<z>
!isEdgeValid()) {<z>
);<z>
(this);<z>
pSpace) {<z>
;<z>
.getSpaceTitle());<z>
.getDescription());<z>
.getSetting();<z>
getTheme());<z>
set);<z>
()?1:0));<z>
));<z>
encoding) throws UnsupportedEncodingException {<z>
.trim().toUpperCase();<z>
)) return;<z>
.encoding = encoding;<z>
(raw,encoding,isScriptProtected());<z>
mongoClient, String requestFrom) {<z>
);<z>
requestFrom);<z>
);<z>
cursor == null)<z>
emptyList();<z>
;<z>
cursor.iterator();<z>
( iter == null){<z>
;<z>
.emptyList();<z>
{<z>
next();<z>
);<z>
add(ad);<z>
cursor.close();<z>
return adList;<z>
ps)<z>
ps)<z>
!= null)<z>
ps.println(this);<z>
.printStackTrace(ps);<z>
super.printStackTrace(ps);<z>
message) throws IOException<z>
= message.getOutboundProperty(FtpConnector.PROPERTY_FILENAME);<z>
getProperty(FtpConnector.PROPERTY_OUTPUT_PATTERN);<z>
if (outPattern == null)<z>
);<z>
!= null || filename == null)<z>
);<z>
null)<z>
IOException("Filename is null");<z>
filename;<z>
String subdomain) {<z>
;<z>
mucServices.get(subdomain);<z>
if (service != null) {<z>
();<z>
(subdomain);<z>
{<z>
);<z>
mucServices.remove(subdomain);<z>
Map getTemplateModel()<z>
= new HashMap(1, 1.0f);<z>
).getNodeRef());<z>
, imageResolver);<z>
return model;<z>
> trace, final boolean disposeOnClose) {<z>
((fTrace != null) && fDisposeOnClose) {<z>
dispose();<z>
;<z>
;<z>
;<z>
disposeOnClose;<z>
new Runnable() {<z>
{<z>
);<z>
setTrace(fTrace);<z>
!= null) {<z>
null)) {<z>
) == null) {<z>
);<z>
else {<z>
stopFilterThread();<z>
0;<z>
= 0;<z>
3);<z>
startFilterThread();<z>
setTrace(fTrace);<z>
;<z>
long addAmount) {<z>
== null) return null;<z>
.length();<z>
number = Long.parseLong(numberString);<z>
+ addAmount), origLength);<z>
, boolean b) {<z>
();<z>
WRITE_COIL);<z>
(4);<z>
reference);<z>
;<z>
{<z>
Block door : doors) {<z>
(door == null) {<z>
{<z>
(BlockFace.UP);<z>
0x4));<z>
.DOOR_TOGGLE, 0);<z>
.getType())) {<z>
topHalf.getData() ^ 0x4));<z>
) {<z>
index = -1;<z>
lastColumnIndex = getColumnRow().getLastCellNumber();<z>
lastColumnIndex; columnNo++) {<z>
.getValueAsString())) {<z>
index = columnNo;<z>
index;<z>
String newName) {<z>
= name;<z>
;<z>
eNotificationRequired())<z>
, oldName, name));<z>
(Element element, String attributeName, String attributeValue)<z>
equalsIgnoreCase(attributeName)) {<z>
.setProperty(Style.STYLE_PROPERTY, attributeValue);<z>
equalsIgnoreCase(attributeName)) {<z>
;<z>
else {<z>
;<z>
{<z>
aliasProperty<z>
properties + ", indexed=" + indexed<z>
", required=" + required + ", indexedInConnections="<z>
dictionaries<z>
+ ", collections=" + collections + ", fulltextIndexed="<z>
+ publicVisible + "]";<z>
(GeoServer gs) {<z>
gs, "csv");<z>
(ForeignKey fk, ColumnIO io,<z>
OpenJPAStateManager sm)<z>
throws SQLException {<z>
fk, sm, true))<z>
sm);<z>
fk, io, sm, true);<z>
readCount, final int writeCount) {<z>
.queryLogId = queryLogId;<z>
;<z>
;<z>
this.readRows = readRows;<z>
= readCount;<z>
.writeCount = writeCount;<z>
PsiFile base, @NotNull String uri) {<z>
PsiFile result = null;<z>
().isUnitTestMode()) {<z>
(TEST_PATH);<z>
) {<z>
= data + "/" + uri;<z>
File.separatorChar, '/'));<z>
{<z>
findFile(path);<z>
null) {<z>
= findRelativeFile(uri, base);<z>
result instanceof XmlFile) {<z>
return (XmlFile)result;<z>
;<z>
Map<String, String> parameters)<z>
"span");<z>
.getAsInt());<z>
{<z>
null) {<z>
) {<z>
XMLConstants.NULL_NS_URI;<z>
prefix = fNamespaceContext.getPrefix(uri);<z>
== null) {<z>
= XMLConstants.DEFAULT_NS_PREFIX;<z>
(prefix) : prefix.intern();<z>
null;<z>
private ListHeadExpr parseListHead()<z>
expect('(');<z>
int peek = parseToken();<z>
leftVars = new ArrayList<Expr>();<z>
) {<z>
LIST) {<z>
parseListHead());<z>
();<z>
if (peek != ',') {<z>
peek;<z>
);<z>
leftVars.add(left);<z>
.assign(this);<z>
);<z>
.add(null);<z>
== ',')<z>
();<z>
')')<z>
;<z>
.createListHead(leftVars);<z>
storageDomain, final long requestedSize) {<z>
availableDiskSize =<z>
? 0 : storageDomain.getavailable_disk_size();<z>
.getused_disk_size();<z>
usedDiskSize;<z>
!= 0<z>
totalSize) * 100 > getLowDiskPercentThreshold();<z>
public void setPreviewLimit(String value) {<z>
.previewLimit;<z>
.previewLimit = value;<z>
value);<z>
) {<z>
.id.buttonLatitude);<z>
.id.buttonLongitude);<z>
;<z>
.setOnClickListener(new coordDialogListener());<z>
.getAnyCoordinates();<z>
{<z>
GeopointFormatter.Format.LAT_DECMINUTE));<z>
LON_DECMINUTE));<z>
id.current);<z>
;<z>
();<z>
;<z>
initializeDistanceUnitSelector();<z>
) {<z>
);<z>
perm : negatedperms) {<z>
.append(";");<z>
";")) {<z>
;<z>
else {<z>
builder.toString();<z>
();<z>
perms) {<z>
(";");<z>
";")) {<z>
rawPerms = "";<z>
{<z>
toString();<z>
,<z>
throws IOException {<z>
) {<z>
== null) {<z>
lineEnding = LINE_SEPARATOR;<z>
); it.hasNext(); ) {<z>
line = it.next();<z>
null) {<z>
write(line.toString());<z>
writer.write(lineEnding);<z>
Room findPlayer(String user) {<z>
server.clientList.values()) {<z>
{<z>
currentRoom;<z>
;<z>
public boolean getCustomListSearch(){<z>
).isEmpty()){<z>
;<z>
customListName="";<z>
="";<z>
="";<z>
customListSearch;<z>
) {<z>
{<z>
;<z>
getNode();<z>
getState();<z>
.TRANSIENT;<z>
(int identifier) {<z>
(identifier);<z>
ex) {<z>
throw new JIntellitypeException(ERROR_MESSAGE, ex);<z>
{<z>
JIntellitypeException(ex);<z>
IPropertyChangeListener() {<z>
(PropertyChangeEvent event) {<z>
()) {<z>
rgb = fColorSelector.getColorValue();<z>
rgb);<z>
equals(fFontObject.getFontColor())) {<z>
newColor));<z>
KeyStroke getKeyStroke( String keyStroke )<z>
InputHandler.getMenuShortcutKeyMask() == Event.META_MASK )<z>
= keyStroke.replaceAll( "menu", "meta" );<z>
"ctrl" );<z>
Throwable e )<z>
keyStroke.replaceAll( "menu", "ctrl" );<z>
KeyStroke.getKeyStroke( keyStroke );<z>
{<z>
j;<z>
v;<z>
mins[2] = 9999;<z>
[2] = -9999;<z>
) {<z>
v = verts[i];<z>
; j < 3; j++) {<z>
mins[j])<z>
] = v[j];<z>
v[j] > maxs[j])<z>
v[j];<z>
() {<z>
notNull(m_nodeDao, "Node DAO is null and is not supposed to be");<z>
findAllProvisionedNodes();<z>
);<z>
node : nodes) {<z>
);<z>
) {<z>
;<z>
return scheduledNodes;<z>
hasNext() {<z>
null )<z>
return true;<z>
currentCount < readCount) {<z>
;<z>
currentCount;<z>
&& doNotUseThatUnmappedReadPile) {<z>
return false;<z>
;<z>
{<z>
false;<z>
public IDSReference[] getReferences() {<z>
getChildNodesList(IDSReference.class, true);<z>
()];<z>
childNodesList.size(); i++) {<z>
i);<z>
array;<z>
String string) throws IOException {<z>
;<z>
);<z>
return builder.build();<z>
String msgId, Object[] args) {<z>
args);<z>
{<z>
(msgId);<z>
messageName,<z>
) throws EDIConfigurationException, SAXException, IOException {<z>
split(messageName,<z>
);<z>
);<z>
0; i < 4; i++) {<z>
if (i > 0) {<z>
);<z>
);<z>
;<z>
result = content.get(lookupName);<z>
== null) {<z>
(content) {<z>
(lookupName);<z>
null) {<z>
));<z>
get(lookupName);<z>
(result != null) {<z>
return result;<z>
} else {<z>
return result;<z>
("Mapping Model '" + messageName<z>
);<z>
drawPixel(int x, int y) {<z>
12);<z>
;<z>
);<z>
buf.putInt(y);<z>
method) {<z>
;<z>
value);<z>
chooser);<z>
runnable) {<z>
)) {<z>
runnable.run();<z>
methodName, String[] parameters) {<z>
.get(className);<z>
null) {<z>
bind(CustomMessages<z>
.Javadoc_NotFound), className);<z>
instanceof Javadoc) {<z>
docs)<z>
methodName, parameters);<z>
if (javadocs == null) {<z>
);<z>
{<z>
javadocs;<z>
else {<z>
[]) docs;<z>
String reply = "";<z>
; i++) {<z>
, parameters);<z>
(ret != null) {<z>
+ " ";<z>
, reply.length() - 1);<z>
reply;<z>
(String fun) throws Exception {<z>
Object result = new Object();<z>
();<z>
getEngineByName("javascript");<z>
0);<z>
returnVar == null) return null;<z>
, "var lol = " + returnVar + ";");<z>
fun);<z>
final Exception e) {<z>
.exception(e);<z>
ERROR_PLUGIN_DEFECT);<z>
throw new PluginException(LinkStatus.ERROR_PLUGIN_DEFECT);<z>
;<z>
{<z>
mongo = new Mongo();<z>
DB exampleDB = mongo.getDB("pojongoExample");<z>
getCollection("Example");<z>
(examples);<z>
(examples);<z>
Viewer viewer, Object oldInput, Object newInput) {<z>
{<z>
viewer instanceof TableViewer) {<z>
) viewer;<z>
.isDisposed()) {<z>
() {<z>
) {<z>
== null) {<z>
1;<z>
(e2 == null) {<z>
return 1;<z>
{<z>
);<z>
);<z>
{<z>
new String[] { "X-fetched-from" });<z>
0;<z>
enumeration.hasMoreElements()) {<z>
) enumeration.nextElement();<z>
.equals(getFetchTaskName()))<z>
;<z>
count >= 3;<z>
model.PasswordPolicy fetchByC_DP(<z>
defaultPolicy)<z>
exception.SystemException {<z>
;<z>
(IProgressMonitor monitor) {<z>
wikiHandler.downloadAllPageNames(repository, monitor);<z>
{<z>
public void run() {<z>
);<z>
});<z>
{<z>
.asyncExec(new Runnable() {<z>
{<z>
this.close();<z>
);<z>
(IStatus.ERROR, TracWikiPlugin.ID_PLUGIN,<z>
;<z>
());<z>
Status.OK_STATUS;<z>
higherEntry(K key) {<z>
(key);<z>
if (lengthInBits == 0) {<z>
isEmpty()) {<z>
1) {<z>
);<z>
} else {<z>
;<z>
else {<z>
;<z>
lengthInBits);<z>
key)) {<z>
return nextEntry(found);<z>
key);<z>
isValidBitIndex(bitIndex)) {<z>
key, null, bitIndex);<z>
addEntry(added, lengthInBits);<z>
;<z>
;<z>
;<z>
2;<z>
ceil;<z>
{<z>
(!root.isEmpty()) {<z>
firstEntry();<z>
() > 1) {<z>
;<z>
} else {<z>
null;<z>
{<z>
);<z>
+ key);<z>
public DialogInterface.OnClickListener emptyOnClickListener() {<z>
OnClickListener() {<z>
int i) {<z>
, ClassType aClassType )<z>
)<z>
);<z>
getDataFromBoard() {<z>
;<z>
(IOException e) {<z>
printStackTrace();<z>
).isInterrupted()) {<z>
;<z>
;<z>
)<z>
s = ss.accept();<z>
);<z>
;<z>
readLine();<z>
capitalizedSentence = clientSentence.toUpperCase() + '\n';<z>
);<z>
);<z>
;<z>
m);<z>
catch (IOException e) {<z>
.printStackTrace();<z>
final String subspaces) {<z>
.uri = uri;<z>
(permission);<z>
this.subspace = subspace;<z>
void mirror(GeoLine g) {<z>
length; i++) {<z>
i]).mirror(g);<z>
heightMeasureSpec) {<z>
resolveSize(Integer.MAX_VALUE, widthMeasureSpec);<z>
calculateItemFittingMetadata(measuredWidth);<z>
;<z>
int layoutNumRows = mLayoutNumRows;<z>
) *<z>
- mHorizontalDividerHeight;<z>
setMeasuredDimension(measuredWidth,<z>
);<z>
(layoutNumRows > 0) {<z>
getMeasuredHeight());<z>
intersectionParametric() {<z>
0,1,1);<z>
-1);<z>
(1,0,1,1);<z>
1,1);<z>
"Intersection between lines");<z>
Intersection2D_F64.intersection(lineA,lineB));<z>
lineC));<z>
Intersection2D_F64.intersection(lineA,lineD));<z>
int compareCase(CharSequence s1, CharSequence s2) {<z>
();<z>
.length();<z>
, len2);<z>
;<z>
while (k < n) {<z>
= s1.charAt(k);<z>
.charAt(k);<z>
) {<z>
- c2;<z>
k++;<z>
- len2;<z>
gkFormPanelIC form) {<z>
new gkTimeField();<z>
.getName(),<z>
;<z>
fb);<z>
;<z>
return field;<z>
() {<z>
;<z>
Util.size(mbrs);<z>
+=Util.size(from);<z>
return retval;<z>
() {<z>
setNotAddedYet(false);<z>
);<z>
getLastHeaderRow() + 1; i++) {<z>
;<z>
headerrows;<z>
void add(Component comp, Object constraints) {<z>
+ 1);<z>
(comp, constraints);<z>
;<z>
nonint r3 {<z>
= 0;<z>
atomic x2 = 0;<z>
0;<z>
QName var6_create_qname)<z>
this.var1_exists = var1_exists;<z>
= var2_create_qname;<z>
var3_filter_elements = var3_filter_elements;<z>
.var4_create_qname = var4_create_qname;<z>
;<z>
= var6_create_qname;<z>
node) {<z>
.buildBlock(node);<z>
);<z>
;<z>
();<z>
.nameNextElement("try");<z>
.rawBody());<z>
;<z>
(), " ", " ", "");<z>
!= null) {<z>
formatter.space();<z>
);<z>
formatter.space();<z>
.startSuppressBlock();<z>
("finally");<z>
(node.rawFinally());<z>
formatter.endSuppressBlock();<z>
);<z>
true;<z>
IOException {<z>
());<z>
writer.write("->");<z>
));<z>
.getPrototypeString());<z>
RevisionProvider provider) {<z>
;<z>
, String>();<z>
ChildNodeEntriesMap();<z>
(String cookie) {<z>
cv = cookie.split(";");<z>
++) {<z>
].indexOf("=");<z>
equ == -1) {<z>
[k],null));<z>
{<z>
;<z>
1).trim();<z>
value));<z>
<StructField> getFields() {<z>
new ArrayList<StructField>();<z>
;<z>
decoder<z>
.getObjectInspector();<z>
extends StructField> fld_lst = structObjectInspector<z>
();<z>
fld_lst) {<z>
;<z>
e) {<z>
throw new RuntimeException(e);<z>
fields;<z>
final int stopIndex) {<z>
{<z>
) {<z>
null) {<z>
true;<z>
IThingmlProblem() {<z>
.ThingmlEProblemSeverity getSeverity() {<z>
thingml.ThingmlEProblemSeverity.ERROR;<z>
{<z>
resource.thingml.ThingmlEProblemType.SYNTAX_ERROR;<z>
getMessage() {<z>
errorMessage;<z>
getQuickFixes() {<z>
return null;<z>
, line, startIndex, stopIndex);<z>
return true;<z>
;<z>
Configuration configuration, final IProcessingContext processingContext,<z>
expression, final IStandardVariableExpressionEvaluator expressionEvaluator) {<z>
logger.isTraceEnabled()) {<z>
), expression.getStringRepresentation());<z>
Object leftValue =<z>
, expressionEvaluator);<z>
rightValue =<z>
, expression.getRight(), expressionEvaluator);<z>
{<z>
"null";<z>
) {<z>
"null";<z>
(leftValue);<z>
rightValue);<z>
!= null && rightNumberValue != null) {<z>
leftNumberValue.multiply(rightNumberValue);<z>
TemplateProcessingException(<z>
(rightValue) + "\"");<z>
onCreate(Bundle savedInstanceState) {<z>
(savedInstanceState);<z>
true);<z>
.ARG_FEED_URI)) {<z>
new IllegalArgumentException("FeedActionFragment created with no feed_uri argument.");<z>
.ARG_FEED_URI);<z>
.getBoolean(FeedViewFragment.ARG_DUAL_PANE, false);<z>
;<z>
;<z>
g.name;<z>
dynUpdateUri);<z>
e) {}<z>
rand)<z>
;<z>
encryptionOID.equals(CMSEnvelopedDataGenerator.RC2_CBC))<z>
8];<z>
iv);<z>
);<z>
e)<z>
new CMSException("parameters generation error: " + e, e);<z>
);<z>
NoSuchAlgorithmException e)<z>
;<z>
e)<z>
("exception creating algorithm parameter generator: " + e, e);<z>
, IEObjectConsumer inst) {<z>
)) return null;<z>
{<z>
, consumed);<z>
;<z>
HttpResponseStatus status )<z>
( message, throwable );<z>
;<z>
)<z>
isAsset = true;<z>
> excludeStrings = getExcludeAssetComponentStrings();<z>
).getInterfaces())<z>
))<z>
false;<z>
return isAsset;<z>
value){<z>
type == PropertiesMap.UnitsType.SI)<z>
MperFT);<z>
;<z>
SimpleFeature next()<z>
{<z>
hasNext()) {<z>
();<z>
();<z>
;<z>
) {<z>
new GrSourceFilterScope(scope));<z>
scope));<z>
()) return PsiMethod.EMPTY_ARRAY;<z>
(annMethods, methods, PsiMethod.ARRAY_FACTORY);<z>
getCapabilities() {<z>
= super.getCapabilities();<z>
);<z>
disableAllAttributes();<z>
);<z>
.RELATIONAL_ATTRIBUTES);<z>
(Capability.MISSING_VALUES);<z>
();<z>
Capability.MISSING_CLASS_VALUES);<z>
enable(Capability.ONLY_MULTIINSTANCE);<z>
;<z>
pathname, final String path) {<z>
debug("checking path: {}", path);<z>
include : this.includes) {<z>
pathname.isDirectory()) ||<z>
matchPath(include, path, false) ||<z>
) {<z>
path, include);<z>
String exclude : this.excludes) {<z>
{<z>
, path, exclude);<z>
debug("denied path: {}", path);<z>
;<z>
) {<z>
;<z>
"acepted path: {}", path);<z>
;<z>
(logger.isTraceEnabled()) {<z>
path, include);<z>
);<z>
return false;<z>
throws IOException{<z>
BufferedReader(new FileReader(f));<z>
= null;<z>
<Cat>();<z>
get("tipoRegistro"));<z>
)) != null)<z>
(line);<z>
tipoRegistro == 0) )<z>
(c);<z>
);<z>
return l;<z>
XMLGregorianCalendar newLASTCHANGE) {<z>
XMLGregorianCalendar oldLASTCHANGE = lASTCHANGE;<z>
lASTCHANGE = newLASTCHANGE;<z>
eNotificationRequired())<z>
));<z>
() {<z>
new XQuery(<z>
;<z>
QT3Result res = result(query);<z>
;<z>
)<z>
void closeCurrentSession() {<z>
synchronized (this) {<z>
);<z>
{<z>
()) {<z>
;<z>
.remove();<z>
public String user(String property) {<z>
{<z>
(NOT_INITIALIZED);<z>
(property, getRequest());<z>
{<z>
t);<z>
, property);<z>
(msgContainer);<z>
String arg[]) throws Exception {<z>
PolicyParser(true);<z>
);<z>
[1]);<z>
fr);<z>
close();<z>
void init(Context context) {<z>
();<z>
);<z>
);<z>
setStyle(Style.STROKE);<z>
feedbackPaint.setStrokeWidth(2);<z>
;<z>
1;<z>
if (context instanceof FontSizeAdjuster) {<z>
FontSizeAdjuster) context).adjustFontSize(this);<z>
{<z>
;<z>
;<z>
));<z>
(NoSuchMethodException e) {<z>
Throwable t) {<z>
("Error occurred while checking if the authentication request is for the proxy server: " + t.getMessage());<z>
).getStackTrace();<z>
{<z>
{<z>
;<z>
i].getMethodName())) {<z>
false;<z>
String proxyHost = System.getProperty("http.proxyHost");<z>
(proxyHost);<z>
{<z>
SerializationGroupContainer<K, V>(passivationManager);<z>
this, container, timeout);<z>
;<z>
setGroupCache(groupCache);<z>
;<z>
public void applyBinds(BindRunner bindRunner) {<z>
) {<z>
.iterator() : null;<z>
.size(); index++) {<z>
() : null;<z>
applyBind(this, index);<z>
BindIteration)<z>
);<z>
void onEndPoseCb(String strPose, long userId)<z>
{<z>
int) userId);<z>
fullMethodName) {<z>
;<z>
) {<z>
return "";<z>
;<z>
fullMethodName.length()) {<z>
"";<z>
.substring(index);<z>
void registerCluster(String clusterName, String knownServer) {<z>
Form form = new Form();<z>
FORM_PARAM_CLUSTER_NAME, clusterName);<z>
;<z>
form);<z>
isControlStatement(ASTNode node) {<z>
node != null;<z>
int type = node.getType();<z>
IF_STATEMENT<z>
ASTNode.FOR_STATEMENT<z>
== ASTNode.FOR_EACH_STATEMENT<z>
WHILE_STATEMENT<z>
.DO_STATEMENT<z>
kSeqAVGFunc28() {<z>
query = new XQuery(<z>
);<z>
= result(query);<z>
= res;<z>
true)<z>
] getNames() {<z>
blockLocation.getNames();<z>
catch (IOException e) {<z>
String[]{};<z>
getPeerForObject(Class objectClass, boolean searchSuperClasses) {<z>
= null;<z>
objectClass.getName());<z>
peer != null) {<z>
return peer;<z>
{<z>
[] interfaces = objectClass.getInterfaces();<z>
.length; i++) {<z>
[i], true);<z>
{<z>
return peer;<z>
;<z>
null);<z>
;<z>
static void main(String args[])<z>
RemoteException, IOException {<z>
|| args.length < 1) {<z>
);<z>
" 'java visad.rabin.Rain file.nc'\n or");<z>
System.out.println(" 'java visad.rabin.Rain server.ip.name'");<z>
;<z>
Rain(args);<z>
;<z>
public boolean contains(RowId rowId) {<z>
null && modified.contains(rowId))<z>
;<z>
) {<z>
(isDeferred()) {<z>
.add(ref);<z>
else {<z>
);<z>
dispose();<z>
[] serverHostKey) throws IOException<z>
hostnames == null)<z>
IllegalArgumentException("hostnames may not be null");<z>
(serverHostKeyAlgorithm))<z>
;<z>
synchronized (publicKeys)<z>
));<z>
else if ("ssh-dss".equals(serverHostKeyAlgorithm))<z>
);<z>
(publicKeys)<z>
(new KnownHostsEntry(hostnames, dpk));<z>
;<z>
ParseException {<z>
);<z>
Color color;<z>
;<z>
(color);<z>
(true) {<z>
jj_ntk) {<z>
COMA:<z>
jj_la1[16] = jj_gen;<z>
break label_5;<z>
jj_consume_token(COMA);<z>
();<z>
;<z>
colors;<z>
public LightWeightJavaDOILabelDecorator() {<z>
(){<z>
) {<z>
;<z>
c = ISketchColorConstants.BLACK;<z>
;<z>
createKeys(List<Chart> list) {<z>
Chart chart : charts) {<z>
list.add(chart);<z>
;<z>
{<z>
, this);<z>
(Exception e){<z>
.error("Error in parsing string.", e);<z>
result;<z>
(JComponent c) {<z>
;<z>
);<z>
);<z>
);<z>
) throws CmsException {<z>
readFile(resource);<z>
file);<z>
final void rule__InvalidLiteralExpCS__Group__0__Impl() throws RecognitionException {<z>
= keepStackSize();<z>
( state.backtracking==0 ) {<z>
));<z>
( state.backtracking==0 ) {<z>
().getInvalidLiteralExpCSAction_0());<z>
;<z>
public static CSTARouteSelectRequestInv decode(InputStream in) {<z>
_this = new CSTARouteSelectRequestInv();<z>
(in);<z>
_this;<z>
static DropboxClient create(User user) {<z>
testClient != null) {<z>
return testClient;<z>
;<z>
"User must be a Dropbox user";<z>
getSecret());<z>
)<z>
IOException {<z>
= env;<z>
.addCleanup(this);<z>
_path = path;<z>
) {<z>
= path.openAppend();<z>
else {<z>
= path.openWrite();<z>
> getDefaultInitializer() {<z>
() {<z>
action) {<z>
(!action.evaluateCondition()) {<z>
return false;<z>
(action.getTargetObject() == null) {<z>
(action, action.escapeParameterRetrievingWhenValid);<z>
} else {<z>
return true;<z>
int offset, int baseLevel, int runLevel,<z>
fontInfo )<z>
(textContent);<z>
this.textContent = textContent;<z>
fi = fontInfo;<z>
) * PDFConstants.LAYOUT_TO_PDF_RATIO );<z>
fi.getBaseline( );<z>
this.offset = offset;<z>
this.runLevel = runLevel;<z>
lineBreak = false;<z>
;<z>
removeBorder( );<z>
( );<z>
type, ConstantInfo constantValue) {<z>
type = type;<z>
.LIVE;<z>
constantValue;<z>
() throws IOException {<z>
);<z>
;<z>
return "";<z>
root)<z>
;<z>
null)<z>
;<z>
value = parts[count];<z>
length)<z>
;<z>
= 0;<z>
ctx.putValue(this, count);<z>
return value;<z>
() {<z>
return null;<z>
OptionGroup optionGroup = new OptionGroup();<z>
);<z>
);<z>
c,<z>
int actions,<z>
)<z>
(MouseDragGestureRecognizer.class, c,<z>
dgl);<z>
throws RecognitionException {<z>
;<z>
lv_refs_0_0=null;<z>
otherlv_1=null;<z>
Token lv_refs_2_0=null;<z>
);<z>
;<z>
.getRefsIDTerminalRuleCall_0_0());<z>
==null) {<z>
.getRefPathRule());<z>
);<z>
2;<z>
input.LA(1);<z>
==23) ) {<z>
=1;<z>
alt23) {<z>
case 1 :<z>
;<z>
));<z>
);<z>
getRefsIDTerminalRuleCall_1_1_0());<z>
) {<z>
));<z>
;<z>
;<z>
);<z>
();<z>
) {<z>
recover(input,re);<z>
();<z>
current;<z>
unmarshallerContext)<z>
throws Exception {<z>
unmarshallerContext.readText();<z>
null : new BigInteger(s);<z>
() {<z>
(<z>
ctx);<z>
res = result(query);<z>
result = res;<z>
(false, "1")<z>
( )<z>
formSection ) )<z>
needRebuild )<z>
;<z>
needRebuild = false;<z>
;<z>
()<z>
itemsList.size() == 0) {<z>
return -1;<z>
this.focusedIndex == -1) {<z>
this.selectedIndex;<z>
} else {<z>
.focusedIndex;<z>
) {<z>
;<z>
"currentInd", Boolean.TRUE);<z>
Boolean.FALSE);<z>
!= null) {<z>
"active", activeInd);<z>
(docTypeName != null) {<z>
docTypeName.toUpperCase());<z>
equals("")) {<z>
);<z>
if (ruleTemplateId != null) {<z>
;<z>
!= null) {<z>
addEqualTo("delegateRule", delegateRule);<z>
isEmpty()) {<z>
);) {<z>
;<z>
entry.getValue())) {<z>
);<z>
, entry.getKey());<z>
());<z>
;<z>
});<z>
addIn("ruleExtensions.ruleBaseValuesId", query);<z>
return crit;<z>
static Document buildDirectoryListing(File directory) {<z>
.newDocument(false, false);<z>
Element root = dirList.createElement("dir");<z>
.toString());<z>
().toString());<z>
);<z>
File file;<z>
Element element;<z>
length; i++) {<z>
file = fileList[i];<z>
{<z>
.createElement("dir");<z>
createElement("file");<z>
"name", file.getName());<z>
);<z>
element);<z>
dirList.appendChild(root);<z>
return dirList;<z>
)<z>
RepositoryException {<z>
= getWriteRoot();<z>
(root);<z>
list = Lists.newArrayList();<z>
NodeTypeDefinition ntd : ntds) {<z>
;<z>
commit();<z>
;<z>
);<z>
CommitFailedException e) {<z>
e);<z>
) {<z>
null) {<z>
0);<z>
command, final String path, final String encoding)<z>
CoreException {<z>
new ArrayList<IDynamicVariable>();<z>
FILE_NAME_VARIABLE) {<z>
String getValue(final String argument) throws CoreException {<z>
;<z>
;<z>
(FILE_ENCODING_VARIABLE) {<z>
String getValue(final String argument) throws CoreException {<z>
RUtil.escapeCompletely(encoding) : "unknown";<z>
;<z>
new DynamicVariable(ECHO_ENABLED_VARIABLE) {<z>
{<z>
.getInstancePrefs().getPreferenceValue(<z>
;<z>
) ?<z>
"TRUE" : "FALSE";<z>
});<z>
(command, variables, true);<z>
{<z>
CoreException {<z>
escapeCompletely(path);<z>
);<z>
();<z>
String capName, String componentName,<z>
project,<z>
String guid) {<z>
, componentName, componentType, actionName,<z>
false);<z>
protected void onResume() {<z>
();<z>
;<z>
);<z>
void display()<z>
(0xff214b18);<z>
strokeWeight(4);<z>
;<z>
conf, String[] hostnames,<z>
String password, String debug) {<z>
password, debug);<z>
.set(DEBUG_PROP, debug);<z>
(InputStream in)<z>
IOException {<z>
,<z>
;<z>
private JpaPageTemplateRegion createEntity(PageTemplateRegion source) {<z>
= null;<z>
source != null) {<z>
));<z>
== null) {<z>
JpaPageTemplateRegion();<z>
converted);<z>
return converted;<z>
String message, boolean isNotification) {<z>
(Player player : this.players) {<z>
) {<z>
.getPlayer(player);<z>
) {<z>
().msg(sp, message);<z>
{<z>
msg(player, message);<z>
else {<z>
msg(player, message);<z>
DoubleMatrix2D viewColumn(int column) {<z>
);<z>
int viewRows = this.slices;<z>
int viewColumns = this.rows;<z>
= sliceZero;<z>
int viewColumnZero = rowZero;<z>
column));<z>
viewRowStride = this.sliceStride;<z>
rowStride;<z>
= this.sliceOffsets;<z>
.rowOffsets;<z>
viewColumnOffsets,viewOffset);<z>
getExpirationRemoveDescription(Locale locale) {<z>
);<z>
createOperationDescription(REMOVE, resources, "infinispan.cache.expiration.remove");<z>
.setEmptyObject();<z>
;<z>
)<z>
.createObjectNode();<z>
());<z>
));<z>
));<z>
"port", instance.getPort());<z>
());<z>
, instance.getRegistrationTimeUTC());<z>
().name());<z>
);<z>
Exception e )<z>
e);<z>
return node;<z>
)<z>
ch=='^')<z>
;<z>
'*'||ch=='/')<z>
2;<z>
ch=='+'||ch=='-')<z>
return 1;<z>
;<z>
(stubDelegateInstance != null)<z>
= stubDelegateInstance.getClass();<z>
) {<z>
stubDelegate == null) {<z>
);<z>
{<z>
.hashCode(this);<z>
return 0;<z>
Task t) {<z>
;<z>
;<z>
System.err.println("############################################################");<z>
Thread.dumpStack();<z>
);<z>
performCancel() {<z>
size(); i++) {<z>
(i);<z>
change.comment);<z>
;<z>
;<z>
)<z>
)<z>
.emptyList();<z>
ArrayList<QueuedTrack>();<z>
for (QueueTrack queuedTrack : queuedTracks)<z>
.asString()));<z>
return queuedWebTracks;<z>
int size, int format, int formatSize,<z>
, IndexInput cloneableFieldsStream, IndexInput cloneableIndexStream) {<z>
fieldInfos;<z>
.numTotalDocs = numTotalDocs;<z>
this.size = size;<z>
;<z>
this.formatSize = formatSize;<z>
docStoreOffset;<z>
.cloneableFieldsStream = cloneableFieldsStream;<z>
cloneableIndexStream;<z>
.clone();<z>
;<z>
getApplicationByUuids(<z>
PathParam("organizationId") String organizationIdStr,<z>
String applicationIdStr)<z>
Exception {<z>
applicationIdStr);<z>
fromString(organizationIdStr);<z>
null || organizationId == null) {<z>
null;<z>
management<z>
.getApplicationsForOrganization(organizationId);<z>
== null) {<z>
return null;<z>
);<z>
) {<z>
);<z>
.close();<z>
catch (final Throwable e) {<z>
{<z>
;<z>
(mDevicesToExpand) {<z>
index = mDevicesToExpand.indexOf(device);<z>
-1) {<z>
);<z>
= true;<z>
= expand;<z>
Runnable() {<z>
run() {<z>
() == false) {<z>
IDevice selectedDevice = getSelectedDevice();<z>
device);<z>
).isEmpty()) {<z>
(<z>
);<z>
;<z>
if (finalExpand) {<z>
true);<z>
{<z>
AndroidDebugBridge.removeDebugBridgeChangeListener(DevicePanel.this);<z>
.removeDeviceChangeListener(DevicePanel.this);<z>
);<z>
);<z>
public boolean isOverScrolled() {<z>
!mScrollerX.mFinished &&<z>
mScrollerX.mState != SplineOverScroller.SPLINE) ||<z>
!mScrollerY.mFinished &&<z>
));<z>
{<z>
new XQuery(<z>
ctx);<z>
QT3Result res = result(query);<z>
= res;<z>
assertStringValue(false, "Nothing to normalize.")<z>
IResource underlyingResource) {<z>
) {<z>
= validateCompilationUnit(underlyingResource);<z>
)) {<z>
status;<z>
) && getPerWorkingCopyInfo() == null) {<z>
;<z>
return DartModelStatusImpl.VERIFIED_OK;<z>
, IOException, Exception<z>
StandardAnalyzer(Version.LUCENE_34);<z>
analyzer);<z>
= new IndexWriter(directory, config);<z>
;<z>
.optimize();<z>
.close();<z>
idx;<z>
) {<z>
{<z>
validateLineDelimiters(text);<z>
.replace(position, length, text);<z>
parseControlChar(String str) {<z>
{<z>
return -1;<z>
str.charAt(0) == '0') {<z>
return Integer.parseInt(str, 8);<z>
<= '9') {<z>
, 10);<z>
) == '^') {<z>
.charAt(1) == '?') {<z>
127;<z>
else {<z>
str.charAt(1) - 64;<z>
(1) == '-') {<z>
str.charAt(2) == '^') {<z>
3) == '?') {<z>
128;<z>
} else {<z>
charAt(3) - 64 + 128;<z>
else {<z>
) + 128;<z>
} else {<z>
0);<z>
args, Player player, HumanNPC npc) {<z>
.sendMessage(ChatColor.YELLOW<z>
()<z>
YELLOW));<z>
.getType("wizard");<z>
player.sendMessage(ChatColor.GREEN + " Mode: "<z>
).toLowerCase()));<z>
);<z>
()) {<z>
= "unlimited";<z>
(ChatColor.GREEN + " Mana: "<z>
+ StringUtils.wrap(mana));<z>
public static int toStatus(String label) {<z>
(label.equals(LABEL_ANY)) {<z>
;<z>
(label.equals(LABEL_APPROVED)) {<z>
return STATUS_APPROVED;<z>
if (label.equals(LABEL_DENIED)) {<z>
return STATUS_DENIED;<z>
.equals(LABEL_DRAFT)) {<z>
return STATUS_DRAFT;<z>
label.equals(LABEL_EXPIRED)) {<z>
return STATUS_EXPIRED;<z>
(LABEL_PENDING)) {<z>
;<z>
return STATUS_ANY;<z>
) {<z>
route, conn);<z>
.add(entry);<z>
;<z>
static int packetIdToInt(PacketIds var0)<z>
)<z>
case DiamondPipeGUI:<z>
return 70;<z>
:<z>
return 71;<z>
FillerGUI:<z>
72;<z>
TemplateGUI:<z>
;<z>
:<z>
;<z>
case EngineSteamGUI:<z>
return 75;<z>
:<z>
return 76;<z>
throw new RuntimeException("Invalid GUI id: " + var0);<z>
featureID, Object newValue) {<z>
featureID) {<z>
.GLOBAL_USER_TASK__RENDERINGS:<z>
;<z>
;<z>
:<z>
setImplementation((String) newValue);<z>
eSet(featureID, newValue);<z>
public String toString() {<z>
StringBuilder();<z>
("{");<z>
", ");<z>
state + ", ");<z>
+ ", ");<z>
;<z>
);<z>
"VpnGatewayId: " + vpnGatewayId + ", ");<z>
", ");<z>
vgwTelemetry + ", ");<z>
append("Options: " + options + ", ");<z>
append("Routes: " + routes + ", ");<z>
);<z>
return sb.toString();<z>
pluralForms() {<z>
new PluralForm[] {<z>
"Default plural form"),<z>
"Count is 1"),<z>
new PluralForm("few", "Count is 2, 3 or 4"),<z>
startingPoint, int tolerance)<z>
);<z>
); i <= endDirection; i += tolerance)<z>
= this.getNearest(i, startingPoint);<z>
if (temp < nearest)<z>
nearest = temp;<z>
nearest;<z>
void safeClose(Closeable closeable) {<z>
if (closeable != null)<z>
;<z>
) {<z>
final String fileName, final String password,<z>
encryptionService)<z>
, IOException {<z>
new InputStreamReader(<z>
encryptionService.newDecryptingInputStream(<z>
)));<z>
request, Child child, String lineId) {<z>
<String, String>();<z>
ListeActiviteDocument activities;<z>
("TRANS", request, child);<z>
{<z>
());<z>
return stops;<z>
.getActiviteArray()) {<z>
{<z>
.getListeCircuitAller().getCircuitAllerArray()) {<z>
lineId)) {<z>
getArretAllerArray()) {<z>
);<z>
stops;<z>
{<z>
>();<z>
getConfigs()) {<z>
, config);<z>
;<z>
{<z>
(!dirty) {<z>
(getStory(), this);<z>
;<z>
String name,<z>
long classNameId, boolean retrieveFromCache)<z>
{<z>
, classNameId };<z>
Object result = null;<z>
(retrieveFromCache) {<z>
FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_N_P_C,<z>
, this);<z>
== null) {<z>
= new StringBundler(5);<z>
(_SQL_SELECT_PORTLETITEM_WHERE);<z>
;<z>
name == null) {<z>
;<z>
BLANK)) {<z>
.append(_FINDER_COLUMN_G_N_P_C_NAME_3);<z>
_FINDER_COLUMN_G_N_P_C_NAME_2);<z>
null) {<z>
.append(_FINDER_COLUMN_G_N_P_C_PORTLETID_1);<z>
.equals(StringPool.BLANK)) {<z>
.append(_FINDER_COLUMN_G_N_P_C_PORTLETID_3);<z>
(_FINDER_COLUMN_G_N_P_C_PORTLETID_2);<z>
.append(_FINDER_COLUMN_G_N_P_C_CLASSNAMEID_2);<z>
query.toString();<z>
null;<z>
;<z>
sql);<z>
= QueryPos.getInstance(q);<z>
;<z>
) {<z>
);<z>
if (portletId != null) {<z>
;<z>
add(classNameId);<z>
();<z>
;<z>
portletItem = null;<z>
isEmpty()) {<z>
(FINDER_PATH_FETCH_BY_G_N_P_C,<z>
list);<z>
;<z>
);<z>
!= groupId) ||<z>
() == null) ||<z>
.equals(name) ||<z>
) == null) ||<z>
).equals(portletId) ||<z>
.getClassNameId() != classNameId)) {<z>
FINDER_PATH_FETCH_BY_G_N_P_C,<z>
);<z>
;<z>
{<z>
throw processException(e);<z>
null) {<z>
FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_N_P_C,<z>
finderArgs);<z>
(session);<z>
List<?>) {<z>
;<z>
)result;<z>
, String file)<z>
());<z>
(java.net.MalformedURLException x)<z>
private VirtualFile[] getSelectedFiles() {<z>
>();<z>
);<z>
if (descriptors != null) {<z>
SModelDescriptor descriptor : descriptors) {<z>
(!(descriptor instanceof DefaultSModelDescriptor)) continue;<z>
DefaultSModelDescriptor emd = (DefaultSModelDescriptor) descriptor;<z>
;<z>
if (ifile == null) continue;<z>
(ifile);<z>
) continue;<z>
selectedFilesList.add(vfile);<z>
;<z>
if (modules != null) {<z>
SModule m : modules) {<z>
;<z>
AbstractModule) m;<z>
;<z>
null) {<z>
vfile = VirtualFileUtils.getVirtualFile(home);<z>
vfile != null) {<z>
.add(vfile);<z>
ifile = module.getDescriptorFile();<z>
if (ifile != null) {<z>
ifile);<z>
) {<z>
(vfile);<z>
== 0) {<z>
return null;<z>
VirtualFile[selectedFilesList.size()]);<z>
{<z>
Long>(_maxUserToGroupCount + 1);<z>
_guestGroup.getGroupId());<z>
_maxUserToGroupCount) > _maxGroupsCount) {<z>
- _maxUserToGroupCount + 1;<z>
++) {<z>
groupIds.add(groupId + i);<z>
groupIds;<z>
public Void execute(Context context) {<z>
( kbaseKagentId+"_kAgent" );<z>
) {<z>
("Applying Resource: "+this.res);<z>
applyChangeSet( this.res );<z>
( this.cs != null ) {<z>
.cs);<z>
cs );<z>
null;<z>
(FAILPARENTIFINSTANCEDIDNOTRUNType newFAILPARENTIFINSTANCEDIDNOTRUN) {<z>
fAILPARENTIFINSTANCEDIDNOTRUN;<z>
= newFAILPARENTIFINSTANCEDIDNOTRUN == null ? FAILPARENTIFINSTANCEDIDNOTRUN_EDEFAULT : newFAILPARENTIFINSTANCEDIDNOTRUN;<z>
boolean oldFAILPARENTIFINSTANCEDIDNOTRUNESet = fAILPARENTIFINSTANCEDIDNOTRUNESet;<z>
;<z>
eNotificationRequired())<z>
, !oldFAILPARENTIFINSTANCEDIDNOTRUNESet));<z>
getIntValue(final Long longValue) {<z>
if (longValue != null) {<z>
intValue();<z>
return 0;<z>
{<z>
) {<z>
;<z>
Dimension result;<z>
MetalComboBoxButton) {<z>
();<z>
).getIconWidth();<z>
getInsets();<z>
new Dimension();<z>
;<z>
+ arrowButtonInsets.right + arrowButtonInsets.right;<z>
;<z>
;<z>
isMinimumSizeDirty = false;<z>
} else {<z>
= super.getMinimumSize(c);<z>
;<z>
( Class<T> adaptee ) {<z>
if (adaptee == null)<z>
return false;<z>
isAssignableFrom(ActiveMemoryDataStore.class)<z>
super.canResolve(adaptee);<z>
mode, String type) {<z>
);<z>
.values()) {<z>
)) {<z>
{<z>
) {<z>
(r);<z>
;<z>
return possRoom;<z>
_init_prod__MetaVariable_MidPathChars__lit___60_layouts_$QUOTES_$Pattern_layouts_$QUOTES_lit___62_(ExpectBuilder<IConstructor> builder) {<z>
[]) new AbstractStackNode[5];<z>
null, null);<z>
null);<z>
, 2, "$Pattern", null, null);<z>
"layouts_$QUOTES", null, null);<z>
{60}, null, null);<z>
);<z>
public static String get() {<z>
implementationChoice == null) {<z>
"HEIKKI";<z>
return implementationChoice;<z>
) throws Exception<z>
);<z>
=<z>
AllBinaryImageArrayRotationAnimationInfo) key;<z>
AllBinaryImageArrayRotationAnimationCacheable) cacheableInterface).setImageArray(<z>
getImageArray());<z>
return cacheableInterface;<z>
SystemUsage memoryManager, DestinationFactory destinationFactory,<z>
Scheduler scheduler,ThreadPoolExecutor executor) throws IOException {<z>
brokerService = brokerService;<z>
.executor=executor;<z>
scheduler;<z>
{<z>
new IllegalArgumentException("null destinationFactory");<z>
());<z>
;<z>
createQueueRegion(memoryManager, taskRunnerFactory, destinationFactory);<z>
memoryManager, taskRunnerFactory, destinationFactory);<z>
destinationInterceptor = destinationInterceptor;<z>
(memoryManager, taskRunnerFactory, destinationFactory);<z>
createTempTopicRegion(memoryManager, taskRunnerFactory, destinationFactory);<z>
) {<z>
return true;<z>
) return f==(float)f;<z>
)f;<z>
return f==(int)f;<z>
)f;<z>
(short)f;<z>
;<z>
false;<z>
buildValueRangeDescriptor(ValueRange valueRangeAnnotation) {<z>
.type()) {<z>
:<z>
new SolutionPropertyPlanningValueRangeDescriptor(this, valueRangeAnnotation);<z>
case FROM_PLANNING_ENTITY_PROPERTY:<z>
this, valueRangeAnnotation);<z>
UNDEFINED:<z>
(this, valueRangeAnnotation);<z>
"The valueRangeType ("<z>
() + ") is not implemented");<z>
{<z>
int stackSize = keepStackSize();<z>
;<z>
rule__ObjectWrapper__Group_3__1__Impl();<z>
state._fsp--;<z>
re) {<z>
reportError(re);<z>
);<z>
);<z>
run() {<z>
{<z>
(this) {<z>
) {<z>
);<z>
;<z>
sleep(1000);<z>
e) {<z>
JSONObject jsonObject)<z>
)<z>
;<z>
infoVO = null;<z>
"type") != null)<z>
jsonObject.get("type");<z>
equalsIgnoreCase("media"))<z>
);<z>
type.equalsIgnoreCase("user"))<z>
= new InfoUserTypeVO(jsonObject);<z>
"contact"))<z>
;<z>
)<z>
InfoMessageGetTypeVO(jsonObject);<z>
)<z>
);<z>
.equalsIgnoreCase("calendar"))<z>
= new InfoCalendarTypeVO(jsonObject);<z>
)<z>
InfoCalendarEntryTypeVO(jsonObject);<z>
))<z>
InfoIncidentTypeVO(jsonObject);<z>
;<z>
} catch (ClassCastException classCastException) {<z>
classCastException);<z>
(NullPointerException nullPointerException) {<z>
nullPointerException);<z>
);<z>
{<z>
);<z>
== null)<z>
throw new CayenneRuntimeException("Entity '"<z>
getName()<z>
"' has no parent MappingNamespace (such as DataMap)");<z>
return parent;<z>
(Iterable<? extends E> elements) {<z>
null) {<z>
IllegalArgumentException("elements must not be null");<z>
= elements.iterator();<z>
false) {<z>
);<z>
iter.next();<z>
) {<z>
.singleton(first);<z>
>();<z>
copy.add(first);<z>
)) {<z>
());<z>
;<z>
(Exception e) {<z>
{<z>
OperationTransaction transaction = activeTx;<z>
(transaction != null) {<z>
rollback();<z>
.countDown();<z>
(final Format format, final Geopoint gp)<z>
= gp.getLatitude();<z>
.getLongitude();<z>
switch (format) {<z>
case LAT_LON_DECDEGREE:<z>
("%.6f %.6f", latSigned, lonSigned);<z>
case LAT_LON_DECDEGREE_COMMA:<z>
, lonSigned);<z>
case LAT_LON_DECMINUTE:<z>
("%c %02d° %06.3f · %c %03d° %06.3f",<z>
getLonMinRaw());<z>
case LAT_LON_DECMINUTE_RAW:<z>
((Locale) null, "%c %02d° %06.3f %c %03d° %06.3f",<z>
());<z>
:<z>
return String.format("%c %02d° %02d' %06.3f\" · %c %03d° %02d' %06.3f\"",<z>
getLatSecRaw(),<z>
));<z>
LAT_DECDEGREE_RAW:<z>
) null, "%.6f", latSigned);<z>
LAT_DECMINUTE:<z>
gp.getLatMinRaw());<z>
LAT_DECMINUTE_RAW:<z>
);<z>
case LON_DECDEGREE_RAW:<z>
) null, "%.6f", lonSigned);<z>
:<z>
getLonMinRaw());<z>
case LON_DECMINUTE_RAW:<z>
(), gp.getLonMinRaw());<z>
null;<z>
toString() {<z>
= new StringBuilder();<z>
"untyped-value-check[");<z>
);<z>
", ");<z>
.toString());<z>
);<z>
result.toString();<z>
(Iterable<T> nodes) {<z>
T> ();<z>
)<z>
list.add(node);<z>
return list;<z>
ctx)<z>
, InterruptedException {<z>
.idToIndex(itemID.get());<z>
, 1);<z>
;<z>
;<z>
;<z>
) {<z>
userID.get());<z>
.add(1.0f);<z>
);<z>
RPTree(int order) {<z>
order = order;<z>
= null;<z>
public String getText(Object element) {<z>
;<z>
Diagram) {<z>
Diagram)element;<z>
getName();<z>
} else if(element instanceof IAdaptable) {<z>
getAdapter(EObject.class);<z>
InternalEObject && obj.eIsProxy()) {<z>
= (InternalEObject)obj;<z>
());<z>
} else {<z>
;<z>
} else {<z>
= super.getText(element);<z>
text;<z>
) throws RecognitionException {<z>
= keepStackSize();<z>
FOLLOW_rule__Function__Group__0__Impl_in_rule__Function__Group__043704);<z>
rule__Function__Group__0__Impl();<z>
._fsp--;<z>
;<z>
FollowSets002.FOLLOW_rule__Function__Group__1_in_rule__Function__Group__043707);<z>
rule__Function__Group__1();<z>
state._fsp--;<z>
if (state.failed) return ;<z>
(RecognitionException re) {<z>
reportError(re);<z>
recover(input,re);<z>
;<z>
) {<z>
0)<z>
(this.width);<z>
(this.height);<z>
.nextPowerOfTwo(scaledHeight);<z>
(width == 0)<z>
width = scaledWidth;<z>
)<z>
= scaledHeight;<z>
false, false);<z>
repeatX, repeatY);<z>
(reptex);<z>
.pushFramebuffer(fbuf, width, height);<z>
0, 0, 0, 0);<z>
;<z>
width, sb = st + this.height;<z>
null).prepareTexture(tex, 1);<z>
, height, width, 0,<z>
/ th);<z>
{<z>
);<z>
;<z>
boolean threadSafe) {<z>
= Trees.leftEdge(t,qTree);<z>
) return;<z>
= t.getChildrenAsList();<z>
()) return;<z>
.label();<z>
testString = null;<z>
;<z>
size();i++){<z>
<Integer>();<z>
;<z>
= children.get(i);<z>
=0;<z>
;<z>
new StringBuffer(160);<z>
append(treeAsStemmedCollocation(subtree, threadSafe));<z>
;<z>
);<z>
+=thisSubtreeLength;<z>
);<z>
(subtree));<z>
);<z>
.size(); j++) {<z>
get(j);<z>
childConstituents.add(j);<z>
));<z>
);<z>
yield().size();<z>
{<z>
), "(?:[Tt]he|THE|[Aa][Nn]?)[ _]")) {<z>
(false) {<z>
"CollocationFinder: Not collapsing the/a word: " +<z>
);<z>
) {<z>
-1);<z>
(),headLabel);<z>
(col);<z>
if (DEBUG) {<z>
));<z>
c +<z>
c);<z>
;<z>
), "(?:[Tt]he|THE|[Aa][Nn]?)[ _]")) {<z>
if (false) {<z>
println("CollocationFinder: Not collapsing the/a word: " +<z>
testStringNonStemmed);<z>
wordNetContains(testStringNonStemmed.toString())) {<z>
currWindowLength-1);<z>
),headLabel);<z>
);<z>
{<z>
testStringNonStemmed.toString());<z>
+<z>
);<z>
append("_");<z>
+=thisSubtreeLength;<z>
List<IArtifact> xmlAttrs, boolean asPublic) {<z>
;<z>
CspecFactory.eINSTANCE;<z>
{<z>
.createArtifact();<z>
xmlArtifact, artifact, asPublic);<z>
.add(artifact);<z>
> newGoodies) {<z>
;<z>
(String s : newGoodies)<z>
+ "|";<z>
;<z>
System.NAVIGATION_BAR_BUTTONS,<z>
);<z>
parser) {<z>
=<z>
Arguments.password };<z>
) {<z>
name())) {<z>
" is required");<z>
return false;<z>
name())) == null) {<z>
.name() + " must be one of ");<z>
values()) {<z>
));<z>
true;<z>
(String name, SolrCore parsedCore) {<z>
== null || name.isEmpty()){<z>
"The name of a SolrCore MUST NOT be NULL nor emtpy");<z>
.name = name;<z>
? parsedCore : server.getCore(name);<z>
){<z>
+" from CoreContainer "+server);<z>
<String,Object>();<z>
.put(PROPERTY_CORE_NAME, name);<z>
().getInstanceDir());<z>
getDataDir());<z>
;<z>
());<z>
, core.getConfigResource());<z>
.get(PROPERTY_SERVER_NAME));<z>
PROPERTY_SERVER_DIR, serverProperties.get(PROPERTY_SERVER_DIR));<z>
().getProperty(SERVICE_ID));<z>
= serverProperties.get(PROPERTY_SERVER_RANKING);<z>
null)<z>
;<z>
props);<z>
{<z>
warn("Unable to refister Service for SolrCore "+name+": Clean-up and rethrow");<z>
.registration = null;<z>
();<z>
;<z>
,<z>
AssetEntry> assetEntries)<z>
portal.kernel.exception.SystemException {<z>
addAssetEntries(pk, assetEntries);<z>
<ThemeBean> createRepeatingThemes() {<z>
= createThemeBeansModel();<z>
themeBeansModel) {<z>
;<z>
<ThemeBean> item) {<z>
;<z>
createThemeNameLabel(themeBeanModel));<z>
themeBeanModel));<z>
(themeBeanModel));<z>
));<z>
PDRectangle()<z>
= new COSArray();<z>
new COSFloat( 0.0f ) );<z>
) );<z>
;<z>
new COSFloat( 0.0f ) );<z>
) {<z>
;<z>
);<z>
(schedulingPath);<z>
{<z>
requests = new LinkedList();<z>
update);<z>
requests);<z>
.get(schedulingPath);<z>
(inProgressList != null) {<z>
update);<z>
) {<z>
;<z>
cancel();<z>
()) {<z>
{<z>
void run() {<z>
(fTriggerUpdatesRunnable != this) return;<z>
) return;<z>
());<z>
().asyncExec(fTriggerUpdatesRunnable);<z>
{<z>
);<z>
public final void handle( final PortalWebContext context )<z>
.getOriginalSitePath();<z>
( originalSitePath == null )<z>
;<z>
;<z>
);<z>
{<z>
);<z>
!= null) {<z>
StructuredSelection(settings.getValue()));<z>
(int idx, int replacement) {<z>
idx),replacement);<z>
)] = newResult;<z>
return newResult;<z>
String url, String userName, String password,<z>
{<z>
if (url == null) {<z>
IllegalArgumentException("URL of Cayenne service is null.");<z>
= url;<z>
userName = userName;<z>
this.password = password;<z>
;<z>
(String county) {<z>
TextUtils.isEmpty(county))<z>
county = "fairfax";<z>
= county;<z>
) throws Exception {<z>
(byte[]) message);<z>
short opCode = reader.readShort();<z>
ClientPacketOpcode.values()) {<z>
) {<z>
CLIENT_KEY);<z>
NeedsChecking()) {<z>
(!client.isLoggedIn()) {<z>
code, reader, client);<z>
} catch (final PacketFormatException ex) {<z>
();<z>
writer) throws XMLStreamException {<z>
localName = getName().getLocalPart();<z>
getNamespaceURI();<z>
prefix = writer.getPrefix(namespaceURI);<z>
if (prefix == null) {<z>
getPrefix();<z>
;<z>
namespaceURI);<z>
, namespaceURI);<z>
header;<z>
;) {<z>
) iterator.next();<z>
SPConstants.HEADER, namespaceURI);<z>
header.getName() != null) {<z>
getName());<z>
;<z>
);<z>
writeEndElement();<z>
String messageID, String listenerID,<z>
long maxDelayMS) {<z>
.messageID = messageID;<z>
;<z>
;<z>
parameters = JSONUtils.encodeToJSONObject(parameters);<z>
.CONTENT_NETWORK_VUZE;<z>
;<z>
maxDelayMS;<z>
(Stoppable s) {<z>
();<z>
.isStopped()) {<z>
;<z>
{<z>
()));<z>
0.5f);<z>
receiveBootLoaderReplyReadData();<z>
{<z>
!= null) {<z>
>();<z>
: revisions) {<z>
).asString(), vcsFileRevision);<z>
lineAnnotation : lineAnnotations) {<z>
;<z>
revisionNumber);<z>
if (revision != null) {<z>
setUser(revision.getAuthor());<z>
(revision.getRevisionDate());<z>
final Event event, final boolean filterAsyncUnordered)<z>
;<z>
(SyncThread)sleepingThread : null;<z>
i = tasks.iterator();<z>
hasNext() )<z>
;<z>
if ( !useTimeout(task) )<z>
task.sendEvent(event);<z>
( syncThread != null )<z>
startTime = System.currentTimeMillis();<z>
sendEvent(event);<z>
() - startTime > this.timeout )<z>
.blackListHandler();<z>
;<z>
Rendezvous();<z>
executeTask(new Runnable()<z>
run()<z>
;<z>
(event);<z>
waitForRendezvous();<z>
)<z>
;<z>
waitForRendezvous();<z>
timerBarrier.waitAttemptForRendezvous(this.timeout);<z>
TimeoutException ie)<z>
.blackListHandler();<z>
object) {<z>
);<z>
getVersion().getSelectedItem();<z>
);<z>
.getPath().getIsChangable());<z>
.getIsChangable());<z>
());<z>
);<z>
getIsChangable());<z>
.getVersion().getIsAvailable());<z>
getVersion().getIsAvailable());<z>
).getIsAvailable());<z>
));<z>
);<z>
().getIsAvailable()<z>
object.getRetransmissions().getIsAvailable()<z>
.getTimeout().getIsAvailable();<z>
VISIBLE : Style.Visibility.HIDDEN);<z>
{<z>
observableChange();<z>
switch (shape & 0x30) {<z>
0x00:<z>
;<z>
:<z>
2; break;<z>
:<z>
missile0ScanSpeed = 4; break;<z>
case 0x30:<z>
; break;<z>
{<z>
player0ScanSpeed = 2;<z>
player0MediumCopy = player0WideCopy = false;<z>
) == 0x07) {<z>
= 4;<z>
false;<z>
;<z>
(shape & 0x01) != 0;<z>
!= 0;<z>
0x04) != 0;<z>
tc) {<z>
Grid g;<z>
grids) {<z>
cmaps);<z>
.equals(gc))<z>
g = last;<z>
get(gc);<z>
== null)<z>
1);<z>
;<z>
(Overlay lol : ols) {<z>
(1, 1))))<z>
ol |= lol.mask;<z>
ol);<z>
config) {<z>
getCallback(),<z>
;<z>
,<z>
"Must provide a valid value as scope. Google does not support no scope");<z>
getApiKey(),<z>
(config.getCallback()),<z>
;<z>
sawOpcode(int seen) {<z>
) {<z>
:<z>
(seen == CHECKCAST) {<z>
= getClassConstantOperand();<z>
= State.SAW_CHECKCAST;<z>
INVOKEINTERFACE) {<z>
String clsName = getClassConstantOperand();<z>
);<z>
(methodName)) {<z>
SAW_NEXT;<z>
:<z>
seen <= ASTORE_3))) {<z>
= RegisterUtils.getAStoreReg(this, seen);<z>
reg, getNextPC());<z>
!= null) {<z>
= lv.getSignature();<z>
0) == 'L') {<z>
, sig.length() - 1);<z>
(castClass)) {<z>
new BugInstance(this, "OC_OVERZEALOUS_CASTING", NORMAL_PRIORITY)<z>
(this)<z>
addMethod(this)<z>
(this));<z>
{<z>
);<z>
f.getFieldSignature();<z>
== 'L') {<z>
) - 1);<z>
)) {<z>
new BugInstance(this, "OC_OVERZEALOUS_CASTING", NORMAL_PRIORITY)<z>
(this)<z>
)<z>
);<z>
SAW_NOTHING;<z>
:<z>
state = State.SAW_NOTHING;<z>
(final RepositorySelection newRepoSelection) {<z>
equals(validatedRepoSelection)) {<z>
();<z>
(UIText.SourceBranchPage_branchList,<z>
);<z>
);<z>
;<z>
= null;<z>
head = null;<z>
clear();<z>
(null);<z>
setPageComplete(false);<z>
);<z>
null);<z>
().asyncExec(new Runnable() {<z>
public void run() {<z>
;<z>
;<z>
void rebase() {<z>
rootTree.getBaseState())) {<z>
();<z>
= getBaseState();<z>
rootTree.getNodeState();<z>
();<z>
, rootTree.getNodeBuilder(), conflictHandler);<z>
IParser getParser() {<z>
null) {<z>
.VISUAL_ID));<z>
return parser;<z>
{<z>
if (reservedInstances == null) {<z>
null;<z>
else {<z>
>(reservedInstances.size());<z>
addAll(reservedInstances);<z>
reservedInstances = reservedInstancesCopy;<z>
this;<z>
,<z>
) {<z>
emtlResourceSet != null) {<z>
String, List<Module>>();<z>
{<z>
() > 0<z>
get(0) instanceof Module) {<z>
get(0);<z>
;<z>
> toFill = project2emtl.get(projectName);<z>
null) {<z>
>();<z>
projectName, toFill);<z>
add(eModule);<z>
entrySet()) {<z>
= entry.getKey();<z>
Module> eModules = entry.getValue();<z>
new FileBlocksProjectHandler(projectName, eModules<z>
;<z>
project.getName())) {<z>
add(0, projectHanlder);<z>
{<z>
add(projectHanlder);<z>
() {<z>
rebuildDependancies();<z>
getProject().getTOCResource());<z>
getProject().getFlexoWorkflowResource());<z>
(int featureID) {<z>
switch (featureID) {<z>
.STATE__PARENT:<z>
null;<z>
STATE__ID:<z>
.equals(id);<z>
;<z>
, boolean value) {<z>
if (value) {<z>
;<z>
{<z>
mask;<z>
{<z>
;<z>
toString());<z>
.getProperty("line.separator"));<z>
);<z>
.append(rLine());<z>
;<z>
append("Char: ");<z>
;<z>
.getProperty("line.separator"));<z>
);<z>
(rName());<z>
);<z>
getProperty("line.separator"));<z>
);<z>
());<z>
.append(", char ");<z>
.append(rRefChar());<z>
.append(".");<z>
;<z>
();<z>
String beskrivelse, String sted, String tittel,<z>
,<z>
int<z>
{<z>
.beskrivelse = beskrivelse;<z>
= sted;<z>
.tittel = tittel;<z>
.ansattNR = ansattNR;<z>
= dag;<z>
this.maaned = maaned;<z>
aar;<z>
this.startTime = startTime;<z>
= startMinutt;<z>
sluttTime = sluttTime;<z>
sluttMinutt = sluttMinutt;<z>
void displaySelectedElement() {<z>
IStructuredSelection) filterViewer.getSelection();<z>
isEmpty())<z>
;<z>
public static MessageAttribute parseCommonHeader(byte[] data)<z>
{<z>
new byte[2];<z>
;<z>
);<z>
new byte[2];<z>
lengthArray, 0, 2);<z>
);<z>
] valueArray = new byte[lengthValue];<z>
, lengthValue);<z>
ma;<z>
{<z>
MAPPEDADDRESS:<z>
MappedAddress.parse(valueArray);<z>
RESPONSEADDRESS:<z>
parse(valueArray);<z>
case CHANGEREQUEST:<z>
);<z>
case SOURCEADDRESS:<z>
valueArray);<z>
case CHANGEDADDRESS:<z>
;<z>
:<z>
.parse(valueArray);<z>
case PASSWORD:<z>
.parse(valueArray);<z>
MESSAGEINTEGRITY:<z>
valueArray);<z>
case ERRORCODE:<z>
;<z>
UNKNOWNATTRIBUTE:<z>
parse(valueArray);<z>
case REFLECTEDFROM:<z>
.parse(valueArray);<z>
) {<z>
throw new UnknownMessageAttributeException(<z>
;<z>
} else {<z>
= Dummy.parse(valueArray);<z>
ma;<z>
ue) {<z>
("Parsing error");<z>
range1, TextRange range2) {<z>
range1 + "," + range2 + ")");<z>
;<z>
= range1.getStartOffset();<z>
end1 = range1.getEndOffset();<z>
);<z>
;<z>
if (myLastLine1 < start1) {<z>
start1 - 1);<z>
{<z>
mySource2, myLastLine2, start2 - 1);<z>
!= null) {<z>
(text1, text2));<z>
start1, end1),<z>
end2)));<z>
+ 1;<z>
1;<z>
() {<z>
);<z>
programAndVersion);<z>
);<z>
System.out.print("Nickname: ");<z>
,null) {<z>
{<z>
"PSEUDO_BOOTSTRAP";<z>
key) {<z>
.isTraceEnabled()) {<z>
StringBuffer(128);<z>
.LOG_CANCEL);<z>
method);<z>
toString());<z>
null) {<z>
key);<z>
Object getElement( Object key ){<z>
enumeration = data.elements();<z>
) ){<z>
)enumeration.nextElement();<z>
key == key ){<z>
data.removeElement( n );<z>
data.insertElementAt( n, 0 );<z>
n.element;<z>
;<z>
OrdinaryMorphism adjustMorph2NAC(<z>
OrdinaryMorphism m2, final OrdinaryMorphism help2) {<z>
.getTarget()<z>
getSource())) {<z>
.createMorphism(<z>
getTarget());<z>
getDomain();<z>
.hasMoreElements()) {<z>
GraphObject go = dom.nextElement();<z>
inverse = help2.getInverseImage(go);<z>
()) {<z>
nextElement();<z>
(go));<z>
(BadMappingException ex) {<z>
return null;<z>
return om;<z>
return m2;<z>
) {<z>
o instanceof IntraLineDiffKey) {<z>
(IntraLineDiffKey) o;<z>
.equals(k.aId)<z>
bId.equals(k.bId);<z>
false;<z>
{<z>
(m_Count == m_Items.length){<z>
realloc();<z>
= m_Count;<z>
;<z>
m_Count = (count + 1);<z>
public String toString() {<z>
);<z>
);<z>
" (isPrivate: ");<z>
"<unset>");<z>
(", language: ");<z>
append(language);<z>
;<z>
append(returnFeatureTypes);<z>
.append(", value: ");<z>
;<z>
result.append(')');<z>
toString();<z>
> sort(final boolean descending)<z>
toArray();<z>
>()<z>
(K a, K b)<z>
{<z>
0;<z>
;<z>
ClassCastException ex) {<z>
0;<z>
);<z>
K>();<z>
) {<z>
;<z>
return result;<z>
ProtocolConfiguration> configs) {<z>
new StringBuilder();<z>
;<z>
.append("<config>\n");<z>
) {<z>
.getProtocolName());<z>
);<z>
()) {<z>
);<z>
);<z>
{<z>
key=entry.getKey();<z>
.getValue();<z>
key=trim(key);<z>
(val);<z>
val).append("\" ");<z>
);<z>
.append("</config>\n");<z>
;<z>
updateStep() {<z>
;<z>
, String>();<z>
getProjectId();<z>
("groupId", projectId.getGroupId());<z>
("artifactId", projectId.getArtifactId());<z>
;<z>
("archetypeGroupId", archetype.groupId);<z>
archetype.artifactId);<z>
);<z>
put("archetypeRepository", archetype.repository);<z>
setDataFromMap(props);<z>
int index)<z>
) return null;<z>
;<z>
element) {<z>
element instanceof JetClassOrObject &&<z>
) {<z>
);<z>
;<z>
{<z>
.readable()) {<z>
.slice();<z>
} else {<z>
Unpooled.EMPTY_BUFFER;<z>
ClassCastException {<z>
(!(ob instanceof XmldbURI)) {<z>
"The provided Object is not an XmldbURI");<z>
.getXmldbURI());<z>
throws Exception {<z>
{<z>
visitor);<z>
null) {<z>
visitor);<z>
!= null) {<z>
++) {<z>
null) {<z>
(visitor);<z>
glProgramEnvParametersI4uivNV(<z>
,<z>
int index,<z>
,<z>
] params,<z>
{<z>
().glProgramEnvParametersI4uivNV(<z>
);<z>
() {<z>
);<z>
< imax; i++) {<z>
datasets[i].hashCode();<z>
i++) {<z>
();<z>
return hash;<z>
public void createThem() {<z>
Shepherd myShepherd = new Shepherd();<z>
();<z>
secondRun = "true";<z>
= "false";<z>
;<z>
writeThis) {<z>
= false;<z>
{<z>
"true";<z>
rightScan);<z>
("epsilon", gm.getGrothEpsilon());<z>
, gm.getGrothR());<z>
.getGrothSizelim());<z>
"maxTriangleRotation", gm.getGrothMaxTriangleRotation());<z>
);<z>
.getGrothSecondRun());<z>
beginDBTransaction();<z>
String>();<z>
();<z>
.println("Successfully created the scanTask shell!");<z>
myShepherd.beginDBTransaction();<z>
myShepherd.getAllEncountersNoQuery();<z>
0;<z>
while (encounters.hasNext()) {<z>
= (Encounter) encounters.next();<z>
.equals(encounterNumber)) {<z>
)).toString();<z>
) {<z>
, enc, wiIdentifier, taskID, props2);<z>
swi.getUniqueNumber();<z>
addWorkItem(swi);<z>
++;<z>
() > 0)) {<z>
, taskID, props2);<z>
= swi.getUniqueNumber();<z>
.addWorkItem(swi);<z>
count++;<z>
);<z>
();<z>
finished = true;<z>
catch (Exception e) {<z>
.println("I failed while constructing the workItems for a new scanTask.");<z>
.printStackTrace();<z>
;<z>
();<z>
text) {<z>
new ComponentMatcher() {<z>
matches(Component component) {<z>
JComponent)) {<z>
false;<z>
(JComponent)component;<z>
.getToolTipText();<z>
;<z>
) {<z>
= instance;<z>
this.name = instance.getName();<z>
getName());<z>
groupProperties.ENABLE_JMX.getBoolean();<z>
.groupProperties.ENABLE_JMX_DETAILED.getBoolean();<z>
TileEntityEngineGenerator()<z>
.currentFramework.createPowerProvider());<z>
pulseSize = 30;<z>
= 100;<z>
();<z>
,<z>
throws ResourceException<z>
finest("getConnection()");<z>
;<z>
return connection;<z>
SRect() {<z>
GT_Rectangle,<z>
,<z>
.LT_Unknown,<z>
.DC_None);<z>
0f);<z>
(short) 0);<z>
(0f, 0f);<z>
, (short) 0);<z>
Document document,<z>
final LuceneOptions opts, FileAnnotation fileAnnotation) {<z>
();<z>
null) {<z>
(), opts);<z>
);<z>
);<z>
!= null) {<z>
), opts);<z>
file.getMimetype(), opts);<z>
parsers, opts);<z>
(Object obj) {<z>
(this == obj)<z>
;<z>
!(obj instanceof WebBrowserEditorInput))<z>
return false;<z>
= (WebBrowserEditorInput) obj;<z>
{<z>
.toExternalForm())) {<z>
false;<z>
if (other.url != null) {<z>
false;<z>
;<z>
{<z>
);<z>
()!=null) return getToolTipText();<z>
toString();<z>
public Activity getActivity(Place place) {<z>
) {<z>
IdfPlace idfPlace = (IdfPlace) place;<z>
idfPlace.isSheetModeOn()) {<z>
).withPlace(idfPlace);<z>
;<z>
Connection conn) throws MapsException {<z>
debug("deleting elements of map...");<z>
elementTable<z>
;<z>
PreparedStatement statement = conn.prepareStatement(sqlDelete);<z>
, id);<z>
execute();<z>
.close();<z>
) {<z>
;<z>
rollback(conn);<z>
;<z>
static JavaConstructor forConstructor(Constructor c) {<z>
(JavaConstructor) constructors.get(c);<z>
null )<z>
j = new JavaConstructor(c) );<z>
j;<z>
() {<z>
referenceCount--;<z>
.currentTimeMillis();<z>
referenceCount == 0) {<z>
);<z>
PooledSession session : this.loanedSessions) {<z>
();<z>
) {<z>
loanedSessions.clear();<z>
) != null) {<z>
, Packet[] packet)<z>
world.getPlayers())<z>
!= player)<z>
(Packet p : packet)<z>
().netServerHandler.sendPacket(p);<z>
(player);<z>
) throws RecognitionException {<z>
keepStackSize();<z>
{<z>
getTupleTypeCSAccess().getGroup_1());<z>
alt28=2;<z>
input.LA(1);<z>
49) ) {<z>
;<z>
alt28) {<z>
case 1 :<z>
;<z>
();<z>
;<z>
if (state.failed) return ;<z>
.backtracking==0 ) {<z>
getGroup_1());<z>
catch (RecognitionException re) {<z>
reportError(re);<z>
re);<z>
restoreStackSize(stackSize);<z>
clear()<z>
false ;<z>
true ;<z>
EditorContext editorContext) {<z>
<SReference>() {<z>
SReference ref) {<z>
== null;<z>
() {<z>
combine(StringBuffer sb, SReference ref) {<z>
;<z>
.getTargetNodeId());<z>
!= null ?<z>
append("\"\n") :<z>
append("\n no resolveInfo\n")<z>
;<z>
();<z>
);<z>
).getDefaultEditorFont();<z>
null) {<z>
(font);<z>
PINK);<z>
ta;<z>
public Type stop() {<z>
();<z>
stop);<z>
return (Type) this;<z>
static void actionAssocParent()<z>
;<z>
if(selectedNuclei.size()>1)<z>
parentName=null;<z>
EvDecimal parentFrame=null;<z>
null;<z>
.next().fst();<z>
childPair:selectedNuclei)<z>
==lin)<z>
;<z>
childName);<z>
n.getFirstFrame();<z>
firstFrame.less(parentFrame))<z>
firstFrame;<z>
;<z>
parent=n;<z>
=new LinkedList<String>();<z>
(LineageSelParticle childPair:selectedNuclei)<z>
lin)<z>
;<z>
.get(childName);<z>
.contains(parentName))<z>
(childName);<z>
))<z>
(null, "Couldn't find any children to assign to "+parent);<z>
(lin, parentName, childNames);<z>
JOptionPane.showMessageDialog(null, "Select at least two particles from the same lineage");<z>
public void getExternalUsers()<z>
userUtil.searchPlexusUsers( "Simple" );<z>
), "User not found" );<z>
containsUser( users, "anonymous-simple" ), "User not found" );<z>
"deployment-simple" ), "User not found" );<z>
) {<z>
;<z>
? buffers[out ^ 1] : source;<z>
!= null)) {<z>
{<z>
clear();<z>
;<z>
;<z>
;<z>
;<z>
Object obj) {<z>
instanceof TsapiRouteSession)) {<z>
.tsRouteSession<z>
(TsapiRouteSession) obj).tsRouteSession);<z>
false;<z>
{<z>
readShort();<z>
!= 30) {<z>
.warn("Size of extension block was expected to be "<z>
+ " bytes.");<z>
readInt();<z>
long extentTableOffset = inStream.readInt();<z>
4);<z>
kernPairOffset = inStream.readInt();<z>
inStream.skip(4);<z>
();<z>
> 0) {<z>
);<z>
);<z>
);<z>
();<z>
.skip(driverInfoOffset);<z>
inStream.readString();<z>
0) {<z>
inStream.reset();<z>
extMetricsOffset);<z>
);<z>
if (extentTableOffset != 0) {<z>
);<z>
;<z>
);<z>
(Object obj) {<z>
if (this == obj)<z>
true;<z>
)<z>
false;<z>
) != obj.getClass())<z>
false;<z>
= (DBODateAnnotation) obj;<z>
null) {<z>
if (other.attribute != null)<z>
;<z>
!attribute.equals(other.attribute))<z>
return false;<z>
id == null) {<z>
(other.id != null)<z>
return false;<z>
other.id))<z>
false;<z>
{<z>
owner != null)<z>
;<z>
owner.equals(other.owner))<z>
false;<z>
{<z>
null)<z>
;<z>
other.value))<z>
false;<z>
return true;<z>
editorContext, SNode node) {<z>
.createIndent2(editorContext, node);<z>
);<z>
getStyle();<z>
StyleAttributes.SELECTABLE, false);<z>
node));<z>
return editorCell;<z>
Object b) {<z>
if (b instanceof AbstractDataset) {<z>
= (AbstractDataset) b;<z>
bds);<z>
();<z>
it2 = bds.getIterator();<z>
it2.hasNext()) {<z>
it2.index);<z>
catch (ArithmeticException e) {<z>
data[it1.index] = 0;<z>
} else {<z>
v = toReal(b);<z>
) {<z>
(0);<z>
{<z>
= getIterator();<z>
while (it1.hasNext()) {<z>
.index] /= v;<z>
;<z>
return this;<z>
,<z>
exprFac, String [] genKeywords)<z>
arguments = arguments;<z>
noWarn = arguments.noWarn;<z>
arguments.corbaLevel;<z>
arguments.includePaths;<z>
= arguments.definedSymbols;<z>
verbose = arguments.verbose;<z>
emitAll;<z>
;<z>
? new Hashtable () : overrides;<z>
) : symtab;<z>
0] : genKeywords;<z>
= stFac;<z>
= exprFac;<z>
ModuleEntry ();<z>
preprocessor;<z>
(new IDLID ());<z>
addPrimEntries ();<z>
void deleteRec(Node node) throws RepositoryException {<z>
);<z>
++) {<z>
]);<z>
)));<z>
contentFile.isDirectory()) {<z>
this.contentFile);<z>
else {<z>
);<z>
.metaDir);<z>
IOException e) {<z>
.getPath() + ": " +<z>
e);<z>
setMachine(FiniteStateMachine machine) {<z>
);<z>
) {<z>
= machine.findEdge(edgeName);<z>
(this.endEdge == null) {<z>
;<z>
this.proximity = getFloydWarshall();<z>
max(this.proximity);<z>
Map<String, String> errorDetails)<z>
("message");<z>
)<z>
)<z>
(message);<z>
.BAD_REQUEST)<z>
.contains("Unknown path components"))<z>
);<z>
))<z>
;<z>
))<z>
();<z>
startsWith("Error validating access token"))<z>
if (message.contains("Session has expired at unix time"))<z>
ExpiredAuthorizationException();<z>
if (message<z>
))<z>
;<z>
)<z>
RevokedAuthorizationException();<z>
"has not authorized application"))<z>
RevokedAuthorizationException();<z>
(message);<z>
.equals("Error validating application."))<z>
);<z>
message.equals("Invalid access token signature."))<z>
new InvalidAuthorizationException(message);<z>
HttpStatus.UNAUTHORIZED)<z>
new NotAuthorizedException(message);<z>
)<z>
(message.contains("Requires extended permission"))<z>
": ")[1];<z>
;<z>
);<z>
.INTERNAL_SERVER_ERROR)<z>
(message.equals("User must be an owner of the friendlist"))<z>
message);<z>
if (message.equals("The member must be a friend of the current user."))<z>
message);<z>
(message);<z>
{<z>
uri)) {<z>
:<z>
Channels.CONTENT_TYPE;<z>
:<z>
CONTENT_TYPE;<z>
:<z>
.CONTENT_TYPE;<z>
case JOBS:<z>
CONTENT_TYPE;<z>
case TAGS:<z>
;<z>
:<z>
TagsOfItems.CONTENT_TYPE;<z>
throw new IllegalArgumentException("Unknown URI " + uri);<z>
createMessageReceiver(Connector connector,<z>
FlowConstruct flowConstruct,<z>
,<z>
MuleException<z>
String receiverClass = messageReceiver;<z>
).isTransacted())<z>
;<z>
if (transactedMessageReceiver != null && !xaTx)<z>
;<z>
xaTx)<z>
= xaTransactedMessageReceiver;<z>
if (receiverClass != null)<z>
] newArgs;<z>
0)<z>
args.length];<z>
3];<z>
0] = connector;<z>
newArgs[1] = flowConstruct;<z>
] = endpoint;<z>
length != 0)<z>
.length - 3);<z>
.instanciateClass(receiverClass, newArgs, classLoader);<z>
return mr;<z>
e)<z>
getService()), e);<z>
objectNotSetInService("Message Receiver", getService()));<z>
public Object getData(String dataId) {<z>
();<z>
wrapper instanceof DataProvider) {<z>
)wrapper).getData(dataId);<z>
instanceof TypeSafeDataProvider) {<z>
wrapper);<z>
adapter.getData(dataId);<z>
return null;<z>
functionCall004() {<z>
final XQuery query = new XQuery(<z>
ctx);<z>
res = result(query);<z>
= res;<z>
assertBoolean(false)<z>
)<z>
= origin;<z>
= 0;<z>
Internal.EnumLiteMap<DataType>() {<z>
{<z>
(number);<z>
params, String key) {<z>
getParam(params, key);<z>
if (param == null) {<z>
null;<z>
param instanceof String) {<z>
(String) param;<z>
(param);<z>
name, float[] values)<z>
throws VisADException, RemoteException {<z>
) {<z>
("bad values");<z>
< values.length) {<z>
);<z>
) {<z>
("bad name");<z>
).getDomain();<z>
domain).getDimension() == 1) {<z>
);<z>
.getRealType(name);<z>
domain, range);<z>
= new FlatField(ftype, set);<z>
set.getLength();<z>
;<z>
length < len) {<z>
new float[len];<z>
0, new_values, 0, len);<z>
NaN;<z>
;<z>
copy = false;<z>
[] field_values = {values};<z>
, copy);<z>
return field;<z>
VaultRegistry() {<z>
getVaultClassProvider());<z>
);<z>
.getVaultClassProvider());<z>
NonExistentVault.getVaultClassProvider());<z>
SimpleCarFileVault.getVaultClassProvider());<z>
public int getScore(GameModel gameModel)<z>
;<z>
headerModel = gameModel.getHeaderModel();<z>
= gameModel.getMoveModel();<z>
;<z>
getTotalNumOfPlies() * 3;<z>
;<z>
.length() * 1;<z>
s.length() * 1;<z>
) score += 8;<z>
+= 8;<z>
score += s.length() * 1;<z>
* 1;<z>
) != null) score += 4;<z>
;<z>
null) score += 1;<z>
;<z>
, boolean required) {<z>
, required) {<z>
public void openHyperlink() {<z>
()<z>
getInput(), attr);<z>
getText());<z>
2);<z>
return linkAttr;<z>
) {<z>
{<z>
0;<z>
if (nextRuntime > o.nextRuntime)<z>
1;<z>
nextRuntime < o.nextRuntime)<z>
-1;<z>
;<z>
long begin, long end, VisOverlayNode node) {<z>
0;<z>
: Controller.getTimeline()<z>
()) {<z>
{<z>
(e instanceof MessageSent) {<z>
) e;<z>
() == node) {<z>
count++;<z>
return count;<z>
{<z>
= checkOneGeo();<z>
; i--) {<z>
i);<z>
if (geo1 instanceof GeoPoint) {<z>
GeoPoint point1 = (GeoPoint)geo1;<z>
(Kernel.COORD_POLAR);<z>
.updateRepaint();<z>
;<z>
RemoteException {<z>
getEventingConfigData();<z>
} catch (RemoteException e) {<z>
("cannot.get.eventing.config"), e);<z>
return null;<z>
public void FinishFeature()<z>
selectedShape)<z>
LINE:<z>
add(currentLine);<z>
currentLine=null;<z>
case POLYGON:<z>
.add(currentPolygon);<z>
null;<z>
;<z>
)<z>
);<z>
;<z>
(JSONObjectNode node)<z>
_document, node);<z>
;<z>
() {<z>
if (macroSegmentId < 0) {<z>
new IllegalStateException("macroSegmentId must be >=0");<z>
{<z>
IllegalStateException("macroSegmentId must be < macroSemgentCount");<z>
1) {<z>
throw new IllegalStateException("macroSemgentCount must be > 0");<z>
] = MACRO_SEGMENT_ID;<z>
, 5);<z>
!= null) {<z>
macroFileId);<z>
] = MACRO_SEGMENT_COUNT;<z>
cwPtr++] = 1;<z>
5);<z>
-1) {<z>
;<z>
,final int y) {<z>
Toolkit.getDefaultToolkit().getScreenSize();<z>
Object value = inputControl.getValue();<z>
!=null && copyAndPasteEnabled) {<z>
JMenuItem copyMenu = new JMenuItem(<z>
.getResources().getResource("copy"),<z>
.getResource("copymnemonic").charAt(0)<z>
actionPerformed(ActionEvent e) {<z>
value);<z>
.add(copyMenu);<z>
copyAndPasteEnabled) {<z>
cutMenu = new JMenuItem(<z>
().getResource("cut"),<z>
.getResource("cutmnemonic").charAt(0)<z>
e) {<z>
value)) {<z>
oldValue = inputControl.getValue();<z>
.setValue(null);<z>
this.add(cutMenu);<z>
JMenuItem(<z>
getResources().getResource("paste"),<z>
.getResource("pastemnemonic").charAt(0)<z>
void actionPerformed(ActionEvent e) {<z>
null);<z>
(content != null) {<z>
.equals("")) {<z>
Object value = null;<z>
(inputControl instanceof CodLookupControl) {<z>
inputControl).isAllowOnlyNumbers())<z>
(data);<z>
value = data;<z>
else if (inputControl instanceof NumericControl) {<z>
Double(data);<z>
else if (inputControl instanceof DateControl) {<z>
(Consts.TYPE_DATE_TIME));<z>
= sdfdatetime.parse(data);<z>
inputControl instanceof FormattedTextControl) {<z>
= data;<z>
inputControl instanceof TextControl) {<z>
= data;<z>
if (inputControl instanceof TextAreaControl) {<z>
.getCaretPosition();<z>
pos<0)<z>
0;<z>
getTextArea().getText();<z>
==0)?<z>
data+value):<z>
-1?<z>
substring(0,pos)+data:<z>
inputControl.getValue();<z>
.setValue(value);<z>
oldValue,value);<z>
.stringFlavor.getHumanPresentableName());<z>
()>0) {<z>
)screenSize.getWidth();<z>
xOverflow-20:x;<z>
?y-yOverflow-20:y;<z>
JComponent)inputControl),popupX,popupY);<z>
(Throwable ex) {<z>
ex);<z>
value, String errorID) throws ValidationException {<z>
;<z>
trim();<z>
.getClass().getName()<z>
;<z>
i++) {<z>
false) {<z>
errorID));<z>
this.getClass().getName()<z>
;<z>
{<z>
{<z>
item;<z>
if (parent instanceof Spinner) {<z>
;<z>
} else {<z>
false);<z>
item.setSingleLine();<z>
);<z>
item;<z>
} else {<z>
(layout, parent, false);<z>
TextView) view.findViewById(textId);<z>
;<z>
END);<z>
;<z>
{<z>
true;<z>
jj_scan_token(IDENTIFIER)) return true;<z>
xsp;<z>
true) {<z>
xsp = jj_scanpos;<z>
)) { jj_scanpos = xsp; break; }<z>
xsp = jj_scanpos;<z>
jj_scan_token(86)) {<z>
;<z>
) {<z>
xsp;<z>
return true;<z>
;<z>
sourceFile, EncodingProfile profile) throws EncoderException {<z>
);<z>
.trace("Looking for episode settings at " + settingsPath);<z>
>(1);<z>
settingsPath);<z>
EpisodeSettings> settings = null;<z>
result = execute("engine.getSettingsInGroupAtPath", arguments);<z>
!(result instanceof Object[]))<z>
, "Episode engine returned unknown result when asked for settings at "<z>
+ settingsPath);<z>
;<z>
>(settingsGroup.length);<z>
: settingsGroup) {<z>
, Object>) settingsEntry;<z>
)<z>
new EncoderException(engine, "Episode engine returned unknown result when asked for settings at "<z>
settingsPath);<z>
= new EpisodeSettings(s);<z>
;<z>
return settings;<z>
) throws ClientPoolException, StorageClientException,<z>
.info("|Threads|Time s|Throughput|Throughput per thread| Concurrency| Efficiency|");<z>
; tr++) {<z>
;<z>
tr];<z>
< tr; t++) {<z>
Thread(getRunnable(tr));<z>
);<z>
; t < tr; t++) {<z>
);<z>
} catch (InterruptedException e1) {<z>
);<z>
e = System.currentTimeMillis();<z>
1000);<z>
);<z>
public VcsRoot[] getAllVcsRoots() {<z>
>();<z>
;<z>
: vcses) {<z>
roots = getRootsUnderVcs(vcs);<z>
{<z>
(new VcsRoot(vcs, root));<z>
()]);<z>
{<z>
getCurrentTime();<z>
)<z>
< time_last_rebuild<z>
) > timeAvailRebuild) {<z>
enter();<z>
;<z>
();<z>
) {<z>
] old_availability = availabilityAsynch == null<z>
availability : availabilityAsynch;<z>
errors = 0;<z>
; i++) {<z>
old_availability[i]) {<z>
++;<z>
(errors > 0 && errors != nbPieces) {<z>
(Logger.isEnabled())<z>
LOGID, LogEvent.LT_ERROR,<z>
+ timeAvailRebuild));<z>
;<z>
;<z>
;<z>
= 0;<z>
;<z>
{<z>
();<z>
else if (availabilityComputeChange >= availabilityChange) {<z>
;<z>
= now;<z>
;<z>
{<z>
availability = availabilityAsynch;<z>
null;<z>
} finally {<z>
);<z>
i;<z>
.MAX_VALUE;<z>
allMax = 0;<z>
MAX_VALUE;<z>
++) {<z>
availability[i];<z>
= dmPieces[i];<z>
final PEPiece pePiece = pePieces[i];<z>
< rarestMin && dmPiece.isDownloadable()<z>
|| pePiece.isRequestable()))<z>
rarestMin = avail;<z>
(avail < allMin)<z>
allMin = avail;<z>
if (avail > allMax)<z>
;<z>
;<z>
;<z>
= rarestMin;<z>
;<z>
;<z>
0;<z>
i++) {<z>
availability[i];<z>
DiskManagerPiece dmPiece = dmPieces[i];<z>
pePieces[i];<z>
avail > 0) {<z>
)<z>
total++;<z>
null<z>
&& !pePiece.isRequested())<z>
;<z>
;<z>
;<z>
1.0 && newGlobalAvail < 1.0) {<z>
timeAvailLessThanOne = now;<z>
newGlobalAvail >= 1.0) {<z>
0;<z>
;<z>
rarestActive;<z>
(nbPieces)<z>
getNbPeers());<z>
deleteCall(long id) {<z>
id);<z>
delete(callUri, null, null);<z>
id;<z>
showDialog(DELETE_CALL_DIALOG);<z>
;<z>
validateVersion(OAuthMessage message) throws OAuthException,<z>
info("Validate Version: %s", OAuth.OAUTH_VERSION);<z>
= message.getParameter(OAuth.OAUTH_VERSION);<z>
versionString);<z>
!= null) {<z>
= Double.parseDouble(versionString);<z>
Logger.info("Min Version: %s, Max Version: %s", minVersion,<z>
;<z>
maxVersion < version) {<z>
("Invalid Version: %s", version);<z>
problem = new OAuthProblemException(<z>
.VERSION_REJECTED);<z>
,<z>
minVersion + "-" + maxVersion);<z>
problem;<z>
onCreateOptionsMenu(Menu menu) {<z>
= getSupportMenuInflater();<z>
inbox_menu, menu);<z>
(menu);<z>
{<z>
MPSFacetConfiguration mpsConf = this.readMPSFacetConf(file);<z>
{<z>
null;<z>
null, file);<z>
;<z>
._return_P0_E0<SolutionDescriptor>() {<z>
() {<z>
SolutionDescriptor();<z>
();<z>
;<z>
();<z>
result_56japk_a3a0a0e0a);<z>
boolean result_56japk_a7a0a0e0a = true;<z>
;<z>
boolean result_56japk_a9a0a0e0a = mpsConf.getUseTransientOutputFolder();<z>
);<z>
;<z>
result_56japk_a0a0e0a.setOutputPath(result_56japk_a11a0a0e0a);<z>
) != null) {<z>
getModelRoots()) {<z>
getPath()));<z>
().add(mrp);<z>
{<z>
: mpsConf.getUsedLanguages()) {<z>
;<z>
return result_56japk_a0a0e0a;<z>
invoke();<z>
;<z>
return sd;<z>
descriptor) throws IncorrectOperationException {<z>
PsiElement element = descriptor.getPsiElement();<z>
final PsiElement parent = element.getParent();<z>
{<z>
(parent instanceof PsiNewExpression) {<z>
parent;<z>
newExpression);<z>
));<z>
null && stringBuilderExpression != null) {<z>
));<z>
;<z>
final PsiTypeElement originalTypeElement = variable.getTypeElement();<z>
{<z>
PsiExpression initializer = variable.getInitializer();<z>
(initializer == null) {<z>
buildStringExpression(initializer, new StringBuilder());<z>
== null) {<z>
javaLangString = TypeUtils.getStringType(variable);<z>
javaLangString);<z>
));<z>
originalTypeElement.replace(typeElement);<z>
context,<z>
InternalWorkingMemory workingMemory ) {<z>
= (PropagationQueueingNodeMemory) workingMemory<z>
this );<z>
context ) );<z>
.compareAndSet( false, true ) ) {<z>
workingMemory.queueWorkingMemoryAction( this.action );<z>
) {<z>
ExternalProgram.AA_PROGRAM ||<z>
.DNA_PROGRAM) {<z>
=<z>
() + ":",<z>
.getProgramOptions ());<z>
addTextRequesterListener (new TextRequesterListener () {<z>
(final TextRequesterEvent event) {<z>
.getRequesterText ().trim ();<z>
requester_text.length () > 0) {<z>
(requester_text);<z>
);<z>
setVisible(true);<z>
} else {<z>
);<z>
float duration)<z>
target_x;<z>
.target_y = target_y;<z>
- _position.x) / duration);<z>
y) / duration);<z>
;<z>
isAnimatingPosition = true;<z>
(int i) {<z>
1) {<z>
("org.apache.cxf.io.CachedWriter.Threshold",<z>
"-1");<z>
(s);<z>
0) {<z>
= 64 * 1024;<z>
;<z>
value) {<z>
element;<z>
;<z>
) {<z>
);<z>
1)) {<z>
;<z>
value.equals(2)) {<z>
featureName, booleanProposals[2]);<z>
else {<z>
error("impossible to set boolean value " + value, null);<z>
GrClosureType closureType, GroovyPsiElement context) {<z>
();<z>
{<z>
true;<z>
return false;<z>
initialSize) throws IOException {<z>
;<z>
initialSize];<z>
;<z>
(length != INDEFINIT_LENGTH) {<z>
offset)) {<z>
length + offset];<z>
, 0, offset);<z>
= newBuffer;<z>
} else {<z>
true;<z>
"Decoding indefinite length encoding is not supported");<z>
hasUpdateScreenName(<z>
PermissionChecker permissionChecker, User user)<z>
SystemException {<z>
hasUpdateScreenName(<z>
;<z>
synchronized void restartNameNode() throws IOException {<z>
shutdownNameNode();<z>
String[] {}, conf);<z>
();<z>
.out.println("Restarted the namenode");<z>
;<z>
(true) {<z>
();<z>
(IOException e) {<z>
++;<z>
if (failedCount > 5) {<z>
out.println("Tried waitActive() " + failedCount<z>
));<z>
;<z>
.println("Cluster is active");<z>
) throws IOException {<z>
;<z>
);<z>
) {<z>
){<z>
( alpha == 1.0f || !transparent ){<z>
( image, 0, 0, this );<z>
)g;<z>
();<z>
;<z>
0, this );<z>
.setComposite( old );<z>
public Thread newThread(Runnable r) {<z>
(r);<z>
"I2PTunnel Client Runner " + (++_executorThreadCount));<z>
);<z>
return rv;<z>
public SAAJDataSource(InputStream ss,<z>
maxCached,<z>
{<z>
instanceof BufferedInputStream) {<z>
ss;<z>
else {<z>
ss = new BufferedInputStream(ss);<z>
.maxCached = maxCached;<z>
.length() != 0)) {<z>
contentType = contentType;<z>
< MIN_MEMORY_DISK_CACHED) {<z>
"badMaxCached " + maxCached);<z>
) {<z>
[] readbuffer = new byte[READ_CHUNK_SZ];<z>
= 0;<z>
= ss.read(readbuffer);<z>
) {<z>
, read);<z>
;<z>
();<z>
(Node node, Node last)<z>
;<z>
propertyDefinitions) {<z>
))<z>
.entrySet())<z>
;<z>
) {<z>
) {<z>
mutate();<z>
mMutated = true;<z>
return this;<z>
) {<z>
null) return;<z>
);<z>
;<z>
).setActive(false);<z>
.setVisible(false);<z>
gameState);<z>
)<z>
(window_size > 10)<z>
);<z>
step;<z>
return null;<z>
getCalendarSpacerComponent() {<z>
= Box.createGlue();<z>
false);<z>
;<z>
public boolean isUnitBar()<z>
) == DISCARDED) return false;<z>
.isUnitBar();<z>
{<z>
;<z>
mgr.updateAccountProfile(<z>
()));<z>
) {<z>
e);<z>
);<z>
accProfile));<z>
response;<z>
int color) throws android.os.RemoteException<z>
Parcel.obtain();<z>
.obtain();<z>
(DESCRIPTOR);<z>
0)));<z>
_data.writeInt(color);<z>
, 0);<z>
.readException();<z>
;<z>
recycle();<z>
protected Map fetchEntries() throws SVNException {<z>
)) {<z>
return null;<z>
);<z>
= null;<z>
.WC), "UTF-8"));<z>
;<z>
= null;<z>
!= null) {<z>
;<z>
line.equals("<entry")) {<z>
(null);<z>
null) {<z>
'\"') <= 0 ||<z>
) == line.lastIndexOf('\"')) {<z>
indexOf('='));<z>
.indexOf('\"') + 1,<z>
.lastIndexOf('\"'));<z>
.xmlDecode(value);<z>
value);<z>
() - 1) == '>') {<z>
entry.get(SVNProperty.NAME);<z>
(entryName == null) {<z>
;<z>
SVNDepth.INFINITY.getName());<z>
));<z>
().equals(entryName)) {<z>
));<z>
rootEntry != null) {<z>
rootEntry.asMap();<z>
SVNProperty.REVISION) == null) {<z>
SVNProperty.REVISION));<z>
null) {<z>
);<z>
) {<z>
;<z>
.put(SVNProperty.URL, url);<z>
SVNProperty.UUID) == null) {<z>
(SVNProperty.UUID));<z>
) {<z>
);<z>
null;<z>
IOException e) {<z>
()});<z>
);<z>
finally {<z>
SVNFileUtil.closeFile(reader);<z>
entries;<z>
() {<z>
if (key == NULL) {<z>
return null;<z>
(K) key;<z>
[] activeFreqs) {<z>
();<z>
;<z>
setActiveFreqs(activeFreqs);<z>
() throws Exception<z>
getApplicationComponent(JavascriptConfigService.class);<z>
();<z>
getLocale());<z>
) {<z>
PageNumberPrint result = new PageNumberPrint(pageNumber);<z>
(fontData);<z>
result.setAlign(align);<z>
;<z>
);<z>
;<z>
_context) {<z>
INodeSubstituteAction>());<z>
SNode conceptToAdd = SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalClassifierType");<z>
);<z>
fromList(defaultActions));<z>
return result;<z>
IOException {<z>
);<z>
int)file.length()];<z>
.read(data);<z>
;<z>
crc32 = new CRC32();<z>
.update(data);<z>
);<z>
[] linkRanges) {<z>
.getShell()<z>
());<z>
length; i++) {<z>
][1],<z>
;<z>
r);<z>
r);<z>
)<z>
null)<z>
false;<z>
null)<z>
;<z>
(newString);<z>
{<z>
findViewById(R.id.edtEmail);<z>
R.id.edtUsername);<z>
.edtPassword);<z>
id.edtConfirmPassword);<z>
.toString();<z>
().toString();<z>
().toString();<z>
().toString();<z>
) {<z>
();<z>
().length() == 0) {<z>
, Toast.LENGTH_SHORT).show();<z>
== 0) {<z>
();<z>
confirmPassword)) {<z>
LENGTH_SHORT).show();<z>
password);<z>
opb){<z>
=(InfoFloor0)i;<z>
8);<z>
info.rate, 16);<z>
write(info.barkmap, 16);<z>
.ampbits, 6);<z>
, 8);<z>
-1, 4);<z>
++)<z>
8);<z>
( SWPAuthority authority,<z>
ArrayList<Node> listOfAuthorityProperties,<z>
,<z>
listOfGraphNames,<z>
,<z>
additionalWarrantStatements<z>
createNewWarrantGraph();<z>
;<z>
if ( listOfGraphNames != null )<z>
.iterator();<z>
();<z>
.hasNext()) {<z>
;<z>
graphNameIterator.next();<z>
instanceof Node )<z>
) next );<z>
next instanceof NamedGraph )<z>
) next;<z>
, warrantGraph.getGraphName()));<z>
null )<z>
calculateDigest( currentGraph, digestMethod );<z>
( currentGraph.getGraphName(),<z>
digest,<z>
, XSDDatatype.XSDbase64Binary ) ) );<z>
, digestMethod ) );<z>
e )<z>
;<z>
false;<z>
, listOfAuthorityProperties);<z>
!= null ) {<z>
Triple> additionalStmtsIterator = additionalWarrantStatements.iterator();<z>
.hasNext() ) {<z>
();<z>
warrantGraph.add(tripleToAdd);<z>
this.addGraph(warrantGraph);<z>
return true;<z>
InputStream inputStream) throws IOException {<z>
{<z>
file);<z>
FileOutputStream(file);<z>
= new byte[BUFFER_SIZE];<z>
= length;<z>
> 0) {<z>
(size, chunk.length);<z>
read(chunk, 0, bytesToRead);<z>
) {<z>
-= bytesRead;<z>
, bytesRead);<z>
);<z>
{<z>
, StringBuffer buffer) {<z>
c = scanner.read();<z>
)<z>
return false;<z>
.getTerminator((char) c);<z>
0)<z>
false;<z>
) {<z>
= scanner.read();<z>
((char) c);<z>
(c == terminator)<z>
return true;<z>
{<z>
))<z>
false;<z>
== '\\') {<z>
read();<z>
ICharacterScanner.EOF)<z>
return false;<z>
);<z>
number) {<z>
);<z>
, offset, number);<z>
) {<z>
("Unable to get pages", dae);<z>
;<z>
boolean containsControl(Control control) {<z>
control == fShell)<z>
return true;<z>
control instanceof Shell)<z>
return false;<z>
getParent();<z>
!= null);<z>
;<z>
public void addFile(<z>
{<z>
new UnsupportedOperationException();<z>
boolean executeCommand(final String args) {<z>
getProp().getPropertyString(<z>
.NORMALIZE_CONFIG_SOURCE_FILE);<z>
(<z>
ScriptProperties.NORMALIZE_CONFIG_TARGET_FILE);<z>
getScript().resolveFilename(sourceID);<z>
(targetID);<z>
LEVEL_DEBUG, "Beginning normalize");<z>
"source file:" + sourceID);<z>
);<z>
markGenerated(targetID);<z>
format = getScript().determineFormat();<z>
= new AnalystNormalizeCSV();<z>
;<z>
().setCurrentQuantTask(norm);<z>
AnalystReportBridge(getAnalyst()));<z>
getScript().expectInputHeaders(sourceID);<z>
, format, getAnalyst());<z>
);<z>
);<z>
getAnalyst().setCurrentQuantTask(null);<z>
.shouldStop();<z>
) {<z>
.createTransitionChain();<z>
setTransition(t);<z>
if (t instanceof TriggeredTransition) {<z>
null;<z>
true;<z>
()) {<z>
{<z>
(first) {<z>
;<z>
);<z>
) {<z>
null) {<z>
));<z>
();<z>
())<z>
);<z>
isRef())<z>
);<z>
)!=null)<z>
;<z>
(first)<z>
));<z>
);<z>
);<z>
add(tc);<z>
throws RepositoryException {<z>
getType() != PropertyType.BINARY) {<z>
getString();<z>
string.length(); i++) {<z>
;<z>
c != '\t') {<z>
true;<z>
return false;<z>
(String[] args) throws IOException {<z>
new Util.Timer(false);<z>
(t, 0);<z>
(t, 1);<z>
t, 2);<z>
(t, 3);<z>
(t, 4);<z>
printBitSkipped(1008);<z>
);<z>
t, 1012);<z>
long b = 10;<z>
; i < 7; i++) {<z>
);<z>
;<z>
;<z>
4);<z>
;<z>
public SocketServerAllClientsFunction() {<z>
min = 1;<z>
max = 1;<z>
"port" } );<z>
) {<z>
== null || target == null) {<z>
;<z>
);<z>
() {<z>
));<z>
getValue());<z>
));<z>
);<z>
;<z>
.setVendorAssetNumber(sVendorAsset.getValue());<z>
.setMaintcontract(sMaintContract.getValue());<z>
));<z>
));<z>
GraphicsExportJPEG jpg) {<z>
;<z>
pairsGUI != null)<z>
exportJPEG);<z>
{<z>
.getContentResolver();<z>
query(CONTENT_URI, projection,<z>
RTAlbum },<z>
);<z>
key) {<z>
md = SHA256.getMessageDigest();<z>
));<z>
localSalt);<z>
[] ret = md.digest();<z>
SHA256.returnMessageDigest(md);<z>
return ret;<z>
)<z>
);<z>
setGlassPane(final Component glass) {<z>
{<z>
);<z>
;<z>
throws Exception {<z>
= new XMLParser(false);<z>
Document();<z>
= parser<z>
StringReader(this.stringSourceMarkup));<z>
= doc.getDocument();<z>
{<z>
) o;<z>
();<z>
.PAGE_FORMAT_IBXML)) {<z>
.equals("xml")) {<z>
= ibXmlRoot.getChild("page");<z>
Element newPageElement = null;<z>
;<z>
)) {<z>
, builderNamespace);<z>
,<z>
;<z>
(newPageElement);<z>
else {<z>
newRootElement = new Element("html", htmlNamespace);<z>
"composition",<z>
;<z>
;<z>
faceletDoc.setRootElement(newRootElement);<z>
newPageElement);<z>
= new XMLOutputter();<z>
.getPrettyFormat());<z>
= out.outputString(faceletDoc);<z>
{<z>
.stringSourceMarkup;<z>
Tidy tidy = new Tidy();<z>
);<z>
;<z>
);<z>
tidy.setCharEncoding(Configuration.UTF8);<z>
= null;<z>
baos = null;<z>
text);<z>
;<z>
.parse(stream, baos);<z>
= baos.toString(CoreConstants.ENCODING_UTF8);<z>
.replaceAll("html xmlns=\"http://www.w3.org/1999/xhtml\"", "html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:ui=\"http://java.sun.com/jsf/facelets\"");<z>
(text);<z>
this.stringSourceMarkup = text;<z>
e) {<z>
();<z>
} finally {<z>
stream.close();<z>
;<z>
{<z>
(Exception e) {<z>
);<z>
{<z>
username = JID.unescapeNode(username);<z>
);<z>
;<z>
userDN = manager.findUserDN(username);<z>
attributes = new String[]{<z>
.getContext();<z>
);<z>
getNameField());<z>
null) {<z>
.hasMoreElements();) {<z>
(String)e.nextElement());<z>
authorized;<z>
Exception e) {<z>
if (ctx != null) {<z>
();<z>
ignored) {<z>
;<z>
BlogsStatsUser blogsStatsUser)<z>
throws SystemException {<z>
= toUnwrappedModel(blogsStatsUser);<z>
session = null;<z>
);<z>
delete(session, blogsStatsUser);<z>
(Exception e) {<z>
);<z>
);<z>
FINDER_CLASS_NAME_LIST);<z>
(BlogsStatsUserModelImpl)blogsStatsUser;<z>
.removeResult(FINDER_PATH_FETCH_BY_G_U,<z>
] {<z>
.valueOf(blogsStatsUserModelImpl.getGroupId()),<z>
())<z>
);<z>
EntityCacheUtil.removeResult(BlogsStatsUserModelImpl.ENTITY_CACHE_ENABLED,<z>
);<z>
return blogsStatsUser;<z>
rtlInputMapKey) {<z>
UIManager.get(inputMapKey);<z>
().isLeftToRight()) {<z>
;<z>
null) {<z>
;<z>
uiInputMap = rtlInputMap;<z>
uiInputMap);<z>
(XMPPConnection connection,<z>
) {<z>
.listener = listener;<z>
connection = connection;<z>
;<z>
);<z>
uses(final Use use) {<z>
uses(use);<z>
(use)) return true;<z>
root.uses(use);<z>
reportSession, Bounds bounds) throws DocumentException {<z>
getMinY();<z>
top);<z>
reportSession, remainingBounds);<z>
editor)<z>
super(editor);<z>
= this.editor.getURL();<z>
new Listener()<z>
Event event)<z>
null || event.time > lastEvent.time)<z>
lastEvent = event;<z>
Image)<z>
,<z>
;<z>
.text;<z>
addOn != null)<z>
(DefaultPreviewConfigurationPage.this,<z>
event.text);<z>
()<z>
void completed(ProgressEvent event)<z>
.getDecorator(browser, locListener);<z>
(ProgressEvent event)<z>
String value) {<z>
"link")) {<z>
;<z>
, listener));<z>
;<z>
() {<z>
)) {<z>
String name = mCursor.getString(NAME_COLUMN);<z>
(NUMBER_COLUMN);<z>
new Intent();<z>
.setClass(this, DeleteFdnContactScreen.class);<z>
, name);<z>
number);<z>
intent);<z>
createFollower(int index, IEObjectConsumer inst) {<z>
index) {<z>
, 0, inst);<z>
;<z>
outLen) {<z>
Inflater decompresser = new Inflater();<z>
);<z>
decompresser.finished();<z>
inflate(out, outPos, outLen);<z>
!= outLen) {<z>
+ " " + outLen);<z>
{<z>
COMPRESSION_ERROR, e);<z>
end();<z>
(Map<String, Object> attributes) {<z>
.get("kaleoNotificationId");<z>
null) {<z>
kaleoNotificationId);<z>
(Long)attributes.get("groupId");<z>
!= null) {<z>
(groupId);<z>
attributes.get("companyId");<z>
!= null) {<z>
;<z>
);<z>
!= null) {<z>
setUserId(userId);<z>
String)attributes.get("userName");<z>
(userName != null) {<z>
setUserName(userName);<z>
.get("createDate");<z>
!= null) {<z>
(createDate);<z>
Date)attributes.get("modifiedDate");<z>
{<z>
;<z>
.get("kaleoClassName");<z>
{<z>
;<z>
.get("kaleoClassPK");<z>
kaleoClassPK != null) {<z>
setKaleoClassPK(kaleoClassPK);<z>
get("kaleoDefinitionId");<z>
{<z>
(kaleoDefinitionId);<z>
.get("kaleoNodeName");<z>
{<z>
kaleoNodeName);<z>
(String)attributes.get("name");<z>
null) {<z>
(name);<z>
(String)attributes.get("description");<z>
) {<z>
(description);<z>
("executionType");<z>
) {<z>
);<z>
"template");<z>
!= null) {<z>
);<z>
.get("templateLanguage");<z>
if (templateLanguage != null) {<z>
);<z>
String)attributes.get("notificationTypes");<z>
if (notificationTypes != null) {<z>
setNotificationTypes(notificationTypes);<z>
) throws DatabaseException {<z>
PrintStream)dbIdToOutputStream.get(dbId);<z>
ret != null) {<z>
ret;<z>
);<z>
name == null) {<z>
"db" + dbId;<z>
);<z>
(new FileOutputStream(file),false);<z>
,ret);<z>
);<z>
if (dupSort == null) {<z>
dupSort=Boolean.valueOf(false);<z>
);<z>
;<z>
( IOException IOE) {<z>
(IOE);<z>
{<z>
ArrayList<BendingType>();<z>
: BendingType.values()) {<z>
player, type)) {<z>
);<z>
return list;<z>
(Object element) {<z>
element instanceof ISourceModelElement) {<z>
(ISourceModelElement) element)<z>
();<z>
if (resource instanceof IFile) {<z>
;<z>
return null;<z>
TransferProgress getProgressInternal(final String transferId) throws TransferException<z>
(transferId);<z>
progress = new TransferProgress();<z>
());<z>
statusEntity.getEndPos());<z>
));<z>
Throwable) statusEntity.getError());<z>
return progress;<z>
private void addItem(ValidationReportItem newItem) {<z>
(lastItem == null) {<z>
;<z>
lastItem = newItem;<z>
(newItem.getMessage())) {<z>
increaseRepeat();<z>
else {<z>
);<z>
newItem;<z>
void setDeadProperty(DavProperty property)<z>
throws DavException {<z>
(log.isDebugEnabled())<z>
property.getName() + " on " +<z>
property.getValue());<z>
)<z>
() + " requires a value");<z>
());<z>
(Element) property.getValue();<z>
.getAttribute(qname);<z>
(attr!=null)<z>
setValue(value);<z>
createXMLAttribute(qname, value));<z>
DataSizeException e) {<z>
e.getMessage());<z>
{<z>
) {<z>
out);<z>
insert(tOut);<z>
= ((ExampleTuple) in).synthetic;<z>
;<z>
return tOut;<z>
;<z>
fromString(final String s)<z>
;<z>
return fromURI(new URI(s));<z>
(URISyntaxException e) {<z>
= Domain.REF_RESOLVING.newMessage()<z>
s).setMessage("invalid URI");<z>
), e);<z>
public void uninstallDockableDragSources(DockableDragSource[] sources){<z>
null){<z>
++) {<z>
i]);<z>
IOException {<z>
indexInput = cloneData();<z>
;<z>
{<z>
;<z>
] attenuation) {<z>
)<z>
!this.getCapability(ALLOW_DISTANCE_GAIN_WRITE))<z>
J3dI18N.getString("ConeSound0"));<z>
this.retained).setBackDistanceGain(attenuation);<z>
) {<z>
list = configurations.get(applicationName);<z>
.isEmpty()) {<z>
null;<z>
list.size()]);<z>
public String toString() {<z>
app;<z>
;<z>
)<z>
mUniversalPinState)<z>
(mNumApplications)<z>
append(",gsm_id=").append(mGsmUmtsSubscriptionAppIndex);<z>
mGsmUmtsSubscriptionAppIndex >=0<z>
<CARD_MAX_APPS) {<z>
mGsmUmtsSubscriptionAppIndex);<z>
(app == null ? "null" : app);<z>
;<z>
(mCdmaSubscriptionAppIndex >=0<z>
{<z>
app = getApplication(mCdmaSubscriptionAppIndex);<z>
"null" : app);<z>
(mImsSubscriptionAppIndex);<z>
append("}");<z>
;<z>
) throws ObjectStreamException {<z>
== null) {<z>
= run;<z>
;<z>
[] playlistItems, final int index) {<z>
{<z>
void run() {<z>
, index);<z>
playlist.save();<z>
safeInvokeLater(new Runnable() {<z>
() {<z>
();<z>
;<z>
}, "asyncAddToPlaylist");<z>
true);<z>
t.start();<z>
, View convertView, ViewGroup parent) {<z>
;<z>
));<z>
.setText(label);<z>
return button;<z>
) {<z>
(listening) {<z>
IllegalStateException("Please set handler before server is listening");<z>
.wsHandler = wsHandler;<z>
return this;<z>
addSources(SdkModificator sdkModificator, final Sdk javaSdk) {<z>
{<z>
OrderRootType.SOURCES, javaSdk, sdkModificator)){<z>
) {<z>
.getInstance().getAllJdks();<z>
) {<z>
getSdkType() instanceof JavaSdk) {<z>
jdk, sdkModificator);<z>
getParentFile();<z>
final String srcZip = "src.zip";<z>
srcZip);<z>
)){<z>
= JarFileSystem.getInstance();<z>
JarFileSystem.JAR_SEPARATOR;<z>
;<z>
findFileByPath(path), OrderRootType.SOURCES);<z>
, IConfigurationElement element)<z>
> list = contentTypeToContribMap.get(contentType);<z>
== null)<z>
);<z>
);<z>
);<z>
(element, contentType);<z>
session) {<z>
= getUser(session);<z>
remove(session);<z>
session);<z>
.remove(session);<z>
session);<z>
) {<z>
);<z>
.getRemoteAddress() + " ("<z>
;<z>
user);<z>
broadcastLobby(new UserDisconnectedMessage(user));<z>
;<z>
String split, String wrapper) {<z>
(collection.length == 0) return null;<z>
new StringBuffer();<z>
for (Object obj : collection) {<z>
wrapper + obj + wrapper + split);<z>
.length() - 1);<z>
return stringBuffer.toString();<z>
) {<z>
;<z>
if (statModel == null) {<z>
;<z>
;<z>
return statModel;<z>
) {<z>
Property) caseETypedElement(eObject);<z>
));<z>
oppositeProperty = null;<z>
getEOpposite();<z>
null) {<z>
Property.class, eOpposite);<z>
= eObject.getEAnnotation(EMOFExtendedMetaData.EMOF_PACKAGE_NS_URI_2_0);<z>
if (oppositeRole != null) {<z>
= oppositeRole.getDetails();<z>
oppositeName = details.get(PROPERTY_OPPOSITE_ROLE_NAME_KEY);<z>
!= null) {<z>
.createProperty();<z>
oppositeName);<z>
;<z>
getType();<z>
PivotUtil.getOwningType(pivotElement);<z>
(localType);<z>
uniqueValue = details.get(PROPERTY_OPPOSITE_ROLE_UNIQUE_KEY);<z>
;<z>
String lowerValue = details.get(PROPERTY_OPPOSITE_ROLE_LOWER_KEY);<z>
details.get(PROPERTY_OPPOSITE_ROLE_UPPER_KEY);<z>
false;<z>
uniqueValue) : true;<z>
= ValuesUtil.ONE_VALUE;<z>
one;<z>
isInvalid()) {<z>
("Invalid " + PROPERTY_OPPOSITE_ROLE_LOWER_KEY + " " + lower);<z>
= one;<z>
(upperValue) : one;<z>
if (upper.isInvalid()) {<z>
+ upper);<z>
upper = one;<z>
one) {<z>
lower, upper));<z>
oppositeProperty.setIsRequired(true);<z>
;<z>
one);<z>
.getOwnedAttribute().add(oppositeProperty);<z>
oppositeProperty.setOpposite(pivotElement);<z>
);<z>
!= null) {<z>
String> details = oppositeRole.getDetails();<z>
EMOFExtendedMetaData.EMOF_COMMENT_BODY);<z>
oppositeName != null) {<z>
.createProperty();<z>
oppositeName);<z>
);<z>
.getType();<z>
getOwningType(pivotElement);<z>
setType(localType);<z>
oppositeProperty);<z>
pivotElement);<z>
null) {<z>
);<z>
pivotElement;<z>
{<z>
mCursor == null) return false;<z>
intent;<z>
(item.getItemId()) {<z>
PLAY_SELECTION:<z>
position = mSelectedPosition;<z>
{<z>
);<z>
true;<z>
mCursor, position);<z>
;<z>
case DELETE_ITEMS:<z>
);<z>
bundle = new Bundle();<z>
bundle.putString(<z>
(Audio.Media.EXTERNAL_CONTENT_URI,<z>
());<z>
(bundle);<z>
);<z>
;<z>
SEARCH:<z>
doSearch();<z>
;<z>
return super.onContextItemSelected(item);<z>
boolean engineContainsAlias(String alias) {<z>
;<z>
String subject = alias;<z>
KEY_ALIAS_PREFIX)){<z>
(KEY_ALIAS_PREFIX.length());<z>
DnieSession session = getDnieSession4SubjectDN(subject);<z>
(session != null){<z>
;<z>
false;<z>
public Estado getBean() {<z>
this.bean == null) {<z>
;<z>
this.id.getValue() != null)<z>
(this.id.getValue());<z>
bean;<z>
request, Response response)<z>
IOException, MicroKernelException {<z>
.getHeadRevision();<z>
("from_revision_id", headRevision);<z>
);<z>
);<z>
"depth", 1);<z>
setContentType("text/plain");<z>
toRevisionId, path, depth);<z>
request.getUserAgent() != null) {<z>
json);<z>
.write(json);<z>
) {<z>
pb.VAdminProto.RebalanceStateChangeResponse) {<z>
VAdminProto.RebalanceStateChangeResponse)other);<z>
else {<z>
super.mergeFrom(other);<z>
this;<z>
int x, int y, int ch) {<z>
.getHeight()];<z>
;<z>
+ x] >> 24) & 0xff;<z>
0xff;<z>
] >> 8) & 0xff;<z>
.getWidth() + x] & 0xff;<z>
ch == 0) {<z>
return qa;<z>
if (ch == 1) {<z>
qr;<z>
== 2) {<z>
qg;<z>
{<z>
return qb;<z>
0;<z>
, int ay) {<z>
super.contains(ax, ay)) {<z>
this.anchor.x = ax;<z>
= ay;<z>
;<z>
;<z>
= -1;<z>
false;<z>
) {<z>
ret = new PhaseOptwjap_uft();<z>
phaseopts.add(ret);<z>
;<z>
{<z>
"topic");<z>
.equals(topic)) {<z>
println("Available commands (\'help <command>\' for more):");<z>
decl : CommandManager.get()<z>
) {<z>
println("\t" + decl.ID + "\t"<z>
.description);<z>
} else {<z>
()<z>
(topic);<z>
== null)<z>
throw new ThinklabValidationException("command " + topic<z>
+ " undefined");<z>
)<z>
.getOutputStream());<z>
;<z>
JCRTestContext context) throws Exception<z>
if (runIterations <= 0)<z>
Exception("japex.runIterations should be a positive number, but " + runIterations);<z>
i++)<z>
getWorkspace().getNodeTypeManager();<z>
;<z>
= new ArrayList<String>();<z>
;<z>
setName(context.generateUniqueName("exo:deleteExistedNodeDefinition"));<z>
setPrimaryItemName("");<z>
(superType);<z>
>();<z>
), false));<z>
;<z>
registerNodeType(nodeTypeValue, ExtendedNodeTypeManager.FAIL_IF_EXISTS);<z>
);<z>
String asJson() {<z>
;<z>
)) {<z>
;<z>
, view.map);<z>
!= null)<z>
.put("reduce", view.reduce);<z>
());<z>
));<z>
;<z>
));<z>
View v : views) {<z>
);<z>
put("map", v.map);<z>
.reduce);<z>
v.name, viewNode);<z>
);<z>
(Review review) {<z>
(reviews == null) {<z>
new Reviews();<z>
);<z>
void startReplyBody()<z>
= read();<z>
'f')<z>
();<z>
_peek = tag;<z>
GL gl, GLU glu) {<z>
(gl, glu);<z>
.getNodeRenderer().reinitRenderer();<z>
();<z>
cameraMoved.set(true);<z>
[] toAdd) {<z>
toAdd);<z>
toAdd.length; i++) {<z>
[i]);<z>
, long length)<z>
allocate();<z>
);<z>
int readLength = 0;<z>
length > 0) {<z>
int sublen = buffer.length;<z>
length < sublen)<z>
) length;<z>
buffer, 0, sublen);<z>
if (sublen > 0) {<z>
sublen);<z>
length -= sublen;<z>
;<z>
0 ? readLength : -1;<z>
;<z>
) {<z>
throw new QuercusModuleException(e);<z>
{<z>
tBuf);<z>
cacheSim) {<z>
javaTranslator = mt;<z>
tBuilder = tBuilder;<z>
;<z>
{<z>
();<z>
hasUnmergedPaths();<z>
)<z>
UnmergedPathsException();<z>
(repo);<z>
;<z>
(true);<z>
;<z>
+ "^{tree}");<z>
null)<z>
new NoHeadException(<z>
).cannotRebaseWithoutCurrentHead);<z>
.addTree(id);<z>
.setFilter(TreeFilter.ANY_DIFF);<z>
treeWalk.next();<z>
.release();<z>
if (needsCommit) {<z>
repo).commit();<z>
(rebaseDir, MESSAGE));<z>
setAuthor(parseAuthor());<z>
.call();<z>
;<z>
configuration) {<z>
Closeable rin;<z>
hdfsPath);<z>
hdfsInfo.getConf());<z>
;<z>
IOException ex) {<z>
;<z>
(ControlledJob controlledJob,<z>
<ControlledJob> controlledJobList,<z>
) {<z>
;<z>
for (ControlledJob k : controlledJobList) {<z>
!= null<z>
).contains(controlledJob)<z>
{<z>
true;<z>
;<z>
Object object, final ComparisonMode mode) {<z>
== this) {<z>
true;<z>
, mode)) {<z>
;<z>
that.localFrame)&&<z>
.referenceFrame);<z>
;<z>
(Date date) {<z>
)<z>
);<z>
return image.isCreatedAfter(date);<z>
{<z>
= 0;<z>
)) {<z>
.get(process.getPID());<z>
== null) {<z>
process.getPID());<z>
> 0) {<z>
size;<z>
return bpelFootprint;<z>
Filter[] filters, MockServletConfig servletConfig,<z>
webAppContext, RequestBuilder defaultRequestBuilder,<z>
globalResultHandlers) {<z>
;<z>
;<z>
(servletConfig);<z>
ex) {<z>
new MockMvcBuildException("Failed to initialize TestDispatcherServlet", ex);<z>
filterChain = new MockFilterChain(dispatcherServlet, filters);<z>
);<z>
defaultRequestBuilder);<z>
);<z>
;<z>
mockMvc;<z>
int styles) {<z>
(), isOverviewRulerVisible(), styles) {<z>
.viewers.ISelection selection, boolean reveal) {<z>
reveal)) {<z>
.setSelection(selection, reveal);<z>
viewer);<z>
return viewer;<z>
void setMetadataCollected(boolean collect) {<z>
);<z>
setMetadataCollected(collect);<z>
i<readers.length; i++) {<z>
collect);<z>
void setPaVehSubtypeCode(final String value) {<z>
if (checkReadOnly()) {<z>
String previousValue = getPaVehSubtypeCode();<z>
)) {<z>
if (null == previous) {<z>
);<z>
{<z>
getPrevious().setPaVehSubtypeCode(previousValue);<z>
= value;<z>
"paVehSubtypeCode", previousValue,<z>
;<z>
(long internalId, String name) {<z>
(internalId, name);<z>
= null;<z>
);<z>
{<z>
packageDirectory = new File(<z>
this.generatedDirectory.getAbsolutePath()<z>
File.separator<z>
replace('.',<z>
File.separatorChar));<z>
packageDirectory.exists()) {<z>
final boolean directoryCreated = packageDirectory.mkdirs();<z>
directoryCreated) {<z>
(<z>
);<z>
itemstack) {<z>
this.b == null) {<z>
.c(itemstack);<z>
else {<z>
;<z>
c(itemstack);<z>
private void initDeviceView() {<z>
Composite( parent, SWT.NONE);<z>
;<z>
;<z>
4;<z>
= 4;<z>
4;<z>
4;<z>
.setLayout(layout);<z>
GridData grid_data;<z>
());<z>
SWT.NONE);<z>
= new GridLayout();<z>
.numColumns = 3;<z>
marginLeft = 0;<z>
);<z>
GridData(GridData.FILL_HORIZONTAL);<z>
1;<z>
.setLayoutData(grid_data);<z>
new Label( control, SWT.NONE );<z>
;<z>
SWT.PUSH );<z>
show_folder_button, "MyTorrentsView.menu.explore");<z>
.addSelectionListener(<z>
()<z>
)<z>
.open( device.getWorkingDirectory());<z>
});<z>
.NONE );<z>
( device.canFilterFilesView()){<z>
CHECK );<z>
"devices.xcode.only.show");<z>
.getFilterFilesView());<z>
(<z>
SelectionAdapter()<z>
SelectionEvent e )<z>
( show_xcode_button.getSelection());<z>
;<z>
SWT.PUSH);<z>
"Forget Default Profile Choice");<z>
{<z>
e) {<z>
(null);<z>
.setEnabled(false);<z>
{<z>
});<z>
) != null);<z>
TranscodeException e1) {<z>
setEnabled(false);<z>
());<z>
).layout();<z>
{<z>
SelectionInformation.class)) {<z>
processSelectionInformation(selInfo);<z>
Rectangle newLocation) {<z>
sideOfFigure && side == PositionConstants.EAST)) {<z>
getType(TimeObservationLabelEditPart.VISUAL_ID));<z>
labelChild instanceof TimeObservationLabelEditPart) {<z>
TimeObservationLabelEditPart label = (TimeObservationLabelEditPart)labelChild;<z>
width;<z>
) {<z>
()).getLayoutConstraint();<z>
instanceof Location) {<z>
Location)constraint).getX();<z>
= -xLocation - labelWidth;<z>
TransactionalEditingDomain dom = getEditingDomain();<z>
);<z>
(TransactionalCommandStack)dom.getCommandStack();<z>
();<z>
, true);<z>
OPTION_NO_UNDO, true);<z>
put(Transaction.OPTION_UNPROTECTED, true);<z>
setCmd, options);<z>
= label.getBorderItemLocator();<z>
.getConstraint();<z>
.x = mirroredLocation;<z>
label.getFigure());<z>
e) {<z>
);<z>
catch (RollbackException e) {<z>
e);<z>
sideOfFigure = side;<z>
] stripeColors, Dimension[] stripeWidhs) {<z>
{<z>
IllegalArgumentException("vertical-stripes background: no stripe=colors defined.");<z>
== null) {<z>
"vertical-stripes background: no stripe=widths defined.");<z>
length != stripeWidhs.length) {<z>
IllegalArgumentException("vertical-stripes background: stripe-colors and stripe=widths have different number of entries.");<z>
= stripeColors;<z>
.stripeWidhs = stripeWidhs;<z>
(<z>
)<z>
.kernel.exception.SystemException {<z>
)<z>
(layoutSetBranchId, layoutBranchId, plid);<z>
void addSeparator() {<z>
View sep = new View(mContext);<z>
.status_bar_hr);<z>
.getResources().getDisplayMetrics();<z>
= 2f;<z>
.density * dp;<z>
* dp + 0.5f);<z>
LayoutParams(LayoutParams.MATCH_PARENT,<z>
);<z>
(params);<z>
);<z>
.addView(sep);<z>
public static NeoGraphLabelProvider getInstance()<z>
null )<z>
NeoGraphLabelProvider();<z>
return labelProvider;<z>
) {<z>
null) {<z>
, connector);<z>
taskData);<z>
;<z>
(localuser) {<z>
(taskData);<z>
;<z>
(taskData);<z>
list, IDiagramModelContainer parent, IRelationship relationship) {<z>
IDiagramModelObject object : parent.getChildren()) {<z>
.getSourceConnections()) {<z>
(connection instanceof IDiagramModelArchimateConnection &&<z>
)connection).getRelationship() == relationship<z>
&& !list.contains(object)) {<z>
connection);<z>
object instanceof IDiagramModelContainer) {<z>
);<z>
() {<z>
yyVals, int yyTop) {<z>
;<z>
0+yyTop]));<z>
;<z>
{<z>
null;<z>
;<z>
;<z>
} catch (UnknownHostException e) {<z>
, e);<z>
;<z>
()<z>
.length + 1];<z>
runtimeClassesDir;<z>
1, runtimeLibs.length);<z>
return merged;<z>
throws IOException<z>
= "java.library.path";<z>
getProperty(propKey, "");<z>
quote(File.pathSeparator));<z>
String>();<z>
).getCanonicalPath());<z>
;<z>
String newProp;<z>
if (prepend)<z>
+ originalProp;<z>
getPath();<z>
propKey, newProp);<z>
Object> params) {<z>
("exportRhoToaRayleigh", exportRhoToaRayleigh);<z>
.put("exportRhoToaAerosol", exportRhoToaAerosol);<z>
;<z>
.put("exportAeAerosol", exportAeAerosol);<z>
exportAlphaAot);<z>
{<z>
) {<z>
case 0:<z>
x;<z>
:<z>
y;<z>
:<z>
z;<z>
3:<z>
w;<z>
IllegalArgumentException( "Invalid index" );<z>
final IProgressMonitor monitor )<z>
println ( "Refreshing container: " + this.expression );<z>
RefreshJob j = createRefreshJob ( isUser );<z>
if ( monitor != null )<z>
j.run ( monitor );<z>
);<z>
.OK_STATUS;<z>
, LayoutInflater l) {<z>
mContext = c;<z>
;<z>
= l;<z>
void reachedGoal(){<z>
"Good job", MTColor.LIME);<z>
);<z>
this.myHHP);<z>
.addChild(myFPG);<z>
.addChild(p);<z>
public SemanticSpaceMatrix(SemanticSpace sspace) {<z>
this.sspace = sspace;<z>
String>();<z>
columns = sspace.getVectorLength();<z>
)<z>
rowToWord.size(), word);<z>
public String toString()<z>
outerClass<z>
+name+",flags="+accessFlags+"]";<z>
() {<z>
BasicEList<NamedElement>(getMembersGen());<z>
));<z>
;<z>
HttpServletResponse res, String path) throws ToolException, IOException<z>
basicAuth.doAuth(req,res) ) {<z>
SessionManager.getCurrentSession();<z>
!= null)<z>
returnUrl(req, path));<z>
Tool.HELPER_DONE_URL) == null)<z>
.warn("doLogin - proceeding with null HELPER_DONE_URL");<z>
= ActiveToolManager.getActiveTool("sakai.login");<z>
+ req.getServletPath() + "/login";<z>
;<z>
public int hashCode(Object x) {<z>
)<z>
();<z>
0;<z>
, int featureID, NotificationChain msgs) {<z>
featureID) {<z>
:<z>
msgs);<z>
otherEnd, featureID, msgs);<z>
DatastoreContainerObject container,<z>
)<z>
mmd, container, clr);<z>
prepareDatastoreMapping(clr);<z>
) {<z>
sumur = 0, sumui = 0;<z>
i < x.length; i++) {<z>
f * i);<z>
* f * i);<z>
) * sinf;<z>
].getImag() * sinf;<z>
* sumur + sumui * sumui;<z>
public boolean downloadFile(String fileName) {<z>
Client client = Client.create();<z>
)<z>
)<z>
"download");<z>
response = webResource.accept(MediaType.MULTIPART_FORM_DATA_TYPE)<z>
ClientResponse.class);<z>
() != 200) {<z>
"Failed : HTTP error code : "<z>
);<z>
getEntity(File.class);<z>
.println("Output from Server .... \n");<z>
out.println(output);<z>
{<z>
e.printStackTrace();<z>
{<z>
);<z>
;<z>
Stats> workForFluxStatistic(){<z>
();<z>
null;<z>
).getCurrentSession();<z>
transaction = session.beginTransaction();<z>
;<z>
;<z>
hql);<z>
(1);<z>
;<z>
;<z>
);<z>
.setString(0, "week");<z>
session.createQuery(hql);<z>
;<z>
.setString(0, "month");<z>
(hql2);<z>
0, "total");<z>
Stats>)query_hour.list();<z>
)query_week.list();<z>
;<z>
Stats>)query_total.list();<z>
);<z>
0):null);<z>
get(0):null);<z>
:null);<z>
: statsList_total){<z>
);<z>
return map;<z>
{<z>
();<z>
{<z>
;<z>
;<z>
) {<z>
matchers = new Matcher[elements.length];<z>
i < matchers.length; i++) {<z>
elements[i]);<z>
return matchers;<z>
void createItem() {<z>
(ZLComboOptionEntry)myOption;<z>
= option.getValues();<z>
option.initialValue();<z>
int index = 0;<z>
i) {<z>
)) {<z>
;<z>
());<z>
(index);<z>
(option.isEditable());<z>
;<z>
{<z>
;<z>
null || "".equals(myName)) {<z>
= null;<z>
);<z>
{<z>
.getPreferredSize().height));<z>
= new JPanel();<z>
, BoxLayout.LINE_AXIS));<z>
;<z>
(myComboBox);<z>
);<z>
());<z>
);<z>
, 0));<z>
myPanel.add(panel2);<z>
myPanel.add(panel1);<z>
myTab.insertWidget(myPanel);<z>
getRequestId() {<z>
!=null) {<z>
myTransaction.getRequestId();<z>
;<z>
) {<z>
;<z>
"Compiles the %s.", sourceSet.getJava()));<z>
;<z>
(sourceSet.getJava());<z>
<Object>() {<z>
Exception {<z>
getCompileClasspath();<z>
});<z>
() {<z>
() throws Exception {<z>
();<z>
);<z>
public String stripExtension(String fileName) {<z>
) {<z>
return null;<z>
= getExtension(fileName);<z>
ext.length() > 0) {<z>
) - 1);<z>
fileName;<z>
public final void ruleXFunctionTypeRef() throws RecognitionException {<z>
keepStackSize();<z>
) {<z>
);<z>
);<z>
();<z>
state._fsp--;<z>
if (state.failed) return ;<z>
( state.backtracking==0 ) {<z>
);<z>
re) {<z>
;<z>
recover(input,re);<z>
);<z>
boolean equals(Object obj)<z>
return this == obj;<z>
ASTNode newNode, ASTNode relativeNode, ListRewrite listRewrite) {<z>
listRewrite.getOriginalList();<z>
indexOf(relativeNode);<z>
) == IReorgDestination.LOCATION_BEFORE) {<z>
);<z>
list.size()) {<z>
;<z>
} else {<z>
newNode, null);<z>
) {<z>
String cmd = e.getActionCommand();<z>
if(cmd.equals("a")) {<z>
.changeMode("month");<z>
RecognitionException {<z>
keepStackSize();<z>
if ( state.backtracking==0 ) {<z>
;<z>
(FOLLOW_ruleXAnnotationElementValue_in_rule__XAnnotationValueArray__ValuesAssignment_247684);<z>
);<z>
._fsp--;<z>
state.failed) return ;<z>
.backtracking==0 ) {<z>
);<z>
{<z>
reportError(re);<z>
recover(input,re);<z>
;<z>
{<z>
getForegroundColor();<z>
(color, "red");<z>
("Overlay Brush Options");<z>
, width);<z>
transparency);<z>
, Colors.colors, colorName);<z>
setInsets(10, 0, 0);<z>
"CMD":"CTRL";<z>
addMessage("SHIFT for horizontal or vertical lines\n"+<z>
ctrlString+"-SHIFT-drag to change brush width\n"+<z>
+<z>
);<z>
();<z>
.addHelp("");<z>
("Undo");<z>
("Close");<z>
.addDialogListener(this);<z>
);<z>
IJ.log("Options: false");<z>
;<z>
(Bundle savedInstanceState) {<z>
);<z>
new IntentFilter(Foursquared.INTENT_ACTION_LOGGED_OUT));<z>
();<z>
StateHolder) {<z>
retained;<z>
;<z>
} else {<z>
{<z>
new StateHolder(<z>
.getStringExtra(EXTRA_USER_ID),<z>
getStringExtra(EXTRA_USER_NAME));<z>
} else {<z>
;<z>
();<z>
this);<z>
;<z>
Object object) {<z>
new LinkedHashSet<Object>();<z>
namespaces = getNamespaces();<z>
namespaces) {<z>
iNamespace));<z>
CModelException exc) {<z>
);<z>
boolean ok()<z>
return validated_ != null &&<z>
;<z>
createOutput(String name) throws IOException {<z>
indexOutput;<z>
(name)) {<z>
new FlushOnCloseTerracottaIndexOutput(this, name);<z>
else {<z>
);<z>
indexOutput;<z>
setTaggingService(ITaggingService taggingService)<z>
.trace("setTaggingService");<z>
= taggingService;<z>
void doMakeContents() {<z>
(new BorderLayout());<z>
, 5, 0, 0);<z>
COMBOBOX_UI, false,<z>
false);<z>
] {<z>
(),<z>
"Base (-90 90): "),<z>
JTextField(),<z>
GuiUtils.rLabel("Major Increment: "),<z>
= new JTextField(),<z>
),<z>
new SpinnerNumberModel(1, 1, 10,<z>
)),<z>
JCheckBox("", true)<z>
WT_NY, GuiUtils.WT_N);<z>
doLayout(new Component[] {<z>
(),<z>
),<z>
(),<z>
rLabel("Major Increment: "),<z>
(),<z>
"Minor Division: "),<z>
1, 10,<z>
)),<z>
, true),<z>
, GuiUtils.WT_NY, GuiUtils.WT_N);<z>
setBorder(BorderFactory.createTitledBorder("Latitude"));<z>
("Longitude"));<z>
=<z>
GuiUtils.doLayout(new Component[] {<z>
()) }, 1,<z>
WT_N);<z>
.createTitledBorder("Font"));<z>
[] {<z>
rLabel("Format: "),<z>
new JComboBox(<z>
),<z>
.rLabel(" 0-360 Longitude"),<z>
) }, 4,<z>
.WT_N);<z>
(true);<z>
;<z>
(new Component[] { latPanel,<z>
GuiUtils.WT_N);<z>
[] { latLonPanel,<z>
;<z>
{ GuiUtils.left(pnl),<z>
) });<z>
, 5));<z>
!= null) {<z>
();<z>
) {<z>
;<z>
obj) {<z>
this == obj) {<z>
;<z>
) {<z>
false;<z>
()) {<z>
return false;<z>
Places other = (Places) obj;<z>
(key == null) {<z>
!= null) {<z>
;<z>
{<z>
;<z>
true;<z>
() throws RecognitionException {<z>
EObject current = null;<z>
null;<z>
.backtracking==0 ) {<z>
newCompositeNode(grammarAccess.getFieldRule());<z>
;<z>
ruleField();<z>
;<z>
.failed) return current;<z>
{<z>
=iv_ruleField;<z>
;<z>
) {<z>
re);<z>
appendSkippedTokens();<z>
;<z>
Iterable<SModelDescriptor> models) {<z>
new ArrayList<String>();<z>
() {<z>
public void run() {<z>
for (SModelDescriptor sm : models) {<z>
.isUserModel(sm)) continue;<z>
.isGeneratorModel(sm)) continue;<z>
sm.getModule());<z>
null)) {<z>
> errorReporters = null;<z>
root, operationContext);<z>
} catch (IllegalStateException e) {<z>
));<z>
: errorReporters) {<z>
equals(MessageStatus.ERROR)) {<z>
)) continue;<z>
= reporter.getSNode();<z>
node)) continue;<z>
++;<z>
" node: " + node);<z>
.WARNING)) {<z>
myWarnings++;<z>
});<z>
;<z>
Iterable<T> events)<z>
Preconditions.checkNotNull(events, "event is null");<z>
) {<z>
.checkNotNull(event, "event is null");<z>
);<z>
EOQualifier qualifier) {<z>
, entity, qualifier);<z>
) {<z>
;<z>
else {<z>
entity, qualifier);<z>
) throws StandardException {<z>
instanceof StandardException) ?<z>
) :<z>
;<z>
statementContexts[0] != null)<z>
statementContexts[0].clearInUse();<z>
(severity >= ExceptionSeverity.SESSION_SEVERITY)<z>
0].popMe();<z>
[1] != null)<z>
1].clearInUse();<z>
SESSION_SEVERITY)<z>
{<z>
acts.size())<z>
;<z>
);<z>
a.close();<z>
();<z>
this);<z>
severity >= ExceptionSeverity.TRANSACTION_SEVERITY)<z>
internalRollback();<z>
) {<z>
String oldVersion = version;<z>
= versionESet;<z>
;<z>
versionESet = false;<z>
(eNotificationRequired())<z>
VERSION_EDEFAULT, oldVersionESet));<z>
{<z>
new Selector();<z>
setParent(ruleset);<z>
t = la();<z>
{<z>
.ASTERISK:<z>
Token.IDENT:<z>
Token.VERTICAL_BAR:<z>
);<z>
));<z>
pair.getName());<z>
while (true) {<z>
();<z>
{<z>
.HASH:<z>
t = next();<z>
);<z>
:<z>
selector);<z>
LBRACKET:<z>
);<z>
COLON:<z>
selector);<z>
LOOP;<z>
found = false;<z>
) {<z>
;<z>
) {<z>
:<z>
;<z>
getTokenValue(t, true));<z>
found = true;<z>
:<z>
);<z>
found = true;<z>
.LBRACKET:<z>
attrib(selector);<z>
true;<z>
case Token.COLON:<z>
;<z>
true;<z>
) {<z>
, new Token[] { Token.TK_HASH,<z>
TK_COLON },<z>
);<z>
LOOP;<z>
selector;<z>
protected void addTags( PAG pag ) {<z>
unknown = new StringTag( "Untagged Spark node" );<z>
();<z>
; cIt.hasNext(); ) {<z>
(SootClass) cIt.next();<z>
; mIt.hasNext(); ) {<z>
next();<z>
() ) continue;<z>
hasActiveBody() ) continue;<z>
sIt.hasNext(); ) {<z>
= (Stmt) sIt.next();<z>
DefinitionStmt ) {<z>
);<z>
VarNode v = null;<z>
if( lhs instanceof Local ) {<z>
lhs );<z>
if( lhs instanceof FieldRef ) {<z>
).getField() );<z>
{<z>
.getP2Set();<z>
p2set.forall( new P2SetVisitor() {<z>
{<z>
nodeToTag, unknown );<z>
);<z>
(v);<z>
Node element : simpleSources) {<z>
, element, nodeToTag, unknown );<z>
= pag.allocInvLookup(v);<z>
element : simpleSources) {<z>
, element, nodeToTag, unknown );<z>
loadInvLookup(v);<z>
element : simpleSources) {<z>
, element, nodeToTag, unknown );<z>
request )<z>
)<z>
TRACING_MEDIATOR_NOTIFY )<z>
"ReportMediator >> Notify a "<z>
request.getType( )<z>
.getSource( ) );<z>
;<z>
request ) )<z>
.copyFrom( convertRequestToState( request ) );<z>
size = listeners.size( );<z>
0; i < size; i++ )<z>
IColleague) listeners.get( i );<z>
request );<z>
( );<z>
= 0; i < size; i++ )<z>
i );<z>
performRequest( request );<z>
;<z>
{<z>
;<z>
(!fileParams.isEmpty()) {<z>
multipartEntity = new SimpleMultipartEntity();<z>
: urlParams.entrySet()) {<z>
;<z>
entrySet()) {<z>
FileWrapper file = entry.getValue();<z>
(file.inputStream != null) {<z>
null) {<z>
file.contentType);<z>
else {<z>
(), file.inputStream);<z>
entity = multipartEntity;<z>
else {<z>
ENCODING);<z>
UnsupportedEncodingException e) {<z>
;<z>
;<z>
[] hmacInHexa)<z>
;<z>
char v;<z>
returnval = new StringBuffer("");<z>
hmacInHexa.length; i++)<z>
] >> 4);<z>
)<z>
);<z>
;<z>
hmacInHexa[i++] & 0x0f);<z>
> 9)<z>
));<z>
;<z>
));<z>
int getBestMode()<z>
= 0, bestMode = m640x480p60_4_3;<z>
(int mode : mHDMIModes) {<z>
);<z>
(order > bestOrder) {<z>
bestOrder = order;<z>
;<z>
;<z>
)<z>
)<z>
count;<z>
( KoLConstants.closet ) > 0 )<z>
;<z>
KoLConstants.inventory );<z>
;<z>
, Collection<E> src,<z>
{<z>
.iterator();<z>
hasNext()) {<z>
()));<z>
;<z>
List<IJstType> getVjoJst(){<z>
== null){<z>
return Collections.emptyList();<z>
getJstSerializer();<z>
serializer == null){<z>
JstTypeSerializer.getInstance();<z>
;<z>
fio);<z>
deserialize;<z>
) {<z>
);<z>
;<z>
IOException {<z>
;<z>
file.seek(offset);<z>
[SCNHSZ];<z>
(hdr);<z>
ReadMemoryAccess(hdr, false);<z>
(s_name);<z>
();<z>
s_vaddr = memory.getInt();<z>
();<z>
s_scnptr = memory.getInt();<z>
= memory.getInt();<z>
);<z>
.getShort();<z>
getShort();<z>
;<z>
<R> descriptor, R instance)<z>
;<z>
this.instance = instance;<z>
AnActionEvent e) {<z>
e.getDataContext());<z>
"Started loading content";<z>
(m);<z>
.out.println(m);<z>
;<z>
.set(0);<z>
0);<z>
{<z>
) {<z>
new ContentIterator() {<z>
public boolean processFile(VirtualFile fileOrDir) {<z>
fileOrDir.isSpecialFile()) return true;<z>
incrementAndGet();<z>
File(fileOrDir.getPath()));<z>
.length);<z>
.getPresentableUrl());<z>
{<z>
LOG.error(e1);<z>
true;<z>
);<z>
project);<z>
= System.currentTimeMillis();<z>
totalSize.get()) +<z>
/ 1000) + "sec.";<z>
(message);<z>
out.println(message);<z>
void removeObject(ObjectID id) throws CoreException {<z>
;<z>
{<z>
;<z>
, location, message, e);<z>
void generateScannerAdapter() throws IOException {<z>
template = getTemplate(SCANNER_ADAPTER);<z>
StringBuilder scannerAdapter = new StringBuilder();<z>
for (String tokenClass : tokenClasses) {<z>
append(String.format(<z>
"\t\tif(type.equals(\"%s\")) return YYParser.%s;\n", tokenClass, tokenClass));<z>
("{{RULES}}", scannerAdapter.toString());<z>
IBroadcastStream stream) {<z>
;<z>
= -1;<z>
instanceof ClientBroadcastStream) {<z>
1000;<z>
.getPublishedName()});<z>
getSaveFilename();<z>
recordingName != null) {<z>
, conn.getReadBytes()});<z>
getProperty("red5.webapp.root");<z>
() + '/' + recordingName);<z>
!= null) {<z>
());<z>
()) {<z>
) {<z>
) {<z>
);<z>
{<z>
));<z>
file.deleteOnExit();<z>
;<z>
] childComponents) {<z>
count() +<z>
components());<z>
if (null != childComponents) {<z>
) {<z>
== b)<z>
];<z>
0,b.length);<z>
;<z>
() {<z>
)) {<z>
OperationHelper.getDocumentListManager().resetWorkingList(<z>
DEFAULT_WORKING_LIST);<z>
();<z>
.getName(), DocumentsListsManager.DEFAULT_WORKING_LIST);<z>
String> reason) {<z>
ret = new StringBuffer();<z>
);<z>
t.hasMoreTokens()) {<z>
tok = t.nextToken();<z>
"\\"))<z>
+= t.nextToken();<z>
.split("=", 2);<z>
kv.length == 2) {<z>
[0].equals("C"))<z>
.append("<tr><td>").append(<z>
("itm_cert_C")).append(<z>
).append("</td></tr>\n");<z>
"CN")) {<z>
;<z>
if (null != cn)<z>
[1]);<z>
ret.append("<tr><td>").append(<z>
("itm_cert_CN")).append(<z>
"</td><td");<z>
)<z>
;<z>
if (!ok)<z>
add(String.format(this.uploadPolicy<z>
cn));<z>
.equals("L"))<z>
"<tr><td>").append(<z>
("itm_cert_L")).append(<z>
("</td></tr>\n");<z>
0].equals("ST"))<z>
(<z>
(<z>
("</td></tr>\n");<z>
0].equals("O"))<z>
append(<z>
getString("itm_cert_O")).append(<z>
);<z>
))<z>
"<tr><td>").append(<z>
(<z>
;<z>
return ret.toString();<z>
.DataStream parseFrom(<z>
byte[] data,<z>
com.google.protobuf.ExtensionRegistryLite extensionRegistry)<z>
.InvalidProtocolBufferException {<z>
(data, extensionRegistry)<z>
);<z>
(ZLFile file) {<z>
);<z>
myReadState = READ_NOTHING;<z>
;<z>
myImage = null;<z>
readQuietly(file);<z>
;<z>
{<z>
;<z>
add(DdmPreferences.getDebugPortBase());<z>
void remove()<z>
[elements] = null;<z>
;<z>
<= (heap.length / 4))<z>
heap.length / 2];<z>
, elements + 1);<z>
;<z>
ContentSource source, String label) {<z>
values()) {<z>
ContentSourceType value) {<z>
.getEditor());<z>
void setValue(ContentSourceType type) {<z>
;<z>
();<z>
;<z>
) != null<z>
((AbstractGeneratedFile) _cgFile<z>
)) : null);<z>
, fileVersion) {<z>
void setValue(AbstractCGFileVersion fileVersion) {<z>
super.setValue(fileVersion);<z>
;<z>
);<z>
);<z>
);<z>
GraphDatabaseService graphDb, String clusterName, int machineId,<z>
String haServer, int backupPort, ResponseReceiver receiver )<z>
;<z>
.clusterName = clusterName;<z>
machineId = machineId;<z>
haServer;<z>
();<z>
( storeDir ),<z>
haServer, backupPort, graphDb );<z>
public ByteArray(final int length) {<z>
"Length less than 0");<z>
= new byte[length];<z>
;<z>
= length;<z>
RecognitionException {<z>
();<z>
==0 ) {<z>
getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());<z>
if (state.failed) return ;<z>
) {<z>
.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());<z>
{<z>
re);<z>
;<z>
;<z>
a(OItem var1) {<z>
a) {<z>
true;<z>
} else if (var1 instanceof OItemArmor) {<z>
(this == b) {<z>
return true;<z>
else {<z>
var1;<z>
)));<z>
} else {<z>
? this == i : false));<z>
(JstCommentCompletion completion,<z>
IVjoKeywordCompletionData keyword) {<z>
.getCommentBeforeCursor();<z>
contains(keyword.getName())) {<z>
true;<z>
(isModifierKeyword(keyword)) {<z>
);<z>
if (isFinalKeyword(keyword)) {<z>
return checkFinalKeyword(comment);<z>
false;<z>
)<z>
);<z>
Integer.class);<z>
preference != 1) {<z>
) {<z>
;<z>
(" (act.hidden <> true or act.hidden is null) and ");<z>
c2, double frac) {<z>
= 1 - frac;<z>
return rgba(<z>
c1)),<z>
c1)),<z>
)),<z>
+ ifrac * alpha(c1)));<z>
public final void rule__RecordField__Alternatives_2() throws RecognitionException {<z>
= keepStackSize();<z>
=2;<z>
LA485_0 = input.LA(1);<z>
==RULE_ID) ) {<z>
alt485=1;<z>
==KEYWORD_33) ) {<z>
alt485=2;<z>
NoViableAltException nvae =<z>
, input);<z>
;<z>
alt485) {<z>
case 1 :<z>
).getPropertyTypeAssignment_2_0());<z>
FOLLOW_rule__RecordField__PropertyTypeAssignment_2_0_in_rule__RecordField__Alternatives_238200);<z>
;<z>
--;<z>
getRecordFieldAccess().getPropertyTypeAssignment_2_0());<z>
2 :<z>
());<z>
FollowSets001.FOLLOW_rule__RecordField__OwnedPropertyTypeAssignment_2_1_in_rule__RecordField__Alternatives_238218);<z>
();<z>
state._fsp--;<z>
.getRecordFieldAccess().getOwnedPropertyTypeAssignment_2_1());<z>
(RecognitionException re) {<z>
;<z>
re);<z>
restoreStackSize(stackSize);<z>
boolean toolBarItemActivated(String itemKey) {<z>
IView currentView = getCurrentView();<z>
currentView instanceof ToolBarEnabler) {<z>
) {<z>
return true;<z>
return false;<z>
tbl_name, short max_indexes) throws TException<z>
;<z>
;<z>
.setDb_name(db_name);<z>
;<z>
.setMax_indexes(max_indexes);<z>
;<z>
;<z>
flush();<z>
, ByteBuffer buf)<z>
if(this.packetType == EMPTY)<z>
);<z>
, 0);<z>
;<z>
CUBE);<z>
writeC(buf, 0);<z>
0);<z>
writeH(buf, size);<z>
item : items)<z>
buf, item);<z>
= item.getItemTemplate();<z>
.value())<z>
writeKinah(buf, item, true);<z>
))<z>
, item, true);<z>
else if (itemTemplate.isArmor())<z>
, false, false);<z>
isStigma())<z>
, item);<z>
, item, false, false);<z>
writeC(buf, 0);<z>
boolean moved)<z>
componentListener != null<z>
!= 0)<z>
moved)<z>
(this,<z>
.COMPONENT_MOVED);<z>
;<z>
if (resized)<z>
ComponentEvent ce = new ComponentEvent(this,<z>
);<z>
getSystemEventQueue().postEvent(ce);<z>
(<z>
?> targetClass) {<z>
classLoader = targetClass.getClassLoader();<z>
);<z>
newInstance(<z>
dataSourceDesign,<z>
)<z>
;<z>
dataSourceAndSet.dataSourceDesign = dataSourceDesign;<z>
dataSetDesign;<z>
;<z>
;<z>
public String getChildElementXML() {<z>
StringBuilder buf = new StringBuilder();<z>
append(<z>
);<z>
final TranscriptSummary transcriptSummary : summaries) {<z>
);<z>
("</transcripts>");<z>
buf.toString();<z>
{<z>
return TransformUtils.createTransformReaderIfNeeded(reader, is,<z>
true);<z>
public String toString() {<z>
result = "";<z>
= entries().iterator();<z>
while (i.hasNext()) {<z>
;<z>
result=result + entry+"\n";<z>
;<z>
, Server server) {<z>
;<z>
new ArrayList<Player>();<z>
ChatRoom>();<z>
newSingleThreadExecutor();<z>
.worker, server);<z>
type)<z>
throws SpecificationException {<z>
deployer = ExtensionControl<z>
;<z>
deployer != null) {<z>
newDeployer = deployer.createNew();<z>
return newDeployer;<z>
(<z>
type);<z>
) throws RecognitionException {<z>
stackSize = keepStackSize();<z>
);<z>
;<z>
--;<z>
(state.failed) return ;<z>
catch (RecognitionException re) {<z>
(re);<z>
);<z>
);<z>
et1, TitanType et2) {<z>
et2.getGroup();<z>
getID()) {<z>
.compareTo(et2.getName());<z>
-g2.getID();<z>
{<z>
unregisterService(nsResolverRegistration);<z>
);<z>
) {<z>
())<z>
);<z>
null;<z>
;<z>
private static void setAllocationProperties<z>
, IncompatibilityAnalysis ia, Frame frame,<z>
{<z>
0;<z>
iterator();<z>
hasNext(); ) {<z>
) it.next();<z>
);<z>
.max(thisSize, maxSize);<z>
;<z>
.iterator();<z>
; nbLabels++) {<z>
();<z>
= new Label(LABEL_ROOT_NAME + nbLabels);<z>
;<z>
.hasNext(); ) {<z>
(NEW) it_new.next();<z>
site.getFactory().getParent();<z>
);<z>
) {<z>
println<z>
site) +<z>
);<z>
!extraCond(site)) {<z>
println<z>
+ Util.code2str(site) +<z>
;<z>
) {<z>
allocID(siteNoSSA);<z>
|| (id > highBound)) {<z>
.out.println("Skipping prealloc for " + id);<z>
.out.println<z>
id + " \"" + label + "\" " +<z>
);<z>
label);<z>
.out.println("PreallocOpt: " + nbLabels +<z>
maxSize);<z>
public void setFileExtension(String value) {<z>
resourceGroup == null) {<z>
initialFileExtension = value;<z>
{<z>
(value);<z>
IndexConfigurationInstance configuration) {<z>
;<z>
length; a++) {<z>
];<z>
{<z>
.getString(id);<z>
dependentFile;<z>
;<z>
fileInfo = readFileInfo(dependentFile);<z>
!= null) {<z>
put(dependentFile, fileInfo);<z>
) {<z>
result;<z>
ArgumentMetadata(CALFeatureName featureName, Locale locale) {<z>
;<z>
() != CALFeatureName.ARGUMENT) {<z>
"invalid feature name: " + featureName);<z>
, JSONException {<z>
= AppLogger.getLogger();<z>
_config = new ConfigReader(configuration);<z>
();<z>
{<z>
;<z>
jbInit();<z>
{<z>
ex.printStackTrace();<z>
(true);<z>
) {<z>
"([^\\(]*)\\(([^;]+); ([^;]+)\\)").matcher(location);<z>
)<z>
? new Location(<z>
.group(1).trim(),<z>
matcher.group(2)),<z>
parseDouble(matcher.group(3)))<z>
;<z>
SAXException {<z>
;<z>
!= null) {<z>
;<z>
) {<z>
StringBuilder sb = new StringBuilder();<z>
;<z>
first = true;<z>
) {<z>
if (!first)<z>
.append(",");<z>
("(");<z>
true;<z>
().entrySet()) {<z>
if (!first2)<z>
(",");<z>
);<z>
false;<z>
first = false;<z>
;<z>
("]");<z>
();<z>
ArrayList allActiveReservations() throws WorkspaceException {<z>
Connection c = null;<z>
pstmt = null;<z>
ResultSet rs = null;<z>
= getConnection();<z>
SQL_ALL_CURRENT_RESERVATIONS);<z>
;<z>
();<z>
== null) {<z>
{<z>
.trace("null result for current reservations query");<z>
reservations;<z>
)) {<z>
(1);<z>
rs.getInt(2);<z>
String dn = rs.getString(3);<z>
getLong(4);<z>
;<z>
t);<z>
rs.getInt(5);<z>
buf = new StringBuffer();<z>
append("dn=\"")<z>
(dn)<z>
.append("\", minutes=")<z>
)<z>
)<z>
(uuid)<z>
("\", eprkey=")<z>
append(id)<z>
.append(", creation=\"")<z>
.getTime()))<z>
'"');<z>
));<z>
{<z>
reservations.size());<z>
reservations;<z>
(SQLException e) {<z>
e);<z>
WorkspaceException(e);<z>
finally {<z>
) {<z>
;<z>
SQLException e) {<z>
e);<z>
) {<z>
close();<z>
} catch (SQLException e) {<z>
(e.getMessage(), e);<z>
c != null) {<z>
);<z>
, int actionTypeId,<z>
, String tsuid, DimseRSPHandler rspHandler)<z>
throws IOException, InterruptedException {<z>
pcFor(asuid, tsuid);<z>
(cuid);<z>
nactionrq =<z>
iuid,<z>
);<z>
.forAttributes(data), rspHandler,<z>
.getResponseTimeout());<z>
getCRS() throws DriverException {<z>
crsLoaded) {<z>
)).getConstraints(Constraint.CRS);<z>
(c.length != 0) {<z>
]).getCRS();<z>
;<z>
;<z>
rejectGraceDurationField(Errors errors, String defaultErrorMessage) {<z>
"Grace period";<z>
= this.numberOfInstallments.intValue();<z>
, numberOfInstallments }, defaultErrorMessage);<z>
.BasicStream __is)<z>
;<z>
__is.readByteSeq();<z>
__v;<z>
) throws SwoException {<z>
(level == null)<z>
= LEVEL_ALL;<z>
if (level.equals(LEVEL_ALL)) {<z>
;<z>
return obj;<z>
{<z>
();<z>
.setId(id);<z>
);<z>
objs == null || objs.length == 0)<z>
return null;<z>
objs[0];<z>
) {<z>
(e, e);<z>
throw new SwoException(e);<z>
IOException {<z>
myIsBOF) {<z>
);<z>
myChunkSize = getChunkSizeFromInputStream(myInputStream, myCharset);<z>
false;<z>
= 0;<z>
) {<z>
;<z>
)<z>
("Stopping scutter");<z>
controller != null)<z>
;<z>
() throws IOException {<z>
<String,Object>();<z>
"dbtype", "h2");<z>
"database", "geotools");<z>
.getDataStore(params);<z>
FolderData folder, boolean deleteAllVersions, UnfileObject unfileObject,<z>
) throws UpdateConflictException<z>
= null;<z>
.getSession(workspaceName, repository);<z>
=<z>
rootStorageConfiguration, null, permissionService, defaultNodetypeMapping);<z>
folder, deleteAllVersions, unfileObject, continueOnFailure);<z>
Exception e)<z>
e);<z>
session.logout();<z>
;<z>
(CellValueRecordInterface cell) {<z>
column = cell.getColumn();<z>
= cell.getRow();<z>
row >= records.length) {<z>
;<z>
int newSize = oldRecords.length * 2;<z>
+ 1)<z>
newSize = row + 1;<z>
newSize][];<z>
oldRecords.length);<z>
records[row];<z>
== null) {<z>
int newSize = column + 1;<z>
if (newSize < 10)<z>
= 10;<z>
= new CellValueRecordInterface[newSize];<z>
] = rowCells;<z>
(column >= rowCells.length) {<z>
[] oldRowCells = rowCells;<z>
newSize = oldRowCells.length * 2;<z>
+ 1)<z>
= column + 1;<z>
= new CellValueRecordInterface[newSize];<z>
oldRowCells.length);<z>
;<z>
cell;<z>
|| firstcell == INDEX_NOT_SET) {<z>
;<z>
lastcell || lastcell == INDEX_NOT_SET) {<z>
= column;<z>
public DefaultSettingsBuildingRequest setSystemProperties( Properties systemProperties )<z>
( systemProperties != null )<z>
systemProperties = new Properties();<z>
systemProperties );<z>
;<z>
;<z>
{<z>
) {<z>
BOOLEAN:<z>
valueFactories.getBooleanFactory();<z>
DATE:<z>
valueFactories.getDateFactory();<z>
case PropertyType.NAME:<z>
;<z>
:<z>
);<z>
.REFERENCE:<z>
:<z>
;<z>
case PropertyType.DOUBLE:<z>
valueFactories.getDoubleFactory();<z>
.LONG:<z>
.getLongFactory();<z>
DECIMAL:<z>
valueFactories.getDecimalFactory();<z>
URI:<z>
();<z>
.BINARY:<z>
valueFactories.getBinaryFactory();<z>
.STRING:<z>
.getStringFactory();<z>
case PropertyType.UNDEFINED:<z>
getObjectFactory();<z>
"Unexpected JCR property type " + jcrPropertyType;<z>
"Invalid property type " + jcrPropertyType);<z>
void updateBlockChain() {<z>
) != AsyncTask.Status.RUNNING) {<z>
;<z>
backgroundTask.execute();<z>
(View.VISIBLE);<z>
){<z>
show();<z>
, long classPK)<z>
PortalException, SystemException {<z>
classPK);<z>
{<z>
null);<z>
(current > max)<z>
current = 0;<z>
)<z>
);<z>
f);<z>
;<z>
String getRawInstanceClassName()<z>
getInternalQualifiedInstanceClassName(false);<z>
.replace('$', '.');<z>
throws IOException<z>
(eos) return -1;<z>
)<z>
( "streamClosed -- call nextInputStream()" );<z>
.available();<z>
public void resetAllDBConnections(boolean isScheduled) {<z>
().resetAllDBConnections(isScheduled);<z>
Exception e) {<z>
"AdminController.resetAllDBConnections",<z>
;<z>
String property) throws IOException {<z>
;<z>
cdataState;<z>
text, property);<z>
refresh() {<z>
fStale) {<z>
Control control = getControl();<z>
control.isDisposed())<z>
() {<z>
{<z>
.getControl().isDisposed()) {<z>
refresh();<z>
fTreeViewer.expandAll();<z>
;<z>
});<z>
ShortOption modify(short newValue) {<z>
nullValue = false;<z>
value = newValue;<z>
;<z>
void disconnect(Status state) {<z>
.isDebugEnabled()) {<z>
;<z>
> future : _futures) {<z>
.cancel(false);<z>
this) {<z>
if( _resource != null ) {<z>
();<z>
= null;<z>
setRuntimeCredentialsStorage(ISVNAuthenticationStorage storage) {<z>
synchronized (SVNClientImpl.class) {<z>
;<z>
{<z>
.get(resID);<z>
(res == null)<z>
new NoSuchReservationException(resID);<z>
{<z>
{<z>
.update(res);<z>
);<z>
;<z>
) {<z>
"Withdraw: " + resID;<z>
get(resID);<z>
));<z>
() {<z>
(body == null) {<z>
>(OCLExpression.class, this,<z>
MtlPackage.BLOCK__BODY);<z>
body;<z>
containerOperation)<z>
if (!containerOperation)<z>
();<z>
new WorkflowTools();<z>
.isItemInWorkflow(context, item);<z>
isItemInWorkspace(context, item);<z>
item.isWithdrawn();<z>
isInProgress() && inarch)<z>
append("The deposit is finished, but the item is already in the archive");<z>
new DSpaceSwordException("Invalid workflow state");<z>
) && inws)<z>
append("The deposit is finished: moving it from the workspace to the workflow");<z>
wft.startWorkflow(context, item);<z>
deposit.isInProgress() && inarch)<z>
"The deposit is not finished, but the item is already in the archive");<z>
"Invalid workflow state");<z>
.isInProgress() && inwf)<z>
.append("The deposit is in progress, but is in the workflow; returning to the workspace");<z>
;<z>
iFunction) {<z>
().toLowerCase());<z>
formatter == null)<z>
IllegalArgumentException("Cannot find script formatter for the language '" + DEF_LANGUAGE + "'");<z>
return formatter.getFunction(iFunction);<z>
) {<z>
);<z>
= CONSTRUCTED;<z>
= null;<z>
NotNull PsiElement elementToRename, Editor editor) {<z>
editor);<z>
if (reference != null) {<z>
;<z>
if (prefix instanceof SchemaPrefix) {<z>
VariableInplaceRenamer((PsiNamedElement)prefix, editor) {<z>
refs) {}<z>
{<z>
reference);<z>
reference != null) {<z>
+ reference.resolve());<z>
null;<z>
comment(String string) {<z>
);<z>
"__");<z>
.charAt(0) == '-') {<z>
"_" + text.substring(1);<z>
{<z>
length() - 1) + "_";<z>
out.append(text);<z>
append("-->");<z>
private boolean isTrustedValue(Value value) {<z>
).getPropagateEscapeStatus()<z>
(EscapeMode.ESCAPE_NONE);<z>
String getLimitString(String sql, boolean hasOffset) {<z>
;<z>
;<z>
" for update") ) {<z>
11 );<z>
;<z>
( sql.length()+100 );<z>
{<z>
"select * from ( select row_.*, rownum rownum_ from ( ");<z>
;<z>
);<z>
) {<z>
(" ) row_ ) where rownum_ <= ? and rownum_ > ?");<z>
;<z>
( isForUpdate ) {<z>
.append( " for update" );<z>
toString();<z>
public final void mT__224() throws RecognitionException {<z>
;<z>
_channel = DEFAULT_TOKEN_CHANNEL;<z>
("off");<z>
;<z>
state.channel = _channel;<z>
public void mouseClicked(final MouseEvent e) {<z>
);<z>
)) {<z>
isFocused = true;<z>
e.getID(),<z>
e.getY()<z>
(),<z>
);<z>
.setSource(this);<z>
l : mouseListeners) {<z>
);<z>
} else {<z>
isFocused = false;<z>
public EStructuralFeature getModel() {<z>
eIsProxy()) {<z>
model;<z>
EStructuralFeature)eResolveProxy(oldModel);<z>
{<z>
eNotificationRequired())<z>
this, Notification.RESOLVE,<z>
.EMF_PROPERTY_BINDING__MODEL, oldModel, model));<z>
;<z>
int verboseLevel )<z>
= Logger.getLogger( name );<z>
;<z>
index) {<z>
;<z>
>> 6;<z>
= index & 0x03f;<z>
bitmask = 1L << bit;<z>
[wordNum] &= ~bitmask;<z>
setConfiguration(Configuration cfg) throws ConfigurationException {<z>
= cfg.getLong ("prepare-delay");<z>
getLong ("commit-delay");<z>
("abort-delay");<z>
"random") ? new Random() : null;<z>
Criteria criteria)<z>
collSorderItems == null)<z>
))<z>
ArrayList();<z>
);<z>
.doSelectJoinProject(criteria);<z>
SORDER_ID, getSorderId());<z>
.equals(criteria))<z>
.doSelectJoinProject(criteria);<z>
= criteria;<z>
;<z>
PDFOperator operator, List<COSBase> arguments)<z>
COSName tag = null;<z>
COSDictionary properties = null;<z>
)<z>
(argument instanceof COSName)<z>
tag = (COSName) argument;<z>
)<z>
= (COSDictionary) argument;<z>
PDFMarkedContentExtractor)<z>
context).beginMarkedContentSequence(tag, properties);<z>
ResourceBundle resourceBundle) {<z>
{<z>
;<z>
resourceBundle = resourceBundle;<z>
renderRequest) throws Exception {<z>
.getAttribute(<z>
.THEME_DISPLAY);<z>
(!themeDisplay.isSignedIn()) {<z>
return WorkflowConstants.STATUS_APPROVED;<z>
value = renderRequest.getParameter("status");<z>
getInteger(value);<z>
status == WorkflowConstants.STATUS_APPROVED)) {<z>
return WorkflowConstants.STATUS_APPROVED;<z>
= ParamUtil.getLong(<z>
;<z>
(resourcePrimKey == 0) {<z>
;<z>
permissionChecker =<z>
);<z>
contains(<z>
, ActionKeys.UPDATE)) {<z>
return ParamUtil.getInteger(<z>
;<z>
;<z>
ITypeBinding binding) {<z>
String EMPTY= "";<z>
) {<z>
EMPTY;<z>
() || binding.isTypeVariable()) {<z>
return binding.getName();<z>
binding.isArray()) {<z>
getElementType());<z>
{<z>
StringBuffer stringBuffer= new StringBuffer(elementTypeQualifiedName);<z>
('[').append(']');<z>
toString();<z>
else {<z>
return EMPTY;<z>
()) {<z>
());<z>
.length() > 0) {<z>
= new StringBuffer();<z>
;<z>
'.');<z>
;<z>
();<z>
else {<z>
EMPTY;<z>
)) {<z>
();<z>
StringBuffer buffer= new StringBuffer();<z>
0) {<z>
);<z>
));<z>
toString();<z>
EMPTY;<z>
flags) {<z>
.writeString(mLocale.getLanguage());<z>
);<z>
(mAddressLines == null) {<z>
);<z>
else {<z>
;<z>
));<z>
) {<z>
e.getKey());<z>
(e.getValue());<z>
;<z>
;<z>
mSubAdminArea);<z>
parcel.writeString(mLocality);<z>
parcel.writeString(mSubLocality);<z>
);<z>
writeString(mSubThoroughfare);<z>
mPremises);<z>
;<z>
(mCountryCode);<z>
writeString(mCountryName);<z>
mHasLatitude ? 1 : 0);<z>
{<z>
writeDouble(mLatitude);<z>
(mHasLongitude ? 1 : 0);<z>
{<z>
(mLongitude);<z>
mPhone);<z>
mUrl);<z>
mExtras);<z>
Comparator<T> comparator) {<z>
getComparator();<z>
comparator);<z>
(this, previousComparator);<z>
createStatement( int resultSetType,<z>
resultSetConcurrency,<z>
) throws SQLException {<z>
();<z>
> ex, final boolean reverse) {<z>
invokeAndWaitIfNeeded(new Runnable() {<z>
() {<z>
ChangeUtils.unmergedFiles(myProject, root);<z>
) != 0) {<z>
AbstractVcsHelper.getInstance(myProject)<z>
.getMergeProvider());<z>
, root);<z>
(affectedFiles.size() != 0) {<z>
showYesNoDialog(myProject,<z>
.message("update.rebase.unmerged",<z>
getPresentableUrl())),<z>
.getString("update.rebase.unmerged.title"),<z>
;<z>
0) {<z>
(true);<z>
Throwable t) {<z>
ex.set(t);<z>
);<z>
, final char c) {<z>
null) {<z>
0;<z>
int count = 0;<z>
s.length(); i++) {<z>
{<z>
count++;<z>
count;<z>
fileObject) {<z>
FileObject toReturn = null;<z>
()))<z>
= fileObject;<z>
).equals(META_EXTENSION))<z>
);<z>
()))<z>
= f;<z>
return toReturn;<z>
Resource resource) throws RegistryException {<z>
) {<z>
("The resource at the specified path does not contain " +<z>
"well-formed XML - Processing as text");<z>
) {<z>
("text/plain")) {<z>
OMAbstractFactory.getOMFactory().createOMText(<z>
);<z>
(<z>
[]) resource.getContent());<z>
.getOMFactory();<z>
createOMText(<z>
new SynapseBinaryDataSource(inputStream,<z>
.getMediaType())), true);<z>
IOException e) {<z>
e);<z>
} finally {<z>
;<z>
IOException e) {<z>
"Error while closing the input stream", e);<z>
return null;<z>
) {<z>
) {<z>
;<z>
();<z>
, Object>() {<z>
(String key) {<z>
dynamicFunction = readDynamicFunctionBean(key);<z>
);<z>
return wrapper;<z>
(CmsException e) {<z>
, null);<z>
});<z>
;<z>
String toString() {<z>
= new ToStringIterator();<z>
;<z>
toString();<z>
) {<z>
);<z>
, Object>();<z>
("message", "Please input values and submit");<z>
new PrivacyAssessmentForm();<z>
;<z>
String>();<z>
RECEIVER_IDS_KEY, Presentation.SubjectTypes.RECEIVER_IDS);<z>
;<z>
Presentation.SubjectTypes.SENDER_CLASSES);<z>
DATA_ACCESS_CLASSES);<z>
put("assessmentSubjectTypes", assessmentSubjectTypes);<z>
>();<z>
, Presentation.Format.TABLE);<z>
.Format.CHART);<z>
("presentationFormats", presentationFormats);<z>
;<z>
);<z>
, assessmentSubjects);<z>
(PageNames.PRIVACY_ASSESSMENT, model);<z>
LineUnavailableException, UnsupportedAudioFileException, IOException<z>
if(effect=="door"){<z>
"./res/Sounds/door.wav";<z>
){<z>
;<z>
effect=="boom"){<z>
sound="./res/Sounds/boom.wav";<z>
else if(effect=="gatewalk"){<z>
;<z>
new File(sound);<z>
;<z>
format = ais.getFormat();<z>
.getFrameSize()));<z>
;<z>
getLine(info);<z>
ais);<z>
cl.start();<z>
void displayMethodDetail(int row) {<z>
));<z>
Runnable() {<z>
void run() {<z>
methodDetailView.getFrame(detail);<z>
(frame);<z>
true);<z>
);<z>
) {<z>
synchronized (createdContexts) {<z>
bound) {<z>
>((MacOSXCGLContext)ctx));<z>
{<z>
) {<z>
> ref = createdContexts.get(i);<z>
final MacOSXCGLContext _ctx = ref.get();<z>
== null || _ctx == ctx) {<z>
(i);<z>
else {<z>
++;<z>
static boolean isReadOnlyEntry(DocumentModel entry) {<z>
.getContextData();<z>
.REQUEST,<z>
.TRUE;<z>
static AppearanceAwareLabelProvider createJavaUiLabelProvider() {<z>
AppearanceAwareLabelProvider(<z>
.DEFAULT_TEXTFLAGS | JavaElementLabels.P_COMPRESSED,<z>
DEFAULT_IMAGEFLAGS | JavaElementImageProvider.SMALL_ICONS);<z>
addLabelDecorator(new TreeHierarchyLayoutProblemsDecorator());<z>
;<z>
,String> data) {<z>
, "createLehrveranstaltung", data);<z>
= data.get("titel");<z>
) {<z>
("Lehrveranstaltung konnte nicht erstellt werden. Bereits vorhanden!");<z>
, "createLehrveranstaltung", false);<z>
;<z>
else {<z>
);<z>
.get("zeit");<z>
++;<z>
);<z>
"Lehrveranstaltung: "+data+" wurde erfolgreich erstellt.");<z>
, true);<z>
;<z>
a) throws ParallelException<z>
.direction(), normal);<z>
== 0)<z>
);<z>
.origin())/det;<z>
SimpleSet decls_compute() {<z>
name());<z>
.size() == 1) {<z>
;<z>
() && inStaticContext()) {<z>
name()).isEmpty())<z>
;<z>
().staticContextQualifier()) {<z>
))<z>
.emptySet;<z>
set;<z>
() {<z>
();<z>
get(smallestKey);<z>
) {<z>
get(smallestKey).next());<z>
{<z>
null);<z>
) result;<z>
Date getIfModifiedHeader() {<z>
);<z>
== 0 ) return null;<z>
.parseDate( s );<z>
{<z>
);<z>
;<z>
IEObjectConsumer inst) {<z>
index) {<z>
this, 0, inst);<z>
return null;<z>
{<z>
> actualListeners = _listenersBySpec.get(fullyQualifiedSpecification);<z>
actualListeners == null) {<z>
false;<z>
{<z>
;<z>
(actualListeners.isEmpty()) {<z>
;<z>
) {<z>
false;<z>
else {<z>
return true;<z>
{<z>
;<z>
void addPropertyFilter(String propName, Property value,<z>
operator) {<z>
addPropertyFilter(propName, value, operator);<z>
);<z>
) {<z>
size = this.size();<z>
++i) {<z>
(i) == elem)<z>
;<z>
false;<z>
)<z>
, value);<z>
())) {<z>
value);<z>
() {<z>
s = 0;<z>
aux = new double[probConds.length];<z>
length; i++) {<z>
j++) {<z>
i][j] = 0;<z>
[i] = 0;<z>
fSize; fNo++) {<z>
);<z>
lambda[fNo];<z>
) {<z>
("lambda " + fNo + " too big: " + fLambda);<z>
); i < length; i++) {<z>
(i);<z>
i);<z>
) {<z>
x][y] += fLambda;<z>
} else {<z>
f.getVal(i);<z>
y] += (val * fLambda);<z>
data;<z>
{<z>
x]);<z>
length; y++) {<z>
, zlambda[x]);<z>
(x) * exp.getNumber();<z>
];<z>
;<z>
public boolean equals(Object obj) {<z>
obj==this )<z>
return true;<z>
)<z>
;<z>
((Buffer)obj);<z>
()<z>
public String toString()<z>
"issuenum";<z>
(DragSourceEvent event) {<z>
;<z>
);<z>
().getFocusControl()) {<z>
false;<z>
IStructuredSelection) selectionProvider.getSelection();<z>
)) {<z>
= false;<z>
)) {<z>
.doit = false;<z>
selection);<z>
= true;<z>
void onCreate(Bundle savedInstanceState) {<z>
savedInstanceState);<z>
);<z>
getStringArrayListExtra("Expressions");<z>
setContentView(R.layout.expression_builder_select_sensor_dialog);<z>
)<z>
<String>(this,<z>
.layout.simple_list_item_1, expressions));<z>
(R.id.sensor_list))<z>
(new OnItemClickListener() {<z>
> parent, View view,<z>
, long id) {<z>
();<z>
("Position", position);<z>
);<z>
finish();<z>
});<z>
, final int dxOffset, final int incx,<z>
dyOffset, final int incy)<z>
,m=0,mp1=0;<z>
0) return;<z>
if (da == 0.0) return;<z>
= 0;<z>
goId >= 0)<z>
if (goId == 0)<z>
20; continue; }<z>
1;<z>
;<z>
incx + 1;<z>
incy + 1;<z>
i <= n; i++)<z>
+dxOffset];<z>
ix += incx;<z>
incy;<z>
if (goId == 20)<z>
m = n%4;<z>
; continue; }<z>
= 1; i <= m; i++)<z>
];<z>
4) return;<z>
goId = 40; continue;<z>
(goId == 40)<z>
= m + 1;<z>
)<z>
[i+dxOffset];<z>
+ 1+dxOffset];<z>
*dx[i + 2+dxOffset];<z>
[i + 3+dxOffset];<z>
;<z>
exit(-1);<z>
) {<z>
.BLC_AJAX_PARAMETER;<z>
0) {<z>
+ blcAjax + "=true";<z>
} else {<z>
url + "?" + blcAjax + "=true";<z>
url;<z>
a, double t) {<z>
;<z>
a;<z>
;<z>
throws IOException {<z>
> putMap = createRsPutMap(htable, puts);<z>
)) {<z>
( rsPuts );<z>
.flushCommits();<z>
int startat)<z>
throws HeclException {<z>
image = (Image)target;<z>
if(subcmd.equals("thumbnail")) {<z>
= startat < argv.length ?<z>
: 64;<z>
.length ?<z>
: -1;<z>
);<z>
image.getHeight();<z>
destH == -1)<z>
;<z>
destH);<z>
Graphics g = thumb.getGraphics();<z>
{<z>
; x < destW; x++) {<z>
(x, y, 1, 1);<z>
= x * sourceWidth / destW;<z>
y * sourceHeight / destH;<z>
- dy,<z>
LEFT | Graphics.TOP);<z>
thumb));<z>
{<z>
isMutable())<z>
);<z>
.createDrawable(image.getGraphics(),<z>
image.getWidth(),<z>
));<z>
,startat);<z>
{<z>
_type = RULE_DOLLAR_VAR;<z>
;<z>
match('$');<z>
alt9=2;<z>
LA(1);<z>
':') ) {<z>
;<z>
) {<z>
case 1 :<z>
("::");<z>
=0;<z>
alt10=2;<z>
1);<z>
) {<z>
alt10=1;<z>
switch (alt10) {<z>
case 1 :<z>
'z') ) {<z>
();<z>
input);<z>
(mse);<z>
throw mse;}<z>
>= 1 ) break loop10;<z>
eee =<z>
(10, input);<z>
;<z>
;<z>
(true);<z>
alt12=2;<z>
.LA(1);<z>
if ( (LA12_0==':') ) {<z>
=1;<z>
switch (alt12) {<z>
:<z>
match("::");<z>
;<z>
int alt11=2;<z>
);<z>
>='a' && LA11_0<='z')) ) {<z>
;<z>
(alt11) {<z>
1 :<z>
'z') ) {<z>
();<z>
;<z>
mse);<z>
}<z>
( cnt11 >= 1 ) break loop11;<z>
eee =<z>
);<z>
;<z>
cnt11++;<z>
(true);<z>
loop12;<z>
;<z>
.type = _type;<z>
= _channel;<z>
) {<z>
;<z>
;<z>
pos.length; i++) {<z>
{<z>
;<z>
pos[i];<z>
;<z>
DateFormat dateFormat) {<z>
);<z>
.length() > 0) {<z>
().getTime());<z>
();<z>
void pdf() throws Exception {<z>
);<z>
("manual.xml"));<z>
"pdf.xsl");<z>
= new StreamSource(isXSL);<z>
();<z>
(xsl);<z>
manual = $(isXML);<z>
replaceVariables(manual);<z>
checkCodeBlockLengths(manual);<z>
path("manual-pdf"));<z>
.mkdirs();<z>
);<z>
;<z>
= new StreamResult(fout);<z>
target);<z>
.close();<z>
"Transforming FO -> PDF");<z>
;<z>
.setUserConfig(new File("C:/Users/lukas/workspace/jOOQ-website/src/main/resources/fop.config.xml"));<z>
FOUserAgent foUserAgent = fopFactory.newFOUserAgent();<z>
));<z>
new FileOutputStream(file);<z>
= new BufferedOutputStream(out);<z>
, foUserAgent, out);<z>
factory.newTransformer();<z>
file("jOOQ-manual.fo.xml")));<z>
));<z>
src, res);<z>
);<z>
;<z>
String[] {<z>
file.getAbsolutePath() });<z>
getPlatformVersion()<z>
DeviceInfo.getPlatformVersion();<z>
0)<z>
DeviceInfo.isSimulator())<z>
"Simulator";<z>
"Unknown";<z>
os;<z>
{<z>
= new ArrayList<AbstractConfigurableAsyncServer>();<z>
> configs = config.configurationsAt("smtpserver");<z>
(HierarchicalConfiguration serverConfig: configs) {<z>
;<z>
setDNSService(dns);<z>
loader);<z>
server.setLog(log);<z>
setFileSystem(fileSystem);<z>
;<z>
;<z>
return servers;<z>
, JDBCStore store)<z>
SQLException {<z>
sm.fetchObjectField<z>
);<z>
) {<z>
null) {<z>
createSelect(sm, store);<z>
if (isBlob) {<z>
.getDBDictionary().updateBlob<z>
, (InputStream)ob);<z>
} else {<z>
.getDBDictionary().updateClob<z>
;<z>
rule__Annotation__Group__0() throws RecognitionException {<z>
stackSize = keepStackSize();<z>
.FOLLOW_rule__Annotation__Group__0__Impl_in_rule__Annotation__Group__022185);<z>
;<z>
--;<z>
);<z>
);<z>
;<z>
RecognitionException re) {<z>
;<z>
recover(input,re);<z>
(stackSize);<z>
] elems)<z>
-1;<z>
= Double.NEGATIVE_INFINITY;<z>
; i++) {<z>
double elem = elems[i];<z>
) {<z>
= elem;<z>
bestIdx = i;<z>
return bestIdx;<z>
( Rectangle bounds ) {<z>
Point oldSize = getSize();<z>
super.setBounds( bounds );<z>
oldSize.equals( getSize() ) ) {<z>
layoutItems();<z>
Composite parent, TabbedPropertySheetPage tabbedPropertySheetPage) {<z>
;<z>
(1, true));<z>
tabbedPropertySheetPage;<z>
(parent);<z>
FILL_BOTH);<z>
this.parent.setLayoutData(data);<z>
;<z>
marginHeight = 0;<z>
layout.marginWidth = 0;<z>
parent.setLayout(layout);<z>
private void updateEnableState() {<z>
= fDetectGroup.mustDetect();<z>
detect);<z>
.setEnabled(!detect);<z>
detect);<z>
&& fUseProjectJRE.isSelected());<z>
fUseEEJRE.isSelected());<z>
(fPreferenceLink != null) {<z>
setEnabled(!detect);<z>
null) {<z>
.setEnabled(!detect);<z>
{<z>
== 0) {<z>
NOTHING_SELECTED);<z>
;<z>
< selection.length; i++ ) {<z>
( selection[ i ] )<z>
isContainer( selection[ i ] ) ) {<z>
{<z>
bAllAreValid = false;<z>
PLUGIN_ID,<z>
ERROR,<z>
WRONG_CLASS_ERROR_MSG );<z>
) {<z>
{<z>
{<z>
{<z>
i];<z>
= CONTAINER_READONLY_ERROR_MSG;<z>
( theSelection instanceof ModelResource ) {<z>
msg = CONTAINER_MODEL_READONLY_ERROR_MSG;<z>
{<z>
;<z>
;<z>
= new StatusInfo( PLUGIN_ID,<z>
.ERROR,<z>
;<z>
{<z>
PLUGIN_ID,<z>
,<z>
"" );<z>
stStatus;<z>
OperationStatus getSearchKeyRange(DatabaseEntry key,<z>
data,<z>
LockMode lockMode)<z>
{<z>
new DatabaseEntry(), data, lockMode);<z>
private boolean isCurrentInterval(){<z>
int itv : this.intervalList){<z>
.currentInterval)<z>
return true;<z>
;<z>
String status){<z>
.getValue()){<z>
;<z>
){<z>
Color.ORANGE;<z>
)){<z>
RED;<z>
status).getValue()){<z>
Color.RED;<z>
.web(status);<z>
) {<z>
;<z>
,feed)));<z>
, 255, 170))<z>
)<z>
(JDFeedMePost.ADDED_NO);<z>
;<z>
, 243, 197))<z>
)<z>
) obj).getNewpost();<z>
;<z>
.getModel().refreshModel();<z>
);<z>
contentpane;<z>
, int messageId) {<z>
(progressListener != null) {<z>
);<z>
, OWLIndividual inst) throws ThinklabException {<z>
, int capacity, long defaultValue) {<z>
;<z>
.isAssignableFrom(type) ) {<z>
IllegalArgumentException("Column type must be an "<z>
+ "instance or subclass of java.util.Date.");<z>
if ( capacity < nrows ) {<z>
throw new IllegalArgumentException(<z>
);<z>
long[capacity];<z>
Arrays.fill(m_values, defaultValue);<z>
= nrows;<z>
void process() {<z>
);<z>
injectAllSections(existingSections);<z>
deleteCategory(<z>
{<z>
getParent();<z>
removeCategory(toDelete);<z>
.fireDataChangedListener(<z>
, DataState.StructureModified,<z>
;<z>
.fireDataChangedListener(<z>
toDelete, DataState.Deleted,<z>
);<z>
return parent;<z>
long pos) throws IOException {<z>
(pos >= bufferSize) {<z>
name + "]");<z>
== null) {<z>
firstBuffer = new byte[bufferPosition];<z>
, 0, firstBuffer, 0, bufferPosition);<z>
else {<z>
if (!seekOccured) {<z>
);<z>
= pos;<z>
;<z>
(int) pos;<z>
firstBuffer;<z>
;<z>
Builder addStopTimeUpdate(<z>
Builder builderForValue) {<z>
== null) {<z>
;<z>
build());<z>
);<z>
else {<z>
));<z>
this;<z>
loadGroupByGroupname(String groupname)<z>
throws UsernameNotFoundException, DataAccessException {<z>
"No group in Kerberoes: "<z>
;<z>
o){<z>
.FLOAT){<z>
()+"'.");<z>
){<z>
+"'.");<z>
public void setPause(boolean pause){<z>
pause = pause;<z>
;<z>
LEGION_NEW_MASTER()<z>
900701);<z>
{<z>
);<z>
result = get(key);<z>
{<z>
addType();<z>
result.index;<z>
<File> filesToProcess, File file) {<z>
{<z>
f);<z>
f);<z>
float[] x) {<z>
);<z>
_root,search);<z>
search.i;<z>
) {<z>
;<z>
propertiesSection.setText(UmlMessages.AnyReceiveEventPropertiesEditionPart_PropertiesGroupLabel);<z>
FILL_HORIZONTAL);<z>
= 3;<z>
;<z>
createComposite(propertiesSection);<z>
);<z>
numColumns = 3;<z>
.setLayout(propertiesGroupLayout);<z>
(propertiesGroup);<z>
return propertiesGroup;<z>
) {<z>
Map<String,SchemaField> schemaFields = null;<z>
null) {<z>
;<z>
else {<z>
getSchema().getFields();<z>
{<z>
sf = entry.getValue();<z>
())) {<z>
)) {<z>
)<z>
;<z>
)) {<z>
);<z>
getSchemaField(fld.getName());<z>
) {<z>
("The field :"<z>
.getName()<z>
+ " present in DataConfig does not have a counterpart in Solr Schema");<z>
_file,<z>
_str,<z>
Throwable _cause )<z>
_str, _cause );<z>
file = _file;<z>
public int bitLength()<z>
;<z>
== 0)<z>
return 0;<z>
intLen - 1;<z>
= m_ints[last];<z>
(last << 5) + 1;<z>
)<z>
((highest & 0xff000000) != 0)<z>
+= 24;<z>
>>>= 24;<z>
bits += 16;<z>
highest >>>= 16;<z>
else if (highest > 0x000000ff)<z>
bits += 8;<z>
8;<z>
!= 1)<z>
;<z>
highest >>>= 1;<z>
return bits;<z>
MetaphAdd(StringBuffer primary, String main) {<z>
{<z>
.append(main);<z>
] b1, byte[] b2 ) {<z>
( b1.length != b2.length ) {<z>
false;<z>
<b1.length; ++i ) {<z>
false;<z>
return true;<z>
Object object) {<z>
(object,<z>
"full/obj16/SubConversation.png"));<z>
catch (java.util.MissingResourceException e) {<z>
object,<z>
));<z>
checkPlayerItemInHandIsPickaxe(Player player){<z>
.getType() == Material.DIAMOND_PICKAXE ||<z>
Material.IRON_PICKAXE ||<z>
) == Material.STONE_PICKAXE ||<z>
() == Material.WOOD_PICKAXE) {<z>
true;<z>
;<z>
View view)<z>
)<z>
;<z>
isReclaimAged) {<z>
false;<z>
myView = (GroupByView) view;<z>
, criteriaExpressions))<z>
false;<z>
;<z>
public ContentBinaryDataEntity getContentBinaryData( final BinaryDataKey binaryDataKey )<z>
, "Given binaryDataKey cannot be null" );<z>
() )<z>
binaryDataKey ) )<z>
return contentBinaryData;<z>
null;<z>
public void setStyle(BriefCodediffNofile attr) {<z>
.getValue();<z>
) {<z>
FLAG_BRIEF);<z>
{<z>
FLAG_CODEDIFF);<z>
if (option.equals(STYLE_DEFAULT)) {<z>
("");<z>
{<z>
setInternalStyle(FLAG_NO_FILE);<z>
else {<z>
+ attr + " unknown.", getLocation());<z>
onSingleTap(final MotionEvent event)<z>
());<z>
;<z>
;<z>
timestampStr)<z>
equals(""))<z>
);<z>
timestamp = -1;<z>
.valueOf(timestampStr);<z>
e)<z>
"Invalid timestamp on request");<z>
timestamp == -1)<z>
AlfrescoRuntimeException("Invalid timestamp on request");<z>
;<z>
30 * 1000);<z>
public final int[] execute() {<z>
;<z>
queries);<z>
ctx);<z>
statement(new PreparedStatementProxy(connection));<z>
();<z>
queries.length; i++) {<z>
renderStart(ctx);<z>
renderInlined(queries[i]);<z>
listener.renderEnd(ctx);<z>
for (String sql : batchSQL) {<z>
sql(sql);<z>
prepareStart(ctx);<z>
addBatch(sql);<z>
;<z>
.sql(null);<z>
(ctx);<z>
ctx.statement().executeBatch();<z>
ctx);<z>
result;<z>
) {<z>
;<z>
.exception(ctx);<z>
();<z>
.safeClose(listener, ctx);<z>
{<z>
{<z>
.WORKLET_TYPE__TASK:<z>
return getTASK();<z>
case PowrmartPackage.WORKLET_TYPE__SESSION:<z>
;<z>
case PowrmartPackage.WORKLET_TYPE__WORKLET:<z>
return getWORKLET();<z>
case PowrmartPackage.WORKLET_TYPE__TASKINSTANCE:<z>
return getTASKINSTANCE();<z>
PowrmartPackage.WORKLET_TYPE__WORKFLOWLINK:<z>
return getWORKFLOWLINK();<z>
:<z>
getWORKFLOWVARIABLE();<z>
WORKLET_TYPE__WORKFLOWEVENT:<z>
();<z>
:<z>
();<z>
WORKLET_TYPE__METADATAEXTENSION:<z>
();<z>
.WORKLET_TYPE__DESCRIPTION:<z>
();<z>
WORKLET_TYPE__ISVALID:<z>
);<z>
:<z>
);<z>
WORKLET_TYPE__PARENT:<z>
;<z>
WORKLET_TYPE__PARENTTYPE:<z>
;<z>
case PowrmartPackage.WORKLET_TYPE__REUSABLE:<z>
);<z>
:<z>
return getVERSIONNUMBER();<z>
, resolve, coreType);<z>
... validUsage)<z>
);<z>
this.validUsage = validUsage;<z>
File out, TemplateEngineKind templateEngineKind, FieldsMetadata fieldsMetadata,<z>
Iterable<IDataProvider> dataProviders )<z>
;<z>
byte b) throws OtrException {<z>
;<z>
1;<z>
len);<z>
put(b);<z>
(secbytes);<z>
));<z>
return result;<z>
{<z>
;<z>
boolean jj_2_86(int xla) {<z>
jj_la = xla;<z>
token;<z>
jj_3_86();<z>
(LookaheadSuccess ls) {<z>
;<z>
finally {<z>
(85, xla);<z>
{<z>
();<z>
.length > 0) {<z>
];<z>
.length > 1) {<z>
[1];<z>
);<z>
) {<z>
("Path error!");<z>
e.printStackTrace();<z>
println("name = " + name);<z>
.out.println("path = " + path);<z>
();<z>
.out.println("usage: renamer name [directory] ...");<z>
(name.equals("test")) {<z>
out.println("Creating some test files...");<z>
util.createTestFile();<z>
(new File(path));<z>
);<z>
);<z>
System.out.println();<z>
System.out.println("This will be the output:");<z>
files) {<z>
));<z>
null) {<z>
.add(episode);<z>
);<z>
episode.getFileName());<z>
= "0";<z>
System.in);<z>
out.println();<z>
;<z>
);<z>
("n"));<z>
"y")){<z>
.println("Processing...");<z>
i++) {<z>
);<z>
"n")) {<z>
("Canceled...");<z>
out.println("Exiting...");<z>
{<z>
.createHistoryFile(confirmedFiles);<z>
{<z>
gamerunning = true;<z>
;<z>
(false);<z>
);<z>
);<z>
);<z>
player1.put(jPanel);<z>
();<z>
z = new Zeit(this, zeit);<z>
Thread (z);<z>
.start();<z>
() {<z>
Printer.trace(">> RealTimeSequencer: implStart()");<z>
playThread == null) {<z>
.err("RealTimeSequencer.implStart() called, but playThread not instanciated!");<z>
sequence);<z>
(!running) {<z>
= true;<z>
playThread.start();<z>
.trace) Printer.trace("<< RealTimeSequencer: implStart() completed");<z>
depth)<z>
depth);<z>
.getTextMessage(<z>
.RTS_SCALAR_AGG_RS) +<z>
getTextMessage(SQLState.RTS_NUM_OPENS) +<z>
numOpens + "\n" +<z>
+<z>
"\n" +<z>
"\n" +<z>
"\n" +<z>
(<z>
SQLState.RTS_INDEX_KEY_OPT) +<z>
+ indexKeyOptimization + "\n" +<z>
) +<z>
childResultSetStatistics.getStatementExecutionPlanText(<z>
) +<z>
() {<z>
) {<z>
() {<z>
);<z>
;<z>
fromValue(String v) {<z>
()) {<z>
)) {<z>
c;<z>
;<z>
{<z>
("HudsonPluginUtils.properties");<z>
;<z>
catch (IOException e) {<z>
new RuntimeException("Failed to load Hudson Plugin properties", e);<z>
.class);<z>
{<z>
];<z>
watchExpression, true).open();<z>
void createProjectNodes() {<z>
();<z>
.getModules();<z>
Module module : modules) {<z>
module, TREE_UPDATER);<z>
moduleNode = new MyNode(configurable);<z>
moduleNode);<z>
;<z>
(nodesAdded) {<z>
true);<z>
;<z>
.length == 0){<z>
);<z>
else {<z>
final MyNode moduleGroupNode = ModuleGroupUtil<z>
,<z>
>() {<z>
{<z>
());<z>
) {<z>
moduleGroup) {<z>
moduleGroupConfigurable =<z>
moduleGroup);<z>
);<z>
});<z>
);<z>
if (myProject.isDefault()) {<z>
.removeAllChildren();<z>
myProject);<z>
(Context context, Uri uri) {<z>
, uri, null, null, null);<z>
(list.size() > 0) {<z>
0);<z>
null;<z>
message, final RoutingContext context) throws Exception<z>
, final org.fudgemsg.MutableFudgeMsg msg) {<z>
_handle != null) {<z>
(null, HANDLE_ORDINAL, _handle);<z>
) {<z>
class);<z>
toFudgeMsg (serializer, fudge1);<z>
);<z>
) {<z>
int dotIndex = smartName.indexOf('.');<z>
(dotIndex != -1) {<z>
, dotIndex);<z>
;<z>
(possibleDocMapper != null) {<z>
substring(dotIndex + 1);<z>
mappers().smartName(possibleName);<z>
(mappers != null) {<z>
return mappers;<z>
= fullName(smartName);<z>
(mappers != null) {<z>
;<z>
smartName);<z>
null) {<z>
;<z>
);<z>
( TableRow tableRow,<z>
boolean bottomest,<z>
, StringBuilder style )<z>
() / TWIPS_PER_INCH )<z>
+ "in;" );<z>
append( "padding-start:"<z>
TWIPS_PER_INCH ) + "in;" );<z>
.append( "padding-end:"<z>
getGapHalf() / TWIPS_PER_INCH ) + "in;" );<z>
top = tableCell.getBrcTop() != null<z>
getBorderType() != 0 ? tableCell<z>
getTopBorder() : tableRow<z>
.getHorizontalBorder();<z>
!= null<z>
).getBorderType() != 0 ? tableCell<z>
.getBottomBorder()<z>
();<z>
null<z>
0 ? tableCell<z>
getLeftBorder() : tableRow<z>
.getVerticalBorder();<z>
right = tableCell.getBrcRight() != null<z>
getBorderType() != 0 ? tableCell<z>
rightest ? tableRow.getRightBorder()<z>
);<z>
, style );<z>
addBorder( left, "left", style );<z>
( right, "right", style );<z>
;<z>
throws RecognitionException {<z>
= keepStackSize();<z>
pushFollow(FOLLOW_rule__Smooth_curveto_argument__Group__1__Impl_in_rule__Smooth_curveto_argument__Group__16097);<z>
();<z>
--;<z>
pushFollow(FOLLOW_rule__Smooth_curveto_argument__Group__2_in_rule__Smooth_curveto_argument__Group__16100);<z>
rule__Smooth_curveto_argument__Group__2();<z>
--;<z>
) {<z>
;<z>
re);<z>
);<z>
> getAutoDeployBundleLocations() {<z>
<String>();<z>
.getEntryPaths("/bundle/");<z>
while (libs.hasMoreElements()) {<z>
lib = libs.nextElement();<z>
{<z>
add(lib);<z>
return result;<z>
allFields(final Class< ? > c) {<z>
;<z>
l == null ) {<z>
>();<z>
();<z>
l,<z>
;<z>
= c;<z>
class) && (sc != null) ) {<z>
l,<z>
sc.getDeclaredFields() );<z>
.fieldsCache.putIfAbsent( c,<z>
);<z>
;<z>
IComposableCommand command,<z>
final ISimplifiedROMap<String, PrologTerm> bindings)<z>
throws CommandException {<z>
= ArrayUtils.indexOf(cmds, command);<z>
>= 0) {<z>
PrologTerm>(<z>
bindings);<z>
, index);<z>
throw new IllegalArgumentException(<z>
"cannot reprocess command, command unknown");<z>
final int labelWidth) {<z>
createBox();<z>
LabelBoxPrinter();<z>
formatName(map.getName()));<z>
setHorizontalAlignment(SWT.CENTER);<z>
];<z>
.setHeight( 18 );<z>
setStyle( SWT.BOLD );<z>
;<z>
.setFont(font);<z>
} catch (Exception e) {<z>
;<z>
);<z>
.INSET*2;<z>
new Dimension(labelWidth, labelHeight));<z>
));<z>
.add(labelBox);<z>
return labelHeight;<z>
boolean voequals(Object vo1,Object vo2) {<z>
getClass()))<z>
false;<z>
);<z>
();<z>
o1,o2;<z>
length;i++)<z>
||<z>
length==0) {<z>
vo1,new Object[0]);<z>
vo2,new Object[0]);<z>
null || o1!=null && o2==null)<z>
false;<z>
&& !o1.equals(o2))<z>
return false;<z>
;<z>
) {<z>
;<z>
input, Map<String, ?> options )<z>
)<z>
IllegalArgumentException( "input file missing" );<z>
);<z>
metadata;<z>
throws ManageException {<z>
(lager.traceLog) {<z>
;<z>
;<z>
db.getSlot(reservationID);<z>
} catch (SlotNotFoundException e) {<z>
;<z>
slot.partOfGroup) {<z>
) {<z>
PilotSlot aslot;<z>
getSlot(reservationID);<z>
SlotNotFoundException e) {<z>
okToReleaseBlock(aslot)) {<z>
(aslot, false);<z>
{<z>
+<z>
;<z>
else {<z>
terminal);<z>
editorContext, SNode node) {<z>
EditorCell_Collection.createVertical(editorContext, node);<z>
;<z>
;<z>
createComponent_97a1w6_b0(editorContext, node));<z>
return editorCell;<z>
callNode, Node parent, String callName) {<z>
(externMethods.contains(callName) ||<z>
(callName)) {<z>
callName);<z>
.size() == 0) {<z>
);<z>
definitions)) {<z>
{<z>
;<z>
returned != null) {<z>
{<z>
);<z>
returned);<z>
.isLiteralValue(returned, false) &&<z>
.mayHaveSideEffects(<z>
.getFirstChild(), compiler)) {<z>
("Inlining constant accessor: " + callName);<z>
inlineConstReturn(parent, callNode, returned);<z>
isEmptyMethod(firstDefinition) &&<z>
mayHaveSideEffects(<z>
.getFirstChild(), compiler)) {<z>
logger.fine("Inlining empty method: " + callName);<z>
);<z>
else {<z>
callName + "' has conflicting definitions.");<z>
protected Composite createNameText(Composite parent) {<z>
.SWT_KIND));<z>
.BORDER);<z>
FILL_HORIZONTAL);<z>
name.setLayoutData(nameData);<z>
) {<z>
SuppressWarnings("synthetic-access")<z>
) {<z>
!= null)<z>
()));<z>
;<z>
.addKeyListener(new KeyAdapter() {<z>
@SuppressWarnings("synthetic-access")<z>
{<z>
e.character == SWT.CR) {<z>
(propertiesEditionComponent != null)<z>
));<z>
);<z>
UmlViewsRepository.ReceiveOperationEvent.Properties.name);<z>
setEEFtype(name, "eef::Text");<z>
, UmlViewsRepository.SWT_KIND), null);<z>
parent;<z>
onCreate(Bundle savedInstanceState) {<z>
);<z>
(R.layout.emergency);<z>
;<z>
id.emergencyListLoader);<z>
{<z>
msg) {<z>
.handleMessage(msg);<z>
updateView();<z>
;<z>
createChange(IProgressMonitor pm) throws CoreException, OperationCanceledException {<z>
;<z>
;<z>
) {<z>
change;<z>
Change[]{change});<z>
();<z>
> entry : filesToRename.entrySet()) {<z>
, "comment");<z>
));<z>
compositeChange;<z>
(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {<z>
();<z>
<SNode>() {<z>
it) {<z>
;<z>
>() {<z>
String select(SNode it) {<z>
it, "name");<z>
true)) {<z>
), "jetbrains.mps.build.mps.structure.GeneratorInternal_BuildMps_Module", null);<z>
;<z>
result).addElement(loopnode);<z>
return result;<z>
, CompilationUnit cuNode) {<z>
;<z>
; i++) {<z>
searchResults[i], cuNode);<z>
)<z>
result.add(node);<z>
size()]);<z>
, DMType specialization) {<z>
super();<z>
this.specializedEntity = specializedEntity;<z>
;<z>
;<z>
URI> getChildren() {<z>
= new ArrayList<URI>();<z>
for (URI childURI : childrenURIs)<z>
childURI, getLocation()));<z>
return result;<z>
.SocialActivityLimit[] findByUserId_PrevAndNext(<z>
,<z>
orderByComparator)<z>
exception.SystemException,<z>
com.liferay.portlet.social.NoSuchActivityLimitException {<z>
)<z>
,<z>
orderByComparator);<z>
( int federateHandle )<z>
)null );<z>
void init() {<z>
int four = displayUtils.getDIP(4);<z>
);<z>
.WRAP_CONTENT);<z>
eight);<z>
;<z>
.setOrientation(LinearLayout.HORIZONTAL);<z>
, 0, 0);<z>
LayoutParams.WRAP_CONTENT);<z>
;<z>
.weight = 1.0f;<z>
0, 0, 0, 0);<z>
= new TextView(getContext());<z>
setMinHeight(displayUtils.getDIP(36));<z>
.setGravity(Gravity.CENTER_VERTICAL);<z>
, 14);<z>
editText.setBackgroundDrawable(makeTextViewBackground());<z>
;<z>
editTextLayoutParams);<z>
four);<z>
;<z>
(MQTTFrame command) throws IOException {<z>
) {<z>
+ command);<z>
n = next;<z>
!= null) {<z>
;<z>
stoppedWebapps,<z>
) throws AxisFault {<z>
;<z>
if (started) {<z>
.getWebappFile().getName();<z>
.remove(webappFileName);<z>
WebApplicationsHolder webappsHolder = getWebappsHolder();<z>
WebApplication> startedWebapps = webappsHolder.getStartedWebapps();<z>
(webappFileName, webapp);<z>
catch (CarbonException e) {<z>
String msg = "Cannot start webapp " + webapp;<z>
error(msg, e);<z>
(msg, e);<z>
{<z>
Application.make(<z>
Functions.type_listToType), list});<z>
Iterator<Representation> resultIt,<z>
Program<Object> program,<z>
Set<String> selectedFields,<z>
EntityhubLDPath ldPath,<z>
AbstractBackend backend,<z>
{<z>
<Representation>();<z>
while(resultIt.hasNext()){<z>
Representation rep = resultIt.next();<z>
;<z>
)), program);<z>
(String selected : selectedFields){<z>
rep.get(selected);<z>
if(values != null){<z>
values.hasNext()){<z>
values.next());<z>
transformed);<z>
return transformedResults;<z>
doc) {<z>
("mailingList");<z>
() > 0) {<z>
Element) mailingListNodes.item(0);<z>
if (oldMailingListElement != null) {<z>
String mailingList = oldMailingListElement.getTextContent();<z>
.removeChild(oldMailingListElement);<z>
("org.eclipse.skalli.model.core.Project");<z>
) > 0) {<z>
;<z>
.createElement("mailingList");<z>
.setTextContent(mailingList);<z>
projectElement.appendChild(newMailingListElement);<z>
Mascot mascot) throws VariableException {<z>
mascot);<z>
());<z>
));<z>
{<z>
getEncoded();<z>
;<z>
<encoded.length; i++) {<z>
[i];<z>
hash;<z>
e) {<z>
;<z>
useNewPage, IWorkbenchPreferenceContainer pageContainer) {<z>
fPageContainer= pageContainer;<z>
getWorkspace().getRoot();<z>
;<z>
useNewPage;<z>
pageToShow;<z>
;<z>
;<z>
= null;<z>
;<z>
;<z>
BuildPathAdapter adapter= new BuildPathAdapter();<z>
[] buttonLabels= new String[] {<z>
,<z>
.BuildPathsBlock_classpath_down_button,<z>
.BuildPathsBlock_classpath_top_button,<z>
NewWizardMessages.BuildPathsBlock_classpath_bottom_button,<z>
,<z>
.BuildPathsBlock_classpath_uncheckall_button<z>
new CPListLabelProvider());<z>
);<z>
fClassPathList.setLabelText(NewWizardMessages.BuildPathsBlock_classpath_label);<z>
setUpButtonIndex(IDX_UP);<z>
;<z>
;<z>
IDX_UNSELECT_ALL);<z>
new StringButtonDialogField(adapter);<z>
.setButtonLabel(NewWizardMessages.BuildPathsBlock_buildpath_button);<z>
adapter);<z>
(NewWizardMessages.BuildPathsBlock_buildpath_label);<z>
StatusInfo();<z>
();<z>
;<z>
;<z>
getRESTController(HttpServletRequest request, HttpServletResponse response) {<z>
.getPerson(request);<z>
LayoutPortlet>();<z>
request);<z>
();<z>
= upm.getUserProfile();<z>
(person, profile);<z>
();<z>
("channel");<z>
getLength(); i++) {<z>
);<z>
;<z>
.getNodeValue());<z>
getNodeValue());<z>
));<z>
"fname").getNodeValue());<z>
def.getParameter("iconUrl");<z>
if (iconParam != null) {<z>
getValue());<z>
UrlType.RENDER);<z>
portalUrlBuilder.getTargetPortletWindowId();<z>
if (targetPortletWindowId != null) {<z>
IPortletUrlBuilder portletUrlBuilder = portalUrlBuilder.getPortletUrlBuilder(targetPortletWindowId);<z>
MAXIMIZED);<z>
getUrlString());<z>
portlets.add(portlet);<z>
Exception e) {<z>
;<z>
ModelAndView mv = new ModelAndView();<z>
portlets);<z>
);<z>
;<z>
Exception e) {<z>
"Error retrieving user layout document", e);<z>
null;<z>
int inLen) {<z>
inLen < 0) {<z>
0;<z>
bytesBuffered;<z>
&& paddingType != PAD_NONE) {<z>
- 1)));<z>
return result;<z>
OWLNamedIndividual> getIndividuals(OWLClassExpression owlClass) {<z>
null) {<z>
Collections.emptySet();<z>
{<z>
synchronized (reasonerSyncToken) {<z>
owlClass, false).getFlattened();<z>
(String[] args) {<z>
getInstance();<z>
println("Saving public timeline.");<z>
.mkdir();<z>
();<z>
status : statuses) {<z>
.getRawJSON(status);<z>
"statuses/" + status.getId() + ".json";<z>
, fileName);<z>
());<z>
;<z>
;<z>
} catch (IOException ioe) {<z>
);<z>
));<z>
} catch (TwitterException te) {<z>
printStackTrace();<z>
("Failed to get timeline: " + te.getMessage());<z>
exit(-1);<z>
{<z>
t) {<z>
?>>() {<z>
raw_type<?> apply() {<z>
> arg$3340 = Analyzer.cast(t);<z>
== arg$3340)) {<z>
return null;<z>
))<z>
arg$3340.tag()) {<z>
:<z>
)) {<z>
.get1());<z>
raw_type<?>>() {<z>
.raw_type<?> t1;<z>
str, hashTable)));<z>
() {<z>
TypicalTypes.raw_type<?>>() {<z>
str, nodet, hashTable));<z>
{<z>
cast(nodet);<z>
: ensureNodeType.apply(t1));<z>
));<z>
:<z>
.match$3338(arg$3340)) {<z>
;<z>
(true) {<z>
t) ? null : nodet);<z>
return null;<z>
);<z>
) throws Exception<z>
;<z>
return "input";<z>
String toString() {<z>
()) return super.toString();<z>
));<z>
result.append(" (mixed: ");<z>
append(mixed);<z>
(", accesskey: ");<z>
result.append(accesskey);<z>
.append(", charset: ");<z>
(charset);<z>
.append(", class: ");<z>
;<z>
append(", href: ");<z>
.append(href);<z>
.append(", hreflang: ");<z>
;<z>
(", id: ");<z>
);<z>
result.append(", lang: ");<z>
;<z>
", rel: ");<z>
append(rel);<z>
.append(", rev: ");<z>
);<z>
append(", space: ");<z>
;<z>
result.append(", style: ");<z>
append(style);<z>
", tabindex: ");<z>
append(tabindex);<z>
", title: ");<z>
;<z>
(", type: ");<z>
;<z>
')');<z>
();<z>
, boolean value)<z>
StringBuilder buf = new StringBuilder();<z>
"<input type=\"checkbox\"");<z>
(name).append("\"");<z>
) {<z>
? " checked=\"checked\"" : " checked");<z>
.append(getCloseBrace());<z>
toString();<z>
operationDesc)<z>
{<z>
);<z>
.getEndpointDescription();<z>
=<z>
.getMarshalDesc(endpointDesc);<z>
(operationDesc,<z>
message);<z>
t;<z>
) {<z>
(e);<z>
value) {<z>
.valueOf(value));<z>
);<z>
writeFileHeader()<z>
if(dirty){<z>
;<z>
ds = new DataOutputStream(bs);<z>
writeInt(totalNodes);<z>
rootIndex);<z>
-1)<z>
Node.NOT_DEFINED);<z>
0; i <= topIdx; i++)<z>
(S[i]);<z>
;<z>
.flush();<z>
flush();<z>
;<z>
toByteArray());<z>
= false;<z>
Exception e){<z>
);<z>
IExceptionHandler) manager.getRequiredInterface("IExceptionHandler");<z>
;<z>
(IMenuManager viewMenu) {<z>
(!fMultipleSelection) {<z>
;<z>
(fSettings.getBoolean(SHOW_STATUS_LINE));<z>
);<z>
FullyQualifyDuplicatesAction();<z>
(fSettings.getBoolean(FULLY_QUALIFY_DUPLICATES));<z>
);<z>
null) {<z>
,<z>
(),<z>
{<z>
{<z>
= (IWorkingSet)event.getNewValue();<z>
())) {<z>
createWorkspaceScope();<z>
(null);<z>
else {<z>
;<z>
;<z>
, true);<z>
;<z>
;<z>
) {<z>
));<z>
(memento);<z>
WorkbenchException e) {<z>
IWorkingSet ws= fFilterActionGroup.getWorkingSet();<z>
)) {<z>
.createWorkspaceScope();<z>
setText(null);<z>
} else {<z>
true);<z>
getLabel());<z>
fFilterActionGroup.fillViewMenu(viewMenu);<z>
, int y) {<z>
if (dragUnderway) {<z>
;<z>
isContinuousLayout()) {<z>
);<z>
();<z>
.getPredefinedCursor(Cursor.DEFAULT_CURSOR));<z>
static TiffAscii getBeamMetadata(final Product product) {<z>
stringWriter = new StringWriter();<z>
;<z>
);<z>
writer.close();<z>
().toString());<z>
public File getOutputFile( File inputFile ) {<z>
;<z>
retval.getPath() );<z>
retval;<z>
e ) {<z>
printStackTrace();<z>
;<z>
;<z>
line) throws GeneratorException {<z>
this.content = line;<z>
preCompile();<z>
{<z>
.getShell(),<z>
,<z>
) null,<z>
QUESTION,<z>
new String[] { IDialogConstants.YES_LABEL,<z>
NO_LABEL }, 0);<z>
.open() == 0;<z>
final int offset) {<z>
{<z>
) {<z>
;<z>
(Object object)<z>
== null) {<z>
return false;<z>
if (object == this) {<z>
;<z>
) {<z>
return false;<z>
(WikiBotListenerData) object;<z>
EqualsBuilder()<z>
equals(object))<z>
), rhs.getReference())<z>
.isEquals();<z>
copy(InputStream in, OutputStream out)<z>
{<z>
] buf = new byte[BUF_SIZE];<z>
len = 0;<z>
(buf, 0, BUF_SIZE);<z>
) {<z>
(buf, 0, len);<z>
} else {<z>
while (true);<z>
e) {<z>
e);<z>
] getPatrolDownRate() {<z>
)) {<z>
(ptz.ptz_patrol_down_rate) };<z>
} else {<z>
("Not connected.");<z>
;<z>
Control createDialogArea(Composite parent) {<z>
Composite) super.createDialogArea(parent);<z>
);<z>
verticalSpacing = 3;<z>
.horizontalSpacing = 3;<z>
3;<z>
3;<z>
SWT.NONE);<z>
false));<z>
1));<z>
Label(compositeHead, SWT.NONE);<z>
, 1));<z>
, 0, 56, 15);<z>
lblNewLabel.setText(Messages.DBLoginDialog_0);<z>
READ_ONLY);<z>
);<z>
.addSelectionListener(new SelectionAdapter() {<z>
e) {<z>
INSERT;<z>
(null);<z>
;<z>
);<z>
DBDefine.userDBValues()) {<z>
.getDBToString());<z>
dbDefine.getDBToString(), dbDefine);<z>
select(2);<z>
SWT.NONE);<z>
1, false));<z>
, false, 1, 1));<z>
.getUserGroup(SessionManager.getSeq());<z>
{<z>
logger.error("get group info", e1);<z>
(null);<z>
;<z>
return container;<z>
()<z>
if (_next != null)<z>
return _next;<z>
null; ptr = ptr._parent) {<z>
!= null)<z>
return ptr._next;<z>
null;<z>
{<z>
r = (Recipe) command;<z>
(r);<z>
+ r.getTitle());<z>
());<z>
.getId(r)));<z>
(recipeManager.getId(r)));<z>
;<z>
;<z>
(LinkedNode<ST> node, ST value)<z>
null) {<z>
(node.value() == value) {<z>
true;<z>
.next();<z>
return false;<z>
loadConfiguration(String url) {<z>
result = null;<z>
;<z>
if (debug)<z>
);<z>
;<z>
)<z>
.out.println(" loaded");<z>
(IOException e) {<z>
)<z>
.out.println(" not found or not read");<z>
;<z>
Composite composite) {<z>
addRemoveFinalCheckbox= addAllowSettersForFinalslCheckbox(composite);<z>
.FILL_HORIZONTAL));<z>
(composite);<z>
);<z>
);<z>
;<z>
) throws JavaModelException {<z>
searchForTypes(unit, missingTypes);<z>
missingTypesNoChoiceRequired = new ArrayList<TypeNameMatch>();<z>
();<z>
ISourceRange>();<z>
missingTypes.values()) {<z>
) {<z>
));<z>
(data.range);<z>
) {<z>
);<z>
][]);<z>
;<z>
length > 0) {<z>
0]));<z>
else {<z>
;<z>
if (chosen != null) {<z>
+ chosen.length];<z>
;<z>
) {<z>
] = typeNameMatch.getType();<z>
{<z>
).getType();<z>
typeMatches;<z>
else {<z>
];<z>
public void close() throws IOException {<z>
;<z>
;<z>
"Client is closed");<z>
) {<z>
close();<z>
.info("Record reader closed.");<z>
) throws CoreException {<z>
ITextFileBufferManager manager= FileBuffers.getTextFileBufferManager();<z>
();<z>
monitor.beginTask("", 7);<z>
buffer= null;<z>
, new SubProgressMonitor(monitor, 1));<z>
path, LocationKind.IFILE);<z>
();<z>
;<z>
(CHANGED_REGION_POSITION_CATEGORY);<z>
document.addPositionUpdater(updater);<z>
= new Position[changedRegions.length];<z>
; i++) {<z>
.getLength());<z>
, position);<z>
= position;<z>
(BadLocationException e) {<z>
throw wrapBadLocationException(e);<z>
) {<z>
;<z>
new SubProgressMonitor(monitor, 5));<z>
;<z>
i++) {<z>
;<z>
(!position.isDeleted())<z>
position.getLength()));<z>
result.size()]);<z>
} finally {<z>
(updater);<z>
removePositionCategory(CHANGED_REGION_POSITION_CATEGORY);<z>
} catch (BadPositionCategoryException e) {<z>
throw wrapBadPositionCategoryException(e);<z>
finally {<z>
)<z>
SubProgressMonitor(monitor, 1));<z>
done();<z>
compare( Multiplicity obj1,<z>
Multiplicity obj2 ) {<z>
if (obj1 instanceof UnlimitedMultiplicity) {<z>
(obj2);<z>
UnlimitedMultiplicity) {<z>
);<z>
IntervalMultiplicity) {<z>
getMinimum() - obj2.getMinimum();<z>
.getMaximum();<z>
instanceof IntervalMultiplicity) {<z>
!= 0) {<z>
diffInMinimum;<z>
compareFlags(obj2);<z>
{<z>
return diffInMinimum;<z>
{<z>
diffInMaximum;<z>
return 1;<z>
(obj1 instanceof RangeMultiplicity) {<z>
{<z>
, obj1);<z>
);<z>
obj2.getMaximum();<z>
) {<z>
;<z>
diffInMaximum != 0) {<z>
;<z>
;<z>
RangeMultiplicity r2 = (RangeMultiplicity)obj2;<z>
;<z>
.iterator();<z>
()) {<z>
()) {<z>
return 1;<z>
= (IntervalMultiplicity)r1Iter.next();<z>
= (IntervalMultiplicity)r2Iter.next();<z>
= r1Interval.compareTo(r2Interval);<z>
0) {<z>
;<z>
return obj1.compareFlags(obj2);<z>
new IllegalArgumentException(<z>
.getString("Multiplicity.The_multiplicity_object_is_not_a_known_subclass", obj1));<z>
() {<z>
;<z>
null) return;<z>
();<z>
size(); i++) {<z>
get(i));<z>
;<z>
).removeHeader("Cookie");<z>
"Cookie", modifiedCookieHeaders);<z>
ReplicaSetNode findMaster() {<z>
ReplicaSetNode node : all) {<z>
())<z>
;<z>
null;<z>
public TidyTree() {<z>
();<z>
;<z>
d_layout);<z>
place) {<z>
.GROOVY1_8)) {<z>
return null;<z>
place.getParent().getParent();<z>
) return null;<z>
parent.getParent();<z>
) {<z>
getDeclaredType();<z>
instanceof GrAssignmentExpression) {<z>
GrAssignmentExpression assignment = (GrAssignmentExpression)pparent;<z>
;<z>
lvalue = assignment.getLValue();<z>
rvalue = assignment.getRValue();<z>
== rvalue && optoken == GroovyTokenTypes.mASSIGN) {<z>
;<z>
(pparent instanceof GrApplicationStatement) {<z>
;<z>
(ppparent instanceof GrAssignmentExpression) {<z>
= (GrAssignmentExpression)ppparent;<z>
;<z>
();<z>
rvalue = assignment.getRValue();<z>
== GroovyTokenTypes.mASSIGN) {<z>
();<z>
return null;<z>
NiftyRenderDeviceProxy renderDeviceProxy) {<z>
isInactive()) {<z>
renderDeviceProxy.reset();<z>
true;<z>
(); i++) {<z>
;<z>
) && (isActive(e))) {<z>
renderDeviceProxy);<z>
;<z>
{<z>
staxenv );<z>
staxenv.featureListener;<z>
, true);<z>
),<z>
;<z>
boolean isAcceptableModifierKey(int keyCode) {<z>
) {<z>
.KEYCODE_ALT_LEFT:<z>
KEYCODE_ALT_RIGHT:<z>
:<z>
.KEYCODE_SHIFT_RIGHT:<z>
true;<z>
false;<z>
getClassMethodCache(Class declaringClass)<z>
== null)<z>
;<z>
declaringClass);<z>
){<z>
CacheMap(150);<z>
mapForClass);<z>
;<z>
String[] tags,<z>
AddToMyBoxListener listener) {<z>
{<z>
public void run() {<z>
, folderId, tags);<z>
new Runnable() {<z>
{<z>
;<z>
);<z>
final IOException e) {<z>
(new Runnable() {<z>
{<z>
);<z>
});<z>
);<z>
(TObjectProcedure<V> arg0)<z>
_writeLock.lock();<z>
_tempLocksDisable = true;<z>
arg0);<z>
_tempLocksDisable = false;<z>
();<z>
(String guid) {<z>
;<z>
(db.getConnection());<z>
);<z>
, guid);<z>
);<z>
(!check)<z>
);<z>
next()) {<z>
(0) != null) {<z>
(0));<z>
) {<z>
null;<z>
;<z>
public void scheduleProgressMessageRefresh() {<z>
.RUNNING<z>
!= Job.RUNNING)<z>
);<z>
) {<z>
download = event.getDownload();<z>
) downloadDataMap.get(download);<z>
;<z>
(download.isComplete()) {<z>
).getLastScrapeResult();<z>
numPeers = sr.getNonSeedCount();<z>
0) {<z>
return true;<z>
return false;<z>
() {<z>
) {<z>
loadImageFromScreen();<z>
} else {<z>
;<z>
;<z>
int offset, int length) throws IOException<z>
.getMaxIdleTime();<z>
if (_buffer==null)<z>
);<z>
)<z>
);<z>
bufferPut(opcode, blockFor);<z>
opcode))<z>
7 + 1;<z>
> 0; --i)<z>
)));<z>
;<z>
length), blockFor);<z>
;<z>
0)<z>
? remaining : _buffer.space();<z>
- remaining), chunk);<z>
-= chunk;<z>
.space() > 0)<z>
isLengthFrame(opcode))<z>
put((byte)0xFF);<z>
();<z>
;<z>
0)<z>
!isLengthFrame(opcode))<z>
((byte)0xFF);<z>
);<z>
static int getArgumentsAndReturnSizes(final String desc) {<z>
int n = 1;<z>
c = 1;<z>
while ( true ) {<z>
);<z>
{<z>
c );<z>
== 'J' ? 2 : 1));<z>
( car == 'L' ) {<z>
( c++ ) != ';' ) {<z>
1;<z>
} else if ( car == '[' ) {<z>
) == '[' ) {<z>
++c;<z>
( car == 'D' || car == 'J' ) {<z>
;<z>
|| car == 'J' ) {<z>
2;<z>
{<z>
;<z>
Object source, final T o) {<z>
ObjectChangeListener<T> listener : listeners) {<z>
listener.onObjectChanged(source, o);<z>
[] args )<z>
name, args );<z>
)<z>
= null;<z>
);<z>
getLocalPort( );<z>
IOException e )<z>
null )<z>
);<z>
catch ( IOException e )<z>
return -1;<z>
() throws RecognitionException {<z>
stackSize = keepStackSize();<z>
.backtracking==0 ) {<z>
().getAttributesAssignment_3_1());<z>
;<z>
1);<z>
{<z>
1;<z>
) {<z>
case 1 :<z>
FollowSets002.FOLLOW_rule__SupplementReport__AttributesAssignment_3_1_in_rule__SupplementReport__Group_3__1__Impl67037);<z>
;<z>
;<z>
;<z>
loop178;<z>
(true);<z>
if ( state.backtracking==0 ) {<z>
.getSupplementReportAccess().getAttributesAssignment_3_1());<z>
) {<z>
(re);<z>
input,re);<z>
stackSize);<z>
void processMXRecord(MXRecord mx) {<z>
getPriority());<z>
().toString());<z>
: addresses) {<z>
IPv4Address) {<z>
address);<z>
{<z>
);<z>
,25);<z>
), locator, "SMTP", null);<z>
.setService(service);<z>
();<z>
UnknownHostException e) {<z>
;<z>
{<z>
+mx.getTarget());<z>
) {<z>
= tipoDatoAdicional.orden;<z>
nombre;<z>
this.descripcion = tipoDatoAdicional.descripcion;<z>
Thread newThread(Runnable r) {<z>
);<z>
if (t.isDaemon())<z>
);<z>
.getPriority() != priority)<z>
priority);<z>
;<z>
{<z>
response, handler);<z>
= applicationSecurityManager.getUser();<z>
= new ArrayList<Section>();<z>
()) {<z>
= new HashSet<GrantedAuthority>();<z>
)) {<z>
;<z>
.asList(<z>
(controller)));<z>
: allowed) {<z>
section)) {<z>
.add(section);<z>
, filtered);<z>
return true;<z>
File p) throws IOException {<z>
new FileInputStream(p);<z>
).size()];<z>
0, r.length);<z>
;<z>
finally {<z>
);<z>
, String connectionManagerSCPD) throws InvalidDescriptionException<z>
;<z>
(description, contentDirectorySCPD, connectionManagerSCPD);<z>
AbstractToken createFollower(int index, IEObjectConsumer inst) {<z>
) {<z>
inst);<z>
default: return null;<z>
)<z>
SystemException {<z>
uuid, groupId);<z>
);<z>
) {<z>
) {<z>
) idToMember.get(id);<z>
if (next == null) {<z>
idx = members.indexOf(next);<z>
0) || (idx == currentIdx)) {<z>
currentIdx = idx;<z>
checkVisible();<z>
.removeAll();<z>
BorderLayout.CENTER);<z>
)<z>
String locationName = "";<z>
)<z>
currentLocation);<z>
;<z>
public String getCopyrightFieldLiteral()<z>
())<z>
copyright = getCopyrightText();<z>
);<z>
"null";<z>
Faq faq) {<z>
()) {<z>
);<z>
put("faq.reponse", faq.reponse);<z>
"Faqs/admin.html");<z>
reponse);<z>
) - 1;<z>
save();<z>
();<z>
Eregi createEregi(Value value) {<z>
regexpStr;<z>
|| value.isBoolean()) {<z>
;<z>
(!value.isString()) {<z>
toLongValue().toStringValue();<z>
{<z>
= value.toStringValue();<z>
(regexpStr);<z>
if (eregi == null) {<z>
;<z>
(cleanPattern);<z>
;<z>
return eregi;<z>
catch (IllegalRegexpException e) {<z>
(e);<z>
inheritParentParameters(Classifier parentA, Classifier parentB,<z>
Classifier child) {<z>
(MlUCSClassifierData) child<z>
());<z>
parentAData = ((MlUCSClassifierData) parentA<z>
;<z>
MlUCSClassifierData parentBData = ((MlUCSClassifierData) parentB<z>
.getUpdateDataObject());<z>
i)<z>
;<z>
2;<z>
pointMap) {<z>
);<z>
) {<z>
(path.points, pointMap);<z>
;<z>
1)){<z>
(path);<z>
= newPaths;<z>
.multiPaths){<z>
(PdfPath path: mp.paths) {<z>
);<z>
IBinding binding, long localToFile) throws CoreException {<z>
null;<z>
insertIntoIndex= null;<z>
if (binding instanceof IField) {<z>
instanceof IPDOMMemberOwner)<z>
;<z>
{<z>
IVariable var= (IVariable) binding;<z>
var);<z>
(binding instanceof IFunction) {<z>
= (IFunction) binding;<z>
parent, func);<z>
binding instanceof ICompositeType) {<z>
) binding);<z>
IEnumeration) {<z>
;<z>
instanceof IEnumerator) {<z>
instanceof IEnumeration;<z>
, parent, (IEnumerator) binding);<z>
;<z>
insertIntoIndex == null) {<z>
= this;<z>
if (binding instanceof ITypedef) {<z>
)binding);<z>
{<z>
.setLocalToFileRec(localToFile);<z>
;<z>
null) {<z>
;<z>
&& insertIntoIndex != this) {<z>
(pdomBinding);<z>
;<z>
) {<z>
)<z>
;<z>
super.remove();<z>
{<z>
)) {<z>
newSubscription))<z>
());<z>
msgs = null;<z>
() != null)<z>
(msgs);<z>
newSubscription != null)<z>
msgs);<z>
basicSetSubscription(newSubscription, msgs);<z>
);<z>
else if (eNotificationRequired())<z>
));<z>
(CharSegment cb) {<z>
(cb == null)<z>
false;<z>
strlen = cb._length;<z>
_length < strlen)<z>
false;<z>
] buffer = _buffer;<z>
int offset = _offset + _length - strlen;<z>
_buffer;<z>
_offset;<z>
--strlen >= 0) {<z>
!= cbBuffer[cbOffset + strlen])<z>
return false;<z>
;<z>
modelItem ) throws Exception<z>
;<z>
Tools.isEmpty( gsoapDir ) )<z>
.showErrorMessage( "GSoap directory must be set in global preferences" );<z>
ArrayList<ProcessBuilder>();<z>
( WSDL2H ) )<z>
;<z>
( values, modelItem );<z>
wsdl2hArgs.getArgs() );<z>
WSDL2H_OUTPUT ) ) ) );<z>
builders.add( wsdl2hBuilder );<z>
) )<z>
ProcessBuilder soapcpp2Builder = new ProcessBuilder();<z>
;<z>
);<z>
);<z>
;<z>
() )<z>
( "Nothing to run!" );<z>
, "GSoap",<z>
modelItem ) );<z>
, LatLonRect boundingBox) {<z>
()+"-subset");<z>
= from;<z>
;<z>
viewer,<z>
{<z>
bcl = new BuildCaList(viewer, offset);<z>
new ArrayList<ICompletionProposal>();<z>
;<z>
activChar == '\n') {<z>
);<z>
;<z>
) == 0) {<z>
;<z>
;<z>
);<z>
){<z>
.setStatusMessage("Add Site");<z>
);<z>
'~'){<z>
setStatusMessage("Add State");<z>
);<z>
buildStateList(result);<z>
activChar == '%'){<z>
("Kappa Directive");<z>
.buildPrecentCompletionProposals(result);<z>
1) {<z>
return NO_COMPLETIONS;<z>
} else {<z>
master.setStatusMessage("Agent List");<z>
);<z>
bcl.getAgentPrefix();<z>
activChar == '>') {<z>
.getRightSide();<z>
(right.length() > 0) {<z>
right, right);<z>
, prefix);<z>
size() == 0)<z>
NO_COMPLETIONS;<z>
);<z>
pager) throws KalturaApiException {<z>
);<z>
addStringIfNotNull("entryId", entryId);<z>
));<z>
.queueServiceCall("baseentry", "listFlags", kparams);<z>
)<z>
return null;<z>
);<z>
.create(resultXmlElement);<z>
> getEditor() {<z>
{<z>
getName());<z>
;<z>
getExpressionDirectorCode() {<z>
requiresExpressionDirector()) {<z>
ced = new CExpressionDirector(this);<z>
ced.getDirectorsCode();<z>
getMessageCode();<z>
.getIndent();<z>
} else {<z>
"";<z>
, boolean inheritPermission<z>
throws FileNotFoundException {<z>
, newNode, null, inheritPermission) == null)<z>
null;<z>
return newNode;<z>
{<z>
)<z>
"sWindowManager";<z>
= "mWindowManager";<z>
, Entity par5Entity, float par6)<z>
if (oldbreaking){<z>
, par3, par4, par5Entity, par6);<z>
final String parentName, final String childName) throws ChoobException<z>
;<z>
UserNode(childName, true);<z>
addNodeToNode(parent, child);<z>
) {<z>
AtcoCifElement.Type.JOURNEY_HEADER);<z>
.Type.JOURNEY_DATE_RUNNING);<z>
.Type.JOURNEY_ORIGIN);<z>
;<z>
JOURNEY_DESTINATION);<z>
;<z>
("QB", AtcoCifElement.Type.ADDITIONAL_LOCATION);<z>
.VEHICLE_TYPE);<z>
UNKNOWN);<z>
, AtcoCifElement.Type.OPERATOR);<z>
("QQ", AtcoCifElement.Type.UNKNOWN);<z>
UNKNOWN);<z>
("QD", AtcoCifElement.Type.ROUTE_DESCRIPTION);<z>
Type.UNKNOWN);<z>
);<z>
= Calendar.getInstance();<z>
YEAR, 2);<z>
_maxServiceDate = c.getTime();<z>
);<z>
createCache() {<z>
return new ILoggingEventCache() {<z>
ArrayList<ILoggingEvent>();<z>
{<z>
(events);<z>
= null;<z>
return list;<z>
) {<z>
;<z>
CharSequence getURL() {<z>
));<z>
(url, parameters);<z>
return mergedUrl.toString();<z>
put(final S t) {<z>
t.id >= mapById.length) {<z>
.id * 2);<z>
t;<z>
t);<z>
throws Exception<z>
)input.readObject();<z>
DivestRequest>)input.readObject();<z>
= new ParserState() {<z>
{<z>
+yyTop]));<z>
;<z>
String getCachedPIN(HBCIPassport passport) throws Exception<z>
);<z>
if (key == null)<z>
return null;<z>
;<z>
Settings.getCachePin())<z>
get(key);<z>
(passport instanceof HBCIPassportPinTan))<z>
key);<z>
)<z>
Base64.decode(s);<z>
.info("pin loaded from wallet");<z>
);<z>
null)<z>
bis = new ByteArrayInputStream(data);<z>
new ByteArrayOutputStream();<z>
,bos);<z>
toString();<z>
0)<z>
return s;<z>
;<z>
String apiKey, String sharedSecret, Transport transportAPI) {<z>
apiKey = apiKey;<z>
= sharedSecret;<z>
transportAPI = transportAPI;<z>
)<z>
endEffect(effect);<z>
);<z>
F> data, String negLabel)<z>
super(classifier, data, negLabel);<z>
new LabeledChunkIdentifier();<z>
negLabel);<z>
TripleCollection graph) {<z>
= OWLManager.createOWLOntologyManager();<z>
));<z>
(graph, mgr);<z>
(EObject domainElement, GeneratedDiagramPlugin genPlugin) {<z>
getActivatorQualifiedClassName();<z>
loadGeneratedClass(pluginClassName);<z>
("DIAGRAM_PREFERENCES_HINT");<z>
field.get(null);<z>
);<z>
} catch (Exception ex) {<z>
fail(ex.toString());<z>
return null;<z>
evaluate(ICharacterScanner scanner) {<z>
= scanner.read();<z>
(isOperator((char) character)) {<z>
;<z>
);<z>
);<z>
return fToken;<z>
else {<z>
unread();<z>
return Token.UNDEFINED;<z>
protected void processRequest(EntityTransaction tx)<z>
RunJobFilter.JOB_KEY_PARAMETER_NAME);<z>
if (Utils.isNullOrEmpty(encodedJobKey)) {<z>
encodedJobKey);<z>
("Running mail job: {}", key);<z>
.find(key);<z>
) {<z>
);<z>
;<z>
job.setLastBackupTimestamp(new Date());<z>
) > 0) {<z>
) {<z>
job.getReportEmail())) {<z>
, resultsBuffer, job.getReportEmail());<z>
{<z>
"Error saving job. Backup will not be sent to user this time.");<z>
SM_FLY_TIME(int currentFp, int maxFp)<z>
.currentFp = currentFp;<z>
.maxFp = maxFp;<z>
World world, PlayerService playerService)<z>
.world = world;<z>
playerService;<z>
dispatchOptionsItemSelected(MenuItem item) {<z>
) {<z>
(); i++) {<z>
= mAdded.get(i);<z>
{<z>
f.onOptionsItemSelected(item)) {<z>
true;<z>
;<z>
String name,<z>
) {<z>
>();<z>
== null) {<z>
_indent + name + " <null>");<z>
return lines;<z>
!= null) {<z>
add(_indent + name);<z>
"{");<z>
" ";<z>
.connection_asn, "connection",<z>
;<z>
));<z>
_this.trunkMember, "trunkMember", indent));<z>
"}");<z>
lines;<z>
boolean equals(Object obj) {<z>
this == obj)<z>
return true;<z>
.equals(obj))<z>
false;<z>
obj.getClass())<z>
false;<z>
AtmosObjectImpl other = (AtmosObjectImpl) obj;<z>
null) {<z>
contentMetadata != null)<z>
;<z>
!contentMetadata.equals(other.contentMetadata))<z>
false;<z>
null) {<z>
systemMetadata != null)<z>
false;<z>
.systemMetadata))<z>
return false;<z>
== null) {<z>
null)<z>
return false;<z>
other.userMetadata))<z>
return false;<z>
return true;<z>
) {<z>
StringMessageBodyWriter) {<z>
return 0;<z>
return -1;<z>
, String fieldName, Object value) {<z>
, fieldName);<z>
field);<z>
);<z>
PatternRole patternRole) {<z>
editionPatternInstance);<z>
{<z>
, patternRole);<z>
;<z>
);<z>
{<z>
) != patternRole) {<z>
.warning("Called for register a new EditionPatternReference with an already existing EditionPatternReference with a different PatternRole");<z>
printUnprintedItems() {<z>
();<z>
printBarcodes(getUnprintedItems());<z>
clearUnprintedItems();<z>
IOException e) {<z>
);<z>
(DocumentException e) {<z>
println(e);<z>
uri) {<z>
;<z>
LdapUrl ldapUrl )<z>
;<z>
.setHost( parameter.getHost() );<z>
parameter.getPort() );<z>
() )<z>
:<z>
LDAPS:<z>
( false, X_ENCRYPTION, X_ENCRYPTION_LDAPS ) );<z>
case START_TLS:<z>
X_ENCRYPTION, X_ENCRYPTION_START_TLS ) );<z>
() )<z>
JNDI:<z>
X_NETWORK_PROVIDER_JNDI ) );<z>
APACHE_DIRECTORY_LDAP_API:<z>
add(<z>
false, X_NETWORK_PROVIDER, X_NETWORK_PROVIDER_APACHE_DIRECTORY_LDAP_API ) );<z>
) {<z>
= StringUtils.trimToNull(spec);<z>
spec == null) {<z>
new TabInvalidValueException("Invalid syntax for the study list: '" + spec + "'");<z>
"\\,");<z>
0) {<z>
;<z>
(accs);<z>
OutputStream outputstream)<z>
(outputstream == null)<z>
false;<z>
true;<z>
;<z>
outputstream;<z>
("GIF89a");<z>
(IOException _ex)<z>
;<z>
return g = flag;<z>
) {<z>
month, day);<z>
hour);<z>
;<z>
;<z>
getKeys( )<z>
]{<z>
PREF_DESCRIPTION<z>
return keys;<z>
{<z>
= new ArrayList<ChildBuilder>();<z>
get().getChilds()) {<z>
.existing(e));<z>
b;<z>
additive() throws QueryException {<z>
= multiplicative();<z>
!= null) {<z>
null;<z>
) break;<z>
, c);<z>
;<z>
rndClause(int depth) {<z>
depth);<z>
depth, length);<z>
= new ArrayList<Formula>();<z>
;<z>
i < length; ++i) {<z>
(i < propNum) {<z>
(0)));<z>
else {<z>
(rndSign(rndAtom(depth)));<z>
} while (repeatedAtoms(clauses));<z>
new FormulaComparator());<z>
f = null;<z>
: clauses) {<z>
f == null) {<z>
f = clause;<z>
else {<z>
f, clause);<z>
return f;<z>
expr) {<z>
.getValue();<z>
"null";<z>
;<z>
;<z>
expr);<z>
} catch (Exception e) {<z>
"%s (renderer threw %s)",<z>
());<z>
equals("")) {<z>
(value);<z>
{<z>
);<z>
.lastIndexOf('.');<z>
text.substring(index + 1);<z>
;<z>
return str;<z>
(ModelBiped model) {<z>
;<z>
ModelRenderer(model, 0, 0);<z>
;<z>
, 0, 13);<z>
);<z>
f)<z>
{<z>
) {<z>
"Could not write "+f.getName());<z>
));<z>
new Document();<z>
;<z>
YES, Field.Index.NOT_ANALYZED));<z>
, new FileReader(f)));<z>
);<z>
) throws QueueClosedException, TimeoutException {<z>
synchronized(mutex) {<z>
if(closed)<z>
;<z>
) + timeout;<z>
;<z>
) < end_time) {<z>
closed)<z>
QueueClosedException();<z>
end_time - current_time;<z>
wait(wait_time);<z>
catch(InterruptedException ex) {<z>
)<z>
QueueClosedException();<z>
removeInternal();<z>
new TimeoutException("timeout=" + timeout + "ms");<z>
retval;<z>
IMC imc) {<z>
();<z>
);<z>
(KEY_ALTURA, imc.getAltura());<z>
);<z>
());<z>
KEY_ID + " = ?",<z>
(imc.getId()) });<z>
void setContact( final ContactDTO contact )<z>
if( null != contact )<z>
= contact;<z>
);<z>
_contact.getLastName() );<z>
;<z>
.setText( "" );<z>
;<z>
_emailAddress.setText( "" );<z>
(DataBuffer db) {<z>
Object array = null;<z>
(db.getDataType()) {<z>
DataBuffer.TYPE_BYTE:<z>
(DataBufferByte) db).getBankData();<z>
.TYPE_USHORT:<z>
.getBankData();<z>
case DataBuffer.TYPE_SHORT:<z>
db).getBankData();<z>
DataBuffer.TYPE_INT:<z>
getBankData();<z>
TYPE_FLOAT:<z>
array = DataBufferUtils.getBankDataFloat(db);<z>
TYPE_DOUBLE:<z>
= DataBufferUtils.getBankDataDouble(db);<z>
);<z>
return array;<z>
) {<z>
this.parameters == null) {<z>
;<z>
this.parameters.length;<z>
[] selection) {<z>
= new ArrayList<Record>();<z>
).getChildren(parentNode);<z>
i++) {<z>
false;<z>
.getAttribute(Constants.ATTR_PICTURE_OR_UUID);<z>
)) {<z>
) {<z>
.getAttribute(Constants.ATTR_PICTURE_OR_UUID);<z>
(selPicture)) {<z>
found = true;<z>
!found) {<z>
add(selection[i]);<z>
missing;<z>
{<z>
atType2 == known2))<z>
;<z>
(atType2 == known1))<z>
true);<z>
) && (known2 == atomTypeX))<z>
return (true);<z>
== atomTypeX))<z>
;<z>
) && (known2 == atomTypeX))<z>
return (true);<z>
)<z>
;<z>
);<z>
.SuppressWarnings("all") boolean isBooleanValue() {<z>
get();<z>
))<z>
)<z>
.booleanValue.get();<z>
== null))<z>
;<z>
);<z>
value);<z>
return value.get();<z>
(Document document, String name)<z>
;<z>
(), name);<z>
element != null)<z>
;<z>
)<z>
text);<z>
property)<z>
property))<z>
return new String[0];<z>
get(property);<z>
];<z>
.toArray(array);<z>
) throws WorkflowException {<z>
= null;<z>
; i++) {<z>
{<z>
) questions.get(i);<z>
null) {<z>
,<z>
);<z>
content);<z>
;<z>
, Point3d point)<z>
provider);<z>
;<z>
cds[1].y);<z>
p);<z>
=aGridUtil.getYCellIndex(start);<z>
int cell=pIndex-startIndex+1;<z>
(domainId);<z>
(aFDSelection,type,value,cell);<z>
Exception {<z>
SctpMessage) {<z>
= (SctpMessage) msg;<z>
{<z>
true;<z>
format("Received SctpMessage is not complete, please add %s in " +<z>
.getSimpleName()));<z>
} else {<z>
return false;<z>
getSizeY()<z>
final Sequence sequence = sequenceChooser.getSelectedSequence();<z>
if (sequence != null)<z>
.getSizeY();<z>
0;<z>
) throws PdfException {<z>
actionType.equals(DOCUMENT_CLOSE) ||<z>
(WILL_SAVE) ||<z>
DID_SAVE) ||<z>
WILL_PRINT) ||<z>
.equals(DID_PRINT))) {<z>
("Invalid additional action type: " + actionType.toString());<z>
.get(PdfName.AA));<z>
null) {<z>
if (action == null)<z>
aa = new PdfDictionary();<z>
.AA, aa);<z>
markUsed(aa);<z>
)<z>
aa.remove(actionType);<z>
, action);<z>
, String[] kwds) {<z>
kwds.length > 0) {<z>
"deque() does not take keyword arguments");<z>
.length;<z>
> 1) {<z>
);<z>
== 0) {<z>
[0]);<z>
{<z>
> entityClass : map.keySet()) {<z>
) {<z>
;<z>
;<z>
isOnline, boolean dropStaleIndexes) throws IOException<z>
if (online.get() != isOnline)<z>
)<z>
);<z>
.getMode() == IndexerIoMode.READ_WRITE)<z>
offlineIndex.commit(true);<z>
);<z>
)<z>
);<z>
invokeOfflineIndex();<z>
.clear();<z>
;<z>
set(true);<z>
;<z>
true));<z>
merger != null)<z>
dispose();<z>
;<z>
cache, directoryManager,<z>
;<z>
getMode() == IndexerIoMode.READ_WRITE)<z>
);<z>
);<z>
if (dropStaleIndexes)<z>
indexes);<z>
online.set(false);<z>
online.get())<z>
"Index is already in OFFLINE mode.");<z>
{<z>
keepStackSize();<z>
;<z>
);<z>
;<z>
failed) return ;<z>
re) {<z>
reportError(re);<z>
;<z>
);<z>
) {<z>
project, "Introduce Field", editorContext);<z>
;<z>
init();<z>
String args[])<z>
= new XMLInterfaceForJDK13();<z>
[0], true);<z>
StandardPackageValidator();<z>
new Properties(), xmlI);<z>
verrors = new ArrayList();<z>
, verrors, false);<z>
(verrors.size() > 0)<z>
;<z>
[0] + " is not a valid XPDL package");<z>
ex)<z>
;<z>
;<z>
.User updateCreateDate(long userId,<z>
)<z>
liferay.portal.kernel.exception.PortalException,<z>
.kernel.exception.SystemException {<z>
_userLocalService.updateCreateDate(userId, createDate);<z>
seq) throws IllegalIDException, BioException, ChangeVetoException {<z>
)) {<z>
id, seq);<z>
else {<z>
;<z>
{<z>
(<z>
.BIOENTRYS,<z>
id, seq },<z>
null);<z>
firePreChangeEvent(ce);<z>
id, seq);<z>
firePostChangeEvent(ce);<z>
.EDAMSystemException, TException<z>
authenticationToken, adParameters);<z>
return recv_getAds();<z>
boolean activateController()<z>
)<z>
return false;<z>
);<z>
(PreferencesExt p) {<z>
, true, false);<z>
;<z>
CENTER);<z>
makeButtcon("netcdf", "Write index", false);<z>
) {<z>
(ActionEvent e) {<z>
= new Formatter();<z>
)) return;<z>
IOException e1) {<z>
;<z>
setText(f.toString());<z>
gotoTop();<z>
;<z>
;<z>
add(writeButton);<z>
() {<z>
(java.beans.PropertyChangeEvent e) {<z>
) {<z>
String) e.getNewValue();<z>
);<z>
;<z>
{<z>
null;<z>
== hm.getAccess()) {<z>
), hm.getIgnore());<z>
hm.getAccess()) {<z>
.PUBLIC);<z>
) {<z>
(), Modifier.PROTECTED);<z>
mtdMatcher;<z>
() {<z>
persister == null<z>
&& queryableCollection != null<z>
();<z>
() {<z>
FILE_NAME, ";")) {<z>
, new NPCPrototype(attributes));<z>
protected boolean grow(int minimumCapacity)<z>
modCount;<z>
0 : entryData.length;<z>
)<z>
V>> [] oldEntryData = entryData;<z>
);<z>
i < oldCapacity; ++i)<z>
V>> oldEList = oldEntryData[i];<z>
null)<z>
] entries = oldEList.data;<z>
= oldEList.size;<z>
0; j < size; ++j)<z>
;<z>
(entry.getHash());<z>
[index];<z>
null)<z>
index] = newList();<z>
add(entry);<z>
return true;<z>
return false;<z>
largeImageId,<z>
throws SystemException {<z>
largeImageId };<z>
;<z>
{<z>
= FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_LARGEIMAGEID,<z>
);<z>
{<z>
StringBundler query = new StringBundler(3);<z>
query.append(_SQL_SELECT_SHOPPINGITEM_WHERE);<z>
;<z>
ShoppingItemModelImpl.ORDER_BY_JPQL);<z>
sql = query.toString();<z>
= null;<z>
= openSession();<z>
);<z>
(q);<z>
);<z>
list = q.list();<z>
= list;<z>
ShoppingItem shoppingItem = null;<z>
(list.isEmpty()) {<z>
(FINDER_PATH_FETCH_BY_LARGEIMAGEID,<z>
);<z>
0);<z>
(shoppingItem);<z>
largeImageId)) {<z>
.putResult(FINDER_PATH_FETCH_BY_LARGEIMAGEID,<z>
finderArgs, shoppingItem);<z>
shoppingItem;<z>
) {<z>
);<z>
== null) {<z>
,<z>
finderArgs);<z>
);<z>
<?>) {<z>
;<z>
;<z>
Exception {<z>
), 15);<z>
println("ports = " + ports);<z>
5);<z>
println("ports = " + ports);<z>
void processExpired(ActivityState activityState) throws Exception {<z>
{<z>
processExpired(activityState);<z>
public static double get31LatitudeY(int tileY){<z>
1024f;<z>
= y < 0 ? -1 : 1;<z>
) * 180d / Math.PI;<z>
void initBoundElement(Object input, Object currentValue) {<z>
;<z>
if (currentValue != null) {<z>
new StructuredSelection(currentValue));<z>
(String key) {<z>
) {<z>
(!filter_.get(bucketIndex)) {<z>
false;<z>
;<z>
Object newValue)<z>
featureID)<z>
.TRANSITION__NAME:<z>
;<z>
LocationprovidertestPackage.TRANSITION__SOURCE:<z>
;<z>
:<z>
(Mode)newValue);<z>
.eSet(featureID, newValue);<z>
{<z>
)) return super.toString();<z>
toString());<z>
);<z>
;<z>
result.append(", status: ");<z>
append(status);<z>
(')');<z>
toString();<z>
newName) {<z>
= name;<z>
;<z>
))<z>
, name));<z>
() {<z>
) {<z>
return _autoDeployListeners;<z>
List<AutoDeployListener> autoDeployListeners =<z>
<AutoDeployListener>();<z>
getArray(<z>
AUTO_DEPLOY_LISTENERS);<z>
for (String autoDeployListenerClassName :<z>
{<z>
.isDebugEnabled()) {<z>
_log.debug("Instantiating " + autoDeployListenerClassName);<z>
autoDeployListener =<z>
InstanceFactory.newInstance(<z>
;<z>
autoDeployListener);<z>
) {<z>
e);<z>
;<z>
_autoDeployListeners;<z>
messageInputStream) {<z>
messageInputStream);<z>
);<z>
] firstThree = new byte[3];<z>
.read(firstThree);<z>
);<z>
equals(firstThree, JMX_BYTES) == false) {<z>
throw new IOException("Invalid leading bytes in header.");<z>
"Bytes Available %d", dis.available());<z>
version = dis.readByte();<z>
log.debugf("Chosen version 0x0%d", version);<z>
version == 0x00) {<z>
length = dis.readInt();<z>
[] versionBytes = new byte[length];<z>
;<z>
"UTF-8");<z>
log.debugf("Client version %s", clientVersion);<z>
, true);<z>
);<z>
executor);<z>
IOException e) {<z>
);<z>
} finally {<z>
IoUtils.safeClose(dis);<z>
public void open() throws ChannelException {<z>
trace("open() - entry");<z>
null) {<z>
new DatagramSocket();<z>
(SocketException e) {<z>
);<z>
{<z>
.open();<z>
.trace("open() - exit");<z>
Map result) {<z>
LinkedHashMap culData;<z>
LinkedHashMap> culArr;<z>
;<z>
;<z>
);<z>
;<z>
, "data", new ArrayList());<z>
culArr.isEmpty()) {<z>
= getFileName(result, "X");<z>
) {<z>
"Cultivar.CUL";<z>
{<z>
) + ".CUL";<z>
} catch (Exception e) {<z>
"Cultivar.CUL";<z>
);<z>
(arg0 + fileName);<z>
));<z>
= "";<z>
;<z>
); i++) {<z>
)) {<z>
), "header_info", "");<z>
).append("\r\n");<z>
;<z>
lastTitles).append("\r\n");<z>
, "").equals(lastTitles)) {<z>
;<z>
("\r\n");<z>
;<z>
toString());<z>
.toString());<z>
close();<z>
catch (IOException e) {<z>
;<z>
DeleteResponse delete( DeleteRequest deleteRequest ) throws LdapException<z>
deleteRequest == null )<z>
msg = "Cannot process a null deleteRequest";<z>
.debug( msg );<z>
new IllegalArgumentException( msg );<z>
= deleteAsync( deleteRequest );<z>
);<z>
)<z>
"Delete failed : timeout occurred" );<z>
LdapException( TIME_OUT_ERROR );<z>
== ResultCodeEnum.SUCCESS )<z>
"Delete successful : {}", delResponse );<z>
);<z>
return delResponse;<z>
( TimeoutException te )<z>
deleteFuture.isCancelled() )<z>
;<z>
"Del failed : timeout occurred" );<z>
throw new LdapException( TIME_OUT_ERROR, te );<z>
catch ( Exception ie )<z>
error( NO_RESPONSE_ERROR, ie );<z>
deleteFuture.isCancelled() )<z>
.getMessageId() );<z>
, ie );<z>
(Owner canAccess, Access accessLevel) {<z>
(accessLevel)) {<z>
.getKey())) {<z>
true;<z>
false;<z>
String faultString,<z>
error) {<z>
;<z>
{<z>
(ClientDetailsException) error).getParameters();<z>
ClientDetailsException) error).includeStacktrace()) {<z>
StringBuilder();<z>
getStackTrace()) {<z>
toString()).append("\n");<z>
stack.toString();<z>
error;<z>
return result;<z>
(EditorContext editorContext, SNode node) {<z>
editorContext, node);<z>
"Collection_o0ejdp_a0e0");<z>
, node));<z>
editorCell;<z>
{<z>
ImportTypeDialog.IMPORT_LINK;<z>
(dropOperation != DND.DROP_LINK))<z>
ImportTypeDialog.IMPORT_COPY;<z>
areOnlyFiles(resources))<z>
IMPORT_FILES_ONLY;<z>
mask;<z>
public void addPages(Wizard wizard) {<z>
(0, IHelpContextIds.TEMPLATE_BUILDER);<z>
.setTitle(PDETemplateMessages.BuilderTemplate_title);<z>
);<z>
);<z>
;<z>
parseHeader() throws IOException {<z>
current = this.lineBuf;<z>
size();<z>
) && count > 0) {<z>
.headerBufs.get(count - 1);<z>
int i = 0;<z>
< current.length()) {<z>
charAt(i);<z>
' ' && ch != '\t') {<z>
;<z>
maxLineLen = this.constraints.getMaxLineLength();<z>
.length() - i > maxLineLen) {<z>
("Maximum line length limit exceeded");<z>
;<z>
current.length() - i);<z>
{<z>
current);<z>
this.lineBuf = null;<z>
final RestChannel channel) {<z>
);<z>
.param("field"));<z>
new ActionListener<TermlistResponse>() {<z>
onResponse(TermlistResponse response) {<z>
RestXContentBuilder.restContentBuilder(request);<z>
);<z>
true);<z>
response);<z>
toArray());<z>
endObject();<z>
, OK, builder));<z>
} catch (Exception e) {<z>
e);<z>
void onFailure(Throwable e) {<z>
request, e));<z>
} catch (IOException e1) {<z>
("Failed to send failure response", e1);<z>
});<z>
{<z>
;<z>
;<z>
() {<z>
) {<z>
first = false;<z>
} else {<z>
.write(string);<z>
e) {<z>
new RuntimeException(e);<z>
request) {<z>
) {<z>
.getParameter(param);<z>
{<z>
orderStatusState.put(param, "Y");<z>
} else {<z>
);<z>
)) {<z>
param);<z>
.equals(value)) {<z>
(param, "Y");<z>
{<z>
orderTypeState.put(param, "N");<z>
keySet()) {<z>
;<z>
) {<z>
);<z>
} else {<z>
;<z>
;<z>
DataSource getDataSourcePoolingDataSource(<z>
DataSource dataSource,<z>
dataSourceName,<z>
,<z>
jdbcPassword)<z>
> key =<z>
.asList(<z>
);<z>
dataSourceMap.get(key);<z>
{<z>
return pooledDataSource;<z>
ConnectionFactory connectionFactory;<z>
) {<z>
new DataSourceConnectionFactory(<z>
;<z>
{<z>
new DataSourceConnectionFactory(dataSource);<z>
);<z>
Exception e) {<z>
.newInternal(<z>
")");<z>
key, pooledDataSource);<z>
dataSource;<z>
(String data, char toAdd) {<z>
= data;<z>
toAdd;<z>
;<z>
;<z>
{<z>
)<z>
camera_ = new CCCamera();<z>
return camera_;<z>
) {<z>
{<z>
player, "stockcraft.commands.stockhelp");<z>
{<z>
true;<z>
synchronized void acquireImages() {<z>
(!imagesAcquired) {<z>
: pods) {<z>
;<z>
(WAException e) {<z>
true;<z>
public final Vec3 solve33(Vec3 b){<z>
Vec3 x = new Vec3();<z>
, x);<z>
x;<z>
() {<z>
.alloc(Vector3f.class);<z>
= new float[1];<z>
disc);<z>
[0] += center.length();<z>
disc[0];<z>
createDomTarget(DomElement parent, DomElement nameElement) {<z>
)) {<z>
, (GenericDomValue)nameElement);<z>
).getEnvironment())) {<z>
getTarget(parent, (GenericDomValue)nameElement);<z>
;<z>
, Environment env) {<z>
.size()];<z>
()];<z>
int i = 0;<z>
;<z>
false;<z>
arg : args) {<z>
.getType().typeOf(env);<z>
{<z>
.getName());<z>
;<z>
} else {<z>
;<z>
;<z>
;<z>
&& !allLabeled) {<z>
(args.get(0));<z>
allLabeled) {<z>
fieldTypes);<z>
TF.tupleType(fieldTypes, fieldLabels);<z>
(Object that) {<z>
null)<z>
;<z>
that instanceof addMetricRecord_result)<z>
)that);<z>
false;<z>
String filterString) {<z>
filterString == null) {<z>
("invalid filter: null");<z>
();<z>
"*")) {<z>
null;<z>
(filterString);<z>
) {<z>
= new IllegalArgumentException(<z>
;<z>
);<z>
iae;<z>
void visit( final WebAppServlet webAppServlet )<z>
( webAppServlet, "Web app servlet" );<z>
);<z>
!= null && aliases.length > 0 )<z>
String alias : aliases )<z>
servlet = newInstance(<z>
Servlet.class,<z>
webAppServlet.getServletClass()<z>
.registerServlet(<z>
() ),<z>
)<z>
"Registration exception. Skipping.", ignore );<z>
( "Servlet [" + webAppServlet + "] does not have any alias. Skipped." );<z>
build() {<z>
)) {<z>
.protobuf.UninitializedMessageException(<z>
result);<z>
();<z>
()<z>
);<z>
attribute == null)<z>
removeAttribute(attribute);<z>
);<z>
();<z>
();<z>
public void atualizaTabuleiro() {<z>
;<z>
.size(); z++) {<z>
()) {<z>
getChar() == '@') {<z>
.getItem();<z>
);<z>
(Bloco.CORPO);<z>
().getChar() == '#') {<z>
)).setTipo(Bloco.PEDRA);<z>
().getChar() == '$') {<z>
get(z)).getItem();<z>
getDirecao());<z>
;<z>
).getChar() == '*') {<z>
getItem();<z>
;<z>
Bloco.RABO);<z>
== '&') {<z>
.COMIDA);<z>
).getChar() == '%') {<z>
).getItem();<z>
).setTipo(Bloco.CUSTOM);<z>
c.getImagemPath());<z>
} else {<z>
;<z>
();<z>
{<z>
|| curve==null) return;<z>
;<z>
;<z>
)/utan.len();<z>
ufrc/mass*IConfig.updateRate;<z>
-friction;<z>
.zero();<z>
;<z>
SynchronizedInt other) {<z>
if (other == this) {<z>
.get();<z>
fst = this;<z>
;<z>
{<z>
;<z>
snd = this;<z>
{<z>
lock_) {<z>
));<z>
this.get();<z>
, Type subtype) {<z>
assert target != null;<z>
!= null;<z>
;<z>
size() != 1) {<z>
return null;<z>
(0);<z>
throws JSONException {<z>
= null;<z>
null) {<z>
= new InputStreamReader(is, "UTF-8");<z>
(Exception ex) {<z>
is);<z>
else {<z>
);<z>
.parse(true, this);<z>
{<z>
);<z>
getPrimitiveController() instanceof IAnchorNodeController){<z>
feedbackModel, selectionRecord, commandStack);<z>
);<z>
this.operationDelegate.moveStarted();<z>
() {<z>
);<z>
.size());<z>
macrodefAttributes) {<z>
.getRawText();<z>
if (nameAttrib != null) {<z>
attribs.add(nameAttrib);<z>
.iterator();<z>
NotificationChain msgs)<z>
Ident oldName = name;<z>
name = newName;<z>
(eNotificationRequired())<z>
oldName, newName);<z>
;<z>
msgs;<z>
dbEntity, ObjEntity objEntity, EORelationship relationship) {<z>
());<z>
(dbEntity);<z>
)));<z>
setToMany(relationship.isToMany());<z>
.propagatesPrimaryKey());<z>
(dbRelationship);<z>
relationship.joins()) {<z>
().columnName());<z>
.addJoin(dbJoin);<z>
contains(relationship.name())) {<z>
));<z>
;<z>
).name());<z>
));<z>
);<z>
int deleteRule = 0;<z>
(relationship.deleteRule()) {<z>
case EOClassDescription.DeleteRuleCascade:<z>
= DeleteRule.CASCADE;<z>
EOClassDescription.DeleteRuleDeny:<z>
.DENY;<z>
.DeleteRuleNoAction:<z>
NO_ACTION;<z>
:<z>
.NULLIFY;<z>
;<z>
if (relationship.isToMany()) {<z>
CASCADE);<z>
(objRelationship);<z>
readObject(ObjectInputStream a_inputStream)<z>
ClassNotFoundException {<z>
defaultReadObject();<z>
(seed);<z>
> parse() throws IOException, SAXException {<z>
final Message currentMessage = new Message();<z>
);<z>
Message>();<z>
);<z>
);<z>
(){<z>
end() {<z>
);<z>
);<z>
EndTextElementListener(){<z>
public void end(String body) {<z>
.setTitle(body);<z>
});<z>
setEndTextElementListener(new EndTextElementListener(){<z>
end(String body) {<z>
);<z>
(MalformedURLException e) {<z>
();<z>
});<z>
mDescription).setEndTextElementListener(new EndTextElementListener(){<z>
void end(String body) {<z>
(body);<z>
});<z>
new EndTextElementListener(){<z>
{<z>
body);<z>
(ParseException e) {<z>
();<z>
});<z>
new EndTextElementListener(){<z>
) {<z>
setThumbnail(body);<z>
e) {<z>
printStackTrace();<z>
);<z>
new EndTextElementListener(){<z>
) {<z>
setAudioLink(body);<z>
) {<z>
e.printStackTrace();<z>
});<z>
());<z>
{<z>
out.println("Test");<z>
messages;<z>
public void resetPropertiesValues() {<z>
;<z>
).getColumns()) {<z>
().equalsIgnoreCase("latitude")<z>
.equalsIgnoreCase("lat")<z>
.getTitle().equalsIgnoreCase("latitude")<z>
getTitle().equalsIgnoreCase("lat")) {<z>
= c;<z>
getId().equalsIgnoreCase("longitude")<z>
("lon")<z>
getTitle().equalsIgnoreCase("longitude")<z>
"lon")) {<z>
= c;<z>
AccessDeniedException, InvalidItemStateException, RepositoryException<z>
getServiceRegistry().getNodeService();<z>
ASPECT_LOCKABLE))<z>
new LockException("Node " + nodeRef + " does is not lockable.");<z>
).getServiceRegistry().getLockService();<z>
, true);<z>
) {<z>
(<z>
;<z>
(query);<z>
;<z>
assertEmpty()<z>
closeStream()<z>
;<z>
initialized = false;<z>
() {<z>
;<z>
);<z>
parse("02-FEB-2000 18:00"), 21.75));<z>
));<z>
(Exception e) {<z>
name, String[] values, String value)<z>
);<z>
;<z>
)<z>
addChild("select",<z>
,<z>
});<z>
values) {<z>
;<z>
equals(value))<z>
"selected");<z>
);<z>
throws IOException {<z>
<String>();<z>
normalizedLocation = normalizeLocation(location);<z>
getClassLoader().getResources(normalizedLocation);<z>
locationsUrls.hasMoreElements()) {<z>
" (ClassLoader: " + getClassLoader() + ")");<z>
) {<z>
.nextElement();<z>
());<z>
;<z>
if (scanRoot.endsWith("/")) {<z>
, scanRoot.length() - 1);<z>
.getProtocol();<z>
= createLocationScanner(protocol);<z>
(locationScanner == null) {<z>
scanRoot + " (unsupported protocol: " + protocol + ")");<z>
else {<z>
normalizedLocation, scanRoot));<z>
prefix, suffix);<z>
public static boolean isNumeric(int type) {<z>
type == Types.BIGINT<z>
== Types.BIT<z>
Types.DECIMAL<z>
.DOUBLE<z>
type == Types.FLOAT<z>
INTEGER<z>
Types.NUMERIC<z>
type == Types.REAL<z>
.SMALLINT<z>
.TINYINT;<z>
short nextShort() {<z>
) {<z>
throw new ArrayIndexOutOfBoundsException("nextShort: No more space in data package: " + getDataIndex);<z>
getDataIndex);<z>
+= 2;<z>
value;<z>
{<z>
params.hasNext())<z>
, args);<z>
("", args);<z>
);<z>
getSecurity(final UniqueId uniqueId) {<z>
) {<z>
final SingleCallback callback = new SingleCallback();<z>
callback));<z>
)) {<z>
);<z>
;<z>
.size());<z>
addPendingToRequest(pending, request);<z>
;<z>
(request);<z>
);<z>
{<z>
errorPending(pending);<z>
throw t;<z>
{<z>
_fetching.set(false);<z>
);<z>
);<z>
else {<z>
);<z>
e == null) {<z>
null;<z>
;<z>
} catch (DataNotFoundException ex) {<z>
finally {<z>
false);<z>
);<z>
;<z>
} else {<z>
);<z>
(e);<z>
) + 1);<z>
add(uniqueId);<z>
, request);<z>
<UniqueId, Security> fullResult;<z>
().getSecurities(request);<z>
pending, fullResult);<z>
} catch (RuntimeException t) {<z>
);<z>
;<z>
finally {<z>
_fetching.set(false);<z>
);<z>
uniqueId);<z>
Object value)<z>
{<z>
return;<z>
write(" ");<z>
.write(name);<z>
w.write("=\"");<z>
toString(), w);<z>
;<z>
, File sourcePathEntry) {<z>
);<z>
sourcePathEntry);<z>
;<z>
._type = type;<z>
;<z>
(EditorContext editorContext, SNode node) {<z>
RefCellCellProvider(node, editorContext);<z>
setRole("locale");<z>
;<z>
EditorCell editorCell;<z>
);<z>
editorCell = provider.createEditorCell(editorContext);<z>
provider.createDefaultSubstituteInfo());<z>
;<z>
);<z>
!= null) {<z>
IOperationContext opContext = editorContext.getOperationContext();<z>
EditorManager.getInstanceFromContext(opContext);<z>
, editorCell);<z>
editorCell;<z>
static VisADAppearance makeAppearance(GraphicsModeControl mode,<z>
,<z>
,<z>
) {<z>
new VisADAppearance();<z>
mode.getPointSize();<z>
.lineWidth = mode.getLineWidth();<z>
appearance.alpha = constant_alpha;<z>
.length == 3) {<z>
true;<z>
;<z>
appearance.green = constant_color[1];<z>
;<z>
array;<z>
appearance;<z>
{<z>
1024);<z>
(indexFile);<z>
} catch (IOException e) {<z>
e);<z>
uninstall( GlassedPane pane ){<z>
content = getContentPane();<z>
pane.setContentPane( null );<z>
;<z>
element, XmlTag contextTag){<z>
(XmlElement)element.getParent();<z>
(<z>
(),<z>
,<z>
)<z>
.getAttributeValue("xsi:type") != null){<z>
XmlUtil.findXmlDescriptorByType(element);<z>
= xmlDescriptorByType;<z>
&& askParentDescriptorViaXsi()) {<z>
);<z>
if (parentXmlDescriptorByType != null) {<z>
contextTag);<z>
return elementDescriptor;<z>
(IPointR p){<z>
);<z>
();<z>
p.server);<z>
());<z>
{<z>
;<z>
;<z>
);<z>
;<z>
apache.thrift.TException {<z>
, protocolFactory, transport, resultHandler, false);<z>
;<z>
.tbl_name = tbl_name;<z>
new_parts = new_parts;<z>
(FudgeSerializer serializer, SyntheticIdentifierCurveInstrumentProvider object) {<z>
serializer.newMessage();<z>
);<z>
);<z>
.getCurrency().getCode());<z>
));<z>
));<z>
;<z>
int[] retval) {<z>
int[incomingRequestsByLoc.length];<z>
(incomingRequestsByLoc) {<z>
0, incomingRequestsByLoc.length);<z>
retval[0] = incomingRequestsAccounted;<z>
result;<z>
int r, int b) {<z>
, l, t, r, b);<z>
(changed)<z>
));<z>
IOException {<z>
)column(yyStart);<z>
new Chunk1();<z>
if (null == yyColumn.chunk1.fParameters$$Star1)<z>
);<z>
.fParameters$$Star1;<z>
rule__TableView__Group__5() throws RecognitionException {<z>
= keepStackSize();<z>
pushFollow(FOLLOW_rule__TableView__Group__5__Impl_in_rule__TableView__Group__510920);<z>
);<z>
_fsp--;<z>
(FOLLOW_rule__TableView__Group__6_in_rule__TableView__Group__510923);<z>
rule__TableView__Group__6();<z>
_fsp--;<z>
(RecognitionException re) {<z>
);<z>
re);<z>
;<z>
, InetAddress addr) throws SocketException {<z>
));<z>
toLowerCase().equals("true");<z>
, addr, port);<z>
(0 != port) {<z>
localPort = port;<z>
else {<z>
fd, NetUtil.preferIPv6Addresses());<z>
Boolean.TRUE);<z>
IOException e) {<z>
private boolean jj_3R_114() {<z>
;<z>
true) {<z>
xsp = jj_scanpos;<z>
jj_scanpos = xsp; break; }<z>
return false;<z>
BPermsHandler(Clog clog, Plugin plugin) {<z>
;<z>
);<z>
bperm = (Permissions) plugin;<z>
);<z>
JavaModelException{<z>
new HashSet();<z>
.length; projectNum++) {<z>
projectNum]);<z>
.hasChildren()){<z>
[] = javaProj.getPackageFragments();<z>
{<z>
(packageName))<z>
;<z>
isEmpty())<z>
;<z>
]);<z>
void flush() {<z>
) {<z>
(_enableHeader) {<z>
);<z>
true;<z>
) {<z>
boolean hasMoreLines;<z>
false;<z>
= printColumns(currentRow, hasMoreLines);<z>
;<z>
;<z>
++_writtenRows;<z>
) {<z>
super.toXml();<z>
);<z>
if (isXhtml){<z>
removeContent();<z>
detach());<z>
element;<z>
() {<z>
open("/task/");<z>
.linkText("创建任务"));<z>
);<z>
task.getTitle());<z>
id("submit_btn"));<z>
;<z>
.getTitle()));<z>
(By.id("task_title")));<z>
;<z>
("task_title"), newTitle);<z>
));<z>
(s.isTextPresent("更新任务成功"));<z>
dumpState()<z>
) ){<z>
"State:";<z>
;<z>
i++){<z>
;<z>
);<z>
",last_in_order=" + receive_last_inorder_sequence +<z>
+ current_receive_unack_in_sequence_count +<z>
",sent_in_seq=" + sent_receive_unack_in_sequence_count +<z>
current_receive_out_of_order_count +<z>
",sent_oo=" + sent_receive_out_of_order_count;<z>
"";<z>
size();i++){<z>
i);<z>
));<z>
;<z>
+ total_protocol_resent;<z>
);<z>
(Long mapId) {<z>
<ExportJobItem>) this.em<z>
(<z>
ExportJobItem.class)<z>
())<z>
);<z>
) {<z>
, position, id);<z>
= new Bundle();<z>
, NewsItemDetails.class);<z>
position).getTitle());<z>
;<z>
));<z>
);<z>
putExtras(b);<z>
);<z>
, AMFMappingContext context) throws AMFMappingException {<z>
if (jaxbObject == null) {<z>
;<z>
;<z>
out);<z>
();<z>
) {<z>
);<z>
;<z>
)<z>
.getValueForParameterExpression(parameterValues, expr);<z>
;<z>
return value;<z>
{<z>
;<z>
assert verify();<z>
TreeSet<Vertex>();<z>
>>();<z>
, Set<Port>>();<z>
;<z>
l : links) {<z>
);<z>
= l.getTo();<z>
= p.getVertex();<z>
.getVertex();<z>
v1)) {<z>
;<z>
3));<z>
(v1);<z>
v1);<z>
) {<z>
v2);<z>
.contains(v2);<z>
);<z>
Port>(3));<z>
)) {<z>
= new HashSet<Link>(3);<z>
put(p, hashSet);<z>
!portLinks.containsKey(p2)) {<z>
);<z>
get(v1).add(p);<z>
v2).add(p2);<z>
);<z>
);<z>
{<z>
) {<z>
;<z>
>(3));<z>
);<z>
(v);<z>
Group20Entry getGroup(@PathVariable("userId")<z>
@PathVariable("groupId")<z>
) {<z>
;<z>
onBehalfOf = getOnBehalfOf();<z>
().getAppEntityId();<z>
) {<z>
onBehalfOf;<z>
.URN_IDENTIFIER)) {<z>
;<z>
.getEntry().getId();<z>
== null) {<z>
= userId;<z>
;<z>
(new ArrayList<Group20>());<z>
allGroupProviders);<z>
;<z>
grouperAllowed) {<z>
;<z>
externalGroups = new ArrayList<Group20>();<z>
{<z>
;<z>
.getGroup20(userId, grouperGroupId, onBehalfOf);<z>
) {<z>
addUrnPartForGrouper(allGroupProviders, group20Entry);<z>
else {<z>
{<z>
(onBehalfOf)) {<z>
(groupProvider, userId, groupId);<z>
if (group != null) {<z>
add(group);<z>
isEmpty(externalGroups)) {<z>
(externalGroups);<z>
, group20Entry, externalGroups, allGroupProviders);<z>
);<z>
, 0, 0, null);<z>
return group20Entry;<z>
private static final String readChecksumFile(File f) {<z>
null;<z>
new BufferedReader(new InputStreamReader<z>
f), "UTF-8"));<z>
String checksum = reader.readLine();<z>
)) {<z>
);<z>
;<z>
} finally {<z>
);<z>
IOException e) {<z>
("IO error reading checksum file: " + f, e);<z>
Reproductioncenter(Coordinates pos, Player owner,<z>
GamePlayObjectManager manager) throws GameObjectBuildException {<z>
= pos;<z>
.healthPoints;<z>
GameSettings.Reproductioncenter.attackRange;<z>
attackPoints = GameSettings.Reproductioncenter.attackPoints;<z>
owner;<z>
GameSettings.Reproductioncenter.movingRange;<z>
= manager;<z>
();<z>
ammunation;<z>
.price = GameSettings.Reproductioncenter.price;<z>
;<z>
) {<z>
currentContent.setLength(0);<z>
this.sequence.length()) {<z>
this.position++);<z>
.isWhitespace(c)) {<z>
;<z>
switch (c) {<z>
case '+':<z>
currentContent.append("+");<z>
.ADD;<z>
:<z>
.append("-");<z>
SUBTRACT;<z>
:<z>
append("*");<z>
;<z>
case '/':<z>
);<z>
currentType = TokenType.DIVIDE;<z>
'^':<z>
);<z>
POW;<z>
:<z>
append("(");<z>
LEFT_BRACE;<z>
')':<z>
);<z>
.RIGHT_BRACE;<z>
case ',':<z>
.currentContent.append(",");<z>
currentType = TokenType.COMMA;<z>
(c);<z>
{<z>
currentType = TokenType.EOF;<z>
this;<z>
throws HibernateException {<z>
null) {<z>
()) {<z>
("[GrailsAnnotationConfiguration] Setting context class loader to Grails GroovyClassLoader");<z>
.getClassLoader());<z>
)));<z>
);<z>
{<z>
(<z>
, sessionFactoryBeanName, grailsApplication);<z>
;<z>
sizeAsPixel )<z>
* 914400;<z>
String s = Float.toString( sizeAsDxa );<z>
indexOf( '.' );<z>
-1 )<z>
.substring( 0, dotindex );<z>
return s;<z>
{<z>
edrmList = "/home/mark/projects/FreeEedData/edrm_enron_list";<z>
= "/home/mark/projects/FreeEedData/projects";<z>
EnronProjects();<z>
;<z>
e) {<z>
(System.out);<z>
double y0) {<z>
"y"))<z>
evaluateBoolean(y0);<z>
(x0);<z>
offset) throws BadLocationException {<z>
int remaining= offset;<z>
Node node= fRoot;<z>
) {<z>
null)<z>
(offset);<z>
offset) {<z>
node.left;<z>
} else {<z>
.offset;<z>
< node.length<z>
.length && node.right == null) {<z>
node.length;<z>
node.right;<z>
;<z>
) {<z>
, warning);<z>
= element;<z>
_binding = binding;<z>
_bindingName = bindingName;<z>
throws PersistenceException {<z>
+ "data/" + id);<z>
(resource == null) {<z>
;<z>
resource != null) {<z>
return get(resource);<z>
IDocumentStreamOpener() {<z>
{<z>
().getResourceAsStream(<z>
+ "data/" + id);<z>
resourceAsStream == null) {<z>
().getResourceAsStream(id);<z>
return resourceAsStream;<z>
);<z>
) {<z>
"'beanName' must not be empty");<z>
= beanName;<z>
isDefaultBeanName;<z>
qClass, ValueConverter hc)<z>
super(attHd);<z>
= qClass;<z>
;<z>
boolean makeCopy) {<z>
getBuildOrder();<z>
old1, long active1)<z>
) == 0L)<z>
old1);<z>
= input_stream.readChar(); }<z>
catch(java.io.IOException e) {<z>
);<z>
4;<z>
curChar)<z>
97:<z>
0L);<z>
99:<z>
(active0, 0xa0000000000000L, active1, 0L);<z>
:<z>
0L)<z>
jjStartNfaWithStates_0(4, 30, 32);<z>
)<z>
jjStartNfaWithStates_0(4, 65, 32);<z>
0L);<z>
:<z>
0L)<z>
19, 32);<z>
0x100000000000000L, active1, 0L);<z>
105:<z>
active1, 0L);<z>
:<z>
0x10000L) != 0L)<z>
16, 32);<z>
case 108:<z>
!= 0L)<z>
;<z>
= 4;<z>
active1, 0L);<z>
:<z>
(active0, 0x20000000L, active1, 0L);<z>
114:<z>
0L)<z>
, 32);<z>
active0, 0x4024000006000L, active1, 0L);<z>
case 115:<z>
if ((active0 & 0x200000L) != 0L)<z>
32);<z>
0L);<z>
case 116:<z>
)<z>
;<z>
) != 0L)<z>
jjStartNfaWithStates_0(4, 33, 32);<z>
0x8000000000000L) != 0L)<z>
(4, 51, 32);<z>
(active0, 0L, active1, 0x1L);<z>
case 117:<z>
active1, 0L);<z>
:<z>
0L);<z>
:<z>
active0 & 0x400000000000000L) != 0L)<z>
;<z>
jjmatchedPos = 4;<z>
0L);<z>
jjStartNfa_0(3, active0, active1);<z>
][] toSoapModels(<z>
[][] models) {<z>
[] soapModels = null;<z>
models.length > 0) {<z>
length];<z>
];<z>
{<z>
);<z>
return soapModels;<z>
e) {<z>
AssertionFailedError(<z>
);<z>
failure.initCause(e);<z>
, failure);<z>
(UUID ownerId) {<z>
CardType.INSTANT}, "{3}{G}");<z>
this.expansionSetCode = "SOM";<z>
;<z>
(new PermanentsOnBattlefieldCount(filter)));<z>
EndOfTurn, true));<z>
) {<z>
);<z>
);<z>
(";");<z>
(conf.get("dbConnectionSource"));<z>
(";");<z>
);<z>
.append(";");<z>
));<z>
.append(";");<z>
append(conf.get("dbPass"));<z>
);<z>
("dbPoolName"));<z>
append(";");<z>
get("dbPkKey"));<z>
append(";");<z>
.append(table);<z>
));<z>
<T> self, Closure closure) {<z>
.getMaximumNumberOfParameters();<z>
!= 1) {<z>
new ClosureComparator<T>(closure));<z>
= null;<z>
null;<z>
) {<z>
(item);<z>
.compareLessThan(value, answer_value)) {<z>
answer = item;<z>
value;<z>
return answer;<z>
Tile parseTile(String uri) {<z>
= null;<z>
= uri.split("/");<z>
length != 5)<z>
;<z>
version = parts[0];<z>
= parts[1];<z>
);<z>
]);<z>
("\\.");<z>
);<z>
;<z>
, zoom, map, version);<z>
mimeType);<z>
(Exception e) {<z>
(e);<z>
tile;<z>
static ProcessType getByName(String name) {<z>
length; ++i) {<z>
VALUES_ARRAY[i];<z>
equals(name)) {<z>
return result;<z>
null;<z>
public boolean isIsDirectory() {<z>
if (isDirectory == null) {<z>
;<z>
{<z>
;<z>
, int startId) {<z>
(intent, startId);<z>
this, "00:06:66:06:9A:9E");<z>
Toast.LENGTH_SHORT).show();<z>
;<z>
Intent("com.google.android.c2dm.intent.REGISTER");<z>
putExtra("app",<z>
, 0));<z>
);<z>
(intentC2dm);<z>
() {<z>
impl != null) {<z>
notifySSLContextWasReset();<z>
nodes, String dst)<z>
IOException {<z>
" ====> " + dst);<z>
();<z>
) {<z>
pre = src + nodes + "-" + i;<z>
= pre + "-graph.txt";<z>
;<z>
"-locations.txt";<z>
i + ".gtna";<z>
+ "_COMMUNITIES_0";<z>
+ "_ID_SPACE_0";<z>
(graphSrc)).exists()<z>
exists()<z>
exists()) {<z>
.out.println("not all files found for " + i);<z>
.out.println("transforming " + i);<z>
);<z>
(communitiesSrc, communities);<z>
);<z>
(CloudataConf conf) {<z>
;<z>
.get("commitlog.data.dir");<z>
"/")) {<z>
;<z>
()<z>
= new SequenceElementImpl();<z>
sequenceElement;<z>
{<z>
(profile == null) {<z>
align();<z>
score;<z>
{<z>
getCharSet() != null) {<z>
contentType.getCharSet();<z>
this.defaultCharset;<z>
public static <T> int count(<z>
,<z>
super T> predicate)<z>
= 0;<z>
;<z>
; i++)<z>
i)))<z>
count++;<z>
;<z>
setCommandline(final String commandline) {<z>
this.commandline;<z>
String oldExe = extractExecutable(this.commandline);<z>
= commandline;<z>
debug("Commandline for job: " + getJobname() + " changed: "<z>
commandline);<z>
);<z>
);<z>
;<z>
addEpsilon(State to) {<z>
accept)<z>
true;<z>
.transitions)<z>
.add(t);<z>
(Fqn efqn)<z>
);<z>
;<z>
methodsInvocation,<z>
methodName) {<z>
.sourceCode = sourceCode;<z>
;<z>
methodName = methodName;<z>
public void setMaxMergeWriteMBPerSec(Double mbPerSec) {<z>
;<z>
if (mbPerSec == null) {<z>
{<z>
;<z>
null;<z>
) {<z>
mbPerSec);<z>
} else {<z>
;<z>
private void initWithDefaultValues() {<z>
DEFAULT_FONT));<z>
WIDTH - DEFAULT_SHAPE_WIDTH) / 2);<z>
- DEFAULT_SHAPE_HEIGHT) / 2);<z>
);<z>
);<z>
makeColoredBackground(DEFAULT_SHAPE_BACKGROUND_COLOR));<z>
);<z>
, final PubSubData pubSubData,<z>
)<z>
Exception {<z>
(response.getStatusCode()) {<z>
:<z>
context, null);<z>
:<z>
new ClientNotSubscribedException(<z>
+<z>
.toStringUtf8()));<z>
case SERVICE_DOWN:<z>
, new ServiceDownException(<z>
"Server responded with a SERVICE_DOWN status"));<z>
NOT_RESPONSIBLE_FOR_TOPIC:<z>
handleRedirectResponse(response, pubSubData, channel);<z>
response);<z>
ServiceDownException(<z>
);<z>
{<z>
(authorities);<z>
response;<z>
;<z>
);<z>
Void result) {<z>
.get() != null) {<z>
LiquiDroid activity = mTarget.get();<z>
activity.mProgressDialog.dismiss();<z>
) {<z>
makeText(activity,<z>
),<z>
;<z>
mException) {<z>
.show();<z>
{<z>
{<z>
, "LoginTask finished.");<z>
);<z>
else {<z>
, MemberActivity.class);<z>
new Bundle();<z>
.Account.API_NAME, mApiName);<z>
.Account.API_URL, mApiUrl);<z>
.MEMBER_ID, mMemberId);<z>
);<z>
.putExtras(extras);<z>
d("XXX", "LoginTask start member activity.");<z>
;<z>
activity.startActivity(intent);<z>
;<z>
PrefetchTreeNode node) {<z>
;<z>
WSRPConsumerPortlet updateWSRPConsumerPortlet(<z>
wsrpConsumerPortletId, String name)<z>
{<z>
(name);<z>
=<z>
(<z>
);<z>
.setModifiedDate(new Date());<z>
name);<z>
, false);<z>
;<z>
treeviewModel,<z>
DefaultListFacade<E> dataModel)<z>
treeviewModel;<z>
dataModel;<z>
parseGameLevelData()<z>
= true;<z>
);<z>
.FIELD_ID_TILE_DATA);<z>
(levelTileData == null)<z>
get(GameLevelTileData.FIELD_ID_PLAYER_START_TILE_X));<z>
get(GameLevelTileData.FIELD_ID_PLAYER_START_TILE_Y));<z>
;<z>
;<z>
= null;<z>
tilePoint = new Point(0, 0);<z>
= 0;<z>
= 0;<z>
int tileKey = 0;<z>
)<z>
tileX = 0;<z>
);<z>
for (String tile : tiles)<z>
Integer.parseInt(tile));<z>
)<z>
(tileData.size() > 0)<z>
get(GameTileData.FIELD_ID_DRAWABLE) > 0))<z>
.x = tileX;<z>
y = tileY;<z>
, tilePoint);<z>
));<z>
(bitmap);<z>
.get(GameTileData.FIELD_ID_TYPE));<z>
(GameTileData.FIELD_ID_VISIBLE) == 0)<z>
false);<z>
);<z>
mTileWidth == 0)<z>
mTileWidth = gameTile.getWidth();<z>
0)<z>
);<z>
(gameTile);<z>
++;<z>
+= mTileWidth;<z>
tileY += mTileHeight;<z>
updatingGameTiles = false;<z>
) {<z>
<= 0) {<z>
new IllegalArgumentException("It doesn't make sense to have <= 0 sentry points");<z>
numberOfSentries = parameter;<z>
SpecElement element, SpecMethod method, String msg )<z>
;<z>
;<z>
) {<z>
; jj_lastpos = jj_scanpos = token;<z>
jj_3_1057(); }<z>
}<z>
}<z>
public static IEditorPart doOpenEditor(IFile f) {<z>
== null)<z>
;<z>
FileEditorInput file = new FileEditorInput(f);<z>
(file);<z>
{<z>
, e);<z>
;<z>
private void _skipComment()<z>
throws IOException, JsonParseException<z>
(!isEnabled(Feature.ALLOW_COMMENTS)) {<z>
);<z>
) {<z>
_reportInvalidEOF(" in a comment");<z>
];<z>
== '/') {<z>
);<z>
(c == '*') {<z>
);<z>
{<z>
c, "was expecting either '*' or '/' for a comment");<z>
String type, @PathVariable String id,<z>
,<z>
String dn,<z>
RequestHeader( "WId" ) String wid ) {<z>
HttpStatus.NOT_FOUND;<z>
;<z>
tf.setPreferredQuote( cont );<z>
.OK;<z>
{<z>
), hs );<z>
v) throws TorqueException<z>
v == null)<z>
;<z>
setProjectId(v.getProjectId());<z>
;<z>
KaleoNotification> findByKaleoDefinitionId(<z>
)<z>
{<z>
kaleoDefinitionId);<z>
routes_close(Context context) {<z>
close(player);<z>
context.sendMessage("Closed editor session.");<z>
(TableColumn column)<z>
if (column == null)<z>
;<z>
add(column);<z>
addPropertyChangeListener(this);<z>
);<z>
this, 0,<z>
) - 1));<z>
keyPressed(KeyEvent e)<z>
fProposalShell))<z>
== SWT.MOD1)<z>
getSelectionIndex();<z>
(index >= 0)<z>
, true, true);<z>
,<z>
... params) {<z>
params);<z>
e) {<z>
e);<z>
{<z>
), "IllegalAccessException", e);<z>
) {<z>
, "InvocationTargetException", e);<z>
catch (NoSuchMethodException e) {<z>
"NoSuchMethodException", e);<z>
;<z>
int uartNum) throws IOException {<z>
);<z>
(UART_CONFIG);<z>
;<z>
0);<z>
();<z>
) {<z>
)<z>
(cs instanceof SJIS)<z>
));<z>
commandNode, String sessionId,<z>
status, XMLElement result,<z>
, boolean isNextAllowed) {<z>
, stanza.getID());<z>
.startInnerElement("command");<z>
, NamespaceURIs.XEP0050_ADHOC_COMMANDS);<z>
);<z>
addAttribute("sessionid", sessionId);<z>
status);<z>
() > 0) {<z>
{<z>
.startInnerElement("note");<z>
());<z>
(note.getText());<z>
.endInnerElement();<z>
) {<z>
);<z>
;<z>
("next").endInnerElement();<z>
;<z>
{<z>
addPreparedElement(result);<z>
.endInnerElement();<z>
build();<z>
public EncASRepPart(<z>
EncryptionKey new_key,<z>
LastReq new_lastReq,<z>
,<z>
new_keyExpiration,<z>
TicketFlags new_flags,<z>
new_authtime,<z>
KerberosTime new_starttime,<z>
KerberosTime new_endtime,<z>
new_renewTill,<z>
new_srealm,<z>
PrincipalName new_sname,<z>
new_caddr) {<z>
.KRB_ENC_AS_REP_PART<z>
, Object arg1) {<z>
(!initialized) {<z>
);<z>
; iter<z>
.hasNext();) {<z>
iter.next());<z>
();<z>
; iter<z>
.hasNext();) {<z>
tableTestCases, SWT.NULL);<z>
;<z>
;<z>
)) {<z>
(infos);<z>
{<z>
"Test coverage is successful measured.");<z>
= true;<z>
selectAll();<z>
();<z>
) {<z>
(i);<z>
.setChecked(true);<z>
.add(item.getText());<z>
;<z>
model.getCurrentData();<z>
hasNext();) {<z>
, SWT.NULL);<z>
(iter.next());<z>
.pack();<z>
identifier) {<z>
= device;<z>
= payload;<z>
.identifier = identifier;<z>
Node getNextNode(Range range)<z>
getEndContainer();<z>
.getLength()) {<z>
);<z>
() == null) {<z>
();<z>
: node.getNextSibling();<z>
JavaClass> getClasses() {<z>
values());<z>
) throws VisitorException{<z>
lt, 0);<z>
if (!revisit && subExpResults != null)<z>
);<z>
{<z>
+ colNumber);<z>
menuId + "')");<z>
final EObject targetEObject ) {<z>
;<z>
null;<z>
.getModelEditor().getNewChildCommands(targetEObject);<z>
{<z>
("getOperationOutputDescriptor.errMsg");<z>
message);<z>
null;<z>
descriptors.iterator();<z>
.hasNext()) {<z>
);<z>
().next();<z>
;<z>
instanceof OutputAspect) break;<z>
operationOutputDescriptor;<z>
Exception {<z>
= CommPortIdentifier<z>
(portName);<z>
portIdentifier.isCurrentlyOwned()) {<z>
.out.println("Error: Port is currently in use");<z>
} else {<z>
().getName(),<z>
;<z>
instanceof SerialPort) {<z>
commPort;<z>
DATABITS_8,<z>
, SerialPort.PARITY_NONE);<z>
();<z>
= serialPort.getOutputStream();<z>
);<z>
.addEventListener(new SerialReader(in));<z>
);<z>
{<z>
.out<z>
);<z>
static boolean isBounded(AST node) {<z>
null) {<z>
false;<z>
return true;<z>
public final void rule__ExclusiveOrExpression__Group_1__0__Impl() throws RecognitionException {<z>
;<z>
;<z>
FOLLOW_75_in_rule__ExclusiveOrExpression__Group_1__0__Impl13480);<z>
).getCircumflexAccentKeyword_1_0());<z>
{<z>
reportError(re);<z>
(input,re);<z>
(stackSize);<z>
String nodeName, Node node) {<z>
;<z>
(nodeName) ) {<z>
;<z>
String message;<z>
(nodeName)) {<z>
, node.getNodeName()}));<z>
{<z>
)}));<z>
);<z>
Exception {<z>
>();<z>
;<z>
mbean : mbeans) {<z>
HashMap<String, Object>();<z>
attr: fetchedQueueAttributes) {<z>
;<z>
);<z>
) {<z>
isEmpty() ) {<z>
.put(mbean, attributes);<z>
String, Object>>();<z>
ObjectName("org.apache.activemq:Type=Subscription,destinationType=Queue,*"), null);<z>
{<z>
<String, Object>();<z>
attr: fetchedSubscriptionAttributes) {<z>
getAttribute(mbean, attr);<z>
);<z>
catch (Exception e) {<z>
!attributes.isEmpty() ) {<z>
;<z>
subscriptions);<z>
int widthMeasureSpec, int heightMeasureSpec) {<z>
.onMeasure(widthMeasureSpec, heightMeasureSpec);<z>
;<z>
widthMode = MeasureSpec.getMode(widthMeasureSpec);<z>
;<z>
||<z>
heightMode != MeasureSpec.EXACTLY) {<z>
);<z>
;<z>
i++) {<z>
measure(widthMeasureSpec, heightMeasureSpec);<z>
mCurrentView * width, 0);<z>
.model.PasswordPolicy fetchPasswordPolicy(<z>
long passwordPolicyId)<z>
liferay.portal.kernel.exception.SystemException {<z>
return _passwordPolicyLocalService.fetchPasswordPolicy(passwordPolicyId);<z>
int acknowledgeMode, int prefetchHigh, int prefetchLow)<z>
null);<z>
) {<z>
new XQuery(<z>
);<z>
);<z>
;<z>
assertBoolean(false)<z>
) {<z>
"[ ]");<z>
String>();<z>
splits.length; ++i) {<z>
.length() > 0) {<z>
;<z>
replaceAll(">", "&gt;");<z>
elem.replaceAll("\"", "&quot;");<z>
splits_tmp.add(elem);<z>
.toArray(new String[0]);<z>
Object get(String name) {<z>
getSession();<z>
!= null ?<z>
getAttribute(name) : null;<z>
) {<z>
null) {<z>
edit.parts.ConstraintBodyInCEditPart.VISUAL_ID));<z>
return parser;<z>
() {<z>
nextInt(<z>
minDownBandwidth);<z>
doBody(PrintWriter pw) {<z>
;<z>
, "Subject", msg.getSubject());<z>
, msg.getFrom() );<z>
() );<z>
println("</table>");<z>
);<z>
doBody(pw);<z>
FloatBuffer slice() {<z>
.position();<z>
();<z>
(pos <= lim);<z>
<= lim ? lim - pos : 0);<z>
offset;<z>
);<z>
, 0, rem, rem, off);<z>
) throws SQLException<z>
();<z>
0] != null))<z>
= bundles[0].getItems();<z>
)<z>
return items[0];<z>
;<z>
DatabaseManager.querySingle(bContext,<z>
,getID());<z>
null)<z>
qResult.getIntColumn("collection_id"));<z>
qResult = DatabaseManager.querySingle(bContext,<z>
));<z>
qResult != null)<z>
));<z>
;<z>
final XMLExtendedStreamReader reader, final int index)<z>
XMLStreamException {<z>
{<z>
index);<z>
String[] buttonLabels, ILabelProvider lprovider) {<z>
);<z>
adapter;<z>
= lprovider;<z>
();<z>
= this;<z>
);<z>
;<z>
) {<z>
fButtonLabels.length;<z>
];<z>
; i < nButtons; i++) {<z>
true;<z>
null;<z>
null;<z>
= null;<z>
;<z>
fUpButtonIndex= -1;<z>
;<z>
0;<z>
void initServletContext() {<z>
=new JspCServletContext<z>
(System.out),<z>
));<z>
.getInstance(context);<z>
MalformedURLException me) {<z>
;<z>
context, this);<z>
context);<z>
;<z>
>>> L) {<z>
<Condition<C>>();<z>
|| L.size() == 0) {<z>
return cd;<z>
{<z>
) {<z>
(cd, A);<z>
cd;<z>
s, Object[] t) {<z>
null) {<z>
("Arrays must not be null");<z>
length;<z>
int m = t.length;<z>
) {<z>
m;<z>
if (m == 0) {<z>
;<z>
;<z>
];<z>
;<z>
j;<z>
;<z>
cost;<z>
++) {<z>
i * DL_DELETE ;<z>
; j <= m; j++) {<z>
t[j - 1];<z>
0] = j * DL_DELETE ;<z>
; i++) {<z>
.equals(t_j)? 0 : DL_SUBSTITUTION;<z>
cost);<z>
.equals(t_j)){<z>
[i-2] + DL_TRANSPOSITION);<z>
= vals[2];<z>
1];<z>
] = vals[0];<z>
;<z>
[1][n];<z>
void dateChose() {<z>
JFrame f = new JFrame();<z>
setPickedDate());<z>
();<z>
Exception {<z>
m_msgContextBuilder.processCall();<z>
BaseMessageContextImpl clientCtx = (BaseMessageContextImpl) m_msgContext;<z>
null<z>
null<z>
m_future != null) {<z>
.getServicePoller()<z>
(m_future);<z>
m_msgContext;<z>
T adapt(RuleAtom ruleAtom) throws RuleAtomCallExeption {<z>
;<z>
();<z>
= null;<z>
if (expressionAtom instanceof StringAtom) {<z>
;<z>
).createTypedLiteral(value);<z>
) {<z>
;<z>
(number);<z>
{<z>
(getClass());<z>
new LiteralExpression(literal);<z>
) new ClerezzaSparqlObject(literalExpression);<z>
node, DartNode sourceNode,<z>
extends ASTVisitor<Void>> astClass) {<z>
(DEBUG) {<z>
.getSimpleName());<z>
) {<z>
);<z>
+ astClass.getSimpleName());<z>
MetricsRecordBuilderImpl(MetricsCollector parent, MetricsInfo info,<z>
MetricsFilter mf,<z>
acceptable) {<z>
.parent = parent;<z>
();<z>
= info;<z>
newArrayList();<z>
;<z>
= rf;<z>
= mf;<z>
.acceptable = acceptable;<z>
)<z>
IOException {<z>
;<z>
= false;<z>
;<z>
;<z>
;<z>
} finally {<z>
{<z>
!= null)<z>
);<z>
(this) {<z>
Collection files = docWriter.abortedFiles();<z>
)<z>
.deleteNewFiles(files);<z>
)<z>
flush(true, false, false);<z>
(OutOfMemoryError oom) {<z>
handleOOM(oom, "updateDocument");<z>
boolean isTraceEnabled() {<z>
_logs.length; i++)<z>
())<z>
;<z>
return false;<z>
final void orderByElement() throws RecognitionException {<z>
CommonTree e=null;<z>
(input,ORDER_ELEMENT_EXPR,FOLLOW_ORDER_ELEMENT_EXPR_in_orderByElement2400);<z>
(input, Token.DOWN, null);<z>
pushFollow(FOLLOW_valueExpr_in_orderByElement2402);<z>
valueExpr();<z>
;<z>
;<z>
input.LA(1);<z>
DESC)) ) {<z>
=1;<z>
(alt132) {<z>
case 1 :<z>
{<z>
.consume();<z>
=false;<z>
= new MismatchedSetException(null,input);<z>
throw mse;<z>
);<z>
UP, null);<z>
rex) {<z>
throw rex;<z>
) {<z>
("Shutting down ...");<z>
;<z>
.stop();<z>
.stop();<z>
);<z>
0);<z>
FacesContext context, DropDownComponent dropDown) throws IOException {<z>
dropDown);<z>
context.getResponseWriter();<z>
(context, dropDown);<z>
dropDown), value);<z>
(_Fields field, Object value) {<z>
{<z>
SUCCESS:<z>
null) {<z>
);<z>
} else {<z>
List<Table>)value);<z>
case O1:<z>
if (value == null) {<z>
();<z>
} else {<z>
MetaException)value);<z>
case O2:<z>
if (value == null) {<z>
;<z>
else {<z>
((InvalidOperationException)value);<z>
O3:<z>
value == null) {<z>
();<z>
{<z>
setO3((UnknownDBException)value);<z>
{<z>
= c;<z>
num = 0;<z>
!= 0) {<z>
();<z>
) && c < '8') {<z>
= num;<z>
Encoding.odigitVal(c);<z>
;<z>
;<z>
} else {<z>
unfetch();<z>
= last;<z>
;<z>
) {<z>
n)) {<z>
{<z>
.VAR:<z>
.checkState(n.hasOneChild());<z>
.getFirstChild();<z>
.hasChildren()<z>
().isFunction()) {<z>
, t.getModule());<z>
:<z>
.isStatementBlock(parent)<z>
isLabel());<z>
isFunctionExpression(n)) {<z>
n);<z>
getModule());<z>
int collect(T item) {<z>
{<z>
return FINISHED;<z>
else {<z>
(item);<z>
DataInputStream pDataInputStream) throws IOException {<z>
.obtainPoolItem(pFlag);<z>
{<z>
;<z>
message;<z>
{<z>
+ "'.");<z>
throws ServiceException, ClassNotFoundException {<z>
CustomPersistenceHandler handler : getCustomPersistenceHandlers()) {<z>
handler.canHandleInspect(persistencePackage)) {<z>
.willHandleSecurity(persistencePackage)) {<z>
);<z>
, dynamicEntityDao, this);<z>
results;<z>
.getCeilingEntityFullyQualifiedClassname(), EntityOperationType.INSPECT);<z>
.getCeilingEntityFullyQualifiedClassname());<z>
String, FieldMetadata>>();<z>
(PersistenceModule module : modules) {<z>
, allMergedProperties);<z>
= getMergedClassMetadata(entities, allMergedProperties);<z>
new DynamicResultSet(mergedMetadata);<z>
;<z>
() {<z>
= new XQuery(<z>
ctx);<z>
final QT3Result res = result(query);<z>
;<z>
)<z>
Object, Object> context) {<z>
NoreflectioncompanyValidator.validate<z>
EMPLOYEE,<z>
).get(1),<z>
,<z>
,<z>
.EMPLOYEE__NO_MANAGER_IMPLIES_DIRECT_REPORTS);<z>
tableId, long columnId)<z>
SystemException {<z>
) {<z>
;<z>
String name) {<z>
: topNodes) {<z>
().equals(name)) {<z>
return e;<z>
;<z>
f){<z>
, f, 0xFFFFFF);<z>
;<z>
= GUI_TYPE_FIELD;<z>
yyStart)<z>
throws IOException {<z>
yyResult;<z>
yyValue;<z>
DUMMY;<z>
yyStart);<z>
yyResult.select(yyError);<z>
yyResult.hasValue()) {<z>
yyValue = yyResult.semanticValue();<z>
(yyValue, yyError);<z>
(yyStart);<z>
);<z>
yyResult.hasValue()) {<z>
semanticValue();<z>
.createValue(yyValue, yyError);<z>
return yyError;<z>
{<z>
= null;<z>
(com != null) {<z>
value = com.getTitle();<z>
;<z>
() throws ClientException {<z>
"dublincore", "title");<z>
) {<z>
return title;<z>
);<z>
) {<z>
title;<z>
id;<z>
object) {<z>
null) {<z>
(object);<z>
(object);<z>
itemPropertyDescriptors;<z>
UICalendarCategoryManager> event) throws Exception {<z>
.getSource() ;<z>
class) ;<z>
;<z>
class) ;<z>
uiCalendarForm.calendar_ != null<z>
contains(calendarCategoryId)) {<z>
class) ;<z>
)) ;<z>
.getUIPopupMessages()) ;<z>
.class) ;<z>
;<z>
;<z>
findFirstComponentOfType(UICalendars.class) ;<z>
class) ;<z>
getRenderedChild() instanceof UIListContainer) {<z>
() ;<z>
.class) ;<z>
if(uiListView.isDisplaySearchResult()) {<z>
(false) ;<z>
setCategoryId(null) ;<z>
) ;<z>
null) ;<z>
) ;<z>
;<z>
.findFirstComponentOfType(UIActionBar.class) ;<z>
getRequestContext().addUIComponentToUpdateByAjax(uiSearchForm) ;<z>
getRequestContext().addUIComponentToUpdateByAjax(uiActionBar) ;<z>
.refresh() ;<z>
(UIMiniCalendar.class) ;<z>
) ;<z>
) ;<z>
).addUIComponentToUpdateByAjax(uiCalendars) ;<z>
;<z>
;<z>
) ;<z>
{<z>
) ;<z>
UICalendarForm.INPUT_CALENDAR)) ;<z>
.getAncestorOfType(UIPopupAction.class)) ;<z>
[] current) throws SQLException {<z>
{<z>
);<z>
int idx = getColumnIndex(col);<z>
v = current[idx];<z>
) {<z>
get(ErrorCode.NO_DATA_AVAILABLE);<z>
;<z>
String title)<z>
;<z>
);<z>
protected final byte getByteValue(String name)<z>
;<z>
get(name)).byteValue();<z>
void postWithInvalidRamRange()<z>
validEnterprise();<z>
1);<z>
response = post(enterprisesURI, e);<z>
;<z>
String resultType) {<z>
pln("\t\tlong t = -1;");<z>
)<z>
("\t\t t = System.nanoTime();");<z>
;<z>
if (stopWatch) {<z>
pln(" String l = \"\" + (System.nanoTime() - t) / 100000;\n" +<z>
"");<z>
"\t\tSystem.out.println(\"[" + super.className + "] rendering time(ms): \" + l);");<z>
;<z>
) {<z>
)<z>
");");<z>
useWithPlay) {<z>
);<z>
super.className + "] rendering time: \" + t);");<z>
);<z>
else {<z>
(useWithPlay) {<z>
(hasActionInvocation)<z>
+ ", sourceTemplate);");<z>
+ resultType + "(getHeaders(), getOut(), t);");<z>
.className + "] rendering time: \" + t);");<z>
"\t\treturn getOut().toString();");<z>
"\t}");<z>
() throws RecognitionException {<z>
;<z>
pushFollow(FOLLOW_rule__XMemberFeatureCall__Group_1_1__3__Impl_in_rule__XMemberFeatureCall__Group_1_1__313283);<z>
;<z>
_fsp--;<z>
.failed) return ;<z>
;<z>
();<z>
state._fsp--;<z>
failed) return ;<z>
catch (RecognitionException re) {<z>
re);<z>
,re);<z>
(stackSize);<z>
) {<z>
|| !rowHead.isVisible()) {<z>
);<z>
pane.getComponentOrientation().isLeftToRight();<z>
= (leftToRight)<z>
.left<z>
).width;<z>
())<z>
colHead.getPreferredSize().height<z>
.top;<z>
rowHeadX, rowHeadY, rowHeadWidth, rowHeadHeight);<z>
(final FederalFundsFutureSecurity future, final YieldCurveBundle curves) {<z>
notNull(future, "Future");<z>
.notNull(curves, "Curves");<z>
= future.getFixingPeriodAccrualFactor().length;<z>
getCurve(future.getOISCurveName());<z>
double[nbFixing + 1];<z>
< nbFixing + 1; loopfix++) {<z>
future.getFixingPeriodTime()[loopfix]);<z>
double priceBar = 1.0;<z>
getFixingTotalAccrualFactor() * priceBar;<z>
new double[nbFixing + 1];<z>
; loopfix++) {<z>
+ 1] * interestBar;<z>
df[loopfix + 1]) * interestBar;<z>
);<z>
;<z>
1; loopfix++) {<z>
));<z>
getOISCurveName(), listOIS);<z>
);<z>
return result;<z>
DfaMemoryState memState) {<z>
)) {<z>
.getStates());<z>
, memState);<z>
boolean isLiquid()<z>
(m)<z>
case LAVA:<z>
:<z>
case WATER:<z>
STATIONARY_WATER:<z>
return true;<z>
false;<z>
void rule__XSwitchExpression__Group__0() throws RecognitionException {<z>
;<z>
);<z>
;<z>
._fsp--;<z>
;<z>
FOLLOW_rule__XSwitchExpression__Group__1_in_rule__XSwitchExpression__Group__019171);<z>
);<z>
--;<z>
;<z>
re) {<z>
);<z>
);<z>
);<z>
) {<z>
(attrs));<z>
(cmp);<z>
addAll(this.body);<z>
sorted);<z>
args) {<z>
? extends Number> extNum = null;<z>
Integer> extInt = null;<z>
lstInt = null;<z>
<? super Integer> supInt = null;<z>
supNum = null;<z>
lstNum = null;<z>
extNum);<z>
;<z>
lstInt);<z>
);<z>
(extInt);<z>
;<z>
StageModel model) throws IOException {<z>
;<z>
{<z>
= mapperEmitter.emit(model, unit);<z>
;<z>
false) {<z>
);<z>
;<z>
, compiledCombiner);<z>
getReduceUnits()) {<z>
unit.setCompiled(compiled);<z>
,<z>
> regionGroups) {<z>
0, polypeptide.getSeqLen());<z>
.getOrganism().getCommonName();<z>
getUniqueName();<z>
;<z>
();<z>
= polypeptide.getMembraneStructure();<z>
packSubfeatures = AllocatedCompoundFeature.Mode.STRATIFIED_LTR;<z>
this.numberOfBlankTracksAboveCompoundFeature = 2;<z>
,<z>
.class);<z>
) {<z>
,<z>
, GPIAnchorCleavageSite.class);<z>
, false);<z>
, Device newDevice) {<z>
customer, oldNetworkInfo, newDevice);<z>
getId() <= 0) {<z>
);<z>
)) {<z>
NetworkException("Existing Network Information must be provided");<z>
)) {<z>
);<z>
0) {<z>
throw new DeviceException("Device Id must be specified");<z>
null;<z>
;<z>
);<z>
, null);<z>
) {<z>
newDevice.getValue().trim())<z>
) {<z>
getStatus() != null) {<z>
equals(DEVICE.SUSPENDED)<z>
)) {<z>
);<z>
)) {<z>
throw new NetworkException("Device is currently in reserve");<z>
} else {<z>
();<z>
().length()) {<z>
DEVICE.ESN_HEX:<z>
case DEVICE.MEID_HEX:<z>
().trim());<z>
.ESN_DEC:<z>
case DEVICE.MEID_DEC:<z>
.trim());<z>
new NetworkException("Invalid New Device length");<z>
getValue());<z>
(oldNetworkInfo, newNetworkInfo);<z>
"Saving new device information");<z>
;<z>
(NetworkException network_ex) {<z>
;<z>
} catch (Exception ex) {<z>
.warn(ex.getMessage());<z>
(MVNEException ex) {<z>
getMessage());<z>
throw ex;<z>
("swapDevice", newNetworkInfo);<z>
;<z>
IOException {<z>
mDatabase != null) {<z>
return mDatabase;<z>
)) {<z>
);<z>
, SQLiteDatabase.OPEN_READONLY);<z>
return mDatabase;<z>
() throws Exception {<z>
invoke(<z>
_registerMethodKey, "so-portlet",<z>
"/contacts/projects.jsp");<z>
double getScore( String selectorName ) throws RepositoryException {<z>
) {<z>
iterator.query));<z>
();<z>
boolean equals(Object obj) {<z>
obj == this) {<z>
return true;<z>
getClass()) {<z>
) obj;<z>
getUniqueId()) &&<z>
(), other.getCurrency()) &&<z>
), other.getRegionId()) &&<z>
other.getName()) &&<z>
.getInterpolatorName()) &&<z>
), other.getStrips());<z>
;<z>
) String login,<z>
:remote_users] -%>,<z>
){<z>
.login = login;<z>
name;<z>
if options[:remote_users] -%><z>
: Collections.unmodifiableList(applications);<z>
%><z>
,<z>
, Object... args) {<z>
() < minSdk)<z>
null;<z>
(receiver.getClass(),<z>
args);<z>
static final Color hexToColor(String value) {<z>
;<z>
value.length();<z>
) {<z>
value.length(), 7));<z>
} else {<z>
;<z>
"0x" + digits;<z>
;<z>
.decode(hstr);<z>
) {<z>
c = null;<z>
;<z>
int orientationInput) {<z>
orientation = orientationInput;<z>
orientation == -1) {<z>
0;<z>
360;<z>
int retVal;<z>
0 * 90) + 45) {<z>
0;<z>
(1 * 90) + 45) {<z>
;<z>
* 90) + 45) {<z>
;<z>
(3 * 90) + 45) {<z>
270;<z>
else {<z>
0;<z>
;<z>
, Object object) {<z>
object == null) {<z>
return null;<z>
object instanceof TrabajadoresTurnoEmbarque) {<z>
= (TrabajadoresTurnoEmbarque) object;<z>
getId());<z>
} else {<z>
return null;<z>
,<z>
long resourceId)<z>
exception.SystemException {<z>
,<z>
;<z>
Composite parent) {<z>
createComposite(parent);<z>
(container, "Netifera will now restart with newly created workspace");<z>
);<z>
public void And() throws ParseException {<z>
);<z>
) {<z>
1)?jj_ntk():jj_ntk) {<z>
:<z>
AND1:<z>
jj_gen;<z>
label_4;<z>
) {<z>
case AND0:<z>
jj_consume_token(AND0);<z>
:<z>
(AND1);<z>
jj_gen;<z>
;<z>
();<z>
new AstAnd(JJTAND);<z>
= true;<z>
;<z>
Equality();<z>
) {<z>
(jjtc001) {<z>
);<z>
jjtc001 = false;<z>
} else {<z>
;<z>
RuntimeException) {<z>
(true) throw (RuntimeException)jjte001;}<z>
if (jjte001 instanceof ParseException) {<z>
(ParseException)jjte001;}<z>
;}<z>
} finally {<z>
(jjtc001) {<z>
jjtree.closeNodeScope(jjtn001, 2);<z>
.social.model.SocialActivity[] findByUserId_PrevAndNext(<z>
long activityId, long userId,<z>
orderByComparator)<z>
.SystemException,<z>
.social.NoSuchActivityException {<z>
getPersistence()<z>
, userId,<z>
orderByComparator);<z>
{<z>
(aClass != null) {<z>
aClass.getQualifiedName())) {<z>
return true;<z>
aClass.getSuperClass();<z>
;<z>
throws NotConnectedException, IOException {<z>
_SYNC_) {<z>
int memIndex = message.getMemIndex();<z>
= message.getMemLocation();<z>
) {<z>
memIndex, memLocation);<z>
} else {<z>
);<z>
0) {<z>
: mpMemIndexes) {<z>
deleteMessage(mpMemIndex, memLocation);<z>
= "krmsTypeId") String krmsTypeId) throws RiceIllegalArgumentException {<z>
TypeAttributeDefinition> typeAttributeDefinitions = getTypeAttributeDefinitions(krmsTypeId);<z>
)) {<z>
;<z>
} else {<z>
List<RemotableAttributeField> fields =<z>
());<z>
for (TypeAttributeDefinition typeAttributeDefinition : typeAttributeDefinitions) {<z>
typeAttributeDefinition.getField());<z>
fields;<z>
deepEquals(Change o) {<z>
);<z>
this == o) return differences;<z>
getClass()) {<z>
"object is not an instance of Reorder");<z>
;<z>
reorder = (Reorder) o;<z>
) {<z>
reorder.getChild().getGridId())<z>
) != null) {<z>
;<z>
return differences.<z>
()).<z>
, reorder.getOldIndex())<z>
void encodeFilterString(BerEncoder ber, String filterStr,<z>
NamingException {<z>
) {<z>
);<z>
filter;<z>
int filterLen;<z>
if (isLdapv3) {<z>
getBytes("UTF8");<z>
else {<z>
filter = filterStr.getBytes("8859_1");<z>
;<z>
{<z>
dbgIndent = 0;<z>
err.println("String filter: " + filterStr);<z>
"size: " + filterLen);<z>
0, filterLen);<z>
;<z>
(String [] args) throws Exception {<z>
reader = null;<z>
if (args.length == 1) {<z>
File(args[0]);<z>
)) {<z>
("Error: could not read ["+input+"]");<z>
input);<z>
;<z>
new Yylex(reader);<z>
symtab = new SymTab();<z>
setSymtab(symtab);<z>
= new parser(scanner);<z>
;<z>
parse().value;<z>
catch (Exception e) {<z>
e.printStackTrace();<z>
(syntaxbaum);<z>
();<z>
checkcontext();<z>
if(contexterror>0) return;<z>
prepInterp();<z>
syntaxbaum.interpret();<z>
) {<z>
req.getSession();<z>
String) session.getAttribute("Silverpeas_Attachment_ObjectId");<z>
;<z>
componentId);<z>
ensureRecordsIsMutable() {<z>
== 0x00000002)) {<z>
grib.GribCollectionProto.Record>(records_);<z>
|= 0x00000002;<z>
nonOverridableClasses) {<z>
, hiddenClasses, nonOverridableClasses);<z>
getContext();<z>
(urls);<z>
) {<z>
(MyTable.TABLE_MODE_STANDARD);<z>
get(0))) {<z>
.setMoveMode();<z>
= targetCell.getSpreadsheetCoords();<z>
);<z>
repaint();<z>
void render() {<z>
_mesh != null) {<z>
glPushMatrix();<z>
y, 0.0f);<z>
();<z>
);<z>
) throws IOException {<z>
getPath());<z>
channel == null) {<z>
createChannel(f);<z>
);<z>
;<z>
{<z>
Util.close(channel);<z>
;<z>
0);<z>
.position(0);<z>
TimeZone getTimezone() {<z>
);<z>
(timezone == null)<z>
null;<z>
;<z>
;<z>
,<z>
HttpResponseHeaders response,<z>
,<z>
provider) {<z>
Toast.LENGTH_SHORT).show();<z>
) {<z>
{ 60, 10, 10 };<z>
[0] + "s| %2$-" + sizes[1]<z>
+ sizes[1] + "s|";<z>
,<z>
).length()];<z>
Arrays.fill(a, '=');<z>
separator = new String(a);<z>
separator);<z>
, "result", "time [ms]"));<z>
(separator);<z>
) {<z>
(), test<z>
), test.getTime()));<z>
);<z>
doPackagesChanged(boolean doit) {<z>
false;<z>
(mLock) {<z>
mWallpaperComponent != null) {<z>
isPackageDisappearing(mWallpaperComponent.getPackageName());<z>
(change == PACKAGE_PERMANENT_CHANGE<z>
PACKAGE_TEMPORARY_CHANGE) {<z>
true;<z>
doit) {<z>
(TAG, "Wallpaper uninstalled, removing: " + mWallpaperComponent);<z>
);<z>
(mNextWallpaperComponent != null) {<z>
mNextWallpaperComponent.getPackageName());<z>
(change == PACKAGE_PERMANENT_CHANGE<z>
|| change == PACKAGE_TEMPORARY_CHANGE) {<z>
mNextWallpaperComponent = null;<z>
(mWallpaperComponent != null<z>
))) {<z>
getPackageManager().getServiceInfo(<z>
0);<z>
} catch (NameNotFoundException e) {<z>
mWallpaperComponent);<z>
;<z>
null<z>
())) {<z>
.getPackageManager().getServiceInfo(<z>
, 0);<z>
) {<z>
mNextWallpaperComponent = null;<z>
changed;<z>
public final void mT__36() throws RecognitionException {<z>
= T__36;<z>
= DEFAULT_TOKEN_CHANNEL;<z>
);<z>
_type;<z>
;<z>
) {<z>
if(!(provider instanceof IStaticContentProvider)) {<z>
);<z>
;<z>
public void render(Block html) {<z>
>> mainList = html.<z>
).<z>
).<z>
().<z>
_().<z>
"nodes"), "Nodes")._();<z>
>>> subAppsList = mainList.<z>
a(url("apps"), "Applications").<z>
;<z>
)._();<z>
: RMAppState.values()) {<z>
);<z>
subAppsList._()._();<z>
_().<z>
"Tools").<z>
().<z>
, "Configuration")._().<z>
_().<z>
.<z>
()._().<z>
;<z>
) {<z>
JedisPool jedisPool;<z>
;<z>
= true;<z>
config.testWhileIdle = true;<z>
config.maxActive = 25;<z>
config.maxIdle = 0;<z>
= 0;<z>
;<z>
"VCAP_SERVICES");<z>
!= null) {<z>
(services);<z>
).getJSONObject("credentials");<z>
obj.getString("hostname");<z>
);<z>
.getString("password");<z>
0, password);<z>
} else {<z>
(config, "localhost");<z>
;<z>
jedisPool;<z>
} catch (JSONException e) {<z>
error("Failed to init", e);<z>
return null;<z>
, int priority, boolean daemon) {<z>
.task = task;<z>
thread = new Thread(name) {<z>
public void run() {<z>
runTask();<z>
finally {<z>
task);<z>
.setDaemon(daemon);<z>
);<z>
;<z>
;<z>
FunctionDescr functionDescr) {<z>
.template = new String();<z>
parameterTemplate = processParameters( functionDescr.getParameterNames(),<z>
.getParameterTypes() );<z>
) + "(" + parameterTemplate + "){" +<z>
+ "}" + DrlDumper.eol;<z>
getxPath(final String saveString) {<z>
Matcher matcher = XPATH_PATTERN.matcher(saveString);<z>
;<z>
return saveString;<z>
)<z>
();<z>
(sm != null)<z>
(setRunAsIdentity);<z>
(trace)<z>
+ runAs);<z>
threadRunAsStacks.push(runAs);<z>
<Tab> buildTabs() {<z>
new LinkedList<Tab>();<z>
),<z>
);<z>
( "log-s.png" ),<z>
) );<z>
"license-s.png" ),<z>
);<z>
),<z>
() ) );<z>
;<z>
void handleConsumeOk(String consumerTag) {<z>
)) {<z>
));<z>
clearAllBreakpoints() {<z>
);<z>
()) {<z>
e.nextElement();<z>
;<z>
horizontal( Kernel1D_I32 kernel ,<z>
dest,<z>
boolean includeBorder) {<z>
= image.data;<z>
dest.data;<z>
kernel.data;<z>
kernel.getRadius();<z>
();<z>
yBorder = includeBorder ? 0 : radius;<z>
;<z>
.getHeight()-yBorder;<z>
) {<z>
+ i*dest.stride+radius;<z>
image.stride - radius;<z>
radius;<z>
jEnd; j++ ) {<z>
0;<z>
j;<z>
) {<z>
] & 0xFF) * dataKer[k];<z>
] = total;<z>
void ruleOpAdd() throws RecognitionException {<z>
;<z>
.backtracking==0 ) {<z>
getOpAddAccess().getAlternatives());<z>
(FOLLOW_rule__OpAdd__Alternatives_in_ruleOpAdd1667);<z>
;<z>
._fsp--;<z>
failed) return ;<z>
==0 ) {<z>
().getAlternatives());<z>
{<z>
);<z>
;<z>
;<z>
void removeListener(String component, GamepadListener listener)<z>
(component);<z>
(handler == null)<z>
(listener);<z>
if (handler.isEmpty())<z>
;<z>
SaikuParameter(LogicalColumn logicalColumn) {<z>
LocaleHelper.getLocale().toString();<z>
;<z>
>());<z>
name = logicalColumn.getName(locale);<z>
{<z>
TimeObservation.Properties.name) {<z>
return UMLPackage.eINSTANCE.getNamedElement_Name();<z>
.visibility) {<z>
getNamedElement_Visibility();<z>
UmlViewsRepository.TimeObservation.Properties.clientDependency) {<z>
UMLPackage.eINSTANCE.getNamedElement_ClientDependency();<z>
TimeObservation.Properties.owningTemplateParameter) {<z>
);<z>
Properties.templateParameter) {<z>
();<z>
TimeObservation.Properties.event) {<z>
UMLPackage.eINSTANCE.getTimeObservation_Event();<z>
Properties.firstEvent) {<z>
.eINSTANCE.getTimeObservation_FirstEvent();<z>
.associatedFeature(editorKey);<z>
DatabaseContext2(DatabaseLoginCredentials loginCredentials) {<z>
.createDataSource(loginCredentials);<z>
);<z>
= new TransactionTemplate(txnManager);<z>
new JdbcTemplate(dataSource);<z>
new SimpleJdbcTemplate(jdbcTemplate);<z>
this.dbType = loginCredentials.getDbType();<z>
setStatementFetchSizeForStreaming();<z>
switch (loginCredentials.getDbType()) {<z>
:<z>
this);<z>
:<z>
;<z>
.getDbType() + ".");<z>
root, long targetBytes, int destination)<z>
StopRequestException {<z>
if (targetBytes == 0) {<z>
||<z>
== Downloads.Impl.DESTINATION_EXTERNAL) {<z>
).equals(Environment.MEDIA_MOUNTED)) {<z>
,<z>
);<z>
bytesAvailable = getAvailableBytesInFileSystemAtGivenRoot(root);<z>
if (bytesAvailable < sDownloadDataDirLowSpaceThreshold) {<z>
);<z>
;<z>
(root);<z>
) {<z>
(mSystemCacheDir)) {<z>
(Constants.TAG, "System cache dir ('/cache') is running low on space." +<z>
bytesAvailable);<z>
} else {<z>
StopRequestException(Downloads.Impl.STATUS_INSUFFICIENT_SPACE_ERROR,<z>
+<z>
" is below 10% availability. stopping this download.");<z>
.equals(mDownloadDataDir)) {<z>
(mDownloadDataDir);<z>
) {<z>
TAG, "Downloads data dir: " + root +<z>
);<z>
(bytesAvailable < targetBytes) {<z>
(destination, sDownloadDataDirLowSpaceThreshold);<z>
removeSpuriousFiles();<z>
bytesAvailable = getAvailableBytesInDownloadsDataDir(mDownloadDataDir);<z>
if (bytesAvailable < targetBytes) {<z>
.Impl.STATUS_INSUFFICIENT_SPACE_ERROR,<z>
+ root +<z>
" and unable to free any more");<z>
getOrganization(<z>
long organizationId)<z>
,<z>
.exception.SystemException {<z>
,<z>
, _getOrganizationParameterTypes7);<z>
methodHandler = new MethodHandler(methodKey,<z>
;<z>
;<z>
);<z>
{<z>
.portal.kernel.exception.PortalException) {<z>
portal.kernel.exception.PortalException)e;<z>
kernel.exception.SystemException) {<z>
e;<z>
kernel.exception.SystemException(e);<z>
liferay.portal.model.Organization)returnObj;<z>
.SystemException se) {<z>
;<z>
;<z>
Builder create() {<z>
();<z>
.Message.Response.ViewerResponse();<z>
;<z>
[] getNextEntry(long timeoutMsecs) throws InterruptedException<z>
(_head == null) {<z>
);<z>
) {<z>
result = _peekedEntry;<z>
null;<z>
;<z>
_entryCount > 0) {<z>
;<z>
now = System.currentTimeMillis();<z>
long end = now + timeoutMsecs;<z>
while (now < end) {<z>
- now);<z>
) {<z>
return _doGetNext();<z>
= System.currentTimeMillis();<z>
return null;<z>
static ConnectionInfoLookupResponse createReceiverNotFound() {<z>
= new ConnectionInfoLookupResponse();<z>
);<z>
;<z>
{<z>
getItemAtPosition(position);<z>
Intent intent = new Intent();<z>
);<z>
Activity.RESULT_OK, intent);<z>
finish();<z>
, boolean setMembers, boolean setInvites) {<z>
if (player != null) {<z>
)) {<z>
(player, "leader", leader);<z>
else {<z>
plugin.deleteData(player, "leader");<z>
deleteData(player, "members");<z>
;<z>
) {<z>
: members) {<z>
.setString(member, "leader", leader);<z>
setMembers) {<z>
leader, "members", members);<z>
(setLeader || setInvites) {<z>
leader, "invites", invites);<z>
String s, Color c, GuiElementType t){<z>
;<z>
y;<z>
string = s;<z>
= t;<z>
;<z>
(String contentViewName,<z>
, Long pageSize, List<SortInfo> sortInfos,<z>
) throws UnsupportedEncodingException,<z>
ContentViewState state = null;<z>
if (jsonContentViewState != null<z>
).length() != 0) {<z>
fromJSON(jsonContentViewState, true);<z>
contentViewName != null) {<z>
ContentViewStateImpl();<z>
.setContentViewName(contentViewName);<z>
null) {<z>
) {<z>
.setCurrentPage(currentPage);<z>
) != -1) {<z>
(pageSize);<z>
sortInfos != null) {<z>
sortInfos);<z>
contentViewService.restoreContentView(state);<z>
private static void doCommit(final ModifiableRootModel model) {<z>
) {<z>
Throwable {<z>
;<z>
);<z>
void newFile()<z>
null )<z>
)<z>
.WAIT_CURSOR ));<z>
= KeyStore.getInstance( "IAIKKeyStore", "IAIK" );<z>
ex )<z>
toString ());<z>
ks = KeyStore.getInstance("jks");<z>
;<z>
( Exception e )<z>
( e );<z>
(ks);<z>
;<z>
getDefaultCursor());<z>
false;<z>
public Control createContents(Composite parent) {<z>
SWT.NONE);<z>
, 10));<z>
, SWT.None);<z>
));<z>
;<z>
);<z>
fMarkReadStateCheck.setSelection(fPrefMarkReadState);<z>
() {<z>
SelectionEvent e) {<z>
.getSelection());<z>
});<z>
Spinner(markReadAfterContainer, SWT.BORDER);<z>
.setMinimum(0);<z>
);<z>
1000);<z>
());<z>
, SWT.None);<z>
label.setText(Messages.ReadingPropertyPage_SECONDS);<z>
new Button(container, SWT.CHECK);<z>
(Messages.ReadingPropertyPage_MARK_READ_ON_SCROLLING);<z>
(fPrefMarkReadOnScrolling);<z>
container, SWT.CHECK);<z>
setText(Messages.ReadingPropertyPage_MARK_READ_ON_SWITCH);<z>
.setSelection(fPrefMarkReadOnFeedChange);<z>
, SWT.CHECK);<z>
;<z>
(fPrefMarkReadOnTabClose);<z>
new Button(container, SWT.CHECK);<z>
(Messages.ReadingPropertyPage_MARK_READ_ON_MINIMIZE);<z>
fPrefMarkReadOnMinimize);<z>
return container;<z>
addCategorySwitch(<z>
CDOMSingleRef<WieldCategory>> qo)<z>
add(qo);<z>
{<z>
maxBitRate == null) {<z>
;<z>
int w, h;<z>
) {<z>
320; h = 240;<z>
1000) {<z>
480; h = 360;<z>
else {<z>
640; h = 480;<z>
{<z>
h);<z>
|| existingHeight < h) {<z>
(existingHeight));<z>
);<z>
h * aspectRate);<z>
even(h));<z>
model.KaleoInstance findByKDI_C_First(<z>
,<z>
util.OrderByComparator orderByComparator)<z>
.exception.SystemException,<z>
.kaleo.NoSuchInstanceException {<z>
return getPersistence()<z>
(kaleoDefinitionId, completed,<z>
);<z>
HttpServletRequest req,<z>
HttpServletResponse resp)<z>
{<z>
req.getHeader("Destination");<z>
== null) {<z>
resp.sendError(WebdavStatus.SC_BAD_REQUEST);<z>
false;<z>
destinationPath, "UTF8");<z>
destinationPath.indexOf("://");<z>
{<z>
int firstSeparator =<z>
;<z>
) {<z>
"/";<z>
{<z>
.substring(firstSeparator);<z>
else {<z>
getServerName();<z>
)) {<z>
.length());<z>
int portIndex = destinationPath.indexOf(":");<z>
>= 0) {<z>
destinationPath = destinationPath.substring(portIndex);<z>
if (destinationPath.startsWith(":")) {<z>
);<z>
firstSeparator < 0) {<z>
destinationPath = "/";<z>
} else {<z>
(firstSeparator);<z>
= RequestUtil.normalize(destinationPath);<z>
contextPath = req.getContextPath();<z>
&&<z>
.startsWith(contextPath))) {<z>
length());<z>
= req.getPathInfo();<z>
) {<z>
String servletPath = req.getServletPath();<z>
&&<z>
))) {<z>
= destinationPath<z>
.length());<z>
> 0)<z>
log("Dest path :" + destinationPath);<z>
) ||<z>
{<z>
.SC_FORBIDDEN);<z>
;<z>
req);<z>
).startsWith("/WEB-INF")) ||<z>
"/META-INF"))) {<z>
);<z>
false;<z>
{<z>
;<z>
return false;<z>
overwrite = true;<z>
"Overwrite");<z>
) {<z>
(overwriteHeader.equalsIgnoreCase("T")) {<z>
true;<z>
} else {<z>
false;<z>
true;<z>
);<z>
} catch (NamingException e) {<z>
exists = false;<z>
if (overwrite) {<z>
{<z>
)) {<z>
;<z>
else {<z>
WebdavStatus.SC_CREATED);<z>
{<z>
exists) {<z>
.SC_PRECONDITION_FAILED);<z>
false;<z>
);<z>
result = copyResource(resources, errorList,<z>
, destinationPath);<z>
!errorList.isEmpty())) {<z>
{<z>
nextElement().intValue());<z>
} else {<z>
errorList);<z>
return false;<z>
) {<z>
);<z>
} else {<z>
resp.setStatus(WebdavStatus.SC_CREATED);<z>
destinationPath);<z>
return true;<z>
() {<z>
fileTextfield = createFileTextfield();<z>
= new JLabel(name);<z>
));<z>
p, Collection<ItemStack> items) {<z>
), p, items);<z>
addTrade(trade);<z>
.getId();<z>
) {<z>
(contentType != null<z>
toLowerCase())<z>
()))) {<z>
true;<z>
} else {<z>
;<z>
scheduleFullUpdate() {<z>
) {<z>
) {<z>
update(false);<z>
;<z>
, CodeAttribute codeAttribute, int offset, FullFrame fullFrame)<z>
fullFrame.u2offsetDelta = dataInput.readUnsignedShort();<z>
;<z>
.variablesCount];<z>
index++)<z>
createVerificationType();<z>
);<z>
] = verificationType;<z>
fullFrame.stackCount = dataInput.readUnsignedShort();<z>
[fullFrame.stackCount];<z>
)<z>
);<z>
, codeAttribute, offset, index, this);<z>
stack[index] = verificationType;<z>
public String getColName(int i)<z>
();<z>
(i);<z>
null;<z>
() {<z>
ParameterNames.MAX_RESULTS);<z>
{<z>
Integer val = Integer.parseInt(maxResString);<z>
(val.intValue() < 1) {<z>
RuntimeException(<z>
" should be > 0" );<z>
val;<z>
return null;<z>
y2,<z>
double y4,<z>
double[] params) {<z>
;<z>
double dy = y4 - y3;<z>
- x1);<z>
.abs(d) < EPSILON) {<z>
0;<z>
d;<z>
dx != 0) {<z>
- x3) / dx;<z>
dy != 0) {<z>
;<z>
else {<z>
= 0.0;<z>
[1] <= 1) {<z>
1;<z>
;<z>
) {<z>
();<z>
interfaceNames = new ArrayList<String>();<z>
) {<z>
interfaceName : interfaces) {<z>
));<z>
else {<z>
UNDEFINED);<z>
interfaceNames;<z>
close() throws FlumeException{<z>
{<z>
;<z>
;<z>
len) throws IOException {<z>
if (debugOutput != null) {<z>
.write(b, off, len);<z>
;<z>
();<z>
== null && writeCount > bufferOverflowWarning)) {<z>
Thread.sleep(CHECK_INTERVAL);<z>
catch (InterruptedException e) {<z>
();<z>
buffer != null) {<z>
= (int) (writeCount % maxMemorySize);<z>
.length - (len - off)) {<z>
) {<z>
(buffer, maxMemorySize);<z>
- off);<z>
; i++) {<z>
];<z>
else {<z>
off));<z>
len - off) > 0) {<z>
;<z>
10) {<z>
i < len; i++) {<z>
null && shiftScr) {<z>
, (int) timeseek);<z>
;<z>
timeend == 0) {<z>
;<z>
+ packetLength < writeCount && buffer != null) {<z>
);<z>
;<z>
)] == 71) {<z>
= 188;<z>
4;<z>
)] & 0x20) == 0x20) {<z>
256) % 256);<z>
) {<z>
1;<z>
-70) {<z>
14;<z>
= -1;<z>
{<z>
) % 256);<z>
!= -1) {<z>
;<z>
) {<z>
mb - 5;<z>
;<z>
packetLength;<z>
void handleEvent(){<z>
== IInteractionConstants.NEW_ANALYSIS){<z>
event.info());<z>
) == IInteractionConstants.NEW_CFG){<z>
().info());<z>
IInteractionConstants.NEW_BEFORE_ANALYSIS_INFO){<z>
);<z>
() == IInteractionConstants.NEW_AFTER_ANALYSIS_INFO){<z>
.info());<z>
{<z>
;<z>
IInteractionConstants.NEW_AFTER_ANALYSIS_INFO_AUTO){<z>
());<z>
IInteractionConstants.DONE){<z>
waitForContinue();<z>
IInteractionConstants.STOP_AT_NODE){<z>
());<z>
type() == IInteractionConstants.CLEARTO){<z>
info());<z>
() == IInteractionConstants.REPLACE){<z>
(getEvent().info());<z>
.type() == IInteractionConstants.CALL_GRAPH_START){<z>
).info());<z>
IInteractionConstants.CALL_GRAPH_NEXT_METHOD){<z>
().info());<z>
.type() == IInteractionConstants.CALL_GRAPH_PART){<z>
().info());<z>
properties) {<z>
) : null;<z>
(ns == null) {<z>
new IllegalArgumentException("NamespaceHandler service does not have an associated "<z>
+ " property defined");<z>
{<z>
asList((URI[]) ns);<z>
if (ns instanceof URI) {<z>
;<z>
else if (ns instanceof String) {<z>
.create((String) ns));<z>
{<z>
String[]) ns;<z>
.length);<z>
for (String string : strings) {<z>
create(string));<z>
namespaces;<z>
if (ns instanceof Collection) {<z>
ns;<z>
URI>(col.size());<z>
for (Object o : col) {<z>
(o));<z>
namespaces;<z>
]) {<z>
(Object[]) ns;<z>
length);<z>
) {<z>
.add(toURI(o));<z>
;<z>
else {<z>
IllegalArgumentException("NamespaceHandler service has an associated "<z>
;<z>
headerOnly(String header) {<z>
_header = new char[0];<z>
;<z>
new StringReader(header);<z>
String getResourceStorePath()<z>
id = getRepositoryPathFieldId();<z>
( id == null )<z>
;<z>
;<z>
(XMLTag child) throws SAXException {<z>
) {<z>
);<z>
.add(child);<z>
public ArrayList<Track> getRecordingTracks()<z>
Track>();<z>
;i++ )<z>
).isSolo())<z>
.clear();<z>
i));<z>
recs;<z>
)<z>
;<z>
recs;<z>
setVisible(boolean visible) {<z>
();<z>
(visible) {<z>
();<z>
setVisible(visible);<z>
get(int index) {<z>
(index >= size) {<z>
);<z>
index];<z>
String value)<z>
);<z>
= namespaceURI;<z>
;<z>
specified;<z>
;<z>
ResourceException {<z>
"{\"type\":\"Feature\",\"id\":\"tiger_roads.1\",\"geometry\":{\"type\":\"MultiLineString\",\"coordinates\":[[[-73.999559,40.73158],[-73.999079,40.732188]]]},\"geometry_name\":\"the_geom\",\"properties\":{\"CFCC\":\"A41\",\"NAME\":\"Washington Sq W\",\"bbox\":[-73.999559,40.73158,-73.999079,40.732188]}}";<z>
);<z>
().setEntity(rep);<z>
(Status.SUCCESS_OK);<z>
, int b, int s,<z>
{<z>
(y >= height)) {<z>
new ArrayIndexOutOfBoundsException<z>
("Coordinate out of bounds!");<z>
);<z>
[b];<z>
b];<z>
,value);<z>
String macAlgorithm, String provider)<z>
.macAlgorithm = macAlgorithm;<z>
= Mac.getInstance(macAlgorithm, provider);<z>
= mac.getMacLength();<z>
)<z>
throw new RuntimeException(e);<z>
NoSuchProviderException e)<z>
new RuntimeException(e);<z>
Object key) {<z>
();<z>
: count;<z>
0x7FFFFFFF) % table.length;<z>
!=null; e=e.next) {<z>
) {<z>
e.get();<z>
;<z>
menu, boolean menuAppendIfMissing,<z>
) {<z>
boolean visible = true;<z>
if (visibilityTest != null) {<z>
ISelection selection = selProvider.getSelection();<z>
selection instanceof IStructuredSelection) {<z>
visible = visibilityTest<z>
.isEnabledFor((IStructuredSelection) selection);<z>
{<z>
visibilityTest.isEnabledFor(selection);<z>
) {<z>
toolbar,<z>
toolAppendIfMissing);<z>
fieldName) {<z>
get(fieldName);<z>
if (f != null) {<z>
f.getBytes();<z>
return null;<z>
() {<z>
AbstractLazyComplexTypeImpl(<z>
,"ML_UserDefinedCS_Type"),<z>
false, false, null, null) {<z>
) {<z>
;<z>
public Collection<PropertyDescriptor> buildDescriptors() {<z>
>();<z>
(<z>
AttributeDescriptorImpl(<z>
,"alternativeExpression"),<z>
false, null));<z>
descriptors;<z>
return builtType;<z>
{<z>
) log("updateContact");<z>
())) {<z>
, true);<z>
uri = getContentURI();<z>
();<z>
.put("tag", mName);<z>
, mNumber);<z>
());<z>
"newNumber", getNumberFromTextField());<z>
"pin2", mPin2);<z>
));<z>
, null, null);<z>
true);<z>
getText(R.string.updating_fdn_contact));<z>
(UUID ownerId) {<z>
;<z>
"AVR";<z>
"Legendary");<z>
add("Angel");<z>
.setGreen(true);<z>
.color.setWhite(true);<z>
new MageInt(5);<z>
(5);<z>
));<z>
);<z>
)));<z>
MemberType valueOf(<z>
) {<z>
) != getDescriptor()) {<z>
.IllegalArgumentException(<z>
"EnumValueDescriptor is not for this type.");<z>
getIndex()];<z>
void doStart() throws Exception<z>
;<z>
String, Session>());<z>
+ ":" + virtualHostFrom(_context));<z>
));<z>
newSingleThreadScheduledExecutor();<z>
scheduleScavenging();<z>
IConstructor> builder) {<z>
AbstractStackNode[1];<z>
108}, null, null);<z>
;<z>
buf, Item item)<z>
short byteCount = 32;<z>
.length() * 2;<z>
buf, byteCount);<z>
(buf, 0);<z>
());<z>
));<z>
;<z>
(buf, 0);<z>
item.getTempItemTimeLeft());<z>
item.getTempTradeTimeLeft());<z>
buf, 0);<z>
buf, 0);<z>
RecognitionException {<z>
= keepStackSize();<z>
backtracking==0 ) {<z>
).getElementJvmOperationCrossReference_0_0());<z>
( state.backtracking==0 ) {<z>
().getElementJvmOperationValidIDParserRuleCall_0_0_1());<z>
;<z>
ruleValidID();<z>
--;<z>
.failed) return ;<z>
.backtracking==0 ) {<z>
.getXAnnotationElementValuePairAccess().getElementJvmOperationValidIDParserRuleCall_0_0_1());<z>
0 ) {<z>
).getElementJvmOperationCrossReference_0_0());<z>
) {<z>
reportError(re);<z>
,re);<z>
(stackSize);<z>
, int propertyIndex, ChangeContext changeContext)<z>
switch (propertyIndex)<z>
FORMAL_PARAMETER:<z>
(getFormalParameter(), otherEnd, changeContext);<z>
, changeContext);<z>
getItem(int position) {<z>
null) {<z>
null;<z>
position);<z>
public void executeQuery() {<z>
;<z>
true);<z>
(RuntimeException ex) {<z>
String URL, MultipartEntity postData) throws IOException {<z>
;<z>
httpost = new HttpPost(URL);<z>
null) {<z>
;<z>
false);<z>
;<z>
.execute(httpost);<z>
.httpRunning = false;<z>
response.getEntity();<z>
!= null) {<z>
respEntity.getContent();<z>
GetText(serverInput);<z>
{<z>
Log.d(CLASS_TAG, "PostFileUpload(): MalformedURLException");<z>
);<z>
"";<z>
} catch (Exception ex) {<z>
"";<z>
return "";<z>
(char[][] matrix) {<z>
matrix.length == 0) {<z>
;<z>
[0].length;<z>
int[n];<z>
max = 0;<z>
("Height == ");<z>
LargestRectangle largestRectangle = new LargestRectangle();<z>
i++) {<z>
< n; j++) {<z>
] + 1 : 0;<z>
]);<z>
System.out.println();<z>
== 6) {<z>
;<z>
height);<z>
(curMax > max) {<z>
;<z>
max;<z>
public InputStream openStream() {<z>
content = new StringBuilder();<z>
providerImpls) {<z>
(providerImpl).append('\n');<z>
);<z>
(NodeRef nodeRef)<z>
Long nodeId = getNodeIdNotNull(nodeRef);<z>
Long aclId = nodeDAO.getNodeAclId(nodeId);<z>
;<z>
[] msgs, int error) {<z>
sms = msgs[0];<z>
sms);<z>
, error);<z>
pduCount = msgs.length;<z>
{<z>
));<z>
} else {<z>
new StringBuilder();<z>
; i < pduCount; i++) {<z>
i];<z>
(sms.mWrappedSmsMessage != null) {<z>
sms.getDisplayMessageBody());<z>
replaceFormFeeds(body.toString()));<z>
getContentResolver();<z>
String originatingAddress = sms.getOriginatingAddress();<z>
int protocolIdentifier = sms.getProtocolIdentifier();<z>
=<z>
.ADDRESS + " = ? AND " +<z>
.PROTOCOL + " = ?";<z>
[] {<z>
.toString(protocolIdentifier)<z>
CONTENT_URI,<z>
;<z>
) {<z>
if (cursor.moveToFirst()) {<z>
getLong(REPLACE_COLUMN_ID);<z>
Uri messageUri = ContentUris.withAppendedId(<z>
);<z>
update(context, resolver, messageUri,<z>
null);<z>
return messageUri;<z>
finally {<z>
();<z>
error);<z>
throws IOException {<z>
0L;<z>
[] volumes = this.getVolumes();<z>
.length; idx++) {<z>
();<z>
remaining;<z>
throws Exception {<z>
();<z>
IWorkspaceRoot root = workspace.getRoot();<z>
= new Path(path);<z>
;<z>
);<z>
)) {<z>
true, true, null);<z>
{<z>
content), true, null);<z>
(organize) modifiedFiles.add(file);<z>
( File file, Document document )<z>
XMLWriter writer = new IdeaXmlWriter( file );<z>
document );<z>
);<z>
activate()<z>
;<z>
0;<z>
startDatabase();<z>
NOT_YET_FOUND(false) {<z>
) {<z>
);<z>
public Mat3(float diagonal) {<z>
;<z>
;<z>
= diagonal;<z>
[8] = diagonal;<z>
() {<z>
new MyWordIncremetanlTrapear();<z>
;<z>
MyWordIncremetanlTrapear<T>) wp;<z>
ProcessorContext context) throws ContributionReadException, XMLStreamException {<z>
new OperationSelectorJMSDefault();<z>
return wireFormat;<z>
, Object> props) {<z>
) {<z>
emailTarget = emailReportingDao.createTarget();<z>
setEmailAddress(emailAddress);<z>
emailInfo, props);<z>
{<z>
true;<z>
java.awt.event.ActionEvent evt) {<z>
;<z>
{<z>
{<z>
.getSelectedIndex();<z>
getSelectedItem());<z>
Table table = new Table();<z>
table);<z>
nbPart, 0, false);<z>
;<z>
println();<z>
);<z>
{<z>
(Jeu jeu) {<z>
getZoneDessin().repaint();<z>
});<z>
;<z>
monJeu.jouer();<z>
;<z>
config){<z>
.config = config;<z>
= new AtomCache(config);<z>
()));<z>
in, config);<z>
{<z>
();<z>
stopNumber) throws IOException, XmlPullParserException {<z>
(stopNumber);<z>
());<z>
post = new HttpPost("https://api.octranspo1.com/v1.1/GetRouteSummaryForStop");<z>
(3);<z>
oc_transpo_application_id)));<z>
oc_transpo_application_key)));<z>
));<z>
UrlEncodedFormEntity(params));<z>
execute(post);<z>
.newInstance();<z>
factory.setNamespaceAware(true);<z>
;<z>
();<z>
;<z>
.next();<z>
);<z>
xpp.next();<z>
;<z>
GetRouteSummaryForStopResult result = new GetRouteSummaryForStopResult(xpp);<z>
close();<z>
return result;<z>
findName(String defaultName) {<z>
null) {<z>
return defaultName;<z>
index++) {<z>
"%s%d", defaultName, index);<z>
null) {<z>
return candidate;<z>
) {<z>
== 0) {<z>
<Comment>();<z>
add(comment);<z>
() {<z>
ParamSpaceUtils.getFullParamSpace(currConf);<z>
RecursiveRandomSearch<ParameterSpacePoint> rrs =<z>
RecursiveRandomSearch<ParameterSpacePoint>(currConf);<z>
this);<z>
Object o) {<z>
o ) {<z>
;<z>
instanceof Son ) ) {<z>
;<z>
= (Son) o;<z>
;<z>
fillCoolBar(ICoolBarManager coolBar) {<z>
| SWT.RIGHT);<z>
new ToolBarContributionItem(toolbar, "main"));<z>
add(connectAction);<z>
add(new Separator());<z>
add(saveAction);<z>
));<z>
;<z>
dbRelationOpenAction);<z>
());<z>
);<z>
);<z>
( SessionManager.getLoginType() )<z>
( SessionManager.getLoginType() )<z>
);<z>
add(new Separator());<z>
.add(preferenceAction);<z>
;<z>
bugIssueAction);<z>
toolbar.add(aboutAction);<z>
;<z>
(exitAction);<z>
Weblog newWeblog)<z>
throws WebloggerException {<z>
ArrayList<String>();<z>
;<z>
roller.getUserManager().grantWeblogPermission(<z>
getCreator(), actions);<z>
new WeblogCategory(<z>
null );<z>
.store(rootCat);<z>
= WebloggerConfig.getProperty("newuser.categories");<z>
;<z>
) {<z>
.split(",");<z>
) {<z>
= new WeblogCategory(<z>
splitcats[i],<z>
,<z>
null );<z>
0) firstCat = c;<z>
(c);<z>
this.strategy.store(c);<z>
setBloggerCategory(firstCat);<z>
;<z>
store(newWeblog);<z>
WeblogBookmarkFolder(<z>
, "root", "root", newWeblog);<z>
this.strategy.store(root);<z>
;<z>
blogroll = WebloggerConfig.getProperty("newuser.blogroll");<z>
!= null) {<z>
= blogroll.split(",");<z>
<splitroll.length; i++) {<z>
].split("\\|");<z>
) {<z>
new WeblogBookmark(<z>
],<z>
].trim(),<z>
null);<z>
.store(b);<z>
.getBookmarks().add(b);<z>
getMediaFileManager().createRootMediaFileDirectory(newWeblog);<z>
.flush();<z>
.getPingTargetManager();<z>
();<z>
);<z>
;<z>
(pingTargets.hasNext()) {<z>
= (PingTarget) pingTargets.next();<z>
{<z>
AutoPing autoPing = new AutoPing(<z>
, pingTarget, newWeblog);<z>
);<z>
GatewayException, IOException, InterruptedException<z>
, null, getGatewayId());<z>
.done();<z>
();<z>
;<z>
));<z>
... path) {<z>
file = null;<z>
[0]);<z>
catch (IOException e) {<z>
);<z>
;<z>
ImageDisplay root)<z>
throw new IllegalArgumentException("No model.");<z>
= model;<z>
);<z>
();<z>
(int status) {<z>
if (delegate != null<z>
STATUS_MARKED_ROLLEDBACK<z>
delegate.willMarkAsRollbackOnly(this)) {<z>
status = status;<z>
(Perspective perspective) {<z>
;<z>
, perspective);<z>
true;<z>
obj) {<z>
== obj)<z>
;<z>
if (obj == null)<z>
return false;<z>
) != obj.getClass())<z>
return false;<z>
final Term other = (Term) obj;<z>
getId()>0){<z>
(id != other.getId()) {<z>
false;<z>
if (name == null) {<z>
other.getName() != null) {<z>
return false;<z>
else {<z>
))) {<z>
;<z>
return true;<z>
, ParserContext pc) {<z>
String logoutUrl = null;<z>
;<z>
;<z>
;<z>
= null;<z>
class);<z>
(element != null) {<z>
Object source = pc.extractSource(element);<z>
.getRawBeanDefinition().setSource(source);<z>
element.getAttribute(ATT_LOGOUT_URL);<z>
(ATT_LOGOUT_HANDLER);<z>
, pc, source);<z>
= element.getAttribute(ATT_LOGOUT_SUCCESS_URL);<z>
pc, source);<z>
;<z>
element.getAttribute(ATT_DELETE_COOKIES);<z>
!StringUtils.hasText(logoutUrl)) {<z>
;<z>
"filterProcessesUrl", logoutUrl);<z>
(successHandlerRef)) {<z>
.hasText(logoutSuccessUrl)) {<z>
", but not both",<z>
element));<z>
(successHandlerRef);<z>
{<z>
{<z>
DEF_LOGOUT_SUCCESS_URL;<z>
(logoutSuccessUrl);<z>
;<z>
));<z>
sclh);<z>
null) {<z>
add(new RuntimeBeanReference(rememberMeServices));<z>
) {<z>
cookieDeleter = new RootBeanDefinition(CookieClearingLogoutHandler.class);<z>
deleteCookies, ",");<z>
);<z>
.add(cookieDeleter);<z>
.addConstructorArgValue(logoutHandlers);<z>
;<z>
{<z>
final Runnable run = new Runnable() {<z>
) {<z>
== null || _shell.isDisposed()) {<z>
_shell.getAlpha();<z>
-= FADE_OUT_STEP;<z>
if (cur <= 0) {<z>
(0);<z>
null) {<z>
dispose();<z>
();<z>
_shell);<z>
cur);<z>
timerExec(FADE_TIMER, this);<z>
Exception err) {<z>
();<z>
).timerExec(FADE_TIMER, run);<z>
throws SQLException {<z>
getIndexes(name);<z>
{<z>
], value);<z>
{<z>
();<z>
JCExpression pid = null;<z>
);<z>
mods = null;<z>
);<z>
.token() == MONKEYS_AT)<z>
= modifiersOpt();<z>
(S.token() == PACKAGE) {<z>
if (mods != null) {<z>
.flags);<z>
packageAnnotations = mods.annotations;<z>
mods = null;<z>
;<z>
();<z>
SEMI);<z>
>();<z>
boolean checkForImports = true;<z>
) {<z>
<= errorEndPos) {<z>
);<z>
if (S.token() == EOF)<z>
{<z>
;<z>
else {<z>
typeDeclaration(mods);<z>
def) == dc) {<z>
;<z>
def instanceof JCExpressionStatement)<z>
JCExpressionStatement)def).expr;<z>
defs.append(def);<z>
JCClassDecl)<z>
checkForImports = false;<z>
;<z>
;<z>
toplevel, dc);<z>
elems.isEmpty())<z>
;<z>
if (keepDocComments)<z>
;<z>
)<z>
toplevel.lineMap = S.getLineMap();<z>
;<z>
name, String descriptor)<z>
lock.lock();<z>
name;<z>
;<z>
);<z>
static MatchStrength hasCSVFormat(InputAccessor acc,<z>
)<z>
)) {<z>
return MatchStrength.INCONCLUSIVE;<z>
b = acc.nextByte();<z>
UTF8_BOM_1) {<z>
) {<z>
return MatchStrength.INCONCLUSIVE;<z>
nextByte() != UTF8_BOM_2) {<z>
return MatchStrength.NO_MATCH;<z>
acc.hasMoreBytes()) {<z>
return MatchStrength.INCONCLUSIVE;<z>
) != UTF8_BOM_3) {<z>
MatchStrength.NO_MATCH;<z>
hasMoreBytes()) {<z>
MatchStrength.INCONCLUSIVE;<z>
();<z>
skipSpace(acc, b);<z>
if (ch < 0) {<z>
INCONCLUSIVE;<z>
separatorChar) {<z>
WEAK_MATCH;<z>
INCONCLUSIVE;<z>
, VImage dest)<z>
int xsize = 0;<z>
;<z>
msg==null)<z>
)<z>
|| msg.charAt(end) == '\r')<z>
0, end));<z>
),y,dest);<z>
) == '\n')<z>
;<z>
1;<z>
height;<z>
end));<z>
x - xsize,y,dest);<z>
;<z>
= false;<z>
format, int bufferSize) {<z>
super(lineClass);<z>
format == null) {<z>
[0];<z>
{<z>
AudioFormat[] formats = { format };<z>
this.formats = formats;<z>
.minBufferSize = bufferSize;<z>
maxBufferSize = bufferSize;<z>
public void contextInitialized(ServletContextEvent event) {<z>
();<z>
super.contextInitialized(event);<z>
readBeans();<z>
ClassLoader classLoader = PortletClassLoaderUtil.getClassLoader();<z>
ServletContext servletContext = event.getServletContext();<z>
=<z>
WebApplicationContextUtils.getWebApplicationContext(servletContext);<z>
new BeanLocatorImpl(<z>
, applicationContext);<z>
.forName(<z>
"com.liferay.util.bean.PortletBeanLocatorUtil", true,<z>
classLoader);<z>
getMethod(<z>
);<z>
(<z>
new Object[] {beanLocator});<z>
(<z>
;<z>
) {<z>
;<z>
removeAttribute(<z>
);<z>
.lang.String in0, long in1)<z>
.atlassian.confluence.rpc.InvalidSessionException,<z>
{<z>
) {<z>
NoEndPointException();<z>
.client.Call _call = createCall();<z>
(_operations[66]);<z>
.setUseSOAPAction(true);<z>
.setSOAPActionURI("");<z>
SOAP11_CONSTANTS);<z>
("http://soap.rpc.confluence.atlassian.com",<z>
"getPageHistory"));<z>
;<z>
setAttachments(_call);<z>
.lang.Long(in1) });<z>
.RemoteException) {<z>
_resp;<z>
} else {<z>
extractAttachments(_call);<z>
soap.beans.RemotePageHistory[]) _resp;<z>
(java.lang.Exception _exception) {<z>
apache.axis.utils.JavaUtils.convert(<z>
;<z>
{<z>
null) {<z>
) {<z>
axisFaultException.detail;<z>
atlassian.confluence.rpc.InvalidSessionException) {<z>
confluence.rpc.InvalidSessionException) axisFaultException.detail;<z>
rpc.RemoteException) {<z>
) axisFaultException.detail;<z>
axisFaultException;<z>
(SimpleFeatureType typeA, SimpleFeatureType typeB) {<z>
{<z>
0;<z>
) {<z>
-1;<z>
{<z>
;<z>
();<z>
= typeB.getAttributeCount();<z>
countB) {<z>
-1;<z>
a;<z>
int match = 0;<z>
i++) {<z>
i);<z>
))) {<z>
++;<z>
(a.getLocalName()))) {<z>
{<z>
;<z>
countB) && (match == countA)) {<z>
;<z>
;<z>
) {<z>
port;<z>
,<z>
int style,<z>
{<z>
parent, style);<z>
this.templateStringOption = templateStringOption;<z>
createLayoutForThis());<z>
();<z>
createPlaceholderTable();<z>
createInsertPlaceholderButton();<z>
();<z>
) {<z>
= pList.size();<z>
);<z>
size()];<z>
) {<z>
pList.get(i);<z>
p[i] = point;<z>
selectMin(p, n);<z>
);<z>
int[n];<z>
2;<z>
0;<z>
;<z>
stk[2] = 2;<z>
; i < n; i++) {<z>
) {<z>
;<z>
;<z>
++) {<z>
[i]].y));<z>
y));<z>
ret;<z>
throws Exception {<z>
applicationName, injectionSource);<z>
);<z>
close ) throws IOException<z>
{<z>
){<z>
SimpleFeature>) close;<z>
iterator.close();<z>
{<z>
(FeatureWriterIterator) close;<z>
close();<z>
void moveToSecondPhase() throws Exception {<z>
;<z>
merge(sortedShardList, queryFetchResults, queryFetchResults);<z>
= null;<z>
() != null) {<z>
);<z>
);<z>
;<z>
Map<String, Object> handshakeFields)<z>
();<z>
String> allowedTransports = getAllowedTransports();<z>
;<z>
);<z>
), allowedTransports);<z>
updateBayeuxClientState(new BayeuxClientStateUpdater()<z>
BayeuxClientState create(BayeuxClientState oldState)<z>
;<z>
;<z>
void Process8bitCLT(ImagePlus image){<z>
;<z>
();<z>
convertToByte(true);<z>
.getColorModel();<z>
(ip.getPixels());<z>
(IndexColorModel)cm;<z>
);<z>
if (transIndex>=mapSize) {<z>
setTransparent(false);<z>
transIndex = 0;<z>
k;<z>
new byte[mapSize*3];<z>
i < mapSize; i++) {<z>
=i*3;<z>
(i);<z>
byte)m.getGreen(i);<z>
)m.getBlue(i);<z>
finalize();<z>
void run() {<z>
(!isTerminated()) {<z>
);<z>
InterruptedException e) {<z>
checkAndConfigure();<z>
int ctrlCode, int fid, DataBuffer dataBuf,<z>
isFSCtrl, int filter)<z>
throws IOControlNotImplementedException, SMBException<z>
tree.findFile(fid);<z>
null || netFile.isDirectory() == false)<z>
NTInvalidParameter);<z>
instanceof ContentContext)<z>
ContentContext) tree.getContext();<z>
null)<z>
, isFSCtrl, filter, this, ctx);<z>
();<z>
null;<z>
(<z>
,<z>
,<z>
Charset encoding,<z>
{<z>
(sourcePath == null) {<z>
;<z>
{<z>
IllegalArgumentException("outputPath must not be null");<z>
(encoding == null) {<z>
);<z>
(operatorClasses == null) {<z>
IllegalArgumentException("operatorClasses must not be null");<z>
sourceFiles = toSources(sourcePath, operatorClasses);<z>
, sourceFiles);<z>
outputPath, encoding);<z>
arguments);<z>
.mkdirs() == false) {<z>
.format(<z>
);<z>
= ToolProvider.getSystemJavaCompiler();<z>
) {<z>
"Failed to create a compiler");<z>
, null, encoding);<z>
task = compiler.getTask(<z>
,<z>
;<z>
== false) {<z>
);<z>
{<z>
.close();<z>
;<z>
) {<z>
getScopeInstanceId());<z>
(scope.getName());<z>
getParentScope() != null)<z>
;<z>
)));<z>
children = scopeInfo.addNewChildren();<z>
: scope.getChildScopes())<z>
, i);<z>
= scopeInfo.addNewVariables();<z>
))<z>
(vars.addNewVariableRef(), i);<z>
()) {<z>
.CorrelationSets correlationSets = scopeInfo.addNewCorrelationSets();<z>
scope.getCorrelationSets()) {<z>
.CorrelationSet correlationSet = correlationSets.addNewCorrelationSet();<z>
"" + correlationSetDAO.getCorrelationSetId());<z>
getName());<z>
{<z>
tproperty = correlationSet.addNewCorrelationProperty();<z>
;<z>
getKey());<z>
setStringValue(property.getValue());<z>
{<z>
.getActivityRecoveries();<z>
();<z>
events = scope.listEvents();<z>
new ActivityStateDocumentBuilder();<z>
events)<z>
(e);<z>
b.getActivities()) {<z>
: recoveries) {<z>
getActivityInfo().getAiid())) {<z>
).addNewFailure();<z>
;<z>
);<z>
.setActions(recovery.getActions());<z>
(recovery.getRetries());<z>
).setStatus(TActivityStatus.FAILURE);<z>
);<z>
getPartnerLinks();<z>
) > 0) {<z>
.addNewEndpoints();<z>
(PartnerLinkDAO plink : plinks) {<z>
{<z>
();<z>
setPartnerLink(plink.getPartnerLinkName());<z>
.setPartnerRole(plink.getPartnerRoleName());<z>
plink.getPartnerEPR() != null) {<z>
getOwnerDocument();<z>
getPartnerEPR(), true));<z>
) {<z>
(m_fieldconfiguration == null) {<z>
));<z>
if (m_fieldconfiguration == null) {<z>
CmsSearchFieldConfiguration();<z>
(Exception e) {<z>
m_fieldconfiguration = new CmsSearchFieldConfiguration();<z>
() {<z>
;<z>
;<z>
(sipStack.isLoggingEnabled()) {<z>
("LingerTimer: run() : "<z>
);<z>
if (transaction instanceof SIPClientTransaction) {<z>
transaction);<z>
transaction.close();<z>
instanceof ServerTransaction) {<z>
())<z>
().logDebug("removing" + transaction);<z>
;<z>
sipStack.cacheServerConnections)<z>
<= 0) {<z>
();<z>
else {<z>
sipStack.isLoggingEnabled()<z>
&& (!sipStack.cacheServerConnections)<z>
&& transaction.isReliable()) {<z>
int useCount = transaction.encapsulatedChannel.useCount;<z>
().logDebug("Use Count = " + useCount);<z>
Element initGoTermLostNotIncludedInSlimSetTag(){<z>
(GO_TERMS_LOST_NOT_INCLUDED_IN_SLIM_SET);<z>
== null){<z>
GO_TERMS_LOST_NOT_INCLUDED_IN_SLIM_SET));<z>
GO_TERMS_LOST_NOT_INCLUDED_IN_SLIM_SET);<z>
;<z>
throws Exception<z>
assetUrl = "";<z>
, this.useRepositoryInheritance, this.useStructureInheritance);<z>
(property);<z>
= getAssetKey(property);<z>
null || "".equals(assetKey) ))<z>
= templateController.getAssetUrl(contentId);<z>
(contentId != null )<z>
contentId, assetKey);<z>
return assetUrl;<z>
profileId,<z>
request) throws NotFoundException,<z>
DatastoreException, UnauthorizedException, InvalidModelException {<z>
"A PresignedUrl must be provided");<z>
userId);<z>
;<z>
T ex ) {<z>
DEFAULT_FILTER_MATCHES )<z>
toArray( steArrayType ) );<z>
ex;<z>
{<z>
] tsapiInstructions;<z>
{<z>
= new TsapiCallControlForwarding[this.fwdVector<z>
];<z>
);<z>
== 0) {<z>
;<z>
];<z>
i < tsapiInstructions.length; i++) {<z>
].getFilter() == 1) {<z>
i] = new CallControlForwarding(<z>
getDestinationAddress(),<z>
tsapiInstructions[i].getType());<z>
} else {<z>
= new CallControlForwarding(<z>
),<z>
tsapiInstructions[i].getType(),<z>
getFilter() == 2);<z>
return instructions;<z>
fakeResources) {<z>
Object[]{results});<z>
= new ArrayList<String>();<z>
);<z>
(ModelledResource resource : fakeResources) {<z>
;<z>
ModelledResource> it = results.iterator();<z>
it.hasNext()) {<z>
();<z>
.getSymbolicName())) {<z>
remove();<z>
, "pruneFakeBundleFromResults");<z>
contributions, String locale) {<z>
.locale = locale;<z>
process(contributions);<z>
Index index = merge(contributions);<z>
);<z>
index;<z>
int id)<z>
if(emotions.containsKey(id))<z>
false;<z>
;<z>
ejbPassivate() throws EJBException, RemoteException {<z>
null;<z>
= null;<z>
;<z>
;<z>
this._mainEntity = null;<z>
_currentOpenVersionEntity = null;<z>
;<z>
this._mainEntityHome = null;<z>
null;<z>
) {<z>
();<z>
.name = null;<z>
;<z>
<String>();<z>
String>();<z>
String>();<z>
();<z>
void onUnload()<z>
.onUnload();<z>
if (codeSearch_ != null)<z>
codeSearch_.detachEventBusHandlers();<z>
public void run() {<z>
sendProgressMessage("Starting...");<z>
start();<z>
State.TERMINATED) {<z>
) {<z>
REGISTER:<z>
;<z>
case SERVER_CLIENT:<z>
SYNC:<z>
:<z>
case RESET:<z>
;<z>
sleep (100);<z>
InterruptedException ie) {<z>
"TodoSync is interrupted");<z>
);<z>
) {<z>
URISyntaxException {<z>
new Path(base.getPath());<z>
p.removeFirstSegments(2));<z>
), base.getFragment());<z>
> getAllReservationsForJob(final long jobId)<z>
UnexpectedFaultException {<z>
>();<z>
getConnection();<z>
con<z>
;<z>
, jobId);<z>
();<z>
rs.next()) {<z>
)));<z>
.close();<z>
();<z>
.close();<z>
e) {<z>
.printStackTrace();<z>
;<z>
reservationList;<z>
int dflt)<z>
str);<z>
intValue();<z>
nfe)<z>
dflt;<z>
) {<z>
<String, DeclarationWithProximity>();<z>
)) {<z>
) && isNameMatching(startingWith, d) ) {<z>
));<z>
if (unit!=null) {<z>
startingWith, proximity));<z>
:<z>
entrySet()) {<z>
= false;<z>
dwp: result.values()) {<z>
{<z>
= true;<z>
());<z>
;<z>
, String s) {<z>
range;<z>
< HighSurrogate_CodeUnit_Start) {<z>
range = BEFORE;<z>
code < Supplementary_CodePoint_Start) {<z>
range = AFTER;<z>
} else {<z>
;<z>
{<z>
index].append("\"\n + \"");<z>
range][index] = 19;<z>
== 0x5c) {<z>
.append('\\');<z>
append((char)code);<z>
2;<z>
(code > 0x20 && code < 0x7F) {<z>
)code);<z>
[index] ++;<z>
{<z>
) {<z>
);<z>
] += 12;<z>
{<z>
"\\u");<z>
);<z>
+= 6;<z>
++;<z>
oldTotalCount[index]++;<z>
( ArtifactFactory theFactory, ArtifactResolver theResolver, ArtifactRepository theLocal,<z>
MavenProject project, Log theLog )<z>
();<z>
this.factory = theFactory;<z>
= theResolver;<z>
.local = theLocal;<z>
= theRemoteRepositories;<z>
= theLog;<z>
project = project;<z>
(String[] args, String delimiter) {<z>
);<z>
); }<z>
);<z>
) {<z>
(project, true);<z>
);<z>
).setDefaultButton(buttonOK);<z>
setTitle("Convert Code From Java");<z>
init();<z>
.Expr preparedStatementGetTotalExecTime(SourceModel.Expr preparedStmt) {<z>
make(<z>
;<z>
, Component aComponent) {<z>
getParent();<z>
;<z>
null) {<z>
(aCont.isFocusTraversalPolicyProvider()) {<z>
= aCont;<z>
= aCont.getParent();<z>
(aCont == null) {<z>
return null;<z>
;<z>
{<z>
if (mCamera != null) {<z>
if (true)<z>
setPreviewDisplay(holder);<z>
setPreviewCallback(this);<z>
) {<z>
exception);<z>
) {<z>
m_scheduler == null) {<z>
m_scheduler = Executors.newSingleThreadScheduledExecutor(<z>
1, false)<z>
return m_scheduler;<z>
) {<z>
return name;<z>
= name.length();<z>
boolean isAbsolute = false;<z>
isPath = false;<z>
= 0;<z>
) {<z>
charAt(1) == ':') {<z>
;<z>
= true;<z>
;<z>
;<z>
|| i == '\\') {<z>
++;<z>
= name.charAt(i);<z>
true;<z>
(; i < length; i++) {<z>
) {<z>
'/':<z>
:<z>
;<z>
1;<z>
'.':<z>
;<z>
);<z>
{<z>
;<z>
) {<z>
if (isAbsolute) return name;<z>
{<z>
0) return name;<z>
{<z>
);<z>
{<z>
;<z>
return null;<z>
.split(PS);<z>
{<z>
paths[p];<z>
int currentPathLength = currentPath.length();<z>
continue;<z>
(0) == '~' &&<z>
currentPathLength == 1 ||<z>
== '\\')))) {<z>
"HOME");<z>
) {<z>
(1));<z>
"\\")) {<z>
currentPath += "\\";<z>
name;<z>
'/', '\\');<z>
&& executableOnly && extensionIndex == -1) {<z>
;<z>
!= null) return extendedFilename;<z>
();<z>
(filename, stat);<z>
{<z>
executableOnly) return filename;<z>
{<z>
return filename;<z>
return null;<z>
{<z>
) {<z>
if (!contains(object)) {<z>
;<z>
;<z>
) {<z>
.getAdapter(String.class);<z>
null) {<z>
EuzVisualIDRegistry.getVisualID(vid));<z>
) hint.getAdapter(View.class);<z>
(view != null) {<z>
);<z>
null;<z>
icon) {<z>
icon,true);<z>
;<z>
;<z>
;<z>
) {<z>
.toCharArray();<z>
final StringBuffer ret = new StringBuffer();<z>
; --i) {<z>
;<z>
);<z>
boolean findSelectionInXmlFile(IFile file,<z>
status,<z>
) {<z>
if (!(mEditor instanceof AndroidXmlEditor)) {<z>
;<z>
);<z>
AndroidXmlEditor editor = (AndroidXmlEditor) mEditor;<z>
smodel = null;<z>
null;<z>
;<z>
smodel = editor.getModelForRead();<z>
null) {<z>
&& node == null; --offset) {<z>
smodel.getIndexedRegion(offset);<z>
null) {<z>
addFatalError(<z>
;<z>
();<z>
getNodeType() != Node.ELEMENT_NODE) {<z>
("The selection is not inside an actual XML element.");<z>
status.isOK();<z>
IStructuredDocument sdoc = smodel.getStructuredDocument();<z>
null) {<z>
mSelectionStart;<z>
IStructuredDocumentRegion region =<z>
selStart);<z>
region != null &&<z>
{<z>
= findSelectionInRegion(region, selStart);<z>
{<z>
status.addFatalError(<z>
);<z>
!= null) {<z>
node, currAttrName, status);<z>
{<z>
mTokenString = null;<z>
} finally {<z>
if (smodel != null) {<z>
;<z>
finally {<z>
;<z>
status.isOK();<z>
) {<z>
display.createHeaderDisplay(page);<z>
;<z>
;<z>
asWidget();<z>
headWidget));<z>
getVisibility();<z>
initialVisibility == Visibility.hidden) {<z>
initialVisibility == Visibility.focused) {<z>
display.add(pageWidget, headWidget);<z>
page);<z>
else if (initialVisibility == Visibility.notFocused) {<z>
pageWidget, headWidget);<z>
(focusedPage == null) {<z>
focus(page);<z>
{<z>
);<z>
true;<z>
[] getParameterNames() {<z>
= new String[1];<z>
0] = "checkRingSystem";<z>
return params;<z>
) {<z>
{<z>
else {<z>
();<z>
(FormToolkit widgetFactory, Composite parent) {<z>
standardClass, ContentfwkViewsRepository.FORM_KIND));<z>
new EMFComboViewer(parent);<z>
);<z>
AdapterFactoryLabelProvider(new EcoreAdapterFactory()));<z>
);<z>
.setLayoutData(standardClassData);<z>
{<z>
SelectionChangedEvent event) {<z>
if (propertiesEditionComponent != null)<z>
));<z>
;<z>
);<z>
, null);<z>
return parent;<z>
{<z>
getLastReadStateOfEntity() == null) {<z>
return Collections.emptyList();<z>
.getEntries();<z>
== null || entries.isEmpty()) {<z>
;<z>
());<z>
: entries) {<z>
, AtomClientUtil.convertFromAtomLinkToResourceLink(entry.<z>
));<z>
Collections.unmodifiableCollection(resources);<z>
{<z>
serial != null) {<z>
();<z>
.str(location), ",");<z>
set("last.serial.location", locationStr);<z>
);<z>
0;<z>
();<z>
= null;<z>
(String keyword, String pageNumber){<z>
"&siteid=0&QueryKeywords="+keyword+"&AvailableItemsOnly=true&MaxEntries=5&PageNumber="+pageNumber+"&version=765";<z>
request);<z>
;<z>
= url.openConnection();<z>
.getInputStream();<z>
(input);<z>
(reader);<z>
StringBuffer sb = new StringBuffer();<z>
;<z>
readLine();<z>
);<z>
(line != null){<z>
readLine();<z>
;<z>
();<z>
sb.append(line);<z>
.toString();<z>
MalformedURLException e) {<z>
.println("url error");<z>
catch (IOException e) {<z>
"I/O exception");<z>
null;<z>
Enumeration items() {<z>
();<z>
return new Enumeration() {<z>
public boolean hasMoreElements() {<z>
.hasNext();<z>
() {<z>
);<z>
void move( final RealLocalizable localizable )<z>
.move( localizable );<z>
round( source, round );<z>
.setPosition( round );<z>
)<z>
;<z>
addOnTalkEvent(questId);<z>
(questId);<z>
(210802).addOnKillEvent(questId);<z>
(210794).addOnKillEvent(questId);<z>
questId);<z>
);<z>
);<z>
.addOnTalkEvent(questId);<z>
).addOnTalkEvent(questId);<z>
(213582).addOnKillEvent(questId);<z>
).addOnKillEvent(questId);<z>
.addOnKillEvent(questId);<z>
addOnTalkEvent(questId);<z>
boolean jj_2_1(int xla) {<z>
jj_la=xla;<z>
=jj_scanpos=current_token;<z>
jj_3_1();<z>
) {<z>
return true;<z>
0,xla);<z>
addEventAttribute(String anEventName,<z>
anAttributeName,<z>
{<z>
anEventName,<z>
1,<z>
);<z>
toILOC() {<z>
= new String("StructIdentifier Register");<z>
.split(" ");<z>
;<z>
this.getOperands().size();<z>
!= pattern.length)) {<z>
+ pattern.length);<z>
) {<z>
().equals(""))<z>
ret + r.toILOC() + ", ";<z>
();<z>
1)<z>
.length()-1);<z>
(); i++) {<z>
);<z>
;<z>
}<z>
)) {<z>
);<z>
return ret;<z>
ModelNode model) throws OperationFailedException {<z>
params =<z>
, operation, model);<z>
, addHandler.getServiceNameBase(),<z>
(),<z>
;<z>
String toString() {<z>
String result = "{[SimpleGraph:toString] triples = ";<z>
, null);<z>
: triples)<z>
);<z>
"}";<z>
;<z>
mask, String str, char placeholder) {<z>
placeholder).format(str);<z>
( final XSDSimpleTypeDefinition type,<z>
final EnterpriseDatatypeInfo edtInfo ) {<z>
.isNotNull(type);<z>
);<z>
.isValid()) {<z>
(type.getSchema());<z>
();<z>
= element.getOwnerDocument();<z>
= false;<z>
Attr attribute;<z>
edtInfo.getUuid();<z>
(uuid != null)) {<z>
attribute = doc.createAttributeNS(XsdConstants.SCHEMA_FOR_ENTERPRISE_DATATYPES_URI_2005,<z>
);<z>
(uuid);<z>
PREFIX_FOR_ENTERPRISE_DATATYPES_URI_2005);<z>
;<z>
= true;<z>
();<z>
((runtimeType != null)) {<z>
createAttributeNS(XsdConstants.SCHEMA_FOR_ENTERPRISE_DATATYPES_URI_2005,<z>
RUNTIME_TYPE_ATTRIBUTE_NAME);<z>
runtimeType);<z>
(XsdConstants.PREFIX_FOR_ENTERPRISE_DATATYPES_URI_2005);<z>
.setAttributeNode(attribute);<z>
isModified = true;<z>
);<z>
runtimeTypeFixed != null)) {<z>
.createAttributeNS(XsdConstants.SCHEMA_FOR_ENTERPRISE_DATATYPES_URI_2005,<z>
XsdSimpleTypeDefinitionAspect.RUNTIME_TYPE_FIXED_ATTRIBUTE_NAME);<z>
toString());<z>
setPrefix(XsdConstants.PREFIX_FOR_ENTERPRISE_DATATYPES_URI_2005);<z>
);<z>
;<z>
;<z>
ProgramClass programClass, ProgramField programField)<z>
))<z>
visitProgramClass(programClass);<z>
;<z>
targetsWithRenderers,<z>
{<z>
return new Comparator<PsiElement>() {<z>
PsiElement o1, PsiElement o2) {<z>
;<z>
getComparingObject(PsiElement o1) {<z>
).getComparingObject(o1);<z>
] infos, boolean initialTools){<z>
length][];<z>
infos.length; i++){<z>
], initialTools);<z>
tools;<z>
deleteChallenge() {<z>
if (challengeFile != null) {<z>
delete();<z>
;<z>
static boolean isInternalPrimitiveType(char internalType)<z>
== ClassConstants.INTERNAL_TYPE_BOOLEAN ||<z>
== ClassConstants.INTERNAL_TYPE_BYTE ||<z>
.INTERNAL_TYPE_CHAR ||<z>
INTERNAL_TYPE_SHORT ||<z>
||<z>
INTERNAL_TYPE_FLOAT ||<z>
== ClassConstants.INTERNAL_TYPE_LONG ||<z>
internalType == ClassConstants.INTERNAL_TYPE_DOUBLE;<z>
{<z>
JPanel originPanel = new JPanel();<z>
));<z>
));<z>
FindBundle.message("find.origin.from.cursor.radio"), true);<z>
(myRbFromCursor);<z>
);<z>
);<z>
ButtonGroup bgOrigin = new ButtonGroup();<z>
bgOrigin.add(myRbFromCursor);<z>
.add(myRbEntireScope);<z>
return originPanel;<z>
SecurityContext ctx, long imageID, String imageName,<z>
icon)<z>
imageID;<z>
imageName;<z>
ctx = ctx;<z>
== null) {<z>
();<z>
VIEWER);<z>
icon;<z>
.RegionServerStatusProtos.ReportRSFatalErrorResponse parseFrom(<z>
,<z>
.ExtensionRegistryLite extensionRegistry)<z>
{<z>
extensionRegistry)<z>
buildParsed();<z>
Key> ids) {<z>
table.getRowCount();) {<z>
;<z>
.getKey())) {<z>
row);<z>
else {<z>
;<z>
() throws SystemException<z>
("InfoGlueAuthenticationFilter.authorizerClass:" + InfoGlueAuthenticationFilter.authorizerClass);<z>
authorizerClass).newInstance();<z>
+ authorizationModule);<z>
authorizationModule.setExtraProperties(InfoGlueAuthenticationFilter.extraProperties);<z>
&& InfoGlueAuthenticationFilter.extraProperties.containsKey("importClass"))<z>
));<z>
toString()).newInstance();<z>
(InfoGlueAuthenticationFilter.extraProperties);<z>
true;<z>
)<z>
getMessage(), e);<z>
("Allready initialized import class");<z>
setTransactionObject(this.transactionObject);<z>
.extraProperties);<z>
(Exception e)<z>
.getMessage(), e);<z>
e.getMessage(), e);<z>
return authorizationModule;<z>
KalturaApiException {<z>
);<z>
, userId);<z>
);<z>
.kalturaClient.isMultiRequest())<z>
();<z>
) throws Exception<z>
);<z>
ToolbarButton>();<z>
request, disableCloseButton));<z>
, disableCloseButton));<z>
= "document.location.reload(true);";<z>
indexOf("UpdateContentVersion") > -1)<z>
("contentId");<z>
= request.getParameter("languageId");<z>
repositoryIdParameter = request.getParameter("repositoryId");<z>
"contentVersionId");<z>
;<z>
!languageIdParameter.equals(""))<z>
"document.location.href = 'ViewContentVersion!V3.action?contentId=" + contentIdParameter + "&languageId=" + languageIdParameter + "';";<z>
contentVersionIdParameter.equals(""))<z>
("';", "&contentVersionIdParameter=" + contentVersionIdParameter + "';");<z>
buttons.add(new ToolbarButton("reset",<z>
(locale, "tool.common.resetButton.label"),<z>
),<z>
true));<z>
;<z>
hashCode()<z>
prime = 31;<z>
result = 1;<z>
== null)<z>
.hashCode());<z>
+ Arrays.hashCode(values);<z>
result;<z>
row, int column) {<z>
(value instanceof String) {<z>
value));<z>
field;<z>
void executeInAllSelectors(Runnable r) {<z>
selectorThreads) {<z>
.beginInvoke(r);<z>
) {<z>
null) {<z>
;<z>
);<z>
configuration, String mode) {<z>
if (validateMode(configuration, mode)) {<z>
.launch(configuration, mode);<z>
stop()<z>
i<diffusers.length; i++)<z>
stop();<z>
row)<z>
;<z>
, row);<z>
= true;<z>
logValue)<z>
);<z>
));<z>
boolean onTap(int i) {<z>
== formattedLocations.length) {<z>
return true;<z>
) == View.INVISIBLE) {<z>
;<z>
};<z>
]);<z>
);<z>
;<z>
;<z>
View.VISIBLE);<z>
name);<z>
.state + ", " + location.zip);<z>
location.phone);<z>
(point);<z>
else {<z>
INVISIBLE);<z>
.removeView(noteBalloon);<z>
(true);<z>
groupId, final String artifactId,<z>
final boolean isSnapshot, final String baseVersion )<z>
, null );<z>
BirtException( String errorCode, ResourceBundle bundle,<z>
cause )<z>
( cause );<z>
this.sResourceKey = errorCode;<z>
= bundle;<z>
null;<z>
, String targetName) {<z>
) {<z>
);<z>
put(sourceName, targetName);<z>
byte[] decodeURLBase64(String input) {<z>
;<z>
final String padding;<z>
length() % 4) {<z>
0:<z>
"";<z>
:<z>
"==";<z>
case 3:<z>
;<z>
();<z>
+ padding);<z>
addEventBtnClick(View view){<z>
() == 0){<z>
).show();<z>
;<z>
outAEolTextPart(<z>
{<z>
newEolPart();<z>
, XWikiContext context) throws XWikiException<z>
(groupDN, context);<z>
groupMembers != null) {<z>
String memberDNEntry : groupMembers.keySet()) {<z>
equals(memberDN.toLowerCase())) {<z>
;<z>
return false;<z>
String getErrorPage(String error)<z>
(_errorPages == null)<z>
null;<z>
;<z>
{<z>
0;<z>
el;<z>
boolean isrestart = false;<z>
"failedasserts");<z>
.getLength(); i ++) {<z>
nl.item(i);<z>
0) {<z>
));<z>
) {<z>
.getNodeValue());<z>
failedAsserts += n;<z>
return n;<z>
()<z>
= false;<z>
);<z>
();<z>
setVisible(true);<z>
();<z>
setPosition();<z>
image);<z>
remove(imageChange);<z>
!= null)<z>
cancel();<z>
;<z>
InterruptedException {<z>
);<z>
= getWorkingDirectory("spoutcraft");<z>
{<z>
handleFaultyFolder();<z>
) && !spoutcraftDir.mkdirs()) {<z>
"The working directory could not be created: " + spoutcraftDir);<z>
;<z>
)) {<z>
.mkdirs();<z>
();<z>
;<z>
= new File(spoutcraftDir,"Spoutcraft-Launcher.jar");<z>
jar.exists()) {<z>
if (latestVersion == null) {<z>
.err.println("Unable to process the latest version of the launcher.");<z>
);<z>
, latestVersion);<z>
else {<z>
(latestVersion != null && currentVersion != null) {<z>
currentVersion, latestVersion)) {<z>
();<z>
, jar.getPath());<z>
, latestVersion);<z>
)) {<z>
.delete();<z>
jar.getPath());<z>
.getPath(), latestVersion);<z>
urls = new URL[1];<z>
jar.toURI().toURL();<z>
e) {<z>
);<z>
ClassLoader classLoad = new URLClassLoader(urls);<z>
;<z>
("org.spoutcraft.launcher.Main");<z>
= {String[].class};<z>
);<z>
{<z>
;<z>
) {<z>
.printStackTrace();<z>
separator) {<z>
;<z>
null) {<z>
"null";<z>
} else {<z>
;<z>
;<z>
getLength(isArr);<z>
"[");<z>
) {<z>
i);<z>
{<z>
);<z>
else {<z>
.append(element.toString());<z>
- 1) {<z>
.append(separator);<z>
("]");<z>
();<z>
ArrayIndexOutOfBoundsException bound) {<z>
tmp.append("]");<z>
();<z>
IllegalArgumentException noarr) {<z>
.toString();<z>
result;<z>
SignChangeEvent event)<z>
"[CD]"))<z>
)<z>
getLines());<z>
void setTraySelection(IStructuredSelection selection) {<z>
, true);<z>
getSelection();<z>
> 0)<z>
);<z>
)<z>
.isControllablePolicy())<z>
return Collections.emptyList();<z>
policyEntries = entry.getPolicies();<z>
(policyEntries.size());<z>
)<z>
;<z>
;<z>
public String toString() {<z>
;<z>
;<z>
length; x++) {<z>
append('.');<z>
m_data[x] >= 0) {<z>
;<z>
else {<z>
) m_data[x] & 0xffffffffL;<z>
oid);<z>
return buf.toString();<z>
throws IOException {<z>
.openConnection();<z>
(conn, input);<z>
conn.getResponseCode() != 200) {<z>
;<z>
reply;<z>
{<z>
.disconnect();<z>
Tree evaluate(Tree t, TregexMatcher m) {<z>
.get(label);<z>
result == null) {<z>
(label);<z>
== null) {<z>
this +<z>
" (either no node labeled this, or the labeled node didn't match anything)");<z>
return result;<z>
) {<z>
?>) {<z>
, ?>)item;<z>
);<z>
{<z>
);<z>
args) {<z>
);<z>
.size(); i++) {<z>
) {<z>
))<z>
);<z>
(args.get(++i));<z>
)) {<z>
+ 1 == args.size())<z>
printUsage();<z>
));<z>
.equals("-nodeReplicationLimit")) {<z>
())<z>
);<z>
(++i));<z>
) {<z>
.size())<z>
printUsage();<z>
get(++i));<z>
"-replication")) {<z>
== args.size())<z>
;<z>
;<z>
ignoreUnrelatedOptions)<z>
);<z>
(final Set<NewsEvent> events) {<z>
() == null)<z>
()) {<z>
> fDeletedScoredNews;<z>
ScoredNews> fUpdatedScoredNews;<z>
Set<NewsEvent> fUpdatedNewsEvents;<z>
{<z>
;<z>
events) {<z>
Object object : input) {<z>
);<z>
NewsReference newsRef = scoredNews.getNewsReference();<z>
())<z>
(event.getEntity())) {<z>
news = event.getEntity();<z>
!news.isVisible()) {<z>
fDeletedScoredNews == null)<z>
();<z>
fDeletedScoredNews.add(scoredNews);<z>
if (fUpdatedScoredNews == null)<z>
<ScoredNews>();<z>
);<z>
fUpdatedNewsEvents == null)<z>
);<z>
event);<z>
(IProgressMonitor monitor) {<z>
())<z>
!= null) {<z>
(Application.isWindows7()) {<z>
input = fResultViewer.getInput();<z>
>) {<z>
);<z>
fResultViewer.refresh();<z>
.remove(fDeletedScoredNews.toArray());<z>
null)<z>
toArray(), null);<z>
) {<z>
.getInput();<z>
) {<z>
for (NewsEvent event : fUpdatedNewsEvents) {<z>
)) {<z>
event));<z>
if (fDeletedScoredNews != null) {<z>
{<z>
(input)) {<z>
(news.getNews());<z>
);<z>
) {<z>
) {<z>
:<z>
String))<z>
) value;<z>
AND :<z>
[]) value;<z>
FilterImpl clause : clauses)<z>
.op == EQUAL) {<z>
primaryKey);<z>
if (result != null)<z>
result;<z>
null;<z>
public String getLabel(KamNode kamNode) {<z>
.getLabel());<z>
{<z>
getLabel();<z>
.getSupportingTerms(kamNode);<z>
terms.isEmpty()) {<z>
BelTerm bt = terms.get(0);<z>
;<z>
toBELShortForm();<z>
e) {<z>
(kamNode.getLabel(), label);<z>
;<z>
paintBodyShape(String bodyShapeUrl, JPanel imgBodyShapeType) {<z>
removeAll();<z>
.getResourceAsStream(bodyShapeUrl);<z>
= ImageIO.read(resourceAsStream);<z>
), imgBodyShapeType.getHeight());<z>
(BorderLayout.CENTER, ibp);<z>
.validate();<z>
;<z>
IOException e) {<z>
);<z>
{<z>
();<z>
{<z>
0, 0, scope));<z>
;<z>
IOException {<z>
sampleObjects = sampleList.getSamples();<z>
= new short[ sampleObjects.length ];<z>
new float[ sampleObjects.length ];<z>
positions = new long[ sampleObjects.length ];<z>
; i++) {<z>
sampleObjects[ i ];<z>
i ] = sample.getValue();<z>
i ] = sample.getTimeStamp();<z>
getPosition();<z>
writeShort(sampleList.getMax());<z>
);<z>
.writeShortArray(dataOutput, samples);<z>
.writeFloatArray(dataOutput, timeStamps);<z>
);<z>
public void setFollow(LivingEntity aggro) {<z>
(this.stuck == 0) {<z>
this.stuck = 1;<z>
this.mFollow = aggro;<z>
, VisitContext context, VisitCallback callback) {<z>
.hasNext()) {<z>
.next();<z>
) {<z>
return true;<z>
false;<z>
hashOnly) {<z>
);<z>
if (!hashOnly) {<z>
(getVersionParameters());<z>
);<z>
;<z>
return params;<z>
void kSeqExprCast434() {<z>
new XQuery(<z>
ctx);<z>
);<z>
= res;<z>
true)<z>
close() throws ResourceException<z>
Connection con)<z>
== null)<z>
)<z>
ArrayList();<z>
;<z>
con);<z>
!isNew())<z>
getProjectId());<z>
equals(criteria))<z>
.doSelect(criteria, con);<z>
;<z>
return collOpportunitys;<z>
int hashCode()<z>
result;<z>
() : 0);<z>
() : 0);<z>
? _expression.hashCode() : 0);<z>
return result;<z>
InputStream stream,<z>
URL url) {<z>
();<z>
);<z>
= stream;<z>
url;<z>
static Date plainDate(Date dt) {<z>
) {<z>
Date(dt.getTime());<z>
else {<z>
return dt;<z>
interrupt() {<z>
{<z>
);<z>
true;<z>
checkComment() {<z>
0) {<z>
;<z>
commentPtr;<z>
if (this.modifiersSourceStart >= 0) {<z>
) {<z>
= this.scanner.commentStarts[lastComment];<z>
(commentSourceStart < 0) commentSourceStart = -commentSourceStart;<z>
if (commentSourceStart <= this.modifiersSourceStart) break;<z>
;<z>
lastComment >= 0) {<z>
];<z>
modifiersSourceStart;<z>
0) lastComment--;<z>
&& this.javadocParser != null) {<z>
1;<z>
(this.javadocParser.shouldReportProblems) {<z>
null || commentEnd > this.lastJavadocEnd;<z>
{<z>
false;<z>
javadocParser.checkDeprecation(lastComment)) {<z>
AccDeprecated);<z>
javadoc = this.javadocParser.docComment;<z>
lastJavadocEnd = commentEnd;<z>
void storeJobDescriptions (Element parentElement) {<z>
getOwnerDocument ();<z>
= document.createElement (MonitorSaveConstants.JobDescriptions);<z>
parentElement.appendChild (jobDescriptionsElem);<z>
(final MonitorJobDescription jobDescription : jobDescriptions) {<z>
store (jobDescriptionsElem);<z>
{<z>
) {<z>
representations & REPRESENTATION_ANY) != 0) {<z>
initializeComponentsFromAny()) {<z>
|= REPRESENTATION_COMPONENTS;<z>
{<z>
return false;<z>
0) {<z>
(initializeComponentsFromTypeCode()) {<z>
representations |= REPRESENTATION_COMPONENTS;<z>
{<z>
;<z>
return true;<z>
) {<z>
VARIANT v = getVARIANT(varChild);<z>
E_INVALIDARG;<z>
DISP_E_MEMBERNOTFOUND;<z>
size() > 0) {<z>
event = new AccessibleEditableTextEvent(this);<z>
= 0;<z>
);<z>
end >= 0) {<z>
(szValue);<z>
1) / 2];<z>
buffer, szValue, size);<z>
event.string = new String (buffer);<z>
.size(); i++) {<z>
);<z>
listener.replaceText(event);<z>
S_OK;<z>
hresult(code));<z>
{<z>
.put_accValue(varChild, szValue);<z>
;<z>
") returning " + hresult(code) + " from proxy");<z>
;<z>
CayenneException {<z>
null) {<z>
;<z>
) {<z>
= new IteratedSelectObserver();<z>
= new QueryResult();<z>
Iterator it = entities.iterator();<z>
while (it.hasNext()) {<z>
);<z>
(DbEntity) it.next();<z>
SelectQuery select = new SelectQuery(entity);<z>
);<z>
(delegate != null) ? delegate.willPortEntity(<z>
: select;<z>
), observer);<z>
observer.getResultIterator();<z>
new InsertBatchQuery(entity, INSERT_BATCH_SIZE);<z>
0;<z>
insertBatchSize : INSERT_BATCH_SIZE;<z>
result.hasNextRow()) {<z>
> 0<z>
currentRow > 0<z>
currentRow % insertBatchSize == 0) {<z>
(<z>
((Query) insert),<z>
insertObserver);<z>
;<z>
.clear();<z>
++;<z>
nextRow();<z>
add(nextRow);<z>
> 0) {<z>
performQueries(<z>
singletonList((Query) insert),<z>
insertObserver);<z>
{<z>
(this, entity, currentRow);<z>
);<z>
(CayenneException ex) {<z>
String uri, String local, String raw) {<z>
);<z>
==0 ) {<z>
"";<z>
)<z>
local = raw;<z>
(idx+1);<z>
String prefix;<z>
< 0)<z>
= null;<z>
0, idx);<z>
== 0)<z>
null;<z>
));<z>
LayoutParams makeDividerLayoutParams() {<z>
LayoutParams.WRAP_CONTENT,<z>
.MATCH_PARENT);<z>
;<z>
bottomMargin = (int) mDividerPadding;<z>
return params;<z>
public void renderOverlays(GL gl)<z>
()) {<z>
entity : entitiesLooks.get( look )) {<z>
, entity, this );<z>
?> type) {<z>
maybeLit instanceof JValueLiteral)) {<z>
return null;<z>
class && maybeLit instanceof JBooleanLiteral) {<z>
maybeLit).getValue());<z>
&& maybeLit instanceof JCharLiteral) {<z>
));<z>
double.class && maybeLit instanceof JDoubleLiteral) {<z>
).getValue());<z>
{<z>
JIntLiteral) maybeLit).getValue());<z>
) {<z>
));<z>
JLongLiteral) {<z>
));<z>
.class && maybeLit instanceof JStringLiteral) {<z>
) maybeLit).getValue();<z>
.class) {<z>
(JValueLiteral) maybeLit).getValueObj();<z>
null;<z>
public DynamicQuery dynamicQuery() {<z>
;<z>
.class,<z>
());<z>
BaseGene(Configuration a_configuration)<z>
InvalidConfigurationException {<z>
{<z>
);<z>
m_configuration = a_configuration;<z>
.isUniqueKeysActive()) {<z>
();<z>
();<z>
(factory.getClass())) {<z>
getJGAPFactory())).<z>
getClass().getName());<z>
static void bufferedRead(BufferedInputStream reader,<z>
IOException {<z>
] buffer = new byte[4096];<z>
;<z>
{<z>
write(buffer, 0, count);<z>
.flush();<z>
ChannelSelectionForm(Map<Integer, String> channelNames)<z>
super();<z>
this.channelNames = channelNames;<z>
);<z>
;<z>
CoreException {<z>
)<z>
monitor);<z>
visitor = new Visitor(project);<z>
visitor);<z>
;<z>
public static void instrument()<z>
(get(startInstrument) != 0)<z>
heapUsage());<z>
);<z>
if (currUsage < get(minMemory))<z>
(minMemory, currUsage);<z>
)<z>
maxMemory, currUsage);<z>
count);<z>
final Object value) {<z>
);<z>
toString(value);<z>
;<z>
h = hash(name);<z>
);<z>
(h, i, name, strVal);<z>
)<z>
TreeNode();<z>
child.dso = dso;<z>
1;<z>
);<z>
child;<z>
{<z>
(new BorderLayout());<z>
("members.to.form.interface"),<z>
, null);<z>
getTable()<z>
{<z>
public Boolean isFixedAbstract(MemberInfo member) {<z>
;<z>
});<z>
.CENTER);<z>
BorderLayout.EAST);<z>
;<z>
) {<z>
) {<z>
(project.isDisposed()) {<z>
) {<z>
;<z>
null;<z>
void init() throws Exception {<z>
class, ctx.getServiceManager());<z>
,<z>
));<z>
queryInterface(XMultiServiceFactory.class,<z>
.createInstance("com.sun.star.configuration.ConfigurationProvider"));<z>
);<z>
Name = "nodepath";<z>
"/org.openoffice.Setup/Product";<z>
queryInterface(XNameAccess.class,<z>
configProvider.createInstanceWithArguments(<z>
Object[] {nodepath}));<z>
.getByName("ooName");<z>
("ooSetupVersion");<z>
;<z>
String name)<z>
(name.equals(ContactCategoryPeer.CONTACT_CAT_ID))<z>
Integer(getContactCatId());<z>
)<z>
);<z>
return null;<z>
) {<z>
new JPanel();<z>
(new BorderLayout());<z>
.NORTH);<z>
new DefaultListSelectionModel();<z>
model = new NamedResultTableModel(selectionModel);<z>
;<z>
= new JTable(model, columnmodel);<z>
);<z>
;<z>
200));<z>
);<z>
(panel, tr("Areas around places"));<z>
setPreferredSize(scrollPane.getPreferredSize());<z>
);<z>
;<z>
.addMouseListener(new MouseAdapter() {<z>
MouseEvent e) {<z>
.getClickCount() > 1) {<z>
sr = model.getSelectedSearchResult();<z>
(sr == null) return;<z>
());<z>
});<z>
= gui;<z>
(InputStream is, String charset) throws XmlPullParserException {<z>
0;<z>
0;<z>
(charset == null);<z>
null) {<z>
new IllegalArgumentException();<z>
{<z>
= 0;<z>
{<z>
();<z>
== -1) {<z>
| i;<z>
= (char) i;<z>
== 4) {<z>
switch (firstFourBytes) {<z>
0x00000FEFF:<z>
= "UTF-32BE";<z>
= 0;<z>
:<z>
;<z>
;<z>
0x0000003c:<z>
= "UTF-32BE";<z>
buffer[0] = '<';<z>
1;<z>
:<z>
charset = "UTF-32LE";<z>
;<z>
1;<z>
case 0x0003c003f:<z>
"UTF-16BE";<z>
'<';<z>
[1] = '?';<z>
2;<z>
:<z>
= "UTF-16LE";<z>
0] = '<';<z>
] = '?';<z>
2;<z>
case 0x03c3f786d:<z>
true) {<z>
);<z>
{<z>
) i;<z>
== '>') {<z>
, limit);<z>
;<z>
(i0 != -1) {<z>
!= '\'') {<z>
;<z>
deli = s.charAt(i0++);<z>
(deli, i0);<z>
;<z>
{<z>
= "UTF-16BE";<z>
) | buffer[3]);<z>
= 1;<z>
(firstFourBytes & 0x0ffff0000) == 0x0fffe0000) {<z>
;<z>
buffer[2]);<z>
limit = 1;<z>
(firstFourBytes & 0x0ffffff00) == 0x0efbbbf00) {<z>
= "UTF-8";<z>
[3];<z>
;<z>
null) {<z>
;<z>
limit;<z>
new InputStreamReader(is, charset));<z>
encoding = charset;<z>
= savedLimit;<z>
&& peekCharacter() == 0xfeff) {<z>
limit--;<z>
, buffer, 0, limit);<z>
) {<z>
e);<z>
t, Navajo n,<z>
breakOnError,<z>
String hosturl,<z>
String keystore, String keypass)<z>
{<z>
fireNavajoSent(n, method);<z>
, method, null, expirationInterval,<z>
, password, keystore, keypass, breakOnError);<z>
reply, method);<z>
method, reply);<z>
, tipiDestinationPath, event, breakOnError);<z>
void updateFilterHeaderView() {<z>
getFilter();<z>
mAllContactsAdapter == null || filter == null) {<z>
, true);<z>
isLoggedIn() {<z>
= CoreUtil.getIWContext();<z>
null)<z>
.FALSE;<z>
;<z>
Exception e) {<z>
.WARNING, "Error while checking if user is logged in", e);<z>
.FALSE;<z>
byte value) {<z>
data.length) {<z>
;<z>
pos] = value;<z>
(Package pkg)<z>
);<z>
(pkg);<z>
void sendCompleteStatus() {<z>
= 1;<z>
;<z>
findAllXPath_should_wrap_all_elements()<z>
);<z>
(locator, sessionConfiguration);<z>
;<z>
)));<z>
assertNoRobustQueryiesRan();<z>
(Collection<String> mechs) {<z>
mechs) {<z>
addSaslMech(mech);<z>
contributeToMenu(IMenuManager manager) {<z>
.thrift.TException<z>
grantTablePermission_args args = new grantTablePermission_args();<z>
args.setTinfo(tinfo);<z>
args.setCredentials(credentials);<z>
args.setUser(user);<z>
setTableName(tableName);<z>
args.setPermission(permission);<z>
("grantTablePermission", args);<z>
(AbstractNode p) {<z>
) {<z>
getNextNode();<z>
!nodeMap.containsKey(next)) {<z>
{<z>
.getSubProcessNode();<z>
.containsKey(next)) {<z>
;<z>
;<z>
void teleopPeriodic() {<z>
).feed();<z>
++;<z>
;<z>
new Solenoid[4];<z>
= new Solenoid[4];<z>
4; i++) {<z>
m_solenoids[i];<z>
+4];<z>
m_rightStickButtonState, "Right Stick", firstGroup);<z>
);<z>
getZ() <= 0) {<z>
false);<z>
{<z>
("Arcade Drive\n");<z>
= ARCADE_DRIVE;<z>
{<z>
);<z>
if (m_driveMode != TANK_DRIVE) {<z>
);<z>
TANK_DRIVE;<z>
initialize() {<z>
getAdapter(IResource.class);<z>
;<z>
);<z>
prefKey, String defaultValue) {<z>
.getString(prefKey, defaultValue);<z>
;<z>
Exception e)<z>
Float.parseFloat(defaultValue);<z>
e2)<z>
1.0f;<z>
public int read() throws IOException {<z>
;<z>
curr !=null){<z>
read();<z>
compositeIS.size()>0){<z>
;<z>
null;<z>
.removeFirst();<z>
;<z>
count;<z>
public boolean registerFileForced( String id, String path )<z>
!isRegistered( path ) )<z>
path );<z>
return false;<z>
;<z>
);<z>
return true;<z>
AnActionEvent e) {<z>
.getLayoutTreeComponent().getSelection();<z>
getNodeIfSingle();<z>
== null) return;<z>
= node.getNodeSources();<z>
: sources) {<z>
.doNotSubstitute(source.getSourceElement());<z>
;<z>
void startAbnormalEffect(int mask)<z>
;<z>
);<z>
o) {<z>
(this == o) {<z>
;<z>
{<z>
EmployeeChangeMove other = (EmployeeChangeMove) o;<z>
return new EqualsBuilder()<z>
, other.shiftAssignment)<z>
other.toEmployee)<z>
();<z>
else {<z>
;<z>
{<z>
(jobSubmitClientIsProxy) {<z>
jobSubmitClient);<z>
Token t) {<z>
)datatypesTable.get(prefix);<z>
{<z>
error("undeclared_prefix", prefix, t);<z>
;<z>
;<z>
, CodeAttribute codeAttribute, LocalVariableTypeTableAttribute localVariableTypeTableAttribute)<z>
method, codeAttribute, this);<z>
ejbType) {<z>
;<z>
;<z>
result;<z>
() {<z>
())) {<z>
return getDef();<z>
getClassName())) {<z>
return getClassName();<z>
();<z>
{<z>
+ Constants.DETECTOR_PRIORITY);<z>
+ Constants.DETECTOR_PERIOD);<z>
frameBuffer = new FrameBuffer();<z>
{<z>
();<z>
= joystick_event.getType() & ~JS_EVENT_INIT;<z>
) {<z>
:<z>
index < getNumButtons()) {<z>
[index];<z>
!= null) {<z>
= joystick_event.getValue();<z>
.setValue(value);<z>
, value, joystick_event.getNanos());<z>
JS_EVENT_AXIS:<z>
{<z>
;<z>
) {<z>
/AXIS_MAX_VALUE;<z>
setValue(value);<z>
Integer(index))) {<z>
Integer(index)));<z>
pov.updateValue();<z>
;<z>
Integer(index))) {<z>
new Integer(index)));<z>
;<z>
.getNanos());<z>
else {<z>
));<z>
) {<z>
);<z>
) {<z>
"vCard import (id: %d) has started.", mJobId));<z>
request = mImportRequest;<z>
) {<z>
"Canceled before actually handling parameter (" + request.uri + ")");<z>
possibleVCardVersions;<z>
) {<z>
= new int[] {<z>
VCARD_VERSION_V21,<z>
ImportVCardActivity.VCARD_VERSION_V30<z>
{<z>
int[] {<z>
request.vcardVersion<z>
final Uri uri = request.uri;<z>
= request.account;<z>
final int estimatedVCardType = request.estimatedVCardType;<z>
estimatedCharset;<z>
.entryCount;<z>
entryCount;<z>
constructor =<z>
estimatedCharset);<z>
new VCardEntryCommitter(mResolver);<z>
addEntryHandler(committer);<z>
this);<z>
;<z>
;<z>
) {<z>
(LOG_TAG, "start importing one vCard (Uri: " + uri + ")");<z>
.openInputStream(uri);<z>
data != null){<z>
LOG_TAG, "start importing one vCard (byte[])");<z>
= new ByteArrayInputStream(request.data);<z>
if (is != null) {<z>
is, estimatedVCardType, estimatedCharset, constructor,<z>
possibleVCardVersions);<z>
{<z>
false;<z>
{<z>
!= null) {<z>
is.close();<z>
} catch (Exception e) {<z>
successful);<z>
) {<z>
if (isCancelled()) {<z>
LOG_TAG, "vCard import has been canceled (uri: " + uri + ")");<z>
{<z>
.i(LOG_TAG, "Successfully finished importing one vCard file: " + uri);<z>
committer.getCreatedUris();<z>
mListener != null) {<z>
{<z>
.get(0));<z>
else {<z>
,<z>
;<z>
.onImportFinished(mImportRequest, mJobId, null);<z>
{<z>
(LOG_TAG, "Failed to read one vCard file: " + uri);<z>
;<z>
public void eUnset(int featureID) {<z>
switch (featureID) {<z>
TYPE_TYPE__REFERRED_TYPE :<z>
;<z>
);<z>
String getSignatureBaseString(String requestUrl,<z>
String, String> baseParameters)<z>
OAuthException {<z>
encode(httpMethod.toUpperCase()) + '&'<z>
) + '&'<z>
baseParameters));<z>
> getStereotypes()<z>
;<z>
{<z>
); x++) {<z>
add(new GameObject());<z>
.TException {<z>
.CALL, 0));<z>
alter_partition_with_environment_context_args();<z>
(db_name);<z>
args.setTbl_name(tbl_name);<z>
setNew_part(new_part);<z>
(environment_context);<z>
write(prot);<z>
prot.writeMessageEnd();<z>
()<z>
createGraphics();<z>
== null) {<z>
.KEY_ANTIALIASING,<z>
?<z>
VALUE_ANTIALIAS_ON :<z>
RenderingHints.VALUE_ANTIALIAS_OFF);<z>
(gfx);<z>
{<z>
;<z>
(KeymapManager keymapManager, DataManager dataManager) {<z>
Object>();<z>
);<z>
>();<z>
>();<z>
);<z>
;<z>
myCachedActionListeners = null;<z>
myKeymapManager = keymapManager;<z>
dataManager;<z>
;<z>
public NutchDocument filter(NutchDocument doc, Parse parse,<z>
.Text url, CrawlDatum datum, Inlinks inlinks)<z>
IndexingException {<z>
, url.toString());<z>
().getContentMeta();<z>
().getMeta("EVENT");<z>
equals("1")) {<z>
String currentName : metaData.names()) {<z>
;<z>
(currentValue != null<z>
length() > 0<z>
equals("Description")<z>
("Title") || currentName<z>
("When")<z>
"Where")<z>
("Notification Due")<z>
.equals("Final Version Due")<z>
)) {<z>
, Utils<z>
.getCleanTextFromHTML(currentValue));<z>
.info("Indexing [name: " + currentName + "] [value: "<z>
+ "]");<z>
return doc;<z>
{<z>
);<z>
null;<z>
parentQName,<z>
OMFactory factory,<z>
.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,<z>
serializeType)<z>
apache.axis2.databinding.ADBException{<z>
.lang.String prefix = null;<z>
String namespace = null;<z>
);<z>
namespace = parentQName.getNamespaceURI();<z>
) > 0)) {<z>
getPrefix(namespace);<z>
writerPrefix != null) {<z>
);<z>
{<z>
) {<z>
generatePrefix(namespace);<z>
.getLocalPart(), namespace);<z>
, namespace);<z>
xmlWriter.setPrefix(prefix, namespace);<z>
} else {<z>
;<z>
{<z>
xmlWriter,"http://ec2.amazonaws.com/doc/2010-11-15/");<z>
) > 0)){<z>
,"type",<z>
,<z>
;<z>
{<z>
,<z>
;<z>
"http://ec2.amazonaws.com/doc/2010-11-15/";<z>
(! namespace.equals("")) {<z>
.getPrefix(namespace);<z>
(prefix == null) {<z>
generatePrefix(namespace);<z>
"keyName", namespace);<z>
xmlWriter.writeNamespace(prefix, namespace);<z>
(prefix, namespace);<z>
else {<z>
(namespace,"keyName");<z>
} else {<z>
;<z>
null){<z>
("keyName cannot be null!!");<z>
{<z>
(localKeyName);<z>
);<z>
();<z>
OffsetLimitReachedException {<z>
IToken t= nextToken;<z>
))<z>
= true;<z>
getType() != IToken.tINACTIVE_CODE_END)<z>
= t.getNext();<z>
!= null) {<z>
);<z>
} else {<z>
nextToken= null;<z>
skipInactiveCode();<z>
olre) {<z>
if (mode == ParserMode.COMPLETION_PARSE) {<z>
);<z>
;<z>
String calc() {<z>
d_file == null) {<z>
return null;<z>
== null) {<z>
"new file";<z>
} else {<z>
();<z>
{<z>
get() : null;<z>
loginContext != null) {<z>
();<z>
frameworkLogins--;<z>
} else {<z>
logger.warn(ERROR_NUXEO_LOGOUT);<z>
threadLocalLoginContext = null;<z>
protected void initElement( Attributes attrs, boolean nameRequired )<z>
DesignElement element = getElement( );<z>
NAME_PROP );<z>
name, nameRequired );<z>
extendsName = attrs<z>
getValue( DesignSchemaConstants.EXTENDS_ATTRIB );<z>
isBlank( extendsName )<z>
) )<z>
);<z>
);<z>
!StringUtil.isBlank( attrs<z>
) ) )<z>
handler.getErrorHandler( )<z>
semanticError(<z>
DesignParserException(<z>
);<z>
( attrs );<z>
(FieldDeclaration fieldDecl) {<z>
.handle(<z>
InitializerMustCompleteNormally,<z>
.sourceStart,<z>
.sourceEnd);<z>
{<z>
OrderedSet<Variable> aVicinity = null;<z>
;<z>
v.getConstraints();<z>
hasMoreElements()) {<z>
getOtherVariable((BinaryConstraint) allConstraints<z>
nextElement(), v);<z>
0) != -1) {<z>
)<z>
(theirVariableOrder);<z>
.add(aVar);<z>
;<z>
commitToParent() {<z>
northComponent = null;<z>
;<z>
eastComponent = null;<z>
null;<z>
= null;<z>
int northSize = -1;<z>
= -1;<z>
= -1;<z>
1;<z>
{<z>
.get(i);<z>
get(current);<z>
(String)constraint).toLowerCase();<z>
null;<z>
(":")) {<z>
(""+con,":");<z>
con = st.nextToken();<z>
;<z>
) {<z>
= current;<z>
if(height!=null) {<z>
.parseInt(height);<z>
"south".equals(con)) {<z>
;<z>
null) {<z>
;<z>
.equals(con)) {<z>
;<z>
null) {<z>
.parseInt(height);<z>
("west".equals(con)) {<z>
= current;<z>
!=null) {<z>
= Integer.parseInt(height);<z>
equals(con)) {<z>
current;<z>
{<z>
) {<z>
{<z>
throw new UnsupportedOperationException("No parent found!");<z>
+childComponents.size());<z>
;<z>
{<z>
southSize, SplitPane.ORIENTATION_VERTICAL_BOTTOM_TOP);<z>
} else {<z>
sp = centerComponent;<z>
null) {<z>
,northSize, SplitPane.ORIENTATION_VERTICAL);<z>
{<z>
==null) {<z>
;<z>
) {<z>
eastSize, SplitPane.ORIENTATION_HORIZONTAL_RIGHT_LEFT);<z>
{<z>
sp==null) {<z>
;<z>
{<z>
;<z>
{<z>
if(sp==null) {<z>
;<z>
add(sp);<z>
N) {<z>
(K, N);<z>
addNode(N);<z>
;<z>
N);<z>
{<z>
+ " for key " + K));<z>
;<z>
requestObject,<z>
AbstractResourceInfo cri,<z>
Message message) {<z>
()) {<z>
entry.getValue();<z>
.isSingleton()) {<z>
.createContextValue(message,<z>
],<z>
entry.getKey());<z>
(o != null) {<z>
isSingleton()) {<z>
method, o);<z>
else {<z>
<Object> proxy<z>
);<z>
{<z>
);<z>
CSSParseException e) {<z>
(e);<z>
int cbraces = 1;<z>
;) {<z>
(current) {<z>
case LexicalUnits.EOF:<z>
:<z>
LexicalUnits.RIGHT_CURLY_BRACE:<z>
{<z>
;<z>
LexicalUnits.LEFT_CURLY_BRACE:<z>
++;<z>
);<z>
{<z>
.getText();<z>
fArchivePathField.getText().trim();<z>
baseUri;<z>
isSelected()) {<z>
);<z>
(new Path(jarLoc));<z>
res != null) {<z>
, null);<z>
} else {<z>
, "");<z>
} else {<z>
toURI();<z>
(0) != '/') {<z>
+ innerPath;<z>
.getRawSchemeSpecificPart();<z>
.toURL();<z>
) {<z>
new MalformedURLException(e.getMessage());<z>
createImage(int width, int height) {<z>
FINE)) {<z>
"BLMapBean.createImage()");<z>
if (width <= 0)<z>
1;<z>
0)<z>
1;<z>
BufferedImage.TYPE_INT_ARGB);<z>
AbstractToken createFollower(int index, IEObjectConsumer inst) {<z>
switch(index) {<z>
inst);<z>
lastRuleCallOrigin, this, 1, inst);<z>
2, inst);<z>
lastRuleCallOrigin, this, 3, inst);<z>
lastRuleCallOrigin, this, 4, inst);<z>
default: return null;<z>
skewX) {<z>
sManager.getDelegate(thisPaint.mNativePaint);<z>
) {<z>
= skewX;<z>
updateFontObject();<z>
) {<z>
XQuery(<z>
;<z>
(query);<z>
res;<z>
)<z>
InputStream stream)<z>
, IOException {<z>
;<z>
))<z>
throw new UnsupportedAudioFileException();<z>
))<z>
);<z>
false;<z>
;<z>
= 1;<z>
1;<z>
= 1;<z>
= 1;<z>
1;<z>
channelMask = 0;<z>
= null;<z>
)) {<z>
= riffiterator.nextChunk();<z>
)) {<z>
true;<z>
.readUnsignedShort();<z>
)<z>
throw new UnsupportedAudioFileException();<z>
readUnsignedShort();<z>
);<z>
chunk.readUnsignedInt();<z>
;<z>
= chunk.readUnsignedShort();<z>
= chunk.readUnsignedShort();<z>
22)<z>
UnsupportedAudioFileException();<z>
);<z>
if (validBitsPerSample > bits)<z>
);<z>
= chunk.readUnsignedInt();<z>
subFormat = GUID.read(chunk);<z>
)) {<z>
;<z>
(!fmt_found)<z>
throw new UnsupportedAudioFileException();<z>
if (!data_found)<z>
throw new UnsupportedAudioFileException();<z>
, Object>();<z>
String s_channelmask = decodeChannelMask(channelMask);<z>
!= null)<z>
, s_channelmask);<z>
)<z>
("channelMask", channelMask);<z>
.put("validBitsPerSample", validBitsPerSample);<z>
audioformat = null;<z>
subFormat.equals(SUBTYPE_PCM)) {<z>
(bits == 8) {<z>
(Encoding.PCM_UNSIGNED,<z>
channels, framesize, samplerate,<z>
;<z>
} else {<z>
.PCM_SIGNED, samplerate,<z>
, false, p);<z>
if (subFormat.equals(SUBTYPE_IEEE_FLOAT)) {<z>
.PCM_FLOAT,<z>
, samplerate, false, p);<z>
);<z>
(<z>
audioformat,<z>
.NOT_SPECIFIED);<z>
return fileformat;<z>
modulo (IntNum x, IntNum y)<z>
y.isZero())<z>
;<z>
;<z>
, null, rem, FLOOR);<z>
();<z>
byteBuffer) {<z>
) / SizeOf.DOUBLE);<z>
.byteBuffer = byteBuffer;<z>
.clear();<z>
this.effectiveDirectAddress = byteBuffer.effectiveDirectAddress;<z>
Element element) throws InvalidDataException {<z>
);<z>
;<z>
for (Element child : children) {<z>
.getAttributeValue(ID_ATTRIBUTE);<z>
) {<z>
;<z>
) {<z>
(URL_ATTRIBUTE);<z>
));<z>
);<z>
)<z>
(",", "");<z>
;<z>
version)<z>
throws PortalException, SystemException {<z>
.getAllVersions()) {<z>
equals(document.getVersionLabel())) {<z>
toFileVersion(<z>
);<z>
null;<z>
public IntegrationMBeanExporter() {<z>
();<z>
(false);<z>
(namingStrategy);<z>
setAssembler(assembler);<z>
{<z>
x1;<z>
x2;<z>
x3 = x3;<z>
y1 = y1;<z>
y2 = y2;<z>
y3 = y3;<z>
z1;<z>
.z2 = z2;<z>
z3;<z>
HashSet<Action> generateActionSet() {<z>
(actionSet.isEmpty()) {<z>
.length; i++) {<z>
(beanFactory<z>
])<z>
{<z>
) beanFactory.getBean(beanFactory<z>
i]));<z>
;<z>
token) {<z>
result = new MixinReference(token);<z>
();<z>
(HiddenTokenAwareTree kid : children) {<z>
) {<z>
handleCssClass(kid));<z>
.getType() == LessLexer.IMPORTANT_SYM) {<z>
(true);<z>
} else {<z>
) switchOn(kid));<z>
return result;<z>
String getEFPath(int efid) {<z>
) {<z>
:<z>
EF_CST:<z>
EF_RUIM_SPN:<z>
DF_CDMA;<z>
);<z>
final IRequestHandler replacementRequestHandler,<z>
removeAll)<z>
replacementRequestHandler = replacementRequestHandler;<z>
removeAll;<z>
block, TaintnessFrame fact)<z>
DataflowAnalysisException {<z>
(handle, block);<z>
visitor.setFrameAndLocation(fact, loc);<z>
getInstruction();<z>
) {<z>
);<z>
.analyzeInstruction(ins);<z>
Long osceSequenceId, Long courseId, Long oscePostId) {<z>
;<z>
();<z>
" and type=2 and a.oscePostRoom in(select opr.id from OscePostRoom as opr where opr.oscePost=" + oscePostId + " and opr.course=" + courseId + " ) order by a.timeStart asc ";<z>
, Assignment.class);<z>
();<z>
.info("retrieveAssignmenstOfTypeExaminer query String :" + queryString);<z>
("Assignment List Size :" + assignmentList.size());<z>
return assignmentList;<z>
[] getResult(final Object[] workingMemoryContext,<z>
Object[] context,<z>
leftTuple,<z>
{<z>
;<z>
.length; i++ ) {<z>
( workingMemoryContext[i],<z>
context[i],<z>
requiredDeclarations,<z>
workingMemory );<z>
;<z>
} catch ( final Exception e ) {<z>
throw new RuntimeDroolsException( e );<z>
model.MeetupsEntry> getMeetupsEntriesByGroup(<z>
)<z>
SystemException {<z>
;<z>
removeResultOfSequence(int indx) {<z>
() == null) {<z>
indx);<z>
(indx);<z>
address, int port, HTTPRequest request) {<z>
);<z>
address;<z>
port = port;<z>
;<z>
getTemplateDir() {<z>
String templateDir = _templateDir;<z>
) {<z>
_defaultTemplateDir;<z>
templateDir != null) {<z>
, new Path(templateDir));<z>
;<z>
hashCode() {<z>
code = 17;<z>
==null) return code;<z>
();<z>
();<z>
+ this.version;<z>
code;<z>
public String toString() {<z>
sb=new StringBuilder();<z>
)) {<z>
> val=entry.getValue();<z>
);<z>
" (expiration_time: ");<z>
();<z>
)<z>
;<z>
Date(expiration_time));<z>
;<z>
toString();<z>
.model.BookmarksEntry fetchByUuid_C_Last(<z>
companyId,<z>
portal.kernel.util.OrderByComparator orderByComparator)<z>
exception.SystemException {<z>
)<z>
.fetchByUuid_C_Last(uuid, companyId, orderByComparator);<z>
app, String DEST_DIR) {<z>
StringWriter();<z>
PrintWriter(sout);<z>
XMLWriter(pout,null);<z>
xml.header();<z>
;<z>
("mainclass", app.getMainClass());<z>
= new Manifest();<z>
manifest.getMainAttributes();<z>
putValue("Main-Class", "com.joshondesign.appbundler.onejar.LaunchStub");<z>
.MANIFEST_VERSION,"1.0");<z>
.mkdirs();<z>
= new HashSet<String>();<z>
"doing a one jar bundler");<z>
= new JarOutputStream(<z>
),<z>
);<z>
jar : app.getJars()) {<z>
.getFile(), writtenNames);<z>
app, writtenNames);<z>
(jarOut,"LaunchStub.class");<z>
copyLaunchStub(jarOut,"LaunchStub$Follower.class");<z>
xml.end();<z>
);<z>
();<z>
("appbundler_tasks.xml"));<z>
);<z>
toString());<z>
);<z>
flush();<z>
();<z>
catch (Exception ex) {<z>
(Level.SEVERE, null, ex);<z>
{<z>
();<z>
mapView.removeMouseListener(this);<z>
map.mapView.removeMouseMotionListener(this);<z>
);<z>
removeSelectionListener(this);<z>
(this);<z>
ex) {<z>
;<z>
(CodeGenerator generator, Grammar grammar) {<z>
MAX_ACYCLIC_DFA_STATES_INLINE == CodeGenerator.MADSI_DEFAULT ) {<z>
MAX_ACYCLIC_DFA_STATES_INLINE = 65535;<z>
== CodeGenerator.MSCL_DEFAULT) {<z>
.MAX_SWITCH_CASE_LABELS = 3000;<z>
== CodeGenerator.MSA_DEFAULT) {<z>
;<z>
;<z>
String s) {<z>
= creatorTypesForItemType(s);<z>
types.length];<z>
{<z>
);<z>
;<z>
PlayerTeleportEvent event) {<z>
));<z>
getTo());<z>
getName()))<z>
getPlayer(), regionFrom, regionTo);<z>
Object> getGenericApplicationPropertyOfTexture() {<z>
null) {<z>
genericApplicationPropertyOfTexture = new ArrayList<Object>();<z>
;<z>
)<z>
= getSize();<z>
size == 0)<z>
return false;<z>
(ByteOrder.LITTLE_ENDIAN);<z>
;<z>
putShort(skillID);<z>
);<z>
BufferOverflowException e)<z>
false;<z>
;<z>
return true;<z>
public Object getData(UIComponent component) {<z>
(component);<z>
(component);<z>
?>) {<z>
size());<z>
<Object>) value)) {<z>
(SelectItem selectItem : selectItems) {<z>
{<z>
));<z>
;<z>
;<z>
for (String item : labels) {<z>
if (first)<z>
first = false;<z>
(separator);<z>
(item);<z>
.toString();<z>
} else {<z>
selectItems) {<z>
{<z>
);<z>
null;<z>
Object value1, Object value2) {<z>
value1 == null) {<z>
) {<z>
;<z>
return false;<z>
instanceof String) {<z>
String) value1, value2);<z>
> clazz = value1.getClass();<z>
isArray()) {<z>
> type = clazz.getComponentType();<z>
()) {<z>
type, value1, value2);<z>
Object[]) value1, value2);<z>
instanceof Collection<?>) {<z>
>) value1, value2);<z>
instanceof Integer) {<z>
).intValue(), value2);<z>
{<z>
;<z>
{<z>
value2);<z>
{<z>
value2);<z>
{<z>
(), value2);<z>
instanceof Float) {<z>
).floatValue(), value2);<z>
{<z>
, value2);<z>
if (value1 instanceof Boolean) {<z>
, value2);<z>
?>) {<z>
@SuppressWarnings("unchecked")<z>
Comparable<Object>) value1;<z>
, value2);<z>
, value2);<z>
,String[]> pParameterMap) {<z>
type = null;<z>
= extractPathInfo(pPathInfo, pParameterMap);<z>
extractElementsFromPath(pathInfo);<z>
.pop()) : RequestType.VERSION;<z>
elements, extractParameters(pParameterMap));<z>
MalformedObjectNameException e) {<z>
);<z>
exp) {<z>
exp);<z>
parent, int style) {<z>
);<z>
();<z>
(new AbstractObservableValue() {<z>
) {<z>
.class;<z>
Integer doGetValue() {<z>
.convert(spinner.getText());<z>
void doSetValue(Object value) {<z>
);<z>
;<z>
;<z>
)<z>
super();<z>
appendEmptyBuffer()<z>
.numSubBuffers;<z>
index, this.size);<z>
.put(index, 0);<z>
numSubBuffers++;<z>
return index;<z>
TiledSurfaceObjectRenderer getRenderer()<z>
if (this.renderer == null)<z>
.renderer = new TiledSurfaceObjectRenderer();<z>
(false);<z>
this));<z>
return this.renderer;<z>
) {<z>
docID;<z>
termID = termID;<z>
.value = value;<z>
opDivideDayTimeDurationByDTD15() {<z>
XQuery query = new XQuery(<z>
);<z>
= result(query);<z>
;<z>
(true)<z>
> notifys) {<z>
r = valid;<z>
, validates,r,notifys);<z>
);<z>
;<z>
) {<z>
)) {<z>
, findForCache(resourceUrl));<z>
(resourceUrl);<z>
BufferedImage img,<z>
pixels) {<z>
{<z>
return new int[0];<z>
if (pixels == null) {<z>
new int[w * h];<z>
< w * h) {<z>
("pixels array must have a length" +<z>
" >= w*h");<z>
int imageType = img.getType();<z>
if (imageType == BufferedImage.TYPE_INT_ARGB ||<z>
TYPE_INT_RGB) {<z>
getRaster();<z>
, w, h, pixels);<z>
w);<z>
void showText(PdfTextArray text) {<z>
)<z>
);<z>
("[");<z>
;<z>
;<z>
: arrayList) {<z>
{<z>
String)obj);<z>
false;<z>
if (lastWasNumber)<z>
);<z>
= true;<z>
.floatValue());<z>
).append_i(separator);<z>
Map<String, Observer> getObservers() {<z>
)<z>
HashMap<String, Observer>();<z>
;<z>
parameterValues, GrailsWebRequest webRequest, boolean includeContextPath) {<z>
GrailsRequestStateLookupStrategy requestStateLookupStrategy = new DefaultRequestStateLookupStrategy(webRequest);<z>
final String encoding = requestStateLookupStrategy.getCharacterEncoding();<z>
String id = null;<z>
) {<z>
ARGUMENT_ID);<z>
!= null) {<z>
);<z>
= new FastStringWriter();<z>
) {<z>
);<z>
if (actionName != null) {<z>
indexOf(SLASH) > -1) {<z>
;<z>
{<z>
;<z>
);<z>
(actualUriBuf, actionName, encoding);<z>
{<z>
(actualUriBuf, id, encoding);<z>
(actualUriBuf, parameterValues, encoding);<z>
();<z>
synchronized WeaveTransport getWeaveTransport() {<z>
{<z>
m_transport = createWeaveTransport();<z>
return m_transport;<z>
ModelOutput<V> createOutput(<z>
> definition,<z>
,<z>
context) throws IOException {<z>
, description);<z>
, description);<z>
description.getPaths();<z>
{<z>
>() {<z>
public void close() throws IOException {<z>
IOException {<z>
VariableTable variables = createVariables(context);<z>
, '_');<z>
destination, false);<z>
configurations.newInstance();<z>
getInputFormat());<z>
FileDeployer deployer = new FileDeployer(conf);<z>
.openOutput(definition, resolved, output);<z>
(Element root) {<z>
getFirstChild();<z>
while (node != null) {<z>
getNodeType()) {<z>
getNodeName();<z>
{<z>
)node;<z>
Profile(element.getAttribute("name"));<z>
loadProfileContent(profile, element);<z>
profile);<z>
"system".equals(name)) {<z>
);<z>
node.getNextSibling();<z>
> event) throws Exception<z>
.getRequestContext();<z>
getSource();<z>
();<z>
;<z>
class);<z>
PageNavigation edittedNav = uiNodeSelector.getEdittedNavigation();<z>
, uri);<z>
edittedNav, uri);<z>
selectedNode.getPageReference();<z>
.getApplicationComponent(UserPortalConfigService.class);<z>
.getPage(pageId) : null;<z>
)<z>
;<z>
hasPermission(node))<z>
{pageId}, 1));;<z>
);<z>
(UIPageNodeForm.class, null, null);<z>
uiNodeForm);<z>
);<z>
uiNodeForm.setValues(selectedNode);<z>
(obj);<z>
500);<z>
.addUIComponentToUpdateByAjax(uiManagementPopup.getParent());<z>
handle(DataStruct cmd, HttpRequest request)<z>
Exception {<z>
.enterContext();<z>
(httpCore.hasEntity(request)) {<z>
HttpEntityEnclosingRequest)request;<z>
)));<z>
(cx);<z>
mergeGetAndPostFormParams ) {<z>
DataObject)httpCore.getQueryParams(request);<z>
request instanceof HttpEntityEnclosingRequest) {<z>
(DataObject)parseEntityWithDefaultUtf8(<z>
getEntity());<z>
, cmdFromReq);<z>
, cmdFromReq);<z>
;<z>
, cmd, controllerScope);<z>
)cx.newObject(<z>
, new Object[] {request});<z>
scriptUri = calcScriptUri(cmd, request);<z>
;<z>
controllerScope, function,<z>
Object[] {jsCmd, jsReq});<z>
.fromScriptable((Scriptable)res);<z>
return ds;<z>
{<z>
();<z>
public static MockContext stub()<z>
= new MockContext();<z>
instance = mockContext;<z>
mockContext;<z>
Object key) {<z>
String k = String.valueOf(key);<z>
(0) == PROPERTY_PREFIX) {<z>
getPropertyValue(k);<z>
} else {<z>
);<z>
createFollower(int index, IEObjectConsumer inst) {<z>
) {<z>
, inst);<z>
: return null;<z>
readLines(SourceModel.Expr reader) {<z>
Application.make(<z>
readLines), reader});<z>
) {<z>
BorderLayout(0, 0));<z>
(), BorderLayout.NORTH);<z>
JPanel();<z>
null);<z>
p, BoxLayout.Y_AXIS));<z>
));<z>
);<z>
("Files to import", p);<z>
("Options", buildOptionsPane());<z>
;<z>
,<z>
TableLayout.FILL } };<z>
size));<z>
table.buildControls(), "0, 1, LEFT, CENTER");<z>
buildLocationPane();<z>
!popUpLocation) {<z>
;<z>
add(pane, "3, 0");<z>
tabbedPane, "2, 1, 3, 1");<z>
, chooser,<z>
;<z>
);<z>
{ TableLayout.FILL },<z>
TableLayout.PREFERRED, TableLayout.FILL } };<z>
.setLayout(new TableLayout(ss));<z>
BACKGROUND);<z>
;<z>
;<z>
JPanel controls = new JPanel();<z>
controls, BoxLayout.Y_AXIS));<z>
JPanel();<z>
.X_AXIS));<z>
());<z>
);<z>
());<z>
.add(bar);<z>
(controls, BorderLayout.SOUTH);<z>
(JDialog.isDefaultLookAndFeelDecorated()) {<z>
boolean supportsWindowDecorations = UIManager.getLookAndFeel()<z>
();<z>
supportsWindowDecorations)<z>
(<z>
FILE_CHOOSER_DIALOG);<z>
advertiseRefs(UploadPack rp)<z>
{<z>
< count; i++)<z>
].advertiseRefs(rp);<z>
boolean getBoolean(String property, Properties props) {<z>
= props.getProperty(property);<z>
= System.getProperty(property, v);<z>
value != null) {<z>
.parseBoolean(value);<z>
} else {<z>
(<z>
);<z>
) {<z>
STATUS_PENDING;<z>
;<z>
.getHierarchyEntry()).getPropertyEntries();<z>
propEntries.hasNext()) {<z>
PropertyEntry pe = propEntries.next();<z>
pe.invalidate(false);<z>
(false);<z>
isStreamCommand(String action) {<z>
equals(action)<z>
(action)<z>
ACTION_PLAY.equals(action)<z>
action)<z>
)<z>
ACTION_RECEIVE_AUDIO<z>
);<z>
() {<z>
();<z>
;<z>
).setZoom(16);<z>
(Exception e) {<z>
void register()<z>
null)<z>
())<z>
+ this);<z>
.addFilter(this);<z>
Show show, Section section)<z>
getSectionKey(show, section);<z>
return null;<z>
attachFieldsInPlace(AttachManager manager,<z>
StateManagerImpl sm) {<z>
sm.getMetaData().getFields();<z>
++) {<z>
FieldMetaData.MANAGE_PERSISTENT)<z>
, attached;<z>
) {<z>
.PC:<z>
PC_UNTYPED:<z>
(i);<z>
, fmds[i], cur);<z>
ARRAY:<z>
)<z>
.fetchObjectField(i);<z>
(Object[]) cur);<z>
case JavaTypes.COLLECTION:<z>
getElement().isDeclaredTypePC())<z>
.fetchObjectField(i);<z>
manager, sm, fmds[i],<z>
);<z>
.MAP:<z>
getElement().isDeclaredTypePC()<z>
.isDeclaredTypePC())<z>
i);<z>
Map) cur);<z>
if (cur != attached)<z>
.getPersistenceCapable(), i,<z>
SET_REMOTE);<z>
) {<z>
null && _channel.isOpen()) {<z>
;<z>
= new BeginPageRankInfo();<z>
().clone());<z>
e) {<z>
);<z>
Callback<BeginPageRankInfo,SlaveStatus>() {<z>
> request) {<z>
== Status.Success) {<z>
());<z>
.getStatus());<z>
();<z>
);<z>
);<z>
IOException e) {<z>
);<z>
CCStringUtils.stringifyException(e));<z>
slaveOffline();<z>
.error("sendStartPageRank called on Slave with Invalid State. Slave:" + getFullyQualifiedName());<z>
signature) {<z>
) {<z>
signature);<z>
);<z>
,<z>
int _min_frequency_millis )<z>
target = _target;<z>
_min_frequency_millis;<z>
)<z>
)<z>
.POLYGON_WITH_DUPLICATES__POINTS:<z>
getPoints();<z>
eGet(featureID, resolve, coreType);<z>
public static String getArtistName() {<z>
(mService != null) {<z>
return mService.getArtistName();<z>
(RemoteException ex) {<z>
null;<z>
, Camera pCamera) {<z>
);<z>
(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);<z>
GL_ALPHA_TEST);<z>
.GL_GREATER, 0);<z>
.GL_TEXTURE_ENV_MODE, GL2.GL_MODULATE);<z>
.GL_CULL_FACE);<z>
;<z>
0, -this.getGlobalY());<z>
.render(pGl, this.model);<z>
} finally {<z>
glPopMatrix();<z>
pGl.glDisable(GL2.GL_CULL_FACE);<z>
(AndroidBridge bridge, String serialId) {<z>
().isEmpty()) {<z>
return null;<z>
device : bridge.getDevices()) {<z>
())) {<z>
;<z>
+ serialId<z>
;<z>
;<z>
ObjectName getObjectName(String name, String avas) {<z>
+ "," + avas;<z>
);<z>
Exception e) {<z>
(name + " is not correct", e);<z>
parent) {<z>
, UmlViewsRepository.SWT_KIND));<z>
Text(parent, SWT.BORDER);<z>
(GridData.FILL_HORIZONTAL);<z>
name.setLayoutData(nameData);<z>
{<z>
"synthetic-access")<z>
{<z>
)<z>
);<z>
});<z>
) {<z>
SuppressWarnings("synthetic-access")<z>
public void keyPressed(KeyEvent e) {<z>
{<z>
!= null)<z>
name.getText()));<z>
;<z>
);<z>
;<z>
;<z>
;<z>
message(String s) {<z>
.add(s);<z>
(messagesNonError) {<z>
;<z>
indexOf("warning") != -1) return;<z>
1) return;<z>
) return;<z>
;<z>
null;<z>
1;<z>
int fileIndex = -1;<z>
+ primaryClassName;<z>
.indexOf(partialTempPath);<z>
-1) {<z>
fileIndex = 0;<z>
else {<z>
) {<z>
.isExtension("pde")) continue;<z>
);<z>
partialTempPath);<z>
partialStartIndex != -1) {<z>
;<z>
1) {<z>
partialStartIndex +<z>
partialTempPath.length() + 1);<z>
':');<z>
!= -1 || colon == -1) {<z>
;<z>
int lineNumber;<z>
, colon));<z>
(NumberFormatException e) {<z>
;<z>
fileIndex == 0) {<z>
; i++) {<z>
("pde")) {<z>
) {<z>
= i;<z>
(fileIndex).getPreprocOffset();<z>
s1.indexOf(":");<z>
!= -1) {<z>
firstErrorFound) {<z>
;<z>
;<z>
":".length();<z>
= s1.substring(err);<z>
= description.trim();<z>
;<z>
, false);<z>
else {<z>
+ s);<z>
else {<z>
!secondErrorFound) {<z>
;<z>
keyedByFieldKey) {<z>
if (map.containsKey(type)) {<z>
OrderRetainingMap();<z>
.keySet()<z>
)]);<z>
;<z>
< fieldKeys.length; i++) {<z>
(fieldKeys[i]));<z>
return result;<z>
} else {<z>
;<z>
] factoryPids, ServiceReference sr )<z>
this.factoryPids = factoryPids;<z>
this.sr = sr;<z>
public void cacheResult(WikiNode wikiNode) {<z>
.ENTITY_CACHE_ENABLED,<z>
, wikiNode.getPrimaryKey(), wikiNode);<z>
(FINDER_PATH_FETCH_BY_UUID_G,<z>
.valueOf(<z>
wikiNode);<z>
.putResult(FINDER_PATH_FETCH_BY_G_N,<z>
)), wikiNode.getName() },<z>
;<z>
;<z>
{<z>
(len == 0) {<z>
;<z>
= read();<z>
(c == -1) {<z>
;<z>
0;<z>
(char)c;<z>
++;<z>
= read();<z>
len);<z>
return result;<z>
static String getPropertyName(String key) {<z>
('-');<z>
(pos + 2);<z>
new StringBuilder();<z>
pos = 0;<z>
.length(); i++) {<z>
charAt(i)=='_')<z>
);<z>
;<z>
(i))) {<z>
{<z>
else {<z>
append(" ");<z>
pos = i;<z>
{<z>
isUpperCase(<z>
i - pos > 1) {<z>
- 1)).append(" ");<z>
pos = i - 1;<z>
(pos));<z>
.toString();<z>
HttpServletRequest request,<z>
HttpServletResponse response)<z>
IOException {<z>
(request, response);<z>
public List<ContentObject> saveContentObjectResourceCollection(<z>
, boolean version,<z>
{<z>
!= null){<z>
{<z>
.activateClientContext();<z>
));<z>
CmsException("ContentService reference was not found");<z>
) {<z>
();<z>
(id);<z>
.setName(getName());<z>
;<z>
public void startDraft(Draft draft) {<z>
;<z>
));<z>
.entrySet()) {<z>
), entry.getValue());<z>
public static void initHasRedirectSupported() {<z>
!Utils.isRoot())<z>
StringBuilder sb = new StringBuilder();<z>
command = Utils.getIptables()<z>
;<z>
1000, true);<z>
.toString();<z>
= 1;<z>
"-A", "-D"));<z>
== TIME_OUT)<z>
(lines.contains("No chain/target/match")) {<z>
= 0;<z>
private IParser getDeviceName_5122Parser() {<z>
deviceName_5122Parser == null) {<z>
UMLPackage.eINSTANCE.getNamedElement_Name() };<z>
(features);<z>
("{0} ");<z>
("{0}");<z>
("{0}");<z>
deviceName_5122Parser = parser;<z>
return deviceName_5122Parser;<z>
public void run() {<z>
.setThreadPriority(Process.THREAD_PRIORITY_URGENT_DISPLAY);<z>
Looper.prepare();<z>
Handler();<z>
();<z>
final void rule__Claim_Impl__Group_8__1__Impl() throws RecognitionException {<z>
= keepStackSize();<z>
getLeftCurlyBracketKeyword_8_1());<z>
,FollowSets001.FOLLOW_14_in_rule__Claim_Impl__Group_8__1__Impl37260);<z>
);<z>
re) {<z>
(re);<z>
(input,re);<z>
stackSize);<z>
private void processControlCell(Cell cell) {<z>
) {<z>
getCircuitId());<z>
== null) {<z>
+". Circuit not found");<z>
circuit.deliverControlCell(cell);<z>
final int nTimes) {<z>
x, y);<z>
++) {<z>
add(currentLabel);<z>
.type == LabelType.SEQUENCE_DESCRIPTOR_TABLE_D) {<z>
, 1);<z>
, T value) {<z>
_map.put(key, value);<z>
) {<z>
);<z>
else {<z>
(key, value);<z>
result;<z>
void dispatchResume() {<z>
;<z>
if (mSingleMode) {<z>
) {<z>
;<z>
{<z>
= mActivityArray.size();<z>
i<N; i++) {<z>
get(i), RESUMED);<z>
bandStatisticsElem) {<z>
] points = getColorPalettePoints(bandStatisticsElem);<z>
numColors = getNumColors(bandStatisticsElem);<z>
(new ColorPaletteDef(points, numColors));<z>
getChild(DimapProductConstants.TAG_NO_DATA_COLOR);<z>
null) {<z>
(noDataElem));<z>
.TAG_HISTOGRAM_MATCHING);<z>
&& histomElem.getValue() != null) {<z>
getValue()));<z>
;<z>
( Object inputElement ) {<z>
((EObject)inputElement);<z>
;<z>
new ArrayList(allTypes.size());<z>
iterator();<z>
) {<z>
();<z>
) == x && type instanceof XSDSimpleTypeDefinition) {<z>
ModelObjectUtilities.getRealEObject(type);<z>
ATOMIC_LITERAL) {<z>
);<z>
();<z>
cache, Filter postFilter) throws IOException{<z>
reader1;<z>
reader2;<z>
.cache1 = cache1;<z>
;<z>
;<z>
.postFilter = postFilter;<z>
;<z>
);<z>
Event createKeyEvent(int keyCode, char character) {<z>
Event event = createEvent();<z>
keyCode = keyCode;<z>
;<z>
return event;<z>
cred, String realm)<z>
throws IOException {<z>
authenticationID = principal;<z>
= realm;<z>
) {<z>
)cred).toCharArray();<z>
char[]) {<z>
)cred).clone();<z>
if (cred != null) {<z>
, "UTF8");<z>
);<z>
findNearestDependency(final Queue<Pom> nodes,<z>
final String candidate) {<z>
{<z>
= nodes.remove();<z>
) {<z>
return node;<z>
node.getDependenciesIncludingParent()) {<z>
{<z>
nodes.add(dependency);<z>
return null;<z>
{<z>
getOffset());<z>
{<z>
));<z>
} else {<z>
.getOffset());<z>
{<z>
);<z>
);<z>
readVLong(in);<z>
= WritableUtils.readVInt(in);<z>
0) {<z>
= new ResourceUsageMetrics();<z>
.readFields(in);<z>
()<z>
= super.getPreferredSize();<z>
() == null)<z>
.getPreferredSize().height;<z>
return renderer.getPreferredSize();<z>
getActivity(int index) {<z>
{<z>
;<z>
get(index).resolveInfo;<z>
public GlimpseLayout( GlimpseLayout parent, String name )<z>
GlimpseBounds>( );<z>
= new GlimpseLayoutDelegate( this );<z>
= new LayoutManager( );<z>
;<z>
mouseListeners = new HashSet<GlimpseMouseListener>( );<z>
new HashSet<GlimpseMouseMotionListener>( );<z>
GlimpseMouseWheelListener>( );<z>
( this.mouseListeners );<z>
Collections.unmodifiableCollection( this.mouseMotionListeners );<z>
mouseWheelListeners );<z>
name;<z>
parent != null )<z>
( this );<z>
roleName)<z>
, SystemException {<z>
(userId, groupId, roleName, false);<z>
) {<z>
debug("Releasing resources...");<z>
if (isInitialized) {<z>
0) {<z>
("Shutting down even though there are still some active compute workers");<z>
.clear();<z>
close();<z>
Exception e) {<z>
error("Problem shutting down compute service", e);<z>
void doLayout() {<z>
(sourceTemplate);<z>
p("\n" +<z>
"<input type=\"hidden\" name=\"authenticityToken\" value=\"");<z>
));<z>
;<z>
(sourceTemplate);<z>
long sizeLimit) {<z>
;<z>
();<z>
mySize > sizeLimit) {<z>
();<z>
finally {<z>
);<z>
);<z>
() {<z>
StringBuilder buffer = new StringBuilder();<z>
("[pos: ");<z>
append(this.bufpos);<z>
("]");<z>
buffer.append("[limit: ");<z>
buffer.append(this.buflen);<z>
append("]");<z>
buffer.append("[");<z>
++) {<z>
buffer[i]);<z>
.append("]");<z>
(tempBuffer) {<z>
;<z>
.append(this.origBufpos);<z>
;<z>
);<z>
append(this.origBuflen);<z>
.append("]");<z>
"[");<z>
< this.origBuflen; i++) {<z>
]);<z>
"]");<z>
toString();<z>
(SDView view) {<z>
super();<z>
fView = view;<z>
._141);<z>
_142);<z>
);<z>
ITmfImageConstants.IMG_UI_LAST_PAGE));<z>
setTranslation(<z>
.Translation.Builder builderForValue) {<z>
translationBuilder_ == null) {<z>
);<z>
());<z>
;<z>
} else {<z>
, builderForValue.build());<z>
;<z>
out) {<z>
(out instanceof ObjBaseOutputPort)) {<z>
return false;<z>
ObjBaseOutputPort) out;<z>
_objBaseType) {<z>
false;<z>
true;<z>
[] readByteArray(DataInputStream in) throws IOException {<z>
;<z>
if (length == 0) {<z>
return null;<z>
} else {<z>
byte[length];<z>
in.readFully(buf);<z>
buf;<z>
Object obj) {<z>
(this == obj)<z>
true;<z>
)<z>
;<z>
getClass())<z>
false;<z>
;<z>
)<z>
return false;<z>
) {<z>
null)<z>
return false;<z>
.equals(other.destination))<z>
;<z>
.dir)<z>
return false;<z>
{<z>
)<z>
;<z>
))<z>
false;<z>
null) {<z>
if (other.info != null)<z>
return false;<z>
!info.equals(other.info))<z>
;<z>
null) {<z>
.name != null)<z>
return false;<z>
name))<z>
return false;<z>
) {<z>
other.onAuto != null)<z>
return false;<z>
other.onAuto))<z>
false;<z>
) {<z>
other.pos != null)<z>
false;<z>
)<z>
false;<z>
previousImage == null) {<z>
!= null)<z>
return false;<z>
(other.previousImage))<z>
;<z>
!= other.speed)<z>
;<z>
visible != other.visible)<z>
;<z>
zPriority != other.zPriority)<z>
return false;<z>
return true;<z>
void addGrailsConsoleBuildListener(Project project) {<z>
);<z>
Project.MSG_INFO);<z>
(System.out);<z>
err);<z>
project.addBuildListener(logger);<z>
[] bytesOf(String s) {<z>
("UTF-8");<z>
e) {<z>
e);<z>
IdeaPluginDescriptor descriptor) {<z>
);<z>
suffix : ourSuffixes) {<z>
)) {<z>
.length()).trim();<z>
name;<z>
Method method, Class mixinClass)<z>
mixinClass );<z>
(mixinModel == null)<z>
;<z>
mixinsModel.addMixinModel( mixinModel );<z>
addMethodMixin( method, mixinModel );<z>
mixinModel;<z>
{<z>
(jse.isJsonObject()) {<z>
;<z>
= j.entrySet();<z>
> iter = set.iterator();<z>
()) {<z>
> entry = iter.next();<z>
Element e = new Element();<z>
.setKey(entry.getKey());<z>
new ArrayValue());<z>
(ValueType.ARRAY);<z>
;<z>
);<z>
);<z>
{<z>
jse.getAsJsonArray();<z>
iter = j.iterator();<z>
) {<z>
= new Element();<z>
e.setKey("");<z>
ArrayValue());<z>
.setValueType(ValueType.ARRAY);<z>
next(), e);<z>
.setParent(element);<z>
add(e);<z>
()) {<z>
setValueType(ValueType.SINGLE);<z>
jse.toString()));<z>
{<z>
)) {<z>
();<z>
entrySet()) {<z>
String other_element_key = other_element.getKey();<z>
other_element.getValue();<z>
String __this__success_copy_key = other_element_key;<z>
conf.thrift.ThriftFlumeConfigData(other_element_value);<z>
, __this__success_copy_value);<z>
;<z>
{<z>
{<z>
) == null) {<z>
null, CreateMode.PERSISTENT);<z>
catch (NodeExistsException e) {<z>
(Exception e) {<z>
new IOException(e);<z>
String> servers;<z>
);<z>
, new TabletServerWatcher());<z>
catch (Exception e) {<z>
new IOException(e);<z>
(servers != null) {<z>
(String eachServer: servers) {<z>
;<z>
.notifyAll();<z>
} else {<z>
SERVER);<z>
(liveCommitLogServers) {<z>
null) {<z>
;<z>
catch (Exception e) {<z>
new IOException(e);<z>
;<z>
LOG.info("CommitLogServer lock watcher registered.");<z>
, new CommitLogServerWatcher());<z>
(Exception e) {<z>
IOException(e);<z>
if (servers != null) {<z>
eachServer: servers) {<z>
(eachServer, new ServerMonitorInfo());<z>
) {<z>
).<z>
).<z>
("code", code).<z>
("reasonPhrase", reasonPhrase).<z>
toString();<z>
(Resource resource) {<z>
) != IResource.FILE)<z>
File) resource;<z>
.isContentDescriptionCached(file);<z>
cached)) + ")";<z>
Messages.resource_content_description, description);<z>
addChild(contentDescriptionNode);<z>
CoreException ce) {<z>
)));<z>
getResponseHeaders()<z>
{<z>
();<z>
String, String>();<z>
] hM = httpMethod.getResponseHeaders();<z>
) {<z>
),header.getValue());<z>
map;<z>
) {<z>
if (isInstanceOfUserDetails(authentication)) {<z>
.getUsername();<z>
().toString();<z>
Exception {<z>
;<z>
= this;<z>
);<z>
removeIllegalChars( String normal ) {<z>
edit = normal;<z>
('.', '_');<z>
, '_');<z>
'_');<z>
);<z>
;<z>
= edit.replace(':', '_');<z>
);<z>
;<z>
.replace("%", "percentage");<z>
);<z>
("$", "_");<z>
replace("{", "_");<z>
"_");<z>
;<z>
{<z>
if (jj_scan_token(LT)) return true;<z>
(IDENTIFIER)) return true;<z>
(jj_scan_token(GT)) return true;<z>
return false;<z>
void load()<z>
.CONFIGURATION_FILE);<z>
Config.class, props);<z>
.process(AdminConfig.class, props);<z>
class, props);<z>
;<z>
.class, props);<z>
props);<z>
process(ShutdownConfig.class, props);<z>
);<z>
);<z>
process(CustomConfig.class, props);<z>
(EnchantsConfig.class, props);<z>
);<z>
, props);<z>
.class, props);<z>
, props);<z>
(PricesConfig.class, props);<z>
(SiegeConfig.class, props);<z>
;<z>
(NetworkConfig.class, props);<z>
DatabaseConfig.class, props);<z>
class, props);<z>
;<z>
process(EventConfig.class, props);<z>
catch(Exception e)<z>
"Can't load gameserver configuration: ", e);<z>
("Can't load gameserver configuration: ", e);<z>
);<z>
) {<z>
now = System.currentTimeMillis();<z>
- current;<z>
= now;<z>
time;<z>
static int getLighterFontWeight( String curWeight )<z>
= getFontWeight( curWeight ) - 100;<z>
< 100 )<z>
= 100;<z>
weight;<z>
String sessionId,<z>
,<z>
) @QueryParam("merge") boolean merge,<z>
Context UriInfo uriInfo,<z>
) {<z>
;<z>
(getPublicBaseUri() + "ontonet/session/");<z>
;<z>
);<z>
);<z>
rb.build();<z>
{<z>
new OnClickListener() {<z>
{<z>
DATE_DIALOG_ID);<z>
.setOnClickListener(new View.OnClickListener() {<z>
public void onClick(View v) {<z>
);<z>
();<z>
, rowId);<z>
(RESULT_OK, resultData);<z>
();<z>
);<z>
Object object) {<z>
null) {<z>
(object);<z>
addQueryPropertyDescriptor(object);<z>
);<z>
itemPropertyDescriptors;<z>
nomeContato) {<z>
enc = null;<z>
nomeContato != null)<z>
Constants.DES_KEY, nomeContato);<z>
{<z>
) {<z>
(e);<z>
;<z>
nomeContato = enc;<z>
) throws Exception {<z>
);<z>
null)<z>
"No matching resources.");<z>
resIdx < resources.length; resIdx++)<z>
)<z>
"");<z>
resources[resIdx]);<z>
(InputStream is)<z>
throws IOException {<z>
writeByteBufferStart();<z>
{<z>
new byte[1024];<z>
byte[] buffer = _byteBuffer;<z>
len;<z>
, buffer.length)) > 0) {<z>
{<z>
);<z>
0) {<z>
, len);<z>
;<z>
0, len);<z>
);<z>
public void run() {<z>
"AMQP Consumer is starting...");<z>
;<z>
countDown();<z>
();<z>
{<z>
channel);<z>
;<z>
NITFSRuntimeException(String messageID)<z>
);<z>
(this.getMessage());<z>
private void doSelectionChanged() {<z>
;<z>
);<z>
size() != 1) {<z>
.setError("");<z>
null;<z>
else {<z>
(IMethod) selected.get(0);<z>
selected.size() != 0);<z>
;<z>
(status);<z>
) {<z>
toParams();<z>
"KalturaPlayableEntryBaseFilter");<z>
.addIntIfNotNull("durationLessThan", this.durationLessThan);<z>
, this.durationGreaterThan);<z>
"durationLessThanOrEqual", this.durationLessThanOrEqual);<z>
this.durationGreaterThanOrEqual);<z>
.addIntIfNotNull("msDurationLessThan", this.msDurationLessThan);<z>
addIntIfNotNull("msDurationGreaterThan", this.msDurationGreaterThan);<z>
addIntIfNotNull("msDurationLessThanOrEqual", this.msDurationLessThanOrEqual);<z>
addIntIfNotNull("msDurationGreaterThanOrEqual", this.msDurationGreaterThanOrEqual);<z>
"durationTypeMatchOr", this.durationTypeMatchOr);<z>
return kparams;<z>
equals(Object o) {<z>
) {<z>
true;<z>
) != o.getClass()) {<z>
false;<z>
SVNBasedArtifactRepository) o;<z>
getRepositoryType())){<z>
;<z>
true;<z>
final VirtualFile virtualFile) {<z>
extension : myExtensions.getValue()) {<z>
extension.getFileStatus(virtualFile);<z>
null) {<z>
;<z>
isInLocalFileSystem() && myFileStatusProvider != null) {<z>
virtualFile);<z>
(virtualFile);<z>
)<z>
String name=_name.getSelectedItem() ;<z>
12;<z>
())).intValue();<z>
Exception ex)<z>
name,Font.PLAIN,size);<z>
throws CoreException {<z>
= getIndexDetails(repository);<z>
(repository, null, details, null );<z>
private Dictionary parseDictionary(Element prop) throws ParseException {<z>
prop.getElements("property");<z>
if (subProps != null) {<z>
();<z>
) {<z>
subProps[i], dict2);<z>
;<z>
} else {<z>
;<z>
throws ObjectStreamException {<z>
;<z>
) {<z>
(), envMap);<z>
;<z>
dao.saveEnvironment(rootDir, envMap);<z>
e) {<z>
printStackTrace();<z>
return this;<z>
initExecutionMessageDirector() {<z>
initialize(ExecutionMessageDirector.EXECUTION_MESSAGES_FILE_PATH);<z>
RuntimeException e) {<z>
);<z>
addPartsFromRelationships(Session jcrSession,<z>
, Base source, RelationshipsPart rp) throws Docx4JException {<z>
source.getPackage();<z>
().getRelationship() ) {<z>
("For Relationship Id=" + r.getId()<z>
.getPartName()<z>
() );<z>
, docxNode, pkg, rp, r);<z>
) {<z>
, e);<z>
) {<z>
null) {<z>
);<z>
updateFrequencyEveryLabel.setText("every");<z>
;<z>
("minutes");<z>
new BorderLayout();<z>
setHgap(3);<z>
updateFrequencyPanel = new JPanel();<z>
);<z>
CENTER);<z>
, java.awt.BorderLayout.EAST);<z>
, java.awt.BorderLayout.WEST);<z>
;<z>
Property> getUpdateProperties() {<z>
Property> list = new ArrayList();<z>
{<z>
o));<z>
;<z>
IOException {<z>
"enter sendStart(OutputStream out)");<z>
(EXTRA_BYTES);<z>
getPartBoundary());<z>
CRLF_BYTES);<z>
) {<z>
sb = new StringBuilder("The property placeholder processor for ");<z>
placeholderSuffix)<z>
.getSymbolicName()).append("_")<z>
)<z>
(" at location ");<z>
{<z>
(s);<z>
.append(". This may prevent properties, beans, or other items referenced by this component from being properly processed.");<z>
.toString());<z>
protected AccessibleJApplet()<z>
;<z>
String toString() {<z>
)<z>
author, "author=%s, ")<z>
+ toStringFormat(content, "content=%s, ")<z>
toStringFormat(displayName, "displayName=%s, ")<z>
+ toStringFormat(downstreamDuplicates,<z>
id, "id=%s, ")<z>
toStringFormat(image, "image=%s, ")<z>
(objectType, "objectType=%s, ")<z>
+ toStringFormat(published, "published=%s, ")<z>
toStringFormat(summary, "summary=%s, ")<z>
)<z>
(upstreamDuplicates,<z>
toStringFormat(url, "url=%s, ")<z>
+ toStringFormat(uuid, "uuid=%s, ")<z>
"entityType=%s, ")<z>
dynamic_properties,<z>
"]";<z>
void sequence_CompileAttribute(EObject context, CompileAttribute semanticObject) {<z>
{<z>
.YES)<z>
);<z>
ValueTransient.YES)<z>
;<z>
;<z>
);<z>
, semanticObject.getTag());<z>
, semanticObject.getOptions());<z>
finish();<z>
pruneInvalidClusters() {<z>
(pruned) {<z>
hasNext();) {<z>
);<z>
)) {<z>
));<z>
.remove();<z>
.getId());<z>
true;<z>
,<z>
assetCategoryIds,<z>
java.lang.String[] assetTagNames)<z>
kernel.exception.PortalException,<z>
SystemException {<z>
(userId, user, assetCategoryIds, assetTagNames);<z>
Processor processor, final Synchronization onCompletion) {<z>
>() {<z>
call() throws Exception {<z>
, processor);<z>
) {<z>
);<z>
else {<z>
onCompletion.onComplete(answer);<z>
;<z>
.submit(task);<z>
private static JetDelegatorToSuperCall findSuperCall(<z>
,<z>
(classOrObject instanceof JetClassOrObject)) {<z>
null;<z>
{<z>
return null;<z>
) {<z>
if (specifier instanceof JetDelegatorToSuperCall) {<z>
(TYPE, specifier.getTypeReference());<z>
!= null;<z>
).getDeclarationDescriptor();<z>
assert superClassDescriptor != null;<z>
) {<z>
) specifier;<z>
return null;<z>
(String nodeValue) {<z>
(nodeValue == null) { return null; }<z>
.DEFAULT);<z>
0, byteArray.length);<z>
);<z>
Exception e) {<z>
"getBitMap() Error occured " + e.getMessage());<z>
;<z>
index) {<z>
(index) {<z>
0:<z>
) & 0xFFFL));<z>
);<z>
new byte[8];<z>
);<z>
(dataArray, 0, 5);<z>
1:<z>
));<z>
36) & 0xFFFL));<z>
& 0xFFFL));<z>
12) & 0xFFFL));<z>
int)(data & 0xFFFL));<z>
2:<z>
>> 48) & 0xFFFL));<z>
;<z>
0xFFFL));<z>
12) & 0xFFFL));<z>
);<z>
3:<z>
) & 0xFFFL));<z>
0xFFFL));<z>
) & 0xFFFL));<z>
int)(data & 0xFFFL));<z>
("id") List<Integer> networkItemIds) {<z>
RaxLoadBalancer();<z>
.setAccountId(accountId);<z>
(loadBalancerId);<z>
MessageDataContainer data = new MessageDataContainer();<z>
== 0) {<z>
accessListService.markAccessListForDeletion(accountId, loadBalancerId);<z>
;<z>
DELETE_ACCESS_LIST, data);<z>
else {<z>
(accountId, loadBalancerId, networkItemIds);<z>
;<z>
;<z>
build();<z>
e) {<z>
getErrorResponse(e, null, null);<z>
) {<z>
= tokenScanner.getDjRules();<z>
: fRules) {<z>
.add(rule);<z>
);<z>
)<z>
{<z>
int newSize = 2*data.length ;<z>
] newData = new Object[ newSize ] ;<z>
, data.length ) ;<z>
newData ;<z>
, Options options, CeyloncFileManager ceyloncFileManager){<z>
log;<z>
this.options = options;<z>
ceyloncFileManager = ceyloncFileManager;<z>
option) throws IOException {<z>
writeLineSeparatorEnabled = false;<z>
.writeOption(option);<z>
= true;<z>
;<z>
();<z>
int indentFactor, int indent )<z>
int j;<z>
length();<z>
)<z>
;<z>
;<z>
StringBuffer( "{" );<z>
newindent = indent + indentFactor;<z>
;<z>
( n == 1 )<z>
= keys.next();<z>
o.toString() ) );<z>
;<z>
get( o ), indentFactor,<z>
indent ) );<z>
) )<z>
o = keys.next();<z>
length() > 1 )<z>
);<z>
;<z>
< newindent; j += 1 )<z>
);<z>
) );<z>
": " );<z>
.map.get( o ), indentFactor,<z>
newindent ) );<z>
.length() > 1 )<z>
);<z>
; j < indent; j += 1 )<z>
.append( ' ' );<z>
'}' );<z>
);<z>
, Object element) {<z>
(element instanceof GridChooserItem) {<z>
isSelected() == _selected;<z>
;<z>
config, Calendar timeStamp)<z>
this.repository = repository;<z>
workspaceName;<z>
this.config = config;<z>
timeStamp = timeStamp;<z>
FileCleanerHolder cleanerHolder =<z>
.getComponent(FileCleanerHolder.class);<z>
fileCleaner = cleanerHolder.getFileCleaner();<z>
createStorage();<z>
e)<z>
"Incremental backup initialization failed ", e);<z>
("Incremental backup initialization failed ", e);<z>
(IOException e)<z>
("Incremental backup initialization failed ", e);<z>
notifyError("Incremental backup initialization failed ", e);<z>
)<z>
= bitmap;<z>
bitmapESet;<z>
;<z>
= false;<z>
)<z>
eNotify( new ENotificationImpl( this,<z>
,<z>
AttributePackage.PATTERN_IMAGE__BITMAP,<z>
;<z>
(){<z>
AIDRemoteQuery.getDefaultRepository();<z>
;<z>
"http://www.w3.org/2004/02/skos/core#broader";<z>
= "http://www.w3.org/2004/02/skos/core#inScheme";<z>
String prefLabel = "http://www.w3.org/2004/02/skos/core#prefLabel";<z>
String concept_type = "http://www.w3.org/2004/02/skos/core#Concept";<z>
.getUrl();<z>
;<z>
.getTerm();<z>
(), type, concept_type);<z>
.getUrl(), broader, parent_broader);<z>
.getUrl(), inScheme, scheme);<z>
prefLabel, label);<z>
(Exception e) {<z>
printStackTrace();<z>
false;<z>
true;<z>
builder_, int level_) {<z>
, "rule_5")) return false;<z>
, BNF_SEMICOLON);<z>
true;<z>
clipboards) {<z>
();<z>
.length || data.length == 0) {<z>
(SWT.ERROR_INVALID_ARGUMENT);<z>
i++) {<z>
i])) {<z>
ERROR_INVALID_ARGUMENT);<z>
== 0) return;<z>
data = data;<z>
;<z>
iDataObject.getAddress());<z>
retryCount = 0;<z>
{<z>
(Throwable t) {}<z>
= new MSG();<z>
PM_NOYIELD);<z>
OleSetClipboard(iDataObject.getAddress());<z>
(result != COM.S_OK) {<z>
.error(DND.ERROR_CANNOT_SET_CLIPBOARD);<z>
re00577() {<z>
XQuery(<z>
;<z>
;<z>
res;<z>
(true)<z>
double[] values,<z>
size,<z>
copy,<z>
checkIndicesSorted,<z>
removeDuplicates)<z>
);<z>
null);<z>
,<z>
)<z>
length == 0) {<z>
("msg.shell.readFile.bad.args");<z>
(args[0]);<z>
String charCoding = null;<z>
(args.length >= 2) {<z>
ScriptRuntime.toString(args[1]);<z>
readUrl(path, charCoding, true);<z>
) throws Exception {<z>
String clusterNodeId = jsonObject.getString("clusterNodeId");<z>
("companyId");<z>
"userId");<z>
("sessionId");<z>
, userId, sessionId);<z>
par1)<z>
;<z>
)entityliving.hurtTime - par1;<z>
() <= 0)<z>
(float)entityliving.deathTime + par1;<z>
);<z>
0.0F)<z>
/= entityliving.maxHurtTime;<z>
PI);<z>
attackedAtYaw;<z>
1.0F, 0.0F);<z>
, 1.0F);<z>
);<z>
String getRefreshMeta() {<z>
if (_refreshDelaySeconds <= 8 ||<z>
(1000 * (_refreshDelaySeconds + 30)))<z>
;<z>
;<z>
getFiles() {<z>
synchronized (Tablet.this) {<z>
);<z>
path : datafileSizes.keySet()) {<z>
.toString());<z>
return Collections.unmodifiableSet(files);<z>
public static SWTTimerQueue sharedInstance(final Display display) {<z>
{<z>
;<z>
return instance;<z>
static final MultiMap EMPTY_MULTIMAP = new SerializableMultiMap() {<z>
MultiMap _this_ = this;<z>
void clear() { }<z>
) { return false; }<z>
; }<z>
{<z>
AbstractMultiMapSet() {<z>
; }<z>
{ return 0; }<z>
; }<z>
; }<z>
abstract class AbstractMultiMapSet<z>
implements MultiMapSet { }<z>
Object o) {<z>
false;<z>
)==0;<z>
; }<z>
public int hashCode() { return 0; }<z>
; }<z>
EMPTY_SET; }<z>
Object put(Object key, Object value) {<z>
);<z>
public void putAll(Map t) {<z>
size()==0) return;<z>
();<z>
{ return null; }<z>
}<z>
}<z>
{ return "{}"; }<z>
; }<z>
Object key, Object value) {<z>
false;<z>
value) {<z>
new UnsupportedOperationException();<z>
boolean addAll(Object key, Collection values) {<z>
return false;<z>
UnsupportedOperationException();<z>
addAll(MultiMap mm) {<z>
size()==0) return false;<z>
();<z>
, Collection values) {<z>
;<z>
key, Collection values) {<z>
return false;<z>
public Collection getValues(Object key) {<z>
.EMPTY_SET;<z>
value) {<z>
false;<z>
,<z>
BusinessHandler> businessHandler,<z>
,<z>
fileParameter) {<z>
, businessHandler, dataBusinessHandler, fileParameter);<z>
;<z>
) {<z>
hasChildren(element)) {<z>
)<z>
fTreeViewer.refresh(element);<z>
{<z>
if (!hasMatches(element)) {<z>
;<z>
(element);<z>
!= null) {<z>
;<z>
(parent, refreshViewer);<z>
{<z>
);<z>
if (refreshViewer)<z>
;<z>
else {<z>
) {<z>
.refresh(element);<z>
double[] pdf, int interpolationType) {<z>
==0) {<z>
IllegalArgumentException("Non-existing pdf");<z>
int nBins = pdf.length;<z>
;<z>
] = 0;<z>
i++ ) {<z>
< 0.0) throw new IllegalArgumentException("Negative probability");<z>
+ pdf[i];<z>
<= 0.0) throw new IllegalArgumentException("At leat one probability must be > 0.0");<z>
) {<z>
[i] /= cdf[nBins];<z>
void update(float delta) {<z>
if(scrolly<0)scrolly=0;<z>
400)scrolly=400;<z>
testTween.getValue()*mouseDiffy;<z>
.setTranslation(0, scrolly);<z>
activate() {<z>
removeRunningActivators();<z>
;<z>
).getBlackboard();<z>
);<z>
editPointProvider = new ParallelEditPointProvider(lineProvider);<z>
;<z>
);<z>
(new DrawCurrentGeomVerticesActivator());<z>
));<z>
;<z>
;<z>
);<z>
EditToolConfigurationHelper helper = new EditToolConfigurationHelper(eventBehaviours);<z>
helper.add(new DrawCreateVertexSnapAreaBehaviour());<z>
.startMutualExclusiveList();<z>
));<z>
true);<z>
{<z>
);<z>
);<z>
stopMutualExclusiveList();<z>
);<z>
WorkflowInfo> createWfInfos(InputStream xmlResponse) {<z>
wfInfos = new ArrayList<WorkflowInfo>();<z>
Helper.applyXPathSeveralNodes(<z>
xmlResponse, "//workflow");<z>
workflowElements) {<z>
substring(38);<z>
();<z>
new WorkflowInfo(wfId);<z>
.setTitle(wfTitle);<z>
.add(wfInfo);<z>
sort(wfInfos, TITLE_ORDER);<z>
return wfInfos;<z>
(JDOMException e) {<z>
();<z>
{<z>
printStackTrace();<z>
return null;<z>
() {<z>
),<z>
());<z>
InputStream localReader() throws IOException<z>
null;<z>
backupFile, true));<z>
) {<z>
this.getCount();<z>
"sample", count);<z>
(), this.getStandardDeviation(),<z>
());<z>
validateEncoding() {<z>
{<z>
1) {<z>
setErrorMessage("Console encoding not selected");<z>
false;<z>
true;<z>
ensureCapa() {<z>
) {<z>
newSize = values.length * 2;<z>
.copyOf(values, newSize);<z>
()<z>
);<z>
_serverSocket!=null) _serverSocket.close();<z>
();<z>
_os.close();<z>
)<z>
("cleanup failure",e,"bugs@frostwire.com");<z>
) {<z>
.exists() ) {<z>
.listFiles();<z>
i<files.length; i++) {<z>
isDirectory()) {<z>
deleteDirectory(files[i]);<z>
));<z>
delete() );<z>
) {<z>
);<z>
, StackEntryType.DOUBLE, "drem requires double in position 3 on stack");<z>
DREM);<z>
currentOffset++;<z>
);<z>
, IEObjectConsumer inst) {<z>
{<z>
this, 0, inst);<z>
;<z>
void addRuleInstances (Digester digester)<z>
(digester);<z>
.addRule(<z>
"/widths", new CallMethodSpecialRule() {<z>
target)<z>
);<z>
widths);<z>
);<z>
(<z>
{<z>
)<z>
.parseIntArray(bodyText);<z>
)target).setHeights(heights);<z>
);<z>
digester.addRule(<z>
,<z>
new CallMethodSpecialRule() {<z>
Object target)<z>
);<z>
)target).setTileCounts(tileCounts);<z>
});<z>
(<z>
new CallMethodSpecialRule() {<z>
void parseAndSet (String bodyText, Object target)<z>
] values = StringUtil.parseIntArray(bodyText);<z>
starget = (SwissArmyTileSet)target;<z>
length == 2) {<z>
[1]));<z>
{<z>
warning("Invalid 'offsetPos' definition '" +<z>
"'.");<z>
);<z>
digester.addRule(<z>
"/gapSize", new CallMethodSpecialRule() {<z>
target)<z>
;<z>
;<z>
2) {<z>
));<z>
} else {<z>
warning("Invalid 'gapSize' definition '" +<z>
"'.");<z>
);<z>
{<z>
this.locX = i;<z>
j;<z>
.locZ = k;<z>
= l;<z>
;<z>
j1;<z>
public String prettyString(int indent) {<z>
getDimension() == 1) {<z>
toString();<z>
(VisADException e) {<z>
;<z>
return super.prettyString(0);<z>
) {<z>
(side) {<z>
:<z>
;<z>
case RIGHT:<z>
;<z>
ANCESTOR:<z>
return fAncestor;<z>
);<z>
{<z>
]{<z>
IStructuredSelection elements) {<z>
.size() == 0)<z>
;<z>
= new ArrayList();<z>
) {<z>
;<z>
(element instanceof IFile) {<z>
file= (IFile)element;<z>
.create(file.getProject());<z>
if (project == null)<z>
return null;<z>
(file, project))<z>
;<z>
} else {<z>
null;<z>
);<z>
size()]);<z>
{<z>
;<z>
() {<z>
);<z>
: data.keySet()) {<z>
(name);<z>
!validateData(list)) continue;<z>
(list));<z>
ret;<z>
)<z>
get();<z>
.getRequest()<z>
()<z>
)<z>
;<z>
onRequest(val, requestCycle);<z>
update() {<z>
() == false) {<z>
("[Local Folder Repository] The specified file must be a directory. (" + getFile() + ")");<z>
update(getFile());<z>
getMetaData(Class<X> clazz)<z>
> rc = null;<z>
;<z>
)map.get(clazz);<z>
if(rc == null)<z>
true)<z>
();<z>
)<z>
X>)last.get(clazz);<z>
(clazz);<z>
MultiMetaData<?>>();<z>
copy.putAll(last);<z>
;<z>
(last, copy);<z>
rc;<z>
(<z>
SummaryInformation summaryInformation )<z>
)<z>
.getTitle() ) )<z>
) );<z>
.isNotEmpty( summaryInformation.getAuthor() ) )<z>
;<z>
( AbstractWordUtils<z>
( summaryInformation.getComments() ) )<z>
addDescription( summaryInformation<z>
.getComments() );<z>
if ( AbstractWordUtils<z>
getKeywords() ) )<z>
.addKeywords( summaryInformation<z>
() );<z>
int compareTo(ColorName c) {<z>
c.order) {<z>
1;<z>
(order > c.order) {<z>
;<z>
} else {<z>
;<z>
void addIncoming() {<z>
(), incomingFilters, incomingBusinessFilters,<z>
), current.eResource()) {<z>
{<z>
); iter.hasNext();) {<z>
EObject) iter.next();<z>
CreateLinkAction.Properties.incoming,<z>
elem));<z>
incoming.refresh();<z>
.open();<z>
void main(String[] args) {<z>
);<z>
() {<z>
();<z>
.append("]");<z>
);<z>
synchronized AWTKeyStroke getCachedStroke<z>
modifiers, boolean onKeyRelease)<z>
AppContext.getAppContext();<z>
);<z>
);<z>
null) {<z>
= new HashMap();<z>
);<z>
{<z>
clazz = getAWTKeyStrokeClass();<z>
null);<z>
);<z>
{<z>
(false);<z>
{<z>
assert(false);<z>
e) {<z>
;<z>
cacheKey.keyChar = keyChar;<z>
.keyCode = keyCode;<z>
(mapOldModifiers(modifiers));<z>
= onKeyRelease;<z>
.get(cacheKey);<z>
stroke == null) {<z>
stroke = cacheKey;<z>
stroke);<z>
remove(APP_CONTEXT_KEYSTROKE_KEY);<z>
;<z>
)<z>
)<z>
throw new IllegalArgumentException();<z>
new HashSet<PortletFilterLifeCycle>();<z>
filterToContainerDependencies.entrySet())<z>
)<z>
.add(entry.getKey());<z>
;<z>
] weights) {<z>
if (delegate == null) {<z>
(weights);<z>
weights);<z>
public void setWindowSize(Integer windowSize) {<z>
;<z>
>( windowSize );<z>
( windowSize );<z>
(); i++ )<z>
( new Integer( i ) );<z>
( order );<z>
)<z>
= null;<z>
, cls);<z>
catch (IntrospectionException e) {<z>
;<z>
catch (IntrospectionException ie) {<z>
;<z>
+= 2) {<z>
String)args[i];<z>
;<z>
if (BOUND.equals(key)) {<z>
booleanValue());<z>
{<z>
.booleanValue());<z>
if (PROPERTYEDITORCLASS.equals(key)) {<z>
((Class)value);<z>
{<z>
String)value;<z>
;<z>
(methodName, new Class[0]);<z>
method);<z>
) {<z>
;<z>
WRITEMETHOD.equals(key)) {<z>
value;<z>
;<z>
= pd.getPropertyType();<z>
, new Class[]{type});<z>
method);<z>
(Exception e) {<z>
+ methodName + "\"");<z>
, key, value);<z>
;<z>
final K key) {<z>
null) {<z>
throw new NullPointerException();<z>
(key)) {<z>
;<z>
key))<z>
.firstKeyOrNull();<z>
.String ___qname)<z>
SAXException<z>
attIdx;<z>
(true) {<z>
{<z>
:<z>
___uri, ___local, ___qname);<z>
case 2 :<z>
)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {<z>
);<z>
state = 3;<z>
.leaveElement(___uri, ___local, ___qname);<z>
{<z>
.equals(key)) {<z>
)priorityPriorityPropertiesEditionComponent.getPropertiesEditionPart(kind, key);<z>
)priorityPart;<z>
kind, key);<z>
defaultViewDir) {<z>
controller == null) {<z>
= "";<z>
();<z>
controller = "/" + controller;<z>
actionOrView)) {<z>
).allowDefaultActionMethod()) {<z>
getDefaultActionMethod();<z>
IllegalArgumentException("The value for action " +<z>
);<z>
.getViewExtension()) &&<z>
{<z>
getInstance().getViewExtension();<z>
String uri = "";<z>
.startsWith("/")) {<z>
+ "/" + actionOrView;<z>
+ controller + actionOrView;<z>
= getRealPath();<z>
;<z>
;<z>
{<z>
defaultViewDir != null) {<z>
.warn("File \"" + filePath + "\" does not exist. Use " +<z>
"\".");<z>
);<z>
errorMsg = "View file \"" + filePath + "\" does not exist.";<z>
(errorMsg);<z>
throw new NoViewFileException(errorMsg, filePath);<z>
return uri;<z>
) throws Exception {<z>
.interceptorChainIndex;<z>
EJBClientInterceptor[] chain = interceptorChain;<z>
chain.length) {<z>
.cannotRetryRequest();<z>
this.interceptorChainIndex = 0;<z>
receiverInvocationContext = null;<z>
sendRequest();<z>
() {<z>
() {<z>
authenticate(Authentication authentication) {<z>
return authentication;<z>
() {<z>
String username)<z>
{<z>
UsernameNotFoundException(username);<z>
});<z>
(IProgressMonitor monitor) {<z>
) == 0)<z>
;<z>
)]), new NullProgressMonitor());<z>
e)<z>
(), Messages.FeatureInstallJob_ERR_SearchSite, e);<z>
;<z>
resetCurrentResultAndMetaData()<z>
= "resetCurrentResultAndMetaData";<z>
);<z>
= null;<z>
null;<z>
).exiting( sm_className, methodName );<z>
rootPath, Object value) {<z>
;<z>
, value);<z>
() {<z>
yAxis = new Transform3D();<z>
;<z>
);<z>
ALLOW_TRANSFORM_WRITE);<z>
;<z>
addChild(triPrismEdges());<z>
, 0, 0, 0);<z>
2.0f );<z>
0.0,0.0), 100.0);<z>
;<z>
rotator);<z>
tg = new TransformGroup() ;<z>
)));<z>
) ;<z>
(tg);<z>
(spin);<z>
;<z>
.setUserData("TG: MOUSETG");<z>
new CustomMouseTranslate();<z>
(tg);<z>
.setSchedulingBounds(bounds);<z>
;<z>
.addChild(mouseTG);<z>
;<z>
, Object objValue) {<z>
(DBG) {<z>
("onPreferenceChange(). preferenece: \"" + preference + "\""<z>
);<z>
(preference == mVibrateWhenRinging) {<z>
doVibrate = (Boolean) objValue;<z>
getContentResolver(),<z>
VIBRATE_WHEN_RINGING, doVibrate ? 1 : 0);<z>
} else if (preference == mButtonDTMF) {<z>
objValue);<z>
.getContentResolver(),<z>
DTMF_TONE_TYPE_WHEN_DIALING, index);<z>
preference == mButtonTTY) {<z>
handleTTYChange(preference, objValue);<z>
preference == mVoicemailProviders) {<z>
(String) objValue;<z>
(DBG) {<z>
mPreviousVMProviderKey<z>
+ "\" to \"" + newProviderKey + "\".");<z>
.equals(newProviderKey)) {<z>
) log("No change is made toward VM provider setting.");<z>
true;<z>
(newProviderKey);<z>
newProviderSettings =<z>
);<z>
null) {<z>
LOG_TAG, "Saved preferences not found - invoking config");<z>
;<z>
simulatePreferenceClick(mVoicemailSettings);<z>
} else {<z>
;<z>
true;<z>
;<z>
(preference == mVoicemailNotificationVibrateWhen) {<z>
((String) objValue);<z>
(<z>
);<z>
preference == mButtonSipCallOptions) {<z>
handleSipCallOptionsChange(objValue);<z>
;<z>
(Entry e, IPersistent obj)<z>
!= 0) {<z>
if (e.pin != null) {<z>
;<z>
} else {<z>
if (nPinned == pinLimit) {<z>
.unpin();<z>
{<z>
1;<z>
.linkAfter(pinList, obj);<z>
WickerboughElder(UUID ownerId) {<z>
.CREATURE}, "{3}{G}");<z>
"EVE";<z>
.subtype.add("Treefolk");<z>
);<z>
(true);<z>
MageInt(4);<z>
this.toughness = new MageInt(4);<z>
false));<z>
);<z>
.M1M1.createInstance(1)));<z>
TargetPermanent(filter));<z>
addAbility(ability);<z>
() {<z>
{<z>
{<z>
return "BPM";<z>
init(ExternalContext context)<z>
WebXmlParser(context);<z>
;<z>
).put(WEB_XML_ATTR, webXml);<z>
mfconfig = MyfacesConfig.getCurrentInstance(context);<z>
.getConfigRefreshPeriod();<z>
));<z>
getDelegateFacesServlet());<z>
);<z>
String applyPermissions()<z>
)<z>
);<z>
;<z>
)<z>
))<z>
action, recipient));<z>
(String action : originalActions)<z>
contains(action))<z>
(target, action, recipient));<z>
)) permissionManager.grantPermissions(grantedPermissions);<z>
permissionManager.revokePermissions(revokedPermissions);<z>
() == 0)<z>
.add("You must select at least one action");<z>
return "failure";<z>
Permission>();<z>
String role : selectedRoles)<z>
r = new Role(role);<z>
)<z>
, r));<z>
selectedFriends)<z>
entityManager.createQuery(<z>
"member", friend)<z>
();<z>
(acct.getUsername());<z>
action : selectedActions)<z>
));<z>
permissions);<z>
Conversation.instance().endBeforeRedirect();<z>
;<z>
new FilenameFilter()<z>
String name )<z>
name.endsWith( LDIF_EXT );<z>
void renderBlockAsItemWithMetadata(Block par1Block, int metadata)<z>
Tessellator.instance;<z>
setBlockBoundsForItemRender();<z>
-0.5F);<z>
;<z>
;<z>
);<z>
draw();<z>
var4.startDrawingQuads();<z>
1.0F, 0.0F);<z>
, metadata));<z>
.draw();<z>
startDrawingQuads();<z>
;<z>
, metadata));<z>
.draw();<z>
startDrawingQuads();<z>
0.0F, 1.0F);<z>
.getBlockTextureFromSideAndMetadata(3, metadata));<z>
);<z>
();<z>
, 0.0F);<z>
, metadata));<z>
;<z>
;<z>
setNormal(1.0F, 0.0F, 0.0F);<z>
);<z>
;<z>
glTranslatef(0.5F, 0.5F, 0.5F);<z>
(String key, long value) {<z>
;<z>
);<z>
sql,<z>
Section section) throws SqlException {<z>
getClientCursorName();<z>
index = sql.lastIndexOf(clientCursorName);<z>
)) {<z>
.getServerCursorNameForPositionedUpdate()<z>
));<z>
else {<z>
;<z>
String path) {<z>
File file = new File(path);<z>
(file.isFile()) {<z>
) + "\" already exists!");<z>
;<z>
FileWriter(file);<z>
for (PriceListItem item : items) {<z>
item.toStr() + '\n');<z>
out.close();<z>
.toString() + "\"!");<z>
(IOException e) {<z>
;<z>
void schemaEditAbort()<z>
null)<z>
this.saveHash;<z>
.saveHash = null;<z>
EditorCell createConstant_1i2int_a5a(EditorContext editorContext, SNode node) {<z>
"");<z>
editorCell.setCellId("Constant_1i2int_a5a");<z>
);<z>
.EDITABLE, true);<z>
setDefaultText("");<z>
return editorCell;<z>
final boolean inherits) throws RjsException {<z>
rni.resolveEnvironment(envir);<z>
.rniInstallSymbol(name);<z>
);<z>
(inherits) {<z>
0<z>
.rni.p_EmptyEnv ) {<z>
(envP, symbolP);<z>
, p } : null;<z>
key) {<z>
(key);<z>
set == null) {<z>
return new ArrayList<TextureData>();<z>
;<z>
IValidatable<Number> validatable)<z>
.getValue();<z>
)<z>
);<z>
t)<z>
error(validatable);<z>
protected PrivateKey engineGeneratePrivate(KeySpec keySpec)<z>
{<z>
ensureValid();<z>
keySpec instanceof PKCS8EncodedKeySpec) {<z>
(PKCS8EncodedKeySpec)keySpec).getEncoded();<z>
.security.ec.ECPrivateKeyImpl(encoded);<z>
implTranslatePrivateKey(key);<z>
GeneralSecurityException e) {<z>
throw new InvalidKeySpecException<z>
);<z>
ECPrivateKeySpec == false) {<z>
InvalidKeySpecException("Only ECPrivateKeySpec and "<z>
"PKCS8EncodedKeySpec supported for EC private keys");<z>
;<z>
return generatePrivate(<z>
.getS(),<z>
getParams()<z>
} catch (PKCS11Exception e) {<z>
new InvalidKeySpecException<z>
("Could not create EC private key", e);<z>
other) {<z>
{<z>
addNumber(other);<z>
== INSTANT) {<z>
;<z>
(this == LOAD) {<z>
(other);<z>
{<z>
addDuration(other);<z>
UnsupportedOperationException();<z>
matchPath(String pattern, String str,<z>
boolean isCaseSensitive) {<z>
length() + 1)<z>
pattern.endsWith(PATTERN_HANDLER_SUFFIX)) {<z>
.length()<z>
length());<z>
str.matches(pattern);<z>
{<z>
+ 1)<z>
.endsWith(PATTERN_HANDLER_SUFFIX)) {<z>
));<z>
str, isCaseSensitive);<z>
() {<z>
(_current != PROCESSING_INSTRUCTION)<z>
;<z>
_processingInstructionData;<z>
protected CompositeDataBeanState()<z>
this.type.newInstance();<z>
(this.bean instanceof BeanNameAware)<z>
- 1));<z>
;<z>
catch (RuntimeException e)<z>
;<z>
e)<z>
RuntimeException(e);<z>
public boolean update(final DnDEvent aEvent) {<z>
aEvent.getAttachedObject();<z>
;<z>
{<z>
= true;<z>
object instanceof EventInfo) {<z>
.getTextForFlavor(DataFlavor.stringFlavor) != null;<z>
("xdebugger.drop.text.add.to.watches"));<z>
;<z>
String id) {<z>
= id;<z>
(this.id != null) {<z>
+ ":" + id;<z>
;<z>
final String projectName) {<z>
projectName);<z>
if (buildInfo == null) {<z>
;<z>
buildInfo;<z>
synchronized void put(String msg){<z>
!isEmpty){<z>
();<z>
) {<z>
;<z>
false;<z>
;<z>
();<z>
public Properties getPropertySet() {<z>
pset = new Properties();<z>
;<z>
return pset;<z>
[] arr) {<z>
;<z>
for (double d : arr) {<z>
(d != 0)<z>
;<z>
);<z>
guarded) {<z>
pat;<z>
.nod = nod;<z>
;<z>
(String name) {<z>
hasBeenForwarded()) {<z>
name);<z>
{<z>
String dateHeader = getHeader(name);<z>
dateHeader == null) {<z>
-1;<z>
{<z>
synchronized (headerDF) {<z>
();<z>
catch (java.text.ParseException err) {<z>
new IllegalArgumentException("Illegal date format: " + dateHeader);<z>
inst, double r) {<z>
S_new;<z>
;<z>
;<z>
;<z>
double deltaprofit;<z>
;<z>
);<z>
inst instanceof SparseInstance) {<z>
.numValues(); i++) {<z>
S_new++;<z>
(i)) == null) {<z>
W_new++;<z>
else {<z>
numAttributes(); i++) {<z>
i)) {<z>
S_new++;<z>
.toString(i)) == null) {<z>
++;<z>
S_new += S;<z>
0) {<z>
(W_new, r);<z>
} else {<z>
;<z>
/ Math.pow(W_new, r);<z>
- profit;<z>
;<z>
new Shim<ParentD, Long>() {<z>
ParentD instance, Long version) {<z>
.version = version;<z>
instance) {<z>
return ((ParentDCodegen) instance).version;<z>
String getName() {<z>
return "version";<z>
, ArrayList<Byte>> receiveInitialResponse()<z>
response = receivePacket();<z>
)<z>
;<z>
ArrayList<Byte>>();<z>
];<z>
index = 1;<z>
firstByte).intValue() == 2){<z>
-1)/(8+5);<z>
{<z>
new ArrayList<Byte>();<z>
[] convertLong = new byte[8];<z>
j < convertLong.length; j++)<z>
+j];<z>
8;<z>
;<z>
++){<z>
);<z>
;<z>
(friend, gridtimeInfo);<z>
retVal;<z>
return null;<z>
() {<z>
;<z>
;<z>
.AUTHOR, "Yiling Yang and Xudong Guan and Jinyuan You");<z>
Field.TITLE, "CLOPE: a fast and effective clustering algorithm for transactional data");<z>
, "Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining");<z>
.setValue(Field.YEAR, "2002");<z>
(Field.PAGES, "682-687");<z>
Field.PUBLISHER, "ACM New York, NY, USA");<z>
;<z>
void rehash() {<z>
.length*2);<z>
;<z>
[newHashSize];<z>
int newHashMask = newHashSize-1;<z>
j++) {<z>
;<z>
) {<z>
.name.hashCode() & newHashMask;<z>
fp0.next;<z>
hashPos2];<z>
= fp0;<z>
= nextFP0;<z>
newHashArray;<z>
newHashMask;<z>
, NSArray objects, ERXRestContext context) throws ERXRestException {<z>
final String key)<z>
new PrivilegedExceptionAction<String>()<z>
public String run()<z>
.getProperty(key);<z>
;<z>
value;<z>
PrivilegedActionException pae)<z>
.getCause();<z>
SecurityException)<z>
(SecurityException) t;<z>
if (t instanceof NullPointerException)<z>
t;<z>
else if (t instanceof IllegalArgumentException)<z>
(IllegalArgumentException) t;<z>
throw (RuntimeException) t;<z>
cce)<z>
throw new RuntimeException("Obtained unchecked Exception; this code should never be reached", t);<z>
() {<z>
<MessageBodyWorkerPair<MessageBodyReader>>();<z>
getCustomProviders(locator, MessageBodyReader.class);<z>
MessageBodyReader.class);<z>
initReaders(readers, customProviders, true);<z>
removeAll(customProviders);<z>
, providers, false);<z>
legacyProviderOrdering) {<z>
class));<z>
MessageBodyWorkerPair<MessageBodyReader> messageBodyWorkerPair : readers) {<z>
types) {<z>
);<z>
readerList == null) {<z>
MessageBodyReader>();<z>
;<z>
provider);<z>
jj_3R_23() {<z>
) return true;<z>
return false;<z>
false;<z>
() {<z>
{<z>
.removeAll();<z>
getMemoryOptions()) {<z>
(option + "M");<z>
(option == deploymentConfiguration.getDefaultMemory()) {<z>
memoryCombo.getItemCount() - 1;<z>
+ "M (Default)");<z>
;<z>
option;<z>
getMemoryOptions().length > 0) {<z>
0);<z>
deploymentConfiguration.getMemoryOptions()[0];<z>
memoryCombo.setEnabled(true);<z>
public synchronized void gainExclusiveLock(){<z>
|| exclusive > 0){<z>
= true;<z>
wait();<z>
lang.Exception _e){<z>
, _e);<z>
exclusive++;<z>
= false;<z>
getStatus() {<z>
"new";<z>
(this.loading)<z>
;<z>
(this.loaded)<z>
;<z>
(this.error)<z>
status = "error";<z>
;<z>
InetSocketAddress remoteAddress) throws RemotingException {<z>
) {<z>
()).trim();<z>
connect(URL.valueOf(url));<z>
.startsWith(LEAVE)) {<z>
.trim();<z>
(url));<z>
{<z>
{<z>
throw new Exception("No input instance format defined");<z>
),<z>
;<z>
++) {<z>
);<z>
);<z>
m_NewBatch = true;<z>
= true;<z>
(numPendingOutput() != 0);<z>
() {<z>
TAB = " ";<z>
retValue = new StringBuilder();<z>
append("strList = ")<z>
"strArray = ")<z>
TAB)<z>
(stringMap).append(TAB)<z>
append(" )");<z>
();<z>
) {<z>
) return;<z>
;<z>
= createEClass(LOGICAL_MODEL);<z>
);<z>
LOGICAL_MODEL__RELATIONS);<z>
(ENTITY);<z>
entityEClass, ENTITY__ATTRIBUTES);<z>
(entityEClass, ENTITY__IDENTIFIERS);<z>
createEReference(entityEClass, ENTITY__PRIMARY_IDENTIFIER);<z>
relationEClass = createEClass(RELATION);<z>
, RELATION__SOURCE);<z>
relationEClass, RELATION__SOURCE_ROLE);<z>
;<z>
relationEClass, RELATION__SOURCE_IS_COMPOSITE);<z>
RELATION__TARGET);<z>
relationEClass, RELATION__TARGET_ROLE);<z>
(relationEClass, RELATION__TARGET_CARDINALITY);<z>
, RELATION__TARGET_IS_COMPOSITE);<z>
RELATION__ELEMENTS);<z>
;<z>
(RELATION_ELEMENT);<z>
, RELATION_ELEMENT__SOURCE_ATTRIBUTE);<z>
, RELATION_ELEMENT__TARGET_ATTRIBUTE);<z>
createEClass(ATTRIBUTE);<z>
(attributeEClass, ATTRIBUTE__OWNER);<z>
;<z>
);<z>
, ATTRIBUTE__USED_IN_IDENTIFIER);<z>
;<z>
);<z>
(namedElementEClass, NAMED_ELEMENT__NAME);<z>
;<z>
logicalElementEClass, LOGICAL_ELEMENT__ID);<z>
createEAttribute(logicalElementEClass, LOGICAL_ELEMENT__COMMENTS);<z>
(IDENTIFIER);<z>
createEReference(identifierEClass, IDENTIFIER__ATTRIBUTES);<z>
(CARDINALITY);<z>
, Token lastToken) {<z>
super(new Property[] {<z>
"pcdata", pcdata)<z>
}, firstToken, lastToken);<z>
) throws RecognitionException {<z>
);<z>
FOLLOW_rule__ParameterCS__Group__1__Impl_in_rule__ParameterCS__Group__125684);<z>
);<z>
;<z>
failed) return ;<z>
.FOLLOW_rule__ParameterCS__Group__2_in_rule__ParameterCS__Group__125687);<z>
;<z>
state._fsp--;<z>
.failed) return ;<z>
RecognitionException re) {<z>
(re);<z>
input,re);<z>
);<z>
String ownerId, final String taskId)<z>
task = null;<z>
.findTask(taskId);<z>
)<z>
, EventType.VM_TASK,<z>
;<z>
systemError(SeverityType.CRITICAL, ComponentType.VIRTUAL_MACHINE,<z>
);<z>
APIError.REDIS_CONNECTION_FAILED);<z>
);<z>
if (task == null)<z>
;<z>
.NON_EXISTENT_TASK);<z>
flushErrors();<z>
task.getOwnerId()))<z>
(String.format(<z>
taskId, ownerId,<z>
getOwnerId()));<z>
addNotFoundErrors(APIError.NON_EXISTENT_TASK);<z>
flushErrors();<z>
return task;<z>
Event event) {<z>
new HashSet<IService>();<z>
.getServices();<z>
getServices()) {<z>
{<z>
);<z>
));<z>
) == Dialog.OK) {<z>
] selectedServices = dialog.getSelectedServices();<z>
{<z>
);<z>
.iterator().next());<z>
;<z>
, provider);<z>
);<z>
)<z>
);<z>
);<z>
(Property.class, content);<z>
Exception e) {<z>
();<z>
property;<z>
public void ensureBlocksRead() throws IOException {<z>
return;<z>
in = new InputBuffer(file, start);<z>
();<z>
new BlockDescriptor[blockCount];<z>
())<z>
Comparable[blockCount];<z>
; i < blockCount; i++) {<z>
);<z>
if (metaData.hasIndexValues())<z>
>readValue(metaData.getType());<z>
);<z>
= Checksum.get(metaData);<z>
];<z>
firstRows = new long[blocks.length];<z>
long startPosition = dataStart;<z>
0;<z>
; i < blockCount; i++) {<z>
;<z>
blockStarts[i] = startPosition;<z>
firstRows[i] = row;<z>
compressedSize + checksum.size();<z>
rowCount;<z>
blocks;<z>
void computeTracksFromGraph() {<z>
oldTrackSpots = trackSpots;<z>
>(graph).connectedSets();<z>
(trackSpots.size());<z>
Set<Spot> spotTrack : trackSpots) {<z>
new HashSet<DefaultWeightedEdge>();<z>
spotTrack) {<z>
(spot));<z>
);<z>
isEmpty()) {<z>
oldTrackSpots = trackSpots;<z>
trackSpots.size(); i++) {<z>
;<z>
();<z>
.size();<z>
visibleTrackIndices;<z>
= new HashSet<Integer>(noldtracks);<z>
; trackIndex++) {<z>
shouldBeVisible = false;<z>
trackSpots.get(trackIndex)) {<z>
for (int oldTrackIndex : oldTrackVisibility) {<z>
.contains(spot)) {<z>
;<z>
if (shouldBeVisible) {<z>
shouldBeVisible) {<z>
);<z>
data) throws DOMException {<z>
length = this.getLength();<z>
1) {<z>
newDOMException(DOMException.INDEX_SIZE_ERR);<z>
();<z>
[] args) throws Exception {<z>
());<z>
);<z>
isSuccessful());<z>
args[0]);<z>
() {<z>
= new double[n][n];<z>
i++) {<z>
{<z>
[j] = 0.0;<z>
i] = d[i];<z>
> 0) {<z>
[i];<z>
e[i] < 0) {<z>
];<z>
;<z>
.StringArrayMapEntry getEntry(int index) {<z>
null) {<z>
index);<z>
else {<z>
(index);<z>
public String getHelp()<z>
)<z>
).toString();<z>
() {<z>
();<z>
;<z>
"");<z>
) throws java.io.IOException<z>
) {<z>
, height);<z>
boolean warn) {<z>
(qualName);<z>
Doc))<z>
value = null;<z>
==null) {<z>
);<z>
)value;<z>
) {<z>
, params.length);<z>
.length; i++) {<z>
i] = get(i);<z>
r;<z>
) {<z>
{<z>
;<z>
conn.setAutoCommit(true);<z>
catch (SQLException e) {<z>
"Failed to commit pending transactions");<z>
, final List outputs,<z>
MappingFactory factory) {<z>
new HashMap();<z>
Iterator iter = inputs.iterator();<z>
)) {<z>
EStringToStringMapEntryImpl)iter.next();<z>
entry.getTypedKey();<z>
put(key,entry);<z>
( mapEntryByKey.isEmpty() ) {<z>
iterator();<z>
hasNext()) {<z>
outputIter.next();<z>
final String key = entry.getTypedKey();<z>
;<z>
null ) {<z>
.remove(inputEntry);<z>
outputIter.remove();<z>
;<z>
> getConsideredAtoms(Predicate p) {<z>
res = getAtoms(p);<z>
= new ArrayList<Atom>();<z>
res.size();i++) {<z>
res.get(i));<z>
);<z>
return resultAtoms;<z>
final void entryRuleRangeType() throws RecognitionException {<z>
grammarAccess.getRangeTypeRule());<z>
.FOLLOW_ruleRangeType_in_entryRuleRangeType10491);<z>
();<z>
_fsp--;<z>
after(grammarAccess.getRangeTypeRule());<z>
FollowSets000.FOLLOW_EOF_in_entryRuleRangeType10498);<z>
re) {<z>
reportError(re);<z>
);<z>
(char prohibits[]) {<z>
null) {<z>
: prohibits) {<z>
c);<z>
begunAt )<z>
();<z>
lastAccessed = System.nanoTime();<z>
= lastAccessed - begunAt;<z>
+= elapsed;<z>
0 )<z>
;<z>
&& hits.get() > 0 )<z>
;<z>
;<z>
) {<z>
init();<z>
(quantity);<z>
final String[] args) throws Exception {<z>
.getResourceAsStream( "triangle_bok.drl" ) );<z>
= new PackageBuilder();<z>
source );<z>
builder.hasErrors() ) {<z>
() );<z>
throw new RuntimeException( "Unable to compile \"triangle_bok.drl\".");<z>
builder.getPackage();<z>
);<z>
( pkg );<z>
.newStatefulSession();<z>
DebugAgendaEventListener() );<z>
DebugWorkingMemoryEventListener() );<z>
session );<z>
.setFileName( "log/triangle_bok_fromdrl" );<z>
String inputFile = new String("data/triangle/triangle.data.txt");<z>
<?> obj_class = Triangle.class;<z>
);<z>
: facts) {<z>
r);<z>
session.fireAllRules();<z>
.writeToDisk();<z>
);<z>
int foo) {<z>
+= foo;<z>
if (notifyme > 0) {<z>
;<z>
Exception {<z>
ts = Timestamp.class.isInstance( value )<z>
? ( Timestamp ) value<z>
( value.getTime() );<z>
.toString(), dialect );<z>
public BigDecimal getSubtotal() {<z>
.subtract(iva).setScale(2,<z>
.HALF_UP);<z>
return subtotal;<z>
private boolean processCreator()<z>
parseStringIgnoreCase("NEW "))<z>
();<z>
processMethod())<z>
())<z>
(), p.getInput());<z>
while (p.parseChar('.'))<z>
())<z>
if (processIdentifier())<z>
getInput());<z>
) - 1 > size)<z>
();<z>
);<z>
);<z>
stack.pop();<z>
.CREATOR);<z>
);<z>
.push(newNode);<z>
true;<z>
;<z>
void linearExactMultiAllelic(final GenotypesContext GLs,<z>
,<z>
[] log10AlleleFrequencyPriors,<z>
AlleleFrequencyCalculationResult result,<z>
{<z>
, numAlternateAlleles, log10AlleleFrequencyPriors, result);<z>
, Configuration config) {<z>
);<z>
.getDefaultChannel().getName());<z>
Channel a = cm.getChannel(activeChannel);<z>
(a != null) {<z>
setActiveChannel(name, activeChannel);<z>
else {<z>
.getDefaultChannel().getName());<z>
"users." + name + ".joined-channels", null);<z>
if (joinedChannels.isEmpty()) {<z>
);<z>
{<z>
joinedChannels) {<z>
= cm.getChannel(s);<z>
if (c != null) {<z>
(name)) {<z>
.addPlayer(name);<z>
) {<z>
));<z>
.joinAutoChannels(name);<z>
, Double> getPropertyDoubleValueById(Long id)<z>
id == null)<z>
);<z>
(id);<z>
(entityPair == null)<z>
+ id);<z>
return entityPair;<z>
() throws IOException {<z>
{<z>
write(int b) throws IOException {<z>
;<z>
)<z>
IOException {<z>
write(b, off, len);<z>
{<z>
write(b);<z>
validate)<z>
{<z>
SAXParserFactory factory = SAXParserFactory.newInstance();<z>
(validate);<z>
;<z>
ParserConfigurationException e) {<z>
e2 = new ParserConfigurationException("The underlying "<z>
+ "parser does not support the requested features");<z>
);<z>
;<z>
SAXException e) {<z>
e;<z>
) {<z>
{<z>
);<z>
new ImmediateDataRequestMonitor<IContainerDMContext>(rm) {<z>
protected void handleSuccess() {<z>
instanceof IMIContainerDMContext;<z>
));<z>
());<z>
;<z>
;<z>
} else {<z>
));<z>
;<z>
ModelNode valueTypeNode) {<z>
modelType = getType(typeNode);<z>
modelType == null) {<z>
new ComplexTypeConverter(typeNode);<z>
modelType) {<z>
:<z>
BIG_DECIMAL_EXPR: BIG_DECIMAL_NO_EXPR;<z>
BIG_INTEGER:<z>
return expressions ? BIG_INTEGER_EXPR : BIG_INTEGER_NO_EXPR;<z>
:<z>
;<z>
BYTES:<z>
BYTES_NO_EXPR;<z>
:<z>
? DOUBLE_EXPR : DOUBLE_NO_EXPR;<z>
STRING:<z>
return expressions ? STRING_EXPR : STRING_NO_EXPR;<z>
case PROPERTY:<z>
? new PropertyTypeConverter(valueTypeNode) : PROPERTY_NO_EXPR;<z>
case INT:<z>
INT_NO_EXPR;<z>
LONG:<z>
? LONG_EXPR : LONG_NO_EXPR;<z>
TYPE:<z>
;<z>
UNDEFINED:<z>
return expressions ? UNDEFINED_EXPR : UNDEFINED_NO_EXPR;<z>
case OBJECT:<z>
ObjectTypeConverter(valueTypeNode);<z>
case LIST:<z>
;<z>
);<z>
Exchange exchange) throws Exception {<z>
getHl7v2TransactionConfiguration().getParser();<z>
ORIGINAL_MESSAGE_ADAPTER_HEADER_NAME);<z>
request.getHapiMessage();<z>
requestMessage);<z>
String requestMessageType = requestTerser.get("MSH-9-1");<z>
;<z>
msh32 = requestTerser.get("MSH-3-2");<z>
get("MSH-3-3");<z>
))) {<z>
?<z>
get("QID-1") :<z>
.get("QPD-2");<z>
msh31, msh32, msh33))) {<z>
queryTag);<z>
(), requestMessage);<z>
encode(ack));<z>
{<z>
);<z>
.isContinuable(requestMessageType)) {<z>
);<z>
rcp22 = requestTerser.get("RCP-2-2");<z>
)) {<z>
+ rcp22 + "' in RCP-2-2 is not supported");<z>
);<z>
;<z>
(requestTerser.get("RCP-2-1"));<z>
{<z>
nfe);<z>
(threshold < 1) {<z>
= getMllpEndpoint().getInteractiveContinuationDefaultThreshold();<z>
threshold < 1) {<z>
);<z>
exchange);<z>
requestTerser.get("DSC-1");<z>
) {<z>
= null;<z>
get("DSC-2"))) {<z>
"Cannot perform interactive continuation: DSC-1 is not empty and DSC-2 is not 'I'");<z>
;<z>
String queryTag = requestTerser.get("QPD-2");<z>
) {<z>
"Cannot perform interactive continuation: empty query tag in QPD-2");<z>
().process(exchange);<z>
;<z>
(continuationPointer, chainId);<z>
null) {<z>
);<z>
synchronized (responseMessage) {<z>
);<z>
, MessageUtils.hl7Now());<z>
("MSH-10", uniqueId());<z>
get("MSH-10"));<z>
{<z>
);<z>
);<z>
queryTag, chainId);<z>
encode(responseMessage));<z>
(ResolverHookFactory hookFactory) {<z>
this.monitor) {<z>
!= null)<z>
);<z>
hookFactory = hookFactory;<z>
Path destination) {<z>
);<z>
(Exception e) {<z>
;<z>
;<z>
public boolean visit(Reference reference)<z>
;<z>
) {<z>
wsdlOperations =<z>
);<z>
{<z>
return wsdlOperations;<z>
();<z>
null)<z>
(wsdlLoc);<z>
=<z>
, codeGenContext);<z>
(wsdlDef, element2SchemaTypeMap);<z>
} catch (Exception ex) {<z>
;<z>
createMemberDocProxies(MemberDoc memberDocs[]) {<z>
new ArrayList();<z>
++) {<z>
memberDocs[i];<z>
memberDoc));<z>
]) memberDocProxies<z>
);<z>
writeListType(Output out, Object listType) {<z>
);<z>
) {<z>
<?>) listType);<z>
else {<z>
false;<z>
true;<z>
public void encode(int value) throws IOException {<z>
0x7F) == 0) {<z>
write(value);<z>
value & ~0x3FFF) == 0) {<z>
));<z>
(0x7F & value);<z>
) == 0) {<z>
0x80 | (value >> 14));<z>
| (value >> 7));<z>
.write(0x7F & value);<z>
) {<z>
> 21));<z>
);<z>
> 7));<z>
(0x7F & value);<z>
else {<z>
0x80 | (value >> 28));<z>
> 21));<z>
14));<z>
));<z>
value);<z>
docBaseUri )<z>
.toString() );<z>
readCatalogXML( source );<z>
Void> deleteInternetGatewayAsync(<z>
deleteInternetGatewayRequest,<z>
DeleteInternetGatewayRequest, Void> asyncHandler)<z>
AmazonServiceException, AmazonClientException {<z>
Callable<Void>() {<z>
call() throws Exception {<z>
deleteInternetGateway(deleteInternetGatewayRequest);<z>
Exception ex) {<z>
onError(ex);<z>
ex;<z>
, null);<z>
null;<z>
});<z>
UINT16 fontId, final UINT8 fontNameLen,<z>
,<z>
Flag fontFlagsANSI,<z>
final Flag fontFlagsItalic, final Flag fontFlagsBold,<z>
fontFlagsWideCodes, final UINT8 languageCode,<z>
final ParsedINTElementList codeTable) {<z>
(header);<z>
fontId = fontId;<z>
this.fontNameLen = fontNameLen;<z>
fontName = fontName;<z>
;<z>
.fontFlagsSmallText = fontFlagsSmallText;<z>
fontFlagsShiftJIS;<z>
this.fontFlagsANSI = fontFlagsANSI;<z>
fontFlagsItalic = fontFlagsItalic;<z>
this.fontFlagsBold = fontFlagsBold;<z>
fontFlagsWideCodes = fontFlagsWideCodes;<z>
.languageCode = languageCode;<z>
codeTable = codeTable;<z>
) throws Exception<z>
checkStarted();<z>
;<z>
server.stop(true);<z>
();<z>
c) {<z>
branches.length - 1;<z>
{<z>
;<z>
;<z>
high) {<z>
>> 1;<z>
;<z>
0)<z>
;<z>
cmp > 0)<z>
- 1;<z>
;<z>
return -1;<z>
updateUI) {<z>
{<z>
.removeAll();<z>
if (isUsingFullGui()) {<z>
(AppD2.getRootComponent(this),<z>
;<z>
} else {<z>
.getJPanel(), BorderLayout.CENTER);<z>
updateUI) {<z>
centerPanel);<z>
MetadataSchema[] findAll(Context context) throws SQLException<z>
ArrayList();<z>
(context, "MetadataSchemaRegistry",<z>
"SELECT * FROM MetadataSchemaRegistry ORDER BY metadata_schema_id");<z>
))<z>
MetadataSchema(tri.next()));<z>
(tri != null)<z>
.close();<z>
.size()];<z>
[]) schemas.toArray(typeArray);<z>
() {<z>
null) {<z>
.removePropertyChangeListener(this);<z>
null;<z>
;<z>
{<z>
);<z>
return value.longValue() == X11.None<z>
));<z>
)<z>
double sinAngle, cosAngle;<z>
);<z>
angle);<z>
this.m00 = 1.0;<z>
= 0.0;<z>
this.m02 = 0.0;<z>
0.0;<z>
this.m10 = 0.0;<z>
.m11 = cosAngle;<z>
-sinAngle;<z>
this.m13 = 0.0;<z>
0.0;<z>
.m21 = sinAngle;<z>
.m22 = cosAngle;<z>
this.m23 = 0.0;<z>
.m30 = 0.0;<z>
.m31 = 0.0;<z>
this.m32 = 0.0;<z>
= 1.0;<z>
{<z>
())<z>
JDK1_4;<z>
ees.first();<z>
nodeCount() {<z>
count = predecessors.size();<z>
) {<z>
RuntimeException(<z>
+<z>
size() + " successors");<z>
;<z>
)<z>
sb = new StringBuffer();<z>
).append(TMP_UPLOAD_SUFFIX);<z>
);<z>
!= null)<z>
append(ext);<z>
.toString();<z>
{<z>
();i++)<z>
getParameterIndex()==idx){<z>
remove(i);<z>
);<z>
SmoothChanger( int duration, int states ){<z>
= duration;<z>
, this );<z>
;<z>
[] findUsages() {<z>
>();<z>
myMigrationMap == null) {<z>
;<z>
{<z>
entry = myMigrationMap.getEntryAt(i);<z>
[] usages;<z>
) {<z>
, myPsiMigration, entry.getOldName());<z>
, myPsiMigration, entry.getOldName());<z>
usages) {<z>
new MigrationUsageInfo(usage, entry));<z>
myPsiMigration.finish();<z>
= null;<z>
)]);<z>
throws RecognitionException {<z>
KEYWORD_20;<z>
;<z>
);<z>
= _type;<z>
= _channel;<z>
{<z>
();<z>
.setName(context.getNextValidBusName());<z>
showInputDialog("Please give an alias for the Bus or leave blank for no alias", "");<z>
null) {<z>
alias);<z>
;<z>
public T get() {<z>
getMap();<z>
.containsKey(this))<z>
(T) map.get(this);<z>
();<z>
(Dimension size, Point location)<z>
(" Game Viewer");<z>
size == null) ? defaultSize : size);<z>
().getScreenSize();<z>
- defaultSize.getWidth(), 0 );<z>
) ? defaultLocation : location);<z>
setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<z>
= new GameViewerActions();<z>
(gameViewerActions);<z>
gameViewerActions);<z>
;<z>
gameViewerActions);<z>
.addActionListener(gameViewerActions);<z>
gameViewerActions);<z>
;<z>
.addItemListener(gameViewerActions);<z>
.addItemListener(gameViewerActions);<z>
);<z>
addItemListener(gameViewerActions);<z>
;<z>
(0,3));<z>
Z0_Enemies); GameViewerOptionsPanel.add(LabelConsole);<z>
(Console);<z>
btnUpdate);<z>
(ShowEnemiesObservation);<z>
add(ContinuousUpdates);<z>
setState(GlobalOptions.GameVeiwerContinuousUpdatesOn);<z>
new EtchedBorder(), "Game Viewer Options"));<z>
1600, 960);<z>
);<z>
(sizeOfView);<z>
);<z>
, "Game Viewer View"));<z>
);<z>
add(BorderLayout.NORTH, GameViewerOptionsPanel);<z>
gameViewerViewPanel));<z>
);<z>
;<z>
static long reverseBytes(long lng) {<z>
lng >>> 56;<z>
(lng >>> 40) & 0xFF00L;<z>
& 0xFF0000L;<z>
(lng >>> 8) & 0xFF000000L;<z>
(lng & 0xFF000000L) << 8;<z>
(lng & 0xFF0000L) << 24;<z>
b1 = (lng & 0xFF00L) << 40;<z>
<< 56;<z>
| b6 | b7);<z>
Sheet createSheet()<z>
.createDefault();<z>
.Set set = getPropertiesSet();<z>
;<z>
set.put(getProperty(<z>
,<z>
,<z>
,<z>
.LABEL<z>
));<z>
(getProperty(<z>
class,<z>
boolean.class,<z>
.MARKER<z>
));<z>
.put(getProperty(<z>
.class,<z>
Color.class,<z>
COLOR<z>
));<z>
(getProperty(<z>
IndicatorProperties.class,<z>
Stroke.class,<z>
,<z>
STROKE_INDEX)<z>
;<z>
(NoSuchMethodException ex)<z>
, "[Hilbert Transform Trendline Node] : Method does not exist.", ex);<z>
return sheet;<z>
public boolean close( InputStream stream )<z>
( stream == null )<z>
return false ;<z>
) ;<z>
;<z>
IOException e)<z>
return false ;<z>
) {<z>
collectRedefineCalls = false;<z>
null)<z>
;<z>
String entitySetName,<z>
OEntityKey oEntityKey, String navProperty, OEntity oEntity) {<z>
;<z>
entitySetName, oEntityKey, null);<z>
navProperty = navProperty;<z>
(), oEntity);<z>
int sizeLimit, boolean tsvSafe) throws IOException {<z>
();<z>
;<z>
.tsvSafe = tsvSafe;<z>
() {<z>
);<z>
);<z>
catch (SQLException ex) {<z>
new DataStoreRuntimeException(ex);<z>
read(String filename) {<z>
= Config.get("GRAPH_WRITER_DELIMITER");<z>
= new Filereader(filename);<z>
.readLine();<z>
readLine());<z>
);<z>
(name);<z>
(N, graph);<z>
new Edges(nodes, E);<z>
null;<z>
()) != null) {<z>
= line.split(delimiter);<z>
]));<z>
;<z>
);<z>
.close();<z>
return graph;<z>
Tool createTool( )<z>
) {<z>
int button )<z>
).performDrop( getTemplate( ),<z>
( ),<z>
DND.DROP_DEFAULT,<z>
( ) ) );<z>
void performCreation( EditPart editPart )<z>
).performDrop( getTemplate( ),<z>
.DROP_DEFAULT,<z>
) ) );<z>
)<z>
);<z>
canMove = DNDService.getInstance( )<z>
.validDrop( getTemplate( ),<z>
getTargetEditPart( ),<z>
DROP_DEFAULT,<z>
( getLocation( ) ) );<z>
canMove )<z>
;<z>
);<z>
;<z>
);<z>
return canMove;<z>
doExecute() throws Exception {<z>
service = null;<z>
);<z>
t) {<z>
.println(t.getMessage());<z>
;<z>
service.suspendNode(id);<z>
;<z>
getHandleFieldBuilder() {<z>
if (handleBuilder_ == null) {<z>
new com.google.protobuf.SingleFieldBuilder<<z>
.marshalling.impl.ProtobufMessages.FactHandleOrBuilder>(<z>
(),<z>
;<z>
= null;<z>
return handleBuilder_;<z>
, IEObjectConsumer inst) {<z>
return null;<z>
index) {<z>
, next, actIndex, consumed);<z>
: return null;<z>
String toString()<z>
() ;<z>
b.append("[") ;<z>
acceptType) ;<z>
() ; iter.hasNext() ; )<z>
= iter.next() ;<z>
params.get(k) ;<z>
" ") ;<z>
.append(k) ;<z>
append("=") ;<z>
(v) ;<z>
append("]") ;<z>
toString() ;<z>
public boolean check()<z>
version = getJavaVersion();<z>
;<z>
(required) >= 0;<z>
)<z>
versionNotAvailable(version, required);<z>
result;<z>
Exception<z>
;<z>
(d);<z>
null &&<z>
w instanceof Integer) putSharedRef(w);<z>
null)<z>
{ LispReader.repeatedObjects.put(<z>
Integer(LispReader.sharedIndex++));<z>
(X_STORE);<z>
doubleToLongBits(value);<z>
X_DOUBLE);<z>
i++)<z>
*i)));<z>
toString() {<z>
();<z>
;<z>
+ ", ");<z>
);<z>
);<z>
;<z>
+ ", ");<z>
;<z>
("ToPort: " + toPort + ", ");<z>
);<z>
"IpPermissions: " + ipPermissions + ", ");<z>
("}");<z>
sb.toString();<z>
artifacts,<z>
ArtifactRepository> resolutionRepositories )<z>
artifacts, managedVersions, resolutionRepositories );<z>
void before()<z>
() );<z>
() == null )<z>
throw new IllegalArgumentException( "Configurator failed, provider is null." );<z>
configureProvider( provider.get() );<z>
);<z>
) {<z>
= (IGraphicalEditPart) host<z>
class);<z>
) {<z>
= new ArrayList(3);<z>
return types;<z>
EMPTY_LIST;<z>
() throws IOException {<z>
(_file == null)<z>
);<z>
null;<z>
doPrivileged(<z>
;<z>
fis;<z>
PrivilegedActionException pae) {<z>
.getException();<z>
position, View convertView, ViewGroup parent) {<z>
duration_micros);<z>
) (position<z>
end_selection - start_selection) / 100.0<z>
duration_micros / getCount());<z>
position_val;<z>
= String.valueOf(timeUs / 1000000.0);<z>
v;<z>
" to "<z>
start_selection + " offset " + offset + " position_val "<z>
);<z>
(convertView == null) {<z>
li = getLayoutInflater();<z>
null);<z>
} else {<z>
v = convertView;<z>
;<z>
+ time_seconds);<z>
.icon_image);<z>
.v(TAG, " Thumb at " + timeUs);<z>
outThumbnail = null;<z>
(timeUs,<z>
;<z>
) {<z>
null) {<z>
"x"<z>
;<z>
outThumbnail);<z>
} else {<z>
.setImageResource(R.drawable.icon);<z>
Log.v(TAG,<z>
.getWidth() + "x"<z>
iv.getHeight());<z>
;<z>
<String> creatableTypes) {<z>
list = new ArrayList<CmsResourceTypeBean>();<z>
(types == null) {<z>
;<z>
I_CmsPreviewProvider> typeProviderMapping = getPreviewProviderForTypes(types);<z>
);<z>
{<z>
next();<z>
createTypeBean(<z>
type),<z>
));<z>
(bean);<z>
} catch (Exception e) {<z>
if (type != null) {<z>
getWorkplaceLocale()).key(<z>
,<z>
()),<z>
);<z>
;<z>
() {<z>
null;<z>
);<z>
myComboBox.setVisible(false);<z>
getService() {<z>
null) {<z>
,<z>
class.getName());<z>
(),<z>
"portletClassLoader");<z>
new ClassLoaderProxy(object,<z>
getName(),<z>
portletClassLoader);<z>
(classLoaderProxy);<z>
;<z>
.registerReference(MeetupsRegistrationLocalServiceUtil.class,<z>
);<z>
remove(MeetupsRegistrationLocalService.class);<z>
;<z>
) {<z>
;<z>
id;<z>
Edge>();<z>
protected Field createField() {<z>
new gkListFieldIC() {<z>
setFieldLabel(String fieldLabel) {<z>
(fieldLabel);<z>
fieldLabel);<z>
Contact getContact(String uri)<z>
MessengerException<z>
= YahooMessengerLoginManager.getInstance().<z>
();<z>
YahooMessengerGetContactInfoReqResp();<z>
(sessionData.getRequestServer());<z>
));<z>
.setSessionID(sessionData.getSessionID());<z>
));<z>
.setUri(uri);<z>
.executeRequest();<z>
.getContact();<z>
{<z>
);<z>
final CodeGenerator ALIAS_THIS_CODE_GENERATOR = new CodeGenerator() {<z>
first) throws IOException {<z>
);<z>
createAvailableAppointment(String visitorUsername, String ownerUsername,<z>
endDate) throws CalendarAccountNotFoundException, NotAVisitorException, SchedulingException {<z>
);<z>
ownerUsername);<z>
visitorDao.toVisitor(visitorUser);<z>
.locateOwner(ownerUser);<z>
{<z>
);<z>
startDate);<z>
== block) {<z>
startDate);<z>
visitor, owner, block, "test appointment created by WiscCal administrator");<z>
result;<z>
getH() {<z>
m, n);<z>
] H = X.getArray();<z>
{<z>
{<z>
j) {<z>
j];<z>
{<z>
i][j] = 0.0;<z>
;<z>
getTokenImage(Token token) {<z>
getType() == GenericTokenType.LITERAL) {<z>
getValue();<z>
return token.getValue();<z>
throws IOException {<z>
String errorMsg = null;<z>
();<z>
expectedNamespaceID) {<z>
expectedNamespaceID<z>
" actual " + journalInfo.getNamespaceId();<z>
errorMsg);<z>
;<z>
)) {<z>
errorMsg = "Invalid clusterId in journal request - expected "<z>
+ " actual " + registration.getClusterID();<z>
;<z>
;<z>
boolean getHidden() throws FlickrException {<z>
;<z>
("method", METHOD_GET_HIDDEN);<z>
;<z>
, sharedSecret);<z>
response.isError()) {<z>
;<z>
personElement = response.getPayload();<z>
;<z>
calculatePacketSize() {<z>
();<z>
+= 1;<z>
return packLength;<z>
) {<z>
bounds.equals(rect))<z>
;<z>
super.setBounds(rect);<z>
) {<z>
.HubLoadData result = buildPartial();<z>
!result.isInitialized()) {<z>
;<z>
return result;<z>
featureID) {<z>
switch (featureID) {<z>
case NonregPackage.PERSON__FIRSTNAME:<z>
;<z>
case NonregPackage.PERSON__LASTNAME:<z>
equals(lastname);<z>
.PERSON__AGE:<z>
age != AGE_EDEFAULT;<z>
NonregPackage.PERSON__ECLIPSE_COMMITER:<z>
ECLIPSE_COMMITER_EDEFAULT;<z>
NonregPackage.PERSON__ASSISTS:<z>
null && !assists.isEmpty();<z>
.PERSON__GENDER:<z>
GENDER_EDEFAULT;<z>
NonregPackage.PERSON__IS_REGISTERED:<z>
return isRegistered != IS_REGISTERED_EDEFAULT;<z>
case NonregPackage.PERSON__ACCREDITATIONS:<z>
accreditations.isEmpty();<z>
case NonregPackage.PERSON__WORK_FOR:<z>
;<z>
return super.eIsSet(featureID);<z>
private void initDecoder(){<z>
{<z>
("ERROR: 16 bits only!!!");<z>
);<z>
(alac == null){<z>
;<z>
getFrameSize();<z>
;<z>
);<z>
;<z>
.getRiceInitialhistory();<z>
();<z>
.setinfo_7f = this.get_7f();<z>
;<z>
get_82();<z>
this.get_86();<z>
.setinfo_8a_rate = this.get_8a_rate();<z>
new SecurityPluginFactory<QpidAuthorizationPlugin>()<z>
(ConfigurationPlugin config)<z>
throws ConfigurationException {<z>
();<z>
return plugin;<z>
() {<z>
);<z>
> getPluginClass() {<z>
QpidAuthorizationPlugin.class;<z>
static OAEPParameterSpec constructOAEPParameters(<z>
,<z>
digestAlgorithm,<z>
mgfAlgorithm,<z>
oaepParams<z>
if (XMLCipher.RSA_OAEP.equals(encryptionAlgorithm)<z>
(encryptionAlgorithm)) {<z>
jceDigestAlgorithm = "SHA-1";<z>
(digestAlgorithm != null) {<z>
);<z>
PSpecified pSource = PSource.PSpecified.DEFAULT;<z>
oaepParams != null) {<z>
(oaepParams);<z>
mgfParameterSpec = new MGF1ParameterSpec("SHA-1");<z>
.equals(encryptionAlgorithm)) {<z>
)) {<z>
= new MGF1ParameterSpec("SHA-256");<z>
) {<z>
);<z>
{<z>
("SHA-512");<z>
pSource);<z>
return null;<z>
reference, int tabSize) {<z>
, tabSize);<z>
();<z>
tabSize == 0)<z>
referenceWidth;<z>
spaceWidth= 1;<z>
(tabSize * spaceWidth);<z>
tabSize * spaceWidth) > 0)<z>
level++;<z>
level;<z>
parentShell, String previousQuery) {<z>
;<z>
= previousQuery;<z>
setBinning(double bins)<z>
) bins = 1;<z>
= bins;<z>
this.calculateHistogram();<z>
)<z>
;<z>
setup(parser);<z>
Flag[] forbiddenFlags, final MessagingListener listener) {<z>
) {<z>
"searchRemoteMessages ("<z>
"acct=" + acctUuid<z>
+ ", folderName = " + folderName<z>
+ ", query = " + query<z>
")";<z>
msg);<z>
{<z>
) {<z>
, query, requiredFlags, forbiddenFlags, listener);<z>
);<z>
MenuItem item) {<z>
)) {<z>
.id.itemDisconnect:<z>
.desconectar();<z>
XMPPApplication.class));<z>
id.itemContacts:<z>
.class));<z>
return true;<z>
getActivityPluginByPackageId(String packageId){<z>
"WHERE processId LIKE ?";<z>
= {packageId+"%"};<z>
, null, null, 0, 1000);<z>
onCheckedChanged(CompoundButton buttonView, boolean isChecked) {<z>
.DISABLE_TOOLBOX, isChecked ? 0 : 1);<z>
();<z>
) throws WingException<z>
("title").addContent(T_title);<z>
+ "/", T_dspace_home);<z>
(contextPath + "/admin/epeople",T_eperson_trail);<z>
.addTrail().addContent(T_trail);<z>
public CmdChannelList()<z>
"ls", "list");<z>
addOptionalArg("page", "1");<z>
.setDesc("List the channels");<z>
);<z>
] configs) {<z>
;<z>
));<z>
getLauncherInfo();<z>
{<z>
icons = "";<z>
configs.length; i++) {<z>
;<z>
0].equals("win32")) {<z>
;<z>
)) {<z>
;<z>
.equals("linux")) {<z>
.LINUX_ICON));<z>
[0].equals("macosx")) {<z>
));<z>
{<z>
> 0)<z>
+= ",";<z>
+= images;<z>
if (icons.length() > 0)<z>
);<z>
put(IXMLConstants.PROPERTY_COLLECTING_FOLDER, fRoot);<z>
, fRoot);<z>
;<z>
() {<z>
byteValue();<z>
;<z>
().setComparator(comparator);<z>
MESSAGE)<z>
fColumn1, MESSAGE_ORDER);<z>
(orderType == PLUGIN)<z>
, PLUGIN_ORDER);<z>
DATE)<z>
;<z>
[] constructArray(String[] id_array) {<z>
IDOLegacyEntity[] returnArr = null;<z>
;<z>
length; i++) {<z>
());<z>
i]));<z>
ex) {<z>
getMessage());<z>
;<z>
void addReference(<z>
,<z>
int referencePosition){<z>
)<z>
[6];<z>
length)<z>
];<z>
arraycopy(srcAndRefPositions,<z>
.length);<z>
;<z>
srcAndRefPositions[referenceCount++] = sourcePosition;<z>
referenceCount++] = referencePosition;<z>
) {<z>
menu, v, menuInfo);<z>
();<z>
.menu.vpn_list_context_menu, menu);<z>
) menuInfo;<z>
);<z>
p = selectedVpnItem.profile;<z>
);<z>
) == VpnState.IDLE;<z>
isIdle);<z>
setEnabled(isIdle);<z>
EnvironmentsNotDefinedException, IOException, ClassNotFoundException {<z>
= UserManager.getUserManager();<z>
.getUserName());<z>
.getCurrentEnvironment();<z>
(currentEnvironment.getName());<z>
());<z>
());<z>
));<z>
(currentEnvironment.getName());<z>
) {<z>
) {<z>
== null ||<z>
)<z>
JOptionPane dialog = new JOptionPane();<z>
, "Environment name can not be blank");<z>
this.firstLogFolder == null ||<z>
.equals(""))<z>
JOptionPane();<z>
.showMessageDialog(null, "First log folder can not be blank");<z>
.getText(),<z>
),<z>
,<z>
.pathToOutputFile.getText());<z>
this.environmentManager.saveEnvironment(environment);<z>
environment.getName());<z>
IOException e1) {<z>
new JOptionPane();<z>
e1.getMessage());<z>
.printStackTrace();<z>
});<z>
TypeIdResolver idRes, String propName)<z>
, idRes);<z>
propName;<z>
getJavaTypeName(final JstType jstType){<z>
if (jstType == null){<z>
;<z>
());<z>
item) {<z>
.getItemId()) {<z>
0:<z>
, AddContact.class));<z>
return true;<z>
;<z>
String> arrList) throws Exception {<z>
);<z>
);<z>
.updateUI();<z>
.repaint();<z>
);<z>
);<z>
] args)<z>
{<z>
) {<z>
topLevel = ScriptableObject.getTopLevelScope(scope);<z>
;<z>
{<z>
;<z>
} else {<z>
("JSAdapter requires adaptee");<z>
return newObj;<z>
{<z>
;<z>
tmp instanceof Function) {<z>
construct(cx, scope, args);<z>
} else {<z>
"TypeError: not a constructor");<z>
monitor) throws IOException<z>
= false;<z>
= false;<z>
monitor);<z>
== null)<z>
isEmpty())<z>
size());<z>
String> fatalErrors = extractFatalErrors(processExecutionResults);<z>
if (fatalErrors.isEmpty())<z>
processExecutionResults);<z>
;<z>
monitor.worked(1);<z>
.isCanceled())<z>
;<z>
Activity activity, Button note,<z>
) {<z>
.getApplicationContext(), ResourceId);<z>
items = items;<z>
note;<z>
= activity;<z>
= ResourceId;<z>
;<z>
{<z>
Runnable>();<z>
augmentedShutdownTasks.addAll(shutdownTasks);<z>
JettyShutdownTask(adminService));<z>
ShutdownCommand(augmentedShutdownTasks);<z>
void showPasswordExpiredNotification(long accountId) {<z>
= Account.restoreAccountWithId(mContext, accountId);<z>
) return;<z>
Intent intent = AccountSecurity.actionDevicePasswordExpirationIntent(mContext,<z>
);<z>
accountName = account.getDisplayName();<z>
string.password_expired_ticker);<z>
.string.password_expired_content_title);<z>
intent,<z>
);<z>
() {<z>
);<z>
.STOPPING, this.sExit);<z>
;<z>
if (frontier != null) {<z>
.terminate();<z>
("Finished.");<z>
void visitSASTORE(SASTORE o){<z>
).pop();<z>
();<z>
;<z>
Env env, int start) {<z>
_subject.substring(start);<z>
);<z>
() {<z>
StringBuffer footer = new StringBuffer();<z>
0; i < NUM_BLANK_LINES; i++) {<z>
);<z>
+<z>
DocletConstants.NL);<z>
return footer.toString();<z>
)<z>
;<z>
();<z>
_running ) {<z>
( now ) ) {<z>
.warn( "Shutting down after {} generations",<z>
);<z>
{<z>
_manager = null;<z>
false;<z>
shutdown();<z>
_visitQ.acquire( 50 );<z>
( order != null ) ) {<z>
);<z>
execute( new VisitTask( order ) );<z>
debug( "Queued order for rldomain {}, depth: {}",<z>
ContentKeys.URL ).domain(),<z>
().size() );<z>
.currentTimeMillis();<z>
) {<z>
+ x );<z>
.info( "Manager thread exit" );<z>
= null;<z>
= false;<z>
Object> values) {<z>
;<z>
startPos;<z>
= values;<z>
, startPos.getColumnIndex()) + text;<z>
("\n");<z>
(TimeZone zone) {<z>
.asTimeInterval(zone).start();<z>
zone).end();<z>
(startPoint, endPoint);<z>
ex,<z>
HttpServletResponse response) throws IOException {<z>
setAttribute("javax.servlet.error.exception", ex);<z>
;<z>
e) {<z>
allNumbersValid(gd.getNumericFields()))<z>
return false;<z>
?> choices = gd.getChoices();<z>
get(0);<z>
getNumericFields();<z>
TextField) numbers.get(0);<z>
);<z>
) boxes.get(1);<z>
(choice.getSelectedIndex() == 1) {<z>
num.setEnabled(true);<z>
box.setEnabled(true);<z>
} else {<z>
num.setEnabled(false);<z>
;<z>
.getComponents());<z>
true;<z>
(float delta) {<z>
!players.isEmpty()) {<z>
{<z>
=0;t.ay=0;<z>
{<z>
t.ax = -50.0;<z>
(controlRight) {<z>
ax = 50.0;<z>
controlUp) {<z>
50.0;<z>
) {<z>
50.0;<z>
)<z>
if(t.bulletDelay == 3)<z>
;<z>
6)<z>
.bulletDelay = 0;<z>
.bulletDelay++;<z>
ax += touchVectorX;<z>
+= touchVectorY;<z>
(delta/100);<z>
() {<z>
new EC2HardwareBuilder(InstanceType.CC2_8XLARGE)<z>
* 1024 + 512)<z>
)))<z>
(<z>
), new VolumeImpl(840.0f,<z>
"/dev/sdc", false, false), new VolumeImpl(<z>
false, false)))<z>
virtualizationType(VirtualizationType.HVM);<z>
TypeDeclaration td,<z>
, boolean first) {<z>
append(td.getName());<z>
)) {<z>
("<");<z>
)) {<z>
null) {<z>
);<z>
length()-2);<z>
(">");<z>
TaskAttemptID reduceTaskId,<z>
size)<z>
IOException {<z>
getIntermediateOutputDir(<z>
(), reduceTaskId.toString())<z>
) + ".out",<z>
size, conf);<z>
getAdapter(Class<T> adapter) {<z>
{<z>
mailboxService;<z>
adapter.isAssignableFrom(CaseDistributionService.class)) {<z>
(T) distributionService;<z>
null;<z>
) {<z>
) == null) return null;<z>
("content");<z>
{<z>
type = AssignmentType.DATATYPE_RULE_CALL;<z>
grammarAccess.getArgumentAccess().getContentEStringParserRuleCall_5_1_0();<z>
return obj;<z>
;<z>
createMarkerUpdater(IConfigurationElement element) {<z>
(IMarkerUpdater) element.createExecutableExtension("class");<z>
) {<z>
x, TextEditorMessages.AbstractMarkerAnnotationModel_createMarkerUpdater);<z>
return null;<z>
(String securityContextKey) {<z>
Element element = responseCache.get(securityContextKey);<z>
element != null) {<z>
securityContextKey);<z>
getObjectValue();<z>
null;<z>
QuartzPollerServiceImpl(PollingContext context, Scheduler scheduler)<z>
{<z>
(context);<z>
this.sched = scheduler;<z>
toString();<z>
jobId, "group1").build();<z>
.getJobDataMap();<z>
.put(ServiceCallJob.POLLINGCONTEXT, context);<z>
"group1")<z>
;<z>
} catch (ParseException e) {<z>
e.getMessage());<z>
e) {<z>
);<z>
{<z>
savedInstanceState);<z>
setContentView(R.layout.main);<z>
(this);<z>
)).addView(preview);<z>
R.id.buttonClick);<z>
{<z>
(View v) {<z>
;<z>
);<z>
d(TAG, "onCreate'd");<z>
) {<z>
)<z>
;<z>
)<z>
return false;<z>
))<z>
;<z>
(OptionNode) obj;<z>
.equals(other.option))<z>
;<z>
))<z>
;<z>
true;<z>
) {<z>
if(!isActive()) {<z>
;<z>
.activate();<z>
instanceId, String method) {<z>
new DropdownMenu(name);<z>
menu.addMenuElement("","Select:");<z>
(Text.FONT_SIZE_7_HTML_1,"7 points");<z>
.addMenuElement(Text.FONT_SIZE_10_HTML_2,"10 points");<z>
;<z>
.addMenuElement(Text.FONT_SIZE_14_HTML_4,"14 points");<z>
;<z>
);<z>
;<z>
setSelectedElement(value);<z>
;<z>
obj)<z>
(this == obj)<z>
;<z>
null)<z>
return false;<z>
!(obj instanceof AdminObjectImpl))<z>
;<z>
(AdminObjectImpl) obj;<z>
null)<z>
.adminobjectClass != null)<z>
;<z>
(other.adminobjectClass))<z>
return false;<z>
(adminobjectInterface == null)<z>
null)<z>
;<z>
))<z>
return false;<z>
null)<z>
!= null)<z>
false;<z>
!configProperties.equals(other.configProperties))<z>
;<z>
== null)<z>
other.id != null)<z>
;<z>
equals(other.id))<z>
false;<z>
return true;<z>
project, Object source) throws BuildException {<z>
AntXMLContext) project.getReference("ant.parsing.context");<z>
context == null) {<z>
);<z>
= new AntXMLContext(project);<z>
addReference("ant.parsing.context", context);<z>
getTargets());<z>
context;<z>
;<z>
;<z>
) > 1) {<z>
);<z>
);<z>
context.getImplicitTarget();<z>
Map currentTargets = context.getCurrentTargets();<z>
Target newCurrent = new Target();<z>
project);<z>
.EMPTY_STRING);<z>
(newCurrent);<z>
);<z>
.setImplicitTarget(newCurrent);<z>
, new RootHandler(context, mainHandler));<z>
{<z>
.setCurrentTarget(currentTarget);<z>
setImplicitTarget(currentImplicit);<z>
.setCurrentTargets(currentTargets);<z>
{<z>
.setCurrentTargets(new HashMap());<z>
RootHandler(context, mainHandler));<z>
void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {<z>
int measuredWidth = MeasureSpec.getSize(widthMeasureSpec);<z>
;<z>
getMode(heightMeasureSpec);<z>
(heightSpecMode == MeasureSpec.EXACTLY) {<z>
(heightMeasureSpec);<z>
{<z>
RectF();<z>
ascent();<z>
+ mFooterLineHeight + mFooterPadding + mTopPadding;<z>
IndicatorStyle.None) {<z>
height += mFooterIndicatorHeight;<z>
= (int) height;<z>
setMeasuredDimension(measuredWidth, measuredHeight);<z>
{<z>
();<z>
repetition != null) {<z>
repetition);<z>
;<z>
{<z>
;<z>
newTitle;<z>
if (eNotificationRequired())<z>
));<z>
(String[][] keyValuePairs) {<z>
);<z>
keyValuePair : keyValuePairs) {<z>
]);<z>
(String text, int i) {<z>
charAt(i))) {<z>
return true;<z>
text.charAt(i))) {<z>
return false;<z>
))) {<z>
true;<z>
false;<z>
WorkingMemoryEntryPoint getWorkingMemoryEntryPoint(String name) {<z>
);<z>
) {<z>
);<z>
( entryPoint );<z>
null ) {<z>
,<z>
);<z>
wmEntryPoint != null ) {<z>
name,<z>
);<z>
return wmEntryPoint;<z>
("s4.logger_level") String logLevel,<z>
("s4.cluster.zk_address") String zookeeperAddress,<z>
"s4.cluster.zk_session_timeout") int sessionTimeout,<z>
@Named("s4.cluster.zk_connection_timeout") int connectionTimeout) {<z>
logLevel;<z>
ZkClient(zookeeperAddress, sessionTimeout, connectionTimeout);<z>
new ZNRecordSerializer());<z>
)<z>
out2in;<z>
= newOut2in;<z>
)<z>
MappingPackage.COMPLEX_TYPE_CONVERTER__OUT2IN, oldOut2in, out2in));<z>
getCorpusDocument()<z>
))<z>
);<z>
url = null;<z>
= new StringBuilder();<z>
BufferedReader br = null;<z>
new URL(getRestCorpusUrl());<z>
openConnection();<z>
);<z>
"utf-8")).toString();<z>
;<z>
InputStreamReader(urlConnection<z>
()), 512);<z>
= 0;<z>
new char[512];<z>
-1)<z>
, 0, readReturn);<z>
)<z>
.getPath(), e);<z>
IOException e)<z>
(),<z>
);<z>
!= null)<z>
();<z>
(IOException e)<z>
e);<z>
sBuffer.toString();<z>
updateTextureBoundary(Canvas3D cv) {<z>
boundaryModeT,<z>
.y,<z>
boundaryColor.z, boundaryColor.w);<z>
label ) throws IOException {<z>
);<z>
renderCustomVariant( label );<z>
getText(), "" );<z>
label.getImage(), null );<z>
, getAlignment( label ), DEFAULT_ALIGNMENT );<z>
rbc) {<z>
"Download Monitor Thread");<z>
.setDaemon(true);<z>
= rbc;<z>
this.downloadThread = downloadThread;<z>
void waitForProjectErrorMarkersCleared(SWTBot bot,<z>
{<z>
projectName)<z>
PROJECT_ERROR_MARKER_TIMEOUT);<z>
persisted) {<z>
APPEND, persisted, getPreferencesHint());<z>
;<z>
, semanticHint, index, persisted);<z>
)<z>
);<z>
;<z>
[] fieldNumbers,<z>
, int fetchDepth) {<z>
ExpressionBuilderHelper helper =<z>
, acmd,<z>
null);<z>
"select id");<z>
ColumnImpl>();<z>
: fieldNumbers) {<z>
();<z>
List<ColumnImpl> cols =<z>
acmd.getMetaDataForManagedMemberAtAbsolutePosition(fieldNum),<z>
getStoreManager(), columns);<z>
{<z>
) {<z>
);<z>
());<z>
));<z>
sb.toString();<z>
) {<z>
() + " id: " + pkValue);<z>
) {<z>
;<z>
return helper.sb.toString();<z>
String intensityDir,<z>
String baseCallDir,<z>
String id,<z>
int laneNumber,<z>
,<z>
int[]> cycleRangeByRead,<z>
secondCall,<z>
,<z>
barcodeSeqTagName,<z>
String barcodeQualTagName) {<z>
.id = id;<z>
laneNumber;<z>
tileNumber;<z>
.intensityDir = intensityDir;<z>
.baseCallDir = baseCallDir;<z>
;<z>
.barcodeQualTagName = barcodeQualTagName;<z>
.includeSecondCall = secondCall;<z>
this.pfFilter = pfFilter;<z>
= cycleRangeByRead;<z>
.cycleRangeByRead.size();<z>
, BCLFileReader[]>(numOfReads);<z>
this.includeSecondCall) {<z>
, SCLFileReader[]>(numOfReads);<z>
} else {<z>
this.sclFileReaderListByRead = null;<z>
.get("read1") == null) {<z>
;<z>
cycleRangeByRead.get("read2") != null) {<z>
= true;<z>
else {<z>
false;<z>
("readIndex") != null) {<z>
this.indexed = true;<z>
else {<z>
indexed = false;<z>
("readIndex2") != null) {<z>
this.dualIndexed = true;<z>
} else {<z>
= false;<z>
+ this.laneNumber;<z>
+ this.tileNumber;<z>
;<z>
.format(this.tileNumber);<z>
intensityDir<z>
.separator<z>
laneSubDir<z>
+ File.separator<z>
;<z>
= this.intensityDir<z>
+ File.separator<z>
+ this.laneSubDir<z>
separator<z>
this.tileName + ".locs";<z>
intensityDir<z>
File.separator<z>
this.tileNameInFour + "_pos.txt";<z>
this.checkFilterFileName();<z>
,<z>
) {<z>
style = style(parent, id);<z>
makeElement(style, TAG_LINESTYLE);<z>
{<z>
, TAG_COLOR,<z>
(1));<z>
linestyle, TAG_COLORMODE, "normal");<z>
(width > 0) {<z>
;<z>
linestyle;<z>
() {<z>
getCachedContacts().isEmpty()) {<z>
;<z>
;<z>
allVersions,<z>
UnfileObject unfileObjects, Boolean continueOnFailure, ExtensionsData extension) {<z>
getObjectServicePort();<z>
repositoryId, folderId, allVersions,<z>
, continueOnFailure, convert(extension)));<z>
CmisException e) {<z>
);<z>
} catch (Exception e) {<z>
.getMessage(), e);<z>
finally {<z>
portProvider.endCall(port);<z>
{<z>
object);<z>
if (logicalContainer == null) {<z>
JvmIdentifiableElement) {<z>
(JvmIdentifiableElement) object;<z>
{<z>
"expression is not contained in a logical container");<z>
.getContainerOfType(logicalContainer, JvmDeclaredType.class);<z>
declaredType != null) {<z>
getDeclaringType() != null) {<z>
= declaredType.getDeclaringType();<z>
{<z>
;<z>
declaredType;<z>
col) {<z>
|| col < 0) {<z>
+ sizeToString()<z>
);<z>
;<z>
{<z>
) {<z>
;<z>
max;<z>
static void displayTextInputStream(InputStream input) throws IOException {<z>
(new InputStreamReader(input));<z>
{<z>
.readLine();<z>
(line == null) break;<z>
;<z>
.out.println();<z>
void init() {<z>
"com.openbravo.pos.forms.DataLogicSales");<z>
jcompositionfilter = new CompositionFilter(m_dlSales);<z>
m_dlSales, dirty);<z>
boolean isSet(_Fields field) {<z>
null) {<z>
();<z>
) {<z>
INFO:<z>
);<z>
new IllegalStateException();<z>
,<z>
) {<z>
new BisectionSingleRootFinder(VOL_TOL);<z>
new Function1D<Double, Double>() {<z>
public Double evaluate(final Double volatility) {<z>
);<z>
/ forwardPrice - 1.0;<z>
(func, lowerSigma, upperSigma);<z>
String toString() {<z>
StringBuffer();<z>
append(" - ");<z>
.append(" - ");<z>
.append(" - ");<z>
.append(" - ");<z>
toString();<z>
) {<z>
h = 0;<z>
{<z>
int hh = b.length;<z>
(hh > h) h = hh;<z>
;<z>
)<z>
tocPanel_.setVisible(true);<z>
setVisible(true);<z>
.setVisible(false);<z>
int style, int hspan,<z>
[] items) {<z>
= new Combo(parent, style);<z>
getFont());<z>
gd = new GridData(fill);<z>
;<z>
);<z>
items);<z>
);<z>
c;<z>
public static Object sendSynchronousMessage(<z>
)<z>
{<z>
getInstance()._sendSynchronousMessage(<z>
timeout);<z>
public void consumeLine( String line )<z>
.isDebugEnabled() )<z>
).debug( "consume line " + line );<z>
)<z>
StringUtils.isEmpty( line ) )<z>
new InfoItem();<z>
line ) );<z>
.getBasedir().getPath() );<z>
);<z>
runner) {<z>
runner);<z>
);<z>
;<z>
isAntWithExtractorActivated(runType, runnerParameters)) {<z>
selectedServerUrl = runnerParameters.get(URL);<z>
boolean validServerUrl = StringUtils.isNotBlank(selectedServerUrl);<z>
!validServerUrl) {<z>
= runnerParameters.get(PROP_SKIP_LOG_MESSAGE);<z>
{<z>
).warning(skipLogMessage);<z>
.getAgentConfiguration().getAgentPluginsDirectory();<z>
.separator + "lib");<z>
;<z>
{<z>
throw new RuntimeException("Could not get the canonical path of the Build Info dependency directory",<z>
);<z>
new StringBuilder();<z>
{<z>
(runnerParameters.get("runnerArgs"));<z>
(" -listener org.jfrog.build.extractor.listener.ArtifactoryBuildListener");<z>
, builder.toString());<z>
);<z>
ArtifactoryClientConfiguration clientConf = ArtifactoryClientConfigurationBuilder.create(runner);<z>
"properties");<z>
tempPropFile.getCanonicalPath());<z>
;<z>
.PROP_PROPS_FILE, tempPropFile.getCanonicalPath());<z>
(IOException ioe) {<z>
);<z>
Grammar g, ATN atn) {<z>
serialized = getSerialized(g, atn);<z>
= Utils.toCharArray(serialized);<z>
(data);<z>
int getModifiers() {<z>
) {<z>
= (ReferenceBinding) this.binding;<z>
= referenceBinding.getAccessFlags() & VALID_MODIFIERS;<z>
if (referenceBinding.isAnonymousType()) {<z>
;<z>
return accessFlags;<z>
{<z>
ReferenceBinding) this.binding;<z>
accessFlags = referenceBinding.getAccessFlags() & VALID_MODIFIERS;<z>
);<z>
{<z>
this.binding;<z>
accessFlags = referenceBinding.getAccessFlags() & VALID_MODIFIERS;<z>
);<z>
if (isEnum()) {<z>
ReferenceBinding referenceBinding = (ReferenceBinding) this.binding;<z>
) & VALID_MODIFIERS;<z>
AccEnum;<z>
else {<z>
;<z>
) throws org.apache.thrift.TException {<z>
TField field;<z>
);<z>
true)<z>
= iprot.readFieldBegin();<z>
.protocol.TType.STOP) {<z>
id) {<z>
1:<z>
{<z>
.TList _list8 = iprot.readListBegin();<z>
ArrayList<String>(_list8.size);<z>
_i9)<z>
String _elem10;<z>
iprot.readString();<z>
);<z>
readListEnd();<z>
} else {<z>
;<z>
iprot, field.type);<z>
();<z>
;<z>
validate();<z>
void highlight(StringValue sb,<z>
out,<z>
String string)<z>
(sb != null) {<z>
string);<z>
;<z>
Set<String> components) {<z>
));<z>
{<z>
string<z>
.contains(GENERATED_MIDDLE))) {<z>
string);<z>
;<z>
) {<z>
super();<z>
deviceTree;<z>
= "devices";<z>
public boolean evaluate(SimulationState state) {<z>
null) {<z>
();<z>
type) {<z>
case VALUE:<z>
;<z>
NEGATION:<z>
!lhsBooleanExpression.evaluate(state);<z>
:<z>
evaluate(state));<z>
VARIABLE_RELATION:<z>
));<z>
"Unknown expression");<z>
public void endReportingSequence() {<z>
);<z>
fInsideReportingSequence) {<z>
);<z>
public void scrollTo(float par1)<z>
- 8) + 1;<z>
;<z>
if (j < 0)<z>
j = 0;<z>
; k++)<z>
; l++)<z>
+ j) * 8;<z>
&& i1 < itemList.size())<z>
;<z>
null);<z>
public void alertNeighbors(){<z>
"1");<z>
){<z>
= true;<z>
isEmpty()){<z>
);<z>
{<z>
);<z>
int i, ItemStack itemstack) {<z>
= itemstack;<z>
stackSize > getInventoryStackLimit())<z>
;<z>
;<z>
MakeAST( String in ) {<z>
)) ;<z>
AST_Imports) parser.parse ("AST_Imports") ;<z>
) {<z>
.fatalError( "string-to-ast parse error: " + in );<z>
;<z>
onDirectTypeAdded(Cls type) {<z>
!isSuppressedType(type)) {<z>
);<z>
;<z>
cloneWrapper(Class<?> klass) {<z>
(HashObject) JvmBridge.INSTANCE.getWrapperFor(<z>
.clone();<z>
;<z>
getIsa();<z>
);<z>
{<z>
mergeMixins(k, c);<z>
, c);<z>
k = k.getSuperclass();<z>
= c.getIsa();<z>
);<z>
JSONObject obj) throws JSONException {<z>
);<z>
);<z>
));<z>
.getInt("type"));<z>
short) obj.getInt("spriteID"));<z>
obj.getInt("spriteFrame"));<z>
obj.getInt("median"));<z>
("interactable") : false);<z>
obj.getString("interactText") : "Interact");<z>
template;<z>
focusLost (<z>
e<z>
= false;<z>
;<z>
private void createContextMenus() {<z>
(getTreeViewer());<z>
(getTreeViewer().getControl());<z>
.getControl().setMenu(menu);<z>
("#Pop up", menuManager,<z>
().getSelectionProvider());<z>
()<z>
cp = new StringBuilder(1024);<z>
size();<z>
1) {<z>
;<z>
i++) {<z>
append(File.pathSeparatorChar);<z>
))).getPath() );<z>
toString();<z>
,<z>
service) {<z>
;<z>
mConnection = connection;<z>
service;<z>
= new ConnectionListenerAdapter();<z>
mConnection.addConnectionListener(mConnectionListener);<z>
0) {<z>
getChatGroupManager();<z>
();<z>
mInvitationListener);<z>
) throws Exception {<z>
Expression) node.getChildValue("StringValue");<z>
String) node.getAttributeValue("direction");<z>
)) {<z>
function("strToUpperCase", str);<z>
return filterFactory.function("strToLowerCase", str);<z>
,<z>
IOException {<z>
;<z>
getFileSystem(conf);<z>
getUri());<z>
"Creating destination directory " + destDir);<z>
fs.mkdirs(destDir);<z>
(<z>
(conf, destDir, "data-",<z>
, getCodec(conf, options)));<z>
, NotificationListener listener,<z>
) throws InstanceNotFoundException,<z>
, String nodeName, StringComparison comparisonType)<z>
;<z>
();<z>
();<z>
0; i < childrenLen; i++)<z>
children.item(i);<z>
getNodeName();<z>
isNullOrEmpty(childName))<z>
nodeName, comparisonType))<z>
result.add(child);<z>
return result;<z>
){<z>
Requestor requestor = null;<z>
commsMgr.getIdManager().getThisNetworkNode();<z>
IIdentity localID;<z>
fromJid(cssNodeId.getBareJid());<z>
localID);<z>
().getJid());<z>
(InvalidFormatException e) {<z>
e.printStackTrace();<z>
return requestor;<z>
html, String myOfficeName, String inString) {<z>
;<z>
.text(" " + inString);<z>
"span");<z>
(" ");<z>
"span", "class", "heading");<z>
.text(myOfficeName);<z>
"span");<z>
addTo(final TextBlock tb) {<z>
if (condition.meetsCondition(tb)) {<z>
(tb);<z>
{<z>
getName() +<z>
;<z>
return postWALRestoreCalled;<z>
widgetFactory, Composite view) {<z>
;<z>
class);<z>
(businessArchitectureStep) {<z>
Composite addToPart(Composite parent, Object key) {<z>
BusinessArchitecture.Properties.class) {<z>
widgetFactory, parent);<z>
return parent;<z>
view);<z>
> expand(File dir,<z>
String> inputSet,<z>
) {<z>
<String>();<z>
inputSet.isEmpty()) {<z>
return includedFiles;<z>
name : inputSet) {<z>
dir == null) ? new File(name)<z>
(dir, name);<z>
String path = cleanPath(f);<z>
length() > 0<z>
.contains(path)) {<z>
) {<z>
(path);<z>
.add(path);<z>
) {<z>
list();<z>
String>();<z>
(String x : dirList) {<z>
.add(x);<z>
(f, dirInputSet, processed);<z>
includedFiles.addAll(subList);<z>
add(path);<z>
return includedFiles;<z>
void rule__XShortClosure__Group_0__0__Impl() throws RecognitionException {<z>
();<z>
.backtracking==0 ) {<z>
().getGroup_0_0());<z>
;<z>
rule__XShortClosure__Group_0_0__0();<z>
._fsp--;<z>
.failed) return ;<z>
==0 ) {<z>
).getGroup_0_0());<z>
) {<z>
reportError(re);<z>
(input,re);<z>
stackSize);<z>
( Dimension dSize )<z>
( "DesignerRepresentation.msg.InvalidChart" );<z>
logger.log( ILogger.ERROR,<z>
.getString( "DesignerRepresentation.log.UnableToFind" ) );<z>
;<z>
"Dialog", 10, SWT.ITALIC );<z>
);<z>
gc.getFontMetrics( );<z>
.getSystemColor( SWT.COLOR_RED ) );<z>
COLOR_WHITE ) );<z>
height - 1 );<z>
.height - 1 );<z>
.width - 10 );<z>
int y = 5;<z>
: texts )<z>
5, y );<z>
getHeight( );<z>
) {<z>
;<z>
addItemsForNextPage();<z>
add(getMore());<z>
list;<z>
() {<z>
< 0)<z>
);<z>
return targetSize;<z>
) {<z>
= 0;<z>
end = 0;<z>
new PaxLoggingEvent[maxElements];<z>
Expression fileNameExpression() {<z>
) {<z>
) {<z>
, String.class);<z>
() {<z>
return "file:name";<z>
int updateWithOnConflict(String table, ContentValues values,<z>
, int conflictAlgorithm) {<z>
) {<z>
"Empty values");<z>
sql = new StringBuilder(120);<z>
.append("UPDATE ");<z>
conflictAlgorithm]);<z>
table);<z>
" SET ");<z>
();<z>
entriesIter = entrySet.iterator();<z>
hasNext()) {<z>
> entry = entriesIter.next();<z>
.append(entry.getKey());<z>
);<z>
hasNext()) {<z>
);<z>
TextUtils.isEmpty(whereClause)) {<z>
.append(" WHERE ");<z>
whereClause);<z>
;<z>
!isOpen()) {<z>
throw new IllegalStateException("database not open");<z>
= null;<z>
(sql.toString());<z>
size = entrySet.size();<z>
;<z>
bindArg = 1;<z>
; i < size; i++) {<z>
> entry = entriesIter.next();<z>
entry.getValue());<z>
bindArg++;<z>
(whereArgs != null) {<z>
length;<z>
) {<z>
bindString(bindArg, whereArgs[i]);<z>
;<z>
();<z>
= lastChangeCount();<z>
(TAG, Log.VERBOSE)) {<z>
+ values + " and " + sql);<z>
;<z>
SQLiteDatabaseCorruptException e) {<z>
();<z>
e;<z>
catch (SQLException e) {<z>
, "Error updating " + values + " using " + sql);<z>
throw e;<z>
} finally {<z>
{<z>
close();<z>
);<z>
) {<z>
VersionCorrection.parse(versionAsOf, correctedTo);<z>
get(getUrlPositionId(), vc);<z>
responseOkFudge(result);<z>
) {<z>
context = c;<z>
;<z>
);<z>
index,<z>
seqName, long queryStart, int nofRecords)<z>
CramException {<z>
stream = new SeekableFileStream(cramFile);<z>
ArrayList<CramRecord>(nofRecords);<z>
(seqName, queryStart);<z>
iterator = new CramPreemptiveRandomAccessIterator(stream,<z>
pointer);<z>
int counter = 0;<z>
(iterator.hasNext()) {<z>
);<z>
(record.getAlignmentStart() < queryStart)<z>
add(record);<z>
counter >= nofRecords)<z>
records;<z>
) {<z>
trim().length() == 0)<z>
new IllegalArgumentException("null or empty name not allowed");<z>
.name = name;<z>
getScrollPane() {<z>
ivjJScrollPane1 == null) {<z>
new JScrollPane();<z>
setName("ScrollPane");<z>
ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);<z>
ivjJScrollPane1.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);<z>
setViewportView(getTextArea());<z>
catch (Throwable ivjExc) {<z>
);<z>
return ivjJScrollPane1;<z>
public void clear() {<z>
!runner.continueTransfer())) {<z>
{<z>
().isDone()) {<z>
(<z>
, true,<z>
;<z>
.runner = runner;<z>
setFinalizeTransfer(false, result);<z>
catch (OpenR66RunnerErrorException e) {<z>
catch (OpenR66ProtocolSystemException e) {<z>
{<z>
clear();<z>
) {<z>
clear();<z>
(runner != null) {<z>
;<z>
state != null) {<z>
);<z>
) {<z>
false;<z>
!= null) {<z>
;<z>
= null;<z>
[] getFactoryPids() {<z>
() == 0) {<z>
];<z>
= new Vector<String>(7);<z>
e = _allFPidOCDs.keys();<z>
.hasMoreElements()) {<z>
;<z>
)];<z>
;<z>
return retvalue;<z>
{<z>
= new XQuery(<z>
);<z>
res = result(query);<z>
;<z>
(false, "0.0E0")<z>
remotePort) {<z>
.removeForward(AndroidDebugBridge.sSocketAddr, this,<z>
, remotePort);<z>
IOException e) {<z>
e("adb-remove-forward", e);<z>
return false;<z>
long getLong(String name) {<z>
(name);<z>
null)<z>
name);<z>
LONG_DEFAULT_DEFAULT;<z>
, Object[] bindings) {<z>
.trim(Object.class, bindings);<z>
|| bindings.length == 0) {<z>
;<z>
1) {<z>
null;<z>
bindings[0] instanceof IBinding) {<z>
[0];<z>
{<z>
getPreBinding();<z>
{<z>
return null;<z>
(candidate != null) {<z>
(candidate instanceof ICPPNamespace) &&<z>
instanceof ICPPUsingDeclaration) &&<z>
LookupData.typesOnly(name)) {<z>
;<z>
if (candidate instanceof ICPPClassTemplatePartialSpecialization)<z>
return null;<z>
instanceof ICPPTemplateInstance)<z>
;<z>
)<z>
;<z>
LookupData data = createLookupData(name);<z>
= bindings;<z>
return resolveAmbiguities(data);<z>
} catch (DOMException e) {<z>
;<z>
[] dsts) throws IOException {<z>
)<z>
throw new NullPointerException();<z>
();<z>
(lock) {<z>
0;<z>
();<z>
!isOpen())<z>
return 0;<z>
;<z>
, nd);<z>
());<z>
.normalize(n);<z>
{<z>
= 0;<z>
n == IOStatus.UNAVAILABLE));<z>
assert IOStatus.check(n);<z>
boolean switchToOtherMode(int mode) {<z>
(isFinishing()) return false;<z>
;<z>
;<z>
true;<z>
String _tab(int size) {<z>
tmp = new char[size];<z>
' ');<z>
tmp);<z>
> type, final Object defaultValue,<z>
sortable) {<z>
);<z>
(propertyId, type);<z>
, defaultValue);<z>
, readOnly);<z>
propertyId, sortable);<z>
@Override public boolean onTouchEvent(MotionEvent event) {<z>
.getY() };<z>
mapPoints(pt);<z>
(int)pt[0];<z>
= (int)pt[1];<z>
mLastWarpX != x || mLastWarpY != y) {<z>
;<z>
y;<z>
1]);<z>
();<z>
;<z>
protected List<MultiLineRule> createRules() {<z>
getToken(defaultTokenProperty);<z>
;<z>
));<z>
defaultToken));<z>
defaultToken);<z>
return list;<z>
void with_stmt() throws ParseException {<z>
builder.openNode(JJTWITH_STMT);<z>
= true;<z>
(jjtn000);<z>
jjtreeOpenNodeScope(jjtn000);<z>
WITH);<z>
addSpecialToken("with ", STRATEGY_BEFORE_NEXT);<z>
;<z>
jj_ntk) {<z>
AS:<z>
;<z>
= jj_gen;<z>
.findTokenAndAdd(":");<z>
);<z>
suite();<z>
(Throwable jjte000) {<z>
if (jjtc000) {<z>
.clearNodeScope(jjtn000);<z>
= false;<z>
else {<z>
);<z>
instanceof RuntimeException) {<z>
true)<z>
throw (RuntimeException) jjte000;<z>
) {<z>
(true)<z>
jjte000;<z>
)<z>
throw (Error) jjte000;<z>
finally {<z>
jjtc000) {<z>
closeNodeScope(jjtn000, true);<z>
jjtn000);<z>
) {<z>
{<z>
(final UserSecurityContext userSecurityContext) {<z>
new VerticalDecisionTableWidget( guidedDecisionTable,<z>
),<z>
;<z>
1000,<z>
;<z>
.setWidget( dtable );<z>
} );<z>
removeDirectory(File directory) {<z>
directory.isDirectory()) return;<z>
);<z>
null) {<z>
i < files.length; i++) {<z>
(directory, files[i]);<z>
isDirectory()) {<z>
);<z>
();<z>
;<z>
) {<z>
task = new Task();<z>
>();<z>
, remoteTask.getTitle());<z>
CREATION_DATE, DateUtilities.now());<z>
;<z>
booleanValue())<z>
.DELETION_DATE, 0L);<z>
.getDeleted().booleanValue())<z>
, DateUtilities.now());<z>
)<z>
);<z>
), 0);<z>
.createDueDate(Task.URGENCY_SPECIFIC_DAY, dueDate);<z>
, createdDate);<z>
, remoteTask.getNotes());<z>
.createEmptyMetadata(AbstractModel.NO_ID);<z>
));<z>
setValue(GtasksMetadata.LIST_ID, listId);<z>
metadata,<z>
;<z>
container;<z>
getItems()<z>
))<z>
= "online";<z>
;<z>
, sortby);<z>
rating+0.75f);<z>
, cookingDuration, season, country, rating);<z>
.getItems();<z>
public void doImport() {<z>
.getImportButton().setEnabled(false);<z>
), new AsyncCallback<ImportShapefileMetadataResult>() {<z>
(Throwable throwable) {<z>
;<z>
;<z>
onSuccess(ImportShapefileMetadataResult result) {<z>
.alert("Shapefile information import complete! Click OK to close the window.");<z>
).setEnabled(true);<z>
;<z>
});<z>
fontStyle, int fontSize)<z>
s == null) s = "";<z>
);<z>
.getFont();<z>
;<z>
;<z>
)<z>
.getString( message );<z>
Serializable) params );<z>
() + ": " + formatted );<z>
( params[ 0 ] instanceof Throwable )<z>
(Throwable) params[ 0 ] );<z>
throws Exception {<z>
.lookup("java:openejb/Resource/QuartzResourceAdapter");<z>
Scheduler s = ra.getScheduler();<z>
"job1", "group1").build();<z>
;<z>
newTrigger()<z>
, "group1")<z>
(jd)<z>
SimpleScheduleBuilder.simpleSchedule()<z>
.withRepeatCount(0)<z>
))<z>
.build();<z>
jd, trigger);<z>
) {<z>
= width;<z>
= newWidth;<z>
if (eNotificationRequired())<z>
ProcessPackage.FAULT_TYPE__WIDTH, oldWidth, width));<z>
{<z>
StringBuffer str = new StringBuffer();<z>
append("[");<z>
.keys();<z>
()) {<z>
();<z>
);<z>
);<z>
length() > 1)<z>
(str.length() - 1);<z>
("]");<z>
);<z>
public MuleEvent aggregateEvents(EventGroup events) throws AggregationException<z>
] results;<z>
false);<z>
e)<z>
new AggregationException(events, null, e);<z>
);<z>
++)<z>
ThreadSafeAccess)<z>
;<z>
]);<z>
(Bundle savedInstanceState) {<z>
savedInstanceState);<z>
layout.settings);<z>
;<z>
);<z>
.txt_entity);<z>
.setOnEditorActionListener(new OnEditorActionListener() {<z>
actionId, KeyEvent event) {<z>
();<z>
;<z>
});<z>
("vg.entity", ""));<z>
) findViewById(R.id.txt_url);<z>
""));<z>
urlEditText.setOnEditorActionListener(new OnEditorActionListener() {<z>
event) {<z>
();<z>
false;<z>
;<z>
) findViewById(R.id.cis_list);<z>
setEnabled(false);<z>
{<z>
onClick(View v) {<z>
getBaseContext());<z>
);<z>
findViewById(R.id.txt_url);<z>
;<z>
entityText.getText().toString();<z>
().toString();<z>
String) spinner.getSelectedItem();<z>
("vg.entity","");<z>
preferences.getString("vg.url","");<z>
;<z>
{<z>
show();<z>
{<z>
(urlStored) ||<z>
(cisStored)){<z>
);<z>
entitySelected);<z>
;<z>
.putString("vg.cis", cisSelected);<z>
commit();<z>
, Toast.LENGTH_SHORT).show();<z>
(new Intent("com.ibm.hrl.ms.pz.CameraPreview"));<z>
setOnClickListener(l);<z>
.getString("vg.entity","");<z>
preferences.getString("vg.url","");<z>
.length() > 0){<z>
);<z>
public static void glVertexAttrib1hv(<z>
,<z>
v) {<z>
).glVertexAttrib1hv(<z>
);<z>
ServiceComposite> FilterAssembler through(<z>
<T> filter )<z>
;<z>
;<z>
{<z>
reader = inputFactory.reader(encoding);<z>
registerResource(reader);<z>
return reader;<z>
)<z>
leftBox = new LinkedVariableBox(variable);<z>
rightBox = new LinkedRValueBox(rvalue);<z>
rightBox);<z>
rightBox).setOtherBox(leftBox);<z>
canContainValue(variable) ||<z>
canContainValue(rvalue))<z>
);<z>
(leftBox);<z>
() {<z>
;<z>
();<z>
, baos);<z>
);<z>
Exception e) {<z>
return cspecXML;<z>
String> map) {<z>
value);<z>
!= null) {<z>
.getUri());<z>
);<z>
.SELENIUM_BROWSER, browserInstance.getBrowserName());<z>
.SELENIUM_VERSION, browserInstance.getVersion());<z>
new StringBuilder();<z>
()).<z>
)).<z>
.getBrowserName()).<z>
.getVersion());<z>
));<z>
(Configuration conf)<z>
;<z>
"root").getValue();<z>
templateRoot = env.replaceVars(templateRoot);<z>
templateRoot);<z>
?> props) {<z>
;<z>
(props == null) {<z>
Object>();<z>
} else {<z>
, Object>) props.clone();<z>
propName = "Filters";<z>
prop = "Null filter";<z>
;<z>
{<z>
if (o instanceof String) {<z>
"; " + prop;<z>
} else {<z>
prop;<z>
.put(propName, prop);<z>
fprops);<z>
{<z>
1;<z>
getGridDefinition();<z>
= null;<z>
);<z>
.getGridDefinition();<z>
sqlca,<z>
PrintWriter printWriter,<z>
{<z>
;<z>
{<z>
;<z>
.getSqlCode());<z>
(sqlca.getSqlErrd()));<z>
" SqlErrmc = " + sqlca.getSqlErrmc());<z>
.getSqlErrp());<z>
" SqlState = " + sqlca.getSqlState());<z>
.getSqlWarn()));<z>
) {<z>
{<z>
("Buffer size must be greater than zero");<z>
maxRegionSize < bufferSize) {<z>
IllegalArgumentException("Maximum region size must be greater than or equal to the buffer size");<z>
buffersPerRegion = maxRegionSize / bufferSize;<z>
.bufferSize = bufferSize;<z>
allocator = allocator;<z>
);<z>
threadLocalQueueSize;<z>
)<z>
== null)<z>
;<z>
;<z>
static void checkRemoteServicesFromVA(final VirtualAppliance virtualAppliance)<z>
;<z>
DataCenterDAO datacenterDAO = factory.getDataCenterDAO();<z>
();<z>
myDatacenter =<z>
());<z>
();<z>
();<z>
: remoteServices)<z>
().canBeChecked()<z>
() == RemoteServiceType.STORAGE_SYSTEM_MONITOR)<z>
remoteServiceClient =<z>
getUri());<z>
;<z>
newURL(URL input, ConfigParseOptions options) {<z>
getProtocol().equals("file")) {<z>
), options);<z>
else {<z>
input, options);<z>
private void fetchTokenFor_zero() {<z>
syntax.opEscOctal3()) {<z>
= p;<z>
);<z>
(num < 0) newValueException(ERR_TOO_BIG_NUMBER);<z>
p == last) {<z>
num = 0;<z>
RAW_BYTE;<z>
.base = 8;<z>
num);<z>
if (c != '0') {<z>
);<z>
{<z>
(FOLLOW_rule__XFeatureCall__FeatureCallArgumentsAssignment_5_in_synpred103_InternalGraphViewStyle21634);<z>
);<z>
state._fsp--;<z>
.failed) return ;<z>
[] tileListByList, int [] tileListByRange){<z>
( tileListByList == null && tileListByRange != null ){<z>
;<z>
== null ){<z>
;<z>
null ){<z>
.length ];<z>
;<z>
: tileListByList){<z>
= t;<z>
++;<z>
t: tileListByRange){<z>
[count] = t;<z>
++;<z>
Arrays.sort(mergedList);<z>
mergedList;<z>
;<z>
{<z>
.format("%s, vm.vm_name=%s, nic=%s, vmDevice=%s",<z>
),<z>
getvm_name()),<z>
,<z>
));<z>
findProductInfosWithNamesByCode(String productCode)<z>
throws ServiceException {<z>
;<z>
PRODUCT_CODE, productCode);<z>
put(ProductService.Param.STOCK_CTL_CATEGORY_ID,<z>
PRODUCT_STOCK_CTL);<z>
put(ProductService.Param.PRODUCT_STATUS_CATEGORY_ID,<z>
;<z>
.put(ProductService.Param.PRODUCT_STOCK_CATEGORY_ID,<z>
;<z>
Param.PRODUCT_PURVAY_CATEGORY_ID,<z>
);<z>
ProductService.Param.PRODUCT_STANDARD_CATEGORY_ID,<z>
.PRODUCT_STANDARD);<z>
.Param.SET_TYPE_CATEGORY_ID,<z>
);<z>
.Param.UNIT_CATEGORY_ID,<z>
.PRODUCT_UNIT);<z>
Param.WEIGHT_UNIT_SIZE_CATEGORY_ID,<z>
;<z>
put(ProductService.Param.LENGTH_UNIT_SIZE_CATEGORY_ID,<z>
.PRODUCT_UNIT_SIZE);<z>
return this.selectBySqlFile(ProductJoin.class,<z>
)<z>
();<z>
) {<z>
;<z>
NotNull final P panel)<z>
{<z>
fragments ) );<z>
public isInSafeMode_result(<z>
,<z>
hadoop.thriftfs.api.IOException err)<z>
);<z>
.success = success;<z>
);<z>
err;<z>
public void attributeAdded(ServletContextAttributeEvent event) {<z>
getName() + "', '" +<z>
) + "')");<z>
fillWidgetFromParameter() {<z>
();<z>
(IPasserelleQuery)getBoundComponent();<z>
());<z>
{<z>
.getSelected().isBold();<z>
bold);<z>
) {<z>
.getPlayer(source.getControllerId());<z>
if (player == null) {<z>
return false;<z>
.getInRange()) {<z>
filter = new FilterCreaturePermanent();<z>
(new ControllerIdPredicate(playerId));<z>
source.getSourceId(), game);<z>
(Permanent creature : creatures) {<z>
);<z>
true;<z>
void lock(boolean shouldLock) {<z>
;<z>
{<z>
null) {<z>
);<z>
LockMode.PESSIMISTIC_WRITE);<z>
if (lastAlias != null) {<z>
);<z>
criteria.setLockMode(LockMode.NONE);<z>
msg) {<z>
) imageView.getTag();<z>
(imageUrl.equals(forUrl)) {<z>
bitmap);<z>
return true;<z>
false;<z>
{<z>
) > 0) {<z>
COLOR_GRAY));<z>
text);<z>
isShowingGrey = true;<z>
mt,<z>
DriverException {<z>
toShape(geom);<z>
if (fillColor != null) {<z>
);<z>
);<z>
if (outline != null) {<z>
(new BasicStroke(lineWidth, BasicStroke.CAP_ROUND,<z>
JOIN_ROUND));<z>
g.setColor(outline);<z>
(ls);<z>
= calculateShadeColor(geom);<z>
setStroke(fillStroke);<z>
g.setPaint(shadeColor);<z>
ls);<z>
return null;<z>
public DebugIsotope(int atomicNumber, String elementSymbol,<z>
exactMass, double abundance) {<z>
;<z>
"Instantiated a DebugIsotope.");<z>
<String> labels)<z>
)<z>
)){<z>
;<z>
return false;<z>
(FriendPresence presence, LibraryChangedNotifier localFeature) throws FriendException {<z>
debug("send library refresh");<z>
) {<z>
;<z>
(IQ.Type.SET);<z>
);<z>
IQ.nextID());<z>
());<z>
(libraryChangedIQ);<z>
{<z>
;<z>
int itemId) {<z>
) {<z>
return 13444;<z>
:<z>
21372:<z>
:<z>
:<z>
21375:<z>
13444;<z>
:<z>
;<z>
0;<z>
(List pages) {<z>
.hasNext(); ) {<z>
.next();<z>
(page != null) {<z>
page);<z>
public PlayerUnit(Context context, int drawable)<z>
, drawable);<z>
= context;<z>
(User executer, final String channel,<z>
, InsufficientRightsException {<z>
int timeSpan = ANYFICATION_TIME;<z>
prefix = signature.getStringValue(0);<z>
signature, 1)) {<z>
) signature.getValue(1);<z>
int) t.getSpan() * 1000;<z>
this.channels.contains(channel)) {<z>
StringBuilder();<z>
channel).iterator();<z>
(it.hasNext()) {<z>
it.next());<z>
()) {<z>
", ");<z>
": ihr habt " +<z>
) +<z>
" Zeit um euch zu lordifizieren.");<z>
toString());<z>
(prefix + "-Polly");<z>
channel);<z>
) {<z>
chan = channel;<z>
() {<z>
;<z>
().getChannelUser(chan);<z>
user : users) {<z>
.startsWith(prefix)) {<z>
chan, user, "Nicht lordifiziert!");<z>
setAndIdentifyDefaultNickname();<z>
timeSpan);<z>
int len,<z>
) {<z>
;<z>
word = new char[len + 3];<z>
char[2];<z>
0;<z>
len;<z>
false;<z>
len; i++) {<z>
1];<z>
find(c, 0);<z>
{<z>
1 + iIgnoreAtBeginning)) {<z>
iIgnoreAtBeginning++;<z>
else {<z>
= true;<z>
iLength--;<z>
} else {<z>
(!bEndOfLetters) {<z>
(char) nc;<z>
} else {<z>
;<z>
;<z>
(remainCharCount + pushCharCount)) {<z>
null;<z>
= new int[len + 1];<z>
0;<z>
word, 1, len);<z>
sw)) {<z>
hw = stoplist.get(sw);<z>
0;<z>
.size(); i++) {<z>
Object o = hw.get(i);<z>
{<z>
(String) o).length();<z>
)) {<z>
= j + iIgnoreAtBeginning;<z>
} else {<z>
= '.';<z>
[len + 1] = '.';<z>
0;<z>
new byte[len + 3];<z>
i < len + 1; i++) {<z>
word, i, il);<z>
; i < len; i++) {<z>
>= remainCharCount<z>
pushCharCount)) {<z>
i + iIgnoreAtBeginning;<z>
k > 0) {<z>
res = new int[k+2];<z>
k);<z>
]=0;<z>
[k+1]=len;<z>
);<z>
} else {<z>
return null;<z>
final boolean getSystemManagedSchemas() {<z>
if ("1".equals(systemManagedSchemas)) {<z>
true;<z>
false;<z>
) {<z>
;<z>
WaarpStringUtils.readFileException(filename);<z>
InvalidArgumentException e) {<z>
"Error while trying to open: " + filename, e);<z>
"";<z>
(FileTransferException e) {<z>
error("Error while trying to read: " + filename, e);<z>
return "";<z>
(value);<z>
builder, REPLACEMENT.XXXDATEXXX.toString(),<z>
toString());<z>
.XXXLOCACTIVEXXX.toString(),<z>
(<z>
.<z>
getNumberLocalChannel()));<z>
,<z>
.toString(<z>
);<z>
XXXHOSTIDXXX.toString(),<z>
.configuration.HOST_ID);<z>
trafficCounter =<z>
.getTrafficCounter();<z>
.toString(),<z>
) / 131072) +<z>
131072) + "Mbits");<z>
();<z>
dispatcher) {<z>
);<z>
dispatcher;<z>
I18N.CONSTANTS.partners());<z>
(I18N.CONSTANTS.all());<z>
(<z>
vocabulary)<z>
, SystemException {<z>
settingsProperties =<z>
();<z>
StringUtil.split(<z>
settingsProperties.getProperty("selectedClassNameIds"), 0L);<z>
0) {<z>
[0] !=<z>
.ALL_CLASS_NAME_IDS) &&<z>
, classNameId)) {<z>
getClassName(classNameId);<z>
assetRendererFactory =<z>
(<z>
);<z>
null) ||<z>
isCategorizable()) {<z>
] requiredClassNameIds = StringUtil.split(<z>
, 0L);<z>
categories =<z>
AssetCategoryLocalServiceUtil.getVocabularyCategories(<z>
(), QueryUtil.ALL_POS,<z>
, null);<z>
) &&<z>
requiredClassNameIds[0] ==<z>
AssetCategoryConstants.ALL_CLASS_NAME_IDS) ||<z>
(requiredClassNameIds, classNameId))) {<z>
boolean found = false;<z>
{<z>
, category.getCategoryId())) {<z>
;<z>
categories.isEmpty()) {<z>
AssetCategoryException(<z>
.AT_LEAST_ONE_CATEGORY);<z>
!vocabulary.isMultiValued()) {<z>
;<z>
category : categories) {<z>
.getCategoryId())) {<z>
(!duplicate) {<z>
duplicate = true;<z>
(<z>
TOO_MANY_CATEGORIES);<z>
contentType) {<z>
isBlank(contentType)) {<z>
;<z>
{<z>
) {<z>
;<z>
lower = contentType.toLowerCase();<z>
{<z>
AjahMimeType ajahMimeType : values()) {<z>
)) {<z>
return ajahMimeType;<z>
(contentType) {<z>
:<z>
;<z>
:<z>
return APPLICATION_XHTML;<z>
case "text":<z>
return TEXT_PLAIN;<z>
return UNKNOWN;<z>
boolean validateFuzzyness(){<z>
boolean validFuzzyness = (fuzzyness > 1f);<z>
return validFuzzyness;<z>
public void handle(final WindowEvent windowEvent) {<z>
);<z>
{<z>
getWindowAdapter().windowCloseRequest(windowEvent);<z>
WINDOW_HIDDEN == type) {<z>
(windowEvent);<z>
(WindowEvent.WINDOW_HIDING == type) {<z>
getWindowAdapter().windowHiding(windowEvent);<z>
WindowEvent.WINDOW_SHOWING == type) {<z>
;<z>
else if (WindowEvent.WINDOW_SHOWN == type) {<z>
getWindowAdapter().windowShown(windowEvent);<z>
else {<z>
().window(windowEvent);<z>
maxTime) {<z>
_gem = g;<z>
maxTime;<z>
_G = new SparseGraph();<z>
,Vertex>();<z>
new SparseVertex());<z>
.SHARED);<z>
_gem,root);<z>
= System.currentTimeMillis();<z>
= _gem;<z>
U();<z>
;<z>
=0;<z>
gg : _currentTSClass) {<z>
.get(g);<z>
findMonopoles().size();<z>
)+" u-moves: "+n);<z>
i++) {<z>
copy();<z>
.out.println("U-Move "+i);<z>
get(i);<z>
move = new UMove(<z>
monopole.getVertex().getLabel(),<z>
);<z>
ggAux.uMove(monopole);<z>
null)<z>
SparseVertex());<z>
.SHARED);<z>
put(ggAux, vv);<z>
vv));<z>
, UserData.SHARED);<z>
_currentGem = ggAux;<z>
);<z>
_updateBest > 0)<z>
)<z>
this.tagWinningPath();<z>
public final void rule__XWhileExpression__PredicateAssignment_3() throws RecognitionException {<z>
;<z>
.backtracking==0 ) {<z>
).getPredicateXExpressionParserRuleCall_3_0());<z>
);<z>
();<z>
;<z>
.failed) return ;<z>
0 ) {<z>
().getPredicateXExpressionParserRuleCall_3_0());<z>
re) {<z>
reportError(re);<z>
);<z>
(stackSize);<z>
stream) throws IOException {<z>
();<z>
;<z>
(OPENLAB_RAW_MAGIC_STRING);<z>
selectionSize) {<z>
{<z>
;<z>
StringBuffer();<z>
"sectionSet_");<z>
) {<z>
append("single");<z>
) {<z>
"multi");<z>
} else {<z>
append(selectionSize);<z>
);<z>
.getQualifiedName() != null) {<z>
;<z>
} else {<z>
);<z>
if(i > 0) {<z>
;<z>
name = buffer.toString();<z>
);<z>
hasNext()) {<z>
sectionSetDescriptorState = it.next();<z>
.getName();<z>
) {<z>
true;<z>
{<z>
name;<z>
"";<z>
int off, int len){<z>
next_out = buf;<z>
off;<z>
avail_out = len;<z>
Set<KeyType> getKeys() {<z>
0;<z>
;<z>
);<z>
null;<z>
HFactory<z>
),<z>
(),<z>
BytesArraySerializer.get());<z>
(columnFamilyName);<z>
!= null) {<z>
), "");<z>
{<z>
setKeys(null, null);<z>
null, null, false, 2);<z>
setRowCount(pagination);<z>
;<z>
orderedSuperRows = result.get();<z>
= orderedSuperRows.getCount();<z>
{<z>
)) {<z>
.getKey());<z>
get(rows - 1);<z>
rows == pagination);<z>
return rowKeys;<z>
{<z>
(<z>
;<z>
node(file("prod/AxisStep/TreeTrunc.xml")));<z>
query);<z>
;<z>
)<z>
endToken) {<z>
this(startToken.getLine(),<z>
),<z>
(),<z>
getEndOffset());<z>
{<z>
;<z>
;<z>
Cipher.DECRYPT_MODE, iKey);<z>
return c.doFinal(iData);<z>
catch (Exception e) {<z>
("Error on decrypting data", e);<z>
public String toString()<z>
m_sOwnerIdentifier +<z>
+ "]";<z>
iwc, User user) {<z>
phones = null;<z>
);<z>
Exception e) {}<z>
)) {<z>
return null;<z>
;<z>
numbers = new ArrayList<String>();<z>
ArrayList<Phone>();<z>
(Phone phone: phones) {<z>
();<z>
{<z>
);<z>
;<z>
)) {<z>
null;<z>
iwrb = getResourceBundle(iwc);<z>
>(filteredPhones.size());<z>
filteredPhones) {<z>
)) {<z>
case PhoneTypeBMPBean.HOME_PHONE_ID: {<z>
CoreConstants.COLON)<z>
());<z>
case PhoneTypeBMPBean.MOBILE_PHONE_ID: {<z>
.COLON)<z>
)).toString());<z>
PhoneTypeBMPBean.WORK_PHONE_ID: {<z>
"Work")).append(CoreConstants.COLON)<z>
));<z>
.FAX_NUMBER_ID: {<z>
.append(CoreConstants.COLON)<z>
).toString());<z>
;<z>
) {<z>
oldMinEvictableIdleTimeMillis = minEvictableIdleTimeMillis;<z>
;<z>
))<z>
);<z>
deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {<z>
final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();<z>
;<z>
.getBootModuleLoader();<z>
moduleLoader, APACHE_SCOUT);<z>
(moduleSpecification, moduleLoader, JBOSS_JAXR);<z>
par4, int par5, int par6)<z>
, par5);<z>
, structureboundingbox) != null)<z>
;<z>
);<z>
{<z>
String oldClass = class_;<z>
class_ = newClass;<z>
))<z>
oldClass, class_));<z>
(String pointFill)<z>
new ScriptBuffer();<z>
);<z>
addScript(script);<z>
length) {<z>
start, length);<z>
this.currState.peek()) {<z>
case EVENT_ID:<z>
this.currEventId = s;<z>
case WIDGET_ID:<z>
s;<z>
:<z>
s;<z>
case INITIAL:<z>
;<z>
ACTION:<z>
;<z>
:<z>
;<z>
final DataHandler getAttachmentAsDataHandler(String cid) {<z>
(log.isDebugEnabled()) {<z>
;<z>
;<z>
!= null) {<z>
;<z>
{<z>
);<z>
()) {<z>
cid + "] trying [" + cid2 + "]");<z>
cid2);<z>
if (dh != null) {<z>
dh;<z>
.getMessage("noDataHandler", cid));<z>
void destroy() {<z>
> 0) {<z>
IntBuffer id = ToolsBuffers.createIntBuffer(1);<z>
fboID);<z>
rewind();<z>
);<z>
0;<z>
(depthRBID > 0) {<z>
.createIntBuffer(1);<z>
;<z>
();<z>
id);<z>
;<z>
.textures.clear();<z>
,<z>
column) {<z>
, column);<z>
adapter.getXColumn();<z>
getYColumn();<z>
String text;<z>
(column == xColumn && column == yColumn) {<z>
;<z>
{<z>
+ " [x]";<z>
else if (column == yColumn) {<z>
" [y]";<z>
{<z>
toString();<z>
(text);<z>
return label;<z>
(String remaining) {<z>
{<z>
]);<z>
else {<z>
;<z>
applyProperties() {<z>
;<z>
lockOptions );<z>
().setCacheMode(<z>
(<z>
,<z>
()<z>
boolean result) {<z>
result) {<z>
{<z>
address = mBluetoothService.getAddressFromObjectPath(deviceObjectPath);<z>
;<z>
getRemoteDevice(address);<z>
state = getConnectionState(device);<z>
(device, state, BluetoothA2dp.STATE_DISCONNECTED);<z>
lb) {<z>
)).protocol(<z>
status)<z>
lb.virtualIps);<z>
lb.cluster.size() == 1)<z>
(), 0));<z>
== 1)<z>
), 0));<z>
1)<z>
(), 0));<z>
() == 1)<z>
, 0));<z>
connectionLogging.size() == 1)<z>
, 0));<z>
.build();<z>
{<z>
(e, "nullpointer found parsing %s", lb);<z>
e;<z>
{<z>
.stop(context);<z>
= null;<z>
resourceBundle = null;<z>
getUnrenderedNodes(Collection result) {<z>
symb.entrySet().iterator();<z>
)) {<z>
);<z>
null)) {<z>
n.clone();<z>
();<z>
,n);<z>
.lastrendered=n.uri;<z>
n.rendered=true;<z>
);<z>
{<z>
c1 == null || c2 == null)<z>
;<z>
) != c2.size())<z>
return false;<z>
))<z>
false;<z>
;<z>
ARG) {<z>
"";<z>
i : folge1) s += i+",";<z>
if (folge2.length != 0){<z>
int i = 1;<z>
]+",";<z>
i]+",";<z>
-1);<z>
+ g;<z>
] = ""+ max;<z>
haiMax;<z>
= ""+ s;<z>
(long revision) throws SVNException {<z>
= true;<z>
"", false);<z>
(), myCurrentDirectory);<z>
if (myTarget == null) {<z>
myCurrentDirectory.getAdminArea();<z>
.getThisDirName(), false);<z>
) {<z>
myCurrentDirectory.myAmbientDepth = entry.getDepth();<z>
getRevision();<z>
);<z>
.toString(myTargetRevision));<z>
);<z>
, Boolean.TRUE.toString());<z>
(myRootURL, myCurrentDirectory.URL)) {<z>
.put(SVNProperty.REPOS, myRootURL);<z>
, true, false);<z>
null) {<z>
, null);<z>
) {<z>
()) {<z>
getTarget(), myTarget);<z>
else {<z>
getTarget(), null);<z>
node) {<z>
= node.resolveBinding();<z>
if (null == binding) {<z>
(node);<z>
;<z>
getKind();<z>
void parseStatusLine(String responseLine,CrawlURLMetadata metadata) {<z>
> result = parseStatusLine(responseLine);<z>
result.e1 != 0)<z>
;<z>
(result.e0.intValue());<z>
isPositive,<z>
int years,<z>
months)<z>
return newDuration(isPositive,<z>
,<z>
valueOf((long) months),<z>
null);<z>
void setStepSize(final double stepSize) {<z>
;<z>
fixedStepSize = stepSize;<z>
) {<z>
()),<z>
stepSize));<z>
} else {<z>
));<z>
String string, int maxLength) {<z>
);<z>
int runLength = 0;<z>
++) {<z>
{<z>
;<z>
{<z>
= 0;<z>
{<z>
'\n');<z>
0;<z>
replaceAll("\\n", "<br/>");<z>
public TimerPool(int numOfTimers) {<z>
];<z>
numOfTimers; i++) {<z>
i] = new Timer();<z>
_numOfTimers = numOfTimers;<z>
(Cursor cursor) {<z>
1;<z>
appId = null;<z>
null;<z>
;<z>
= null;<z>
-1;<z>
[] hash = null;<z>
-1;<z>
null;<z>
;<z>
= null;<z>
COL_ID));<z>
) {<z>
.COL_APP_ID));<z>
) {<z>
COL_TYPE));<z>
(IllegalArgumentException e) {<z>
.getColumnIndexOrThrow(DbObj.COL_STRING_KEY));<z>
} catch (IllegalArgumentException e) {<z>
(<z>
;<z>
(IllegalArgumentException e) {<z>
));<z>
{<z>
getColumnIndexOrThrow(DbObj.COL_UNIVERSAL_HASH));<z>
) {<z>
.getColumnIndexOrThrow(DbObj.COL_FEED_ID));<z>
e) {<z>
DbObj.COL_INT_KEY));<z>
IllegalArgumentException e) {<z>
);<z>
e) {<z>
(DbObj.COL_PARENT_ID);<z>
.isNull(pIndex)) {<z>
);<z>
catch (IllegalArgumentException e) {<z>
raw;<z>
(DbObj.COL_RAW);<z>
{<z>
= null;<z>
else {<z>
.COL_RAW));<z>
, json, raw, intKey, name,<z>
;<z>
) {<z>
(TAG, "Couldn't parse obj.", e);<z>
null;<z>
)<z>
{<z>
( DER.BitString);<z>
.packByte( 0);<z>
.packLength( 8);<z>
7; idx >= 0; idx--) {<z>
>> ( idx * 8);<z>
int) ( m_bits & 0xFF));<z>
> options)<z>
= options != null ? (CDOTransaction)options<z>
: null;<z>
if (transaction == null)<z>
= cdoView();<z>
CDOTransaction)<z>
transaction = (CDOTransaction)view;<z>
new IllegalStateException("No transaction available");<z>
transaction;<z>
private Point delta(Point d)<z>
- _location.getX()),<z>
) - _location.getY()));<z>
MeasurementTask clone() {<z>
measurementDesc;<z>
startTime, desc.endTime,<z>
);<z>
new TracerouteTask(newDesc, parent);<z>
{<z>
{<z>
{<z>
(searchTerm);<z>
);<z>
final String searchTerm) {<z>
= new StringBuilder();<z>
append(searchTerm.toLowerCase());<z>
.append("%");<z>
return pattern.toString();<z>
<CssParameter> getCssParameter() {<z>
cssParameter == null) {<z>
;<z>
cssParameter;<z>
, EClass type, String prefix) {<z>
eINSTANCE.create(type);<z>
;<z>
EObjectDescription.create(avmQualifiedName, proxy);<z>
static Value array_reverse(Env env,<z>
,<z>
keyed) {<z>
if (inputArray == null) {<z>
NullValue.NULL;<z>
Value>[] entryArray =<z>
[inputArray.getSize()];<z>
.entrySet().toArray(entryArray);<z>
= new ArrayValueImpl();<z>
newIndex = 0;<z>
) {<z>
[index].getKey();<z>
entryArray[index].getValue();<z>
currentKey instanceof StringValue)) {<z>
put(currentKey, currentValue);<z>
} else {<z>
), currentValue);<z>
;<z>
return newArray;<z>
?> clazz) {<z>
get(clazz);<z>
== null) {<z>
) + " isn't managed");<z>
);<z>
readLine();<z>
} catch (IOException e) {<z>
(e);<z>
))) {<z>
[0].substring(1);<z>
{<z>
val[0]=val0;<z>
;<z>
2]=val0;<z>
[3]=val0;<z>
;<z>
Collection<MessageDestination> getMessageDestination() {<z>
{<z>
;<z>
.messageDestination;<z>
static RootFolder findRootFolder(Resource aThis) {<z>
aThis instanceof AbstractResource) {<z>
AbstractResource ar = (AbstractResource) aThis;<z>
WebUtils.findRootFolder(ar);<z>
{<z>
return null;<z>
) throws IOException {<z>
"method", command), callback);<z>
{<z>
throw new IOException(exception);<z>
float score, Direction d) {<z>
d) {<z>
forwards:<z>
;<z>
case reverse:<z>
);<z>
);<z>
{<z>
();<z>
mName).append("\n");<z>
("\n");<z>
append("\n");<z>
: "built-in").append("\n");<z>
" Keyboard Type: ");<z>
mKeyboardType) {<z>
KEYBOARD_TYPE_NONE:<z>
"none");<z>
case KEYBOARD_TYPE_NON_ALPHABETIC:<z>
);<z>
case KEYBOARD_TYPE_ALPHABETIC:<z>
append("alphabetic");<z>
append("\n");<z>
mHasVibrator).append("\n");<z>
)).append(" (");<z>
"keyboard");<z>
, SOURCE_DPAD, "dpad");<z>
appendSourceDescriptionIfApplicable(description, SOURCE_TOUCHSCREEN, "touchscreen");<z>
SOURCE_MOUSE, "mouse");<z>
(description, SOURCE_STYLUS, "stylus");<z>
);<z>
SOURCE_TOUCHPAD, "touchpad");<z>
"joystick");<z>
);<z>
append(" )\n");<z>
mMotionRanges.size();<z>
) {<z>
;<z>
));<z>
));<z>
" min=").append(range.mMin);<z>
range.mMax);<z>
;<z>
);<z>
append("\n");<z>
description.toString();<z>
final CLContext context) {<z>
)<z>
.getCLEventRegistry(), DESTRUCTOR_CLEvent);<z>
.getCLProgramRegistry(), DESTRUCTOR_CLProgram);<z>
, DESTRUCTOR_CLSampler);<z>
DESTRUCTOR_CLMem);<z>
(), DESTRUCTOR_CLCommandQueue);<z>
keepInside) {<z>
result = new LayoutMeasures();<z>
.height(), false);<z>
));<z>
;<z>
.scrollX = newFrame.left;<z>
= newFrame.top;<z>
);<z>
(result.width < rootWidth) {<z>
) / 2;<z>
rootHeight = getRootViewHeight();<z>
height < rootHeight) {<z>
result.height) / 2;<z>
;<z>
program, int location, IntBuffer value) {<z>
getCapabilities();<z>
long function_pointer = caps.glProgramUniform2uiv;<z>
;<z>
.checkDirect(value);<z>
;<z>
() {<z>
);<z>
(focusLostBehaviour == PERSIST || focusLostBehaviour == COMMIT_OR_REVERT)<z>
;<z>
(String p_nombres, String p_apellidoPaterno, String p_apellidoMaterno,<z>
p_telefono, String p_fechaContacto) {<z>
this.nombres = p_nombres;<z>
this.apellidoPaterno = p_apellidoPaterno;<z>
p_apellidoMaterno;<z>
p_eMail;<z>
DNI = p_DNI;<z>
telefono = p_telefono;<z>
this.fechaContacto = p_fechaContacto;<z>
get("Prospecto");<z>
boolean overwriteIfExists,<z>
drools) throws RepositoryException {<z>
converterService.isEnabled()) {<z>
.getPath());<z>
.isDebugEnabled()) {<z>
() + " into target MIME type '" + targetMimeType + "'");<z>
DocumentFormat format = converterService.getFormatByMimeType(targetMimeType);<z>
if (format == null) {<z>
.warn("Unsupported target MIME type '" + targetMimeType + "'. Skip converting file "<z>
;<z>
= null;<z>
.getNode();<z>
if (node.isNodeType("nt:file")) {<z>
node.getFileContent().downloadFile();<z>
= File.createTempFile("doc-converter-rule", null);<z>
(temp);<z>
, os, targetMimeType);<z>
();<z>
.getParent();<z>
) + "." + format.getExtension();<z>
(!overwriteIfExists) {<z>
= JCRContentUtils.findAvailableNodeName(folder, newName);<z>
new FileInputStream(temp);<z>
.getMediaType());<z>
));<z>
finally {<z>
convertedStream);<z>
} finally {<z>
(os);<z>
;<z>
else {<z>
;<z>
catch (Exception e) {<z>
e);<z>
finally {<z>
closeQuietly(is);<z>
boolean reloadPlugin(CommandSender sender) {<z>
RED + "Successfully reloaded configuration!");<z>
(new MechanismsPlugin());<z>
);<z>
(Exception e) {<z>
;<z>
return true;<z>
(MarkupWriter writer)<z>
"class", ROOT_CSS_CLASS);<z>
);<z>
() + "-msg");<z>
writer.end();<z>
.values().length; i++)<z>
getMixinId() + "-tag-" + i);<z>
writer.end();<z>
);<z>
.end();<z>
<?> clazz) {<z>
new NullPointerException();<z>
clazz)) {<z>
;<z>
return reflectorsMap.get(clazz);<z>
componentName) {<z>
!components.contains(componentName)) {<z>
components.add(componentName);<z>
String getInitFromExternalForm(Object[] args) {<z>
[0] == null)<z>
;<z>
if (args[0] instanceof String) {<z>
[0];<z>
null;<z>
protobuf.PBMessage.Atom.Ping value) {<z>
== null) {<z>
value == null) {<z>
throw new NullPointerException();<z>
ping_ = value;<z>
();<z>
else {<z>
(value);<z>
0x00000100;<z>
this;<z>
) {<z>
;<z>
GL_COLOR_BUFFER_BIT);<z>
;<z>
;<z>
);<z>
width, dim.height,<z>
, GL.GL_UNSIGNED_BYTE, pixels);<z>
glFlush();<z>
isExtensionAvailable("GL_ARB_imaging")<z>
) {<z>
(GL2.GL_MINMAX, true,<z>
GL_RGB, GL.GL_UNSIGNED_BYTE, values);<z>
" Red : min = %d "<z>
(3));<z>
(" Green : min = %d "<z>
);<z>
" Blue : min = %d "<z>
.get(5));<z>
updateSemanticModel(final IPropertiesEditionEvent event) {<z>
semanticObject;<z>
getAffectedEditor()) {<z>
String)event.getNewValue()));<z>
()) {<z>
getKind() == PropertiesEditionEvent.ADD) {<z>
());<z>
(semanticObject, PropertiesEditingProvider.class);<z>
{<z>
policy = provider.getPolicy(context);<z>
CreateEditingPolicy) {<z>
.execute();<z>
) == PropertiesEditionEvent.EDIT) {<z>
);<z>
(), PropertiesEditingProvider.class);<z>
null) {<z>
context);<z>
!= null) {<z>
);<z>
getKind() == PropertiesEditionEvent.REMOVE) {<z>
.getNewValue());<z>
{<z>
event.getNewValue());<z>
) {<z>
));<z>
.newInstance == event.getAffectedEditor()) {<z>
());<z>
) {<z>
);<z>
{<z>
() == PropertiesEditionEvent.ADD) {<z>
() instanceof ViewContainer) {<z>
(EObject) event.getNewValue());<z>
PropertiesEditionEvent.REMOVE) {<z>
);<z>
.getKind() == PropertiesEditionEvent.MOVE) {<z>
));<z>
public Labeling< T > copy()<z>
);<z>
= cursor();<z>
result.cursor();<z>
( srcCursor.hasNext() )<z>
fwd();<z>
.fwd();<z>
) );<z>
result;<z>
file) {<z>
));<z>
{<z>
auto_mode)) {<z>
.<z>
showConfirmDialog(this,<z>
"Overwrite existing G-Code file " + file + "?",<z>
;<z>
(yesno != JOptionPane.YES_OPTION) {<z>
gCodeWriter.open(file);<z>
gCodeWriter);<z>
;<z>
} catch (IOException e) {<z>
showMessageDialog(this,<z>
+ e.getMessage(),<z>
);<z>
AccessControlException e1) {<z>
);<z>
);<z>
catch (IOException e2) {<z>
Expression expression) {<z>
instanceof SimpleName)<z>
(SimpleName)expression);<z>
instanceof QualifiedName)<z>
QualifiedName) expression).getName());<z>
expression instanceof FieldAccess)<z>
).getName();<z>
return null;<z>
@QueryParam("ex") String className)<z>
InstantiationException, IllegalAccessException {<z>
.getClassLoader());<z>
);<z>
) throw re;<z>
"Hi there!";<z>
{<z>
classNode.getDeclaredField(name);<z>
null && fieldNode.getModifiers() == modifiers &&<z>
(type);<z>
Object obj) {<z>
obj instanceof Attribute) {<z>
attribute = (Attribute) obj;<z>
indexOfDuplicate(attribute);<z>
&& (duplicate != index)) {<z>
new IllegalAddException("Cannot set duplicate attribute");<z>
);<z>
null) {<z>
new IllegalAddException("Cannot add null attribute");<z>
("Class " +<z>
.getName() +<z>
;<z>
() {<z>
null,<z>
, null);<z>
.SETTINGS_TO_BACKUP);<z>
{<z>
.close();<z>
) throws<z>
length());<z>
i++){<z>
(sl.symbolAt(i)));<z>
return sb.toString();<z>
{<z>
{<z>
;<z>
getProject().getDocTypes()) {<z>
addToChilds(dt);<z>
String toName,<z>
final OtpErlangObject payload) {<z>
tag = regSendTag;<z>
.from = from;<z>
;<z>
to = null;<z>
= null;<z>
payload = payload;<z>
) {<z>
null) {<z>
);<z>
;<z>
{<z>
;<z>
;<z>
);<z>
isDynamic()) {<z>
isExpired()) {<z>
;<z>
{<z>
this.value == null) {<z>
true;<z>
;<z>
(o != null) {<z>
toString())) {<z>
(o);<z>
{<z>
.value = o;<z>
;<z>
uri) {<z>
{<z>
;<z>
;<z>
from = uri.indexOf(<z>
2) : 0<z>
from);<z>
releaseMouse(JSpinner jSpinner)<z>
< jSpinner.getComponentCount(); i++)<z>
(i);<z>
)<z>
;<z>
game) {<z>
{<z>
(cardId))<z>
cardId);<z>
return null;<z>
{<z>
T__59;<z>
DEFAULT_TOKEN_CHANNEL;<z>
);<z>
.type = _type;<z>
state.channel = _channel;<z>
final String subpath, final String schemeName) {<z>
{<z>
scheme instanceof ExternalizableScheme) {<z>
;<z>
.getCurrentFileName();<z>
{<z>
EXT;<z>
getName())) {<z>
), UniqueFileNamesProvider.convertName(schemeName));<z>
return subpath;<z>
{<z>
int stackSize = keepStackSize();<z>
{<z>
().getLeftParenthesisKeyword_2());<z>
;<z>
backtracking==0 ) {<z>
);<z>
{<z>
reportError(re);<z>
recover(input,re);<z>
stackSize);<z>
RequestBody TaskControl status,<z>
@RequestHeader( "DN" ) String dn,<z>
{<z>
;<z>
{<z>
);<z>
(comment);<z>
return dao.save(comment);<z>
target) {<z>
target, "Target cannot be null");<z>
Boolean>();<z>
target) {<z>
);<z>
result;<z>
{<z>
)) {<z>
new QName(value, node);<z>
{<z>
return new QName("", value);<z>
(int i) {<z>
;<z>
) {<z>
;<z>
if (_trueDmgup <= -128) {<z>
-128;<z>
else {<z>
= _trueDmgup;<z>
) {<z>
.hasEmpty = false;<z>
= false;<z>
this;<z>
String url) throws Exception {<z>
); st.hasMoreTokens(); ) {<z>
.nextToken();<z>
;<z>
add(ldapUrl);<z>
updateFileChooser() {<z>
) {<z>
);<z>
;<z>
{<z>
true);<z>
setSelected(true);<z>
revalidate();<z>
.repaint();<z>
Runnable() {<z>
) {<z>
) != null) {<z>
);<z>
;<z>
getTable() {<z>
.eIsProxy()) {<z>
;<z>
)eResolveProxy(oldTable);<z>
(table != oldTable) {<z>
())<z>
;<z>
return table;<z>
getMapForClass(Class<?> clazz) {<z>
);<z>
objectMap == null) {<z>
();<z>
objectMap);<z>
;<z>
() {<z>
addStyleName("folderChooser");<z>
);<z>
(splitPanel);<z>
setText(constants.folderSelection());<z>
public BailException(Object object, Throwable cause)<z>
);<z>
.object = object;<z>
BailException)<z>
) cause).suppress;<z>
(object);<z>
final ContentProviderClient acquireUnstableContentProviderClient(String name) {<z>
(name);<z>
null) {<z>
new ContentProviderClient(this, provider, false);<z>
null;<z>
int getTimezoneOffset()<z>
();<z>
);<z>
Calendar.ZONE_OFFSET)<z>
1000);<z>
JList createList() {<z>
[] names = DemoData.getCountryNames();<z>
String>();<z>
(nameList, names);<z>
new JList(names) {<z>
, Position.Bias bias) {<z>
return -1;<z>
15);<z>
return list;<z>
setOnActionExpandListener ( OnActionExpandListener onActionExpandListener )<z>
return this;<z>
StatEnum stat)<z>
value = 0;<z>
readLock().lock();<z>
)<z>
();<z>
);<z>
return value;<z>
{<z>
;<z>
schema = resourceType.getSchema();<z>
));<z>
IDFTFunction(<z>
factory,<z>
<long[], T> freqFunction,<z>
] span,<z>
T type)<z>
(span.length != 2)<z>
(<z>
"IDFTFunction is only designed for two dimensional functions");<z>
type = type;<z>
ComplexDoubleType();<z>
;<z>
span.clone();<z>
.imgFactory = factory;<z>
);<z>
T>();<z>
,T>();<z>
createVariable();<z>
();<z>
);<z>
= type.createVariable();<z>
createVariable();<z>
0, 2 * Math.PI);<z>
createDataArray();<z>
receiver,<z>
presenceListener) {<z>
this(receiver);<z>
;<z>
{<z>
initComponents();<z>
{<z>
(nameTextField);<z>
(numberTextField);<z>
new AbstractDocumentListener() {<z>
public void onUpdate(DocumentEvent e) {<z>
userSet;<z>
userSet) {<z>
;<z>
.getText());<z>
= usrSet;<z>
;<z>
();<z>
);<z>
;<z>
() {<z>
public void actionPerformed(ActionEvent e) {<z>
;<z>
();<z>
);<z>
() {<z>
void componentHidden(ComponentEvent e) {<z>
);<z>
e) {<z>
askForResize();<z>
() {<z>
null);<z>
infoPanel.getComponents()) {<z>
comp.addComponentListener(resizeListener);<z>
;<z>
Collection<GrantedAuthority> result, String value) {<z>
,stringSeparator,false);<z>
( st.hasMoreTokens() ) {<z>
();<z>
) {<z>
nextToken));<z>
hashCode() {<z>
prime = 31;<z>
int result = 1;<z>
());<z>
* result<z>
sequence.hashCode());<z>
return result;<z>
Address address) {<z>
AddressConnector connector : addressConnectors) {<z>
) {<z>
, address);<z>
connector;<z>
return null;<z>
character) {<z>
if (character instanceof Player) {<z>
.getEventWriter());<z>
())<z>
isInSight(player))<z>
);<z>
public S loadEntry(final String key)<z>
"." + key.toLowerCase());<z>
boolean nameCase = false;<z>
)<z>
(path + "." + key);<z>
nameCase = true;<z>
== null)<z>
;<z>
columnNames);<z>
), data);<z>
(nameCase)<z>
path + "." + key, null);<z>
;<z>
return data;<z>
Exception e)<z>
e.printStackTrace();<z>
null;<z>
(UpdateEvent event) {<z>
if (view.hasChangedItems()) {<z>
;<z>
AsyncCallback<BatchResult>() {<z>
Throwable caught) {<z>
();<z>
);<z>
) {<z>
onCompleted();<z>
);<z>
(null);<z>
{<z>
) {<z>
= null;<z>
();<z>
LockedPeriodDTO oldLockedPeriod : lockedPeriodsToUpdate) {<z>
()) {<z>
;<z>
!= null) {<z>
lockedPeriodToRemove);<z>
.remove(lockedPeriodToRemove);<z>
);<z>
);<z>
event)<z>
true;<z>
.isMarkedHandled())<z>
.handledAndContinue();<z>
{<z>
;<z>
{<z>
field, issue);<z>
);<z>
{<z>
(field, issue);<z>
else {<z>
null;<z>
> rootDocs) {<z>
new DefaultDocumentSet();<z>
doc.doc);<z>
this;<z>
(float seriesPadding)<z>
);<z>
"setSeriesPadding", seriesPadding);<z>
addScript(script);<z>
int actIndex, int index, IEObjectConsumer inst) {<z>
;<z>
{<z>
actIndex, consumed);<z>
;<z>
,<z>
String dsID){<z>
= "getDatastreamHistory";<z>
);<z>
"pid", pid);<z>
PARMS.put("dsID", dsID);<z>
= new SwingWorker(PARMS) {<z>
{<z>
((java.lang.String) parms<z>
.lang.String) parms<z>
));<z>
);<z>
= 0;<z>
getSize();<z>
ArrayList();<z>
();<z>
= true;<z>
length(); i++) {<z>
char c = METHOD_NAME.charAt(i);<z>
&& c <= 'Z') {<z>
!lastWasCaps) {<z>
);<z>
);<z>
);<z>
;<z>
{<z>
append(c);<z>
;<z>
());<z>
();<z>
++) {<z>
);<z>
0) {<z>
toUpperCase();<z>
length() - 1);<z>
lcWord.length() - 1);<z>
.append(firstChar);<z>
buf.append(middle);<z>
append(lastChar);<z>
buf.append(" ");<z>
} else {<z>
+ " ");<z>
);<z>
done) {<z>
;<z>
PROGRESS<z>
0,<z>
getWidth() - 1,<z>
;<z>
sleep(100);<z>
;<z>
>= 2000) ms = 200;<z>
} catch (InterruptedException ie) {<z>
Administrator.PROGRESS.setValue(2000);<z>
.PROGRESS.paintImmediately(0,<z>
) d.getWidth() - 1,<z>
;<z>
);<z>
catch (InterruptedException ie) {<z>
0);<z>
Administrator.PROGRESS.setString("");<z>
>) worker.get();<z>
public ClassID()<z>
new byte[LENGTH];<z>
= 0; i < LENGTH; i++)<z>
0x00;<z>
throws InterruptedException {<z>
1; i >= 0; i--) {<z>
(i).isAlive()) {<z>
sleep(500);<z>
i++;<z>
boolean coreType) {<z>
switch (featureID) {<z>
case DCPackage.DC_TYPE__ID:<z>
return getId();<z>
case DCPackage.DC_TYPE__MIXED:<z>
) return getMixed();<z>
getWrapper();<z>
featureID, resolve, coreType);<z>
onDisplayChangeEvent(DisplayChangeEvent displayChangeEvent)<z>
)<z>
createPopupMenuRectangle();<z>
).init(popupMenuRectangle);<z>
.getInstance())<z>
)).init(popupMenuRectangle);<z>
getInstance().getFormType();<z>
createFormRectangle();<z>
.init(rectangle, formType);<z>
);<z>
e)<z>
, e));<z>
){<z>
.isEmpty()){<z>
;<z>
}else{<z>
+ rawText + "</foo>";<z>
XMLParser.parse(rawText);<z>
), true);<z>
);<z>
.getLength();<z>
numChildren;i++){<z>
child = imp.getFirstChild();<z>
getNodeType();<z>
appendChild(child);<z>
return parentNode;<z>
, boolean resolve)<z>
Class cl = findLoadedClass(name);<z>
) {<z>
) {<z>
cl = parentLoader.loadClass(name);<z>
else {<z>
findSystemClass(name);<z>
) {<z>
;<z>
;<z>
throws BlurException, org.apache.thrift.TException<z>
send_describe(table);<z>
);<z>
void onResume() {<z>
.onResume();<z>
mActivity.getGLRoot().freeze();<z>
= true;<z>
mRootPane);<z>
mModel.resume();<z>
;<z>
null) {<z>
;<z>
;<z>
.addOnMenuVisibilityListener(mMenuVisibilityListener);<z>
!= null && !mHasActivityResult) {<z>
;<z>
mHasActivityResult = false;<z>
(MSG_UNFREEZE_GLROOT, UNFREEZE_GLROOT_TIMEOUT);<z>
> getAvailableLifeCycleTransitions(<z>
, String currentState)<z>
LifeCycleException {<z>
);<z>
return lf.getAllowedStateTransitionsFrom(currentState);<z>
String newValue) {<z>
if (newValue != null) {<z>
newValue);<z>
{<z>
;<z>
sm, JDBCStore store,<z>
JDBCFetchConfiguration fetch, Result res)<z>
{<z>
= indicatesNull(res);<z>
if (isNull == null)<z>
TRUE.equals(isNull)) {<z>
), null);<z>
FETCH_NONE &&<z>
res)) {<z>
= store.getContext();<z>
null, sm, field);<z>
;<z>
em, store, fetch, res);<z>
&&<z>
requiresFetch(field.getFieldMetaData()) ==<z>
JDBCFetchConfiguration.FETCH_LOAD) {<z>
.load(fetch);<z>
{<z>
.get(which));<z>
));<z>
} catch (JSONException e) {}<z>
();<z>
() {<z>
int i;<z>
vec();<z>
();<z>
side;<z>
body p;<z>
mincorner.unit();<z>
.scale(1E99);<z>
);<z>
.scale(-1E99);<z>
0; i < nbody; i++) {<z>
.getbody(i);<z>
);<z>
.min(tmp1);<z>
;<z>
= 0.0;<z>
;<z>
;<z>
.sub(tmp2);<z>
;<z>
v2) side = tmp1.v2;<z>
) side = tmp1.v3;<z>
= -side/100000;<z>
.v2 = -side/100000;<z>
-side/100000;<z>
.add(tmp1);<z>
1.00002*side;<z>
Exception {<z>
initialized) {<z>
;<z>
);<z>
()<z>
;<z>
(Throwable t)<z>
(GitPlugin.getDefault(), t);<z>
{<z>
);<z>
)) {<z>
), fReplaceRefactoring.getQuery()<z>
;<z>
catch (PatternSyntaxException e) {<z>
String locMessage = e.getLocalizedMessage();<z>
0;<z>
1) {<z>
++;<z>
, i));<z>
);<z>
reloadGlobals() {<z>
prefixColor = config.getString("options.chat.plugin-prefix-color");<z>
getString("options.chat.plugin-prefix");<z>
"options.chat.chat-color");<z>
config.getBoolean("options.chat.display-plugin-prefix");<z>
);<z>
.trackStats = config.getBoolean("options.track-statistics");<z>
allowDiagonals = config.getBoolean("options.allow-diagonal-winnings");<z>
;<z>
.displayChunk = config.getBoolean("options.enable-chunk-messages");<z>
(Date d) {<z>
==null)<z>
new IllegalArgumentException("Date cannot be null");<z>
date = d;<z>
parent) {<z>
slotId);<z>
.isNotNull(label);<z>
Assert.isNotNull(parent);<z>
ColorFieldEditor(slotId, label, parent);<z>
(this);<z>
.setPreferenceStore(getPreferenceStore());<z>
;<z>
throws TException {<z>
TField field;<z>
;<z>
true)<z>
= iprot.readFieldBegin();<z>
type == TType.STOP) {<z>
) {<z>
case 1:<z>
TType.STRING) {<z>
docid = iprot.readString();<z>
{<z>
.type);<z>
case 2:<z>
) {<z>
.readMapBegin();<z>
_map126.size);<z>
size; ++_i127)<z>
_key128;<z>
;<z>
readString();<z>
();<z>
_val129);<z>
readMapEnd();<z>
else {<z>
field.type);<z>
field.type);<z>
readFieldEnd();<z>
);<z>
();<z>
String saveRest(@Context Item item) {<z>
null;<z>
!= null) {<z>
saveItem(item);<z>
+ item.toString() + " Saved.";<z>
= "Item can not be null.";<z>
result;<z>
(OAuthRequest request, long currentMsec) throws OAuthException {<z>
);<z>
(timestamp <= 0) {<z>
throw new OAuthException("Invalid OAuth timestamp");<z>
);<z>
.get(consumerKey);<z>
) > timestamp)) {<z>
);<z>
);<z>
File dir )<z>
kids = new ArrayList();<z>
[] files = dir.listFiles();<z>
dir.exists() ){<z>
( dir == root ){<z>
;<z>
{<z>
( this );<z>
{<z>
length;i++){<z>
;<z>
file.getName();<z>
{<z>
.isDirectory()){<z>
( recursive ){<z>
;<z>
child ));<z>
}else{<z>
;<z>
null ){<z>
manager.addDir( this, file );<z>
);<z>
Throwable e ){<z>
Debug.printStackTrace( e );<z>
{<z>
getFile( file );<z>
( res == null ){<z>
addFile( this, file );<z>
add( res );<z>
e ){<z>
Debug.printStackTrace( e );<z>
++){<z>
i);<z>
instanceof ShareResourceImpl ){<z>
ShareResourceImpl)o).setParent(this);<z>
}else{<z>
(this);<z>
( kids );<z>
KeySpec keySpec)<z>
InvalidKeySpecException {<z>
return generatePublic(keySpec);<z>
(InvalidKeySpecException e) {<z>
throw e;<z>
(GeneralSecurityException e) {<z>
throw new InvalidKeySpecException(e);<z>
) {<z>
;<z>
JarOptionsPage_title);<z>
JarPackagerMessages.JarOptionsPage_description);<z>
fJarPackage= jarPackage;<z>
> T getLastOrThrow(T[] array)<z>
array.length > 0)<z>
.length-1];<z>
;<z>
BigDecimal getBigDecimal(int parameterIndex, int scale)<z>
throws SQLException {<z>
(parameterIndex, scale);<z>
(RemoteException e) {<z>
.getMessage());<z>
String locationName()<z>
executeCommand( "inv" );<z>
response );<z>
) throws cfmRunTimeException {<z>
Connection c = null;<z>
.getPooledConnection();<z>
= c.getMetaData();<z>
"DBINFO");<z>
);<z>
( metaData.getDatabaseProductVersion() ) );<z>
() ) );<z>
metaData.getDriverVersion() ) );<z>
;<z>
.getDriverMajorVersion() ) );<z>
() ) );<z>
return queryResult;<z>
catch (SQLException e) {<z>
, e.getMessage() );<z>
} finally {<z>
datasource.close(c);<z>
;<z>
o )<z>
instanceof GroupPropertyHandle )<z>
( ).hasChoices( ) )<z>
return false;<z>
IPropertyType.DIMENSION_TYPE;<z>
return false;<z>
(FacesContext context,<z>
,<z>
, Converter converter)<z>
.hasNext())<z>
;<z>
SelectItemGroup)<z>
itemgroup = (SelectItemGroup) item;<z>
);<z>
(selectItems != null<z>
.length > 0<z>
matchValue(context, uiComponent, value, Arrays<z>
converter))<z>
;<z>
itemValue = _convertOrCoerceValue(context,<z>
;<z>
itemValue || value.equals(itemValue))<z>
true;<z>
false;<z>
{<z>
;<z>
);<z>
finally {<z>
.unlock();<z>
<FilterHandle> matches, ExprEvaluatorContext exprEvaluatorContext)<z>
().get(eventBean);<z>
)<z>
.getId() + ") attributeValue=" + attributeValue);<z>
== null)<z>
.lock();<z>
);<z>
null)<z>
for (EventEvaluator eval : evaluatorsSet)<z>
(eventBean, matches, exprEvaluatorContext);<z>
.unlock();<z>
))<z>
).unlock();<z>
: evaluatorsSet)<z>
evalNotMatching.contains(eval)))<z>
exprEvaluatorContext);<z>
unlock();<z>
public void printRawOn(PrintStream tty) {<z>
"Dumping raw memory for ");<z>
tty);<z>
tty.println();<z>
4;<z>
size; i += 4) {<z>
, 4, true);<z>
println(Long.toHexString(memVal));<z>
parameterName, String parameterValue) {<z>
super(evenIfUnstable);<z>
.parameterName = parameterName;<z>
parameterValue;<z>
arg8, int[] arg9) {<z>
;<z>
, arg7, arg8, arg9);<z>
finally {<z>
;<z>
protected synchronized void onMeasure(int widthMeasureSpec,<z>
{<z>
, widthMeasureSpec);<z>
));<z>
record) throws<z>
String method_call = "VTPM.create";<z>
getSessionReference();<z>
;<z>
.toXMLRPC(record_map)};<z>
, method_params);<z>
"Value");<z>
return Types.toVTPM(result);<z>
getRowCount()<z>
null)<z>
return 0;<z>
+ copyrightList.size();<z>
JFrame parent, String title, String text,<z>
String noText, Icon icon)<z>
"<html><body>" + text + "</body></html>");<z>
(icon);<z>
;<z>
;<z>
, false);<z>
());<z>
this);<z>
();<z>
);<z>
.setVisible(true);<z>
new WindowAdapter()<z>
)<z>
(listener != null)<z>
listener.noOption();<z>
);<z>
a, @NotNull final byte[] b)<z>
.length != b.length)<z>
;<z>
.length;<z>
0; i < count; i++)<z>
])<z>
false;<z>
;<z>
) throws JSONException {<z>
!= null){<z>
; i++){<z>
;<z>
> binaries)<z>
(binaries.size() == 1)<z>
);<z>
= 0;<z>
: binaries)<z>
();<z>
size];<z>
= 0;<z>
binary : binaries)<z>
offset, binary._length);<z>
;<z>
(data);<z>
throws IOException<z>
(columnIndex == _nextColumnToWrite) {<z>
);<z>
_nextColumnToWrite;<z>
;<z>
] tokenNames) {<z>
new HashMap<String, Integer>();<z>
tokenNames==null ) {<z>
return m;<z>
ttype++) {<z>
[ttype];<z>
m.put(name, ttype);<z>
;<z>
public void divideUpPredicateLists(<z>
Optimizable innerTable,<z>
,<z>
storeRestrictionList,<z>
,<z>
,<z>
StandardException<z>
.copyPredicatesToOtherList(<z>
;<z>
cd =<z>
.getConglomerateDescriptor();<z>
transferPredicates(<z>
innerTable.getReferencedTableMap(),<z>
);<z>
0; i--)<z>
.getOptPredicate(i);<z>
())<z>
i);<z>
i >= 0; i--)<z>
p1 =<z>
i);<z>
p1.isStoreQualifier())<z>
;<z>
(<z>
;<z>
= innerTable;<z>
ProjectRestrictNode)<z>
prn = (ProjectRestrictNode) innerTable;<z>
) instanceof Optimizable)<z>
getChildResult());<z>
int[] hashKeyColumns = findHashKeyColumns(hashTableFor,<z>
);<z>
(hashKeyColumns != null)<z>
setHashKeyColumns(hashKeyColumns);<z>
name;<z>
null && cd.isIndex())<z>
name = cd.getConglomerateName();<z>
getBaseTableName();<z>
.newException(SQLState.LANG_HASH_NO_EQUIJOIN_FOUND,<z>
);<z>
markAllPredicatesQualifiers();<z>
;<z>
cd != null && cd.isIndex())<z>
; index < hashKeyColumns.length; index++)<z>
index] =<z>
[index]];<z>
index++)<z>
] + 1;<z>
0; index--)<z>
(<z>
);<z>
) {<z>
;<z>
null;<z>
{<z>
if (getEnabledHitChecking()) {<z>
getHitValue();<z>
e) {<z>
;<z>
errorMessage = BreakpointMessages.InvalidNumberOfHits;<z>
;<z>
);<z>
)<z>
throws SAXException {<z>
2;<z>
.length();<z>
{<z>
fTagCharacters++;<z>
fOtherCharacters += data.length();<z>
+= 2;<z>
public boolean versionDiffers() {<z>
myVersionDiffers;<z>
{<z>
cached;<z>
DataInputStream(new FileInputStream(myVersionFile));<z>
VERSION;<z>
diff;<z>
;<z>
close();<z>
{<z>
;<z>
) {<z>
(ex);<z>
;<z>
stamped) {<z>
: classes.values()) {<z>
if (aClass.checkOnTime(stamped)) {<z>
return true;<z>
false;<z>
httpMethod) throws Exception<z>
httpMethod instanceof HttpGet && request.followRedirects())<z>
);<z>
.getParams(), false);<z>
isEmpty())<z>
new RuntimeException("You cannot send both form parameters and an entity body");<z>
.getFormParameters().isEmpty())<z>
, httpMethod);<z>
HttpPost) httpMethod;<z>
= new ArrayList<NameValuePair>();<z>
().entrySet())<z>
getValue();<z>
values)<z>
;<z>
;<z>
setEntity(entity);<z>
(request.getBody() != null)<z>
);<z>
entity = buildEntity(request);<z>
= (HttpPost) httpMethod;<z>
request, httpMethod);<z>
post.setEntity(entity);<z>
catch (IOException e)<z>
new RuntimeException(e);<z>
;<z>
exchange, MongoDbOperation operation) {<z>
);<z>
answer, false);<z>
&& endpoint.isWriteResultAsHeader()) {<z>
));<z>
answer;<z>
public static void onOpen(Screen screen) {<z>
;<z>
isRegistered());<z>
true);<z>
()<z>
node.getNodeName();<z>
String nodeValue = node.getNodeValue();<z>
))<z>
+ " = " + nodeValue;<z>
;<z>
_column ) throws cfmRunTimeException{<z>
= false;<z>
tables.length; i++ ){<z>
].containsColumn( _column ) ) {<z>
exists ){<z>
("errorCode.expressionError",<z>
String[]{_column} ) );<z>
{<z>
true;<z>
exists;<z>
throws NoSuchVerseException {<z>
== null) {<z>
));<z>
.getBook();<z>
getEnd().getChapter();<z>
, chapter, parts[0]);<z>
(original, book, chapter, verse);<z>
String[] weekdaysShort() {<z>
return new String[] {<z>
public final void rule__XAndExpression__Group_1_0_0__0__Impl() throws RecognitionException {<z>
keepStackSize();<z>
backtracking==0 ) {<z>
.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0());<z>
{<z>
;<z>
(stackSize);<z>
Player player, String spellName) {<z>
);<z>
spell == null) {<z>
);<z>
if (spell == null) {<z>
return false;<z>
;<z>
!spellbook.canLearn(spell)) {<z>
false;<z>
} else {<z>
OTHER, null);<z>
.getPluginManager().callEvent(event);<z>
if (event.isCancelled()) {<z>
;<z>
{<z>
addSpell(spell);<z>
.save();<z>
true;<z>
public Pipeline getPipeline(PipelineStage stage) {<z>
pipe : pipelines) {<z>
).contains(stage)) return pipe;<z>
null;<z>
void doGenerateText(SNode node) {<z>
SPropertyOperations.getString(node, "name"));<z>
) {<z>
(" extends ");<z>
));<z>
node, "auxBounds", true)) {<z>
" & ");<z>
);<z>
[] isScrap) {<z>
] = false;<z>
;<z>
getTransientStateView(position);<z>
!= null) {<z>
;<z>
.getScrapView(position);<z>
View child;<z>
(scrapView != null) {<z>
getView(position, scrapView, this);<z>
IMPORTANT_FOR_ACCESSIBILITY_AUTO) {<z>
;<z>
(child != scrapView) {<z>
scrapView, position);<z>
!= 0) {<z>
mCacheColorHint);<z>
else {<z>
= true;<z>
();<z>
else {<z>
getView(position, null, this);<z>
== IMPORTANT_FOR_ACCESSIBILITY_AUTO) {<z>
(IMPORTANT_FOR_ACCESSIBILITY_YES);<z>
{<z>
.setDrawingCacheBackgroundColor(mCacheColorHint);<z>
mAdapterHasStableIds) {<z>
();<z>
;<z>
(vlp == null) {<z>
) generateDefaultLayoutParams();<z>
!checkLayoutParams(vlp)) {<z>
vlp);<z>
else {<z>
(LayoutParams) vlp;<z>
.itemId = mAdapter.getItemId(position);<z>
lp);<z>
).isEnabled()) {<z>
== null) {<z>
mAccessibilityDelegate = new ListItemAccessibilityDelegate();<z>
;<z>
child;<z>
configureFromTemplate(InputStream templateIn, Object model) {<z>
Reader reader = null;<z>
templateIn, "UTF-8");<z>
(reader, model);<z>
catch (UnsupportedEncodingException e) {<z>
new IllegalStateException("This vm does not support UTF-8 encoding.", e);<z>
{<z>
);<z>
);<z>
(final HornetQBuffer buffer)<z>
.writeByte(journalID);<z>
);<z>
;<z>
.writeByte(recordType);<z>
.writeInt(encodingData.getEncodeSize());<z>
;<z>
) {<z>
= -1;<z>
= getCellSelectionModel().getSelectCell();<z>
null) {<z>
;<z>
;<z>
{<z>
);<z>
} catch (Exception e) {<z>
create_vars() {<z>
) {<z>
HMethod) it.next();<z>
;<z>
, new Var());<z>
());<z>
if(STATS) nb_var++;<z>
Runnable() {<z>
) {<z>
;<z>
final boolean visitEnter( DependencyNode node )<z>
boolean recurse = true;<z>
);<z>
== null )<z>
clone = clone( node );<z>
.put( node, clone );<z>
false;<z>
);<z>
)<z>
= clone;<z>
add( clone );<z>
;<z>
return recurse;<z>
void setHeight( Float height )<z>
;<z>
resetImageInfo();<z>
, String path, int index) {<z>
] tokens = path.split("/");<z>
{<z>
)==0)<z>
append(s).append(",");<z>
;<z>
) {<z>
);<z>
this);<z>
fCommandControl.removeEventListener(this);<z>
super.shutdown(requestMonitor);<z>
EntityManager initEntityManager() {<z>
();<z>
ERROR);<z>
== null) {<z>
HashMap();<z>
.getAee_DB_pwd());<z>
());<z>
("hibernate.connection.username", Aee.getAee_DB_user());<z>
PERSISTENCE_UNIT, addedOrOverridenProperties);<z>
;<z>
em;<z>
{<z>
Diff oldSemanticDiff = semanticDiff;<z>
semanticDiff = newSemanticDiff;<z>
))<z>
semanticDiff));<z>
Hash randomKey, int subTierMode) {<z>
());<z>
{<z>
);<z>
!= null && toExclude.contains(peer))<z>
peer))<z>
if (_us.equals(peer))<z>
int subTier = getSubTier(peer, randomKey);<z>
4) {<z>
0x03))<z>
{<z>
) != (subTierMode & 0x01))<z>
(peer);<z>
if (ok)<z>
.add(peer);<z>
peer);<z>
, long timeout,<z>
filter )<z>
, className, filter );<z>
);<z>
.waitForService( timeout );<z>
== null )<z>
throw new ServiceLookupException( "gave up waiting for service " + className );<z>
) );<z>
catch ( InterruptedException exc )<z>
throw new ServiceLookupException( exc );<z>
close();<z>
(ContentValues values, String userWhere) {<z>
usernames.size();<z>
= nicknames.size();<z>
(usernameCount != nicknameCount) {<z>
.e(LOG_TAG, "[ImProvider] updateBulkContacts: input bundle " +<z>
"username & nickname lists have diff. length!");<z>
> subscriptionStatusArray =<z>
.SUBSCRIPTION_STATUS);<z>
<String> subscriptionTypeArray =<z>
Contacts.SUBSCRIPTION_TYPE);<z>
Contacts.QUICK_CONTACT);<z>
Im.Contacts.REJECTED);<z>
= mOpenHelper.getWritableDatabase();<z>
int sum = 0;<z>
Contacts.PROVIDER);<z>
String[1];<z>
usernames.get(i);<z>
int subscriptionType = 0;<z>
rejected = 0;<z>
contactTypeArray.get(i));<z>
subscriptionStatusArray.get(i));<z>
(subscriptionTypeArray.get(i));<z>
parseInt(quickContactArray.get(i));<z>
get(i));<z>
(NumberFormatException ex) {<z>
) log("updateBulkContacts[" + i + "] username=" +<z>
+ nickname + ", type=" + type +<z>
", subscriptionType=" +<z>
.Contacts.USERNAME, username);<z>
(Im.Contacts.NICKNAME, nickname);<z>
.SUBSCRIPTION_STATUS, subscriptionStatus);<z>
Contacts.SUBSCRIPTION_TYPE, subscriptionType);<z>
, quickContact);<z>
.append(" AND ");<z>
updateSelectionArgs[0] = username;<z>
.update(TABLE_CONTACTS, contactValues,<z>
if (numUpdated == 0) {<z>
LOG_TAG, "[ImProvider] updateBulkContacts: " +<z>
yieldIfContended();<z>
.setTransactionSuccessful();<z>
) log("updateBulkContacts: " + sum + " entries updated");<z>
) {<z>
.nativeMetadataFormatName,<z>
IIOMetadataFormatImpl.CHILD_POLICY_ALL);<z>
.REGION_DESCRIPTOR,<z>
CHILD_POLICY_EMPTY);<z>
REGION_DESCRIPTOR, GrassBinaryImageMetadata.NORTH,<z>
DATATYPE_DOUBLE, true, null);<z>
GrassBinaryImageMetadata.SOUTH,<z>
;<z>
, GrassBinaryImageMetadata.EAST,<z>
);<z>
WEST,<z>
DATATYPE_DOUBLE, true, null);<z>
XRES,<z>
, null);<z>
(GrassBinaryImageMetadata.REGION_DESCRIPTOR, GrassBinaryImageMetadata.YRES,<z>
DATATYPE_DOUBLE, true, null);<z>
NO_DATA,<z>
);<z>
NROWS,<z>
;<z>
.NCOLS,<z>
null);<z>
,<z>
CHILD_POLICY_EMPTY);<z>
COLOR_RULES_DESCRIPTOR,<z>
.COLOR_RULES_DESCRIPTOR, DATATYPE_STRING, false, null);<z>
,<z>
);<z>
,<z>
, DATATYPE_STRING, false, null);<z>
(@NotNull PDF pdf)<z>
)<z>
false;<z>
();<z>
) {<z>
= new Node();<z>
= graphml;<z>
;<z>
= first;<z>
Preferences node(String pathName) {<z>
(pathName))<z>
;<z>
catch (BackingStoreException e) {<z>
);<z>
;<z>
);<z>
return child;<z>
Picture picture, Rect dst) {<z>
save();<z>
.top);<z>
picture.getHeight() > 0) {<z>
),<z>
));<z>
);<z>
();<z>
portletId)<z>
{<z>
long averageTime = 0;<z>
> companyStatisticsSet =<z>
);<z>
CompanyStatistics companyStatistics : companyStatisticsSet) {<z>
requestStatistics =<z>
);<z>
();<z>
.size();<z>
public static double has( Player player ) {<z>
double total = 0.0;<z>
) ) {<z>
() == 0 )<z>
stack = new SpoutItemStack( s );<z>
isCustomItem() )<z>
.getMaterial().getName() );<z>
== null )<z>
value * stack.getAmount() );<z>
;<z>
) throws GitAPIException, ConcurrentRefUpdateException,<z>
NoHeadException {<z>
;<z>
getRepositoryState();<z>
);<z>
newTag = new TagBuilder();<z>
name);<z>
;<z>
(tagger);<z>
if (id == null) {<z>
HEAD + "^{commit}");<z>
(objectId == null)<z>
new NoHeadException(<z>
JGitText.get().tagOnRepoWithoutHEADCurrentlyNotSupported);<z>
Constants.OBJ_COMMIT);<z>
{<z>
setObjectId(id);<z>
repo.newObjectInserter();<z>
ObjectId tagId = inserter.insert(newTag);<z>
;<z>
(repo);<z>
;<z>
;<z>
tagRef.setNewObjectId(tagId);<z>
;<z>
"tagged " + name, false);<z>
);<z>
(updateResult) {<z>
case NEW:<z>
FORCED:<z>
getRef(refName);<z>
:<z>
new ConcurrentRefUpdateException(<z>
,<z>
updateResult);<z>
format(<z>
JGitText.get().updatingRefFailed, refName,<z>
), updateResult));<z>
finally {<z>
();<z>
{<z>
inserter.release();<z>
catch (IOException e) {<z>
(<z>
get().exceptionCaughtDuringExecutionOfTagCommand,<z>
;<z>
PEARPlus_AS() {<z>
new ArrayList<AdminEntityDTO>();<z>
111, 11, "Logo"));<z>
112, 11, "Ndikpa"));<z>
));<z>
);<z>
pAttributes, final MapHandler pMapHandler){<z>
.parent = pParent;<z>
;<z>
.attributes = pAttributes;<z>
= pMapHandler;<z>
[] longTOfloat(long[] aa){<z>
;<z>
float[n];<z>
{<z>
;<z>
;<z>
visitor) {<z>
waypoints != null) {<z>
(WayPoint wpt : data.waypoints) {<z>
);<z>
element) {<z>
null) {<z>
Collections.emptyList();<z>
;<z>
element.getNextSibling()) != null) {<z>
element);<z>
.isEmpty() &&<z>
1), GoElementTypes.pRCURLY)) {<z>
1);<z>
!siblings.isEmpty() &&<z>
.size() - 1))) {<z>
1);<z>
siblings.isEmpty() &&<z>
))) {<z>
;<z>
;<z>
() {<z>
0;<z>
void loadLibrary(String library) {<z>
= System.mapLibraryName(library);<z>
;<z>
(fullFilename);<z>
) {<z>
getClassLoader().getResourceAsStream(filename);<z>
{<z>
throw new IOException(filename + " not found in the jar file (classpath)");<z>
];<z>
new FileOutputStream(fullFilename);<z>
read;<z>
{<z>
buffer, 0, read);<z>
close();<z>
;<z>
);<z>
);<z>
ioe) {<z>
;<z>
(CompositeCacheEvent compositeEvent){<z>
)<z>
= true;<z>
!isShowing())<z>
)) {<z>
);<z>
public void eUnset(int featureID) {<z>
(featureID) {<z>
:<z>
((Expression)null);<z>
.eUnset(featureID);<z>
public Java15Parser(ParserSharedInputState state) {<z>
(state,2);<z>
= _tokenNames;<z>
();<z>
);<z>
.kaleo.model.KaleoInstance> findByCompanyId(<z>
long companyId)<z>
{<z>
findByCompanyId(companyId);<z>
)<z>
filter);<z>
for (File file : files)<z>
to, file.getName());<z>
file.isDirectory())<z>
());<z>
.exists())<z>
.mkdirs();<z>
copyTree(file, sibling);<z>
sibling.getCanonicalPath());<z>
= copyFile(file, sibling);<z>
.byteCountToDisplaySize(result) + " copied" : "error";<z>
;<z>
, int featureID, NotificationChain msgs) {<z>
featureID) {<z>
LINE_BORDER__COLOR:<z>
basicSetColor(null, msgs);<z>
, featureID, msgs);<z>
int off, int len)<z>
{<z>
if (storageDir != null)<z>
msg, off, len,<z>
new File(<z>
()),<z>
, "_NULL_")));<z>
tpls == null)<z>
.AA, null).getBytes(null)<z>
(msh, msg, off, len);<z>
(IBond cdkBond) {<z>
();<z>
(cmlBond);<z>
).length() == 0) {<z>
hashCode());<z>
} else {<z>
cdkBond.getID());<z>
getAtomCount()];<z>
++) {<z>
(i).getID();<z>
.length() == 0) {<z>
);<z>
} else {<z>
[i] = atomID;<z>
== 2) {<z>
setAtomRefs2(atomRefArray);<z>
else {<z>
(atomRefArray);<z>
.getOrder();<z>
border == CDKConstants.BONDORDER_SINGLE) {<z>
"S");<z>
) {<z>
("D");<z>
if (border == CDKConstants.BONDORDER_TRIPLE) {<z>
"T");<z>
{<z>
= new CMLScalar();<z>
);<z>
setDictRef("cdk:bondOrder");<z>
);<z>
+1);<z>
appendChild(scalar);<z>
(CDKConstants.ISAROMATIC)) {<z>
);<z>
;<z>
bType);<z>
Stereo.UP ||<z>
IBond.Stereo.DOWN) {<z>
;<z>
this.checkPrefix(bondStereo);<z>
{<z>
setDictRef("cml:W");<z>
);<z>
} else {<z>
);<z>
"H");<z>
;<z>
> 0) writeProperties(cdkBond, cmlBond);<z>
.keySet().iterator();<z>
()) {<z>
(elements.next());<z>
.customize(cdkBond, cmlBond);<z>
{<z>
"Error while customizing CML output with customizer: ",<z>
.getName());<z>
exception);<z>
;<z>
Plugin plugin) {<z>
equalsIgnoreCase("iconomy")<z>
equals("com.nijiko.coelho.iConomy.iConomy")<z>
instanceof iConomy;<z>
Lock lock,<z>
) {<z>
;<z>
) {<z>
query = new StringBundler(6 +<z>
getOrderByFields().length * 6));<z>
StringBundler(3);<z>
;<z>
== null) {<z>
(_FINDER_COLUMN_UUID_UUID_1);<z>
(StringPool.BLANK)) {<z>
_FINDER_COLUMN_UUID_UUID_3);<z>
append(_FINDER_COLUMN_UUID_UUID_2);<z>
orderByComparator != null) {<z>
getOrderByFields();<z>
{<z>
);<z>
; i++) {<z>
;<z>
.append(orderByFields[i]);<z>
+ 1) < orderByFields.length) {<z>
^ previous) {<z>
);<z>
append(WHERE_LESSER_THAN_HAS_NEXT);<z>
(orderByComparator.isAscending() ^ previous) {<z>
WHERE_GREATER_THAN);<z>
;<z>
.append(ORDER_BY_CLAUSE);<z>
i < orderByFields.length; i++) {<z>
query.append(_ORDER_BY_ENTITY_ALIAS);<z>
[i]);<z>
< orderByFields.length) {<z>
.isAscending() ^ previous) {<z>
);<z>
append(ORDER_BY_DESC_HAS_NEXT);<z>
isAscending() ^ previous) {<z>
query.append(ORDER_BY_ASC);<z>
ORDER_BY_DESC);<z>
sql = query.toString();<z>
);<z>
.setFirstResult(0);<z>
.setMaxResults(2);<z>
getInstance(q);<z>
!= null) {<z>
uuid);<z>
(orderByComparator != null) {<z>
getOrderByValues(lock);<z>
) {<z>
;<z>
.list();<z>
) == 2) {<z>
);<z>
;<z>
(String encoded) {<z>
String key = encoded;<z>
;<z>
= key.replace("\\n", "\n");<z>
"\\");<z>
return encoded;<z>
{<z>
;<z>
smm.getResources();<z>
List items = new ArrayList();<z>
(null) {<z>
void actionPerformed(ActionEvent ae) {<z>
)) {<z>
setStationModel((StationModel) theObject, true);<z>
GuiUtils.makeMenu(stationModelMenu,<z>
smm));<z>
() {<z>
)) {<z>
new RuntimeException("Cannnot get visible length for a word-wrapped Editable Label");<z>
{<z>
;<z>
final IProject project) throws InvocationTargetException, InterruptedException {<z>
project == null)<z>
= new AbstractBaseAccessValidator() {<z>
IResource> getReadableFiles() {<z>
= new ArrayList<IResource>();<z>
project.getName()));<z>
;<z>
Exception e) {<z>
e);<z>
return new ArrayList<IResource>(1);<z>
) {<z>
emptyList();<z>
());<z>
validationResult);<z>
{<z>
), "Error",<z>
Throwable)null);<z>
{<z>
RealType.getRealType("1D");<z>
{vis_xcoord};<z>
= new RealTupleType(vis_array);<z>
} };<z>
sampG, 8);<z>
};<z>
iSet = new Irregular1DSet(vis_tuple, sampI);<z>
] sets = {gSet, iSet};<z>
;<z>
"UnionSet created.");<z>
));<z>
;<z>
System.out.println("indexToValue test:");<z>
9, 12, 6, 15};<z>
value1 = uSet.indexToValue(index1);<z>
; i++) {<z>
[0][i]);<z>
) {<z>
[i]);<z>
.out.println(")");<z>
System.out.println("-----------------");<z>
("valueToIndex test:");<z>
, 103f, 37f, 77f} };<z>
value2);<z>
length; i++) {<z>
[i]);<z>
length; j++) {<z>
[i]);<z>
index2[i]);<z>
out.println("-----------------");<z>
.println("valueToInterp test:");<z>
.length;<z>
[n][];<z>
new float[n][];<z>
indices, weights);<z>
{<z>
0][i]);<z>
j<value2.length; j++) {<z>
][i]);<z>
(")\t==>");<z>
0) {<z>
" missing");<z>
].length;<z>
j<m; j++) {<z>
i][j] + ")");<z>
;<z>
System.out.println();<z>
{<z>
int maxWidth = getMaxWidth();<z>
diameter + xSpace) * maxWidth) / 2;<z>
){<z>
16; x++){<z>
{<z>
++){<z>
))];<z>
0){<z>
()[y >> 4];<z>
)<z>
4);<z>
0xf, z, block);<z>
) {<z>
min;<z>
max;<z>
beforeFirst = true;<z>
public void earlyStartup()<z>
RELEASE_NOTES_URL_SYSTEM_PROPERTY, "http://www.radrails.org/tools/radrails/releasenotes/");<z>
Activator.PLUGIN_ID).put(<z>
IPreferenceConstants.REMOTE_PLUGIN_LISTING_URL, RADRAILS_PLUGINS_XML_URL);<z>
getBundle(), new Path(<z>
), null);<z>
null)<z>
put(<z>
IPreferenceConstants.LOCAL_PLUGIN_LISTING_URL,<z>
());<z>
.PLUGIN_ID);<z>
(<z>
.ide.update.IPreferenceConstants.RELEASE_MESSAGE_URL_PREFIX,<z>
);<z>
flush();<z>
{<z>
);<z>
.INTRO_EDITOR_ID, MyRadRailsEditor.ID);<z>
.IPreferenceConstants.INTRO_TOOLBAR_IMAGE_LOCATION,<z>
;<z>
flush();<z>
BackingStoreException e)<z>
;<z>
;<z>
GETTING_STARTED_CONTENT_URL, RADRAILS_GETTING_STARTED_URL);<z>
docPluginPrefs.flush();<z>
)<z>
printStackTrace();<z>
getConnection(String url, String user,<z>
{<z>
theProperties = new Properties();<z>
user) {<z>
"user", user);<z>
{<z>
password);<z>
(url, theProperties);<z>
Graphics2D g)<z>
.setColor(Color.BLUE);<z>
;<z>
Font.PLAIN, 20));<z>
saveButtons)<z>
g.setColor(Color.WHITE);<z>
saveButton.getArea());<z>
setColor(Color.BLACK);<z>
y);<z>
setColor(Color.RED);<z>
.fill(saveButton.getDelete());<z>
config, String endpoint,<z>
NetworkField> fields)<z>
null);<z>
void addLoadedPk(Object pk) {<z>
if (loaded) {<z>
, pk);<z>
changeValue(pk);<z>
() {<z>
ArrayList dbAccounts = database.getAccounts();<z>
new ArrayList();<z>
) {<z>
AccountInformation) dbAccounts.get(i);<z>
getAccountName();<z>
;<z>
;<z>
(String type) throws FinderException {<z>
.idoCheckOutPooledEntity();<z>
);<z>
;<z>
(ids);<z>
(GeoPolyLine geo) {<z>
getPoints();<z>
;<z>
points.length; i++){<z>
points[i].getX(),<z>
].getY(),<z>
i].getZ();<z>
;<z>
(y),code);<z>
)<z>
;<z>
;<z>
, String propertyName, Object data)<z>
throws CoreException {<z>
) data);<z>
(IllegalArgumentException ex) {<z>
() {<z>
new ArrayList<Bundle>();<z>
;<z>
rawQuery("SELECT " + KEY_LINK + " FROM "<z>
TABLE_BLOCKED_RESULTS, null);<z>
.moveToFirst()) {<z>
cursor.getString(0);<z>
();<z>
bundle.putString("link", link);<z>
"title", link.substring(7));<z>
linkList.add(bundle);<z>
.moveToNext());<z>
);<z>
return linkList;<z>
Object[],<z>
IOException {<z>
[ 0 ];<z>
1 ];<z>
value );<z>
( !result )<z>
false;<z>
().setTuple(key.tuple);<z>
return true;<z>
updatescenariosgroupstable(){<z>
;<z>
newname;<z>
();<z>
.readTree(scenarios);<z>
<String>();<z>
();<z>
);i++){<z>
0) );<z>
table_scenariosgroups.getValueAt(i,1) );<z>
<String>();<z>
;<z>
.size();i++){<z>
.scenarioName;<z>
= oldnames.indexOf(newname);<z>
.add(newname);<z>
(ind<0)<z>
newgroups.add("");<z>
(oldgroups.get(ind));<z>
;<z>
stopTimerAndUpdateElapsedTime() {<z>
getTimerStart() == null)<z>
getTime();<z>
;<z>
currentTimeMillis() - start)/1000;<z>
) + secondsElapsed));<z>
(FormToolkit widgetFactory, Composite parent) {<z>
() {<z>
{ addToAfter(); }<z>
{ editToAfter(element); }<z>
); }<z>
element); }<z>
(EObject element) { }<z>
;<z>
Properties.toAfter, UmlViewsRepository.FORM_KIND));<z>
createControls(parent, widgetFactory);<z>
(new SelectionAdapter() {<z>
public void widgetSelected(SelectionEvent e) {<z>
instanceof EObject) {<z>
e.item.getData()));<z>
);<z>
;<z>
.horizontalSpan = 3;<z>
;<z>
this.toAfter.disableMove();<z>
(UmlViewsRepository.ExecutionOccurrenceSpecification.Properties.toAfter);<z>
setEEFType("eef::AdvancedReferencesTable");<z>
parent;<z>
SNodePointer> getCandidates() {<z>
boolean needsUpdate;<z>
{<z>
null;<z>
(needsUpdate) {<z>
{<z>
{<z>
();<z>
().runReadAction(new Runnable() {<z>
) {<z>
TestNodeWrapperFactory.getWrappedRootConcepts())) {<z>
));<z>
});<z>
{<z>
new ArrayList<ITestNodeWrapper>());<z>
) {<z>
{<z>
{<z>
tryToWrap(testCase);<z>
== null) {<z>
()));<z>
;<z>
{<z>
.myCandidates = methodsList;<z>
else {<z>
) {<z>
) {<z>
{<z>
<SNode, ITestNodeWrapper>() {<z>
it) {<z>
tryToWrap(it);<z>
IWhereFilter<ITestNodeWrapper>() {<z>
boolean accept(ITestNodeWrapper it) {<z>
null;<z>
();<z>
;<z>
, false, myProject);<z>
) {<z>
;<z>
() {<z>
(ITestNodeWrapper it) {<z>
.getNodePointer();<z>
;<z>
public void init() {<z>
;<z>
String, String>();<z>
"userName", "");<z>
put("userEid", "");<z>
"");<z>
, "");<z>
);<z>
"");<z>
"");<z>
put("productionSiteName", "");<z>
("newNonOfficialAccount", "false");<z>
.put("newPassword", "");<z>
"productionSiteName", "");<z>
;<z>
);<z>
() {<z>
return new URI(m_path);<z>
} catch (URISyntaxException e) {<z>
return null;<z>
buffer,<z>
) {<z>
;) {<z>
buffer.append(' ');<z>
{<z>
.getWorkspaceName();<z>
equals(workspaceName)) {<z>
workspaceName = null;<z>
repository, workspaceName);<z>
(repSession == null) {<z>
("Could not to retrieve a repository session.");<z>
false;<z>
repSession);<z>
request + "'");<z>
request.setDavSession(ds);<z>
true;<z>
NoSuchWorkspaceException e) {<z>
JcrDavException(e, DavServletResponse.SC_NOT_FOUND);<z>
RepositoryException e) {<z>
e);<z>
catch (ServletException e) {<z>
));<z>
(String pid) {<z>
>();<z>
.listConfigurations("(service.pid=" + pid + ")");<z>
&& configuration.length > 0) {<z>
].getProperties();<z>
dictionary != null) {<z>
.keys();<z>
)) {<z>
(String) keyEnumeration.nextElement();<z>
);<z>
IOException e) {<z>
pid);<z>
{<z>
,pid);<z>
;<z>
throws ServletException {<z>
);<z>
;<z>
"userid");<z>
"passwd");<z>
"LoginController:: "+userid);<z>
(Util.ATTR_UPDATING);<z>
String results= null;<z>
validateString(userid)){<z>
= login.verifyUserAndPassword(userid, passwd);<z>
= "\nEmail address was invalid.";<z>
userid);<z>
)<z>
))<z>
);<z>
.ATTR_RESULTS, results);<z>
ACTION_LOGIN;<z>
) != null)<z>
.removeAttribute(Util.ATTR_CART);<z>
;<z>
session.removeAttribute(Util.ATTR_CHECKOUT);<z>
Util.ATTR_ORDERKEY);<z>
login.getCustomerInfo(userid);<z>
.ATTR_CUSTOMER, customerInfo);<z>
"updating=" + updating + "=");<z>
))<z>
, customerInfo);<z>
ACTION_ACCOUNT;<z>
) session.getAttribute(Util.ATTR_CHECKOUT);<z>
+ "=");<z>
)<z>
);<z>
ACTION_ORDERINFO;<z>
("must NOT be checking out");<z>
;<z>
(Util.ATTR_CATEGORY);<z>
);<z>
equals("null")))<z>
ACTION_PROMO_HTML;<z>
= ACTION_SHOPPING;<z>
.setAttribute(Util.ATTR_INVITEMS,<z>
.parseInt(category)));<z>
;<z>
catch (Exception e)<z>
Util.ATTR_RESULTS, "/nException occurred");<z>
printStackTrace();<z>
;<z>
] args) {<z>
("Forms Tutorial :: Plain Building");<z>
buildPanel());<z>
packAndShowOnScreenCenter(frame);<z>
int arg0,<z>
arg1,<z>
arg2,<z>
)<z>
.getTime();<z>
);<z>
, final TableItem item) {<z>
NONE);<z>
)) {<z>
));<z>
{<z>
public void modifyText(ModifyEvent e) {<z>
editorX.getEditor();<z>
String newText = text.getText();<z>
if (mark != null) {<z>
(newText);<z>
(value);<z>
cmd.evalPrecondition();<z>
refreshMapGraphicLayer();<z>
) {<z>
"")) {<z>
setXCoord(Double.NaN);<z>
else {<z>
getXCoord());<z>
;<z>
();<z>
.setText(1, newText);<z>
);<z>
() {<z>
keyReleased(KeyEvent e) {<z>
) {<z>
e);<z>
ex) {<z>
;<z>
);<z>
.selectAll();<z>
;<z>
editorColumnX, item, 1);<z>
incrementCount()<z>
++;<z>
modified = true;<z>
) {<z>
this.end_cep = end_cep;<z>
.end_descricao = end_descricao;<z>
end_bairro;<z>
this.end_tipologradouro = end_tipologradouro;<z>
.cidade = cidade;<z>
() {<z>
.roleBase);<z>
index, IEObjectConsumer inst) {<z>
{<z>
0, inst);<z>
(lastRuleCallOrigin, this, 1, inst);<z>
;<z>
Graphics graphics, String string, int line)<z>
,<z>
y + (line * HEIGHT));<z>
] fetchAvailableTasks(Map parameters) {<z>
Query q = buildQuery(parameters);<z>
, FETCH_FIRST, -1);<z>
, FETCH_MAX, -1);<z>
if (max > 0)<z>
;<z>
first >= 0)<z>
(first);<z>
result = q.getResultList();<z>
)]);<z>
final Date nowDate, final boolean brief)<z>
("");<z>
theDate.getTime();<z>
)<z>
getDay();<z>
1 || dayOfWeekDelta == 1 - 7)<z>
if (brief)<z>
return "Yesterday";<z>
"Yesterday at ");<z>
;<z>
);<z>
if (deltaMilliseconds < MILLISECONDS_PER_MINUTE)<z>
sb.append("Less than one minute ago");<z>
MILLISECONDS_PER_MINUTE)<z>
;<z>
(deltaMilliseconds < MILLISECONDS_PER_HOUR)<z>
/ MILLISECONDS_PER_MINUTE);<z>
;<z>
MILLISECONDS_PER_HOUR)<z>
);<z>
< MILLISECONDS_PER_DAY)<z>
sb.append(deltaMilliseconds / MILLISECONDS_PER_HOUR);<z>
.append(" hours ago");<z>
getDay())<z>
theDate);<z>
nowDate.getYear());<z>
brief)<z>
sb.append(" at ");<z>
;<z>
return sb.toString();<z>
{<z>
.in);<z>
= in.nextInt();<z>
testCount; ++test) {<z>
in.nextInt();<z>
1;<z>
ArrayList<Integer>(pieCount);<z>
0; i < pieCount; ++i) {<z>
.add(in.nextInt());<z>
.sort(pies);<z>
= 0;<z>
i >= 0; --i) {<z>
;<z>
);<z>
,2)/friendCount) {<z>
pie;<z>
;<z>
Node node, Edge from) {<z>
{<z>
from.getOpposite(node);<z>
.get(source).x;<z>
.y;<z>
) {<z>
{<z>
;<z>
;<z>
RIGHT) {<z>
;<z>
Direction2D.LEFT) {<z>
.get(from);<z>
dart) == Direction2D.UP) {<z>
).get(from);<z>
Direction2D.DOWN) {<z>
fromMap(myLenghts).get(from);<z>
Point(x, y));<z>
msgs) {<z>
switch (featureID) {<z>
case JcaPackage.DOCUMENT_ROOT__MIXED:<z>
;<z>
case JcaPackage.DOCUMENT_ROOT__XMLNS_PREFIX_MAP:<z>
otherEnd, msgs);<z>
case JcaPackage.DOCUMENT_ROOT__XSI_SCHEMA_LOCATION:<z>
, msgs);<z>
case JcaPackage.DOCUMENT_ROOT__BINDING_JCA:<z>
return basicSetBindingJca(null, msgs);<z>
:<z>
msgs);<z>
.DOCUMENT_ROOT__MESSAGE_COMPOSER:<z>
(null, msgs);<z>
eInverseRemove(otherEnd, featureID, msgs);<z>
private GeronimoRuntimeDelegate getRuntimeDelegate() {<z>
(TaskModel.TASK_RUNTIME);<z>
if (wc == null)<z>
return null;<z>
));<z>
ruleXExpressionInClosure() throws RecognitionException {<z>
null;<z>
null;<z>
null;<z>
;<z>
0 ) {<z>
= forceCreateModelElement(<z>
.getXBlockExpressionAction_0(),<z>
;<z>
=2;<z>
= input.LA(1);<z>
<=73)) ) {<z>
;<z>
switch (alt44) {<z>
1 :<z>
backtracking==0 ) {<z>
getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0());<z>
FOLLOW_ruleXExpressionInsideBlock_in_ruleXExpressionInClosure6373);<z>
=ruleXExpressionInsideBlock();<z>
--;<z>
(state.failed) return current;<z>
0 ) {<z>
current==null) {<z>
.getXExpressionInClosureRule());<z>
"XExpressionInsideBlock");<z>
afterParserOrEnumRuleCall();<z>
;<z>
.LA(1);<z>
( (LA43_0==52) ) {<z>
alt43=1;<z>
switch (alt43) {<z>
case 1 :<z>
; if (state.failed) return current;<z>
backtracking==0 ) {<z>
.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());<z>
loop44;<z>
true);<z>
{<z>
leaveRule();<z>
) {<z>
re);<z>
appendSkippedTokens();<z>
return current;<z>
File file, List<String> lines)<z>
{<z>
out = null;<z>
;<z>
for (String line : lines) {<z>
(line);<z>
finally {<z>
!= null) {<z>
close();<z>
int spellCooldown, int spellCategory, int spellCategoryCooldown)<z>
= spellId;<z>
spellTrigger = spellTrigger;<z>
.spellCharges = spellCharges;<z>
spellCategory;<z>
= spellCategoryCooldown;<z>
protected void finalize() throws Throwable {<z>
{<z>
);<z>
IOException("someone forgot to close MicrophoneInputStream");<z>
void init() {<z>
() != null) {<z>
getRootElement());<z>
static String getString( Object object )<z>
== null )<z>
return null;<z>
( );<z>
{<z>
;<z>
getPath();<z>
DartModelException ex) {<z>
ex);<z>
handleProfileClick(final SipProfile profile) {<z>
uid = profile.getCallingUid();<z>
{<z>
);<z>
this)<z>
alert_dialog_close)<z>
R.drawable.ic_dialog_alert)<z>
.setPositiveButton(R.string.close_profile,<z>
) {<z>
{<z>
(profile);<z>
;<z>
android.R.string.cancel, null)<z>
();<z>
Map objectNameMap, COSStream stream) throws IOException<z>
ByteArrayOutputStream(10240);<z>
;<z>
read;<z>
);<z>
> -1)<z>
, 0, read);<z>
toByteArray();<z>
ByteArrayOutputStream(buf.length + 100);<z>
= new StringBuffer(10);<z>
false;<z>
= false;<z>
bInEscape = false;<z>
)<z>
buf[i];<z>
(!bInEscape)<z>
)<z>
= true;<z>
)<z>
= false;<z>
== '\\')<z>
;<z>
!bInEscape)<z>
== '/')<z>
;<z>
.isWhitespace((char) b))<z>
= false;<z>
).substring(1);<z>
;<z>
;<z>
getBytes("ISO-8859-1"));<z>
COSName.getPDFName(newObjectName));<z>
length());<z>
)<z>
append((char) b);<z>
bInEscape = false;<z>
;<z>
();<z>
.LENGTH, baos.size());<z>
());<z>
.getFilters());<z>
);<z>
.writeTo(os);<z>
;<z>
output;<z>
NavigationContext loadNavigation(SiteKey key)<z>
if (key == null)<z>
NullPointerException();<z>
manager.getSession();<z>
= dataCache.getNavigationData(session, key);<z>
: null;<z>
{<z>
{<z>
public void onClick(View view) {<z>
);<z>
);<z>
) {<z>
info(event.toString());<z>
.KeeperState.Expired) {<z>
);<z>
;<z>
catch (Throwable e) {<z>
, e);<z>
)<z>
typeHint == null)<z>
;<z>
(typeHint);<z>
public Lock lock( K key )<z>
RefCounterLock cur;<z>
.lock();<z>
( !cache.containsKey( key ) )<z>
= new RefCounterLock();<z>
( key, cur );<z>
cur = cache.get( key );<z>
.counter++;<z>
lockInternal.unlock();<z>
;<z>
sem;<z>
)<z>
.click();<z>
(elementName);<z>
{<z>
{<z>
true;<z>
(null!= m_requestHeaders)<z>
clear();<z>
UNSENT<z>
(m_readyState == OPENED && m_sendFlag == false)<z>
){<z>
UNSENT;<z>
else{<z>
m_readyState = DONE;<z>
m_sendFlag = false;<z>
;<z>
Object b) {<z>
b instanceof Interval)) {<z>
return false;<z>
;<z>
C>) b;<z>
) {<z>
;<z>
hkIndex) {<z>
size;<z>
.setAuxData(s, index, hkIndex);<z>
);<z>
null) {<z>
(1);<z>
s.orderedPaths.get(index));<z>
null) {<z>
(1);<z>
index));<z>
{<z>
= new ArrayList(1);<z>
null) {<z>
);<z>
, null);<z>
lights == null) {<z>
<ArrayList<LightRetained>>(1);<z>
!= null) {<z>
.lights.get(index));<z>
);<z>
null) {<z>
<FogRetained>>(1);<z>
) {<z>
index));<z>
hkIndex, null);<z>
modelClips == null) {<z>
>>(1);<z>
s.modelClips != null) {<z>
modelClips.get(index));<z>
modelClips.add(hkIndex, null);<z>
null) {<z>
1);<z>
!= null) {<z>
.altAppearances.get(index));<z>
add(hkIndex, null);<z>
throws RecognitionException, TokenStreamException {<z>
;<z>
);<z>
(LA(1)==LITERAL_or)) {<z>
(LITERAL_or);<z>
==0 ) {<z>
=true;<z>
logical_term();<z>
break _loop1242;<z>
(true);<z>
.guessing==0 ) {<z>
{<z>
;<z>
RecognitionException ex) {<z>
if (inputState.guessing==0) {<z>
reportError(ex);<z>
ex,_tokenSet_74);<z>
else {<z>
throw ex;<z>
(Class<?> fieldType) {<z>
{<z>
;<z>
expectedFieldType = fieldType;<z>
public void onAccelerationChanged(final AccelerationData pAccelerationData) {<z>
this.mGravityX = pAccelerationData.getX();<z>
;<z>
this.mGravityY);<z>
(gravity);<z>
gravity);<z>
CancelBundleTaskResponseType param){<z>
=param;<z>
menu, View view,<z>
menuInfo) {<z>
context_menu, menu);<z>
AdapterContextMenuInfo info = (AdapterContextMenuInfo) menuInfo;<z>
final Cursor c =<z>
) info.position);<z>
;<z>
getInstance();<z>
.hour);<z>
MINUTE, alarm.minutes);<z>
, cal);<z>
null);<z>
;<z>
textView.setText(time);<z>
);<z>
;<z>
setHeaderView(v);<z>
{<z>
disable_alarm);<z>
) {<z>
(doubleClickStrategy == null) {<z>
= new XMLDoubleClickStrategy();<z>
;<z>
) {<z>
System.out.println("createRefactoringObject");<z>
);<z>
refactoring;<z>
public void onGoGameChange() {<z>
last_processed_move_change_num) {<z>
(getGame().isBlackToMove())<z>
.SOUND_PLACE1);<z>
;<z>
.getMovePos();<z>
();<z>
static void registerRegistryUsagePersistingListener(RegistryContext registryContext)<z>
throws RegistryException {<z>
);<z>
RegistryUsagePersistingListener();<z>
URLMatcher anyUrlMatcher = new URLMatcher();<z>
);<z>
applyingFilters = new String[]{<z>
;<z>
applyingFilters, anyUrlMatcher, handler,<z>
);<z>
() {<z>
;<z>
display.addWidget (clientHandle, this);<z>
addWidget (boxHandle, this);<z>
.addWidget (labelHandle, this);<z>
(imageHandle, this);<z>
Orchestratable message) {<z>
OutboundSubscribeOrchestratable) {<z>
((OutboundSubscribeOrchestratable) message);<z>
else {<z>
"Not an OutboundDocSubmissionOrchestratable.");<z>
void projectionChanged(ProjectionEvent e) {<z>
Projection newProj = e.getProjection();<z>
) {<z>
newProj.toString() : "null");<z>
(newProj != null<z>
)) {<z>
) newProj.makeClone());<z>
getSource();<z>
instanceof Component) {<z>
= (Component) source;<z>
obj,<z>
logger) {<z>
;<z>
{<z>
));<z>
(elem.getName() != null) {<z>
).toLowerCase();<z>
boolean reservedWord=false;<z>
.RESERVED_WORDS) {<z>
)) {<z>
reservedWord = true;<z>
reservedWord) {<z>
.error(MessageFormat.format(<z>
(<z>
getString("_CANNOT_USE_RESERVED_WORD"),<z>
());<z>
if (pvc != null) {<z>
) {<z>
.getName()) != null) {<z>
format(<z>
getBundle(<z>
).getString("_NAME_ALREADY_DEFINED"),<z>
));<z>
} else {<z>
if (pd.isRole()) {<z>
getName()));<z>
} else {<z>
.getName(), pd);<z>
RowFilter rowFilter) throws IOException {<z>
: elements) {<z>
initFilter(rowFilter);<z>
{<z>
(file == null) {<z>
.getName());<z>
copyTo(file);<z>
return file;<z>
name, int flags)<z>
if (null != m_attrs)<z>
.get(name);<z>
(null != _flags)<z>
) != 0;<z>
false;<z>
srvConfig)<z>
{<z>
config, srvConfig);<z>
ClusterConfigSection.SectionName);<z>
== null)<z>
InvalidConfigurationException( "Cluster configuration not available");<z>
elem = config.getChild( "clusterName");<z>
() != null) {<z>
m_clusterName = elem.getValue();<z>
)<z>
( "Empty cluster name");<z>
( "Cluster name not specified");<z>
getChild( "clusterTopic");<z>
{<z>
.getValue();<z>
== 0)<z>
InvalidConfigurationException( "Empty cluster topic name");<z>
"Cluster topic name not specified");<z>
( "nearCache");<z>
= true;<z>
null) {<z>
;<z>
true)<z>
;<z>
cacheTmo = elem.getAttribute( "timeout");<z>
) * 1000L;<z>
< MinimumNearCacheTimeout || m_nearCacheTimeout > MaximumNearCacheTimeout)<z>
("Near-cache timeout value out of valid range (" + MinimumNearCacheTimeout/1000L +<z>
"-" + MaximumNearCacheTimeout/1000L + ")");<z>
ex) {<z>
cacheTmo);<z>
)<z>
();<z>
SectionName);<z>
= coreConfig.getThreadPool();<z>
this);<z>
<String, PerNodeState>();<z>
.getChild("cacheDebug");<z>
( elem != null) {<z>
elem.getAttribute("flags");<z>
;<z>
if ( flags != null) {<z>
.toUpperCase();<z>
StringTokenizer(flags, ",");<z>
(token.hasMoreTokens()) {<z>
();<z>
= 0;<z>
idx].equalsIgnoreCase(dbg) == false)<z>
++;<z>
_debugLevels.length)<z>
;<z>
idx;<z>
m_debugFlags = cacheDbg;<z>
String colName, String val, int op) {<z>
(colName, op);<z>
{<z>
"";<z>
= val;<z>
,<z>
orderByComparator)<z>
, SystemException {<z>
fetchByUuid_C_Last(uuid, companyId, orderByComparator);<z>
) {<z>
return user;<z>
new StringBundler(6);<z>
append(_NO_SUCH_ENTITY_WITH_KEY);<z>
("uuid=");<z>
(uuid);<z>
msg.append(", companyId=");<z>
append(companyId);<z>
);<z>
;<z>
, int serverId,<z>
)<z>
.applicationName));<z>
serverDef.serverName));<z>
, serverDef.serverClassPath));<z>
getText("servertool.args", serverDef.serverArgs));<z>
"servertool.vmargs", serverDef.serverVmArgs));<z>
.getText("servertool.serverid", serverId));<z>
public Header authenticate(<z>
,<z>
request) throws AuthenticationException {<z>
, request, null);<z>
{<z>
().clear();<z>
).setDeleteButtonEnabled(false);<z>
getView().setClearButtonEnabled(false);<z>
) {<z>
from, to,<z>
);<z>
, this.fieldName, value);<z>
(Throwable exc) {<z>
logger.info("Exception occurred in updating field '"<z>
"' of object "<z>
getCanonicalName()<z>
+ timelinePosition);<z>
();<z>
public List<String> getNames() {<z>
().containsKey("Name")) {<z>
get("Name");<z>
{<z>
;<z>
, Date to) {<z>
);<z>
Properties();<z>
;<z>
"password", PASS);<z>
.forName("org.apache.derby.jdbc.EmbeddedDriver");<z>
, props);<z>
) {<z>
);<z>
( ClassNotFoundException e ) {<z>
.error(e.getMessage());<z>
{<z>
"true");<z>
"user", USER);<z>
("password", PASS);<z>
Class.forName("org.apache.derby.jdbc.EmbeddedDriver");<z>
= DriverManager.getConnection(strUrl, props);<z>
to)) {<z>
);<z>
(emailList, from, to);<z>
selectData();<z>
catch (SQLException e) {<z>
;<z>
ClassNotFoundException e ) {<z>
(e.getMessage());<z>
finally{<z>
dbConnection!=null)<z>
;<z>
catch(SQLException se2){<z>
.error(se2.getMessage());<z>
getValue() {<z>
= getTimeValue();<z>
& 0x3F);<z>
int) (position / 1000000);<z>
sec / 60;<z>
sec % 60;<z>
StringBuffer clock = new StringBuffer();<z>
min);<z>
2) {<z>
);<z>
;<z>
sec);<z>
length() < 5) {<z>
0);<z>
clock.append(':');<z>
.append(milli);<z>
) < 8) {<z>
0);<z>
toString();<z>
{<z>
getGridCellCoords(container, false);<z>
;<z>
getGridCellSizes(container, false);<z>
heights = getGridCellSizes(container, true);<z>
startCol],<z>
],<z>
,<z>
- ys[startRow]);<z>
void setAccess(Access access) {<z>
access);<z>
this.access = access;<z>
;<z>
CSField member) {<z>
member.modifiers();<z>
CSFieldModifier.Static)<z>
CSFieldModifier.Const);<z>
<T> collection) {<z>
null) {<z>
collection;<z>
;<z>
.model.SCLicense findByPrimaryKey(<z>
licenseId)<z>
,<z>
liferay.portlet.softwarecatalog.NoSuchLicenseException {<z>
(licenseId);<z>
T> cl) throws XMLDBException, JAXBException {<z>
;<z>
getCollection(ExistDBStore.GAME_COLLECTION);<z>
);<z>
results.size() > 0) {<z>
return results;<z>
.close();<z>
db.getCollection(ExistDBStore.STATIC_COLLECTION);<z>
, col);<z>
getTempRoot(Properties props) {<z>
null);<z>
(tempRoot == null) {<z>
return null;<z>
= new File(tempRoot);<z>
.exists()) {<z>
);<z>
validateDirectory("jboss.test.clean.root", root);<z>
;<z>
;<z>
SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");<z>
;<z>
root.mkdir();<z>
;<z>
assetFormats) {<z>
assetFormats);<z>
) assetItemIterator).setReturnAssetsWithVersionsSpecifiedByDependencies(true);<z>
assetItemIterator;<z>
(ComponentConfiguration configuration) {<z>
.ejbJarConfiguration == null) {<z>
);<z>
>() {<z>
> builder, StatelessSessionComponentCreateService service) throws DeploymentUnitProcessingException {<z>
) != null) {<z>
);<z>
CacheFactoryService.DEFAULT_CLUSTERED_SFSB_CACHE_SERVICE_NAME);<z>
;<z>
new StatelessSessionComponentCreateService(configuration, this.ejbJarConfiguration);<z>
ruleNodeRef, Rule rule)<z>
);<z>
if (action == null)<z>
new RuleServiceException("An action must be specified when defining a rule.");<z>
;<z>
ASSOC_ACTION, RuleModel.ASSOC_ACTION);<z>
actions.size() == 1)<z>
.get(0).getChildRef();<z>
) == false)<z>
.nodeService.deleteNode(actionNodeRef);<z>
= null;<z>
(actions.size() > 1)<z>
new RuleServiceException("The rule has become corrupt. More than one action is associated with the rule.");<z>
)<z>
.ASSOC_ACTION, RuleModel.ASSOC_ACTION);<z>
runtimeActionService.saveActionImpl(actionNodeRef, action);<z>
{<z>
this.parent = parent;<z>
;<z>
= players;<z>
= false;<z>
int state) {<z>
{<z>
:<z>
return "resolved";<z>
case DependencyModel.UNRESOLVED :<z>
;<z>
:<z>
;<z>
;<z>
) {<z>
();<z>
if (requestTime == CURRENT_TIME) {<z>
m_requestTime = System.currentTimeMillis();<z>
else {<z>
= requestTime;<z>
{<z>
int stackSize = keepStackSize();<z>
) {<z>
());<z>
); if (state.failed) return ;<z>
) {<z>
());<z>
RecognitionException re) {<z>
reportError(re);<z>
re);<z>
stackSize);<z>
public void maybeScanFactory(TypeElement factoryType) {<z>
{<z>
0));<z>
, new DeobfuscatorBuilder(), 2));<z>
(UUID ownerId) {<z>
Rarity.RARE,<z>
CREATURE }, "{2}{W}");<z>
expansionSetCode = "MOR";<z>
"Kithkin");<z>
);<z>
this.color.setWhite(true);<z>
MageInt(2);<z>
toughness = new MageInt(2);<z>
(FirstStrikeAbility.getInstance());<z>
));<z>
token) {<z>
( contentType != CONTENT_NONE && token instanceof TagToken ) {<z>
;<z>
= tagToken.getName();<z>
) ) {<z>
true;<z>
if (contentType == CONTENT_ALL) {<z>
!childTags.isEmpty() ) {<z>
;<z>
!permittedTags.isEmpty() ) {<z>
) : true;<z>
else {<z>
true;<z>
(contentType == CONTENT_TEXT) {<z>
return !(token instanceof TagToken);<z>
false;<z>
b) {<z>
isWebSaveOnly = b;<z>
(b) {<z>
));<z>
;<z>
ILayer getPreviousLayer() {<z>
= getActiveLayer();<z>
activeLayer == null) {<z>
;<z>
();<z>
= layers.indexOf(activeLayer);<z>
index > 0) {<z>
= layers.get( index-1 );<z>
previousLayer;<z>
;<z>
.GetTranslationsArray param, boolean optimizeContent)<z>
throws org.apache.axis2.AxisFault<z>
;<z>
);<z>
emptyEnvelope;<z>
{<z>
axis2.AxisFault.makeFault(e);<z>
{<z>
realPage.getDataVersion(versionName);<z>
data.setWikiPage(this);<z>
;<z>
(SimpleGraph<V, E> graph) {<z>
HashSet<E>();<z>
SuppressWarnings("unchecked")<z>
>) graph.clone();<z>
)<z>
);<z>
)) {<z>
removeEdge(e);<z>
).connectedSets()<z>
.size();<z>
)<z>
;<z>
e);<z>
getEdgeTarget(e);<z>
gc.addEdge(source, target);<z>
return bridges;<z>
{<z>
getConnection();<z>
;<z>
st = conn.prepareStatement("UPDATE user " +<z>
;<z>
setBytes(1, user.sha1);<z>
setBytes(2, user.salt);<z>
;<z>
.executeUpdate();<z>
finally {<z>
)<z>
st.close();<z>
)<z>
conn.close();<z>
int hashCode() {<z>
31;<z>
= 1;<z>
));<z>
result;<z>
) {<z>
;<z>
(this.isProduceOutputHeaders()) {<z>
;<z>
final StringBuilder line = new StringBuilder();<z>
getFields() ) {<z>
line.length() > 0) {<z>
().getSeparator());<z>
.append("\"");<z>
);<z>
);<z>
;<z>
toString());<z>
return tw;<z>
IOException e) {<z>
(e);<z>
{<z>
instanceof SessionWrapper) {<z>
.getDelegate();<z>
return session;<z>
() throws RemoteException, VisADException {<z>
()) {<z>
(interp != null) {<z>
removeInterpreter(interp);<z>
;<z>
= null;<z>
.destroy();<z>
final ConstraintVariable2 left, final ConstraintVariable2 right) {<z>
&& right != null) {<z>
= left.getTypeEquivalenceSet();<z>
);<z>
null) {<z>
if (second == null) {<z>
right);<z>
left.setTypeEquivalenceSet(set);<z>
.setTypeEquivalenceSet(set);<z>
} else {<z>
);<z>
second);<z>
else {<z>
if (second == null) {<z>
(right);<z>
(first);<z>
first == second)<z>
[] variables= second.getContributingVariables();<z>
addAll(variables);<z>
; index < variables.length; index++)<z>
].setTypeEquivalenceSet(first);<z>
dataType) {<z>
name = name;<z>
: dataType;<z>
;<z>
ActionEvent event) {<z>
.getSource());<z>
.getPath();<z>
().getPropertyString(BasicApp.PROPERTY_KEY_APP_LAST_OPEN_DIR,<z>
);<z>
File(openDir);<z>
chooser.setCurrentDirectory(currentDirectory);<z>
) {<z>
file = chooser.getSelectedFile();<z>
Product product = null;<z>
file);<z>
== null) {<z>
)));<z>
(productFilter.accept(product)) {<z>
setSelectedProduct(product);<z>
{<z>
"Product [%s] is not a valid source.",<z>
;<z>
window, message);<z>
;<z>
IOException e) {<z>
));<z>
) {<z>
) {<z>
product.dispose();<z>
);<z>
printStackTrace();<z>
getCurrentDirectory();<z>
.setPropertyString(BasicApp.PROPERTY_KEY_APP_LAST_OPEN_DIR,<z>
));<z>
String path) {<z>
;<z>
currentEnt = Entity.this;<z>
(path, PATH_SEPARATOR);<z>
this.path = path;<z>
) {<z>
query = new XQuery(<z>
;<z>
(query);<z>
res;<z>
false)<z>
("XQST0031")<z>
Envelope env) {<z>
getMinX()) / 2.0);<z>
()) / 2.0);<z>
0.0 : cx,<z>
;<z>
) / env.getWidth();<z>
xScale == 0) {<z>
xScale = Double.MAX_VALUE;<z>
/ env.getHeight();<z>
if (yScale == 0) {<z>
Double.MAX_VALUE;<z>
));<z>
Object getAdapter(Class serviceType) {<z>
)) {<z>
this;<z>
} else {<z>
return null;<z>
refreshConnections() {<z>
();<z>
);<z>
getDiagram().getEdges());<z>
); linksIterator.hasNext();) {<z>
(Edge) linksIterator.next();<z>
;<z>
== -1) {<z>
{<z>
linksIterator.remove();<z>
.getElement();<z>
.getElement();<z>
.getTarget().getElement();<z>
; linkDescriptorsIterator.hasNext();) {<z>
linkDescriptorsIterator.next();<z>
()<z>
nextLinkDescriptor.getVisualID()) {<z>
);<z>
);<z>
.iterator());<z>
domain2NotationMap);<z>
) {<z>
;<z>
new File(uploadBase, getDomainName());<z>
;<z>
) {<z>
(<z>
.toFile().exists());<z>
() {<z>
>() {<z>
public LoanScheduleEntity transform(AccountActionDateEntity input) {<z>
) input;<z>
);<z>
in, OutputStream out)<z>
throws IOException {<z>
[1024];<z>
;<z>
{<z>
buffer, 0, len);<z>
);<z>
();<z>
throws JspException {<z>
.doEndTag();<z>
);<z>
null;<z>
returnVal;<z>
launchConfig) {<z>
== fConfigType) {<z>
load(launchConfig);<z>
{<z>
log("Error occurred when register new config.", e);<z>
DeserializationContext ctxt) throws IOException,<z>
;<z>
).toUpperCase());<z>
DataOutput out, final IJsonNode iJsonNode) {<z>
().ordinal());<z>
== IJsonNode.Type.CustomNode)<z>
());<z>
iJsonNode.write(out);<z>
{<z>
printStackTrace();<z>
byte enc[]) throws IOException {<z>
ByteArrayInputStream(enc);<z>
DataInputStream(bais);<z>
creationTime = dis.readLong();<z>
()) {<z>
();<z>
} else {<z>
server = null;<z>
readBoolean()) {<z>
);<z>
} else {<z>
exception = null;<z>
) throws IOException {<z>
.size() < 2)<z>
;<z>
get(0));<z>
(1));<z>
return Math.max(first, second);<z>
nfe){<z>
());<z>
;<z>
{<z>
, e);<z>
searchNext( String x )<z>
;<z>
[ cursor ] != x )<z>
.next();<z>
: false;<z>
throws TagException {<z>
int size;<z>
)) {<z>
new TagNotFoundException("ID3v2.20 tag not found");<z>
;<z>
);<z>
= byteBuffer.slice();<z>
(unsynchronization) {<z>
.synchronize(bufferWithoutHeader);<z>
bufferWithoutHeader, size);<z>
Exception {<z>
"http://localhost:8040/services/doubleit";<z>
), SERVICE_NAME);<z>
.class);<z>
(port, 10);<z>
);<z>
);<z>
Element element, Loader loader) throws Exception {<z>
);<z>
);<z>
;<z>
); ) {<z>
= i.next();<z>
child);<z>
subEffect);<z>
public int read() throws IOException {<z>
);<z>
;<z>
buffer;<z>
(buffer.hasRemaining()) {<z>
.get() & 0xff;<z>
if (eof) {<z>
;<z>
int res;<z>
long timeout;<z>
long start = System.nanoTime();<z>
elapsed = 0L;<z>
{<z>
buffer.clear();<z>
read(buffer);<z>
finally {<z>
;<z>
if (res == -1) {<z>
= true;<z>
-1;<z>
{<z>
() & 0xff;<z>
;<z>
) {<z>
();<z>
else if (timeout < elapsed) {<z>
ReadTimeoutException("Read timed out");<z>
} else {<z>
.NANOSECONDS);<z>
= System.nanoTime() - start;<z>
} finally {<z>
;<z>
() {<z>
("register") {<z>
void onRegisteredUser(User user) {<z>
setUser(user);<z>
());<z>
});<z>
MenuItem item) {<z>
== R.id.accmgnt_menu_new) {<z>
;<z>
return true;<z>
);<z>
b) throws CoreException {<z>
().createObject(b);<z>
(Exception e) {<z>
location.toOSString());<z>
e);<z>
component) throws IOException<z>
.isRendered())<z>
ResponseWriter writer = context.getResponseWriter();<z>
getAttribute(<z>
;<z>
write("</td>");<z>
))<z>
;<z>
(long accountId, long initialCurrentMailboxId,<z>
) {<z>
);<z>
();<z>
ARG_ACCOUNT_ID, accountId);<z>
initialCurrentMailboxId);<z>
);<z>
);<z>
;<z>
protected void fireStateChanged() {<z>
null) {<z>
ChangeEvent(this);<z>
] listeners = getChangeListeners();<z>
; i++) {<z>
);<z>
onLogin(Player player) {<z>
);<z>
) + " has joined the server! Wooo~");<z>
public LinkServer(Socket s) {<z>
new Link(s);<z>
java.io.IOException ioe) {<z>
.err.println("LinkServer: IOException while creating child server:");<z>
println(ioe);<z>
Drawable icon) {<z>
.appName = appName;<z>
.packageName = packageName;<z>
;<z>
, Integer fontStyle) {<z>
)) {<z>
{<z>
);<z>
.set(columnIndex, fontStyle);<z>
StepAndPage()<z>
UNSET;<z>
= UNSET;<z>
() {<z>
false;<z>
null) {<z>
expect = httpHeaders.getRequestHeader(EXPECT_HEADER);<z>
> 0) {<z>
BLOCKING_EXPECTATION);<z>
return expectBlocking;<z>
value) {<z>
key.equals(StringFactory.ID))<z>
propertyKeyIdIsReserved();<z>
Edge)<z>
throw ExceptionFactory.propertyKeyLabelIsReservedForEdges();<z>
.EMPTY_STRING))<z>
.elementKeyCanNotBeEmpty();<z>
.graph.autoStartTransaction();<z>
, value);<z>
().save(rawElement);<z>
() {<z>
XQuery(<z>
;<z>
final QT3Result res = result(query);<z>
;<z>
("-1")<z>
public DataSource makeOneDataSource(Object definingObject,<z>
dataType,<z>
properties) {<z>
definingObject,<z>
;<z>
getIdvUIManager().showResults(results);<z>
)) {<z>
getDataSources().get(0);<z>
null;<z>
UpdateDisplayName()<z>
getPlayer(playerName);<z>
if (p==null)<z>
IsVip())<z>
;<z>
p.getName());<z>
.getName());<z>
);<z>
, SecurityHandler securityHandler) {<z>
= directoryPath;<z>
securityHandler;<z>
createDefaultHttpContext();<z>
EdgeType> g, VertexType v) throws InvalidVertexException {<z>
copy(gc);<z>
.getVerticesCount()];<z>
new Vector<VertexType>();<z>
();<z>
);<z>
HashMap<Integer, VertexType>();<z>
)<z>
_.getId(), _);<z>
g)<z>
, _);<z>
++)<z>
] = Integer.MAX_VALUE;<z>
[v.getId()] = 0;<z>
{<z>
getInDegree(u) == 0) {<z>
);<z>
.isEmpty()) {<z>
.poll();<z>
= gcopy.edgeIterator(u);<z>
while (iet.hasNext()) {<z>
();<z>
)]) {<z>
);<z>
.target.getId(), u);<z>
gcopy));<z>
e.target) == 1)<z>
VertexType) e.target);<z>
);<z>
prev;<z>
public static void pushCompanyService(long companyId) {<z>
();<z>
null) {<z>
shard.pushCompanyService(companyId);<z>
{<z>
;<z>
FOLLOW_rule__Attribute__Group__1__Impl_in_rule__Attribute__Group__113094);<z>
();<z>
_fsp--;<z>
.failed) return ;<z>
pushFollow(FOLLOW_rule__Attribute__Group__2_in_rule__Attribute__Group__113097);<z>
rule__Attribute__Group__2();<z>
_fsp--;<z>
failed) return ;<z>
{<z>
re);<z>
);<z>
;<z>
mappingsData, Mappings mappings)<z>
));<z>
(mappingsData.getUnresolvedNode());<z>
.getMappings().isEmpty())<z>
).keySet())<z>
Text.escapeIllegalJcrChars(key));<z>
if (nodeMap == null)<z>
;<z>
Text.escapeIllegalJcrChars(key), nodeMap);<z>
.setOriginNode(key);<z>
key));<z>
(NaNStrategy nanStrategy, TiesStrategy tiesStrategy) {<z>
();<z>
;<z>
this.tiesStrategy = tiesStrategy;<z>
name) {<z>
HtmlCollection elements = getAreas();<z>
elements.getLength(); i++) {<z>
item(i);<z>
getNodeName().equalsIgnoreCase(name)) {<z>
area;<z>
return null;<z>
evt)<z>
))<z>
.getSelectedRow();<z>
(selRow == -1)<z>
;<z>
<CommitFiles>("cvs_commit",<z>
.NORMAL_ACTION_TYPE) {<z>
, FlexoEditor editor) {<z>
, globalSelection, editor);<z>
(CVSFile aFile) {<z>
.isConflicting());<z>
log(IStatus status) {<z>
= plugin;<z>
if(instance != null) {<z>
.log(status);<z>
} else {<z>
, Activator.PLUGIN_ID));<z>
java.lang.String name,<z>
String defaultValue)<z>
.kernel.exception.SystemException {<z>
(companyId, name, defaultValue);<z>
{<z>
= (Long)FinderCacheUtil.getResult(FINDER_PATH_COUNT_ALL,<z>
;<z>
(count == null) {<z>
session = null;<z>
session = openSession();<z>
createQuery(_SQL_COUNT_COMPANY);<z>
;<z>
catch (Exception e) {<z>
e);<z>
null) {<z>
Long.valueOf(0);<z>
(FINDER_PATH_COUNT_ALL,<z>
);<z>
;<z>
;<z>
pattern, PsiElement psiElement, VirtualFile file) {<z>
));<z>
));<z>
getEditors(file);<z>
!= null && editors.length > 0) {<z>
);<z>
);<z>
getRoot();<z>
);<z>
element != null) {<z>
(pattern, NameUtil.MatchingCaseSensitivity.NONE);<z>
MIN_VALUE;<z>
Object target = null;<z>
TreeElement treeElement : element.getChildren()) {<z>
treeElement instanceof StructureViewTreeElement) {<z>
treeElement.getPresentation();<z>
{<z>
));<z>
> max) {<z>
max = degree;<z>
StructureViewTreeElement)treeElement).getValue();<z>
{<z>
(true);<z>
{<z>
new ArrayList();<z>
new ArrayList();<z>
cl; ci++) {<z>
chunks[ci];<z>
()) {<z>
c.toString());<z>
));<z>
] kids = c.getChildren();<z>
<tl;ti++) {<z>
kids[ti];<z>
add(tok.toString());<z>
.getType());<z>
; ti++) {<z>
)));<z>
unformatted, int pos)<z>
if (pos == 0)<z>
;<z>
) == '\n')<z>
pos -= 1;<z>
(true);<z>
(pos) == ' ')<z>
1;<z>
(pos == unformatted.length())<z>
return pos;<z>
public SpellingDialog()<z>
"Check Spelling");<z>
btnAdd_ = new ThemedButton("Add");<z>
setTitle("Add word to user dictionary");<z>
= new ThemedButton("Ignore");<z>
ThemedButton("Ignore All");<z>
= new ThemedButton("Change");<z>
("Change All");<z>
, btnChange_, btnChangeAll_);<z>
this);<z>
[] {<z>
btnChangeAll_<z>
;<z>
execChoosePwd() {<z>
Edited() {<z>
(K.PWD, pwd); }<z>
this);<z>
;<z>
String f) {<z>
: children) {<z>
name.equals(f)) {<z>
;<z>
;<z>
protected VAlarm getDisplayAlarm(VEvent event) {<z>
) {<z>
);<z>
getProperty(Property.ACTION).equals(<z>
)<z>
;<z>
return null;<z>
toString() {<z>
new StringBuilder();<z>
;<z>
ReplicaSetNode node : getAll())<z>
);<z>
1);<z>
.append(" ]");<z>
sb.toString();<z>
{<z>
() == 0) {<z>
true;<z>
if (repository == null) {<z>
;<z>
()) {<z>
IllegalArgumentException("Could not create repository directory for file uploading: "<z>
;<z>
{<z>
[] { "filename" };<z>
public DependencyManagement setVersion( String version )<z>
;<z>
;<z>
)<z>
();<z>
);<z>
mediaDescriptor.getInstance(), exception);<z>
, exception);<z>
.mediaDescriptor = mediaDescriptor;<z>
> lstDocumentosSubidos, List<DocumentoExterno> lstDocumentosExternos) {<z>
tramite);<z>
lstDocumentosSubidos;<z>
"fap.documentacion.documentosExternos"))<z>
lstDocumentosExternos;<z>
{<z>
mainLock;<z>
lock();<z>
;<z>
{<z>
);<z>
final int progress, final String textContact,<z>
{<z>
progress;<z>
;<z>
;<z>
.NONE;<z>
= 0;<z>
= 0;<z>
(){{<z>
5624.59);<z>
);<z>
(3,28.7099);<z>
4,15.9770);<z>
5,11.3919);<z>
(6,9.1483);<z>
(7,7.8466);<z>
8,7.0061);<z>
6.4221);<z>
,5.9943);<z>
,5.6683);<z>
,5.4120);<z>
5.2053);<z>
);<z>
put(15,4.8932);<z>
16,4.7726);<z>
;<z>
(18,4.5790);<z>
19,4.5003);<z>
4.4307);<z>
,4.3688);<z>
(22,4.3134);<z>
,4.2636);<z>
(24,4.2184);<z>
;<z>
(26,4.1400);<z>
;<z>
);<z>
4.0449);<z>
(30,4.0179);<z>
);<z>
(60,3.6490);<z>
put(120,3.4795);<z>
put(999,3.3192);<z>
Player player)<z>
isAccepting)<z>
(getOwner())<z>
Creature requester, Player responder)<z>
)<z>
();<z>
slaveSpawnTemplate.getX();<z>
= slaveSpawnTemplate.getY();<z>
= slaveSpawnTemplate.getZ();<z>
x, y, z, 0);<z>
usedEntries++;<z>
)<z>
isAccepting = false;<z>
);<z>
.scheduleDecayTask(slave);<z>
getOwner(),<z>
maxLevel));<z>
requester, Player responder)<z>
SM_QUESTION_WINDOW.STR_USE_RIFT, responseHandler);<z>
(requested)<z>
);<z>
)<z>
)this.fitness+<z>
this.timeStamp);<z>
Editor createEditor() {<z>
getInstance();<z>
"");<z>
, myProject);<z>
);<z>
editor;<z>
) throws RecognitionException {<z>
= null;<z>
= null;<z>
this_ReportPrefix_1 = null;<z>
;<z>
= null;<z>
();<z>
int alt77=4;<z>
switch ( input.LA(1) ) {<z>
:<z>
=1;<z>
case 161:<z>
2;<z>
:<z>
=3;<z>
205:<z>
;<z>
; return current;}<z>
=<z>
77, 0, input);<z>
nvae;<z>
{<z>
case 1 :<z>
backtracking==0 ) {<z>
));<z>
;<z>
ruleAccountPrefix();<z>
--;<z>
return current;<z>
backtracking==0 ) {<z>
= this_AccountPrefix_0;<z>
);<z>
case 2 :<z>
{<z>
getIncludePropertiesAttributeAccess().getReportPrefixParserRuleCall_1());<z>
pushFollow(FollowSets000.FOLLOW_ruleReportPrefix_in_ruleIncludePropertiesAttribute17086);<z>
);<z>
_fsp--;<z>
if (state.failed) return current;<z>
state.backtracking==0 ) {<z>
;<z>
afterParserOrEnumRuleCall();<z>
:<z>
.backtracking==0 ) {<z>
());<z>
FOLLOW_ruleResourcePrefix_in_ruleIncludePropertiesAttribute17113);<z>
;<z>
--;<z>
state.failed) return current;<z>
==0 ) {<z>
this_ResourcePrefix_2;<z>
);<z>
4 :<z>
) {<z>
getIncludePropertiesAttributeAccess().getTaskPrefixParserRuleCall_3());<z>
FollowSets000.FOLLOW_ruleTaskPrefix_in_ruleIncludePropertiesAttribute17140);<z>
;<z>
state._fsp--;<z>
if (state.failed) return current;<z>
) {<z>
current = this_TaskPrefix_3;<z>
();<z>
if ( state.backtracking==0 ) {<z>
;<z>
catch (RecognitionException re) {<z>
input,re);<z>
();<z>
;<z>
public void encode(EOutputStream eos) {<z>
(len);<z>
< len; i++) {<z>
[off+i]);<z>
(tail);<z>
boolean authenticateUser<z>
String userName,<z>
String userPassword,<z>
databaseName,<z>
; }<z>
}<z>
)<z>
);<z>
databaseName );<z>
(StandardException se)<z>
;<z>
() throws RecognitionException {<z>
a=null;<z>
ARRAY_EXPR,FOLLOW_ARRAY_EXPR_in_arrayExpr4320);<z>
1)==Token.DOWN ) {<z>
;<z>
2;<z>
int LA216_0 = input.LA(1);<z>
>=EVAL_IS_GROUP_EXPR && LA216_0<=EVAL_ISNOT_GROUP_EXPR)) ) {<z>
;<z>
switch (alt216) {<z>
1 :<z>
(FOLLOW_valueExpr_in_arrayExpr4323);<z>
;<z>
--;<z>
break loop216;<z>
} while (true);<z>
, Token.UP, null);<z>
leaveNode(a);<z>
rex) {<z>
rex;<z>
Object object) {<z>
add<z>
(ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),<z>
(),<z>
("_UI_ViewState_newInstance_feature"),<z>
, "_UI_ViewState_type"),<z>
,<z>
,<z>
);<z>
item) {<z>
{<z>
case R.id.add_to_watch:<z>
novel_is_watched);<z>
{<z>
false);<z>
;<z>
;<z>
R.id.download_novel:<z>
item.getMenuInfo();<z>
1) {<z>
ToggleProgressBar(true);<z>
;<z>
);<z>
;<z>
return super.onContextItemSelected(item);<z>
List<EventDefinition> getEventDefinitions(Event event) {<z>
event!=null) {<z>
().getEStructuralFeature("eventDefinitions");<z>
!=null) {<z>
>) event.eGet(feature);<z>
ArrayList<EventDefinition>();<z>
) {<z>
null)<z>
;<z>
(invisibleRoot);<z>
Exception {<z>
.workdir);<z>
.mkdir(dir);<z>
cd(dir);<z>
.trunk);<z>
+ "openejb"));<z>
versions = collectVersions(workingCopy);<z>
) {<z>
;<z>
updateVersions(workingCopy);<z>
{<z>
* stride;<z>
(File f) throws FileNotFoundException {<z>
getName() + TMP_EXTENSION)));<z>
= f.getAbsoluteFile();<z>
.getAbsoluteFile();<z>
Element element, ServerConfigurationV152 serverConfiguration )<z>
.element( ServerXmlIOV152.ELEMENT_INTERCEPTORS );<z>
null )<z>
); i.hasNext(); )<z>
.next();<z>
.getName();<z>
( interceptorElementName ) )<z>
;<z>
( ServerXmlIOV152.ELEMENT_AUTHENTICATION_INTERCEPTOR.equalsIgnoreCase( interceptorElementName ) )<z>
( InterceptorEnum.AUTHENTICATION );<z>
)<z>
;<z>
ELEMENT_ACI_AUTHORIZATION_INTERCEPTOR<z>
( interceptorElementName ) )<z>
serverConfiguration.addInterceptor( InterceptorEnum.ACI_AUTHORIZATION );<z>
ELEMENT_DEFAULT_AUTHORIZATION_INTERCEPTOR<z>
) )<z>
;<z>
ELEMENT_EXCEPTION_INTERCEPTOR.equalsIgnoreCase( interceptorElementName ) )<z>
.addInterceptor( InterceptorEnum.EXCEPTION );<z>
ServerXmlIOV152.ELEMENT_OPERATIONAL_ATTRIBUTE_INTERCEPTOR<z>
interceptorElementName ) )<z>
addInterceptor( InterceptorEnum.OPERATIONAL_ATTRIBUTE );<z>
( ServerXmlIOV152.ELEMENT_KEY_DERIVATION_INTERCEPTOR<z>
( interceptorElementName ) )<z>
addInterceptor( InterceptorEnum.KEY_DERIVATION );<z>
ELEMENT_SCHEMA_INTERCEPTOR.equalsIgnoreCase( interceptorElementName ) )<z>
addInterceptor( InterceptorEnum.SCHEMA );<z>
)<z>
.SUBENTRY );<z>
.ELEMENT_COLLECTIVE_ATTRIBUTE_INTERCEPTOR<z>
) )<z>
( InterceptorEnum.COLLECTIVE_ATTRIBUTE );<z>
ServerXmlIOV152.ELEMENT_EVENT_INTERCEPTOR.equalsIgnoreCase( interceptorElementName ) )<z>
.addInterceptor( InterceptorEnum.EVENT );<z>
) )<z>
.addInterceptor( InterceptorEnum.TRIGGER );<z>
ELEMENT_REPLICATION_INTERCEPTOR.equalsIgnoreCase( interceptorElementName ) )<z>
.addInterceptor( InterceptorEnum.REPLICATION );<z>
public Object getValueAt(Object node, int column)<z>
node instanceof OMETreeNode)<z>
column);<z>
return null;<z>
public void reset(Element root)<z>
= root;<z>
reset();<z>
event) {<z>
if (!Methods.hasMethod()) {<z>
setMethod(event.getPlugin())) {<z>
.method = Methods.getMethod();<z>
+ ")");<z>
{<z>
).toString();<z>
> -1) return false;<z>
);<z>
(value == null) value = "";<z>
GrailsParameterMap) {<z>
;<z>
();<z>
); i.hasNext();) {<z>
) i.next();<z>
+ '.');<z>
.hasNext();<z>
);<z>
, encoding))<z>
append('=')<z>
), encoding));<z>
return true;<z>
int index){<z>
comp instanceof Clickable){<z>
0);<z>
(Clickable) comp);<z>
);<z>
,index);<z>
{<z>
true);<z>
) {<z>
oldIPs = getIPs(name);<z>
ArrayList<String>();<z>
oldIPs));<z>
i++) {<z>
toLowerCase());<z>
(ip.toLowerCase())) {<z>
(ip.toLowerCase());<z>
newIPs = "";<z>
ips) {<z>
+= tempIp + " ";<z>
replace(" ", ",");<z>
+ newIPs + "');");<z>
double dy) {<z>
) {<z>
p.mover(dx, dy);<z>
for (Label l : textos) {<z>
, dy);<z>
{<z>
el.estaAgrupado()) {<z>
dx, dy);<z>
protected UnresolvedAssertStatementInfo buildStatement(<z>
fromLine,<z>
int fromColumn, int toLine, int toColumn) {<z>
UnresolvedAssertStatementInfo assertStatement = new UnresolvedAssertStatementInfo(<z>
;<z>
);<z>
.setFromColumn(fromColumn);<z>
assertStatement.setToLine(toLine);<z>
setToColumn(toColumn);<z>
assertStatement;<z>
][] y) {<z>
);<z>
i1<_n1; ++i1)<z>
);<z>
String password, boolean hashPassword) {<z>
username)) {<z>
);<z>
isEmptyOrWhitespaceOnly(password)) {<z>
;<z>
.username = username;<z>
= password;<z>
;<z>
token = null;<z>
loggedIn = false;<z>
, CampaignAndUserRoles>();<z>
.Role>();<z>
getFeatureDescriptors(ELContext context, Object base) {<z>
(base instanceof ResourceBundle) {<z>
);<z>
getKeys();<z>
feat;<z>
key;<z>
()) {<z>
e.nextElement();<z>
;<z>
;<z>
.setExpert(false);<z>
;<z>
key);<z>
.setPreferred(true);<z>
.TRUE);<z>
, String.class);<z>
feats.add(feat);<z>
;<z>
null;<z>
public ArrowIcon( int style )<z>
) {<z>
ASCENDING:<z>
= shpUpTri;<z>
DESCENDING:<z>
= shpDownTri;<z>
NOT_SORTED:<z>
= null;<z>
String.valueOf( style ));<z>
, String paramName, CompilationUnitRewrite cuRewrite) {<z>
AST ast= cuRewrite.getAST();<z>
ast.newVariableDeclarationFragment();<z>
);<z>
, null));<z>
(fragment);<z>
IVariableBinding variable= pi.getOldBinding();<z>
));<z>
variable.getModifiers();<z>
newModifiers= ast.newModifiers(modifiers);<z>
().addAll(newModifiers);<z>
;<z>
exchange) {<z>
in = exchange.getIn();<z>
;<z>
.DATA_CODING)) {<z>
.class));<z>
} else {<z>
;<z>
containsKey(SmppConstants.DEST_ADDR)) {<z>
DEST_ADDR, String.class));<z>
} else {<z>
);<z>
DEST_ADDR_TON)) {<z>
Byte.class));<z>
else {<z>
setDestAddrTon(config.getDestAddrTon());<z>
)) {<z>
Byte.class));<z>
} else {<z>
setDestAddrNpi(config.getDestAddrNpi());<z>
).containsKey(SmppConstants.SOURCE_ADDR)) {<z>
.SOURCE_ADDR, String.class));<z>
} else {<z>
;<z>
)) {<z>
.SOURCE_ADDR_TON, Byte.class));<z>
else {<z>
getSourceAddrTon());<z>
.containsKey(SmppConstants.SOURCE_ADDR_NPI)) {<z>
SOURCE_ADDR_NPI, Byte.class));<z>
else {<z>
getSourceAddrNpi());<z>
.SERVICE_TYPE)) {<z>
SmppConstants.SERVICE_TYPE, String.class));<z>
else {<z>
setServiceType(config.getServiceType());<z>
).containsKey(SmppConstants.REGISTERED_DELIVERY)) {<z>
class));<z>
} else {<z>
.getRegisteredDelivery());<z>
return dataSm;<z>
fileFilter) {<z>
VectorFileExporterBuilder.class)) {<z>
getFileTypes()) {<z>
));<z>
.addExtensions(fileType.getExtensions());<z>
equals(fileFilter)) {<z>
;<z>
;<z>
asset,<z>
viewer,<z>
,<z>
) {<z>
super( asset,<z>
;<z>
(String features) {<z>
(features, ",");<z>
().getFeatureModelManager();<z>
new ArrayList<IFeatureModel>();<z>
tok.hasMoreTokens()) {<z>
();<z>
manager.findFeatureModel(id);<z>
)<z>
add(model);<z>
()]);<z>
{<z>
!= null : "Domain model uri must be specified";<z>
null : "Doagram root element must be specified";<z>
null : "Editing domain must be specified";<z>
,<z>
.EMPTY);<z>
myFileCreationPage.setTitle(Messages.SysmlNewDiagramFileWizard_CreationPageTitle);<z>
NLS.bind(Messages.SysmlNewDiagramFileWizard_CreationPageDescription,<z>
MODEL_ID));<z>
IPath filePath;<z>
;<z>
.isPlatformResource()) {<z>
);<z>
domainModelURI.isFile()) {<z>
trimSegments(1).toFileString());<z>
} else {<z>
throw new IllegalArgumentException("Unsupported URI: " + domainModelURI);<z>
.setContainerFullPath(filePath);<z>
fileName, "sysml_diagram"));<z>
DiagramRootElementSelectionPage(<z>
.SysmlNewDiagramFileWizard_RootSelectionPageName);<z>
setTitle(Messages.SysmlNewDiagramFileWizard_RootSelectionPageTitle);<z>
Messages.SysmlNewDiagramFileWizard_RootSelectionPageDescription);<z>
;<z>
editingDomain;<z>
String str,<z>
e )<z>
super( str, e );<z>
params) throws IOException {<z>
(baseUrl, params);<z>
;<z>
XMLUtil.stringToDocument(response);<z>
catch (SAXException e) {<z>
(e.getMessage());<z>
responseXML, "lfm");<z>
"status").getNodeValue();<z>
!status.contains("ok")) {<z>
= XMLUtil.findNamedElementNode(lfmNode, "error");<z>
{<z>
;<z>
errorNode);<z>
] getElements(Object parent) {<z>
{<z>
) {<z>
parent).findPrimaryType();<z>
;<z>
catch (JavaModelException e) {<z>
;<z>
parent);<z>
{<z>
);<z>
partFile = null;<z>
10; i++) {<z>
if (i == 0)<z>
name + DOWNLOAD_PART_SUFFIX);<z>
+ DOWNLOAD_PART_SUFFIX);<z>
() && partFile.createNewFile())<z>
partFile != null)<z>
();<z>
return partFile;<z>
) {<z>
(jj_3R_213()) return true;<z>
xsp;<z>
true) {<z>
= jj_scanpos;<z>
xsp; break; }<z>
false;<z>
public final void rule__XConstructorCall__Group_3_2__1__Impl() throws RecognitionException {<z>
;<z>
( state.backtracking==0 ) {<z>
());<z>
);<z>
;<z>
_fsp--;<z>
.failed) return ;<z>
backtracking==0 ) {<z>
().getTypeArgumentsAssignment_3_2_1());<z>
re) {<z>
reportError(re);<z>
,re);<z>
);<z>
throws Exception {<z>
.equals( action ) ) {<z>
,<z>
);<z>
} else {<z>
( this,<z>
node );<z>
request, HttpServletResponse response) throws ServletException, IOException {<z>
();<z>
;<z>
principal != null) {<z>
saveRequest(request, session);<z>
redirectToIDP(request, response);<z>
.getParameter(GeneralConstants.USERNAME_FIELD);<z>
;<z>
null || passwd == null) {<z>
GeneralConstants.SAML_REQUEST_KEY);<z>
== null || "".equals(samlMessage))<z>
.SC_BAD_REQUEST);<z>
("No username or password found. Redirecting to login page");<z>
, session);<z>
(response.isCommitted())<z>
PROCESSING_EXCEPTION<z>
"Response is committed. Cannot forward to login page.");<z>
.redirectToLoginPage(request, response);<z>
else {<z>
(username, passwd);<z>
) {<z>
(HttpServletResponse.SC_FORBIDDEN);<z>
, new Principal() {<z>
) {<z>
;<z>
});<z>
this.redirectToIDP(request, response);<z>
e) {<z>
;<z>
.SC_FORBIDDEN);<z>
static long readStampFile(File stampFile)<z>
properties = new Properties();<z>
;<z>
;<z>
;<z>
IOException ex)<z>
getAbsolutePath(), ex);<z>
stream);<z>
));<z>
(Exception ex)<z>
.getAbsolutePath(), ex);<z>
0L;<z>
public void visitSelectClause(SelectClause node) {<z>
inSelect = true;<z>
(node);<z>
inSelect = false;<z>
setXslFO(Element foElement) {<z>
null;<z>
CTBorder border = (CTBorder)getObject();<z>
;<z>
!=null) {<z>
;<z>
debug("border: " + stBorder);<z>
STBorder.NIL)<z>
.NONE) {<z>
"none";<z>
) {<z>
val = "solid";<z>
STBorder.DOUBLE<z>
.DOTTED<z>
|| stBorder == STBorder.DASHED<z>
STBorder.OUTSET<z>
stBorder == STBorder.INSET) {<z>
);<z>
{<z>
warn("Falling back to solid");<z>
val = "solid";<z>
CSS_NAME_STYLE, val);<z>
)!=null) {<z>
).intValue());<z>
(mm) + "mm";<z>
val);<z>
getColor()!=null) {<z>
).equals("auto")) {<z>
= "#000000";<z>
else {<z>
val = "#" + border.getColor();<z>
foElement.setAttribute(CSS_NAME_COLOR, val);<z>
(final File dir, final boolean dirsFirst) {<z>
;<z>
dirsFirst?DEFAULT_COMPARATOR:DEFAULT_COMPARATOR_DIRS_FIRST;<z>
listFiles();<z>
;<z>
>(fa.length);<z>
.asList(fa));<z>
);<z>
return files;<z>
expander, int onDepth,<z>
)<z>
this.expander = expander;<z>
onDepth = onDepth;<z>
;<z>
<Object> newChildDescriptors, Object object) {<z>
(newChildDescriptors, object);<z>
add<z>
.Literals.ARTIFACT_COMMIT__ARTIFACT_IDENTIFIERS,<z>
createArtifactIdentifier()));<z>
install() throws XmlPullParserException, IOException<z>
class);<z>
;<z>
model.Plugin();<z>
);<z>
(dep.getGroupId());<z>
);<z>
,<z>
);<z>
getExecutions();<z>
execution = new PluginExecution();<z>
"package");<z>
);<z>
execution.setConfiguration(dom);<z>
add(execution);<z>
).add(plugin);<z>
mvn.setPOM(pom);<z>
() {<z>
!inWriteMode) {<z>
IntentFilter discovery=<z>
(NfcAdapter.ACTION_TAG_DISCOVERED);<z>
;<z>
=<z>
.FLAG_ACTIVITY_SINGLE_TOP<z>
Intent.FLAG_ACTIVITY_CLEAR_TOP);<z>
(this, 0, i, 0);<z>
;<z>
(this, pi, tagFilters, null);<z>
Class<T> c, Object value)<z>
<?> coll = createCollection(value);<z>
coll);<z>
InputStream adaptInputStream(InputStream is,<z>
,<z>
List<InputStreamAdapter> inputStreamAdapters)<z>
throws IOException {<z>
: inputStreamAdapters) {<z>
);<z>
is;<z>
{<z>
viewer= getSourceViewer();<z>
(viewer != null) {<z>
StyledText styledText= viewer.getTextWidget();<z>
styledText != null)<z>
);<z>
return false;<z>
parent) {<z>
getListStyle());<z>
());<z>
(table);<z>
utime_result(utime_result other) {<z>
isSetErr()) {<z>
);<z>
FloatBuffer vbo, LightBuffer lightBuffer)<z>
if (!isRenderingManually())<z>
;<z>
lightBuffer);<z>
eoglobalid, EOEditingContext eoeditingcontext) {<z>
"faultForGlobalID");<z>
eoglobalid, eoeditingcontext);<z>
autoUnlock(wasAutoLocked);<z>
Division div, FacetField field, Request request)<z>
.getName();<z>
.addInteractiveDivision("browse-navigation", BROWSE_URL_BASE,<z>
;<z>
HashMap<String, String>();<z>
);<z>
.toString(getParameterPage()));<z>
getParameterSortBy());<z>
).toString());<z>
.toString(getParameterRpp()));<z>
(VIEW, getParameterView());<z>
())<z>
);<z>
;<z>
startsWith("date"))<z>
"centuries");<z>
setHead(T_jump_century_head);<z>
2100; i >= 1500; i -= 100)<z>
+"+TO+"+(i)+"]");<z>
= generateURL(BROWSE_URL_BASE, parameters);<z>
;<z>
) {<z>
) {<z>
))<z>
+= "&fq=" + fq;<z>
cent = (i / 100);<z>
);<z>
();<z>
jumpForm.addContent(T_jump_year);<z>
T_jump_year_help);<z>
).setValue(T_go);<z>
.List.TYPE_SIMPLE, "alphabet");<z>
, "0");<z>
String url = generateURL(BROWSE_URL_BASE, parameters);<z>
] fqs = getParameterFacetQueries();<z>
(fqs != null) {<z>
fqs) {<z>
+ fq;<z>
url, "0-9");<z>
)<z>
, Character.toString(c));<z>
);<z>
;<z>
) {<z>
) {<z>
url += "&fq=" + fq;<z>
Character.toString(c));<z>
();<z>
.addContent(T_starts_with);<z>
addText(STARTS_WITH).setHelp(T_starts_with_help);<z>
.setValue(T_go);<z>
paintComponent(Graphics g) {<z>
;<z>
d = getSize();<z>
double w = d.getWidth();<z>
double h = d.getHeight();<z>
= w;<z>
eh = h;<z>
{<z>
PROP*w;<z>
(w > h/PROP){<z>
ew = h/PROP;<z>
1;<z>
) (ew-rw)-1;<z>
{<z>
) (w-rx-rw);<z>
new Rectangle(rx,<z>
*0.70));<z>
setColor(background);<z>
.fill(s);<z>
);<z>
g2.draw(s);<z>
= eh*0.25;<z>
);<z>
,<z>
(int) (eh*0.73),<z>
ow,<z>
int)ow);<z>
.setColor(background);<z>
,<z>
int) o.getY(),<z>
getWidth(),<z>
.getHeight());<z>
(Color.BLACK);<z>
(int) o.getX(),<z>
,<z>
) o.getWidth(),<z>
());<z>
<NamedElement> getMembers() {<z>
CacheAdapter cache = getCacheAdapter();<z>
if (cache != null) {<z>
Resource eResource = eResource();<z>
"unchecked")<z>
(eResource, this,<z>
());<z>
== null) {<z>
,<z>
<NamedElement>(NamedElement.class, this,<z>
.NAMESPACE__MEMBER, MEMBER_ESUBSETS));<z>
return members;<z>
.class, this, Aadl2Package.NAMESPACE__MEMBER,<z>
);<z>
void markAndSave(final GClass gclass) {<z>
cleanup.markOkay(gclass);<z>
.toCode());<z>
(IOException e) {<z>
(e);<z>
() {<z>
();<z>
= false;<z>
) {<z>
isMarkingOccurrences();<z>
(checked);<z>
editor != null);<z>
public static Test suite() {<z>
= new GWTTestSuite("Smoke test for linkers");<z>
);<z>
class);<z>
;<z>
);<z>
;<z>
)<z>
(value == null)<z>
null;<z>
Boolean.TRUE.equals(value))<z>
Boolean.FALSE;<z>
.FALSE.equals(value))<z>
TRUE;<z>
("The value must be a Boolean.");<z>
) throws RecognitionException {<z>
null;<z>
iv_ruleCondition_Impl = null;<z>
newCompositeNode(grammarAccess.getCondition_ImplRule());<z>
FOLLOW_ruleCondition_Impl_in_entryRuleCondition_Impl3509);<z>
iv_ruleCondition_Impl=ruleCondition_Impl();<z>
;<z>
=iv_ruleCondition_Impl;<z>
EOF,FollowSets000.FOLLOW_EOF_in_entryRuleCondition_Impl3519);<z>
(RecognitionException re) {<z>
,re);<z>
appendSkippedTokens();<z>
current;<z>
public Page getPageForCompress(int flag, long pageno)<z>
;<z>
getPageForCompress(this, flag, pageno);<z>
> javaClass)<z>
)<z>
return null;<z>
)<z>
class)<z>
return Boolean.class;<z>
== int.class)<z>
class;<z>
else if (javaClass == float.class)<z>
Float.class;<z>
double.class)<z>
;<z>
if (javaClass == long.class)<z>
;<z>
== short.class)<z>
.class;<z>
.class)<z>
class;<z>
class;<z>
javaClass;<z>
) {<z>
this.comboTargetLayer.isDisposed()) return;<z>
.getText();<z>
;<z>
(this.lastNameGenerated)){<z>
comboTargetLayer.setText(this.lastNameGenerated);<z>
comboTargetLayer);<z>
public TaskDataManagerEvent(ITaskDataManager source, ITask task) {<z>
source);<z>
Assert.isNotNull(task);<z>
= task;<z>
.taskData = null;<z>
;<z>
{<z>
)) return;<z>
context, component);<z>
ForEach forEach = (ForEach) component;<z>
);<z>
setObjectId(null);<z>
= forEach.getWrapperTagName();<z>
== 0)<z>
ResponseWriter writer = context.getResponseWriter();<z>
);<z>
(wrapperTagName, forEach);<z>
clientId, null);<z>
));<z>
!= null) {<z>
, null);<z>
Styles.renderStyleClasses(context, forEach);<z>
{<z>
) {<z>
throw runtimeException;<z>
) {<z>
throw error;<z>
toAttributesString() {<z>
buf = new StringBuffer();<z>
));<z>
();<z>
final void ruleLinDef() throws RecognitionException {<z>
();<z>
==0 ) {<z>
());<z>
(FOLLOW_rule__LinDef__Alternatives_in_ruleLinDef1240);<z>
);<z>
state._fsp--;<z>
.failed) return ;<z>
state.backtracking==0 ) {<z>
;<z>
(RecognitionException re) {<z>
reportError(re);<z>
(input,re);<z>
;<z>
(String buttonGroupName, int indexInGroup) {<z>
.groupTitles.indexOf(buttonGroupName);<z>
groupIndex < 0)<z>
(<z>
;<z>
);<z>
isSingleSelectionMode<z>
(removed instanceof JCommandToggleButton)) {<z>
((JCommandToggleButton) removed);<z>
);<z>
public final AdventureResult findGoodItem( boolean steal )<z>
steal ) )<z>
PET_SWEATER;<z>
availableItem( FamiliarData.PUMPKIN_BUCKET, steal ) )<z>
.PUMPKIN_BUCKET;<z>
.availableItem( FamiliarData.FIREWORKS, steal ) )<z>
return FamiliarData.FIREWORKS;<z>
steal ) )<z>
return FamiliarData.FLOWER_BOUQUET;<z>
( FamiliarData.MOVEABLE_FEAST, steal ) )<z>
MOVEABLE_FEAST;<z>
( this.id );<z>
.get( itemId, 1 ) : null;<z>
) )<z>
;<z>
, steal ) )<z>
;<z>
steal ) )<z>
LEAD_NECKLACE;<z>
;<z>
input, RecognizerSharedState state) {<z>
state);<z>
[52+1];<z>
throws BeansException {<z>
{<z>
);<z>
);<z>
minDelayNs) {<z>
();<z>
;<z>
.minDelayNs = minDelayNs;<z>
a = 100;<z>
= -4963;<z>
k++) {<z>
));<z>
getOptions() {<z>
new String [4];<z>
0;<z>
options[current++] = "-R";<z>
m_Seed;<z>
] = "-C";<z>
= "" + m_ClassOrder;<z>
current < options.length) {<z>
= "";<z>
;<z>
getNumberOfFiles()<z>
throws DatabaseException {<z>
cachePopulated;<z>
();<z>
long glyphOffset) throws IOException {<z>
= glyphOffset;<z>
;<z>
int flags = 0;<z>
in.readTTFUShort(currentGlyphOffset);<z>
readTTFUShort(currentGlyphOffset + 2);<z>
= subset.get(glyphIndex);<z>
!= null;<z>
.writeTTFUShort(currentGlyphOffset + 2, indexInSubset);<z>
(flags);<z>
.hasMoreComposites(flags));<z>
void doDelete(ObjectKey pk) throws TorqueException<z>
, (Connection) null);<z>
) {<z>
toBytes(this.table);<z>
(tableNameAsBytes,<z>
startKey, this.id,<z>
!HTableDescriptor.isMetaTable(tableNameAsBytes));<z>
(nameAsBytes);<z>
() throws RecognitionException {<z>
keepStackSize();<z>
.backtracking==0 ) {<z>
).getNewKeyword_1());<z>
) return ;<z>
.backtracking==0 ) {<z>
getXConstructorCallAccess().getNewKeyword_1());<z>
) {<z>
;<z>
;<z>
(stackSize);<z>
private void doReboot() {<z>
showAlertDialogEx(this,<z>
getString(R.string.reboot_device),<z>
.ok),<z>
DialogButtonClickListener() {<z>
void onClick(View v) {<z>
DeviceUtils.reboot();<z>
cancel), null);<z>
) throws IOException {<z>
.size() < 1) {<z>
null;<z>
);<z>
= bagOfIntermediates.iterator();<z>
if (!intermediateIterator.hasNext()) {<z>
null;<z>
;<z>
;<z>
) peekTuple.get(0);<z>
) peekTuple.get(1);<z>
DataBag) peekTuple.get(2);<z>
PriorityQueue<Tuple>(n + 1,<z>
fieldNum));<z>
updateTop(store, n, inputBag);<z>
) {<z>
Tuple t = intermediateIterator.next();<z>
.size() < 3 ) continue;<z>
.get(2));<z>
DataBag outputBag = mBagFactory.newDefaultBag();<z>
t : store) {<z>
.add(t);<z>
(log.isDebugEnabled()) {<z>
"outputting "+t.toDelimitedString("\t"));<z>
return outputBag;<z>
} catch (ExecException e) {<z>
e);<z>
{<z>
("General Exception executing function: " + e);<z>
) {<z>
) + 1;<z>
Storage_access.getNbPeriods() +1 ;<z>
;<z>
1;<z>
< COLUMNS; i++){<z>
{<z>
;;<z>
));<z>
(SimplePanel)w);<z>
;<z>
elem) {<z>
FORMAT_Q);<z>
!= null) {<z>
;<z>
{<z>
handleException("format element of payloadFactoryMediator is required");<z>
argumentsElem = elem.getFirstChildWithName(ARGS_Q);<z>
!= null) {<z>
Iterator itr = argumentsElem.getChildElements();<z>
(itr.hasNext()) {<z>
();<z>
arg = new Argument();<z>
String attrValue;<z>
{<z>
);<z>
ATT_EXPRN)) != null) {<z>
== 0) {<z>
);<z>
} else {<z>
);<z>
e) {<z>
("Invalid XPath expression for attribute expression : " +<z>
, e);<z>
{<z>
"Unsupported arg type or expression attribute required");<z>
argumentList.add(arg);<z>
;<z>
setRunValue(int value) {<z>
0) {<z>
.getTestCount() ) );<z>
} else {<z>
);<z>
(<z>
)<z>
instanceof DSAPublicKey)<z>
)key);<z>
(key instanceof DSAPrivateKey)<z>
key);<z>
throw new InvalidKeyException("key type unknown");<z>
pconn) {<z>
if (activeConnections < 0)<z>
);<z>
.debug("disposing pconn: {}", pconn);<z>
;<z>
.release();<z>
;<z>
();<z>
(BuddycloudProvider provider) {<z>
BuddycloudProvider.TAG, "notify ui about roster udpates");<z>
().getContentResolver()<z>
.CONTENT_URI, null);<z>
) {<z>
)<z>
;<z>
end);<z>
public void createControl(final Composite parent) {<z>
isPropertyPage()) {<z>
;<z>
;<z>
);<z>
ThreddsLayer getLayerById( String layerId )<z>
= this.scalarLayers.get( layerId );<z>
null )<z>
.vectorLayers.get( layerId );<z>
return layer;<z>
) {<z>
();<z>
.class,<z>
;<z>
( Split.class,<z>
SplitInstance.class ) );<z>
( Join.class,<z>
.class ) );<z>
,<z>
) );<z>
class,<z>
;<z>
MilestoneNode.class,<z>
);<z>
SubProcessNode.class,<z>
);<z>
class,<z>
CreateNewNodeFactory( ActionNodeInstance.class ) );<z>
.class,<z>
CreateNewNodeFactory( WorkItemNodeInstance.class ) );<z>
class,<z>
) );<z>
.class,<z>
;<z>
register( CompositeNode.class,<z>
new CreateNewNodeFactory( CompositeNodeInstance.class ) );<z>
( CompositeContextNode.class,<z>
.class ) );<z>
register( HumanTaskNode.class,<z>
) );<z>
register( ForEachNode.class,<z>
class ) );<z>
class,<z>
;<z>
throws JSONException {<z>
;<z>
;<z>
jo;<z>
String k;<z>
;<z>
length;<z>
= new StringBuilder();<z>
String tagName;<z>
;<z>
;<z>
(tagName);<z>
.escape(tagName);<z>
sb.append('<');<z>
tagName);<z>
(1);<z>
{<z>
i = 2;<z>
e;<z>
= jo.keys();<z>
.hasNext()) {<z>
);<z>
(k);<z>
jo.optString(k);<z>
null) {<z>
' ');<z>
.escape(k));<z>
'=');<z>
'"');<z>
);<z>
;<z>
else {<z>
= 1;<z>
();<z>
i >= length) {<z>
.append('/');<z>
'>');<z>
{<z>
sb.append('>');<z>
.get(i);<z>
+= 1;<z>
if (e != null) {<z>
if (e instanceof String) {<z>
e.toString()));<z>
if (e instanceof JSONObject) {<z>
)e));<z>
(e instanceof JSONArray) {<z>
JSONArray)e));<z>
i < length);<z>
'<');<z>
;<z>
sb.append(tagName);<z>
('>');<z>
toString();<z>
ProjectDefinition> getOrderedProjects(ProjectDefinition project) {<z>
= Lists.newArrayList();<z>
pd = project;<z>
pd != null) {<z>
pd);<z>
= pd.getParent();<z>
return result;<z>
void updateStatus( String message, int status ) {<z>
( null, IMessageProvider.ERROR );<z>
IMessageProvider.INFORMATION );<z>
;<z>
.NONE );<z>
message, status );<z>
ERROR || message == null );<z>
, int score) {<z>
name;<z>
this.type = type;<z>
text;<z>
= discount;<z>
;<z>
,<z>
)<z>
throws NamingException {<z>
DirContextStringPair res = getTargetContext(name);<z>
).search(res.getString(),<z>
;<z>
Collection<RenderContext> configuration,<z>
final RendererCreator rendererCreator) {<z>
new HashMap<RenderContext, RenderContext>();<z>
;<z>
configuration2 != null)<z>
) {<z>
);<z>
.changed(msg);<z>
configuration2=rendererCreator.getConfiguration();<z>
;<z>
configuration2 ) {<z>
if (!oldToCopy.containsKey(newcontext)<z>
) {<z>
newcontext.getLayerInternal());<z>
{<z>
(newcontext instanceof CompositeRenderContext) {<z>
newcontext))<z>
;<z>
CompositeRenderContext) newcontext).getLayersInternal() ) {<z>
(layer)) {<z>
);<z>
layer);<z>
()){<z>
;<z>
(newcontext);<z>
return toRender;<z>
public void addPages(){<z>
snippet);<z>
addPage(descriptionPage);<z>
= new SnippetToSnipExCategoryPage("Select a category to export your snippet to");<z>
addPage(categoryPage);<z>
importPlaces(File file) throws Exception<z>
)<z>
, true);<z>
);<z>
(Object object) {<z>
object instanceof IResource) {<z>
).toString();<z>
(object);<z>
boolean enableJavascriptConsole() {<z>
if (!isDebugEnabled()) {<z>
false;<z>
.getBoolean(PREF_JAVASCRIPT_CONSOLE, true);<z>
public OpenMBeanInfoSupport(String name, String desc,<z>
attribs,<z>
OpenMBeanConstructorInfo[] cons,<z>
[] ops,<z>
)<z>
, desc, (MBeanAttributeInfo[]) attribs,<z>
MBeanConstructorInfo[]) cons,<z>
[]) ops,<z>
;<z>
setUndeleted(final Boolean value) {<z>
) {<z>
= getUndeleted();<z>
()) {<z>
) {<z>
);<z>
} else {<z>
;<z>
this.undeleted = value;<z>
));<z>
String deviceName) {<z>
{<z>
.get(deviceName);<z>
) throws SVNException {<z>
null) {<z>
return true;<z>
for (; ;) {<z>
if (myIsFirstRequest) {<z>
.SSL, realm, url);<z>
= false;<z>
else {<z>
SSL, realm, url);<z>
{<z>
.cancel("SSL authentication with client certificate cancelled", SVNLogType.NETWORK);<z>
keyManagers;<z>
if (isMSCAPI(myAuthentication)) {<z>
);<z>
chooseAlias = myAuthentication.getAlias();<z>
{<z>
authenticationManager instanceof ISVNSSLPasspharsePromptSupport &&<z>
) authenticationManager).isSSLPassphrasePromtSupported()) {<z>
myAuthentication);<z>
} else {<z>
myAuthentication.getPassword());<z>
} catch (SVNAuthenticationException authenticationException) {<z>
authenticationException;<z>
) {<z>
;<z>
) {<z>
.getCause());<z>
, myAuthentication, url, authenticationManager);<z>
= keyManagers;<z>
true;<z>
, Long> isEditing(String pageUuid) {<z>
pageEditingCache.get(pageUuid);<z>
)<z>
getValue();<z>
null;<z>
{<z>
.debug("starting GC thread");<z>
) {<z>
gcIfNeeded();<z>
= getGCIntervalInMinutes();<z>
if (gcInterval < 0) {<z>
);<z>
(-gcInterval);<z>
else {<z>
);<z>
1000);<z>
(InterruptedException e) {<z>
GCEnabled = false;<z>
info("GCThread bruttaly interupted");<z>
{<z>
null ) {<z>
(e);<z>
} else {<z>
e);<z>
OnClickListener mOnFirstClickListener = new OnClickListener() {<z>
{<z>
(Info) v.getTag();<z>
Intent(Intent.ACTION_VIEW).setData(Uri<z>
(info.getUrl()));<z>
;<z>
public void packetArrived(Packet packet) {<z>
m_counter++;<z>
)<z>
m_icmpCounter++;<z>
m_counter +<z>
;<z>
grandparent() {<z>
parent.parent == sentinel) {<z>
;<z>
parent;<z>
serviceId,<z>
URI eventSubscriptionURI,<z>
) throws ValidationException {<z>
return new RemoteService(<z>
, serviceId,<z>
, controlURI, eventSubscriptionURI,<z>
, stateVariables<z>
createDataset() {<z>
new DefaultPieDataset();<z>
Double(43.2));<z>
, new Double(10.0));<z>
"Three", new Double(27.5));<z>
new Double(17.5));<z>
("Five", new Double(11.0));<z>
new Double(19.4));<z>
return dataset;<z>
String muxer)<z>
new libvlc_exception_t();<z>
name, muxer, exception);<z>
parameters ) throws Exception<z>
, parameters );<z>
= new VariantEditor ();<z>
( parameters );<z>
String str = cfg.getString ( "value" );<z>
, str );<z>
null )<z>
setAsText ( str );<z>
getValue ();<z>
== null )<z>
NULL;<z>
value = Variant.NULL;<z>
.getString ( "user" );<z>
reason = cfg.getString ( "reason" );<z>
, System.currentTimeMillis () ) );<z>
();<z>
() throws RecognitionException {<z>
stackSize = keepStackSize();<z>
().getMultiplicityAssignment_5());<z>
;<z>
= input.LA(1);<z>
( (LA7_0==35) ) {<z>
;<z>
alt7) {<z>
case 1 :<z>
FOLLOW_rule__ParameterRule__MultiplicityAssignment_5_in_rule__ParameterRule__Group__5__Impl1585);<z>
rule__ParameterRule__MultiplicityAssignment_5();<z>
--;<z>
getMultiplicityAssignment_5());<z>
(RecognitionException re) {<z>
(re);<z>
,re);<z>
stackSize);<z>
rectangle) throws NullArgumentException {<z>
null)<z>
throw new NullArgumentException();<z>
firstSideInter = null;<z>
;<z>
boolean condition;<z>
new Vector(initialPoint, directionPoint);<z>
if (isVertical(direction)) {<z>
().getY());<z>
getY());<z>
().getX()<z>
) {<z>
firstSideInter = null;<z>
= null;<z>
else {<z>
) {<z>
;<z>
{<z>
;<z>
goingUp(direction);<z>
(isHorizontal(direction)) {<z>
.getY());<z>
), directionPoint.getY());<z>
().getY()<z>
getUpperLeft().getY()) {<z>
firstSideInter = null;<z>
= null;<z>
} else {<z>
) {<z>
= null;<z>
(otherSideInter)) {<z>
otherSideInter = null;<z>
direction);<z>
();<z>
tan) * initialPoint.getX();<z>
lowerLeftModel = rectangle.getLowerLeft();<z>
= rectangle.getUpperRight();<z>
+ b));<z>
,<z>
+ b));<z>
lowerLeftModel.getY());<z>
tan, upperRightModel.getY());<z>
Point>();<z>
lefterPoint)) {<z>
points.add(lefterPoint);<z>
{<z>
(righterPoint);<z>
{<z>
(upperPoint);<z>
, lowerPoint)) {<z>
(lowerPoint);<z>
size() > 0) {<z>
firstSideInter = points.get(0);<z>
> 1) {<z>
= points.get(1);<z>
true;<z>
condition, rectangle, firstSideInter, otherSideInter);<z>
MiniFileBasedCommitLogCluster(CloudataConf conf) throws IOException {<z>
.conf = conf;<z>
String, CommitLogServerIF>();<z>
CommitLogServer.formatAll();<z>
startCommitLogServers();<z>
revalidate() {<z>
if (templateNames.size() > 0)<z>
.setOK();<z>
;<z>
;<z>
Media) {<z>
();<z>
) {<z>
case LOCAL_VIDEO:<z>
= "";<z>
"") {<z>
makeText(<z>
MediaPlayerDemo_Video.this,<z>
,<z>
LENGTH_LONG).show();<z>
:<z>
;<z>
{<z>
makeText(<z>
,<z>
,<z>
.show();<z>
);<z>
setDataSource(path);<z>
;<z>
);<z>
(this);<z>
mMediaPlayer.setOnCompletionListener(this);<z>
mMediaPlayer.setOnPreparedListener(this);<z>
(this);<z>
.STREAM_MUSIC);<z>
{<z>
(), e);<z>
public Bitmap get(String id){<z>
))<z>
;<z>
(id);<z>
{<z>
printStackTrace();<z>
return null;<z>
) {<z>
;<z>
))<z>
next;<z>
next += Integer.MIN_VALUE;<z>
)<z>
;<z>
= 1 + max - min;<z>
if (interval <= 0)<z>
".." + max + "] error");<z>
) + min;<z>
String target, int fromIndex) {<z>
= source.length();<z>
length();<z>
= sourceCount - targetCount;<z>
(fromIndex < 0) {<z>
;<z>
{<z>
= rightIndex;<z>
if (targetCount == 0) {<z>
fromIndex;<z>
target.toLowerCase().toCharArray();<z>
target.toUpperCase().toCharArray();<z>
;<z>
int min = targetCount - 1;<z>
+ fromIndex;<z>
) {<z>
]) {<z>
--;<z>
) {<z>
- 1;<z>
1);<z>
int k = strLastIndex - 1;<z>
> start) {<z>
j);<z>
) {<z>
i--;<z>
j--;<z>
;<z>
(j <= start) {<z>
;<z>
;<z>
buildElement( SpaceModel spaceModel )<z>
);<z>
getChildren() != null )<z>
( ATTRIBUTE_KEY_CHILDCOUNT, "1" );<z>
.getRootPage(), true ) );<z>
return root;<z>
Color color) {<z>
;<z>
!= null && color.isDisposed ()) {<z>
error (SWT.ERROR_INVALID_ARGUMENT);<z>
));<z>
|| index > count - 1) return;<z>
) cellBackground = new Color [count];<z>
index] = color;<z>
);<z>
0) cached = true;<z>
) {<z>
0;<z>
currentPosition;<z>
{<z>
count++;<z>
fromIndex) + 1;<z>
return count;<z>
) {<z>
image != null) return image;<z>
GraphicsEnvironment.isHeadless()) {<z>
image = getOptimizedImage();<z>
return image;<z>
private iPolygon hatch(HalfPlane h)<z>
iPolygon(false);<z>
(), Interval.bigInterval());<z>
())<z>
result;<z>
.low()));<z>
se.high()));<z>
s))<z>
e("BooleanGrid.hatch(): start point is in solid!");<z>
DDA(s, e);<z>
();<z>
= n;<z>
;<z>
false;<z>
(n != null)<z>
;<z>
(v != vs)<z>
if(v)<z>
(n);<z>
add(nOld);<z>
;<z>
;<z>
dda.next();<z>
))<z>
);<z>
result.add(e);<z>
2 != 0)<z>
+ result.size());<z>
;<z>
view) {<z>
), view);<z>
);<z>
private BindNoDResponse( ResultCodeEnum rcode )<z>
();<z>
( rcode )<z>
case UNAVAILABLE:<z>
case PROTOCOL_ERROR:<z>
:<z>
err( I18n.ERR_04166, ResultCodeEnum.UNAVAILABLE,<z>
ResultCodeEnum.STRONG_AUTH_REQUIRED ) );<z>
toString() + ": The server will disconnect!" );<z>
);<z>
setResultCode( rcode );<z>
{<z>
= jdbcTemplate;<z>
;<z>
());<z>
(MetaDataAccessException e) {<z>
, e);<z>
(dbType == DatabaseType.DERBY) {<z>
dialect = new DerbyTemplates();<z>
.H2) {<z>
new H2Templates();<z>
.HSQL) {<z>
= new HSQLDBTemplates();<z>
.MYSQL) {<z>
dialect = new MySQLTemplates();<z>
else if (dbType == DatabaseType.ORACLE) {<z>
= new OracleTemplates();<z>
) {<z>
dialect = new PostgresTemplates();<z>
DatabaseType.SQLSERVER) {<z>
.dialect = new SQLServerTemplates();<z>
InvalidDataAccessResourceUsageException(dbType + " is an unsupported database");<z>
putMultipartRelated(MultipartRelatedInput multipart)<z>
APPLICATION_XOP_XML, multipart.getType());<z>
assertEquals("<mymessage.xml@example.org>", multipart<z>
.getStart());<z>
("text/xml", multipart.getStartInfo());<z>
);<z>
);<z>
, multipart.getRootPart());<z>
();<z>
getMediaType().getType());<z>
.getMediaType().getSubtype());<z>
)<z>
));<z>
()<z>
;<z>
, rootPart<z>
).getFirst("Content-ID"));<z>
().getFirst(<z>
));<z>
(<z>
getBodyAsString());<z>
inputParts.next();<z>
.getMediaType().getType());<z>
;<z>
assertEquals("<http://example.org/me.png>", relatedPart1<z>
.getFirst("Content-ID"));<z>
getHeaders().getFirst(<z>
);<z>
, relatedPart1<z>
;<z>
= inputParts.next();<z>
, relatedPart2.getMediaType()<z>
;<z>
"pkcs7-signature", relatedPart2.getMediaType()<z>
));<z>
.assertEquals("<http://example.org/me.hsh>", relatedPart2<z>
));<z>
).getFirst(<z>
"Content-Transfer-Encoding"));<z>
("// binary octets for signature", relatedPart2<z>
getBodyAsString());<z>
) throws IOException {<z>
connected) {<z>
);<z>
return outputStream;<z>
public void run() {<z>
Runnable() {<z>
void run() {<z>
;<z>
} );<z>
void initWorldBounds() {<z>
get("worldBounds");<z>
if (worldBoundsStr == null)<z>
);<z>
;<z>
()<z>
!=null &&<z>
;<z>
writer )<z>
;<z>
writer.indent();<z>
generate( writer );<z>
}finally{<z>
exdent();<z>
public float getViewPlaneDistance(){<z>
parentLayer == null)<z>
getViewPlaneDistance();<z>
;<z>
) {<z>
!= null;<z>
getDescription();<z>
{<z>
false;<z>
.getKind() == FlowElementKind.OPERATOR;<z>
;<z>
FlowElementProcessor processor = repo.findProcessor(description);<z>
(processor == null) {<z>
);<z>
return false;<z>
LINE_END<z>
RENDEZVOUS;<z>
NotNull PsiExpression expr,<z>
,<z>
) {<z>
PsiUtil.isLanguageLevel8OrHigher(expr)) return false;<z>
expr.getType();<z>
superType instanceof PsiClassType)) return false;<z>
();<z>
.equals(superClass);<z>
PortalResponse response, HttpServletResponse httpResponse,<z>
)<z>
hasRedirectInstruction() )<z>
, httpRequest );<z>
response.isForwardToSitePath() )<z>
, httpRequest, httpResponse );<z>
);<z>
Point2D control1) {<z>
"control1",<z>
(),<z>
));<z>
.clone();<z>
();<z>
event) {<z>
d(TAG, "createBeamUris");<z>
();<z>
0) {<z>
);<z>
;<z>
= mTheme.isExistZip(current);<z>
!mIsBeam){<z>
.sendToTarget();<z>
Log.w(TAG,"don't exist zip file.");<z>
null;<z>
= PayloadFactory<z>
getThemePath(current));<z>
);<z>
(new File(zipPath));<z>
{uri};<z>
Exception ex, Object body,<z>
status, WebRequest request) {<z>
) {<z>
, WebRequest.SCOPE_REQUEST);<z>
);<z>
private boolean jj_3R_474() {<z>
Token xsp;<z>
xsp = jj_scanpos;<z>
jj_3R_695()) {<z>
;<z>
if (jj_3R_696()) return true;<z>
;<z>
Short id) throws OfficeException {<z>
()) {<z>
) {<z>
;<z>
new OfficeException(OfficeConstants.ERROR_STATUS);<z>
boolean onTouchEvent(MotionEvent event) {<z>
isEnabled()) {<z>
;<z>
getAction()) {<z>
:<z>
MotionEvent.ACTION_MOVE:<z>
case MotionEvent.ACTION_UP:<z>
i=0;<z>
());<z>
-i);<z>
("Progress",getProgress()+"");<z>
);<z>
:<z>
;<z>
) {<z>
"My pattern supplied is "+patternStr);<z>
"www\\.xyz\\.com/sports"));<z>
;<z>
public KeyDefinition getKeyDef() {<z>
null == cfBaseMapDef) {<z>
return keyDef;<z>
{<z>
();<z>
[] process(float[] values)<z>
length; ++i)<z>
[i] < 0)<z>
values[i] += floatFold;<z>
.process(values);<z>
(String text) {<z>
) return "Classes";<z>
equals("depends_on")) return "Depends_on";<z>
) + "s";<z>
(final AbstractLearningClassifierSystem lcs) {<z>
().getChromosomeSize());<z>
);<z>
getUpdateStrategy();<z>
lcs;<z>
);<z>
(T object) throws IOException {<z>
eachStreamSize) {<z>
null) {<z>
);<z>
);<z>
currentWriter.write(object);<z>
static final String wordify(String s) {<z>
sb = new StringBuilder();<z>
boolean isFirstCharacter = true;<z>
;<z>
) {<z>
)) {<z>
isFirstCharacter) {<z>
));<z>
false;<z>
else if (inUpperCase) {<z>
.isUpperCase(c)) {<z>
c));<z>
else {<z>
;<z>
(c);<z>
else {<z>
if (Character.isUpperCase(c)) {<z>
inUpperCase = true;<z>
;<z>
c);<z>
{<z>
.append(c);<z>
toString();<z>
color) {<z>
FSRGBColor) {<z>
FSRGBColor) color;<z>
;<z>
color instanceof FSCMYKColor) {<z>
(FSCMYKColor) color;<z>
cmyk.getBlack());<z>
} else {<z>
().getName());<z>
File> splitFiles(File f) throws IOException {<z>
) / MB;<z>
{<z>
Collections.singletonList(f);<z>
else {<z>
= new ArrayList<File>();<z>
= new FileInputStream(f);<z>
BUFFER_SIZE];<z>
;<z>
int read = 0;<z>
!= -1) {<z>
) + "-" + i);<z>
fout);<z>
);<z>
* MB);<z>
) {<z>
.write(buffer, 0, read);<z>
;<z>
flush();<z>
fo.close();<z>
i++;<z>
.close();<z>
return arrayList;<z>
{<z>
;<z>
.THEME_DARK) {<z>
"<style>* { background: black ! important; color: white !important }" +<z>
+ content;<z>
null);<z>
String actionType) {<z>
).getNodeTypeManager();<z>
)) {<z>
.getName())) {<z>
;<z>
re) {<z>
)) {<z>
(re.getMessage());<z>
return false ;<z>
int offset) throws Exception {<z>
.text = text;<z>
;<z>
.offset = offset;<z>
;<z>
{<z>
);<z>
!= null) {<z>
(target, actTok, stackFrame.getLocalsLocator()<z>
);<z>
setCompletionListener(this);<z>
target.postCommand(cmd);<z>
;<z>
return EMPTY_COMPLETION_PROPOSALS;<z>
long getEntityOwnerId() {<z>
getId());<z>
!= null) {<z>
group.getAccountId();<z>
Account.ACCOUNT_ID_SYSTEM;<z>
protected InputStream wrapInputStream(InputStream in) throws IOException<z>
);<z>
InputStream)currentStream;<z>
boolean log() {<z>
;<z>
(t - lastLog > 5 * NANOS_PER_SECOND) {<z>
;<z>
true;<z>
;<z>
getColumnName(int columnIndex) {<z>
null;<z>
columnModel.getColumnCount()) {<z>
answer;<z>
.getHeaderValue();<z>
null) {<z>
.toString();<z>
return answer;<z>
{<z>
{<z>
return "";<z>
) {<z>
".*\\.", "").toLowerCase();<z>
{<z>
return "";<z>
(Color color) {<z>
checkWidget ();<z>
color.isDisposed ()) {<z>
;<z>
color.isDisposed ()) {<z>
.error (SWT.ERROR_INVALID_ARGUMENT);<z>
!= null) {<z>
OS.gcnew_SolidColorBrush (color.handle);<z>
.Control_Background (handle, brush);<z>
GCHandle_Free (brush);<z>
{<z>
OS.Control_BackgroundProperty ();<z>
);<z>
);<z>
;<z>
= true;<z>
Iterator iteratorNeighbors() {<z>
) {<z>
offset;<z>
= outgoing;<z>
public Object next() {<z>
.getEdge(offset++);<z>
.size())<z>
Node.this);<z>
) {<z>
;<z>
offset = 0;<z>
= null;<z>
;<z>
boolean hasNext() {<z>
null)<z>
false;<z>
< list.size())<z>
true;<z>
if (list == outgoing) {<z>
;<z>
offset = 0;<z>
return offset < list.size();<z>
void remove() {<z>
);<z>
run() {<z>
"Started StpThread");<z>
while (!cancelled) {<z>
.getMs());<z>
);<z>
theQuery) {<z>
MinNumberOfStudiesCriteria msc = theQuery.getMinNumberOfStudiesCriteria();<z>
minStudiesWhereStmt = "";<z>
!= null) {<z>
Integer tempInteger = msc.getMinNumberOfStudiesValue();<z>
STUDY_NUMBER + tempInteger + " ");<z>
return minStudiesWhereStmt;<z>
String propertyName, final String propertyValue) {<z>
;<z>
"propertyValue");<z>
;<z>
, Collections.singleton(propertyValue));<z>
{<z>
)) {<z>
propertyName, previous);<z>
else {<z>
String>(previous);<z>
);<z>
Collections.unmodifiableSet(replacement));<z>
this;<z>
> getDestinations() {<z>
referenceStoreAdapter.getDestinations());<z>
;<z>
(topics.keySet());<z>
;<z>
verifyUserId(UserMgtBean userMgtBean) throws IdentityMgtException {<z>
verification = false;<z>
userMgtBean.getUserKey();<z>
).length() < 1){<z>
false;<z>
registry = null;<z>
.<z>
SUPER_TENANT_ID);<z>
;<z>
.IDENTITY_MANAGEMENT_KEYS +<z>
getTenantId(userMgtBean.getTenantDomain()) +<z>
+ userMgtBean.getUserId();<z>
;<z>
)) {<z>
registry.get(identityKeyMgtPath);<z>
USER_KEY);<z>
(userKey))) {<z>
= true;<z>
.delete(identityKeyMgtPath);<z>
} catch (RegistryException e) {<z>
("Error while processing userKey", e);<z>
} finally {<z>
if(registry != null){<z>
{<z>
commitTransaction();<z>
else {<z>
();<z>
RegistryException e) {<z>
log.error("Error while processing registry transaction", e);<z>
return verification;<z>
{<z>
= new StringBuilder();<z>
append("{");<z>
+ ", ");<z>
+ ", ");<z>
maxRecords + ", ");<z>
"EngineName: " + engineName + ", ");<z>
"MajorEngineVersion: " + majorEngineVersion + ", ");<z>
;<z>
.toString();<z>
FormToolkit widgetFactory, Composite parent) {<z>
.name, MappingMessages.EMFMultiPropertiesBindingPropertiesEditionPart_NameLabel);<z>
= widgetFactory.createText(parent, "");<z>
(FormToolkit.KEY_DRAW_BORDER, FormToolkit.TEXT_BORDER);<z>
parent);<z>
.FILL_HORIZONTAL);<z>
.setLayoutData(nameData);<z>
(new FocusAdapter() {<z>
SuppressWarnings("synthetic-access")<z>
) {<z>
propertiesEditionComponent != null) {<z>
PropertiesEditionEvent(<z>
,<z>
,<z>
()));<z>
PropertiesEditionEvent(<z>
.this,<z>
name,<z>
PropertiesEditionEvent.FOCUS_CHANGED, PropertiesEditionEvent.FOCUS_LOST,<z>
)));<z>
{<z>
propertiesEditionComponent != null) {<z>
PropertiesEditionEvent(<z>
.this,<z>
.FOCUS_CHANGED, PropertiesEditionEvent.FOCUS_GAINED,<z>
;<z>
;<z>
KeyAdapter() {<z>
("synthetic-access")<z>
void keyPressed(KeyEvent e) {<z>
.CR) {<z>
if (propertiesEditionComponent != null)<z>
));<z>
});<z>
);<z>
EditingUtils.setEEFtype(name, "eef::Text");<z>
, MappingViewsRepository.FORM_KIND), null);<z>
parent;<z>
gl) throws Exception<z>
getInstance().UPDATE));<z>
;<z>
)<z>
set(gl);<z>
regex) {<z>
regex;<z>
"Regex filtering not implemented yet");<z>
static void getWorkflowTask(PortletRequest portletRequest)<z>
Exception {<z>
(<z>
);<z>
request);<z>
.Exception{<z>
VpcIdSetType object =<z>
;<z>
event;<z>
String nillableValue = null;<z>
;<z>
"";<z>
())<z>
.next();<z>
,"type")!=null){<z>
,<z>
);<z>
if (fullTypeName!=null){<z>
null;<z>
{<z>
.indexOf(":"));<z>
null?"":nsPrefix;<z>
(":")+1);<z>
!"VpcIdSetType".equals(type)){<z>
;<z>
VpcIdSetType)ExtensionMapper.getTypeObject(<z>
,type,reader);<z>
;<z>
next();<z>
new java.util.ArrayList();<z>
reader.next();<z>
))){<z>
;<z>
= false;<z>
{<z>
))<z>
next();<z>
.next();<z>
))<z>
);<z>
){<z>
true;<z>
{<z>
())){<z>
VpcIdSetItemType.Factory.parse(reader));<z>
}else{<z>
= true;<z>
VpcIdSetItemType[])<z>
.databinding.utils.ConverterUtil.convertToArray(<z>
VpcIdSetItemType.class,<z>
list1));<z>
))<z>
();<z>
if (reader.isStartElement())<z>
;<z>
.XMLStreamException e) {<z>
.Exception(e);<z>
return object;<z>
remove(Object o) {<z>
setDirty();<z>
int indexOfO = list.indexOf(o);<z>
(indexOfO);<z>
(o);<z>
> getDataModel() {<z>
log.isDebugEnabled()) {<z>
"call getDataModel...");<z>
{<z>
.dataModel = em.createQuery(<z>
.getResultList();<z>
isDebugEnabled()) {<z>
size());<z>
return this.dataModel;<z>
propagation,<z>
format) throws CMISConstraintException<z>
CMISAclPropagationEnum.OBJECT_ONLY)<z>
propagation);<z>
= nodeService.getType(nodeRef);<z>
;<z>
)<z>
getDisplayName());<z>
!= null)<z>
permissions = permissionService.getAllSetPermissions(nodeRef);<z>
(CMISAccessControlEntry entry : acesToRemove)<z>
)));<z>
;<z>
contains(toCheck))<z>
("No matching ACE found to delete");<z>
.getPrincipalId(), alfrescoPermission);<z>
acesToAdd != null)<z>
acesToAdd)<z>
entry.getPermission()));<z>
;<z>
(nodeRef, format);<z>
{<z>
== -1) return;<z>
;<z>
old.isReadOnly()) return;<z>
);<z>
;<z>
{<z>
= true;<z>
lang instanceof MultiLanguageSetting)) {<z>
performMulti(ent, old);<z>
else {<z>
null;<z>
)) {<z>
;<z>
;<z>
);<z>
, HttpCookie ck) {<z>
if (ck == null) {<z>
throw new NullPointerException("cookie is null");<z>
boolean modified = false;<z>
.lock();<z>
(ck);<z>
} finally {<z>
.unlock();<z>
modified;<z>
getRenderingArea() {<z>
();<z>
0)<z>
dataArea;<z>
= new AffineTransform();<z>
.getWidth() / 2;<z>
.getHeight() / 2;<z>
, offsetY);<z>
.toRadians(getAngle()));<z>
;<z>
(), dataArea.getMinY(),<z>
.getHeight());<z>
(dataAreaShape).getBounds2D();<z>
.getCoordinateReferenceSystem());<z>
, final PushBackStreamChannel requestChannel, final HttpServerConnection connection) {<z>
responseChannel;<z>
;<z>
);<z>
;<z>
responseTerminateAction;<z>
{<z>
Object();<z>
false, true);<z>
nextRequestResponseChannel = gatedStreamSinkChannel;<z>
new ResponseTerminateAction(gatedStreamSinkChannel, permit);<z>
} else {<z>
;<z>
;<z>
new StartNextRequestAction(requestChannel, nextRequestResponseChannel, connection);<z>
;<z>
= startNextRequestAction;<z>
E deposit) {<z>
); }<z>
)) {<z>
IllegalArgumentException("ObjectProcessor: object " + item + " not yet submitted");<z>
item, deposit);<z>
f, String out, String subdir) {<z>
);<z>
String filename = f.getPath();<z>
filename,<z>
"sample code", true, true, true);<z>
escape(data);<z>
);<z>
setValue("page.title", name);<z>
);<z>
, name);<z>
hdf.setValue("fileContents", data);<z>
);<z>
public List<ParameterCurveKeyNode> getKeyFrameNodes()<z>
= new ArrayList<ParameterCurveKeyNode>();<z>
())<z>
(keyFrame.getValueForParameter(parameter)));<z>
result;<z>
{<z>
"java.awt.AWTPermission");<z>
constructor = awtPermission<z>
getConstructor(String.class);<z>
;<z>
) perm);<z>
} catch (ClassNotFoundException e) {<z>
catch (NoSuchMethodException e) {<z>
) {<z>
IllegalAccessException e) {<z>
InvocationTargetException e) {<z>
new SecurityException();<z>
) {<z>
sb = new StringBuilder();<z>
append( "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" );<z>
( "<jbi:jbi version=\"1.0\"\n" );<z>
( "\txmlns=\"http://java.sun.com/xml/ns/jbi\"\n" );<z>
"\txmlns:jbi=\"http://java.sun.com/xml/ns/jbi\">\n\n" );<z>
;<z>
append( "\t\t\t<jbi:name>" + saName + "</jbi:name>\n" );<z>
.append( "\t\t\t<jbi:description></jbi:description>\n" );<z>
"\t\t</jbi:identification>\n" );<z>
( String suName : suNames ) {<z>
sb.append( "\n\t\t<!-- New service-unit -->\n" );<z>
append( "\t\t<jbi:service-unit>\n\t\t\t<jbi:identification>\n" );<z>
;<z>
"\t\t\t\t<jbi:description></jbi:description>\n" );<z>
.append( "\t\t\t</jbi:identification>\n\n" );<z>
append( "\t\t\t<jbi:target>\n" );<z>
( "\t\t\t\t<jbi:artifacts-zip>" + suName + ".zip</jbi:artifacts-zip>\n" );<z>
+ componentName + "</jbi:component-name>\n" );<z>
"\t\t\t</jbi:target>\n\t\t</jbi:service-unit>\n" );<z>
);<z>
);<z>
sb.toString();<z>
Object o) throws XavaException {<z>
null)<z>
return o;<z>
;<z>
{<z>
generatedCode);<z>
.getProject(), modelObject);<z>
this.objectReference.setSerializeClassName(true);<z>
(this);<z>
true;<z>
<Member> getCalculatedMembers() {<z>
> list =<z>
));<z>
{<z>
();<z>
for (Formula formula : calculatedMemberList) {<z>
formula.getMdxMember();<z>
().canAccess(member)) {<z>
member);<z>
> 0) {<z>
(getRole(), list);<z>
return list;<z>
,<z>
leftInput,<z>
ObjectSource rightInput,<z>
,<z>
,<z>
BetaConstraints resultsBinder,<z>
behaviors,<z>
,<z>
final boolean unwrapRight,<z>
) {<z>
( id,<z>
),<z>
.isMultithreadEvaluation(),<z>
behaviors );<z>
this.resultsBinder = resultsBinder;<z>
resultConstraints;<z>
collect = collect;<z>
= unwrapRight;<z>
();<z>
) {<z>
{<z>
MY_FIELD_INDEX:<z>
).intValue();<z>
;<z>
createSetAllPageParentsAction(ContentVersionListContainer liveContentVersionsListContainer) {<z>
();<z>
.liveContentContainer = liveContentVersionsListContainer;<z>
return action;<z>
public void gen_JFLEX_RegExps()<z>
();<z>
super.gen_JFLEX_RegExps();<z>
stripGenerics(JvmType.Wildcard wt) {<z>
() == null) {<z>
return JAVA_LANG_OBJECT;<z>
} else {<z>
(wt.lowerBound());<z>
createDatetime, Integer deleted) {<z>
id = id;<z>
this.amount = amount;<z>
.createDatetime = createDatetime;<z>
;<z>
) {<z>
ProxyBlock ret = null;<z>
if (none.isProxyRotationEnabled()) {<z>
= none.getHostBlockedTimeout(host);<z>
== null) return null;<z>
;<z>
info : lproxies) {<z>
.isProxyRotationEnabled()) {<z>
ProxyBlock ret2 = info.getHostBlockedTimeout(host);<z>
ret2 == null) {<z>
null;<z>
{<z>
ret2;<z>
= directs;<z>
) {<z>
) {<z>
getHostBlockedTimeout(host);<z>
(ret2 == null) {<z>
null;<z>
()) {<z>
;<z>
return ret;<z>
DrawingCanvas c){<z>
)<z>
;<z>
new IllegalArgumentException();<z>
;<z>
false;<z>
;<z>
= 0;<z>
) {<z>
{<z>
--casAlgoUsers;<z>
else {<z>
();<z>
casAlgoUsers = 0;<z>
, NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException {<z>
);<z>
n.getRootElement();<z>
;<z>
getElementbyName("graphName"), gd, "setGraphName");<z>
("verticalLabel"), gd, "setVerticalLabel");<z>
("graphTitle"), gd, "setGraphTitle");<z>
, "setUpperLimit", Double.TYPE);<z>
Double.TYPE);<z>
, gd, "setHeight", Integer.TYPE);<z>
Integer.TYPE);<z>
);<z>
null)<z>
("");<z>
subnode.getElementbyName("nolegend") == null);<z>
);<z>
;<z>
.getElementbyName("unit");<z>
{<z>
"setUnitExponent");<z>
null)<z>
);<z>
)<z>
true);<z>
: subnode.getChildElements()) {<z>
getNodeName()) )<z>
10);<z>
false;<z>
getChildElements()) {<z>
) {<z>
;<z>
hostchild: child.getChildElements()) {<z>
String key = hostchild.getNodeName();<z>
hostchild.getTextContent();<z>
!= null) {<z>
trim();<z>
value);<z>
);<z>
= child.getTextContent();<z>
!= null) {<z>
value.trim();<z>
;<z>
elements.get("name");<z>
("graphType");<z>
"color");<z>
;<z>
("rpn");<z>
;<z>
);<z>
percentile = elements.get("percentile");<z>
.equals(percentile))<z>
="95";<z>
host = null;<z>
= null;<z>
null;<z>
) {<z>
;<z>
;<z>
get("pathdsName");<z>
("dsName");<z>
, dsName);<z>
("hosttree")));<z>
getElementbyName("viewtree")));<z>
.initializeLimits(g2d);<z>
return gd;<z>
void addPotentialMatch(NodeMaker nodeMaker) {<z>
isURI()<z>
uriMakerIdentifier(nodeMaker).isURIPattern()<z>
nodeMaker.selectNode(<z>
equals(<z>
.EMPTY)) {<z>
false;<z>
RecognitionException {<z>
stackSize = keepStackSize();<z>
FOLLOW_rule__XAdditiveExpression__Group_1__1__Impl_in_rule__XAdditiveExpression__Group_1__114738);<z>
();<z>
_fsp--;<z>
failed) return ;<z>
{<z>
(re);<z>
re);<z>
(stackSize);<z>
> dp,<z>
name,<z>
[] values )<z>
values.length];<z>
values.length;i++){<z>
[i].getName();<z>
name, names);<z>
, boolean flag){<z>
world, l, flag);<z>
= true;<z>
double[256];<z>
];<z>
double[256];<z>
OldMapGenCaves();<z>
)<z>
MapGenRavine();<z>
strongholdGenerator = new MapGenSkyStronghold();<z>
(0);<z>
= new MapGenMineshaft();<z>
, 16);<z>
16);<z>
terrainGenerator = new AlphaNoiseGeneratorOctaves(rand, 8);<z>
, 4);<z>
4);<z>
;<z>
= new AlphaNoiseGeneratorOctaves(rand, 16);<z>
(rand, 8);<z>
) {<z>
;<z>
PrismExportWizard wizard = new PrismExportWizard(model);<z>
, wizard);<z>
.open();<z>
e) {<z>
;<z>
String, String> map) {<z>
(INDENT_KEYS.length == INDENT_FIELDS.length);<z>
length == INDENT_DEFAULTS.length);<z>
;<z>
init() {<z>
() {<z>
) {<z>
onTaskAllFriendsComplete(null, mReason);<z>
( String channel ) {<z>
freq = 0;<z>
( channel.length() > 0 ) {<z>
1 );<z>
);<z>
)num)/10;<z>
) ) {<z>
offset += 0.05;<z>
{<z>
= 106.3+offset;<z>
num >= 70 && num <= 126 ) {<z>
105.3+offset;<z>
;<z>
() {<z>
.getSelection()) {<z>
.setConvertCaseInModel(CaseConversion.TO_LOWERCASE_LITERAL);<z>
(IServiceTypeID type) {<z>
;<z>
;<z>
)), type.getScopes());<z>
{<z>
e);<z>
) {<z>
getClass(), "getServices(int)", e);<z>
new IServiceInfo[0];<z>
TypedField> fields) {<z>
ArrayList<Schema.Field>();<z>
for (TypedField typedField : fields) {<z>
typedField.getDisplayName(),<z>
, null, null));<z>
createRecord(avroFields);<z>
{<z>
!slider.isEnabled()) {<z>
offset = 0;<z>
scrollTimer.stop();<z>
false;<z>
;<z>
repaint();<z>
int compareTo(Path other) {<z>
;<z>
(UnixPath) other).path.length;<z>
, len2);<z>
v1[] = path;<z>
((UnixPath) other).path;<z>
= 0;<z>
{<z>
0xff;<z>
int c2 = v2[k] & 0xff;<z>
c1 != c2) {<z>
- c2;<z>
;<z>
len2;<z>
boolean jj_3_170() {<z>
LC))<z>
true;<z>
;<z>
) throws IOException {<z>
sampleNumber, SEEKPOINT_SAMPLE_NUMBER_LEN);<z>
SEEKPOINT_STREAM_OFFSET_LEN);<z>
os.writeRawUInt(frameSamples, SEEKPOINT_FRAME_SAMPLES_LEN);<z>
double newTickSize )<z>
;<z>
= newTickSize;<z>
= tickSizeESet;<z>
tickSizeESet = true;<z>
( eNotificationRequired( ) )<z>
new ENotificationImpl( this,<z>
SET,<z>
ComponentPackage.GRID__TICK_SIZE,<z>
;<z>
Collection<T> objects )<z>
) return false;<z>
boolean result = false;<z>
unqueue ( object );<z>
;<z>
RecognitionException {<z>
if ( state.backtracking==0 ) {<z>
());<z>
);<z>
ruleLOWER();<z>
--;<z>
failed) return ;<z>
0 ) {<z>
after(grammarAccess.getLOWERRule());<z>
return ;<z>
RecognitionException re) {<z>
(re);<z>
re);<z>
(String provider) throws XMLEncryptionException {<z>
if (log.isDebugEnabled()) {<z>
log.debug("Getting XMLCipher with provider");<z>
, null, null);<z>
hasDataTypeInIdentityColumn() {<z>
true;<z>
QNamePattern qnamePattern)<z>
> sourceNodePair = getNodePairNotNull(sourceRef);<z>
= sourceNodePair.getFirst();<z>
null;<z>
if (qnamePattern instanceof QName)<z>
(QName) qnamePattern;<z>
= nodeDAO.getTargetNodeAssocs(sourceNodeId, qnameFilter);<z>
;<z>
Long, AssociationRef> assocPair : assocPairs)<z>
AssociationRef assocRef = assocPair.getSecond();<z>
isMatch(assocRef.getTypeQName()))<z>
assocRef);<z>
return nodeAssocRefs;<z>
) {<z>
();<z>
ModelerCore.createContainer(CONTAINER_NAME);<z>
) {<z>
);<z>
Element self, Object name, String value) {<z>
Document doc = self.getOwnerDocument();<z>
newChild;<z>
QName) {<z>
) name;<z>
());<z>
else {<z>
());<z>
(value != null) {<z>
value);<z>
newChild.appendChild(text);<z>
(newChild);<z>
return newChild;<z>
project) {<z>
_createGroupWithLabel(parent, "Custom Info.plist");<z>
2, false));<z>
_addTextArea(customInfoPListGroup, null);<z>
) {<z>
getBuildProperties();<z>
{<z>
.getCustomInfoPListContent(true));<z>
object) {<z>
== null)<z>
("Not null objects in this table model");<z>
.getClass() != _class)<z>
RuntimeException("This object is not compatible with this table model (different class)");<z>
_objects.add(object);<z>
();<z>
V value) {<z>
== null) {<z>
NullPointerException();<z>
value);<z>
.put(getKey(), value);<z>
v;<z>
args ) {<z>
KivaJsonLoader couchbaseJsonLoader = new KivaJsonLoader();<z>
);<z>
.loadData();<z>
View view) {<z>
view);<z>
));<z>
;<z>
(ByteBuffer os, ByteBuffer argument) throws IOException {<z>
;<z>
));<z>
.put(argument);<z>
.put(CRLF);<z>
] seed) throws Exception {<z>
);<z>
SecureRandom.getInstance("SHA1PRNG");<z>
;<z>
sr);<z>
();<z>
();<z>
raw;<z>
<?> beanClass)<z>
descriptor;<z>
.beanClass = beanClass;<z>
RecognitionException {<z>
failed) return ;<z>
(state.failed) return ;<z>
) return ;<z>
.failed) return ;<z>
; if (state.failed) return ;<z>
if (state.failed) return ;<z>
public final void mRULE_WS() throws RecognitionException {<z>
= RULE_WS;<z>
int _channel = DEFAULT_TOKEN_CHANNEL;<z>
cnt11=0;<z>
alt11=2;<z>
;<z>
LA11_0=='\r'||LA11_0==' ') ) {<z>
1;<z>
{<z>
1 :<z>
input.LA(1)==' ' ) {<z>
();<z>
null,input);<z>
;<z>
mse;}<z>
cnt11 >= 1 ) break loop11;<z>
EarlyExitException eee =<z>
);<z>
;<z>
++;<z>
while (true);<z>
_type;<z>
;<z>
public static String[] getSurveyFiles(String path)<z>
File dir = new File(path);<z>
;<z>
list(filter);<z>
MemberDefinition(ClassDefinition innerClass) {<z>
.getWhere(),<z>
),<z>
(),<z>
.getType(),<z>
,<z>
);<z>
this.innerClass = innerClass;<z>
(Visitor v) {<z>
this);<z>
(this);<z>
(this);<z>
);<z>
(Object object)<z>
(LR1ItemSet) object;<z>
size();<z>
(result == 0)<z>
).iterator();<z>
.iterator();<z>
&& (result == 0))<z>
());<z>
)<z>
(e.hasNext())<z>
;<z>
f.hasNext())<z>
return -1;<z>
;<z>
public static String getDispatchPathInfo(HttpServletRequest req) {<z>
.getAttribute(INCLUDE_REQUEST_URI_ATTRIBUTE) != null)<z>
(String) req.getAttribute(INCLUDE_PATH_INFO_ATTRIBUTE);<z>
.getPathInfo();<z>
obj) {<z>
(this == obj) return true;<z>
) return false;<z>
false;<z>
obj;<z>
;<z>
== false) return false;<z>
true;<z>
{<z>
null) {<z>
);<z>
, 80, 176, 21));<z>
linkedPageCB;<z>
throws SAXException, TransformerConfigurationException, TransformerException, IOException {<z>
);<z>
woodstoxParserFactory;<z>
;<z>
.setFeature("http://xml.org/sax/features/namespace-prefixes",<z>
);<z>
SAXParser parser = woodstoxParserFactory.newSAXParser();<z>
reader = parser.getXMLReader();<z>
is));<z>
;<z>
documentBuilder.newDocument();<z>
DOMResult domResult = new DOMResult(document);<z>
);<z>
;<z>
() {<z>
;<z>
);<z>
;<z>
{<z>
currVal;<z>
=<z>
index).numValues()],<z>
)],<z>
.numValues()];<z>
= 0,<z>
totalSumOfWeights = 0, totalSum = 0;<z>
new double[3];<z>
][1];<z>
{<z>
Instance inst = m_Instances.instance(i);<z>
)) {<z>
) * inst.weight();<z>
() * inst.classValue()<z>
);<z>
.weight();<z>
{<z>
;<z>
inst.classValue()<z>
;<z>
] +=<z>
();<z>
;<z>
);<z>
<= 0) {<z>
bestVal;<z>
i++) {<z>
i];<z>
+= sumsSquaresPerValue[i];<z>
sumsPerValue[i];<z>
++) {<z>
[i];<z>
];<z>
[i];<z>
0] = totalSumW - sumsPerValue[i];<z>
= totalSumSquaresW - sumsSquaresPerValue[i];<z>
;<z>
(m_Distribution, sumsSquares, sumOfWeights);<z>
bestVal) {<z>
bestVal = currVal;<z>
i;<z>
j < 3; j++) {<z>
[j] > 0) {<z>
j];<z>
{<z>
0] = totalSum / totalSumOfWeights;<z>
= bestDist;<z>
;<z>
private void triggerListeners() {<z>
= new Event();<z>
);<z>
ModifyEvent e = new ModifyEvent(ev);<z>
= this.getTable();<z>
{<z>
modifyText(e);<z>
{<z>
super();<z>
(dest);<z>
if (tokens.hasMoreTokens()) {<z>
PdfName(tokens.nextToken()));<z>
)) {<z>
.nextToken()));<z>
{<z>
boolean enableApply = false;<z>
if (binding != null) {<z>
);<z>
);<z>
= false;<z>
.hasTypeConflict()) {<z>
;<z>
convertAllSqlButton.setEnabled(enableConvertAll);<z>
handleCommand(Intent intent) {<z>
{<z>
();<z>
rule__XRelationalExpression__Group__0__Impl() throws RecognitionException {<z>
keepStackSize();<z>
state.backtracking==0 ) {<z>
.getXOtherOperatorExpressionParserRuleCall_0());<z>
(FOLLOW_ruleXOtherOperatorExpression_in_rule__XRelationalExpression__Group__0__Impl10940);<z>
ruleXOtherOperatorExpression();<z>
--;<z>
(state.failed) return ;<z>
==0 ) {<z>
().getXOtherOperatorExpressionParserRuleCall_0());<z>
re) {<z>
re);<z>
,re);<z>
stackSize);<z>
double initialAngle, double finalAngle) {<z>
;<z>
.start = start;<z>
= end;<z>
this.controlPoint1 = controlPoint1;<z>
controlPoint2 = controlPoint2;<z>
= initialAngle;<z>
this.finalAngle = finalAngle;<z>
;<z>
int value){<z>
] ret;<z>
5];<z>
3;<z>
1;<z>
ret[2] = 4;<z>
[1];<z>
;<z>
return ret;<z>
void rule__MetaSql__IfsAssignment_0_1() throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
state.backtracking==0 ) {<z>
());<z>
(FOLLOW_ruleIfSql_in_rule__MetaSql__IfsAssignment_0_126325);<z>
;<z>
--;<z>
failed) return ;<z>
( state.backtracking==0 ) {<z>
.getIfsIfSqlParserRuleCall_0_1_0());<z>
RecognitionException re) {<z>
(re);<z>
);<z>
restoreStackSize(stackSize);<z>
throws Exception {<z>
AccountInfo ai = new AccountInfo();<z>
);<z>
} catch (PluginException e) {<z>
false);<z>
ai;<z>
.getPage(MAINPAGE);<z>
0);<z>
!= null) {<z>
);<z>
(" ", "")));<z>
{<z>
setValid(false);<z>
("Premium User");<z>
ai;<z>
ITextRenderer renderer) {<z>
();<z>
.getPropertiesStartsWith("oxf.fr.pdf.font.path")) {<z>
propertyName));<z>
null) {<z>
final String family; {<z>
);<z>
.length >= 6) {<z>
5];<z>
getString("oxf.fr.pdf.font.family" + '.' + id));<z>
else {<z>
= null;<z>
null);<z>
catch (Exception e) {<z>
"'");<z>
public void setSimpleAccept(SimpleAcceptStatementCompletion newSimpleAccept)<z>
!= simpleAccept)<z>
NotificationChain msgs = null;<z>
if (simpleAccept != null)<z>
);<z>
newSimpleAccept != null)<z>
- AlfPackage.ACCEPT_STATEMENT__SIMPLE_ACCEPT, null, msgs);<z>
= basicSetSimpleAccept(newSimpleAccept, msgs);<z>
msgs.dispatch();<z>
())<z>
newSimpleAccept));<z>
execute()<z>
;<z>
it.hasNext(); )<z>
(MavenProject) it.next();<z>
, message );<z>
.append( "\n\n" );<z>
null )<z>
();<z>
getName() ).append( "\n" );<z>
( "\n" );<z>
message.toString() );<z>
( output, sb );<z>
e )<z>
+ output, e );<z>
if ( getLog().isInfoEnabled() )<z>
;<z>
().isInfoEnabled() )<z>
().info( message );<z>
, int arrayLength) {<z>
type();<z>
();<z>
;<z>
oldType<z>
keepPosArgs, nargs)<z>
, arrayType);<z>
keepPosArgs, arrayType, arrayLength);<z>
void visitMethodCallExpression(<z>
) {<z>
;<z>
methodExpression =<z>
;<z>
methodExpression.getReferenceName();<z>
.PUT.equals(methodName) ||<z>
.PUTALL.equals(methodName) ||<z>
.equals(methodName))) {<z>
resolveMethod();<z>
method == null) {<z>
();<z>
== null) {<z>
.isInheritor(containingClass,<z>
)) {<z>
qualifier =<z>
;<z>
== null) {<z>
!TypeUtils.expressionHasTypeOrSubtype(qualifier,<z>
)) {<z>
expression, expression);<z>
{<z>
add<z>
).getRootAdapterFactory(),<z>
),<z>
),<z>
, "_UI_GenContributionManager_type"),<z>
),<z>
ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,<z>
);<z>
DataInput in) throws IOException {<z>
;<z>
_indices = null; return; }<z>
);<z>
();<z>
{<z>
));<z>
[bbLen/4];<z>
bb.asIntBuffer();<z>
;<z>
ByteBuffer.allocate(bbLen);<z>
bb.array());<z>
fb = bb.asFloatBuffer();<z>
_data = new float[bbLen/4];<z>
_data);<z>
String... filename) {<z>
.status_checking_media);<z>
Log.d(cTag, message);<z>
));<z>
();<z>
) {<z>
(R.string.warning_media_not_mounted, storage_state);<z>
(message);<z>
} else {<z>
.getExternalStorageDirectory();<z>
);<z>
status_creating_backup);<z>
cTag, message);<z>
createProgress(5, message));<z>
backupFile.exists()) {<z>
, new Runnable() {<z>
void run() {<z>
;<z>
}));<z>
{<z>
;<z>
(backupFile);<z>
);<z>
} catch (Exception e) {<z>
.getMessage());<z>
(message);<z>
null;<z>
String viewName)<z>
throws UnsupportedFileSystemException, URISyntaxException,<z>
IOException {<z>
vName = viewName;<z>
(vName == null) {<z>
vName = Constants.CONFIG_VIEWFS_DEFAULT_MOUNT_TABLE;<z>
;<z>
));<z>
(root);<z>
= true;<z>
= Constants.CONFIG_VIEWFS_PREFIX + "." +<z>
vName + ".";<z>
.CONFIG_VIEWFS_LINK + ".";<z>
;<z>
;<z>
ugi = UserGroupInformation.getCurrentUser();<z>
config) {<z>
final String key = si.getKey();<z>
) {<z>
;<z>
= false;<z>
.substring(mtPrefix.length());<z>
{<z>
(linkPrefix.length());<z>
(linkMergePrefix)) {<z>
isMergeLink = true;<z>
);<z>
{<z>
else {<z>
IOException(<z>
;<z>
getValue();<z>
target, isMergeLink, ugi);<z>
gotMountTableEntry) {<z>
throw new IOException(<z>
("viewfs://" + vName + "/"));<z>
void propertyChange(PropertyChangeEvent e) {<z>
.propertyChange(e);<z>
);<z>
{<z>
("windowDecorationStyle")) {<z>
e.getSource();<z>
;<z>
(root);<z>
JRootPane.NONE) {<z>
(root);<z>
)) {<z>
uninstallWindowListeners(this.root);<z>
) != JRootPane.NONE) {<z>
root.getParent());<z>
{<z>
).setBackground(<z>
Color) e.getNewValue());<z>
propertyName.equals(SubstanceLookAndFeel.SKIN_PROPERTY)) {<z>
(SubstanceSkin) e.getOldValue();<z>
;<z>
!= null)) {<z>
++;<z>
null)) {<z>
--;<z>
doInFilter(TriggerableAction action)<z>
(action);<z>
req)<z>
"pageSize") == null)<z>
Status.STATUS_BAD_REQUEST, "Paging size parameters missing");<z>
ScriptPagingDetails(req, 100);<z>
kSeqExprCast157() {<z>
XQuery query = new XQuery(<z>
ctx);<z>
QT3Result res = result(query);<z>
res;<z>
true)<z>
private static String extractChangeToken(Properties properties) {<z>
) {<z>
;<z>
();<z>
== null) {<z>
;<z>
get(PropertyIds.CHANGE_TOKEN);<z>
(!(changeLogProperty instanceof PropertyString)) {<z>
;<z>
PropertyString) changeLogProperty).getFirstValue();<z>
String name) {<z>
Slf4jRepositoryNode node = leafNodeHashtable.get(name);<z>
null;<z>
if (node == null) {<z>
);<z>
logger);<z>
else {<z>
node.getLogger();<z>
logger;<z>
projectStarted( ExecutionEvent event )<z>
) )<z>
' ', LINE_LENGTH ) );<z>
info( chars( '-', LINE_LENGTH ) );<z>
).getVersion() );<z>
( '-', LINE_LENGTH ) );<z>
{<z>
()) {<z>
);<z>
Expr arg_1) {<z>
.Application.make(<z>
), arg_1});<z>
(Double3D other)<z>
.x;<z>
y - other.y;<z>
.z;<z>
;<z>
DateParser dateParser) {<z>
if(dateParsers==null) {<z>
ArrayList();<z>
.add(dateParser);<z>
extends Element> elements, final Color fillColor) {<z>
() {<z>
run() {<z>
{<z>
);<z>
alternatePropertiesResourceBundleLoading(String filepath) {<z>
;<z>
component, @Nullable IProperty prop,<z>
,<z>
... editorQuickFixProviders) {<z>
== null) {<z>
new ArrayList<ErrorInfo>();<z>
<QuickFix>();<z>
provider : editorQuickFixProviders) {<z>
(provider != null) {<z>
(myEditor, myComponent));<z>
(), errorMessage,<z>
.find(inspectionId), myFormPsiFile),<z>
quickFixes.size()]));<z>
(inspectionId);<z>
(errorInfo);<z>
setIsInhibiting(boolean newIsInhibiting) {<z>
;<z>
= newIsInhibiting;<z>
)<z>
ABSTRACT_STATUS_VALUE__IS_INHIBITING, oldIsInhibiting, isInhibiting));<z>
{<z>
);<z>
KalturaFiles kfiles = new KalturaFiles();<z>
"fileData", new KalturaFile(fileData));<z>
"upload", "upload", kparams, kfiles);<z>
this.kalturaClient.isMultiRequest())<z>
null;<z>
this.kalturaClient.doQueue();<z>
);<z>
return resultText;<z>
{<z>
.getType().getClassifier())<z>
null;<z>
eObjectConsumer;<z>
() {<z>
) {<z>
(HttpServerRequest req) {<z>
println("Got request: " + req.uri);<z>
;<z>
)) {<z>
));<z>
"Content-Type", "text/html; charset=UTF-8");<z>
("<html><body><h1>Hello from vert.x!</h1></body></html>");<z>
).listen(8080);<z>
)<z>
().getTorrentManager();<z>
getAttribute( TorrentAttribute.TA_NETWORKS )){<z>
);<z>
TorrentAttribute.TA_PEER_SOURCES )){<z>
new String[]{ "DHT" });<z>
);<z>
InterfaceType> getAllSupertypes()<z>
throws CyclicDeclarationException {<z>
;<z>
null) {<z>
(null, computeAllSupertypes());<z>
get();<z>
;<z>
znodeBytes) {<z>
parseFrom(znodeBytes);<z>
return rt.toString();<z>
{<z>
"";<z>
, @NotNull JetElement subroutine) {<z>
subroutine);<z>
);<z>
new ReturnValueInstruction(returnExpression, exitPoint));<z>
,<z>
{<z>
null || Pp.isEmpty() ) {<z>
Ap;<z>
) {<z>
return Ap;<z>
l;<z>
> m;<z>
<C>[] P;<z>
synchronized (Pp) {<z>
.size();<z>
[l];<z>
) {<z>
;<z>
int i;<z>
;<z>
= new Object[ l ];<z>
new GenSolvablePolynomial[ l ];<z>
0;<z>
; i < l; i++ ) {<z>
;<z>
);<z>
null ) {<z>
i];<z>
;<z>
();<z>
++;<z>
;<z>
ExpVector e;<z>
C a;<z>
false;<z>
);<z>
;<z>
S = Ap;<z>
) {<z>
leadingMonomial();<z>
);<z>
= m.getValue();<z>
l; i++ ) {<z>
htl[i] );<z>
if ( mt ) break;<z>
( ! mt ) {<z>
);<z>
, e );<z>
} else {<z>
[i] );<z>
multiply( e );<z>
;<z>
= Q.multiply( a );<z>
C>)S.subtract( Q );<z>
;<z>
public Volume(Location f, Location e)<z>
f;<z>
end = e;<z>
cleanUpInputFileChanged() throws HiveException {<z>
();<z>
{<z>
();i++) {<z>
get(i);<z>
.cleanUpInputFileChanged();<z>
newInterfaceMetadata(String intfName)<z>
, intfName);<z>
addInterface(imd);<z>
void printFooter(BufferedWriter out) {<z>
;<z>
(IOException e) {<z>
();<z>
id)<z>
);<z>
.y = id.charAt(1);<z>
);<z>
(x);<z>
.toUpperCase(y);<z>
Z = Character.toUpperCase(z);<z>
= id;<z>
= "image/" + id;<z>
) {<z>
); ) {<z>
iterator.next();<z>
) {<z>
return true;<z>
); iterator.hasNext(); ) {<z>
();<z>
{<z>
;<z>
{<z>
;<z>
false;<z>
> iterator(HttpSession session) {<z>
);<z>
) {<z>
emptyList().iterator();<z>
();<z>
outFormat )<z>
, inFormat, outFormat )<z>
BidiFormat.isValidBidiFormat( inFormat )<z>
( outFormat )<z>
)<z>
return txt;<z>
txt );<z>
( outFormat, txt );<z>
= reorderingSchemes.listIterator( );<z>
it.hasNext( ) )<z>
it.next( );<z>
if ( inFormat.matches( scheme.inFormat )<z>
outFormat ) )<z>
= txt;<z>
doMirroring = inFormat<z>
( BidiFormat.SYM_SWAP_INDX ) != outFormat<z>
.charAt( BidiFormat.SYM_SWAP_INDX );<z>
( inFormat, outFormat );<z>
.data;<z>
.length; i < n; i++ )<z>
SHAPE == procedures[i] )<z>
, shapeOptions );<z>
] )<z>
( outStr, doMirroring );<z>
;<z>
[i] )<z>
);<z>
;<z>
REVERSE == procedures[i] )<z>
, doMirroring );<z>
;<z>
txt;<z>
String doc, boolean isDeprecated, int relevanceMultiplier) {<z>
;<z>
;<z>
propType;<z>
= isStatic;<z>
= declaringType;<z>
isDeprecated;<z>
relevanceMultiplier = relevanceMultiplier;<z>
null ? GROOVY_DSL_PROVIDER : provider;<z>
doc;<z>
(PropertyInfoImpl p) {<z>
;<z>
i==null) {<z>
().isOrdered)<z>
IllegalAnnotationException(<z>
getName()),p));<z>
;<z>
.getName(),i);<z>
int ii = i;<z>
ii<used.length) {<z>
{<z>
new HashSet<String>();<z>
(p.getName()))<z>
(new IllegalAnnotationException(<z>
;<z>
used[ii] = p;<z>
i;<z>
public String sendHomeFolderModification(XmlObject requestXml) throws CvqException {<z>
String Method = "ReceptionCapdemat";<z>
;<z>
false);<z>
=<z>
, getLabel(), "Sent");<z>
();<z>
"La connexion au serveur a echoué";<z>
));<z>
, null));<z>
call = new Call();<z>
Constants.NS_URI_SOAP_ENC;<z>
call.setEncodingStyleURI(encodingStyleURI);<z>
setTargetObjectURI("urn:WSPocketTechno2");<z>
setMethodName(Method);<z>
.setParams(parameters);<z>
);<z>
if (soap_response.generatedFault()) {<z>
.getFault().getFaultString());<z>
("Error");<z>
().getFaultString());<z>
} else {<z>
;<z>
soap_result.getValue();<z>
s = getValue(value);<z>
{<z>
);<z>
);<z>
(MalformedURLException e) {<z>
+ e.getMessage());<z>
;<z>
(e.getMessage());<z>
} catch (SOAPException e) {<z>
"sendHomeFolderModificationRequest() got error " + e.getMessage());<z>
;<z>
(la);<z>
{<z>
(emf);<z>
);<z>
)) {<z>
);<z>
(uea.getMessage());<z>
return null;<z>
)<z>
visitEnter( this ) )<z>
)<z>
visitor.visit( parameterDependency ) )<z>
this );<z>
IrodsFileStore makeStore(Map configuration) throws ModuleInitializationException {<z>
null;<z>
irodsFileSystem, account);<z>
irodsFileSystem, account, configuration);<z>
);<z>
;<z>
LowlevelStorageException e) {<z>
;<z>
;<z>
{<z>
{<z>
();<z>
timeNow;<z>
return this.time;<z>
) {<z>
++catchDepth;<z>
getException());<z>
());<z>
getBlock());<z>
--catchDepth;<z>
voidType;<z>
obj) {<z>
(this == obj) {<z>
return true;<z>
{<z>
false;<z>
GphotoOriginalVideo other = (GphotoOriginalVideo) obj;<z>
(channels, other.channels)<z>
.duration)<z>
&& eq(height, other.height)<z>
samplingrate, other.samplingrate)<z>
other.type)<z>
;<z>
, Configuration conf, boolean fatal)<z>
type, conf, fatal);<z>
,<z>
: null);<z>
if (_singleton)<z>
obj, true);<z>
return obj;<z>
attribs) {<z>
String inline = attribs.get("inline");<z>
inline != null ? inline : "";<z>
);<z>
StorageException {<z>
{<z>
();<z>
== null) {<z>
= new BlobRequestOptions();<z>
.initialize();<z>
applyDefaults(this.blobServiceClient);<z>
, Boolean>(<z>
options) {<z>
client, final CloudBlobContainer container,<z>
opContext) throws Exception {<z>
uri, this<z>
().getTimeoutIntervalInMs(), opContext);<z>
;<z>
;<z>
HttpURLConnection.HTTP_OK) {<z>
(request);<z>
Boolean.valueOf(true);<z>
HttpURLConnection.HTTP_NOT_FOUND) {<z>
return Boolean.valueOf(false);<z>
(true);<z>
return false;<z>
,<z>
);<z>
boolean isStateChange(XDecoratedPeer window, XPropertyEvent e) {<z>
if (!window.isShowing()) {<z>
stateLog.finer("Window is not showing");<z>
false;<z>
);<z>
) {<z>
"WithdrawnState");<z>
return false;<z>
{<z>
);<z>
= false;<z>
) == XA_WM_STATE.getAtom()) {<z>
true;<z>
.class)) {<z>
proto.isStateChange(e);<z>
+ is_state_change);<z>
return is_state_change;<z>
public ActionForward render(<z>
form, PortletConfig portletConfig,<z>
renderRequest, RenderResponse renderResponse)<z>
Exception {<z>
ActionUtil.getFolder(renderRequest);<z>
{<z>
if (e instanceof NoSuchFolderException ||<z>
instanceof PrincipalException) {<z>
getClass().getName());<z>
"portlet.image_gallery.error");<z>
e;<z>
findForward(<z>
renderRequest, "portlet.image_gallery.edit_folder"));<z>
{<z>
);<z>
))<z>
isUpperCase(c))<z>
toLowerCase(c));<z>
append(c);<z>
decamelized.toString();<z>
,<z>
,<z>
,<z>
<DownloadExceptionHandler> downloadExceptionHandler,<z>
searchHandler, Provider<KeywordAssistedSearchBuilder> searchBuilder,<z>
{<z>
.downloadListManager = downloadListManager;<z>
;<z>
this.libraryManager = libraryManager;<z>
this.fileInfoFactory = fileInfoFactory;<z>
= avInfoPanelFactory;<z>
= downloadExceptionHandler;<z>
searchHandler;<z>
this.searchBuilder = searchBuilder;<z>
= playerMediator;<z>
newParent, boolean newVisible) {<z>
(newParent);<z>
);<z>
= new GUIComponent[5];<z>
DEFAULT);<z>
();<z>
.getSecurityManager();<z>
(security != null) {<z>
security.checkSystemClipboardAccess();<z>
Toolkit.getDefaultToolkit().getSystemClipboard();<z>
(SecurityException e) {<z>
clipboard = new Clipboard("Interfascia Clipboard");<z>
else {<z>
getSystemClipboard();<z>
Exception e) {<z>
;<z>
registerDraw(this);<z>
{<z>
!= null) {<z>
);<z>
String)<z>
data;<z>
return UIConstants.UNKNOW_EEF_TYPE;<z>
model.Country getCountry(<z>
HttpPrincipal httpPrincipal, long countryId)<z>
portal.kernel.exception.PortalException,<z>
liferay.portal.kernel.exception.SystemException {<z>
class.getName(),<z>
;<z>
= new MethodHandler(methodKey, countryId);<z>
null;<z>
TunnelUtil.invoke(httpPrincipal, methodHandler);<z>
Exception e) {<z>
.exception.PortalException) {<z>
)e;<z>
.portal.kernel.exception.SystemException) {<z>
)e;<z>
e);<z>
.Country)returnObj;<z>
kernel.exception.SystemException se) {<z>
(se, se);<z>
;<z>
IvyNodeElement focus) {<z>
);<z>
);<z>
.setInput(focus);<z>
.getNodes().iterator();<z>
();<z>
).height / 2);<z>
.hasNext()) {<z>
GraphNode) nodes.next();<z>
) {<z>
width, centre.height);<z>
focus;<z>
).size() > 0) {<z>
(true);<z>
{<z>
);<z>
);<z>
true);<z>
;<z>
) {<z>
mars){<z>
= this.energie + besch;<z>
;<z>
, int maxParticles) {<z>
maxParticles);<z>
;<z>
900);<z>
newx, int newy) {<z>
{<z>
newy);<z>
public final void entryRuleConditionalOrExpression() throws RecognitionException {<z>
;<z>
(FOLLOW_ruleConditionalOrExpression_in_entryRuleConditionalOrExpression1159);<z>
ruleConditionalOrExpression();<z>
;<z>
());<z>
match(input, EOF, FOLLOW_EOF_in_entryRuleConditionalOrExpression1166);<z>
) {<z>
);<z>
input, re);<z>
finally {<z>
() {<z>
(module == null) {<z>
)<z>
false);<z>
null;<z>
IErlFunction) {<z>
el;<z>
el instanceof IErlFunctionClause) {<z>
getParent();<z>
if (f == null) {<z>
= module.getName();<z>
('.');<z>
(i > 0) {<z>
= name.substring(0, i);<z>
, f.getFunctionName(),<z>
());<z>
()<z>
;<z>
;<z>
>(<z>
100) {<z>
() {<z>
= page<z>
"org.erlide.ui.callhierarchy");<z>
CallHierarchyView) p<z>
getAdapter(CallHierarchyView.class);<z>
cvh.setMessage("<searching... project "<z>
().getName() + ">");<z>
return cvh;<z>
(final PartInitException e) {<z>
error("could not open Call hierarchy view: ",<z>
);<z>
null;<z>
{<z>
= BackendCore.getBackendManager()<z>
;<z>
final IRpcFuture result = ErlangXref.addProject(b,<z>
);<z>
return result;<z>
protected void handleResult(final CallHierarchyView context,<z>
{<z>
page.activate(context);<z>
);<z>
} catch (final ErlModelException e) {<z>
e);<z>
();<z>
, final String schema) {<z>
.url = url;<z>
.userName = userName;<z>
;<z>
this.driverClassName = driverClassName;<z>
dialect;<z>
defaultSchema;<z>
;<z>
it) {<z>
Statement stat;<z>
)) {<z>
it.next();<z>
PrintOut) {<z>
PrintOut)stat);<z>
();<z>
(e instanceof Literal)) {<z>
);<z>
) {<z>
).getFirstMember();<z>
instanceof BIF) {<z>
;<z>
) {<z>
.getValue());<z>
class.getName())) {<z>
] args = bif.getArguments();<z>
new ArrayList<Argument>();<z>
(args[0]);<z>
]);<z>
arr.add(args[2]);<z>
"string"));<z>
3]);<z>
;<z>
add(args[4]);<z>
false),"boolean"));<z>
(true),"boolean"));<z>
)]));<z>
if(<z>
||<z>
.class.getName())<z>
Variable)expr).getLastMember();<z>
UDF) continue;<z>
setCheckPSQ(true);<z>
setExpr(expr);<z>
if(stat instanceof Tag){<z>
)stat).getBody();<z>
b!=null)<z>
).iterator());<z>
instanceof Body){<z>
));<z>
b) throws IOException {<z>
[1];<z>
byte) b;<z>
;<z>
String id, String newId) {<z>
String mapping = null;<z>
entrySet()) {<z>
referenceId = entry.getKey();<z>
final String mappedId = entry.getValue();<z>
)) {<z>
getValue();<z>
final String referenceIdPrefix = referenceId + ":";<z>
":";<z>
(id.startsWith(referenceIdPrefix)) {<z>
("^" + referenceIdPrefix, mappedIdPrefix);<z>
== null) {<z>
newId;<z>
;<z>
mapping;<z>
buildButtonsPanel()<z>
;<z>
);<z>
add(Box.createHorizontalGlue());<z>
add(cancelButton);<z>
(H_SPACER_SIZE));<z>
return buttonsPanel;<z>
String getAttributeLocalName(int index) {<z>
m_currentNode == null) {<z>
name = m_reader.getAttributeLocalName(index);<z>
;<z>
(index).getLocalPart();<z>
header, final BBDecoder decoder, final QMFService qmfService)<z>
(header);<z>
();<z>
packageName = decoder.readStr8();<z>
;<z>
= decoder.readBin128();<z>
();<z>
qmfService.getPackage(packageName);<z>
QMFClass qmfClass = qmfPackage.getQMFClass(className);<z>
.getObjectById(qmfClass, objectId);<z>
.getMethod(methodName);<z>
decoder);<z>
void refresh(Object element) {<z>
checkBusy())<z>
isCellEditorActive()) {<z>
cancelEditing();<z>
;<z>
)<z>
continueGame();<z>
);<z>
() {<z>
) MohoRemoteProviderFinder.findJarServiceProvider(SERVICE_ID);<z>
{<z>
ex);<z>
return null;<z>
String challengeText) {<z>
TYPE);<z>
= challengeText;<z>
IndexRecord getRecord() throws IOException {<z>
null;<z>
) {<z>
:<z>
(record_size == 12) {<z>
));<z>
{<z>
.getLong());<z>
'F':<z>
new Double(buffer.getDouble());<z>
case 'L':<z>
FALSE;<z>
case 'D':<z>
Date(buffer.getLong());<z>
:<z>
[record_size - 8];<z>
;<z>
);<z>
long id = buffer.getLong();<z>
id);<z>
)<z>
)<z>
);<z>
, Collection<BundleDescription> bundleDescriptions) {<z>
: bundleDescriptions) {<z>
(b)) {<z>
return b;<z>
null;<z>
() throws ParseException {<z>
jjtn000 = new ASTVar(JJTVAR);<z>
boolean jjtc000 = true;<z>
jjtn000);Token t;<z>
jj_ntk) {<z>
case VAR1:<z>
= jj_consume_token(VAR1);<z>
VAR2:<z>
VAR2);<z>
= jj_gen;<z>
-1);<z>
);<z>
true);<z>
false;<z>
1));<z>
{<z>
(jjtc000) {<z>
);<z>
createSocket(<z>
String host,<z>
port,<z>
clientHost,<z>
)<z>
IOException, UnknownHostException {<z>
(<z>
;<z>
isSameType = new TypeRelation() {<z>
, Type s) {<z>
s)<z>
return true;<z>
.tag >= firstPartialTag)<z>
);<z>
switch (t.tag) {<z>
:<z>
case NONE:<z>
== s.tag;<z>
case TYPEVAR:<z>
.isSuperBound()<z>
)<z>
(t, upperBound(s));<z>
.tag);<z>
(WildcardType t, Type s) {<z>
s.tag >= firstPartialTag)<z>
(s, t);<z>
false;<z>
Type s) {<z>
t == s)<z>
true;<z>
>= firstPartialTag)<z>
(s, t);<z>
)<z>
(t, lowerBound(s));<z>
&& s.isCompound()) {<z>
)))<z>
false;<z>
<SingletonType>();<z>
interfaces(t))<z>
new SingletonType(x));<z>
x : interfaces(s)) {<z>
(new SingletonType(x)))<z>
return false;<z>
size() == 0);<z>
.tsym == s.tsym<z>
(), s.getEnclosingType())<z>
(), s.getTypeArguments());<z>
ArrayType t, Type s) {<z>
s)<z>
;<z>
(s.tag >= firstPartialTag)<z>
(s, t);<z>
ARRAY<z>
(s));<z>
MethodType t, Type s) {<z>
.getReturnType());<z>
s) {<z>
== s;<z>
Type s) {<z>
s.tag != FORALL)<z>
return false;<z>
ForAll forAll = (ForAll)s;<z>
return hasSameBounds(t, forAll)<z>
t.tvars));<z>
t, Type s) {<z>
)<z>
return false;<z>
s.tag == UNKNOWN)<z>
true;<z>
if (t.inst != null)<z>
t.inst, s);<z>
fromUnknownFun.apply(s);<z>
l.tail) {<z>
inst))<z>
;<z>
tail) {<z>
inst, l.head))<z>
;<z>
true;<z>
s) {<z>
true;<z>
canExecute() {<z>
Violation) {<z>
;<z>
) {<z>
();<z>
{<z>
);<z>
false;<z>
String getToken(String tokenSource, PlayerCharacter pc,<z>
eh)<z>
));<z>
) {<z>
myProject == null) {<z>
super.hashCode();<z>
} else {<z>
return myProject.hashCode();<z>
(<z>
out,<z>
> g)<z>
edge : g.edgeSet()) {<z>
);<z>
+ "[");<z>
edge);<z>
+ id);<z>
);<z>
tab2 + "source" + delim + s);<z>
getVertexName(g.getEdgeTarget(edge));<z>
(tab2 + "target" + delim + t);<z>
)<z>
== PRINT_EDGE_VERTEX_LABELS))<z>
String label =<z>
) ? edge.toString()<z>
: edgeLabelProvider.getEdgeName(edge);<z>
label));<z>
+ "]");<z>
expandCapacity() {<z>
length + 64];<z>
.length);<z>
_buffer = newBuffer;<z>
(final Container container) {<z>
;<z>
("View");<z>
('V');<z>
.Frame.DEMO));<z>
'A');<z>
.CTRL_MASK | KeyEvent.SHIFT_MASK));<z>
AbstractAction() {<z>
void actionPerformed(ActionEvent e) {<z>
(container instanceof DockableHolder) {<z>
().showFrame(JideDemos.DEMOS_DOCKABLE_FRAME_KEY);<z>
;<z>
item);<z>
(DemoIconsFactory.Frame.OPTIONS));<z>
('O');<z>
CTRL_MASK | KeyEvent.SHIFT_MASK));<z>
(new AbstractAction() {<z>
e) {<z>
instanceof DockableHolder) {<z>
(JideDemos.OPTIONS_DOCKABLE_FRAME_KEY);<z>
);<z>
.add(item);<z>
return menu;<z>
(HttpHost host) {<z>
= null;<z>
{<z>
.getWebModel();<z>
webHost = webModel.getWebHostByHttpHost(host);<z>
)<z>
);<z>
webHost);<z>
;<z>
(<z>
long rawContactId) {<z>
if (!mEnabled) {<z>
);<z>
new ContactMatcher();<z>
;<z>
;<z>
(rawContactId);<z>
db.query(RawContactIdAndAccountQuery.TABLE,<z>
.COLUMNS, RawContactIdAndAccountQuery.SELECTION,<z>
, null, null, null);<z>
(cursor.moveToFirst()) {<z>
cursor.getLong(RawContactIdAndAccountQuery.CONTACT_ID);<z>
;<z>
{<z>
();<z>
db, rawContactId, accountId, contactId,<z>
candidates, matcher);<z>
toString() {<z>
StringBuilder();<z>
("{");<z>
+ applicationName + ", ");<z>
("Description: " + description + ", ");<z>
;<z>
.append("SourceBundle: " + sourceBundle + ", ");<z>
);<z>
"DateUpdated: " + dateUpdated + ", ");<z>
("}");<z>
);<z>
c)<z>
{<z>
pwIdx;<z>
PH_HARD_UPGRADE) {<z>
= 5;<z>
{<z>
4;<z>
{<z>
;<z>
(<z>
"values syscs_util.syscs_get_database_property(?)");<z>
; i++) {<z>
[pwIdx];<z>
USERS[i][0]);<z>
(ps.executeQuery(), expectedToken);<z>
close();<z>
(ScreenOrientation orientation) {<z>
.equals(orientation)) {<z>
return 0;<z>
;<z>
()<z>
* stateStack.size();<z>
(n > 0) {<z>
ch[] = new char[n];<z>
; i < n; i++) {<z>
] = INDENT_CHAR;<z>
(ch, 0, n);<z>
SocketChannel bind(SocketAddress local) throws IOException {<z>
readLock) {<z>
{<z>
synchronized (stateLock) {<z>
isOpen())<z>
;<z>
)<z>
ConnectionPendingException();<z>
null)<z>
();<z>
== null) ?<z>
0) : Net.checkAddress(local);<z>
());<z>
(), isa.getPort());<z>
localAddress(fd);<z>
;<z>
_Fields field, Object value) {<z>
{<z>
:<z>
) {<z>
;<z>
else {<z>
setSubject((String)value);<z>
case RESOURCE:<z>
(value == null) {<z>
unsetResource();<z>
} else {<z>
((String)value);<z>
:<z>
null) {<z>
();<z>
{<z>
;<z>
case ENVIRONMENT:<z>
if (value == null) {<z>
;<z>
} else {<z>
((List<String>)value);<z>
case SESSION_ID:<z>
(value == null) {<z>
();<z>
} else {<z>
);<z>
isAbove(Territory territory){<z>
;<z>
superior!=null){<z>
superior.equals(territory)){<z>
isAbove = true;<z>
);<z>
isAbove;<z>
)<z>
getEffects() == null)<z>
())<z>
this);<z>
)<z>
isDmgEffect = true;<z>
template instanceof DelayDamageEffect)<z>
isDelayDamage = true;<z>
if (template instanceof MpHealEffect)<z>
true;<z>
template instanceof PulledEffect)<z>
isPulledEffect = true;<z>
template instanceof SimpleRootEffect)<z>
;<z>
)<z>
)<z>
;<z>
);<z>
))<z>
() == SkillType.PHYSICAL)<z>
() == AttackStatus.CRITICAL)<z>
;<z>
.DODGE);<z>
CRITICAL)<z>
AttackStatus.CRITICAL_RESIST);<z>
);<z>
);<z>
))<z>
case DODGE:<z>
case CRITICAL_DODGE:<z>
SpellStatus.DODGE);<z>
case PARRY:<z>
:<z>
) == SpellStatus.NONE)<z>
);<z>
BLOCK:<z>
case CRITICAL_BLOCK:<z>
(getSpellStatus() == SpellStatus.NONE)<z>
.BLOCK);<z>
RESIST:<z>
:<z>
.RESIST);<z>
void workspaceRemoved(WorkspaceInstallerEvent e)<z>
);<z>
;<z>
() {<z>
) {<z>
new Block();<z>
(this);<z>
return (_contents);<z>
rule__DeviceImplementation__OwnedFeatureGroupConnectionAssignment_9_1_0_2() throws RecognitionException {<z>
= keepStackSize();<z>
);<z>
);<z>
;<z>
state._fsp--;<z>
));<z>
) {<z>
reportError(re);<z>
);<z>
(stackSize);<z>
describe_splits_result that) {<z>
null)<z>
false;<z>
&& this.isSetSuccess();<z>
isSetSuccess();<z>
that_present_success) {<z>
that_present_success))<z>
false;<z>
that.success))<z>
;<z>
return true;<z>
() {<z>
);<z>
inset = 100;<z>
);<z>
(inset, inset,<z>
*2,<z>
;<z>
(new WindowAdapter() {<z>
windowClosing(WindowEvent e) {<z>
exit(0);<z>
});<z>
);<z>
(desktop);<z>
setJMenuBar(createMenuBar());<z>
putClientProperty("JDesktopPane.dragMode", "outline");<z>
)<z>
.type = type;<z>
= blockSize;<z>
keySize;<z>
= cipherClass;<z>
(){<z>
count = 0;<z>
%30] == 1) ++count;<z>
count;<z>
1) ++count;<z>
++count;<z>
++count;<z>
== 1) ++count;<z>
++count;<z>
) ++count;<z>
count == 3)<z>
1;<z>
2)<z>
.nextState = this.state;<z>
0;<z>
public final void mT__26() throws RecognitionException {<z>
;<z>
int _channel = DEFAULT_TOKEN_CHANNEL;<z>
"assert");<z>
_type;<z>
_channel;<z>
void startModal(JInternalFrame f)<z>
();<z>
;<z>
f);<z>
));<z>
());<z>
(){});<z>
);<z>
(modalInterceptor);<z>
toFront();<z>
getSystemEventQueue();<z>
(! f.isClosed())<z>
(EventQueue.isDispatchThread())<z>
;<z>
if (ev instanceof ActiveEvent)<z>
) ev).dispatch();<z>
(ev.getSource() instanceof Component)<z>
()).dispatchEvent(ev);<z>
) instanceof MenuComponent)<z>
);<z>
Thread.yield();<z>
ex)<z>
(modalInterceptor);<z>
f.getParent();<z>
(parent != null)<z>
(f);<z>
)<z>
);<z>
.alias = alias;<z>
;<z>
password;<z>
= keyAlgorithm;<z>
.axiom.om.OMElement getOMElement (<z>
xml.namespace.QName parentQName,<z>
.apache.axis2.databinding.ADBException{<z>
axiom.om.OMDataSource dataSource =<z>
{<z>
throws javax.xml.stream.XMLStreamException {<z>
factory,xmlWriter);<z>
.impl.llom.OMSourcedElementImpl(<z>
);<z>
(View view) {<z>
)) {<z>
return Collections.EMPTY_LIST;<z>
Package)view.getElement();<z>
LinkedList<UMLNodeDescriptor>();<z>
.hasNext();) {<z>
next();<z>
view, childElement);<z>
VISUAL_ID) {<z>
visualID));<z>
); it.hasNext();) {<z>
.next();<z>
childElement);<z>
if(visualID == ConstraintEditPart.VISUAL_ID) {<z>
new UMLNodeDescriptor(childElement, visualID));<z>
();) {<z>
= (PackageableElement)it.next();<z>
, childElement);<z>
if(visualID == ExecutionEnvironmentEditPart.VISUAL_ID) {<z>
UMLNodeDescriptor(childElement, visualID));<z>
.VISUAL_ID) {<z>
visualID));<z>
VISUAL_ID) {<z>
childElement, visualID));<z>
.VISUAL_ID) {<z>
);<z>
return result;<z>
ModuleName moduleName, TypeChecker typeChecker, Program program) {<z>
typeChecker == null || program == null) {<z>
new NullPointerException();<z>
this.moduleName = moduleName;<z>
this.typeChecker = typeChecker;<z>
;<z>
void whereExpr018() {<z>
XQuery(<z>
);<z>
node(file("prod/ForClause/fsx.xml")));<z>
query);<z>
= res;<z>
)<z>
getBundleMetadataSources() {<z>
bundleMetadataSources == null) {<z>
new ArrayList<LifecycleMappingMetadataSource>();<z>
= Platform.getExtensionRegistry();<z>
configuratorsExtensionPoint = registry<z>
;<z>
) {<z>
configuratorsExtensionPoint.getExtensions();<z>
configuratorExtensions) {<z>
) extension.getContributor();<z>
));<z>
;<z>
!= null) {<z>
source);<z>
return bundleMetadataSources;<z>
AudioFileFormat.Type[] getAudioFileTypes() {<z>
();<z>
;<z>
{<z>
(AudioFileWriter) providers.get(i);<z>
writer<z>
.getAudioFileTypes();<z>
length; j++) {<z>
[j]);<z>
] = (AudioFileFormat.Type[]) returnTypesSet<z>
new AudioFileFormat.Type[0]);<z>
returnTypes;<z>
Object visit(ASTWhereConditionalTerm node, Object data) {<z>
); ++i) {<z>
data);<z>
data;<z>
()<z>
null;<z>
.getConnection();<z>
.prepareStatement("SELECT * FROM forums WHERE forum_id=?");<z>
, _forumId);<z>
ResultSet result = statement.executeQuery();<z>
)<z>
getString("forum_name");<z>
= result.getInt("forum_post");<z>
;<z>
);<z>
;<z>
.close();<z>
statement.close();<z>
)<z>
, e);<z>
;<z>
;<z>
con.prepareStatement("SELECT * FROM topic WHERE topic_forum_id=? ORDER BY topic_id DESC");<z>
(1, _forumId);<z>
result = statement.executeQuery();<z>
())<z>
);<z>
getID(), t);<z>
getMaxID(this))<z>
(t.getID(), this);<z>
close();<z>
();<z>
(Exception e)<z>
.getMessage(), e);<z>
;<z>
(<z>
,<z>
final UserManager um,<z>
final Queues queues,<z>
final ActivityStore activities,<z>
tokenManager<z>
;<z>
um;<z>
= queues;<z>
activities = activities;<z>
tokenManager = tokenManager;<z>
type, String value) {<z>
)<z>
;<z>
Boolean.class)<z>
Boolean.valueOf(value);<z>
class || type == Character.class)<z>
return value.charAt(0);<z>
.class.isAssignableFrom(type))<z>
value);<z>
(type.isEnum())<z>
;<z>
.isAssignableFrom(type)) {<z>
.valueOf(value);<z>
e) {<z>
return VehicleType.valueOf(value);<z>
Exception e) {<z>
.getSimpleName()+"'.");<z>
printStackTrace();<z>
;<z>
+"'.");<z>
{<z>
this.storedObjects.length;<z>
.growthFactor) / 100);<z>
currentCapacity ) {<z>
;<z>
= new long[ newCapacity ];<z>
size );<z>
newStore;<z>
{<z>
total = 0.0;<z>
();<z>
i++) {<z>
SalesLineDto lineDto = salesLineList.get(i);<z>
hasLength(lineDto.productCode)) {<z>
if (!Constants.EXCEPTIANAL_PRODUCT_CODE.COD_FEE_PRICE<z>
.productCode)<z>
EXCEPTIANAL_PRODUCT_CODE.SALES_DISCOUNT_PRICE<z>
(lineDto.productCode)) {<z>
lineDto);<z>
return total;<z>
{<z>
();<z>
Token inMemoryToken : inMemoryTokens) {<z>
.isPersistenceEnabled()) {<z>
, inMemoryToken.getCreated());<z>
.keySet());<z>
;<z>
datesArray = valueList.toArray();<z>
);<z>
<String, Object>();<z>
i++) {<z>
[i]);<z>
;<z>
: retiredTokenIDMap.keySet()) {<z>
.add(tokenID);<z>
retiredTokensIDList;<z>
public R visitAssignmentExpression(<z>
,<z>
) throws E {<z>
null;<z>
public TGSRep(<z>
,<z>
,<z>
PrincipalName new_cname,<z>
Ticket new_ticket,<z>
throws IOException {<z>
new_pAData, new_crealm, new_cname, new_ticket,<z>
Krb5.KRB_TGS_REP);<z>
public KeepSpecificationsPanel(JFrame owner,<z>
markClasses,<z>
markConditionally,<z>
,<z>
,<z>
allowObfuscation)<z>
;<z>
this.markClasses = markClasses;<z>
markConditionally = markConditionally;<z>
;<z>
allowOptimization = allowOptimization;<z>
;<z>
RecognitionException {<z>
;<z>
);<z>
;<z>
state._fsp--;<z>
;<z>
);<z>
_fsp--;<z>
catch (RecognitionException re) {<z>
);<z>
re);<z>
);<z>
p_debug() {<z>
;<z>
StringBuffer();<z>
.add("+debug");<z>
length()>0) {<z>
);<z>
;<z>
ImporterDependencyListener(Object exporter) {<z>
.exporter = exporter;<z>
String) exporterToName.get(exporter);<z>
public KsDef toThrift()<z>
(cfMetaData.size());<z>
)<z>
!cfm.isThriftIncompatible())<z>
add(cfm.toThrift());<z>
strategyClass.getName(), cfDefs);<z>
ksdef.setStrategy_options(strategyOptions);<z>
setDurable_writes(durableWrites);<z>
ksdef;<z>
String tableName, String columnName) {<z>
;<z>
+ File.separator + columnName;<z>
get(hashKey) != null)<z>
(hashKey)).intValue();<z>
);<z>
= getFirstChildWithName(table, "columns");<z>
) {<z>
) {<z>
getFirstChildWithName((Element) ch, "name");<z>
name).equals(columnName)) {<z>
getFirstChildWithName((Element) ch, "type");<z>
dataType = getJavaSqlType(getNodeValue(value));<z>
, new Integer(dataType));<z>
dataType;<z>
charAt(String value, int index) {<z>
)) {<z>
Character.MIN_VALUE;<z>
;<z>
{<z>
= EMPTY_STRING;<z>
(iCompareType == RESOURCE_NODE_TO_RESOURCE_NODE) {<z>
).getFullPath().toString();<z>
else {<z>
" - "<z>
;<z>
sResult;<z>
T item) throws SizeOverflowException {<z>
{<z>
addElement(item);<z>
SizeOverflowException();<z>
item;<z>
public FavoriteSite findByPrimaryKey(long favoriteSiteId)<z>
SystemException {<z>
favoriteSite = fetchByPrimaryKey(favoriteSiteId);<z>
{<z>
{<z>
.warn(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + favoriteSiteId);<z>
throw new NoSuchFavoriteSiteException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY +<z>
favoriteSiteId);<z>
;<z>
{<z>
numDocuments *= 10) {<z>
; filterRatio <= 1.0; filterRatio += 0.1) {<z>
distanceRatio <= 1.0; distanceRatio += 0.1) {<z>
SolrSpatialBenchmark benchmark =<z>
numDocuments, filterRatio,<z>
;<z>
totalTime = 0L;<z>
benchmark.prepare();<z>
{<z>
currentTimeMillis();<z>
);<z>
) - startTime;<z>
;<z>
(0);<z>
, TaskAttemptContext context) throws IOException, InterruptedException {<z>
fileSplit = (FileSplit) split;<z>
fileSplit.getPath();<z>
pathToRead, context.getConfiguration());<z>
start = fileSplit.getStart();<z>
.getLength();<z>
) throws IOException, FOPException {<z>
;<z>
null) {<z>
.notifyPageRendered();<z>
() {<z>
(Parcel source) {<z>
);<z>
[] newArray(int size) {<z>
;<z>
private void initConnectorsAndNetworkProxies()<z>
proxyOrderSorter = new ProxyConnectorOrderComparator();<z>
.proxyConnectorMap.clear();<z>
configuration = archivaConfiguration.getConfiguration();<z>
List<ProxyConnectorRuleConfiguration> allProxyConnectorRuleConfigurations =<z>
;<z>
proxyConfigs = configuration.getProxyConnectors();<z>
proxyConfigs )<z>
getSourceRepoId();<z>
();<z>
setSourceRepository(<z>
( proxyConfig.getSourceRepoId() ) );<z>
(<z>
) );<z>
setProxyId( proxyConfig.getProxyId() );<z>
.getPolicies() );<z>
;<z>
.isDisabled() );<z>
0 );<z>
getBlackListPatterns() ) )<z>
( proxyConfig.getBlackListPatterns() );<z>
;<z>
<String>( 0 );<z>
) )<z>
proxyConfig.getWhiteListPatterns() );<z>
connector.setWhitelist( whitelist );<z>
List<ProxyConnectorRuleConfiguration> proxyConnectorRuleConfigurations =<z>
.getSourceRepository().getId(),<z>
).getId(),<z>
;<z>
isEmpty() )<z>
( ProxyConnectorRuleConfiguration proxyConnectorRuleConfiguration : proxyConnectorRuleConfigurations )<z>
equals( proxyConnectorRuleConfiguration.getRuleType(),<z>
getRuleType() ) )<z>
add( proxyConnectorRuleConfiguration.getPattern() );<z>
),<z>
) ) )<z>
() );<z>
this.proxyConnectorMap.get( key );<z>
== null )<z>
new ArrayList<ProxyConnector>( 1 );<z>
);<z>
connectors, proxyOrderSorter );<z>
( key, connectors );<z>
RepositoryNotFoundException e )<z>
+ e.getMessage(), e );<z>
)<z>
;<z>
this.networkProxyMap.clear();<z>
archivaConfiguration.getConfiguration().getNetworkProxies();<z>
( NetworkProxyConfiguration networkProxyConfig : networkProxies )<z>
networkProxyConfig.getId();<z>
);<z>
;<z>
setHost( networkProxyConfig.getHost() );<z>
) );<z>
() );<z>
.getPassword() );<z>
);<z>
LazyFunction<T> nextFunction()<z>
valueIndex + 1); }<z>
>()<z>
map(Flow<T> element)<z>
();<z>
toList();<z>
0);<z>
int value) {<z>
codeBug();<z>
key, true);<z>
(ivaluesShift == 0) {<z>
power;<z>
!= N * 2) {<z>
N * 2];<z>
0, tmp, 0, N);<z>
;<z>
;<z>
value;<z>
) throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
( state.backtracking==0 ) {<z>
.getXRelationalExpressionAccess().getAlternatives_1());<z>
;<z>
1) ) {<z>
:<z>
(2);<z>
( (synpred154_InternalXcore()) ) {<z>
;<z>
:<z>
LA(2);<z>
{<z>
;<z>
case 72:<z>
int LA115_4 = input.LA(2);<z>
( (synpred154_InternalXcore()) ) {<z>
=1;<z>
case 27:<z>
(2);<z>
synpred154_InternalXcore()) ) {<z>
=1;<z>
case 28:<z>
;<z>
) ) {<z>
=1;<z>
(alt115) {<z>
case 1 :<z>
.FOLLOW_rule__XRelationalExpression__Alternatives_1_in_rule__XRelationalExpression__Group__1__Impl24312);<z>
;<z>
--;<z>
state.failed) return ;<z>
loop115;<z>
} while (true);<z>
state.backtracking==0 ) {<z>
).getAlternatives_1());<z>
{<z>
reportError(re);<z>
,re);<z>
);<z>
DurationImpl(<z>
boolean isPositive,<z>
final int years,<z>
months,<z>
final int days,<z>
hours,<z>
int minutes,<z>
seconds) {<z>
),<z>
wrap(months),<z>
wrap(days),<z>
,<z>
,<z>
);<z>
void removeFromTargetClass() throws IncorrectOperationException {<z>
myMemberInfos) {<z>
final PsiElement member = memberInfo.getMember();<z>
if (member instanceof PsiField) {<z>
delete();<z>
else if (member instanceof PsiMethod) {<z>
isToAbstract()) {<z>
final PsiMethod method = (PsiMethod)member;<z>
(PsiModifier.PRIVATE)) {<z>
;<z>
myClass, method);<z>
.processOldJavaDoc(method.getDocComment());<z>
delete();<z>
{<z>
))) {<z>
), (PsiClass)member);<z>
delete();<z>
public boolean isStartTlsEncryptionSelected()<z>
comboBoxWithLabel( ENCRYPTION_METHOD );<z>
equals( encMethodCombo.selection() );<z>
(Entities entities, String str) {<z>
(str == null) {<z>
null;<z>
());<z>
entities, str, out)) {<z>
out.toString();<z>
;<z>
IOException e) {<z>
;<z>
)<z>
= true;<z>
!= null)<z>
.detach();<z>
;<z>
supportOdaExtensionFilters( )<z>
getFilterProvider( );<z>
provider != null )<z>
.supportOdaExtensionFilters( );<z>
false;<z>
auditPath)<z>
HashSet<String>(37),<z>
, DataGenerator>(13));<z>
) throws InvalidResultSetAccessException {<z>
resultSet.last();<z>
SQLException se) {<z>
new InvalidResultSetAccessException(se);<z>
deviceChanged(IDevice device, int changeMask) {<z>
IDevice.CHANGE_STATE) != 0 &&<z>
.isOnline()) {<z>
(device);<z>
!= 0) {<z>
().execute();<z>
);<z>
Class<? extends Annotation> type) {<z>
;<z>
getFullURI(type);<z>
(uri);<z>
JvmAnnotationType) proxy;<z>
final String sql,<z>
,<z>
QueryListener<T>... listeners) throws HBqlException {<z>
, clazz, listeners);<z>
, Graphics g)<z>
throws SlickException {<z>
if (enableClick) {<z>
if (renderBorder) {<z>
;<z>
container, g);<z>
> getResourceadapter() {<z>
if (resourceadapter == null) {<z>
new ArrayList<Resourceadapter>();<z>
.resourceadapter;<z>
, final int bufferSize )<z>
= new StringWriter();<z>
( input, sw, encoding, bufferSize );<z>
;<z>
public static void contributeTypeCoercer(@SuppressWarnings("rawtypes")<z>
Configuration<CoercionTuple> configuration)<z>
);<z>
String s)<z>
int l = s.length();<z>
+1;<z>
(i);<z>
= j+l;<z>
> values) {<z>
ViewComponent contentComponent = (ViewComponent) renderable;<z>
= contentComponent.getSchemaField();<z>
);<z>
.equals(enabled)) {<z>
) {<z>
).getContent(), true);<z>
else {<z>
;<z>
)));<z>
{<z>
log.error("could not bind checkbox value: " + e);<z>
log.debug("", e);<z>
private static void cacheCharset(Charset cs) {<z>
())){<z>
.name(), cs);<z>
;<z>
null != aliasesSet) {<z>
();<z>
()) {<z>
.next();<z>
{<z>
cachedCharsetTable.put(alias, cs);<z>
> daysInReverseIterator() {<z>
false) {<z>
"daysInReverseIterator reqires upper limit (end).");<z>
();<z>
end = lowerLimit();<z>
) {<z>
CalendarDate next = start;<z>
public boolean hasNext() {<z>
(end) == false;<z>
public CalendarDate next() {<z>
== false) {<z>
new NoSuchElementException();<z>
next;<z>
-1);<z>
current;<z>
throws CoreException {<z>
);<z>
, accessKeyId);<z>
"secretKey", secretKey);<z>
.getLocation().append("src");<z>
= srcDirPath.append(AWS_CREDENTIALS_PROPERTIES_FILE);<z>
credentialPropertiesFile =<z>
.toFile());<z>
NONE, null);<z>
.store(os, "Insert your AWS Credentials from " + AWS_CREDENTIALS_URL);<z>
catch (IOException e) {<z>
);<z>
throw new CoreException(status);<z>
} finally {<z>
) {}<z>
, null);<z>
removeShadow() {<z>
class);<z>
{<z>
(style);<z>
Ref> getRefs(String scheduleName) {<z>
;<z>
) cache.get(entityCacheKey);<z>
null) {<z>
;<z>
result = super.getRefs(scheduleName);<z>
) {<z>
<Ref> serializableList =<z>
()));<z>
entityCacheKey, serializableList);<z>
return result;<z>
)<z>
( cube,<z>
ICubeGroupContentProvider.class );<z>
null )<z>
length; i++ )<z>
= (ICubeGroupContentProvider) contentProviders[i];<z>
if ( contentProvider != null )<z>
.createGroupContent( parent, SWT.NONE );<z>
new CubeGroupContent( parent, SWT.NONE );<z>
createKeys()<z>
.getInstance("ECDSA", "BC");<z>
(ECCparam);<z>
genKeyPair();<z>
e){<z>
( "Failed to create keys", e ));<z>
JSJavaObject getThisObject() {<z>
method = jvf.getMethod();<z>
{<z>
;<z>
StackValueCollection values = jvf.getLocals();<z>
!= null) {<z>
values.oopHandleAt(0);<z>
();<z>
;<z>
{<z>
;<z>
() {<z>
(dataset == null) {<z>
("GeoGridDataSource.getDataSet", " name = " + sources);<z>
);<z>
call2("GeoGridDataSource.getDataSet");<z>
return dataset;<z>
public void resetOriginalValues() {<z>
this;<z>
shoppingOrderModelImpl._groupId;<z>
= false;<z>
_userId;<z>
._setOriginalUserId = false;<z>
shoppingOrderModelImpl._number;<z>
shoppingOrderModelImpl._originalPpTxnId = shoppingOrderModelImpl._ppTxnId;<z>
;<z>
._columnBitmask = 0;<z>
throws IOException {<z>
(new FileReader(file));<z>
) {<z>
line.startsWith("_="))<z>
line.startsWith("_=")) {<z>
);<z>
String typeSpec = line.substring(2);<z>
);<z>
name.lastIndexOf('.'));<z>
.createType(namespace, typeName, typeSpec);<z>
catch (SchemaException e) {<z>
new DataSourceException(typeName + " schema not available", e);<z>
null;<z>
;<z>
() {<z>
();<z>
.validateScaling();<z>
);<z>
request) {<z>
> en = request.getParameterNames();<z>
();<z>
(dumpHeaders(request));<z>
;<z>
"<DATA>");<z>
append('\n');<z>
)) {<z>
.nextElement();<z>
(name));<z>
'\n');<z>
append("</DATA>");<z>
append('\n');<z>
);<z>
.portlet.documentlibrary.model.DLFolderSoap getFolder(<z>
long folderId) throws RemoteException {<z>
);<z>
model.DLFolderSoap.toSoapModel(returnValue);<z>
) {<z>
error(e, e);<z>
(e.getMessage());<z>
boolean isVisible( )<z>
return false;<z>
ControllerMessage.ParametersMessage build() {<z>
);<z>
!result.isInitialized()) {<z>
newUninitializedMessageException(result);<z>
result;<z>
public ServiceData(OMElement in_data) {<z>
;<z>
.SERVICE_DATA.IDENTIFIER);<z>
= getAttributeValue(DRConstants.SERVICE_DATA.DIALECT);<z>
FILE);<z>
, int pointer, int button) {<z>
;<z>
480);<z>
= true;<z>
false;<z>
(String[] args) {<z>
1){<z>
.out.println("java twitter4j.examples.search.SearchTweets [query]");<z>
);<z>
().getInstance();<z>
);<z>
;<z>
tweets) {<z>
tweet.getText());<z>
;<z>
) {<z>
;<z>
getMessage());<z>
(-1);<z>
boolean onCreateOptionsMenu(Menu menu) {<z>
.onCreateOptionsMenu(menu);<z>
;<z>
;<z>
return true;<z>
searchControls, NamingListener namingListener )<z>
( EXCEPTION_MSG );<z>
] names) throws IOException {<z>
names == null) {<z>
new String[0];<z>
else {<z>
;<z>
()<z>
);<z>
().getMessageServerQueue(), message);<z>
private void flushbuf() throws IOException {<z>
true) {<z>
getFilePointer() != bufstartpos) {<z>
seek(bufstartpos);<z>
, 0, bufusedsize);<z>
bufdirty = false;<z>
) throws cfmRunTimeException {<z>
containsAttribute( "NAME" ) ){<z>
);<z>
attachmentDir = null;<z>
( containsAttribute("ATTACHMENTPATH") ){<z>
"ATTACHMENTPATH" ).getString();<z>
, "URIDIRECTORY" ).getBoolean() )<z>
;<z>
new File( attachment );<z>
)<z>
.mkdirs();<z>
;<z>
;<z>
( containsAttribute( "MAXROWS" ) ){<z>
_Session, "MAXROWS" ).getInt();<z>
< 1 ){<z>
;<z>
if ( startRow < 1 ){<z>
newRunTimeException( "The value of STARTROW must be 1 or greater." );<z>
= null;<z>
null;<z>
_Session );<z>
popData;<z>
( GetAll )<z>
cfQueryResultData( headerAndBody, "CFPOP" );<z>
;<z>
);<z>
, maxRows, GetAll, attachmentDir );<z>
popData );<z>
;<z>
closeConnection( popStore );<z>
String> subPackages,<z>
> packages,<z>
) {<z>
);<z>
if (paths.sourcePath() != null)<z>
.sourcePath())<z>
.add(elt);<z>
.userClassPath())<z>
elt);<z>
subPackage : subPackages)<z>
;<z>
JLabel getJLabelTmp() {<z>
jLabelTmp == null) {<z>
;<z>
);<z>
jLabelTmp;<z>
long[] classPKs,<z>
int displayDateDay, int displayDateYear,<z>
int displayDateHour, int displayDateMinute, int expirationDateMonth,<z>
expirationDateYear, int expirationDateHour,<z>
alert, int flagValue)<z>
portal.kernel.exception.SystemException {<z>
.getEntriesCount(userId,<z>
classPKs, displayDateMonth, displayDateDay,<z>
displayDateHour, displayDateMinute,<z>
, expirationDateYear,<z>
, flagValue);<z>
synchronized List getFieldNames()<z>
(fieldNames == null)<z>
fieldNames = new ArrayList();<z>
;<z>
("RevenueCatName");<z>
;<z>
return fieldNames;<z>
?>> xstreamClasses) {<z>
);<z>
?> clazz:xstreamClasses) {<z>
(clazz);<z>
.toXML(obj);<z>
SectionInstance sectionInstance, int fieldIndex, int endField) {<z>
, fieldIndex, endField);<z>
"Derived Data File", new MappingHelperConfig<StringPropertyMappingHelper>(<z>
][]{{"propertyName", "url"}}<z>
;<z>
connection, int connectionId) {<z>
= mCaller.obtainMessageIO(DO_SET_SET_CONNECTION, connectionId,<z>
;<z>
sendMessage(message);<z>
(int i, OutputStream os) throws IOException {<z>
) & 0xFF);<z>
& 0xFF);<z>
& 0xFF);<z>
);<z>
IComponent component, FormErrorCollector collector) {<z>
getText(module, component);<z>
== null) {<z>
(component, SwingProperties.TEXT);<z>
parseText(value);<z>
length() > 0) {<z>
)) {<z>
, textProperty,<z>
value),<z>
MyEditorQuickFixProvider());<z>
component, JLabel.class)) {<z>
);<z>
{<z>
, component, textProperty,<z>
, value),<z>
());<z>
Frame> frames, PrintWriter pw) {<z>
("[");<z>
= true;<z>
Frame frame : frames) {<z>
frame.getData();<z>
) {<z>
;<z>
first = false;<z>
pw.print("["<z>
+ frame.getClassId() +","<z>
() +","<z>
toMicros(data.getTime()) +","<z>
) +","<z>
+",");<z>
(frame.getChildren(), pw);<z>
;<z>
;<z>
] introspectProperties(Class<?> stopClass)<z>
IntrospectionException {<z>
();<z>
methodDescriptors == null) {<z>
null;<z>
= new ArrayList<MethodDescriptor>();<z>
) {<z>
).getModifiers();<z>
Modifier.isStatic(modifiers)) {<z>
);<z>
methodList.size();<z>
;<z>
) {<z>
theMethods = new MethodDescriptor[methodCount];<z>
(theMethods);<z>
) {<z>
;<z>
propertyTable = new HashMap<String, HashMap>(<z>
;<z>
) {<z>
), propertyTable);<z>
(), propertyTable);<z>
fixGetSet(propertyTable);<z>
= introspectMethods(true);<z>
(stopClass != null) {<z>
introspectMethods(true,<z>
stopClass);<z>
{<z>
);<z>
{<z>
(!isInSuper(method, excludeMethods)) {<z>
);<z>
= tempMethods<z>
.toArray(new MethodDescriptor[0]);<z>
new ArrayList<PropertyDescriptor>();<z>
entrySet()) {<z>
);<z>
;<z>
{<z>
) table.get(STR_NORMAL);<z>
(String) table.get(STR_INDEXED);<z>
null)) {<z>
get(STR_NORMAL + PREFIX_GET);<z>
get(STR_NORMAL + PREFIX_SET);<z>
+ PREFIX_GET);<z>
.get(STR_INDEXED + PREFIX_SET);<z>
PropertyDescriptor propertyDesc = null;<z>
) {<z>
new PropertyDescriptor(propertyName, get, set);<z>
{<z>
IndexedPropertyDescriptor(propertyName,<z>
get, set, indexedGet, indexedSet);<z>
) {<z>
,<z>
);<z>
canAddPropertyChangeListener && canRemovePropertyChangeListener) {<z>
);<z>
} else {<z>
(false);<z>
) {<z>
true);<z>
propertyList.add(propertyDesc);<z>
[propertyList<z>
size()];<z>
propertyList.toArray(theProperties);<z>
theProperties;<z>
_Fields field) {<z>
{<z>
throw new IllegalArgumentException();<z>
) {<z>
case START_ROW:<z>
isSetStartRow();<z>
:<z>
);<z>
:<z>
isSetColumns();<z>
CACHING:<z>
return isSetCaching();<z>
case MAX_VERSIONS:<z>
();<z>
:<z>
);<z>
throw new IllegalStateException();<z>
, FieldInfo fieldInfo){<z>
clazz, fieldInfo);<z>
();<z>
ParameterizedType) {<z>
];<z>
else {<z>
.class;<z>
() {<z>
= 0;<z>
= 0;<z>
= -1;<z>
{<z>
();<z>
;<z>
(SQLException sqlException) {<z>
sqlException);<z>
boolean isPlugin) {<z>
) : Main.pref.getPreferencesDir();<z>
;<z>
this.ident = ident;<z>
"/cache/");<z>
(cacheDir);<z>
.mkdirs();<z>
true;<z>
(Exception e) {<z>
dir_writeable = false;<z>
.enabled = dir_writeable;<z>
, EXPIRE_DAILY);<z>
{<z>
CacheFiles.EXPIRE_NEVER;<z>
50);<z>
if(this.maxsize < 0) {<z>
.maxsize = -1;<z>
context, ModelNode operation, ModelNode model)<z>
{<z>
().asString();<z>
.getName()).asString();<z>
context, providerAlias);<z>
);<z>
{<z>
(className)) {<z>
);<z>
final ConnectionInfo connInfo,<z>
dstCi) {<z>
{<z>
(FeatureInstance) connInfo.src;<z>
isEmpty()) {<z>
, connInfo, dstCi);<z>
else {<z>
, connInfo, srcFi, dstCi);<z>
ComponentInstance) {<z>
error(parentci.getSystemInstance(),<z>
+ connInfo.src.getInstanceObjectPath()<z>
connInfo.src.getInstanceObjectPath());<z>
{<z>
(parentci.getSystemInstance(), "Connection source is neither a feature nor a component: "<z>
+ connInfo.src.getInstanceObjectPath());<z>
IApplicationThread caller,<z>
, Uri[] grantedUriPermissions,<z>
IBinder resultTo,<z>
, int requestCode, boolean onlyIfNeeded, boolean debug,<z>
, boolean autoStopProfiler) {<z>
int stack = getActivityStack(intent, resultTo);<z>
targetStack = null;<z>
) {<z>
size()) {<z>
mCornerstonePanelStacks.get(stack);<z>
cp = intent.getComponent();<z>
){<z>
.getPackageName();<z>
(pkg != null){<z>
true, stack);<z>
{<z>
, "Found in Non-Existent Stack");<z>
-1;<z>
(stack == CORNERSTONE_STACK) {<z>
mCornerstoneStack;<z>
= false;<z>
);<z>
long origId = Binder.clearCallingIdentity();<z>
{<z>
(TAG, "State: Cornerstone Launched\tAction: Config Main Panel");<z>
);<z>
origId);<z>
MAIN_STACK || stack == NO_STACK) {<z>
;<z>
){<z>
ActivityRecord r = mMainStack.topRunningActivityLocked(null);<z>
(r !=null) {<z>
= intent.getComponent();<z>
(cp != null){<z>
pkg = cp.getPackageName();<z>
null){<z>
(r.packageName)){<z>
asBinder());<z>
.START_TASK_TO_FRONT;<z>
{<z>
(r.appToken.asBinder());<z>
null){<z>
(null);<z>
) {<z>
);<z>
!= null){<z>
String pkg = cp.getPackageName();<z>
){<z>
){<z>
return IActivityManager.START_TASK_TO_FRONT;<z>
, -1, intent, resolvedType,<z>
grantedUriPermissions, grantedMode, resultTo, resultWho,<z>
profileFile, profileFd, autoStopProfiler,<z>
null);<z>
{<z>
);<z>
RandomAccessFile raf;<z>
;<z>
];<z>
= 0;<z>
;<z>
.numberOfRecords = Helper.toInt(b);<z>
.getFilePointer();<z>
, 0, 4);<z>
(b);<z>
this.currentFileOffset = raf.getFilePointer();<z>
0, 4);<z>
);<z>
= raf.getFilePointer();<z>
];<z>
,numberOfBytesInSchema);<z>
String(tempSchema);<z>
);<z>
(b,0,4);<z>
numberOfBytesInIndexData = Helper.toInt(b);<z>
();<z>
/4];<z>
) ; i++){<z>
0, 4);<z>
] = Helper.toInt(b);<z>
();<z>
raf.close();<z>
headerRead = true;<z>
{<z>
System.out.println("Reading Header information- File not found!");<z>
);<z>
catch (IOException e) {<z>
printStackTrace();<z>
createAnnotationAttributes(Annotation[] notes) {<z>
attrs = new AnnotationAttributes();<z>
.length; i++) {<z>
.class)) {<z>
true);<z>
());<z>
return attrs;<z>
) {<z>
true;<z>
) return true;<z>
ASSIGN)) return true;<z>
;<z>
final private boolean jj_3R_920() {<z>
(ATTR_NAME)) return true;<z>
) return true;<z>
jj_scan_token(ATTR_VAL)) return true;<z>
false;<z>
void initContent() {<z>
if (m_decoratedPanel != null) {<z>
.removeFromParent();<z>
CmsSimpleDecoratedPanel(m_decorationWidth, m_mainWidget, m_decorationWidgets);<z>
, 0);<z>
m_smallView);<z>
(AST n) {<z>
StringBuffer();<z>
buf.append( "[ " );<z>
);<z>
.append( " ]" );<z>
);<z>
(){<z>
(resetPasswordLayout == null){<z>
;<z>
EditText resetUsername = (EditText) resetPasswordLayout<z>
findViewById(R.id.editTextResetUsername);<z>
;<z>
public Object nextRow() throws CayenneException {<z>
if (!hasNextRow()) {<z>
CayenneException(<z>
"An attempt to read uninitialized row or past the end of the iterator.");<z>
;<z>
();<z>
row;<z>
(Composite parent) {<z>
;<z>
Composite(parent, SWT.NONE);<z>
;<z>
null));<z>
converter.convertWidthInCharsToPixels(24);<z>
fFoldersList.setButtonsMinWidth(buttonBarWidth);<z>
;<z>
();<z>
i++) {<z>
CPListElement elem= elements.get(i);<z>
(CPListElement.EXCLUSION);<z>
getAttribute(CPListElement.INCLUSION);<z>
OUTPUT);<z>
!= null) {<z>
3);<z>
composite;<z>
()<z>
);<z>
() );<z>
UserInfoForm(this);<z>
this);<z>
applyDefault( SpecProperty prop, Element romProp )<z>
( prop.defaultValue ) )<z>
;<z>
prop.defaultValue.equalsIgnoreCase( "None" ) )<z>
) )<z>
prop, "rom.def has default value \""<z>
"\" but the spec says None" );<z>
) )<z>
prop, "Default", prop.since );<z>
romProp, prop.defaultValue );<z>
prop.defaultValue ) )<z>
;<z>
Text> output, Reporter reporter) throws IOException {<z>
current_rec = null;<z>
Text out_key = new Text();<z>
= new Text();<z>
) {<z>
();<z>
;<z>
;<z>
out_val );<z>
( out_key, out_val );<z>
void remove(FileItem item) {<z>
) {<z>
getFieldName());<z>
.getFieldName());<z>
item.delete();<z>
static boolean solve(int a_sum) {<z>
4; q++) {<z>
) {<z>
n < 20; n++) {<z>
) {<z>
== a_sum) {<z>
2 == n % 2) {<z>
) {<z>
+ ": " + q<z>
+ " quarters " + d + " dimes "<z>
+ p + " pennies");<z>
return true;<z>
(REPORT_ENABLED) {<z>
+ ": no solution");<z>
;<z>
boolean includes(AnnotatedElement obj) {<z>
.getModifiers();<z>
) == target &&<z>
isFinal(mods)<z>
isNative(mods));<z>
keySpec)<z>
{<z>
params;<z>
DSAPublicKey) {<z>
forName<z>
"java.security.spec.DSAPublicKeySpec");<z>
> x509KeySpec = Class.forName<z>
);<z>
)) {<z>
.DSAPublicKey dsaPubKey<z>
)key;<z>
dsaPubKey.getParams();<z>
new DSAPublicKeySpec(dsaPubKey.getY(),<z>
(),<z>
),<z>
getG());<z>
{<z>
);<z>
else {<z>
new InvalidKeySpecException<z>
;<z>
.interfaces.DSAPrivateKey) {<z>
<?> dsaPrivKeySpec = Class.forName<z>
("java.security.spec.DSAPrivateKeySpec");<z>
Class<?> pkcs8KeySpec = Class.forName<z>
);<z>
isAssignableFrom(keySpec)) {<z>
.DSAPrivateKey dsaPrivKey<z>
.security.interfaces.DSAPrivateKey)key;<z>
dsaPrivKey.getParams();<z>
),<z>
getP(),<z>
getQ(),<z>
params.getG());<z>
pkcs8KeySpec.isAssignableFrom(keySpec)) {<z>
new PKCS8EncodedKeySpec(key.getEncoded());<z>
} else {<z>
InvalidKeySpecException<z>
"Inappropriate key specification");<z>
else {<z>
InvalidKeySpecException("Inappropriate key type");<z>
ClassNotFoundException e) {<z>
throw new InvalidKeySpecException<z>
;<z>
(Closeable stream) {<z>
if (stream instanceof ConsoleStream) {<z>
;<z>
<?>) {<z>
());<z>
OutputStreamWriter) {<z>
stream));<z>
instanceof InputStreamReader) {<z>
InputStreamReader) stream));<z>
} else if (stream instanceof ReaderInputStream) {<z>
;<z>
stream instanceof WriterOutputStream) {<z>
;<z>
instanceof FilterInputStream) {<z>
(FilterInputStream) stream));<z>
) {<z>
(FilterOutputStream) stream));<z>
else {<z>
;<z>
) throws RecognitionException {<z>
getSwitchDefaultClauseRule());<z>
);<z>
ruleSwitchDefaultClause();<z>
state._fsp--;<z>
getSwitchDefaultClauseRule());<z>
(input, EOF, FOLLOW_EOF_in_entryRuleSwitchDefaultClause4723);<z>
(RecognitionException re) {<z>
reportError(re);<z>
, re);<z>
} finally {<z>
{<z>
= getDocumentProvider();<z>
null)<z>
(getEditorInput());<z>
null)<z>
) {<z>
i++)<z>
(i));<z>
;<z>
public boolean loadMore() {<z>
;<z>
loadedArticles = null;<z>
(from == null) {<z>
0) {<z>
);<z>
;<z>
} else {<z>
(totalNumber == 0) {<z>
, from, inDaysFrom, inDaysTo);<z>
offset, inDaysFrom, inDaysTo);<z>
);<z>
{<z>
= true;<z>
return false;<z>
offset += RSSURLDB.recordPerPage;<z>
) {<z>
true;<z>
(loadedArticles);<z>
);<z>
true;<z>
int components, boolean stretched,<z>
[] free) {<z>
input;<z>
_components = components;<z>
= stretched;<z>
free) {<z>
boolean[MAX_INDEX + 1];<z>
i) {<z>
= true;<z>
free;<z>
AttributeCS object) {<z>
(object, MONIKER_SCOPE_SEPARATOR);<z>
(object);<z>
;<z>
millis) {<z>
year / 400) * MILLISECONDS_PER_400_YEARS;<z>
;<z>
365 * MILLISECONDS_PER_DAY);<z>
4) * MILLISECONDS_PER_DAY;<z>
0)<z>
) / 100) * MILLISECONDS_PER_DAY;<z>
100 != 0));<z>
? LEAP : NORMAL;<z>
[month] * MILLISECONDS_PER_DAY;<z>
MILLISECONDS_PER_DAY;<z>
millis;<z>
calc -= mRawOffset;<z>
;<z>
(calc);<z>
type) {<z>
(type);<z>
if (squad == null) {<z>
return -1;<z>
();<z>
icycle) {<z>
(icycle);<z>
getIntent());<z>
R.layout.main);<z>
new Recorder(this);<z>
this);<z>
RecorderReceiver();<z>
);<z>
= new HashSet<String>();<z>
initResourceRefs();<z>
(RESULT_CANCELED);<z>
;<z>
icycle != null) {<z>
recorderState = icycle.getBundle(RECORDER_STATE_KEY);<z>
recorderState != null) {<z>
);<z>
false);<z>
);<z>
STREAM_MUSIC);<z>
mShowFinishButton) {<z>
reset();<z>
);<z>
e, String url)<z>
;<z>
= url;<z>
createFaultMessage(Session session, Throwable o) {<z>
if (session == null) {<z>
"no response session to create fault message: " + String.valueOf(o));<z>
null;<z>
FaultException) {<z>
createTextMessage();<z>
.getFaultInfo()));<z>
FAULT_PROPERTY, true);<z>
message;<z>
(JMSException e) {<z>
;<z>
{<z>
createFaultMessage(session, o);<z>
String addBindingPrefix) {<z>
(component instanceof DataBinding) {<z>
)) {<z>
"setting nested binding prefix '"+ addBindingPrefix +"' on " + component);<z>
prefixBindingPath((DataBinding) component, addBindingPrefix);<z>
getComponentsForLifecycle()) {<z>
(nested != null) {<z>
addBindingPrefix);<z>
(CallCommand callCommand) {<z>
object = callCommand;<z>
) {<z>
object = object.eContainer();<z>
) return Collections.emptySet();;<z>
().getParam();<z>
] bindings, Action[] actions) {<z>
Hashtable();<z>
< actions.length; i++) {<z>
actions[i];<z>
(Action.NAME);<z>
""), a);<z>
++) {<z>
.actionName);<z>
if (a != null) {<z>
[i].key, a);<z>
static void applyOneDimension(<z>
width, int height, int mode) {<z>
width) {<z>
= 0;<z>
0;<z>
blue = 0;<z>
<= RADIUS; ++i) {<z>
i, width, mode)];<z>
;<z>
>> GREEN_MASK_SHIFT;<z>
argb & BLUE_MASK;<z>
x, write += height) {<z>
write] = 0xFF000000<z>
| (KERNEL_NORM[red] << RED_MASK_SHIFT)<z>
] << GREEN_MASK_SHIFT)<z>
;<z>
];<z>
+ 1, width, mode)];<z>
;<z>
prev & GREEN_MASK)) >> GREEN_MASK_SHIFT;<z>
) - (prev & BLUE_MASK);<z>
public int hashCode() {<z>
31;<z>
= 1;<z>
;<z>
);<z>
));<z>
;<z>
msg) {<z>
{<z>
msg = invokeRequest(msg);<z>
getNext().invoke(msg);<z>
() instanceof WireFormatJMSText){<z>
(msg);<z>
return msg;<z>
StatusProperty() {<z>
COLUMN_NAME_STATUS, COLUMN_NAME_STATUS);<z>
(setup.getBaseFile());<z>
).getStatus()));<z>
.toUpperCase());<z>
public SampleQCImpl(Sample sample, User user) {<z>
userCanRead(user)) {<z>
sample);<z>
e) {<z>
e.printStackTrace();<z>
public FlowPath(<z>
Direction direction,<z>
Set<FlowElement> startings,<z>
passings,<z>
FlowElement> arrivals) {<z>
(direction, "direction");<z>
Precondition.checkMustNotBeNull(startings, "startings");<z>
"passings");<z>
"arrivals");<z>
direction;<z>
startings = Sets.freeze(startings);<z>
.passings = Sets.freeze(passings);<z>
arrivals);<z>
player) {<z>
null)<z>
null;<z>
) player).backend;<z>
int hashCode() {<z>
31;<z>
;<z>
.hashCode());<z>
= prime * result<z>
;<z>
userId.hashCode());<z>
= prime * result<z>
hashCode());<z>
result;<z>
IPolycurve(IPolycurve crv){<z>
super(crv);<z>
.curves.size());<z>
)); }<z>
{<z>
)) {<z>
TITLE_MODE_ACCOUNT_WITH_ALL_FOLDERS_LABEL;<z>
isMessageViewInstalled()) {<z>
;<z>
TITLE_MODE_ACCOUNT_WITH_MAILBOX;<z>
(String urlS) {<z>
in = null;<z>
connection = null;<z>
URL(urlS);<z>
();<z>
connection);<z>
in = connection.getInputStream();<z>
new ByteArrayOutputStream();<z>
[] buf = new byte[1024];<z>
(true) {<z>
);<z>
0)<z>
(buf, 0, rc);<z>
();<z>
catch (IOException e) {<z>
+ e.getMessage(), e);<z>
null)<z>
;<z>
(Exception e) {<z>
Image imageIn) {<z>
, b;<z>
; x++){<z>
y++){<z>
, y);<z>
, y);<z>
);<z>
int d = 0 ;<z>
))<z>
;<z>
)<z>
= _depth ;<z>
)<z>
;<z>
0)<z>
;<z>
.SAFECOLOR(b+d));<z>
;<z>
) {<z>
XQuery(<z>
);<z>
("docs/bib.xml")));<z>
);<z>
= res;<z>
"<results><result><title>TCP/IP Illustrated</title><author><last>Stevens</last><first>W.</first></author></result><result><title>Advanced Programming in the Unix environment</title><author><last>Stevens</last><first>W.</first></author></result><result><title>Data on the Web</title><author><last>Abiteboul</last><first>Serge</first></author></result><result><title>Data on the Web</title><author><last>Buneman</last><first>Peter</first></author></result><result><title>Data on the Web</title><author><last>Suciu</last><first>Dan</first></author></result></results>", false)<z>
(State s) {<z>
s.affineMatrix);<z>
= s.relativeClip;<z>
sharedClipping = true;<z>
ADVANCED_GRAPHICS_MASK) == 0) {<z>
.relativeClip = null;<z>
.setAdvanced(false);<z>
appliedState.graphicHints &= ~ADVANCED_HINTS_MASK;<z>
|= ADVANCED_HINTS_DEFAULTS;<z>
;<z>
setBackgroundPattern(s.bgPattern);<z>
s.fgColor);<z>
;<z>
;<z>
.lineAttributes);<z>
;<z>
(s.graphicHints);<z>
;<z>
translateY = currentState.dy = s.dy;<z>
throws RegistryException {<z>
);<z>
String type = registryConfiguration.get(TYPE);<z>
().length() == 0) {<z>
;<z>
if (REMOTE_REGISTRY.equals(type)) {<z>
null) {<z>
new RegistryException("URL not given");<z>
REGISTRY_ROOT) != null &&<z>
{<z>
"Invalid Registry Configuration : CHROOT must start with a /");<z>
RegistryException(<z>
);<z>
)) {<z>
new RegistryException("Unkown type");<z>
e) {<z>
;<z>
isRightClick(e);<z>
) {<z>
().y);<z>
(e, mouseCoords);<z>
} else {<z>
leftPress(e);<z>
int... constraints) {<z>
+ 4];<z>
0, constraints.length);<z>
] = Constraint.NOT_NULL;<z>
.length + 1] = Constraint.PK;<z>
;<z>
Constraint.UNIQUE;<z>
;<z>
public void run() {<z>
;<z>
!stopped) {<z>
);<z>
!stopped) {<z>
;<z>
) {<z>
;<z>
{<z>
projectConfig);<z>
();<z>
) {<z>
"Project " + name + ".run() interrupted";<z>
message, e);<z>
new RuntimeException(message);<z>
{<z>
;<z>
name + " stopped");<z>
Component view, UiHandler uiHandler) throws UiConstraintException {<z>
Component> comps = uiHandler.getBoundComponents();<z>
();<z>
) {<z>
;<z>
== null) {<z>
name = field.getName();<z>
(!comps.containsKey(name)) {<z>
.get(name);<z>
?> fieldType = field.getType();<z>
component.getClass());<z>
) {<z>
() + "' of '"<z>
;<z>
boolean accessible = field.isAccessible();<z>
accessible) {<z>
setAccessible(true);<z>
);<z>
IllegalArgumentException e) {<z>
e);<z>
e) {<z>
e);<z>
.setAccessible(accessible);<z>
) {<z>
{<z>
null) {<z>
(<z>
).getModel();<z>
IOException e) {<z>
(LOG));<z>
= new POSTaggerME(<z>
File(<z>
.getModel(),<z>
);<z>
e) {<z>
));<z>
);<z>
return _instance;<z>
public void configure(JobConf conf)<z>
"map.input.file", "XYZ").split(", ");<z>
0].split("/");<z>
- 1];<z>
.getLong("map.input.start", 0);<z>
StateBasedGame game) {<z>
32 + guiHeight);<z>
map == Room.ELEVATOR_BANK) {<z>
+ 160, 32 + guiHeight);<z>
= new ArrayList<Entity>();<z>
.add(rob);<z>
i++) {<z>
*16 - 50*i, 35);<z>
add(z);<z>
e) {<z>
e.printStackTrace();<z>
;<z>
Exception {<z>
equals("")) {<z>
;<z>
(doc);<z>
);<z>
);<z>
;<z>
= TransformerFactory.newInstance();<z>
newTransformer();<z>
ex) {<z>
throw ex;<z>
setOutputProperty(OutputKeys.INDENT, "yes");<z>
("{http://xml.apache.org/xslt}indent-amount", "2");<z>
);<z>
TransformerException ex) {<z>
;<z>
();<z>
+ ".aut");<z>
));<z>
bw.write(xmlString);<z>
.flush();<z>
.close();<z>
Exception ex) {<z>
;<z>
() {<z>
ORASSIGN)) {<z>
return true;<z>
) {<z>
false;<z>
false;<z>
public final void mT__63() throws RecognitionException {<z>
= T__63;<z>
= DEFAULT_TOKEN_CHANNEL;<z>
);<z>
.type = _type;<z>
;<z>
<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {<z>
{<z>
);<z>
;<z>
addBehaviorRefPropertyDescriptor(object);<z>
);<z>
;<z>
object);<z>
object);<z>
);<z>
);<z>
return itemPropertyDescriptors;<z>
)<z>
(!baseNamesLoaded && !isShutdown)<z>
)<z>
)<z>
if (debug)<z>
.println("Dang, have to wait to get the base names list");<z>
();<z>
(InterruptedException x)<z>
throw new RuntimeException("Interrupted while waiting for base names to load: " + x);<z>
debug)<z>
(baseNames == null)<z>
);<z>
"returning baseNames");<z>
baseNames;<z>
()<z>
questId);<z>
(questId);<z>
<String, String> getOutMappings() {<z>
new HashMap<String, String>();<z>
(DataAssociation a : outMapping) {<z>
== null) {<z>
a.getTarget());<z>
;<z>
void eventDispatched(final IResumedDMEvent e) {<z>
StateChangeReason.STEP)) {<z>
dmc = e.getDMContext();<z>
);<z>
fTimedOutFutures.containsKey(dmc)) {<z>
hasNext();) {<z>
;<z>
)) {<z>
);<z>
itr.remove();<z>
));<z>
b, DelaunayNode c){<z>
().x)/2,<z>
).y)/2);<z>
getX();<z>
;<z>
= new Line();<z>
*deltaYA_B),<z>
)),<z>
deltaYA_B),<z>
) + 100*deltaXA_B)));<z>
x)/2,<z>
);<z>
.getX();<z>
();<z>
bisectorA_C = new Line();<z>
;<z>
1;<z>
i)*deltaYA_C),<z>
)*deltaXA_C)),<z>
),<z>
)*deltaXA_C)));<z>
intersectionPoint(bisectorA_C);<z>
;<z>
== null);<z>
y);<z>
,<z>
intersection.getY()-radius,<z>
,<z>
;<z>
;<z>
throws XMLStreamException {<z>
= textNode.getType();<z>
OMNode.SPACE_NODE) {<z>
(textNode.getText());<z>
type == OMNode.CDATA_SECTION_NODE) {<z>
;<z>
== OMNode.ENTITY_REFERENCE_NODE) {<z>
));<z>
, T key) {<z>
(dir);<z>
)<z>
, List<String>>());<z>
dirMap.get(key);<z>
== null)<z>
>());<z>
;<z>
insert_any(Any a_x)<z>
throws TypeMismatch, InvalidValue<z>
insert_any(a_x);<z>
valueChanged();<z>
Long topicId) {<z>
{<z>
(forumId).remove(topicId);<z>
newName) {<z>
;<z>
);<z>
new QuestionDetailPage(selenium);<z>
(Graphics g) {<z>
g.get2D();<z>
) {<z>
);<z>
);<z>
);<z>
;<z>
;<z>
);<z>
();<z>
g2d.begin();<z>
;<z>
);<z>
int time,<z>
) {<z>
endMonth = month;<z>
day : -day;<z>
= -dayOfWeek;<z>
= time;<z>
();<z>
isSimple) {<z>
(month, day,<z>
, time, after);<z>
(Object obj) {<z>
obj) {<z>
true;<z>
(!sameClassAs(obj)) {<z>
return false;<z>
Review other = (Review) obj;<z>
lang, other.lang)<z>
)<z>
.value);<z>
int par4)<z>
if (par1 == 0)<z>
;<z>
par2 == 0)<z>
= par4;<z>
0)<z>
par3 = par4;<z>
par3 + par4 >> 2 & 16711935;<z>
deinitializeDocumentProvider() {<z>
;<z>
{<z>
;<z>
;<z>
(fEditorInput);<z>
public int correct(int currentOff) {<z>
, currentOff+1);<z>
));<z>
);<z>
;<z>
(double [] array) {<z>
;<z>
++) {<z>
i]);<z>
abs > max) max = abs;<z>
i < array.length; i++) {<z>
;<z>
{<z>
batchRun1TimerIsRunning ) {<z>
cancel();<z>
batchRun1TimerIsRunning = false;<z>
} else {<z>
0, 10 * 1000);<z>
;<z>
void afterPropertiesSet() {<z>
split(GetterUtil.getString(<z>
liferay.portal.util.PropsUtil.get(<z>
));<z>
length > 0) {<z>
();<z>
{<z>
ModelListener<Role>)InstanceFactory.newInstance(<z>
;<z>
[listenersList.size()]);<z>
(Exception e) {<z>
.error(e);<z>
new ContainsGroup(this);<z>
= new AddGroup(this);<z>
(this);<z>
RemoveGroup(this);<z>
this);<z>
AddPermission(this);<z>
this);<z>
);<z>
new ContainsUser(this);<z>
addUser = new AddUser(this);<z>
(this);<z>
(this);<z>
void addLayer(final Layer layer) {<z>
{<z>
map.mapView.addLayer(layer);<z>
{<z>
if (datatype==null || dataspace==null)<z>
super.toString();<z>
="";<z>
=0; i<rank; i++)<z>
dims[i]+"x";<z>
();<z>
l-1);<z>
.getName() +<z>
+<z>
+<z>
;<z>
HttpsConfigurator cfg, InetSocketAddress addr){<z>
(cfg != null) {<z>
new Parameters (cfg, addr);<z>
cfg.configure (params);<z>
);<z>
null) {<z>
;<z>
else {<z>
.getCipherSuites() != null) {<z>
engine.setEnabledCipherSuites (<z>
()<z>
catch (IllegalArgumentException e) { }<z>
.setNeedClientAuth (params.getNeedClientAuth());<z>
.getWantClientAuth());<z>
() != null) {<z>
engine.setEnabledProtocols (<z>
params.getProtocols()<z>
}<z>
PsiElement id) {<z>
();<z>
;<z>
oldExpression.length - 1]);<z>
toCtClass(String name)<z>
pool.get(name);<z>
NotFoundException e)<z>
NotFoundException(e.toString());<z>
isInitializing() {<z>
!isConnected()) return false;<z>
catch (SQLException e) {<z>
return false;<z>
Statement stmt = m_con.createStatement();<z>
;<z>
e) {<z>
;<z>
false;<z>
toString() {<z>
;<z>
.toString());<z>
append(" (name: ");<z>
append(name);<z>
.append(", label: ");<z>
.append(label);<z>
;<z>
);<z>
", multiplicity: ");<z>
result.append(multiplicity);<z>
;<z>
.append(description);<z>
);<z>
toString();<z>
int compareTo(getSyncChunk_args other) {<z>
equals(other.getClass())) {<z>
getName());<z>
int lastComparison = 0;<z>
= (getSyncChunk_args)other;<z>
.isSetAuthenticationToken());<z>
0) {<z>
return lastComparison;<z>
, typedOther.authenticationToken);<z>
(lastComparison != 0) {<z>
;<z>
compareTo(typedOther.isSetAfterUSN());<z>
(lastComparison != 0) {<z>
return lastComparison;<z>
typedOther.afterUSN);<z>
lastComparison != 0) {<z>
;<z>
);<z>
(lastComparison != 0) {<z>
lastComparison;<z>
typedOther.maxEntries);<z>
if (lastComparison != 0) {<z>
return lastComparison;<z>
);<z>
!= 0) {<z>
return lastComparison;<z>
;<z>
lastComparison != 0) {<z>
return lastComparison;<z>
;<z>
) {<z>
[] {<z>
) {<z>
index) {<z>
, 0, inst);<z>
: return null;<z>
{<z>
Validate.notNull(resolutionKey, "resolution key");<z>
= resolutionKey;<z>
VALUE_REQUIREMENT_NAME);<z>
<UnderlyingType, String>>();<z>
getUnderlying().getUnderlyings();<z>
UnderlyingType type : types) {<z>
PRICE_SERIES + "_" + type));<z>
)<z>
length = 0;<z>
iterator();<z>
itr.hasNext())<z>
track = itr.next();<z>
();<z>
trackTicks > length)<z>
= trackTicks;<z>
length;<z>
) {<z>
DeploymentSynchronizerConfiguration configuration =<z>
tenantId);<z>
.isAutoCheckout()){<z>
;<z>
synchronizer =<z>
getSynchronizer(MultitenantUtils.getAxis2RepositoryPath(tenantId));<z>
== null) {<z>
);<z>
){<z>
;<z>
synchronizer.doInitialSyncUp();<z>
;<z>
} catch (DeploymentSynchronizerException e) {<z>
e);<z>
(<z>
,<z>
)<z>
throws SystemException {<z>
countByKITI_C_B(<z>
);<z>
initPaintViewLayout() {<z>
);<z>
id.paint_view_layout);<z>
);<z>
(paintView);<z>
(6);<z>
setColor(Color.BLACK);<z>
mPaint.setMaskFilter(null);<z>
setXfermode(null);<z>
setAlpha(0xFF);<z>
(SynchronizationSession event, IProgressMonitor monitor) {<z>
.checkCanceled(monitor);<z>
monitor.subTask(Messages.SynchronizeQueriesJob_Updating_repository_state);<z>
)) {<z>
.backgroundMonitorFor(monitor);<z>
);<z>
return true;<z>
} catch (CoreException e) {<z>
updateQueryStatus(e.getStatus());<z>
return false;<z>
) {<z>
;<z>
importers == null) {<z>
>();<z>
unresolvedModules.put(qname, importers);<z>
);<z>
() {<z>
.getInstance(myProject);<z>
) {<z>
getMessage()));<z>
else {<z>
(myList == null) {<z>
);<z>
);<z>
array, int mode) {<z>
== null) {<z>
();<z>
length;<z>
length;<z>
nz = 1;<z>
allocate();<z>
(0, 0, 0, array);<z>
{<z>
;<z>
("Subject:");<z>
;<z>
"Date:");<z>
("Message-ID:");<z>
("References:");<z>
(":bytes");<z>
printTextResponseLine(":lines");<z>
;<z>
{<z>
;<z>
().build();<z>
;<z>
(ComponentSystemManager.class, componentSystemManager);<z>
;<z>
localPlayerSys, "engine:LocalPlayerSystem");<z>
new CameraTargetSystem();<z>
.class, cameraTargetSystem);<z>
;<z>
;<z>
class, inputSystem);<z>
inputSystem, "engine:InputSystem");<z>
.loadEngineSystems();<z>
));<z>
);<z>
{<z>
)object).getName();<z>
length() == 0 ?<z>
"_UI_EEFEditorPages_type") :<z>
"_UI_EEFEditorPages_type") + " " + label;<z>
execute(Object obj2analyze, IProgressMonitor monitor,<z>
param,<z>
{<z>
int workAmount = 1;<z>
) {<z>
)<z>
));<z>
obj2analyze instanceof INodePO) {<z>
getNumNodes(((INodePO) obj2analyze)<z>
.<z>
));<z>
monitor.beginTask("", workAmount);<z>
monitor.subTask(analyzeName);<z>
CountElementOperation(monitor);<z>
, obj2analyze, ProjectContextHelper.getObjContType());<z>
worked(1);<z>
) {<z>
();<z>
OperationCanceledException();<z>
, null);<z>
[] args)<z>
options = parseCommandLineOptions(args);<z>
);<z>
.help)<z>
showUsage();<z>
.version)<z>
;<z>
MODE_INVALID || options.num==0)<z>
();<z>
, options.warm);<z>
));<z>
)<z>
;<z>
(<z>
faultCode,<z>
String faultString,<z>
)<z>
{<z>
;<z>
setFaultCode(faultCode);<z>
(faultString, locale);<z>
;<z>
, IPerspectiveDescriptor perspective) {<z>
, page, perspective,<z>
.PLE_PERSP_DEACTIVATED);<z>
perspective);<z>
downloadOMGB(Context context) {<z>
File(Constants.LOCAL_FILE);<z>
exists()) {<z>
;<z>
"Local file refreshed, skipping update check.");<z>
} else {<z>
;<z>
context);<z>
requestedAction, String role) {<z>
RoleTypes.PACKAGE_ADMIN.equalsIgnoreCase(role)) {<z>
;<z>
equalsIgnoreCase(role)) {<z>
{<z>
false;<z>
{<z>
return true;<z>
.equalsIgnoreCase(requestedAction)) {<z>
return true;<z>
.equalsIgnoreCase(role)) {<z>
(requestedAction)) {<z>
;<z>
{<z>
false;<z>
) {<z>
return true;<z>
;<z>
throws DartModelException {<z>
)) {<z>
;<z>
Method m : getMethods()) {<z>
.isAbstract()) {<z>
;<z>
;<z>
Boolean isTraversable(File f) {<z>
(".eomodeld")) {<z>
FALSE;<z>
return super.isTraversable(f);<z>
public CubeBuilder( Shell parentShell, TabularCubeHandle input )<z>
;<z>
input );<z>
.input = input;<z>
print(PrintMode printMode,<z>
headerFormat,<z>
,<z>
showPrintDialog,<z>
,<z>
,<z>
throws PrinterException,<z>
();<z>
) {<z>
{<z>
HeadlessException("Can't show print dialog.");<z>
) {<z>
"Can't run interactively.");<z>
final PrinterJob job = PrinterJob.getPrinterJob();<z>
()) {<z>
)) {<z>
);<z>
{<z>
new HashPrintRequestAttributeSet();<z>
printingStatus;<z>
printable =<z>
headerFormat, footerFormat);<z>
{<z>
printable);<z>
;<z>
= printingStatus.createNotificationPrintable(printable);<z>
} else {<z>
= null;<z>
.setPrintable(printable);<z>
) {<z>
job.setPrintService(service);<z>
)) {<z>
return false;<z>
if (!interactive) {<z>
attr);<z>
true;<z>
;<z>
new Object();<z>
= attr;<z>
) {<z>
run() {<z>
;<z>
) {<z>
) {<z>
= t;<z>
finally {<z>
dispose();<z>
);<z>
start();<z>
);<z>
;<z>
(lock) {<z>
pe = printError;<z>
;<z>
!= null) {<z>
(pe instanceof PrinterAbortException) {<z>
false;<z>
else if (pe instanceof PrinterException) {<z>
throw (PrinterException)pe;<z>
(pe instanceof RuntimeException) {<z>
(RuntimeException)pe;<z>
pe instanceof Error) {<z>
(Error)pe;<z>
(pe);<z>
return true;<z>
hasNode(NodeName id) {<z>
NodeInformation s : nodes) {<z>
id)) {<z>
;<z>
;<z>
SourceModel.Expr array) {<z>
Application.make(<z>
.sort), array});<z>
void UploadAll() {<z>
()<z>
.getAbsolutePath()<z>
.APP_DIR);<z>
[] children = dir.listFiles();<z>
children != null) {<z>
< children.length; i++) {<z>
children[i];<z>
)) {<z>
(), f.getAbsolutePath());<z>
) {<z>
.addNode(this))<z>
return false;<z>
, this);<z>
return true;<z>
MapCommand copy() {<z>
)<z>
);<z>
PanCommand(worldx, worldy);<z>
allowAdminIfEmpty) {<z>
(adminList == null) {<z>
;<z>
.isEmpty()) {<z>
.getNode());<z>
);<z>
contains(bareJID);<z>
{<z>
new WorkspaceModifyDelegatingOperation(runnable);<z>
(true, true, op);<z>
catch (InvocationTargetException e) {<z>
;<z>
clearProject();<z>
false;<z>
e) {<z>
();<z>
return false;<z>
true;<z>
) throws IOException<z>
.iterator();<z>
hasNext())<z>
);<z>
var3, par1DataOutput);<z>
);<z>
size() {<z>
== null) {<z>
;<z>
return elements.size();<z>
) throws Exception {<z>
);<z>
;<z>
().size() > 0) {<z>
PatternBasedPackageScanFilter filter = new PatternBasedPackageScanFilter();<z>
getIncludes()) {<z>
);<z>
(include);<z>
String exclude : packageScanDef.getExcludes()) {<z>
).resolvePropertyPlaceholders(exclude);<z>
);<z>
));<z>
filter, builders);<z>
= getContextScan();<z>
) {<z>
;<z>
String include : contextScanDef.getIncludes()) {<z>
= getContext().resolvePropertyPlaceholders(include);<z>
;<z>
)) {<z>
);<z>
addExcludePattern(exclude);<z>
findRouteBuildersByContextScan(filter, builders);<z>
( TOCNode node )<z>
getNodeID( ),<z>
),<z>
,<z>
BirtUtility.getTOCStyle( node ) );<z>
( node ) );<z>
return toc;<z>
{<z>
: myCars) {<z>
++) {<z>
rand.nextDouble() - 0.5;<z>
length; i++) {<z>
;<z>
copyToClipboard(Control activeControl) {<z>
installedIUGroup.getSelectedIUElements();<z>
elements.length == 0)<z>
), null));<z>
getWorkbench().getDisplay());<z>
()});<z>
.dispose();<z>
public int getFieldCountIncludingSubValues() {<z>
it = getFields();<z>
0;<z>
true) {<z>
next = it.next();<z>
(next instanceof AbstractID3v2Frame) {<z>
next;<z>
FrameBodyTXXX)) {<z>
frame.getBody();<z>
count += frameBody.getNumberOfValues();<z>
;<z>
NoSuchElementException nse) {<z>
count;<z>
(String queryString,Object... values) {<z>
);<z>
createQuery(queryString);<z>
);<z>
return query;<z>
) {<z>
{<z>
myContent, true);<z>
throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
));<z>
2;<z>
LA(1);<z>
(LA114_0==18) ) {<z>
1;<z>
(alt114) {<z>
:<z>
);<z>
rule__AssertedContext__Group_5__0();<z>
._fsp--;<z>
getAssertedContextAccess().getGroup_5());<z>
RecognitionException re) {<z>
re);<z>
;<z>
);<z>
int xid, Role role, long cookie) {<z>
= xid;<z>
.role = role;<z>
= cookie;<z>
boolean isBuildpathDelete(IProjectFragment pkgRoot) {<z>
);<z>
res == null)<z>
return true;<z>
.getProject();<z>
()<z>
))<z>
return true;<z>
().getProject();<z>
.equals(occurringProject);<z>
IOException,<z>
NotImplementedException();<z>
return null;<z>
{<z>
();<z>
.getTopic());<z>
.setBrokerName(inputDTO.getBrokerName());<z>
(inputDTO.getInputXMLMappingDTO() != null) {<z>
.getInputXMLMappingDTO();<z>
;<z>
.getInputTupleMappingDTO() != null) {<z>
InputTupleMappingDTO inputTupleMappingDTO = inputDTO.getInputTupleMappingDTO();<z>
(inputTupleMappingDTO));<z>
{<z>
.getInputMapMappingDTO();<z>
;<z>
backendInput;<z>
Element tag,<z>
final String attribute, final boolean isThrow) {<z>
);<z>
) {<z>
;<z>
} catch (final Exception e) {<z>
isThrow) {<z>
new IllegalArgumentException("attribute not valid : "<z>
attribute);<z>
return 0;<z>
initializeDefaultInitCtx() throws NamingException {<z>
{<z>
defaultInitCtx = NamingManager.getInitialContext(myProps);<z>
{<z>
throw new NoInitialContextException(<z>
);<z>
true;<z>
(SVGElement e)<z>
();<z>
while (e != null)<z>
e);<z>
;<z>
return result;<z>
f) throws IOException {<z>
JAGGERY_CONF_FILE);<z>
!confFile.exists()) {<z>
;<z>
"";<z>
(!confFile.isDirectory()) {<z>
;<z>
writer = new StringWriter();<z>
(fis, writer, null);<z>
();<z>
parse(jsonString);<z>
private boolean isObjectOpen(HObject obj)<z>
false;<z>
(obj instanceof Group) {<z>
Group) obj;<z>
;<z>
0)) {<z>
= false;<z>
{<z>
= members.size();<z>
; i++) {<z>
HObject) members.get(i);<z>
.getDataView(theObj) != null);<z>
isOpen) {<z>
.getDataView(obj) == null) {<z>
false;<z>
} else {<z>
;<z>
isOpen;<z>
onPrepareOptionsMenu(Menu menu) {<z>
);<z>
.radar).setTitleCondensed("Zoom");<z>
0);<z>
);<z>
(product_code_256km.length() > 0);<z>
(product_code_512km.length() > 0);<z>
.onPrepareOptionsMenu(menu);<z>
private void createUI() {<z>
;<z>
JTabbedPane();<z>
createPathTab());<z>
objData) {<z>
null) {<z>
= JsonUtil.getArray(objData, "paths");<z>
objData, "destination");<z>
String, String>();<z>
) {<z>
paths.get(i);<z>
() != null) {<z>
(), dest);<z>
fileMove(files);<z>
node) {<z>
provider = new PropertyCellProvider(node, editorContext);<z>
setRole("name");<z>
provider.setNoTargetText("<no name>");<z>
(true);<z>
EditorCell editorCell;<z>
.createEditorCell(editorContext);<z>
("property_name");<z>
());<z>
provider.getRoleAttribute();<z>
= provider.getRoleAttributeClass();<z>
) {<z>
.getOperationContext();<z>
manager = EditorManager.getInstanceFromContext(opContext);<z>
(editorContext, attributeConcept, attributeKind, editorCell);<z>
;<z>
protected void enter() {<z>
mTag += 1;<z>
null)) {<z>
"DcInactiveState: enter notifyConnectCompleted");<z>
mFailCause);<z>
) {<z>
log("DcInactiveState: enter notifyDisconnectCompleted");<z>
mDisconnectParams);<z>
) {<z>
BigInteger.ZERO;<z>
.getOutputs()) {<z>
getValue());<z>
);<z>
BigInteger valueGathered = BigInteger.ZERO;<z>
>();<z>
)) {<z>
tx.getOutputs()) {<z>
continue;<z>
output.isMine(this)) continue;<z>
.add(output);<z>
;<z>
;<z>
valueGathered.compareTo(nanocoins) < 0) {<z>
info("Insufficient value in wallet for send, missing " +<z>
)));<z>
false;<z>
(gathered.size() > 0);<z>
;<z>
change = valueGathered.subtract(nanocoins);<z>
) > 0) {<z>
+ " coins change");<z>
changeAddress));<z>
TransactionOutput output : gathered) {<z>
);<z>
ALL, this);<z>
) {<z>
RuntimeException(e);<z>
" completed {}", sendTx.getHashAsString());<z>
return true;<z>
) {<z>
cast(data));<z>
(InvocationTargetException e) {<z>
(e);<z>
) {<z>
RuntimeException(e);<z>
{<z>
;<z>
removeTransactionStatusManager ()<z>
(_shutdownHook != null)<z>
removeShutdownHook(_shutdownHook);<z>
;<z>
)<z>
transactionStatusManager.shutdown();<z>
= null;<z>
Object key) {<z>
;<z>
,<z>
String value2)<z>
RemoteException {<z>
String) null);<z>
() throws FastInfosetException, IOException {<z>
.ELEMENT_ATTRIBUTE_FLAG) > 0;<z>
: false;<z>
_prefixTable._declarationId == Integer.MAX_VALUE) {<z>
clearDeclarationIds();<z>
"", namespaceName = "";<z>
= _namespacePrefixesIndex;<z>
= read();<z>
.NAMESPACE_ATTRIBUTE_MASK) == EncodingConstants.NAMESPACE_ATTRIBUTE) {<z>
length) {<z>
;<z>
namespaceAIIs, 0, _namespacePrefixesIndex);<z>
;<z>
{<z>
:<z>
namespaceName = "";<z>
= -1;<z>
1:<z>
;<z>
(false);<z>
[_namespacePrefixesIndex++] = -1;<z>
:<z>
prefix = decodeIdentifyingNonEmptyStringOnFirstBitAsPrefix(false);<z>
"";<z>
1;<z>
] = _prefixIndex;<z>
3:<z>
namespaceName = decodeIdentifyingNonEmptyStringOnFirstBitAsNamespaceName(true);<z>
= _prefixIndex;<z>
(_prefixIndex, _namespaceNameIndex);<z>
{<z>
{<z>
(new QualifiedName(<z>
XMLNS_NAMESPACE_PREFIX,<z>
EncodingConstants.XMLNS_NAMESPACE_NAME,<z>
namespaceName);<z>
} else {<z>
.DEFAULT_NAMESPACE_DECLARATION,<z>
);<z>
, namespaceName);<z>
SAXException e) {<z>
new IOException("processStartNamespaceAII");<z>
= read();<z>
if (b != EncodingConstants.TERMINATOR) {<z>
;<z>
int end = _namespacePrefixesIndex;<z>
) {<z>
DecoderStateTables.EII_NO_AIIS_INDEX_SMALL:<z>
[_b], hasAttributes);<z>
EII_INDEX_MEDIUM:<z>
, hasAttributes);<z>
DecoderStateTables.EII_INDEX_LARGE:<z>
, hasAttributes);<z>
DecoderStateTables.EII_LITERAL:<z>
(<z>
LITERAL_QNAME_PREFIX_NAMESPACE_NAME_MASK,<z>
);<z>
, hasAttributes);<z>
.getString("message.IllegalStateDecodingEIIAfterAIIs"));<z>
>= start; i--) {<z>
i];<z>
_prefixTable.popScope(prefixIndex);<z>
) :<z>
;<z>
);<z>
_namespacePrefixesIndex = start;<z>
) {<z>
("processStartNamespaceAII");<z>
itemId) {<z>
= new OrderDAS();<z>
, itemId);<z>
null;<z>
String getFromEngineText()<z>
String engineText = null;<z>
) != null)<z>
.getIEName(), 100, 1);<z>
;<z>
throws ValidationException {<z>
;<z>
getShadingDictionary(result);<z>
{<z>
checkShadingDictionary(shading, result);<z>
isValid = isValid && checkGraphicState(result);<z>
return result;<z>
DoubleBuffer m) {<z>
getCapabilities();<z>
;<z>
checkFunctionAddress(function_pointer);<z>
);<z>
MemoryUtil.getAddress(m), function_pointer);<z>
void setQIsSet(boolean value) {<z>
value) {<z>
;<z>
private EmptyStatementImpl newEmptyStatement0(<z>
);<z>
result;<z>
{<z>
);<z>
)){<z>
.patNeu();<z>
(cmd.equals("edit")){<z>
;<z>
"delete")){<z>
patDelete();<z>
){<z>
).patStarteFormulare();<z>
cmd.equals("email")){<z>
;<z>
{<z>
().setzeFocus();<z>
{<z>
jbut[4].getLocationOnScreen());<z>
{<z>
.sourcePathsListHandler_75gu8q_c34d0(node, "sourcePaths", editorContext);<z>
, new CellLayout_Indent(), false);<z>
.setCellId("refNodeList_sourcePaths");<z>
Style style = editorCell.getStyle();<z>
.INDENT_LAYOUT_CHILDREN_NEWLINE, true);<z>
StyleAttributes.INDENT_LAYOUT_INDENT, true);<z>
);<z>
(handler.getElementRole());<z>
editorCell;<z>
void renderChanges( Widget widget ) throws IOException {<z>
widget;<z>
( column, column.getToolTipText() );<z>
( column );<z>
.renderChanges( column );<z>
getIndex( column ), ZERO );<z>
ZERO );<z>
);<z>
true );<z>
), false );<z>
( column ), DEFAULT_ALIGNMENT );<z>
;<z>
( column ), false );<z>
view) {<z>
getElement() : view,<z>
(EAttributeEditPart.VISUAL_ID));<z>
null) {<z>
());<z>
else {<z>
;<z>
;<z>
protected AstNode parseCreateSchemaStatement( DdlTokenStream tokens,<z>
ParsingException {<z>
tokens != null;<z>
;<z>
tokens, parentNode);<z>
Object obj)<z>
other = (InOutDegrees) obj;<z>
)<z>
);<z>
y, int numerDiffOption){<z>
numerDiffOption==0){<z>
false;<z>
{<z>
.numerDiffFlag = true;<z>
);<z>
));<z>
.calcDeriv();<z>
gridCoefficients();<z>
) {<z>
{<z>
MessagesSupportedVendorMessage vmp =<z>
) other;<z>
_messagesSupported));<z>
false;<z>
String filename, String contents) {<z>
[contents.length()];<z>
;<z>
1;<z>
);<z>
"name[]");<z>
start);<z>
start);<z>
, end);<z>
;<z>
;<z>
new StringBuffer();<z>
i++) {<z>
char c = contents.charAt(i);<z>
'\"') {<z>
1) {<z>
= i + 1;<z>
{<z>
(addLineSeparator) {<z>
.append('\n');<z>
();<z>
;<z>
(tokenStart, i);<z>
{<z>
INVALID_CHARACTER;<z>
) {<z>
;<z>
(token);<z>
append(token);<z>
addLineSeparator = true;<z>
= -1;<z>
{<z>
= false;<z>
) {<z>
.toString();<z>
.toCharArray());<z>
], 0, resultCount);<z>
result;<z>
) {<z>
addMouseListener(this);<z>
;<z>
HEIGHT);<z>
type;<z>
getBounds() {<z>
if (bounds != null) {<z>
return bounds;<z>
) {<z>
();<z>
1];<z>
int y1 = rect[2];<z>
];<z>
y2 = rect[4];<z>
{<z>
int rx1 = rect[i + 0];<z>
ry1 = rect[i + 1];<z>
= rect[i + 2];<z>
rect[i + 3];<z>
if (rx1 < x1) {<z>
;<z>
if (rx2 > x2) {<z>
= rx2;<z>
ry1 < y1) {<z>
= ry1;<z>
{<z>
y2 = ry2;<z>
y2 - y1 + 1);<z>
, ExecutionException<z>
;<z>
{<z>
new IllegalStateException(e);<z>
)<z>
CmsDbSqlException {<z>
CmsResource.STATE_KEEP;<z>
conn = null;<z>
;<z>
= null;<z>
m_sqlManager.getConnection(dbc);<z>
projectId, "C_READ_STRUCTURE_STATE");<z>
());<z>
;<z>
(res.next()) {<z>
.readQuery("C_RESOURCES_STRUCTURE_STATE")));<z>
) {<z>
catch (SQLException e) {<z>
).container(<z>
,<z>
);<z>
} finally {<z>
, conn, stmt, res);<z>
state;<z>
public static _Fields findByThriftId(int fieldId) {<z>
switch(fieldId) {<z>
case 1:<z>
CMD;<z>
:<z>
TASK_ID;<z>
:<z>
return UNDO_REPORT_HTTP;<z>
case 4:<z>
UNDO_REPORT_HTTP_URL;<z>
5:<z>
;<z>
6:<z>
DEL_TEMP_FILE;<z>
7:<z>
return EXTRA;<z>
;<z>
) {<z>
.URL(url), filename);<z>
) {<z>
"error: " + e;<z>
return "";<z>
int getSortedColumnIndex()<z>
if( collSorted.isEmpty() ) {<z>
-1;<z>
else {<z>
get( 0 )).column );<z>
{<z>
filePointer >= timestampsFile.length()) {<z>
return null;<z>
);<z>
= new ByteReader() {<z>
IOException {<z>
);<z>
);<z>
);<z>
+= elapsedMillisDiff;<z>
) {<z>
readTimeShifts();<z>
valueOf(entry))) {<z>
).longValue();<z>
} else {<z>
+= elapsedMillisDiff;<z>
filePointer = raf.getFilePointer();<z>
;<z>
return new Timestamp(elapsedMillis, millisSinceEpoch);<z>
{<z>
(raf);<z>
(int nToPop, double returnValue)<z>
( nToPop, makeFloat( returnValue ) );<z>
CachingWebLessCompileServiceWrapper(<z>
) {<z>
();<z>
.compileService = compileService;<z>
) {<z>
{<z>
new ReloadMessageTask().cancelPreviousAndExecuteParallel();<z>
( Rectangle bounds, Rectangle clientArea )<z>
.getCopy( );<z>
width;<z>
.x == 0 )<z>
x = clientArea.getTopLeft( ).x;<z>
y = clientArea.getTopLeft( ).y;<z>
( ).x;<z>
= clientArea.getBottomLeft( ).y<z>
.height < 0 ) ? MasterPageLayout.MINIMUM_HEIGHT<z>
height );<z>
return b;<z>
beforeCompletion() {<z>
if ( prepared ) {<z>
( log.isTraceEnabled() ) {<z>
tracef(<z>
toString()<z>
() ) {<z>
) );<z>
);<z>
= true;<z>
normals[]) {<z>
))<z>
)<z>
.getString("GeometryArray70"));<z>
this.retained).vertexFormat;<z>
) != 0)<z>
;<z>
((format & NORMALS ) == 0)<z>
.getString("GeometryArray77"));<z>
;<z>
(Object obj)<z>
if (this == obj)<z>
return true;<z>
)<z>
;<z>
) != obj.getClass())<z>
;<z>
= (IDStateBasedKey)obj;<z>
if (identifier == null)<z>
identifier != null)<z>
false;<z>
))<z>
;<z>
state != other.state)<z>
return false;<z>
;<z>
extends PolypeptideRegion> void addRegionToNTerminus(Polypeptide polypeptide,<z>
, String abbreviation,<z>
Class<T> regionClass) {<z>
> regions = polypeptide.getRegions(regionClass);<z>
()) {<z>
new SimpleRegionGroup(title, abbreviation);<z>
{<z>
new SimplePolypeptideRegion(<z>
);<z>
simplePolypeptideRegion);<z>
;<z>
{<z>
= null;<z>
);<z>
;<z>
("select bioentry.accession from bioentry where bioentry.biodatabase_id = ?");<z>
1, dbid);<z>
st.executeQuery();<z>
rs.next()) {<z>
;<z>
rs.close();<z>
;<z>
();<z>
.unmodifiableSet(_ids);<z>
(SQLException ex) {<z>
ex3) {}<z>
, ex);<z>
core, IndexSchema schema, String name,<z>
IOException {<z>
.newReader(<z>
, false), true,<z>
;<z>
marshall( Element e ) {<z>
,<z>
fu.name,<z>
grammarShortClassName, e.getAttribute("dataSymbol") );<z>
(EventBean event)<z>
);<z>
propertyIndex.get(key);<z>
)<z>
<EventBean>();<z>
);<z>
))<z>
event);<z>
;<z>
private void addCheckBoxes(int numDay)<z>
checkList.size() != numDay)<z>
();<z>
;<z>
JPanel();<z>
i++)<z>
25 == 0)<z>
JPanel();<z>
java.awt.FlowLayout(<z>
, 1));<z>
setBackground(CharacterPanel.white);<z>
(panel);<z>
== 0)<z>
= new javax.swing.JLabel();<z>
, 0, 10));<z>
bufLabel.setText(" ");<z>
bufLabel);<z>
;<z>
.setBackground(CharacterPanel.white);<z>
checkBox.setBorder(null);<z>
.add(checkBox);<z>
.add(checkBox);<z>
ActionListener()<z>
java.awt.event.ActionEvent evt)<z>
true);<z>
);<z>
;<z>
{<z>
(NODE_LIBRARY).item(0);<z>
= root.getChildNodes();<z>
{<z>
Node node = childNodes.item(i);<z>
getNodeType() == Node.ELEMENT_NODE) {<z>
getNodeName().equals(NODE_EXTENSION)) {<z>
);<z>
.equals(NODE_PLATFORMS)) {<z>
node);<z>
().equals(NODE_CONFIGURATIONS)) {<z>
node);<z>
getNodeName().equals(NODE_FEATURES)) {<z>
processFeaturesNode(node);<z>
return _library;<z>
{<z>
1;<z>
.commandInfo = "Listening";<z>
.commandDetail = "-";<z>
= 0;<z>
();<z>
);<z>
++data.totalRequests;<z>
;<z>
;<z>
);<z>
(connection, (byte) lastRequestType);<z>
EOFException eof) {<z>
(connection, eof);<z>
);<z>
} catch (SocketException e) {<z>
.invokeHandlerCallbackOnClientError(connection, e);<z>
();<z>
(OException e) {<z>
.invokeHandlerCallbackOnClientError(connection, e);<z>
, e);<z>
{<z>
);<z>
lastClientTxId, e);<z>
catch (Throwable t) {<z>
(connection, t);<z>
.error(this, "Error on executing request", t);<z>
lastClientTxId, t);<z>
finally {<z>
flush();<z>
t) {<z>
, t);<z>
);<z>
() - data.lastCommandReceived;<z>
lastCommandExecutionTime;<z>
data.commandInfo;<z>
;<z>
(final CrossoverPolicy crossoverPolicy,<z>
final double crossoverRate,<z>
,<z>
final double mutationRate,<z>
SelectionPolicy selectionPolicy) throws OutOfRangeException {<z>
crossoverRate < 0 || crossoverRate > 1) {<z>
.CROSSOVER_RATE,<z>
1);<z>
1) {<z>
OutOfRangeException(LocalizedFormats.MUTATION_RATE,<z>
1);<z>
crossoverPolicy = crossoverPolicy;<z>
crossoverRate;<z>
mutationPolicy;<z>
= mutationRate;<z>
this.selectionPolicy = selectionPolicy;<z>
{<z>
{<z>
();<z>
) throws ContributionReadException, ActivationException, ValidationException {<z>
(configXmlUrl);<z>
);<z>
currentDomain, node);<z>
;<z>
SyndEntryImpl entry) {<z>
;<z>
SUCCESS.name())) {<z>
BuildStatus.SUCCESS.name();<z>
} else {<z>
);<z>
return currentStatus;<z>
deleteAttachmentByCustomerPK(WAPrimaryKey foreignKey) {<z>
foreignKey.getComponentName());<z>
<AttachmentDetail> attachmentDetails = searchAttachmentByCustomerPK(fk);<z>
deleteAttachment(attachmentDetails);<z>
, String column,<z>
boolean filterByRowKey) {<z>
seriesName = new StringBuilder();<z>
.append(rkey);<z>
(":");<z>
.append(family);<z>
);<z>
(column);<z>
.toString());<z>
pool.getTable(tableName);<z>
= Calendar.getInstance();<z>
c.setTimeInMillis(startTime);<z>
.set(Calendar.MINUTE, 0);<z>
SECOND, 0);<z>
.set(Calendar.MILLISECOND, 0);<z>
rkey;<z>
Scan scan = new Scan();<z>
());<z>
startRow.getBytes());<z>
scan.setTimeRange(startTime, endTime);<z>
setMaxVersions();<z>
filterByRowKey) {<z>
, new<z>
"$"));<z>
scan.setFilter(rf);<z>
;<z>
);<z>
it.hasNext()) {<z>
result = it.next();<z>
), column.getBytes()));<z>
double value = Double.parseDouble(temp);<z>
getRow());<z>
"-")[0]);<z>
value);<z>
.close();<z>
close();<z>
e) {<z>
(ExceptionUtil.getStackTrace(e));<z>
return series;<z>
void performDefaults() {<z>
!= null) {<z>
fFileInfo.isDirectory()) {<z>
getDirectoryPermissions());<z>
{<z>
);<z>
;<z>
MaryData process(MaryData d)<z>
throws TransformerConfigurationException, TransformerException,<z>
,<z>
Exception<z>
;<z>
;<z>
= (String) d.getData();<z>
Voice defaultVoice = d.getDefaultVoice();<z>
defaultVoice == null) {<z>
getDefaultVoice(Locale.GERMAN);<z>
defaultVoice != null;<z>
("No default voice associated with data. Assuming global default " +<z>
.getName());<z>
));<z>
getAudioFileFormat());<z>
);<z>
{<z>
() instanceof AppendableSequenceAudioInputStream;<z>
(d.getAudio());<z>
VoiceSectioner sectioner = null;<z>
{<z>
sectioner = new FestivalUttSectioner(input, defaultVoice);<z>
MaryDataType.get("MBROLA"))) {<z>
sectioner = new MbrolaVoiceSectioner(input, defaultVoice);<z>
else {<z>
;<z>
;<z>
;<z>
)) != null) {<z>
(commonAudioFormat == null)<z>
();<z>
)<z>
commonAudioFormat.getSampleRate())<z>
);<z>
) {<z>
FestivalUttSectioner(input, defaultVoice);<z>
else {<z>
);<z>
;<z>
) != null) {<z>
;<z>
ais != null) {<z>
getName());<z>
getName());<z>
;<z>
return result;<z>
(Object o) {<z>
null) {<z>
return -1;<z>
).getTag();<z>
private IdentityProvides_Type getFake_1() {<z>
id = new IdentityProvides_Type();<z>
;<z>
"7.8.9.0");<z>
);<z>
"pubkey text 2");<z>
return id;<z>
createPartControl(Composite parent) {<z>
style = WebBrowserViewer.NAVIGATION_BAR;<z>
, style);<z>
(new ProgressListener() {<z>
) {<z>
event.total == 0) {<z>
0) {<z>
progressMonitor = getStatusBarProgressMonitor();<z>
();<z>
.beginTask("", event.total);<z>
progressWorked = 0;<z>
{<z>
;<z>
progressWorked = event.current;<z>
ProgressEvent event) {<z>
().done();<z>
);<z>
TitleListener() {<z>
event) {<z>
;<z>
);<z>
);<z>
String input,<z>
String output)<z>
throws Exception {<z>
= new Configuration();<z>
Job(conf);<z>
;<z>
setMapperClass(Map.class);<z>
;<z>
setInputFormatClass(PasswdInputFormat.class);<z>
job.setOutputFormatClass(PasswdOutputFormat.class);<z>
;<z>
(Passwd.class);<z>
);<z>
output);<z>
, outPath);<z>
true);<z>
(true);<z>
editorContext, SNode node) {<z>
);<z>
.setCellId("Collection_cz3bck_d0");<z>
);<z>
(StyleAttributes.SELECTABLE, false);<z>
);<z>
, true);<z>
this.createRefNodeList_cz3bck_a3a(editorContext, node));<z>
;<z>
)<z>
(this._ushr_ == oldChild)<z>
TUshr) newChild);<z>
RuntimeException("Not a child.");<z>
Cursor fetchTrip(long rowId) throws SQLException {<z>
String[] {<z>
, K_TRIP_START, K_TRIP_FANCYSTART,<z>
K_TRIP_NOTE, K_TRIP_LATHI, K_TRIP_LATLO, K_TRIP_LGTHI,<z>
K_TRIP_DISTANCE },<z>
"=" + rowId,<z>
, null, null);<z>
if (mCursor != null) {<z>
;<z>
mCursor;<z>
private DeleteObjectResponse toDeleteObjectResponse(S3Response engineResponse) {<z>
;<z>
new Status();<z>
;<z>
));<z>
response.setDeleteObjectResponse(status);<z>
return response;<z>
DoubleGrid2D values)<z>
height != values.height)<z>
= this.width = values.width;<z>
height;<z>
;<z>
=0 ; x < width; x++)<z>
));<z>
=0 ; x < width; x++)<z>
field[x],0,height);<z>
return this;<z>
GeoList dataList){<z>
GeoElement geo;<z>
.getLabel();<z>
label + "],SD[" + label + "],x]";<z>
;<z>
.setObjColor(Color.BLACK);<z>
return geo;<z>
AnnotationParserConverter(Class<? extends Annotation> annotationType,<z>
> fieldType) {<z>
.annotationType = annotationType;<z>
annotationFormatterFactory;<z>
this.fieldType = fieldType;<z>
,<z>
int taskAttemptNumber, int taskNumber, int locality) {<z>
== TaskType.MAP) {<z>
State state = State.SUCCEEDED;<z>
0;<z>
;<z>
(state, locality);<z>
sanitizeTaskRuntime(runtime, makeTaskAttemptID(taskType,<z>
);<z>
, taskInfo, runtime, null);<z>
;<z>
REDUCE) {<z>
State.SUCCEEDED;<z>
= 0;<z>
;<z>
0;<z>
(state);<z>
new ReduceTaskAttemptInfo<z>
, sortTime, reduceTime, null);<z>
;<z>
throw new IllegalArgumentException("taskType is neither MAP nor REDUCE: "<z>
);<z>
serializeList(String[] list) {<z>
list == null) {<z>
return "";<z>
= new StringBuffer();<z>
{<z>
0) {<z>
.FILTERS_PREF_LIST_DELIM);<z>
.append(list[i]);<z>
return buffer.toString();<z>
x, int y, int index) {<z>
index];<z>
);<z>
rect.setLocation( x, y );<z>
height, unionRect );<z>
unionRect.height );<z>
throws CompilerException<z>
rc = combineNode.getPactContract();<z>
final JobTaskVertex combineVertex;<z>
combineConfig;<z>
isChainable(combineNode)) {<z>
null;<z>
new Configuration());<z>
combineNode, new TaskInChain(ChainedCombineDriver.class,<z>
+ rc.getName()));<z>
{<z>
), this.jobGraph);<z>
);<z>
.setTaskClass(RegularPactTask.class);<z>
class);<z>
);<z>
COMBININGSORT);<z>
.getGroupOrder();<z>
(secondaryOrder == null) {<z>
,<z>
combineNode.getPactContract().getKeyClasses(),<z>
.length));<z>
else {<z>
writeComparatorSetupToConfig(combineConfig.getConfigForInputParameters(0),<z>
.getPactContract().getKeyClasses(),<z>
.getKeyClasses().length),<z>
), secondaryOrder.getFieldSortDirections());<z>
combineNode.getMemoryPerTask());<z>
));<z>
return combineVertex;<z>
, ProcessBean<T> processBean)<z>
cdi = _cdiManager;<z>
(processBean.getClass());<z>
);<z>
);<z>
instanceof ProcessBeanImpl<?><z>
)<z>
null;<z>
();<z>
()<z>
IOException, XMLStreamException<z>
();<z>
= _tracker.getElementName();<z>
;<z>
return name;<z>
{<z>
|| verticalScore.length < lengthHorizontal ) {<z>
[lengthHorizontal];<z>
int[regionHeight][lengthHorizontal];<z>
int[ left.width ];<z>
= new int[ lengthHorizontal ];<z>
,minDisparity,maxDisparity,radiusX*2);<z>
left, right);<z>
);<z>
int pinOut) {<z>
= in(pinIn);<z>
pinOut, val);<z>
val;<z>
e) {<z>
synchronized ( this ) {<z>
;<z>
void example1() {<z>
"CACACA"), "Safari", "Apple");<z>
, "Mozilla");<z>
);<z>
"Microsoft");<z>
s3, s4);<z>
("A Better Web", BLACK, 16);<z>
(500, 200);<z>
chart.setThreeD(true);<z>
;<z>
;<z>
= "http://chart.apis.google.com/chart?cht=p3&chs=500x200&chts=000000,16&chd=e:TNTNTNGa&chtt=A+Better+Web&chco=CACACA,DF7417,951800,01A1DB&chdl=Apple|Mozilla|Google|Microsoft&chl=Safari|Firefox|Chrome|Internet+Explorer";<z>
(url));<z>
( BinaryDataEntity entity )<z>
null )<z>
);<z>
;<z>
randomAccessFile)<z>
throws FileNotFoundException {<z>
.sizeInBlocks = sizeInBlocks;<z>
.randomAccessFile = randomAccessFile;<z>
) {<z>
i++) {<z>
i]);<z>
getGraphics();<z>
{<z>
createPaletteRoot(existingPaletteRoot);<z>
);<z>
return root;<z>
) {<z>
().getNodeType();<z>
.LABELED_STATEMENT ||<z>
!= ASTNode.CONTINUE_STATEMENT;<z>
Predicate<A> isNull() {<z>
AbstractPredicate<A>() {<z>
public boolean eval(A argument) {<z>
== null;<z>
, IOException {<z>
);<z>
name);<z>
new QueryImpl(<z>
"crc","compressedSize","comment"},<z>
"query");<z>
;<z>
= getZip(file);<z>
Enumeration entries = zip.entries();<z>
path,name,dir;<z>
ZipEntry ze;<z>
0,index;<z>
{<z>
ZipEntry)entries.nextElement();<z>
continue;<z>
;<z>
index=path.lastIndexOf('/');<z>
>0) continue;<z>
(0,index);<z>
;<z>
.accept(null, name)) continue;<z>
(dir)) continue;<z>
;<z>
();<z>
row, path);<z>
);<z>
isDirectory()?"Directory":"File");<z>
;<z>
()));<z>
ze.getCompressedSize()));<z>
);<z>
;<z>
closeEL(zip);<z>
(String s) {<z>
= "";<z>
("MD5");<z>
, 0, s.length());<z>
(16);<z>
(NoSuchAlgorithmException e) {<z>
;<z>
;<z>
boolean isDragOk(DropTargetDragEvent dtde) {<z>
ans = false;<z>
= State.getInstance();<z>
getTransferData(<z>
);<z>
);<z>
.isMethodSubClass(centerCls)<z>
.isMethodSubClass(cls))<z>
false;<z>
if (state.isDataSubClass(centerCls)<z>
state.isDataSubClass(cls))<z>
= false;<z>
;<z>
catch (Exception e) {<z>
= false;<z>
;<z>
)<z>
(name);<z>
== null)<z>
0;<z>
.toInteger(header.getValue());<z>
RecognitionException {<z>
= T__69;<z>
= DEFAULT_TOKEN_CHANNEL;<z>
);<z>
type = _type;<z>
;<z>
) {<z>
null) {<z>
JMenuItem();<z>
);<z>
CTRL_MASK, false));<z>
KeyEvent.VK_T);<z>
{<z>
) {<z>
= AktiveFenster.getFensterAlle("TerminFenster");<z>
0));<z>
){<z>
}else{<z>
);<z>
return TermStart;<z>
<NovelCollectionModel> result) {<z>
= result.getResult();<z>
{<z>
= "";<z>
;<z>
findViewById(R.id.synopsys);<z>
details);<z>
findViewById(R.id.cover);<z>
== null) {<z>
.LENGTH_LONG);<z>
.show();<z>
));<z>
) != null) {<z>
.getError();<z>
, Toast.LENGTH_SHORT);<z>
.show();<z>
+ ": " + e.getMessage());<z>
dateToString (Date d) {<z>
if (d == null)<z>
;<z>
format (d);<z>
main(<z>
args)<z>
Security.addProvider(new BouncyCastleProvider());<z>
length == 0)<z>
.println("usage: KeyBasedLargeFileProcessor -e|-d [-a|ai] file [secretKeyFile passPhrase|pubKeyFile]");<z>
("-e"))<z>
1].equals("-ia"))<z>
);<z>
].equals("-i"))<z>
args[3], false, true);<z>
[2], false, false);<z>
args[0].equals("-d"))<z>
);<z>
.err.println("usage: KeyBasedLargeFileProcessor -d|-e [-a|ai] file [secretKeyFile passPhrase|pubKeyFile]");<z>
void copyInto(RowImpl row, boolean whereOnly) {<z>
();<z>
();<z>
int start;<z>
len;<z>
) {<z>
)<z>
= len = 0;<z>
len = _vals.length / 2;<z>
} else {<z>
;<z>
rowAction == ACTION_INSERT && action != ACTION_INSERT)<z>
2;<z>
len = _vals.length;<z>
, start, len);<z>
start, len);<z>
isValid())<z>
(true);<z>
) throws IOException {<z>
getFilePointer();<z>
);<z>
, mode);<z>
curPos);<z>
ParseComponentArgs(Package _owner, String[] _outError,<z>
int _logoRes,<z>
] _sepProcesses, int _processRes,<z>
int _enabledRes) {<z>
, _logoRes);<z>
sepProcesses = _sepProcesses;<z>
processRes = _processRes;<z>
_descriptionRes;<z>
_enabledRes;<z>
void refreshResults() {<z>
ClusterExplorer) resultPanel;<z>
getSelectedClusterer() == null) {<z>
);<z>
getSelectedClusterer();<z>
] clusters = clusterer.getClusters();<z>
;<z>
rank) {<z>
(fBookmarksFile == null) {<z>
containsKey(rank)) {<z>
= fBookmarksMap.remove(rank);<z>
);<z>
findMarker(markerId);<z>
) {<z>
);<z>
catch (final CoreException e) {<z>
e);<z>
else {<z>
addBookmark(fBookmarksFile);<z>
<String, String> properties) {<z>
null;<z>
validate(repoURL, null);<z>
;<z>
} catch (ProvisionException e) {<z>
, null);<z>
(repository);<z>
);<z>
(ProvisionException ex) {<z>
;<z>
() {<z>
checkValidity();<z>
Bunch current = myBunch;<z>
myBunch.myNext;<z>
current;<z>
, String objectId, String filter,<z>
, String renditionFilter,<z>
extension) {<z>
, includeAllowableActions,<z>
includeRelativePathSegment, this);<z>
ActionEvent evt) {<z>
String command = evt.getActionCommand();<z>
command.equals("cmd.closeSession")) {<z>
();<z>
command.equals("cmd.exit")) {<z>
();<z>
equals("cmd.refreshLocalPane")) {<z>
= getCurrentSession();<z>
null) {<z>
.refreshLocalPane();<z>
if (command.equals("cmd.refreshRemotePane")) {<z>
session = getCurrentSession();<z>
null) {<z>
.refreshRemotePane();<z>
(command.equals("cmd.manageCertificates")) {<z>
manageCertificates();<z>
("cmd.addToFavorites")) {<z>
();<z>
equals("cmd.preferences")) {<z>
);<z>
{<z>
);<z>
("cmd.transferType.autoDetect")) {<z>
();<z>
{<z>
(true);<z>
command.equals("cmd.transferType.ascii")) {<z>
FTPSession session = getCurrentSession();<z>
{<z>
false);<z>
TYPE_ASCII);<z>
{<z>
getCurrentSession();<z>
null) {<z>
false);<z>
TYPE_BINARY);<z>
.equals("cmd.help")) {<z>
executeCommand("HELP");<z>
(command.equals("cmd.stat")) {<z>
);<z>
{<z>
"SYST");<z>
(command.equals("cmd.noop")) {<z>
("NOOP");<z>
if (command.equals("cmd.other")) {<z>
executeCustomCommand();<z>
command.equals("cmd.remoteFileProperties")) {<z>
showRemoteFileProperties();<z>
equals("cmd.localFileProperties")) {<z>
showLocalFileProperties();<z>
) {<z>
;<z>
command.equals("cmd.clearLocalFileFilter")) {<z>
();<z>
"cmd.applyRemoteFileFilter")) {<z>
;<z>
{<z>
clearRemoteFileFilter();<z>
("cmd.localSelectAll")) {<z>
selectAllLocalFiles();<z>
)) {<z>
);<z>
.equals("cmd.remoteSelectAll")) {<z>
);<z>
{<z>
();<z>
String doTeamsMOTD(String PlayerName) {<z>
"";<z>
)<z>
);<z>
(PlayerName).hasMOTD())<z>
getTeam(PlayerName).getMOTD();<z>
).sendMessage(motd);<z>
)<z>
.getHolder().equalsIgnoreCase(tk))<z>
getHolder()<z>
" use /capture in your area to take it back!");<z>
;<z>
(String path) {<z>
new Properties();<z>
(path);<z>
FileInputStream(file));<z>
getParentFile().getAbsolutePath();<z>
{<z>
IJ.showMessage("Can't find file " + path);<z>
(IOException e) {<z>
("Can't read from file " + path);<z>
("template", "");<z>
getInt(p, "numChannels", 2);<z>
getInt(p, "refChannel", 2);<z>
;<z>
(t);<z>
} catch (Exception e) {<z>
transformationMethod = LABEL_DIFFUSION;<z>
p, "resamplingFactor", 1);<z>
, "")))<z>
showMessage("Not all files specified in the "<z>
"file group exist.");<z>
){<z>
.showMessage("There occured an error while setting "<z>
+ "manually.");<z>
,SequenceMatchRules.Expression> attributes) throws ParseException {<z>
= null;<z>
expr = null;<z>
field = jj_consume_token(IDENTIFIER);<z>
jj_consume_token(28);<z>
env);<z>
null && expr != null) {<z>
) {<z>
field.image);}<z>
.put(field.image, expr);<z>
if (true) return attributes;}<z>
;<z>
) {<z>
running() &&<z>
rdp (reconnect) != null)<z>
sleep(1000);<z>
.isConnected ()) {<z>
(ready) != null)<z>
;<z>
(IOException e) {<z>
));<z>
.isConnected ())<z>
ISOUtil.sleep (delay);<z>
++;<z>
null))<z>
new Date());<z>
Class baseClass, Object... args) {<z>
;<z>
;<z>
) {<z>
runningVersion + " is not mapped to a source package." +<z>
;<z>
= getValidVersionList(runningPkg);<z>
();<z>
null;<z>
;<z>
) && o==null) {<z>
String ver = it.next();<z>
getClassName(baseClass, ver);<z>
);<z>
);<z>
if (args.length == 0) {<z>
;<z>
= clazz.newInstance();<z>
o = newInstance(clazz, args);<z>
(ClassNotFoundException cnfe){<z>
.FINEST, "Couldn't instantiate: " + ver, cnfe);<z>
catch(IllegalAccessException iae){<z>
, "Couldn't instantiate: " + ver, iae);<z>
catch(InstantiationException ie){<z>
"Couldn't instantiate: " + ver, ie);<z>
));<z>
o.getClass())) {<z>
, o);<z>
o;<z>
) + "', don't have a parent/subclass relationship.");<z>
removeTask( HttpServletRequest request )<z>
if ( request == null )<z>
( IBirtConstants.ATTRIBUTE_BEAN );<z>
null )<z>
attrBean.getTaskId( );<z>
)<z>
);<z>
.TASK_MAP );<z>
map == null )<z>
map )<z>
.remove( taskid );<z>
( Exception e )<z>
int attribute_name_index, final long attribute_length,<z>
final UDataInputStream bytes)<z>
super (attribute_name_index, attribute_length);<z>
int lines_count = bytes.readU2 ();<z>
m_lines = new ArrayList (lines_count);<z>
; i++)<z>
;<z>
public Pendelhaven(UUID ownerId) {<z>
}, null);<z>
;<z>
this.supertype.add("Legendary");<z>
;<z>
.EndOfTurn), new TapSourceCost());<z>
));<z>
this.addAbility(ability);<z>
void writeInt(int v) throws IOException<z>
)(v >>> 24);<z>
);<z>
v >>> 8);<z>
>>> 0);<z>
write( writeBuffer, 0, 4);<z>
String fileName) {<z>
.newInstance();<z>
false);<z>
);<z>
fileName);<z>
setEntityResolver(new MyEntityResolver());<z>
.parse(is);<z>
doc;<z>
{<z>
;<z>
ex.printStackTrace();<z>
null;<z>
, DDCAPS_DX7 param_1, DDCAPS_DX7 param_2) {<z>
;<z>
: param_1.longLockPointer();<z>
? 0 : param_2.longLockPointer();<z>
, tmp_2);<z>
!= null) {<z>
.unlock();<z>
!= null) {<z>
();<z>
if (param_2 != null) {<z>
.unlock();<z>
;<z>
)<z>
== null)<z>
, null);<z>
();<z>
);<z>
i >= diameter; i--)<z>
i-1);<z>
;<z>
);<z>
;<z>
step();<z>
(TransientSModel model) {<z>
()) throw new IllegalStateException("no swap dir");<z>
).getSModelId().toString();<z>
.isEmpty()) {<z>
+ ">");<z>
;<z>
replaceAll(":", "-");<z>
mySpaceDir, modelId);<z>
.delete()) {<z>
;<z>
false;<z>
();<z>
); ) {<z>
next());<z>
mos = null;<z>
null;<z>
(swapFile));<z>
, mos);<z>
IOException e) {<z>
= e;<z>
.error(e);<z>
finally {<z>
mos != null) {<z>
;<z>
IOException ignore) {<z>
ioex == null;<z>
(SourceModel.Expr exception) {<z>
.Application.make(<z>
exception});<z>
{<z>
PipelineXMLConstants.GATK_PATH);<z>
)<z>
();<z>
properties.get(PATH);<z>
path != null) {<z>
= path;<z>
threadsStr = properties.get(THREADS);<z>
null) {<z>
parseInt(threadsStr);<z>
.get(JVM_ARGS);<z>
jvmARGStr == null)<z>
"";<z>
).getAbsolutePath();<z>
;<z>
.class).getAbsolutePath();<z>
);<z>
gatkPath;<z>
inputFile + " -T ApplyRecalibration";<z>
" --ts_filter_level 99.0 ";<z>
+ " -tranchesFile output.tranches ";<z>
inputRecal + " ";<z>
outputVCF;<z>
command;<z>
context,<z>
String action,<z>
trigId,<z>
mins,<z>
) {<z>
i(DEBUG_TAG, "Notifier: Setting alarm(" + trigId +<z>
+ ", " + action + ")");<z>
)<z>
;<z>
(action, trigId);<z>
null) {<z>
extras);<z>
i,<z>
PendingIntent.FLAG_CANCEL_CURRENT);<z>
;<z>
set(AlarmManager.RTC_WAKEUP,<z>
.currentTimeMillis() + elapsed, pi);<z>
ZLFile getWallpaperFile() {<z>
.getValue();<z>
if ("".equals(filePath)) {<z>
return null;<z>
ZLFile.createFileByPath(filePath);<z>
file.exists()) {<z>
null;<z>
return file;<z>
positive,char c)<z>
false;<z>
,c)) return true;<z>
,c)) return true;<z>
,c)) return positive;<z>
false;<z>
throws Exception {<z>
;<z>
.readByte();<z>
;<z>
);<z>
;<z>
{<z>
if(cachedAddrs == null)<z>
HashMap<Address,IpAddress>(size);<z>
i++) {<z>
Address key=Util.readAddress(in);<z>
);<z>
);<z>
;<z>
> 0) {<z>
== null)<z>
mbrs=new HashSet<Address>();<z>
{<z>
(in);<z>
(addr);<z>
makeDir(){<z>
;<z>
new File(PDir);<z>
Dir+EL);<z>
new File(Dir+BETF);<z>
CETfile = new File(Dir+CETF);<z>
)){<z>
;<z>
(!pdirfol.exists()){<z>
();<z>
){<z>
();<z>
()){<z>
Dir+BETF, "CRBlockEXPTable.txt");<z>
.exists()){<z>
, "CRCombatEXPTable.txt");<z>
dir.exists()) {<z>
;<z>
{<z>
dir);<z>
else {<z>
= dir.listFiles();<z>
++) {<z>
{<z>
].lastModified()) > delay) {<z>
testDirs[i]);<z>
) {<z>
partRef.getPart(false);<z>
{<z>
fASTViewVisible= true;<z>
extends EStructuralFeature> getChildrenFeatures(Object object) {<z>
{<z>
super.getChildrenFeatures(object);<z>
);<z>
;<z>
) {<z>
.size() < 1) {<z>
;<z>
insertHandlers.iterator(); insertHandlersIter<z>
hasNext();) {<z>
;<z>
(topRow + currentRow);<z>
{<z>
;<z>
return -1;<z>
.EntityContextType context) {<z>
;<z>
) {<z>
ELEMENT_CONTENT_SPEC:<z>
:<z>
:<z>
:<z>
case ENTITY_DECL_CONTENT:<z>
DOCTYPE_MARKUP;<z>
:<z>
{<z>
.error("context: " + context);<z>
(rootNodeType == XML_MARKUP_DECL && context == TYPE_FOR_MARKUP_DECL) {<z>
;<z>
return state;<z>
{<z>
nodeInfo == null)<z>
return null;<z>
get(key);<z>
[] b,<z>
off,<z>
len ) throws IOException {<z>
<= CHUNKSIZE) {<z>
, len);<z>
{<z>
();<z>
);<z>
();<z>
- storeLength);<z>
Animator animator, Effect parentEffect) {<z>
;<z>
new PropertySetter(targetEffect, "location",<z>
().getY()));<z>
addTarget(ps);<z>
init(animator, parentEffect);<z>
static String createShortMismatchedArgumentsHtmlTooltip(PsiExpressionList list,<z>
PsiParameter[] parameters,<z>
,<z>
PsiSubstitutor substitutor,<z>
PsiClass aClass) {<z>
.getExpressions();<z>
parameters.length, expressions.length);<z>
"HTML")<z>
0 ? "(&nbsp;)&nbsp;" : "");<z>
return JavaErrorMessages.message(<z>
,<z>
,<z>
expressions),<z>
)<z>
response) throws ServletException, IOException {<z>
request.getParameter("contentPath");<z>
(contentPath)) {<z>
);<z>
getContentInfo(contentPath);<z>
checkIfModifiedSince(request, response, contentInfo.lastModified)<z>
)) {<z>
setExpiresHeader(response, Servlets.ONE_YEAR_SECONDS);<z>
.setLastModifiedHeader(response, contentInfo.lastModified);<z>
etag);<z>
);<z>
request.getParameter("download") != null) {<z>
);<z>
;<z>
) {<z>
response);<z>
else {<z>
response.setContentLength(contentInfo.length);<z>
);<z>
copyFile(contentInfo.file, output);<z>
output.flush();<z>
Throwable exception) {<z>
exception);<z>
.httpCode = httpCode;<z>
jsonData = jsonData;<z>
performFinish()<z>
.toLowerCase().endsWith(".ml"))<z>
getFileName() + ".ml");<z>
this.mainPage.createNewFile();<z>
return false;<z>
.selectAndReveal(file);<z>
().getActiveWorkbenchWindow();<z>
) {<z>
);<z>
page != null)<z>
, true);<z>
{<z>
"part init exception", e);<z>
;<z>
(SwitchCase node) {<z>
) {<z>
getStart();<z>
);<z>
if (value != null) {<z>
valueEnd = value.getEnd();<z>
-1) {<z>
;<z>
pos, "", "");<z>
.VALUE_PROPERTY);<z>
) throws Exception {<z>
isBatchConsumer()) {<z>
;<z>
!= size) {<z>
;<z>
, batchSize);<z>
) {<z>
(isIgnoreInvalidExchanges()) {<z>
;<z>
{<z>
"Exchange is not valid to be used by the BatchProcessor", exchange);<z>
;<z>
Object message, Throwable t) {<z>
) > 0) {<z>
(0, buffer.length());<z>
null) {<z>
);<z>
(level);<z>
buffer.append(']');<z>
message != null) {<z>
.append(delimeter);<z>
);<z>
{<z>
delimeter);<z>
t);<z>
toString();<z>
{<z>
: fckConfigPlugins) {<z>
);<z>
configName) {<z>
registry, configName);<z>
));<z>
void setGeneratedResourceModifiedChoice(GeneratedResourceModifiedChoice choice) {<z>
if (choice != null) {<z>
(choiceWhenGeneratedResourceModifiedKey, choice.getIdentifier());<z>
(choice);<z>
public String index() throws Exception {<z>
outputStockListForm.radioCond2 = "0";<z>
);<z>
.addEmptyLabelValue(rackCategoryList);<z>
;<z>
public Ide getIde() {<z>
ide = new Ide();<z>
);<z>
);<z>
.getComNaturezaDescricao().trim());<z>
null ? "1" : "2"));<z>
get("nfe.modo"));<z>
));<z>
) + "");<z>
.formataData(data, "yyyy-MM-dd"));<z>
));<z>
);<z>
+ "");<z>
;<z>
));<z>
setCDV(cDV);<z>
));<z>
).get("nfe.finalidade"));<z>
get("nfe.procemi"));<z>
));<z>
return ide;<z>
{<z>
.log("Start cleaning shared folder at "<z>
(), Level.INFO);<z>
filesDeleted = 0;<z>
();<z>
= (long) fileLifetime * 60 * 1000;<z>
null && scanFolder.exists()) {<z>
{<z>
lastModified() + fileLifetimeMs <= currentDate) {<z>
file.isFile()) {<z>
;<z>
file.delete();<z>
) {<z>
)<z>
.separator + fileName);<z>
()) {<z>
thumbNail.delete();<z>
filesDeleted += 1;<z>
catch (Exception ex) {<z>
), Level.SEVERE);<z>
,<z>
, filesDeleted), Level.INFO);<z>
ex) {<z>
;<z>
ColumnMapping columnMapping) throws SQLException {<z>
{<z>
(columnMapping.getColumnIndex());<z>
));<z>
OsmPrimitive> getMyConflictParties() {<z>
>();<z>
?> c: conflicts) {<z>
());<z>
ret;<z>
parent) {<z>
, AmlViewsRepository.FORM_KIND));<z>
parent, "");<z>
FormToolkit.TEXT_BORDER);<z>
parent);<z>
;<z>
setLayoutData(descriptionData);<z>
) {<z>
SuppressWarnings("synthetic-access")<z>
void focusLost(FocusEvent e) {<z>
!= null)<z>
)));<z>
;<z>
.addKeyListener(new KeyAdapter() {<z>
)<z>
public void keyPressed(KeyEvent e) {<z>
character == SWT.CR) {<z>
!= null)<z>
.getText()));<z>
;<z>
AmlViewsRepository.Choice.Properties.description);<z>
);<z>
);<z>
return parent;<z>
(final int[] selectedRows,<z>
selectedColumns)<z>
NoDataException, NullArgumentException, OutOfRangeException {<z>
checkSubMatrixIndex(selectedRows, selectedColumns);<z>
> subMatrix =<z>
length, selectedColumns.length);<z>
>(field.getZero()) {<z>
) {<z>
]);<z>
);<z>
;<z>
public UpdateContainer doIt(VWorkspace vWorkspace) throws CommandException {<z>
;<z>
Workspace ws = vWorkspace.getWorkspace();<z>
getWorksheet();<z>
new Cloner();<z>
cloner.deepClone(wk);<z>
mgr = AlignmentManager.Instance();<z>
, vWorksheetId);<z>
Alignment al = mgr.getAlignment(alignmentId);<z>
(al == null) {<z>
error("The alignment model is null.");<z>
(<z>
));<z>
getSteinerTree();<z>
null) {<z>
error("The alignment tree is null.");<z>
ErrorUpdate(<z>
));<z>
), tree);<z>
<String, String>> servicesAndMappings =<z>
), null);<z>
if (servicesAndMappings == null) {<z>
);<z>
new UpdateContainer(new ErrorUpdate(<z>
));<z>
;<z>
servicesAndMappings.keySet().iterator();<z>
()) {<z>
service = itr.next();<z>
(service == null) {<z>
);<z>
new ErrorUpdate(<z>
;<z>
();<z>
get(service);<z>
, requestIds);<z>
== 0) {<z>
"Data table does not have any row.");<z>
));<z>
InvocationManager invocatioManager;<z>
= new InvocationManager(requestIds, requestURLStrings);<z>
+ ",includeInput=" + true + ",includeOutput=" + true);<z>
, true);<z>
());<z>
.getUri() + " has been invoked successfully.");<z>
} catch (MalformedURLException e) {<z>
logger.error("Malformed service request URL.");<z>
);<z>
} catch (KarmaException e) {<z>
error(e.getMessage());<z>
e.getMessage()));<z>
;<z>
getSortedHNodes()) {<z>
HNodePath(node);<z>
(path);<z>
updateWorksheet(vWorksheetId,<z>
wk, columnPaths, vWorkspace);<z>
.getVWorksheet(vWorksheetId);<z>
.update(c);<z>
;<z>
value) {<z>
) {<z>
);<z>
null;<z>
value).data();<z>
catch (Exception ex) {<z>
);<z>
public void cooldown(boolean check) throws Exception<z>
;<z>
)<z>
"timeBeforeTeleport", ex.getMessage()));<z>
rule__Program__Group__3__Impl() throws RecognitionException {<z>
;<z>
getProgramAccess().getGroup_3());<z>
=2;<z>
;<z>
24) ) {<z>
1;<z>
{<z>
:<z>
;<z>
;<z>
._fsp--;<z>
getGroup_3());<z>
) {<z>
(re);<z>
;<z>
stackSize);<z>
.ec2.ActivateLicenseType param){<z>
this.localActivateLicense=param;<z>
void rule__OperDef__Group_4__5() throws RecognitionException {<z>
);<z>
pushFollow(FOLLOW_rule__OperDef__Group_4__5__Impl_in_rule__OperDef__Group_4__520082);<z>
rule__OperDef__Group_4__5__Impl();<z>
._fsp--;<z>
.failed) return ;<z>
FOLLOW_rule__OperDef__Group_4__6_in_rule__OperDef__Group_4__520085);<z>
rule__OperDef__Group_4__6();<z>
state._fsp--;<z>
if (state.failed) return ;<z>
{<z>
(re);<z>
recover(input,re);<z>
;<z>
] args) {<z>
;<z>
;<z>
) in.readObject();<z>
close();<z>
"All words: " + extrs);<z>
out.println("Rare words: " + extrsRare);<z>
) {<z>
printStackTrace();<z>
index)<z>
OrderedObject result = null;<z>
if (this._items != null)<z>
;<z>
;<z>
public void saveStateForCurrentThread(boolean saveState) {<z>
) {<z>
.matchedInfos.set(createAncestorInfo());<z>
} else {<z>
;<z>
(Option<?> o) {<z>
) {<z>
) != -1)<z>
.MULTI_LEVEL_CHAR);<z>
(o.name))<z>
+o.name+" on "+this);<z>
, o);<z>
config.onRegister(this, o);<z>
(int sqlType, String javaTypeName)<z>
(javaTypeName);<z>
)<z>
.toString(DatabaseTypeEnum.values());<z>
+ "' when expecting any of: " + supported);<z>
(sqlType, javaTypeName);<z>
, Method method, CodeAttribute codeAttribute)<z>
;<z>
isReachable.length < codeLength)<z>
;<z>
index++)<z>
isReachable[index] = false;<z>
;<z>
= false;<z>
clazz, method, this);<z>
);<z>
) {<z>
(!groups.containsKey(group)) {<z>
String.format("Unknown group '%s'", group));<z>
groups.get(group);<z>
protected void checkChildren() throws Exception {<z>
{<z>
getSourceDocument();<z>
getAreaVersion(Publication.LIVE_AREA);<z>
());<z>
().getNode();<z>
);<z>
) {<z>
);<z>
Env env,<z>
StringValue msgid1,<z>
msgid2,<z>
n,<z>
Value []args)<z>
translate(env,<z>
),<z>
);<z>
) {<z>
== null) {<z>
new ConcurrentHashMap<String, DarwinStatisticsCount>();<z>
;<z>
{<z>
.LANG_NOT_SUPPORTED;<z>
;<z>
e) {<z>
TextToSpeech.LANG_NOT_SUPPORTED;<z>
res;<z>
) {<z>
(params);<z>
= params;<z>
.getSearchQueryModel();<z>
private ImportDirective parseImportDirective() {<z>
IMPORT);<z>
parseStringLiteral();<z>
= null;<z>
null;<z>
) {<z>
= getAndAdvance();<z>
);<z>
<ImportCombinator>();<z>
|| matches(HIDE)) {<z>
TokenType.IDENTIFIER);<z>
equals(SHOW)) {<z>
shownNames = parseIdentifierList();<z>
shownNames));<z>
{<z>
= parseIdentifierList();<z>
ImportHideCombinator(kind, hiddenNames));<z>
(TokenType.SEMICOLON);<z>
prefix, combinators, semicolon);<z>
expression.ui.ExpressionEditor editor) {<z>
;<z>
closingListener);<z>
(closingListener);<z>
textWidget.addModifyListener(closingListener);<z>
.setBracketHandler(closingListener);<z>
String url, String action)<z>
false;<z>
getFileLocationFromZipURL(url, action);<z>
) {<z>
isValidZipURL = true;<z>
(Exception e) {<z>
;<z>
boolean encodeFavored) {<z>
= resources;<z>
encodeFavored;<z>
PdfTraitEncoder.createSmallTraitEncoder();<z>
int end) {<z>
<T>();<z>
;<z>
.hasNext()) {<z>
.next();<z>
) > start) break;<z>
add(otherFeat);<z>
()) {<z>
(selfIter.next());<z>
hasNext()) {<z>
end) {<z>
);<z>
otherFeat = otherIter.next();<z>
otherFeat.getStart() >= end) {<z>
(otherFeat);<z>
;<z>
(Document document) throws Exception {<z>
DOMImplementationRegistry.newInstance();<z>
);<z>
writer = impl.createLSSerializer();<z>
writer.writeToString(document);<z>
e) {<z>
("Error converting the xml document to String.", e);<z>
Family family(final byte[] family) {<z>
{<z>
c) {<z>
qualifier), c);<z>
<U> c) {<z>
), c);<z>
Class<U> c) {<z>
;<z>
String qualifier, Class<U> c) {<z>
;<z>
] qualifier, Class<U> c) {<z>
, c);<z>
Class<U> c) {<z>
qualifier, c);<z>
<U> c) {<z>
valuesAscTimestamp(family, qualifier, c);<z>
{<z>
.valuesDescTimestamp(family, qualifier, c);<z>
) {<z>
);<z>
> entry : familyMap.entrySet()) {<z>
(), entry.getValue());<z>
;<z>
equals(Object obj)<z>
0 ; i < size ; i++) {<z>
) != val[i]) return false;<z>
return true;<z>
public GitCommandBuilder source(String source)<z>
.source = source;<z>
;<z>
) {<z>
ContextCapabilities caps = GLContext.getCapabilities();<z>
;<z>
BufferChecks.checkFunctionAddress(function_pointer);<z>
nglResumeTransformFeedbackNV(function_pointer);<z>
void add(double value) {<z>
value > max) {<z>
value;<z>
toString(StringBuffer buf, boolean tag)<z>
tag)<z>
;<z>
);<z>
(_attrs != null)<z>
.length; i++)<z>
(' ');<z>
[i].getName());<z>
buf.append("=\"");<z>
[i].getValue());<z>
buf.append("\"");<z>
if (_list != null)<z>
tag)<z>
;<z>
; i++)<z>
get(i);<z>
null)<z>
(o instanceof Node)<z>
toString(buf, tag);<z>
(o.toString());<z>
tag)<z>
"</");<z>
append(_tag);<z>
append(">");<z>
(tag)<z>
);<z>
IOException {<z>
.length;<z>
(count);<z>
= 0; i < count; ++i)<z>
i]);<z>
public void Initialize(SystemTreeItemModel systemTreeSelectedItem)<z>
Initialize(systemTreeSelectedItem);<z>
false);<z>
this,<z>
() {<z>
Object returnValue) {<z>
target;<z>
;<z>
null)<z>
ConstantsManager.getInstance()<z>
()<z>
);<z>
getModel()<z>
getDataCenter()<z>
storage_pool[] { dataCenter })));<z>
);<z>
.setIsChangable(false);<z>
),<z>
);<z>
<TrPeerInfo, Void> updateFunction) {<z>
= node.getFileForPublicNode(addr);<z>
.exists()) {<z>
<TrPeerInfo>() {<z>
Modified modified) {<z>
object);<z>
);<z>
else {<z>
get(addr);<z>
{<z>
apply(peerToUpdate);<z>
else {<z>
addr+", ignoring");<z>
int numberInIteration,<z>
String surroundedText,<z>
CustomTemplateCallback callback,<z>
) {<z>
) {<z>
insertSurroundedTextAtTheEnd);<z>
tokenize(surroundedText, false);<z>
= new ArrayList<GenerationNode>();<z>
.length; i++) {<z>
), callback, insertSurroundedTextAtTheEnd));<z>
return result;<z>
static void main(String[] args) {<z>
(new Runnable() {<z>
{<z>
;<z>
);<z>
{<z>
result = "";<z>
switch (tag) {<z>
OTHER_NAME:<z>
result = "otherName[0]: "<z>
;<z>
:<z>
"rfc822Name[1]: " + name;<z>
case DNS_NAME:<z>
result = "dNSName[2]: " + name;<z>
case UR_ID:<z>
= "uniformResourceIdentifier[6]: " + name;<z>
REG_ID:<z>
(int[]) name);<z>
:<z>
result = "x400Address[3]: "<z>
));<z>
DIR_NAME:<z>
"directoryName[4]: "<z>
getName(X500Principal.RFC2253);<z>
:<z>
= "ediPartyName[5]: "<z>
;<z>
case IP_ADDR:<z>
]) name);<z>
;<z>
{<z>
startsWith("\""))<z>
;<z>
else if (token.matches("[0-9]*"))<z>
"expr:int";<z>
"expr:" + getVariableType(token);<z>
throws MuleException<z>
currentTimeMillis();<z>
event);<z>
(logger.isInfoEnabled())<z>
;<z>
+ executionTime<z>
);<z>
;<z>
void invokeAsyncResponse(Message msg) {<z>
(msg.getOperation());<z>
chain.getTailInvoker();<z>
tailInvoker).invokeAsyncResponse(msg);<z>
Object exec (List arguments) throws TemplateModelException {<z>
String aExecute;<z>
StringBuilder();<z>
arguments.size() < 1 ) {<z>
;<z>
);<z>
aExecute );<z>
getInputStream();<z>
execReader = new InputStreamReader( execOut );<z>
char[ OUTPUT_BUFFER_SIZE ];<z>
;<z>
) {<z>
bytes_read );<z>
read( buffer );<z>
ioe ) {<z>
getMessage() );<z>
toString();<z>
String findHuffPath(HuffNode trie, Object need) {<z>
trie.getLeft();<z>
();<z>
&& left.getValue() != null) {<z>
))) {<z>
return "0";<z>
&& right.getValue() != null) {<z>
.getValue())) {<z>
return "1";<z>
if (left != null) {<z>
, need);<z>
.length() > 0) {<z>
+ leftPath;<z>
) {<z>
(right, need);<z>
(rightPath.length() > 0) {<z>
"1" + rightPath;<z>
"";<z>
getInstance() {<z>
if (instance == null) {<z>
SecurePreferenceBP();<z>
instance;<z>
] grow()<z>
!= null;<z>
+ 1);<z>
, boolean selection) {<z>
(Intent.ACTION_VIEW);<z>
(this, TestShellActivity.class);<z>
.FLAG_ACTIVITY_SINGLE_TOP);<z>
);<z>
;<z>
CURRENT_TEST_NUMBER, 1);<z>
startActivity(intent);<z>
public boolean add(Converter converter) {<z>
if (path.contains(converter)) {<z>
return false;<z>
else {<z>
add(converter);<z>
);<z>
true;<z>
, @NotNull VariableDescriptor variableDescriptor) {<z>
);<z>
;<z>
(name, variableDescriptor);<z>
(variableDescriptor);<z>
;<z>
Type type, ArrayList<Type> subs) {<z>
= getSubtypesForType(type);<z>
{<z>
) {<z>
];<z>
subType);<z>
, subs);<z>
IOException<z>
.readByte()];<z>
< this.entityId.length; ++var2)<z>
;<z>
void copyData() {<z>
.isTemporary()) {<z>
;<z>
db = session.getDatabase();<z>
);<z>
.getTempTableName(baseName, session);<z>
);<z>
);<z>
tempName, newColumns);<z>
;<z>
) {<z>
);<z>
getMessage());<z>
String tableName = table.getName();<z>
();<z>
views != null) {<z>
New.arrayList(views);<z>
{<z>
;<z>
+ " IGNORE", true);<z>
, newTable, tableName);<z>
DbObject child : newTable.getChildren()) {<z>
) {<z>
= child.getName();<z>
|| child.getCreateSQL() == null) {<z>
name.startsWith(tempName + "_")) {<z>
tempName.length() + 1);<z>
) child;<z>
so instanceof Constraint) {<z>
!= null) {<z>
().getUniqueConstraintName(session, newTable);<z>
) {<z>
, name) != null) {<z>
newTable, name);<z>
name);<z>
if (views != null) {<z>
for (TableView view : views) {<z>
;<z>
);<z>
) {<z>
( name.equalsIgnoreCase( "Content-Type" ) ) {<z>
value );<z>
return true;<z>
( name.equalsIgnoreCase( "Content-Length" ) ) {<z>
parseLong( value );<z>
);<z>
true;<z>
NumberFormatException ex ) {<z>
;<z>
) ) {<z>
return false;<z>
public float normalizeDistanceForLineWidth(float distance) {<z>
= 1;<z>
(stroke instanceof BasicStroke) {<z>
.getLineWidth();<z>
> 1) {<z>
lineWidth / 2;<z>
{<z>
= 0f;<z>
;<z>
{<z>
][columns];<z>
; r < rows; r++) {<z>
) {<z>
;<z>
array;<z>
)<z>
= exn;<z>
_context = context;<z>
) {<z>
if (source == null) {<z>
null);<z>
else {<z>
all = new ArrayList<H>();<z>
;<z>
(getHandlerList(type, null));<z>
return all;<z>
parameters) {<z>
;<z>
if (parameters != null) {<z>
i++) {<z>
i].getName();<z>
equalsIgnoreCase(paramname)) {<z>
);<z>
[i].getValue());<z>
;<z>
{<z>
);<z>
RetrieveProtocols(Database db) {<z>
);<z>
<String>();<z>
ArrayList<String>();<z>
inheritance = new JSONObject();<z>
String, JQueryTreeViewElement>();<z>
);<z>
;<z>
new HashMap<String, Protocol>();<z>
db.query(Protocol.class);<z>
(Protocol.INVESTIGATION_NAME,<z>
EQUALS, this.selectedInvestigation));<z>
)) {<z>
{<z>
(true);<z>
> subNames = p.getSubprotocols_Name();<z>
())) {<z>
p.getName(), p);<z>
{<z>
p.getName())) {<z>
);<z>
subProtocol : subNames) {<z>
middleProtocols.contains(subProtocol)) {<z>
.add(subProtocol);<z>
else {<z>
.getName())) {<z>
;<z>
(bottomProtocols);<z>
.removeAll(middleProtocols);<z>
(DatabaseException e) {<z>
();<z>
JQueryTreeViewElement(<z>
" ", "_"), "", null);<z>
());<z>
;<z>
{<z>
,<z>
(), protocolsTree, db,<z>
foundInputToken);<z>
} else {<z>
(topProtocols, protocolsTree.getName(),<z>
;<z>
getChildren();<z>
protocolsTree.getName());<z>
"Questionnaire"));<z>
= false;<z>
{<z>
getName())){<z>
freshTree = true;<z>
{<z>
);<z>
} else {<z>
);<z>
"</h4>" ) ;<z>
.setError("There are no results to show. Please, redifine your search or import some data.");<z>
Writer writer, final Object obj,<z>
{<z>
null)<z>
writer, this.missing);<z>
else if (obj instanceof String)<z>
) obj);<z>
instanceof List) {<z>
writer.write('(');<z>
();) {<z>
k.next(), reallyUseTokens);<z>
() && reallyUseTokens)<z>
(' ');<z>
')');<z>
} else if (obj instanceof Set) {<z>
writer.write('{');<z>
();) {<z>
.next(), reallyUseTokens);<z>
if (k.hasNext() && reallyUseTokens)<z>
' ');<z>
writer.write('}');<z>
static private void saveBlogs(){<z>
null;<z>
= conn.createStatement();<z>
;<z>
;<z>
i = 0;<z>
(new FileReader("res/expertblogs.txt"));<z>
!= null) {<z>
= str2.replaceAll("\r", "");<z>
= str2.replaceAll("\n", "");<z>
++;<z>
+ ",'" + str2 + "')");<z>
) {<z>
;<z>
+ " blogs");<z>
catch (SQLException ex){<z>
());<z>
;<z>
);<z>
) {<z>
input.length; i++) {<z>
% 0xFFF));<z>
);<z>
(int nbCam){<z>
Point2D[nbCam];<z>
= new Point2D[nbCam];<z>
i++){<z>
= new Point2D.Double();<z>
.Double();<z>
IOException<z>
OPEN_GROUP);<z>
LIST_TABLE);<z>
.outputDebugLinebreak(result);<z>
i++) {<z>
RtfPictureList)picturelists.get(i);<z>
writeDefinition(result);<z>
.document.outputDebugLinebreak(result);<z>
size(); i++) {<z>
RtfList)lists.get(i);<z>
(document.getRandomInt());<z>
);<z>
);<z>
CLOSE_GROUP);<z>
outputDebugLinebreak(result);<z>
OPEN_GROUP);<z>
result.write(LIST_OVERRIDE_TABLE);<z>
outputDebugLinebreak(result);<z>
; i++) {<z>
);<z>
LIST_OVERRIDE);<z>
.LIST_ID);<z>
)).getID() ));<z>
.write(LIST_OVERRIDE_COUNT);<z>
.write(intToByteArray(0));<z>
result.write(RtfList.LIST_NUMBER);<z>
i)).getListNumber()) );<z>
);<z>
outputDebugLinebreak(result);<z>
(CLOSE_GROUP);<z>
this.document.outputDebugLinebreak(result);<z>
) {<z>
;<z>
);<z>
(colorNone);<z>
.setEmission(colorNone);<z>
minShine);<z>
String task) throws CoreException {<z>
5);<z>
.getFileStore(path);<z>
);<z>
exists()) {<z>
new HashSet(64);<z>
);<z>
size() == proxies.length)<z>
1), task);<z>
getChild(RefactoringHistoryService.NAME_HISTORY_FILE);<z>
{<z>
= null;<z>
Document document= null;<z>
1, SubProgressMonitor.SUPPRESS_SUBTASK_LABEL)));<z>
= getCachedDocument(path, input);<z>
ParserConfigurationException exception) {<z>
throw createCoreException(exception);<z>
(IOException exception) {<z>
);<z>
) {<z>
throw createCoreException(exception);<z>
} finally {<z>
null) {<z>
input.close();<z>
} catch (IOException exception) {<z>
(proxies.length);<z>
.ELEMENT_REFACTORING);<z>
.getLength();<z>
0; offset < length; offset++) {<z>
list.item(offset);<z>
final NamedNodeMap attributes= node.getAttributes();<z>
(attributes != null) {<z>
.getNamedItem(IRefactoringSerializationConstants.ATTRIBUTE_STAMP);<z>
item != null) {<z>
;<z>
{<z>
current++) {<z>
proxy= proxies[current];<z>
= proxy.getTimeStamp();<z>
)) {<z>
.getProject(), stamp));<z>
;<z>
) {<z>
();<z>
node);<z>
;<z>
task);<z>
IOException exception) {<z>
exception);<z>
} finally {<z>
();<z>
) throws GameException {<z>
isComplete()) {<z>
new GameException("Word already complete!");<z>
== l.getLetter()) {<z>
.index++;<z>
{<z>
("Bad letter!");<z>
getAccountId(final Request inRequest)<z>
accountId;<z>
inRequest) != null)<z>
inRequest);<z>
.getAttributes().get("accountidFromUrl");<z>
;<z>
data)<z>
build();<z>
);<z>
() {<z>
GRID);<z>
());<z>
setDescription("Call chains offer ways to obtain objects of the requested type by calling multiple methods in a row. "<z>
"Since those chains can become long and time-consuming to search, the following options allow to limit the proposals.");<z>
private void uninstallSemanticHighlighting() {<z>
fSemanticManager != null) {<z>
fSemanticManager.uninstall();<z>
null;<z>
clazz)<z>
throws SQLException {<z>
null;<z>
monster, Player leader)<z>
= 0;<z>
).getRank())<z>
case HERO:<z>
).getHpGauge())<z>
:<z>
;<z>
;<z>
!= null)<z>
).getRace().getRaceId())<z>
22:<z>
pointsReward = 12;<z>
:<z>
pointsReward = 18;<z>
:<z>
;<z>
case 8:<z>
:<z>
24:<z>
30;<z>
pointsReward = 11;<z>
= 11;<z>
== 700520)<z>
pointsReward = 48;<z>
.getTemplateId() == 700518<z>
() == 700558)<z>
;<z>
).getTemplateId() == 214841<z>
() == 215431)<z>
pointsReward = 162;<z>
() == 214842<z>
.getTemplateId() == 215429<z>
().getTemplateId() == 215430<z>
getTemplateId() == 215432)<z>
= 186;<z>
.getObjectTemplate().getTemplateId() == 214871<z>
getTemplateId() == 215386<z>
== 215428)<z>
= 204;<z>
.getTemplateId() == 214849<z>
getTemplateId() == 214850<z>
().getTemplateId() == 214851)<z>
318;<z>
== 214895<z>
().getTemplateId() == 214896<z>
.getTemplateId() == 214897)<z>
372;<z>
getObjectTemplate().getTemplateId() == 214843)<z>
pointsReward = 456;<z>
).getTemplateId() == 214864<z>
) == 214880<z>
().getTemplateId() == 214894<z>
) == 215387<z>
().getTemplateId() == 215388<z>
) == 215389)<z>
= 786;<z>
)<z>
954;<z>
)<z>
);<z>
return pointsReward;<z>
PhaseEvent event)<z>
);<z>
false;<z>
)<z>
beforeRestoreView(facesContext);<z>
.isApplicationContextActive() )<z>
);<z>
true;<z>
);<z>
(event.getPhaseId() == RENDER_RESPONSE)<z>
if (notInitialised)<z>
);<z>
());<z>
ViewerCell getSelection(ViewerCell index) {<z>
if (index == null){<z>
fRow == null) {<z>
().getItem(0));<z>
fRow.getCell(0);<z>
;<z>
process() {<z>
.getServiceResources();<z>
FINER)) {<z>
), resources.length));<z>
: resources)<z>
);<z>
throws IOException {<z>
InputStreamReader(new BufferedInputStream(in)));<z>
().split(sep);<z>
);<z>
boolean done = false;<z>
while (!done) {<z>
.readLine();<z>
null) {<z>
done = true;<z>
{<z>
(sep);<z>
new LinkedHashMap<String, Object>();<z>
++) {<z>
parts[i]);<z>
add(row);<z>
return new WrapperCSV(rows);<z>
finally {<z>
();<z>
PDDocument document ) throws IOException<z>
getDocumentInformation();<z>
.getDocumentCatalog();<z>
;<z>
() );<z>
.getTitle() );<z>
+ info.getAuthor() );<z>
);<z>
( "Keywords=" + info.getKeywords() );<z>
() );<z>
;<z>
.getCreationDate() ) );<z>
getModificationDate() ) );<z>
getTrapped() );<z>
( metadata != null )<z>
( "Metadata=" + metadata.getInputStreamAsString() );<z>
void onPostExecute(Void result)<z>
(result);<z>
();<z>
dialog.isShowing())<z>
dialog.dismiss();<z>
()<z>
;<z>
("unused") ArrayList nodeArrayList2 = pop();<z>
nodeArrayList1 = pop();<z>
pnonvoidtypeNode1;<z>
;<z>
);<z>
TIdentifier)nodeArrayList1.get(0);<z>
;<z>
;<z>
if(listNode3 != null)<z>
;<z>
listNode4);<z>
pnonvoidtypeNode1);<z>
;<z>
String exportFormat, OutputStream outputStream) throws IOException,<z>
equals(exportFormat)) {<z>
"The given export format of " + exportFormat + " is not supported by the EDocLite XML Exporter!");<z>
= buildExportDataSet(dataObjectClass, dataObjects);<z>
getXmlExporterService().export(dataSet));<z>
();<z>
) {<z>
playerName);<z>
p == null)<z>
);<z>
);<z>
" fly=" + flySpeed);<z>
String verliezer, int score) {<z>
(source);<z>
.winnaar = winnaar;<z>
this.verliezer = verliezer;<z>
.score = score;<z>
, int column, double xDec,<z>
RenderInfo ri)<z>
++;<z>
column++;<z>
3;<z>
int bottomLeft = row * numVerticesPerEdge + column;<z>
;<z>
numVerticesPerEdge * 3;<z>
get(bottomLeft), ri.vertices<z>
;<z>
vertices<z>
get(bottomLeft + 5));<z>
bottomLeft += numVertsTimesThree;<z>
vertices.get(bottomLeft), ri.vertices<z>
);<z>
3), ri.vertices<z>
));<z>
tL, xDec, yDec);<z>
) throws Exception<z>
;<z>
return Environment.nil;<z>
String getSetterFieldName(String fieldName) {<z>
StringBuilder();<z>
.length() > 1 : "fieldName must be longer than 1 character!";<z>
append("set");<z>
).toUpperCase());<z>
;<z>
;<z>
throws Exception {<z>
= null;<z>
)) {<z>
).equalsIgnoreCase(value)) {<z>
type = currType;<z>
(type == null)<z>
+ value + "'",<z>
;<z>
GT2dGridIn3dCrs)<z>
("GeoServer does not support type " + type.name(),<z>
;<z>
getXmlConstant();<z>
public boolean include(AbstractElement element)<z>
true;<z>
element != null)<z>
this.getFilters())<z>
include(element) == false)<z>
result = false;<z>
;<z>
MBMailingList addMailingList(<z>
emailAddress,<z>
inServerPort,<z>
inPassword,<z>
boolean outCustom,<z>
,<z>
outPassword, boolean allowAnonymous,<z>
ServiceContext serviceContext)<z>
{<z>
= userPersistence.findByPrimaryKey(userId);<z>
;<z>
outEmailAddress, outCustom,<z>
);<z>
long mailingListId = counterLocalService.increment();<z>
= mbMailingListPersistence.create(<z>
;<z>
());<z>
mailingList.setGroupId(groupId);<z>
getCompanyId());<z>
(user.getUserId());<z>
user.getFullName());<z>
.getCreateDate(now));<z>
);<z>
mailingList.setCategoryId(categoryId);<z>
;<z>
inUseSSL ? inProtocol + "s" : inProtocol);<z>
(inServerName);<z>
.setInServerPort(inServerPort);<z>
setInUseSSL(inUseSSL);<z>
);<z>
setInPassword(inPassword);<z>
setInReadInterval(inReadInterval);<z>
outEmailAddress);<z>
;<z>
outServerName);<z>
.setOutServerPort(outServerPort);<z>
(outUseSSL);<z>
mailingList.setOutUserName(outUserName);<z>
;<z>
.setAllowAnonymous(allowAnonymous);<z>
active);<z>
;<z>
) {<z>
mailingList);<z>
return mailingList;<z>
output)<z>
java.io.IOException {<z>
.GeneratedMessage.ExtendableMessage<z>
extensionWriter = newExtensionWriter();<z>
)) {<z>
;<z>
extensionWriter.writeUntil(536870912, output);<z>
;<z>
obj) {<z>
) {<z>
true;<z>
if (obj == null) {<z>
false;<z>
.getClass()) {<z>
;<z>
AstScript) obj;<z>
)) {<z>
false;<z>
return true;<z>
{<z>
= HBaseConfiguration.create();<z>
MiniZooKeeperCluster(conf);<z>
"/"<z>
.currentTimeMillis())));<z>
,<z>
;<z>
set("hbase.rootdir", hbaseRootDir);<z>
, "lo");<z>
set("hbase.regionserver.dns.interface", "lo");<z>
LocalHBaseCluster(conf, 1, 1);<z>
startup();<z>
ex) {<z>
());<z>
public void announceFromTwitStreetGame(String message) {<z>
"";<z>
twitstreetGame != null) {<z>
;<z>
} catch (TwitterException e) {<z>
, e);<z>
else {<z>
);<z>
close_connection() throws SeException{<z>
);<z>
path)<z>
())<z>
+ ")");<z>
")");<z>
= null;<z>
=<z>
DocumentBuilderFactory.newInstance();<z>
true);<z>
new ClassPathResource(path);<z>
();<z>
;<z>
(inputStream);<z>
(ParserConfigurationException e)<z>
;<z>
)<z>
(e.getMessage(), e);<z>
e)<z>
e);<z>
return document;<z>
public void completeRequest(boolean passed) {<z>
;<z>
{<z>
();<z>
) {<z>
= getMenuInflater();<z>
layout.controller_menu, menu);<z>
return true;<z>
{<z>
if (getBackupOps() == null) return;<z>
= getBackupOps().iterator();<z>
)) {<z>
();<z>
();<z>
));<z>
it.remove();<z>
ScanController openCompiledScan(boolean hold, int open_mode,<z>
,<z>
FormatableBitSet scanColumnList,<z>
] startKeyValue, int startSearchOperator,<z>
, DataValueDescriptor[] stopKeyValue,<z>
, StaticCompiledOpenConglomInfo static_info,<z>
DynamicCompiledOpenConglomInfo dynamic_info)<z>
StandardException {<z>
null;<z>
public void addLight(int i) {<z>
) >= i) {<z>
.size() == 0)<z>
());<z>
(0).clone());<z>
, boolean dropanno) {<z>
.isIgnored()) {<z>
null;<z>
} else {<z>
Map comptoclas = new HashMap();<z>
InsertionOrderedSet refcomps = new InsertionOrderedSet();<z>
refcomps.add(grpcomp);<z>
uritoprefix = new HashMap();<z>
(grpcomp instanceof INamed) {<z>
).getQName();<z>
instanceof IReference) {<z>
(IReference)grpcomp).getRef();<z>
getUri() != null) {<z>
), qname.getPrefix());<z>
(group, comptoclas, refcomps, uritoprefix);<z>
prefset = new UniqueNameSet();<z>
m_schemaPrefix);<z>
hasNext();) {<z>
(String)iter.next();<z>
)) {<z>
(String)uritoprefix.get(uri);<z>
null) {<z>
prefix = prefset.add(prefix);<z>
uritoprefix.put(uri, prefix);<z>
new StringWriter();<z>
size();<z>
[count]);<z>
= xmlwriter.getNamespaceCount();<z>
xmlwriter.pushExtensionNamespaces(uris);<z>
= count;<z>
containsKey(null)) {<z>
prefixes = new String[length];<z>
0;<z>
< count; i++) {<z>
uris[i];<z>
) {<z>
uritoprefix.get(uris[i]);<z>
[fill] = base+fill;<z>
++;<z>
prefixes[fill] = m_schemaPrefix;<z>
indexes[fill] = m_schemaIndex;<z>
group.getGenerateClass().getFullName();<z>
iter.hasNext();) {<z>
COMMENT_LEAD_TEXT);<z>
true;<z>
next();<z>
jter.hasNext();) {<z>
next();<z>
uri);<z>
, dropanno, ref,<z>
, visitor);<z>
= strwriter.toString();<z>
text.length() / 4);<z>
) >= 0) {<z>
, text, buff);<z>
= buff.toString();<z>
+ text.length() / 4);<z>
"Schema fragment(s) for this class:");<z>
(COMMENT_LEAD_TEXT);<z>
(COMMENT_LEAD_TEXT);<z>
"&lt;", text, buff);<z>
(COMMENT_LEAD_TEXT);<z>
"</pre>");<z>
.length();<z>
2, "* /");<z>
toString();<z>
process(String dir, String db) {<z>
(dir, db, true);<z>
== 0) {<z>
);<z>
{<z>
.SUFFIX_PAGE_FILE)) {<z>
fileName);<z>
{<z>
);<z>
;<z>
{<z>
null)<z>
= NULL_KEY;<z>
= key.hashCode() & _mask;<z>
) {<z>
= null;<z>
null; item = item._next) {<z>
item._key;<z>
.equals(key)) {<z>
;<z>
(prev != null)<z>
= item._next;<z>
= item._next;<z>
--;<z>
oldValue;<z>
;<z>
NULL;<z>
void showPopup(MouseEvent evt)<z>
getPoint();<z>
);<z>
p, wrapper);<z>
.this.showPopup(table, p);<z>
idSessao, String idSolicitacao) throws InstanceNotFoundException, InvalidAttributeValueException {<z>
idSolicitacao);<z>
solicitacao == null)<z>
;<z>
.getIdSessao());<z>
(solicitacao.getIdCarona());<z>
carona);<z>
.equals(idSessao)) {<z>
carona.preencheVagas();<z>
.removerSolicitacoesPendentes(solicitacao);<z>
.addSolicitacoesConfirmadas(solicitacao);<z>
throw new InstanceNotFoundException("Solicitação inexistente");<z>
void onBackPressed() {<z>
) {<z>
donlodTaskCommuns.cancel(true);<z>
; adapter2 = null; customAdapterCommun = null;<z>
null || ChangeCity.donlodTaskCommuns != null) {<z>
cancel(true);<z>
= null;<z>
;<z>
("city_id", cityId);<z>
cityName);<z>
putString("country_name", countryName);<z>
);<z>
.onBackPressed();<z>
makeTaskAttemptID(TaskType taskType, int taskNumber,<z>
) {<z>
(job.getJobID()),<z>
== taskType, taskNumber), taskAttemptNumber);<z>
) {<z>
Assert.isNotNull(resourceModule);<z>
.SOURCE)) {<z>
.REMOVED);<z>
{<z>
);<z>
BINARY)) {<z>
(resource, resourceModule, ChangeAction.REMOVED);<z>
{<z>
type, resourceModule, ChangeAction.REMOVED);<z>
);<z>
() {<z>
) {<z>
StringPool.BLANK;<z>
_protocol;<z>
public void kNumericSubtract8() {<z>
XQuery query = new XQuery(<z>
;<z>
final QT3Result res = result(query);<z>
= res;<z>
true)<z>
areSameParameterTypes(PsiClassType type1, PsiClassType type2) {<z>
.ClassResolveResult resolveResult1 = type1.resolveGenerics();<z>
resolveGenerics();<z>
.getElement();<z>
.getElement();<z>
&&<z>
null &&<z>
&&<z>
resolveResult2.getSubstitutor());<z>
) {<z>
- firstIndex)) {<z>
+ location]++;<z>
} else {<z>
("" + location);<z>
input) {<z>
= fac.createOMElement("input", synNS);<z>
{<z>
"type", nullNS,<z>
);<z>
.getSubInputs()) {<z>
addChild(serializeInput(innerInput));<z>
} else {<z>
) {<z>
;<z>
.createOMAttribute("name", nullNS,<z>
()));<z>
if (null == input.getSourceXPath()<z>
{<z>
handleException(String.format(<z>
input<z>
.getName()));<z>
) {<z>
(),<z>
;<z>
(null != input.getSourceValue()) {<z>
(<z>
input.getSourceValue()));<z>
parameterElem;<z>
(final ActionEvent e) {<z>
, "Select a color", color);<z>
if (choice == null) return;<z>
;<z>
;<z>
refreshWidget();<z>
int columnNumber)<z>
];<z>
public boolean equals(Object obj) {<z>
{<z>
return true;<z>
instanceof Game)) {<z>
return false;<z>
Game) obj;<z>
))<z>
()).isEquals();<z>
TriangulationDeviceContext context) {<z>
ctxt = context.getOwner();<z>
.hasEnoughData()) {<z>
()).Exit(context);<z>
);<z>
.Entry(context);<z>
} else {<z>
);<z>
equals(Object object) {<z>
null) {<z>
return false;<z>
instanceof WorkItem) {<z>
object).id == id;<z>
else {<z>
false;<z>
) {<z>
null) {<z>
.getConfig(bufImg);<z>
return graphicsConfig;<z>
setNodeId(long nodeId) {<z>
= -1L;<z>
if (!_setOriginalNodeId) {<z>
= true;<z>
_nodeId;<z>
;<z>
{<z>
);<z>
} catch (MalformedURLException e) {<z>
)<z>
.getMessage() + ")");<z>
(int featureID) {<z>
) {<z>
case Ows10Package.GET_CAPABILITIES_TYPE__ACCEPT_VERSIONS:<z>
;<z>
.GET_CAPABILITIES_TYPE__SECTIONS:<z>
return sections != null;<z>
.GET_CAPABILITIES_TYPE__ACCEPT_FORMATS:<z>
null;<z>
:<z>
.equals(updateSequence);<z>
Ows10Package.GET_CAPABILITIES_TYPE__BASE_URL:<z>
(baseUrl);<z>
:<z>
: !NAMESPACE_EDEFAULT.equals(namespace);<z>
.GET_CAPABILITIES_TYPE__EXTENDED_PROPERTIES:<z>
extendedProperties);<z>
eIsSet(featureID);<z>
printCoefficients(){<z>
{<z>
;<z>
j<coeffs.length; j++)<z>
factorsIndex[j]);<z>
System.out.println("There is no coefficients to print (coeffs=null).");<z>
public List<UserInfo> getUsers() {<z>
);<z>
re) {<z>
>();<z>
, UserInfo.FLAG_ADMIN | UserInfo.FLAG_PRIMARY);<z>
);<z>
;<z>
boolean offerLast(E e) {<z>
e);<z>
;<z>
;<z>
{<z>
listElement.clear();<z>
offerLast(newElement);<z>
put(e, newElement);<z>
hasData;<z>
private static boolean onMenubar(MenuItem menuItem) {<z>
menuItem.getParent();<z>
();<z>
if (parentItem != null) {<z>
(parentItem);<z>
= parent.getShell();<z>
== theShell.getMenuBar();<z>
GameManager manager) {<z>
|| port < 0)<z>
throw new IllegalArgumentException();<z>
;<z>
(port);<z>
start();<z>
} catch (IOException e) {<z>
printStackTrace();<z>
show(boolean isVisible) {<z>
isVisible = isVisible;<z>
if (isVisible) {<z>
getStyle().clearDisplay();<z>
"-");<z>
} else {<z>
Display.NONE);<z>
setText("+");<z>
() throws Exception {<z>
== null) {<z>
());<z>
().toURL());<z>
());<z>
c) {<z>
if (val instanceof Const)<z>
val, c);<z>
(PCPath) val, c);<z>
, Random random, StructureBoundingBox structureboundingbox, int j)<z>
);<z>
= j;<z>
;<z>
));<z>
id) {<z>
GLOBAL_ACTIVITY_TEST_LOCK) {<z>
return super.getFieldValues(reader, id);<z>
IMethod findAction(Route route, IScriptProject project) {<z>
;<z>
vPath.isValid())<z>
null;<z>
;<z>
, project);<z>
controllers == null) {<z>
= "Unable to find bundle controllers ";<z>
vPath != null)<z>
();<z>
if (project != null) {<z>
.getElementName();<z>
(msg);<z>
;<z>
.getController() + "Controller";<z>
t : controllers) {<z>
) {<z>
;<z>
{<z>
;<z>
.getTemplate() + "Action");<z>
)<z>
return method;<z>
.getMethod(vPath.getTemplate());<z>
)<z>
= blocksList[par0];<z>
)<z>
false;<z>
();<z>
(NodeName nodeName, String name,<z>
throws IOTException {<z>
.getNode(nodeName);<z>
null) {<z>
);<z>
return null;<z>
;<z>
nodeInformation.addConsumer(endpoint);<z>
;<z>
MVELPredicateExpression(final Serializable expr,<z>
final DroolsMVELFactory factory,<z>
{<z>
;<z>
.prototype = factory;<z>
;<z>
void setScope(Group scope, int index) {<z>
ArrayList removeScopeList = new ArrayList();<z>
);<z>
scopeInfo = new Object[3];<z>
GroupRetained group = scopes.get(index);<z>
;<z>
);<z>
;<z>
index);<z>
);<z>
);<z>
0] = addScopeList;<z>
scopeInfo[1] = removeScopeList;<z>
TRUE:Boolean.FALSE);<z>
, scopeInfo);<z>
{<z>
NETWORK_STATUS_VERSION)<z>
;<z>
= fieldParser.parseInteger();<z>
(documentVersion != CURRENT_DOCUMENT_VERSION)<z>
TorParsingException("Unexpected consensus document version number: " + documentVersion);<z>
isFirstLine = false;<z>
index, MultiRectArea dst) {<z>
i += 4) {<z>
int x21 = rect[i + 0];<z>
int y21 = rect[i + 1];<z>
x22 = rect[i + 2];<z>
3];<z>
<= y22 && y12 >= y21) {<z>
int top, bottom;<z>
y11 < y21) {<z>
, rect, i + 4, dst);<z>
;<z>
} else {<z>
= y11;<z>
if (y12 > y22) {<z>
rect, i + 4, dst);<z>
y22;<z>
else {<z>
;<z>
< x21) {<z>
, i + 4, dst);<z>
x22) {<z>
rect, i + 4, dst);<z>
, y12);<z>
SourceSubstituteMacroNodesContext _context) {<z>
SNode>() {<z>
(SNode it) {<z>
);<z>
new ISelector<SNode, SNode>() {<z>
) {<z>
;<z>
});<z>
setAfter(int newAfter) {<z>
oldAfter = after;<z>
newAfter;<z>
))<z>
after));<z>
Object clone() {<z>
);<z>
());<z>
.setCategoryId(getCategoryId());<z>
setGroupId(getGroupId());<z>
assetCategoryImpl.setCompanyId(getCompanyId());<z>
assetCategoryImpl.setUserId(getUserId());<z>
.setUserName(getUserName());<z>
.setCreateDate(getCreateDate());<z>
));<z>
assetCategoryImpl.setParentCategoryId(getParentCategoryId());<z>
getLeftCategoryId());<z>
));<z>
.setName(getName());<z>
.setTitle(getTitle());<z>
(getDescription());<z>
(getVocabularyId());<z>
assetCategoryImpl.resetOriginalValues();<z>
assetCategoryImpl;<z>
private String print(Content c) {<z>
) {<z>
getAttributeValue("id");<z>
if (c instanceof Text) {<z>
(Text) c).getText();<z>
+ " unknown !!!";<z>
)<z>
{<z>
{<z>
(rightMarginColumn > 0) {<z>
);<z>
getFontMetrics().getHeight();<z>
);<z>
);<z>
, y, p0, p1);<z>
{<z>
, y, p0, p1);<z>
() {<z>
{<z>
cast(obj, ExtrinsicObjectType.class);<z>
extrinsic != null) {<z>
extrinsic.getId(), extrinsic);<z>
class);<z>
null) {<z>
objectRef.getId(), objectRef);<z>
= cast(obj, RegistryPackageType.class);<z>
if (regPackage != null) {<z>
regPackage.getId(), regPackage);<z>
, AssociationType1.class);<z>
if (association != null) {<z>
association.getId(), association);<z>
ClassificationType.class);<z>
!= null) {<z>
) {<z>
= (ObjectRefType) classification.getClassificationNode();<z>
(), node);<z>
point) {<z>
;<z>
getAllBases(ct, point);<z>
{<z>
base, point));<z>
class, fields);<z>
{<z>
== TelephonyManager.SIM_STATE_ABSENT) {<z>
;<z>
else {<z>
);<z>
);<z>
catch (final Exception e) {<z>
("SimCard.getSubscriberId() - Exception: "+e);<z>
;<z>
> getAllTopicsOfPublication(<z>
,<z>
String componentId) throws ImportExportException {<z>
NodePK> listNodePk =<z>
.model.NodePK>();<z>
"Useless", componentId);<z>
pubPK);<z>
ex) {<z>
ex);<z>
>(listNodePk);<z>
jgen, SerializerProvider prov)<z>
= get(bean);<z>
) {<z>
{<z>
;<z>
)) {<z>
ser = _serializer;<z>
== null) {<z>
cls = value.getClass();<z>
= _dynamicSerializers;<z>
);<z>
(ser == null) {<z>
cls, prov);<z>
)) {<z>
.writeFieldName(_name);<z>
) {<z>
.serialize(value, jgen, prov);<z>
} else {<z>
, _typeSerializer);<z>
getValidator() {<z>
{<z>
();<z>
;<z>
= localValidatorFactoryBean;<z>
this.validator;<z>
)<z>
ClientProtocolException, IOException {<z>
;<z>
();<z>
autoAcceptHeader ) {<z>
= contentType.toString();<z>
contentType instanceof ContentType )<z>
.getAcceptHeader();<z>
;<z>
) );<z>
getURI() == null)<z>
"Request URI cannot be null" );<z>
() );<z>
> headers = delegate.getHeaders();<z>
Object key : headers.keySet() ) {<z>
headers.get( key );<z>
) continue;<z>
() );<z>
, val.toString() );<z>
new HttpResponseDecorator(<z>
) ),<z>
), null );<z>
getStatusCode();<z>
= delegate.findResponseHandler( status );<z>
+ status + "; found handler: " + responseClosure );<z>
[] closureArgs = null;<z>
( responseClosure.getMaximumNumberOfParameters() ) {<z>
:<z>
resp };<z>
case 2 :<z>
;<z>
.getContentLength() == 0 )<z>
{ resp, null };<z>
;<z>
( Exception ex ) {<z>
entity.getContentType();<z>
getValue() : null;<z>
( "Error parsing '" + respContentType + "' response", ex );<z>
resp, ex );<z>
throw new IllegalArgumentException(<z>
;<z>
Object returnVal = responseClosure.call( closureArgs );<z>
"response handler result: " + returnVal );<z>
;<z>
();<z>
;<z>
Function(String name,<z>
dialect) {<z>
this.name = name;<z>
this.dialect = dialect;<z>
Exception<z>
);<z>
+ getBucketName() + "]\n");<z>
) != null)<z>
);<z>
());<z>
= null;<z>
;<z>
getPrefixName(), MAX_KEYS_PER_LIST);<z>
() != null)<z>
)<z>
marker = listEntry.getKey();<z>
listEntry.getKey());<z>
.isIsTruncated());<z>
(this.kBytesProcessed_ > 10000)<z>
));<z>
format("%.2fK transfered\n", this.kBytesProcessed_));<z>
value) {<z>
int blue = correctValue(value);<z>
getGreen(), blue);<z>
()<z>
this.style != null) {<z>
);<z>
.isShown = true;<z>
this.label != null) {<z>
();<z>
!= null) {<z>
this.background.showNotify();<z>
!= null) {<z>
.showNotify();<z>
if (this.view != null) {<z>
this.view.showNotify();<z>
null) {<z>
completeBackground.showNotify();<z>
) {<z>
showNotify();<z>
.isFocused && this._bbField != null) {<z>
.notifyFocusSet(this);<z>
(this._androidView != null) {<z>
this._androidView, this);<z>
(!this.hasBeenShownBefore) {<z>
EventManager.EVENT_SHOW_FIRST_TIME, this, null );<z>
hasBeenShownBefore = true;<z>
this, null );<z>
) {<z>
) {<z>
);<z>
return event;<z>
permissions)<z>
, RepositoryException {<z>
super.checkPermission(absPath, permissions);<z>
, int xNumCells, int yStart, int yStep,<z>
[] warpPositions) {<z>
null);<z>
= super.getWarp();<z>
;<z>
;<z>
xNumCells = xNumCells;<z>
this.yStart = yStart;<z>
this.yStep = yStep;<z>
.yNumCells = yNumCells;<z>
warpPositions = warpPositions;<z>
, StringBuffer s3) {<z>
;<z>
;<z>
append(s1);<z>
);<z>
{<z>
;<z>
new Image(dev, "img/exit.png");<z>
Image(dev, "img/play.png");<z>
e) {<z>
"Cannot load images");<z>
;<z>
1);<z>
new ToolBar(shell, SWT.BORDER);<z>
= new GridData();<z>
= GridData.FILL;<z>
;<z>
(gridData);<z>
SWT.PUSH);<z>
setImage(exitImg);<z>
SWT.PUSH);<z>
setImage(playImg);<z>
pack();<z>
.addSelectionListener(new SelectionAdapter() {<z>
void widgetSelected(SelectionEvent e) {<z>
exit(0);<z>
);<z>
new SelectionAdapter() {<z>
public void widgetSelected(SelectionEvent e) {<z>
RunAnimation();<z>
});<z>
findResourceExceptList(List<SecurityResource> securityResources) {<z>
> queryConfig = getQueryConfig();<z>
("name");<z>
securityResources.size() > 0) {<z>
()];<z>
securityResources.size(); i++)<z>
i).getId();<z>
("id", ids);<z>
(Logic.NAND);<z>
();<z>
vertexShaderFilename, String fragmentShaderFilename) {<z>
= new ArrayList<>();<z>
, vertexShaderFilename));<z>
.loadShader(GL_FRAGMENT_SHADER, fragmentShaderFilename));<z>
ProgramImposData();<z>
);<z>
(data.theProgram, "sphereRadius");<z>
.theProgram, "cameraSpherePos");<z>
theProgram, "Material");<z>
);<z>
, "Projection");<z>
(data.theProgram, materialBlock, materialBlockIndex);<z>
(data.theProgram, lightBlock, lightBlockIndex);<z>
(data.theProgram, projectionBlock, projectionBlockIndex);<z>
data;<z>
[] packageUnits, OMMonitor monitor)<z>
begin(packageUnits.length);<z>
: packageUnits)<z>
monitor.fork());<z>
.done();<z>
t) {<z>
null;<z>
{<z>
;<z>
t instanceof ClientException) {<z>
getCause();<z>
if (t instanceof Exception) {<z>
();<z>
(cause == null) {<z>
return t;<z>
{<z>
(cause);<z>
theX, final int theY) {<z>
, theName, theX, theY);<z>
, "", myController);<z>
;<z>
myController;<z>
{<z>
(version);<z>
();<z>
split) {<z>
, s));<z>
.toString();<z>
throws java.rmi.RemoteException {<z>
(super.cachedEndpoint == null) {<z>
NoEndPointException();<z>
= createCall();<z>
(_operations[20]);<z>
setUseSOAPAction(true);<z>
"http://localhost/mantis/api/soap/mantisconnect.php/mc_issue_set_tags");<z>
SOAP11_CONSTANTS);<z>
"http://futureware.biz/mantisconnect", "mc_issue_set_tags"));<z>
(_call);<z>
(_call);<z>
});<z>
{<z>
)_resp;<z>
extractAttachments(_call);<z>
Boolean) _resp).booleanValue();<z>
java.lang.Exception _exception) {<z>
class)).booleanValue();<z>
axisFaultException) {<z>
throw axisFaultException;<z>
setStatusBar(JComponent statusBar) {<z>
oldValue = this.statusBar;<z>
= statusBar;<z>
statusBar, BorderLayout.PAGE_END, STATUS_BAR_PROP);<z>
final void writeH(final int value)<z>
;<z>
(byte) (value & 0x000000FF);<z>
0x000000FF);<z>
obj) {<z>
obj;<z>
&& this.colIndex==indexPair.colIndex)<z>
return true;<z>
return false;<z>
IDSObject obj) {<z>
) == IDSConstants.TYPE_SERVICE) {<z>
;<z>
() == IDSConstants.TYPE_REFERENCE) {<z>
reference = (IDSReference) obj;<z>
() == null<z>
)<z>
);<z>
getName();<z>
{<z>
{<z>
new PointsPlot();<z>
, zbufferPixels, bufferWidth, bufferHeight);<z>
;<z>
points3D.length; i++) {<z>
) {<z>
.x -= xCenter;<z>
-= yCenter;<z>
points3D[i].z -= zCenter;<z>
);<z>
throws SVNException {<z>
DAVResource resource = getRequestedDAVResource(false, false);<z>
!resource.exists()) {<z>
(HttpServletResponse.SC_BAD_REQUEST, null);<z>
false);<z>
0) {<z>
invalidXMLRoot();<z>
, null);<z>
resource, false);<z>
= null;<z>
);<z>
} catch (DAVException dave) {<z>
, true, false, avInfo);<z>
(getURI()) },<z>
);<z>
isFailure = false;<z>
);<z>
getPropPatchRequest();<z>
= requestXMLObject.getRoot();<z>
);<z>
{<z>
) childrenIter.next();<z>
childElement.getName();<z>
REMOVE &&<z>
DAVPropPatchRequest.SET)) {<z>
;<z>
propChildrenElement == null) {<z>
avInfo);<z>
.logError(SVNLogType.NETWORK, "A \"prop\" element is missing inside the propertyupdate command.");<z>
(HttpServletResponse.SC_BAD_REQUEST);<z>
DAVPropPatchRequest.REMOVE;<z>
);<z>
propsIter.hasNext();) {<z>
= (DAVElementProperty) propsIter.next();<z>
= property.getName();<z>
);<z>
;<z>
.myProperty = property;<z>
);<z>
, propContext);<z>
.myError.getResponseCode() >= 300) {<z>
;<z>
propStatText = null;<z>
(propsProvider);<z>
true, false)) {<z>
true;<z>
isFailure) {<z>
propsProvider);<z>
properties, false, true);<z>
= getFailureMessage(properties);<z>
{<z>
getSuccessMessage(properties);<z>
false, avInfo);<z>
propResult = new DAVPropsResult();<z>
;<z>
(), null, propResult, 0);<z>
, getNamespaces());<z>
{<z>
.IO_ERROR.getCode());<z>
(JTable table, Object value,<z>
, int row, int column) {<z>
(table, value != null ? DateFormat<z>
, row,<z>
;<z>
value) {<z>
;<z>
(t == ConfigValueType.NUMBER) {<z>
value instanceof ConfigInt)<z>
return INT;<z>
value instanceof ConfigLong)<z>
return LONG;<z>
value instanceof ConfigDouble)<z>
;<z>
} else {<z>
st : values()) {<z>
configType == t)<z>
return st;<z>
value);<z>
Message message) throws Exception {<z>
{<z>
(message.getDestination());<z>
send(context, message, queueConsumers);<z>
(context, message);<z>
protected void addActions() {<z>
DEPLOYMENT_DELETE));<z>
DELETE);<z>
() {<z>
void buttonClick(ClickEvent event) {<z>
new DeleteDeploymentPopupWindow(deployment, parent));<z>
});<z>
.getToolBar().removeAllButtons();<z>
.addButton(deleteButton);<z>
throws RemoteException, ShellException<z>
readCurrentWorkingDir( session );<z>
current = getCurrent( session );<z>
getTypedId() );<z>
ShellException e )<z>
);<z>
( node ) );<z>
()<z>
if (!isWindowSet())<z>
.goToAWTThread(new Runnable()<z>
public void run()<z>
();<z>
;<z>
WoWHeadData data)<z>
values =<z>
.itemId+","<z>
itemClass+","<z>
+","<z>
+"' ,"<z>
","<z>
data.itemQuality+","<z>
buyprice+","<z>
sellPrice+","<z>
.inventoryType+","<z>
+","<z>
+","<z>
itemLevel+","<z>
","<z>
reqskill+","<z>
+data.reqskillrank+","<z>
data.maxCount+","<z>
containerSlots+", "<z>
.itemstatscount+", "<z>
)+<z>
+data.scaDist+","<z>
.scaFlag+","<z>
dmg_min1+","<z>
dmg_max1+","<z>
+data.dmg_type1+","<z>
+","<z>
data.dmg_max2+","<z>
+data.dmg_type2+","<z>
","<z>
+","<z>
data.fireRes+","<z>
data.naturRes+","<z>
data.frostRes+","<z>
+","<z>
.arcRes+","<z>
+","<z>
+","<z>
)+<z>
+","<z>
)+"' ,"<z>
","<z>
","<z>
","<z>
.socket_color2+","<z>
data.socket_color3+","<z>
data.socket_bonus+","<z>
reqDisentSkill;<z>
values;<z>
) {<z>
d==fd)<z>
(this);<z>
s);<z>
!=null)<z>
);<z>
, FudgeMsg msg) {<z>
= new ForwardSwapSecurity();<z>
.fromFudgeMsg(deserializer, msg, object);<z>
;<z>
(int silverObjectId, String sComponentId)<z>
throws PdcException {<z>
silverObjectId, sComponentId);<z>
if (list.isEmpty()) {<z>
null;<z>
list;<z>
public LegacyBundleContributorsAssembler(<z>
> bundleExtraContent, final StorageManager storageManager )<z>
= bundleExtraContent;<z>
this.storageManager = storageManager;<z>
RecognitionException {<z>
.backtracking==0 ) {<z>
;<z>
FollowSets000.FOLLOW_ruleID_in_entryRuleID2528);<z>
ruleID();<z>
--;<z>
failed) return ;<z>
( state.backtracking==0 ) {<z>
));<z>
if (state.failed) return ;<z>
catch (RecognitionException re) {<z>
;<z>
);<z>
) {<z>
();<z>
, 0.5f, 0.0f, 0.0f, 0.0f);<z>
);<z>
final void myBox_itemStateChanged(ItemEvent e) {<z>
setPropFlag) {<z>
fireTipiEvent("onStateChanged");<z>
getPropertyInfo(Properties list) {<z>
) {<z>
);<z>
"Flag to add the Zoom buttons");<z>
(AddZoomProperty + ScopedEditorProperty,<z>
"com.bbn.openmap.util.propertyEditor.YesNoPropertyEditor");<z>
;<z>
AddPanProperty + ScopedEditorProperty,<z>
;<z>
list.put(AddScaleProperty, "Flag to add the scale field");<z>
.put(AddScaleProperty + ScopedEditorProperty,<z>
"com.bbn.openmap.util.propertyEditor.YesNoPropertyEditor");<z>
;<z>
) {<z>
;<z>
.isVisible("id=selectQuestionsDiv")) {<z>
"name=addQuestionFlag", "change");<z>
setSection(section);<z>
selectSectionQuestions(questions);<z>
;<z>
);<z>
sourceName, int line, String lineSource,<z>
{<z>
&& lineOffset == 0)) {<z>
(PREFIX + message);<z>
{<z>
, lineOffset, message);<z>
boolean receiveAuthenticationResult() throws IOException {<z>
();<z>
Element root = doc.getDocumentElement();<z>
) return false;<z>
("type").equalsIgnoreCase("auth-response"))<z>
;<z>
);<z>
= null;<z>
();i++) {<z>
nl.item(i);<z>
).equalsIgnoreCase("authentication")) {<z>
authresult = (Element) n;<z>
).equalsIgnoreCase("ok");<z>
(Exception e) {<z>
.printStackTrace();<z>
false;<z>
> itemPKs) {<z>
Log.i(TAG, "uncreating list");<z>
= id;<z>
currItemPKs = itemPKs;<z>
DoCustomListTask task = new DoCustomListTask();<z>
.execute(UNCREATE_LIST);<z>
(){<z>
|| restarting);<z>
_restart)<z>
true;<z>
;<z>
List<FinalizableCommand> commandsList) {<z>
final CommandProcessor commandProcessor = myWindowManager.getCommandProcessor();<z>
.createSetEditorComponentCmd(component, commandProcessor);<z>
;<z>
.tr.topo.Location loc) {<z>
= 0;<z>
get(loc)) {<z>
RADIUS);<z>
e) {<z>
e.printStackTrace();<z>
);<z>
i++;<z>
void rule__UnnamedEnumerationType__Group__0__Impl() throws RecognitionException {<z>
= keepStackSize();<z>
.getUnnamedEnumerationTypeAccess().getEnumerationKeyword_0());<z>
,KEYWORD_94,FollowSets009.FOLLOW_KEYWORD_94_in_rule__UnnamedEnumerationType__Group__0__Impl210675);<z>
;<z>
re) {<z>
;<z>
input,re);<z>
stackSize);<z>
) {<z>
== fAnyType)<z>
return derived == base;<z>
== SchemaGrammar.fAnySimpleType) {<z>
== fAnyType ||<z>
.fAnySimpleType);<z>
XSTypeDefinition.SIMPLE_TYPE) {<z>
{<z>
)<z>
;<z>
;<z>
checkSimpleDerivation((XSSimpleType)derived,<z>
;<z>
)derived, base, block);<z>
,<z>
StreamConsumer systemOut,<z>
systemErr,<z>
int timeoutInSeconds )<z>
cl == null )<z>
( "cl cannot be null." );<z>
= cl.execute();<z>
final StreamFeeder inputFeeder = systemIn != null ?<z>
: null;<z>
, systemOut );<z>
.getErrorStream(), systemErr );<z>
if ( inputFeeder != null )<z>
inputFeeder.start();<z>
);<z>
;<z>
ProcessHook( p );<z>
.addShutDownHook( processHook );<z>
new CommandLineCallable()<z>
call()<z>
returnValue;<z>
( timeoutInSeconds <= 0 )<z>
);<z>
System.currentTimeMillis();<z>
timeoutInMillis = 1000L * timeoutInSeconds;<z>
;<z>
() < finish ) )<z>
( 10 );<z>
p ) )<z>
+ " seconds" );<z>
= p.exitValue();<z>
errorPumper );<z>
getException() != null )<z>
() );<z>
)<z>
( "Error inside systemErr parser", errorPumper.getException() );<z>
;<z>
( InterruptedException ex )<z>
!= null )<z>
;<z>
();<z>
();<z>
, ex );<z>
.removeShutdownHook( processHook );<z>
);<z>
!= null )<z>
.close();<z>
;<z>
);<z>
addFixedChild(EditPart childEditPart) {<z>
if(childEditPart instanceof SendObjectActionNameEditPart) {<z>
.getNameLabel());<z>
true;<z>
instanceof ValuePinInSendObjActAsReqEditPart) {<z>
, PositionConstants.WEST);<z>
childEditPart).getFigure(), locator);<z>
true;<z>
{<z>
PositionConstants.WEST);<z>
;<z>
;<z>
(childEditPart instanceof InputPinInSendObjActAsReqEditPart) {<z>
;<z>
childEditPart).getFigure(), locator);<z>
;<z>
childEditPart instanceof ValuePinInSendObjActAsTargetEditPart) {<z>
);<z>
.getFigure(), locator);<z>
true;<z>
{<z>
.NORTH);<z>
), locator);<z>
;<z>
InputPinInSendObjActAsTargetEditPart) {<z>
, PositionConstants.NORTH);<z>
.getFigure(), locator);<z>
true;<z>
false;<z>
(String itemTypeID, int quantity) {<z>
getItemType(itemTypeID);<z>
, player, itemType, container_buy, quantity);<z>
.shop_item_bought, itemType.name);<z>
;<z>
public State getCurrentState()<z>
))<z>
.CHECKED;<z>
))<z>
.UNCHECKED;<z>
PARTIAL;<z>
String rend)<z>
, rend);<z>
;<z>
Console> toSetOfConsole(Object object) {<z>
object == null) {<z>
;<z>
]) object;<z>
result = new LinkedHashSet<Console>();<z>
(Object item: items) {<z>
item);<z>
.add(typed);<z>
return result;<z>
) {<z>
.AS_PUSH_BUTTON) {<z>
{<z>
();<z>
FilteredTree_clear);<z>
getImageRegistry()<z>
;<z>
(JFaceResources<z>
);<z>
);<z>
public MetricToJsonVisitor(OutputStream os) throws IOException {<z>
();<z>
.createJsonGenerator(os);<z>
;<z>
MenuItem item) {<z>
item.getItemId();<z>
switch (itemId) {<z>
:<z>
))) {<z>
(getFrameSplitterRunnable(mMediaItemInternalId));<z>
text_view)).setText("");<z>
else {<z>
.this, R.string.split_text_add_content);<z>
;<z>
R.id.menu_previous_frame:<z>
id.menu_next_frame:<z>
itemId, true);<z>
return true;<z>
onOptionsItemSelected(item);<z>
,<z>
String provider) throws NoSuchAlgorithmException,<z>
) {<z>
new IllegalArgumentException(<z>
("security.02"));<z>
= Security.getProvider(provider);<z>
) {<z>
);<z>
(algorithm, impProvider);<z>
CDOBranch branch, long created)<z>
getID();<z>
),<z>
(getObjectContainer(), id));<z>
revision.copy();<z>
newRevision.adjustForCommit(branch, created);<z>
);<z>
);<z>
String line) {<z>
line==null) return null;<z>
();<z>
) return null;<z>
(line);<z>
com.matches()) {<z>
;<z>
;<z>
SpecSyntax.SCAN_LINE.matcher(line);<z>
)) return null;<z>
newScan = false;<z>
null) {<z>
(previousLine);<z>
)) {<z>
;<z>
(getScanName());<z>
(header);<z>
(newScan, scan);<z>
;<z>
WebloggerException {<z>
);<z>
(1, user.getUserName());<z>
roles = q.getResultList();<z>
new ArrayList<String>();<z>
); it.hasNext();) {<z>
;<z>
());<z>
roleNames;<z>
) {<z>
lights;<z>
;<z>
getResources().getInteger(<z>
internal.R.integer.config_notificationsBatteryLowARGB);<z>
getResources().getInteger(<z>
integer.config_notificationsBatteryMediumARGB);<z>
getInteger(<z>
.internal.R.integer.config_notificationsBatteryFullARGB);<z>
getResources().getInteger(<z>
internal.R.integer.config_notificationsBatteryLedOn);<z>
getInteger(<z>
internal.R.integer.config_notificationsBatteryLedOff);<z>
create(Operator op) {<z>
operatorContext = getOperatorContext(op);<z>
.getTargetProduct();<z>
;<z>
();<z>
int rasterWidth = targetProduct.getSceneRasterWidth();<z>
rasterHeight);<z>
width);<z>
(double) tileSize.height);<z>
);<z>
images = createImages(targetBands, operatorContext);<z>
, tileCountY);<z>
Builder clear() {<z>
{<z>
new IllegalStateException(<z>
;<z>
();<z>
this;<z>
{<z>
String>();<z>
applicableProducts = this.adminServiceFacade.retrieveLoanProductsNotMixed();<z>
product : applicableProducts) {<z>
());<z>
);<z>
Extension> extensions)<z>
: extensions)<z>
IdentifierExtension)extension;<z>
;<z>
> propertyChainToMap(<z>
chain )<z>
chain == null )<z>
;<z>
, PropertyData>(<z>
;<z>
)<z>
.getPropertyBlocks() )<z>
propBlock.getKeyIndexId(),<z>
) );<z>
propertyMap;<z>
Color initialColor)<z>
{<z>
;<z>
() {<z>
actionPerformed(ActionEvent e) {<z>
= colorChooser.getColor();<z>
cancelListener = new ActionListener() {<z>
{<z>
;<z>
;<z>
resultColor;<z>
(String option, boolean dftValue)<z>
;<z>
null)<z>
return dftValue;<z>
if (value instanceof Boolean)<z>
value;<z>
toString());<z>
VelocityPreferencePage()<z>
super(FieldEditorPreferencePage.GRID);<z>
.getDefault().getPreferenceStore());<z>
"description"));<z>
startPos, final long loopSize, final T mn,<z>
)<z>
);<z>
();<z>
;<z>
set(cursor.get());<z>
;<z>
cursor.jumpFwd(startPos);<z>
);<z>
) {<z>
;<z>
;<z>
, value) == value) {<z>
value);<z>
max(mx, value) == value) {<z>
);<z>
= value.getRealDouble();<z>
, k);<z>
]++;<z>
void createNewTD()<z>
currentTD = new TD();<z>
( currentTD );<z>
updateText() {<z>
.equals(getText())) {<z>
.getCaretPosition();<z>
setText(getText());<z>
text.setSelection(pos, pos);<z>
close() throws IOException {<z>
()){<z>
AccessController.doPrivileged(<z>
new PrivilegedExceptionAction<Void>(){<z>
public Void run() throws IOException{<z>
;<z>
;<z>
);<z>
} catch(PrivilegedActionException pae){<z>
e = pae.getException();<z>
{<z>
(IOException)e;<z>
} else {<z>
(e.getMessage(), e);<z>
else {<z>
;<z>
public void onMove() {<z>
) {<z>
;<z>
= parent.getGridSize();<z>
scale = parent.getScale();<z>
getCol();<z>
= parent.getRow();<z>
512f) * gridSize * scale);<z>
treatAutopaddingAsZeroSized) {<z>
springs.size()) {<z>
index);<z>
{<z>
index;<z>
;<z>
;<z>
eSet(int featureID, Object newValue) {<z>
featureID) {<z>
.FEATURE_LINK_MODEL_FACET__META_FEATURE:<z>
(GenFeature)newValue);<z>
newValue);<z>
) {<z>
,<z>
current.eResource()) {<z>
IStructuredSelection selection) {<z>
) {<z>
);<z>
.StringExpression.Properties.clientDependency,<z>
.ADD, null, elem));<z>
refresh();<z>
open();<z>
groupId) {<z>
+ groupId;<z>
groupId);<z>
(group == null) {<z>
build();<z>
ArrayList<User>();<z>
groupId);<z>
pages = pageList.getAvailablePage();<z>
i++) {<z>
addAll(pageList.getPage(i));<z>
), XML_CONTENT_TYPE).build();<z>
) {<z>
();<z>
"Thrown exception : " + e);<z>
"Thrown exception : " + e).build();<z>
] third) {<z>
)<z>
second, third, sep2);<z>
second == null)<z>
, third, sep1);<z>
if (third == null)<z>
);<z>
first.length;<z>
second.length;<z>
third.length;<z>
+ length3 + 2];<z>
, result, 0, length1);<z>
] = sep1;<z>
+ 1, length2);<z>
+ 1] = sep2;<z>
);<z>
result;<z>
> getCollections()<z>
);<z>
(vb != null)<z>
;<z>
.collections;<z>
List<PlasticMethod> methods)<z>
get(annotationType);<z>
;<z>
contains(annotationType);<z>
orderedMethods =<z>
methods).reverse()<z>
methods);<z>
()<z>
builder)<z>
;<z>
void invokeMethod(InstructionBuilder builder, PlasticMethod method)<z>
builder.loadArgument(1);<z>
method.getMethodIdentifier());<z>
String.class);<z>
builder.loadThis();<z>
> 0)<z>
;<z>
;<z>
!method.isVoid())<z>
getDescription().returnType);<z>
swap();<z>
.class, "storeResult", Object.class);<z>
(Condition.NON_ZERO, JUST_RETURN);<z>
(InstructionBuilder builder)<z>
)<z>
;<z>
, boolean.class, "isAborted");<z>
JUST_RETURN);<z>
orderedMethods)<z>
invokeMethod(builder, invokedMethod);<z>
reverse && !isRoot)<z>
addSuperCall(builder);<z>
;<z>
);<z>
SignActionEvent info) {<z>
2).split("/");<z>
"/");<z>
Vector();<z>
== 3) {<z>
;<z>
, 0.0));<z>
);<z>
if (offsettext.length == 1) {<z>
0], 0.0));<z>
length() > TrainCarts.maxEjectDistance) {<z>
.multiply(TrainCarts.maxEjectDistance);<z>
dyaw = 0F;<z>
float dpitch = 0F;<z>
(angletext.length == 2) {<z>
(angletext[0], 0.0);<z>
);<z>
(angletext.length == 1) {<z>
0.0);<z>
));<z>
+ 90F;<z>
.rotate(signyawoffset, 0F, offset);<z>
()) {<z>
(info.isRCSign()) {<z>
: info.getRCTrainGroups()) {<z>
MinecartMember mm : group) {<z>
offset, dyaw, dpitch);<z>
} else {<z>
;<z>
!= null) {<z>
mm : group) {<z>
, dpitch);<z>
{<z>
);<z>
doRemove, Orientations from){<z>
from.ordinal());<z>
+ getSizeInventorySide(from.ordinal());<z>
{<z>
;<z>
){<z>
{<z>
1);<z>
out;<z>
return null;<z>
) throws IOException {<z>
return;<z>
);<z>
ncfile.close();<z>
() {<z>
.itemDisabled, false);<z>
peer, I2PSocketOptions options)<z>
I2PException, NoRouteToHostException {<z>
;<z>
(options == null)<z>
_defaultOptions;<z>
= null;<z>
instanceof ConnectionOptions)<z>
)options);<z>
);<z>
.INFO))<z>
,6)<z>
+ opts);<z>
;<z>
con == null)<z>
+ _maxStreams + ")");<z>
;<z>
.setSocket(socket);<z>
getConnectionError() != null) {<z>
false);<z>
());<z>
;<z>
getTransferSinkThread(DataChannel dataChannel,<z>
socketBox,<z>
,<z>
,<z>
throws Exception {<z>
,<z>
(EBlockParallelTransferContext)context);<z>
public void setURL(String pageURL)<z>
;<z>
, "HTTP/1.1");<z>
("/"))<z>
);<z>
contains("?")) {<z>
.indexOf("?"));<z>
= pageURL;<z>
protected void configureCompoundBracesBlocks(IEditStrategyAcceptor acceptor) {<z>
{<z>
Boolean get() {<z>
prefsHelper.isAutoCompleteBlockWanted();<z>
));<z>
throws ControlFlow {<z>
type) {<z>
case IokeData.TYPE_DEFAULT_METHOD:<z>
(receiver, context, message, obj);<z>
IokeData.TYPE_DEFAULT_MACRO:<z>
receiver, context, message, obj);<z>
IokeData.TYPE_DEFAULT_SYNTAX:<z>
, obj);<z>
.TYPE_LEXICAL_MACRO:<z>
);<z>
IokeData.TYPE_NATIVE_METHOD:<z>
;<z>
.TYPE_JAVA_CONSTRUCTOR:<z>
, context, message, obj);<z>
:<z>
message, obj);<z>
IokeData.TYPE_JAVA_FIELD_SETTER:<z>
message, obj);<z>
.TYPE_JAVA_METHOD:<z>
, context, message, obj);<z>
:<z>
, obj);<z>
:<z>
);<z>
case IokeData.TYPE_ALIAS_METHOD:<z>
receiver, context, message, obj);<z>
TYPE_NONE:<z>
, context, message, obj);<z>
int directory)<z>
{<z>
;<z>
stream.seek(0L);<z>
stream.readUnsignedShort();<z>
(!isValidEndianTag(endian)) {<z>
));<z>
0x4d4d);<z>
);<z>
;<z>
) {<z>
readUnsignedShort(stream);<z>
.seek(ifd_offset + 12*numEntries);<z>
readUnsignedInt(stream);<z>
;<z>
++;<z>
;<z>
seek(global_save_offset);<z>
tl){<z>
)) return false;<z>
;i<size();i++)<z>
(i).getPhon())){<z>
return false;<z>
true;<z>
{<z>
event.getPlayer())) {<z>
);<z>
.getPlayer());<z>
)[0])) return;<z>
))<z>
(event.getPlayer())) {<z>
);<z>
;<z>
.transaction.store.TransactionCommands.TxCommand parseDelimitedFrom(<z>
input,<z>
.ExtensionRegistryLite extensionRegistry)<z>
java.io.IOException {<z>
();<z>
) {<z>
buildParsed();<z>
} else {<z>
null;<z>
updateEntry(<z>
.lang.String className, long classPK,<z>
categoryIds,<z>
Date startDate,<z>
endDate, java.util.Date expirationDate,<z>
.lang.String title,<z>
, java.lang.String summary,<z>
layoutUuid, int height,<z>
)<z>
.kernel.exception.PortalException,<z>
liferay.portal.kernel.exception.SystemException {<z>
.updateEntry(groupId, className, classPK,<z>
,<z>
,<z>
priority, sync);<z>
Composite parent) {<z>
CHECK);<z>
.SubtypePropertiesEditionPart_SpecialisedElementLabel));<z>
{<z>
void widgetSelected(SelectionEvent e) {<z>
propertiesEditionComponent != null)<z>
())));<z>
);<z>
GridData(GridData.FILL_HORIZONTAL);<z>
= 2;<z>
.setLayoutData(specialisedElementData);<z>
.Subtype.Specialisation.specialisedElement);<z>
specialisedElement, "eef::Checkbox");<z>
specialisedElement, NavigationViewsRepository.SWT_KIND), null);<z>
return parent;<z>
dfv) {<z>
mergeFile == null)<z>
EMPTY_MAP;<z>
dfv);<z>
> owner, AnnotatedMethod<X> method)<z>
.getMethodInjectionPointData(owner, method);<z>
)<z>
.getDefinitionUtil().addImplicitComponentForInjectionPoint(injectionPoint);<z>
owner.addInjectionPoint(injectionPoint);<z>
void elementEvicted(int elementSize)<z>
;<z>
elementCount;<z>
-= elementSize;<z>
) throws RecognitionException {<z>
_type = T__12;<z>
= DEFAULT_TOKEN_CHANNEL;<z>
);<z>
;<z>
.channel = _channel;<z>
hashCode() {<z>
.method == null)<z>
.modifiers;<z>
hashCode();<z>
(Method event) {<z>
false;<z>
.contains(event)) {<z>
;<z>
) {<z>
includeEvents.add(event);<z>
event);<z>
= true;<z>
return added;<z>
void start() {<z>
zkDb.loadDataBase();<z>
IOException ie) {<z>
ie);<z>
ie);<z>
;<z>
startLeaderElection();<z>
start();<z>
name) throws ClassNotFoundException {<z>
(PluginDescriptor descr : registry) {<z>
{<z>
.getPluginClassLoader();<z>
name)) {<z>
(name);<z>
;<z>
{<z>
File chmFile = Simulation.getCHMFile( str );<z>
exists()) {<z>
+ suffix});<z>
} catch (Throwable e) {}<z>
(int widthMinimum) {<z>
= widthMinimum;<z>
(_colorBar!=null) {<z>
(widthMinimum);<z>
revalidate();<z>
boolean hasProfile() {<z>
;<z>
CaptainOfTheWatch(UUID ownerId) {<z>
, "{4}{W}{W}");<z>
this.expansionSetCode = "M10";<z>
("Human");<z>
"Soldier");<z>
;<z>
MageInt(3);<z>
MageInt(3);<z>
.getInstance());<z>
true));<z>
);<z>
this.addAbility(ability);<z>
), 3), false));<z>
{<z>
) {<z>
;<z>
.getImageRegistry().get(icon);<z>
null;<z>
private void setRepositoryBranchInfo(String rev) {<z>
String info;<z>
null) {<z>
info = NbBundle.getMessage(VersioningPanel.class,<z>
);<z>
} else {<z>
NbBundle.getMessage(VersioningPanel.class,<z>
;<z>
.class, "CTL_VersioningView_StatusTitle", info);<z>
)) {<z>
(title);<z>
)<z>
.exception.PortalException,<z>
.SystemException {<z>
MethodKey(WikiNodeServiceUtil.class.getName(),<z>
_deleteNodeParameterTypes1);<z>
(methodKey, nodeId);<z>
httpPrincipal, methodHandler);<z>
{<z>
.PortalException) {<z>
portal.kernel.exception.PortalException)e;<z>
.portal.kernel.exception.SystemException) {<z>
exception.SystemException)e;<z>
.kernel.exception.SystemException(e);<z>
kernel.exception.SystemException se) {<z>
se, se);<z>
;<z>
throws IOException {<z>
_terminate) {<z>
);<z>
;<z>
false;<z>
int maxSubarea) {<z>
;<z>
0) {<z>
0;<z>
> maxSubarea) {<z>
subarea = maxSubarea;<z>
return subarea;<z>
) {<z>
{<z>
this, 0, inst);<z>
(lastRuleCallOrigin, this, 1, inst);<z>
(lastRuleCallOrigin, this, 2, inst);<z>
lastRuleCallOrigin, this, 3, inst);<z>
this, 4, inst);<z>
(lastRuleCallOrigin, this, 5, inst);<z>
);<z>
(lastRuleCallOrigin, this, 7, inst);<z>
null;<z>
)<z>
return string != null &&<z>
>= 0 ||<z>
>= 0 ||<z>
>= 0 ||<z>
.indexOf('%') >= 0 ||<z>
string.indexOf(',') >= 0 ||<z>
"///") >= 0);<z>
, XMLStreamException {<z>
formatVersion );<z>
valueOf( object.getCents() ) );<z>
public static SectionDeleteMode fromString(String mode) {<z>
)) {<z>
return DELETE_ALL;<z>
else {<z>
DELETE_AND_MOVE;<z>
private boolean equals(Object o1,<z>
o2) {<z>
== null ) {<z>
o2 == null;<z>
else {<z>
);<z>
, String s)<z>
rv = false;<z>
.length() != 0)<z>
(Object o : list)<z>
)<z>
(s);<z>
)<z>
).equals(s);<z>
rv)<z>
rv;<z>
void onBackPressed() {<z>
;<z>
.lockRenderThread();<z>
.onBackPressed();<z>
} finally {<z>
();<z>
throws NingTransferException {<z>
if (responseBody == null) {<z>
in = null;<z>
= new StringBuilder();<z>
buffer = new char[1000];<z>
(isError()) {<z>
= connection.getErrorStream();<z>
== null) {<z>
+getStatusCode());<z>
else {<z>
getInputStream();<z>
(in == null) {<z>
"Unable to access input stream for supposedly successful reponse (code "<z>
)+")");<z>
new InputStreamReader(in, "UTF-8");<z>
int count;<z>
read(buffer)) > 0) {<z>
.append(buffer, 0, count);<z>
;<z>
ioe) {<z>
throw new NingTransferException(ioe);<z>
responseBody = sb.toString();<z>
return responseBody;<z>
(Object obj) {<z>
this == obj)<z>
true;<z>
obj == null)<z>
;<z>
getClass())<z>
return false;<z>
) obj;<z>
== null) {<z>
)<z>
;<z>
other.m_cause))<z>
false;<z>
(m_resolution == null) {<z>
(other.m_resolution != null)<z>
;<z>
)<z>
;<z>
;<z>
() {<z>
)) {<z>
());<z>
getContainingFile().getVirtualFile();<z>
(virtualFile != null) {<z>
cssBlock.getTextRange();<z>
false, false);<z>
logsNumberLimit<z>
throws IOException {<z>
("TaskLog.cleanup: logsRetainHours=" + logsRetainHours +<z>
);<z>
] totalLogs = logDir.listFiles();<z>
= System.currentTimeMillis() -<z>
;<z>
) {<z>
= totalLogs.length;<z>
logsNumberLimit) {<z>
, new Comparator<File>() {<z>
(File f1, File f2) {<z>
.compareTo(f2.lastModified());<z>
);<z>
i < numLogs / 2; i++) {<z>
);<z>
);<z>
i < numLogs; i++) {<z>
{<z>
"TaskLog.cleanup deleting " + totalLogs[i]);<z>
;<z>
} else {<z>
{<z>
; i < numLogs; i++) {<z>
() < purgeTimeStamp) {<z>
]);<z>
totalLogs[i]);<z>
public static void addKeyword(String keyword) {<z>
) {<z>
);<z>
;<z>
String errorCode, Throwable cause, boolean reportable)<z>
message, cause);<z>
= solution;<z>
= errorCode;<z>
;<z>
)<z>
), APB_PROPERTIES);<z>
;<z>
FileReader(propFile));<z>
catch (IOException ignore) {<z>
return p;<z>
{<z>
internalPortalCookieId = -1;<z>
.entityVersion = -1;<z>
this.created = new Date();<z>
expires = null;<z>
.value = null;<z>
();<z>
>> getMapping()<z>
initialized)<z>
"The complete mapping is only available after initialization.");<z>
.unmodifiableMap(mapping);<z>
void setActions(List l) {<z>
iter = l.iterator();<z>
(iter.hasNext()) {<z>
));<z>
Node node){<z>
getAttributes();<z>
null)<z>
< attributes.getLength(); i++)<z>
.item(i);<z>
){<z>
return current.getNodeValue();<z>
return "scalar";<z>
index ) throws OdaException<z>
logging.Level.FINEST,<z>
.getName( ),<z>
);<z>
rsMetadata );<z>
return rsMetadata.getColumnLabel( index );<z>
)<z>
ResourceConstants.COLUMN_LABEL_CANNOT_GET,<z>
e );<z>
public Tasks getTasks() {<z>
) {<z>
class);<z>
;<z>
stride, ShortBuffer buffer) {<z>
();<z>
(buffer);<z>
;<z>
, MemoryUtil.getAddress(buffer));<z>
) throws RecognitionException {<z>
int _type = T__66;<z>
DEFAULT_TOKEN_CHANNEL;<z>
;<z>
= _type;<z>
;<z>
setOptions(final boolean setVolumeName, final boolean caseInsensitive)<z>
0x1 : 0x0);<z>
;<z>
createPackageContents() {<z>
return;<z>
= true;<z>
);<z>
EDITABLE_CONSTRAINED_OBJECT__EDITABILITY);<z>
constrainedObjectEClass = createEClass(CONSTRAINED_OBJECT);<z>
(constrainedObjectEClass, CONSTRAINED_OBJECT__VISIBILITY);<z>
);<z>
;<z>
= createEClass(ROOT_USER_INTERACTION_CONSTRAINT);<z>
, ROOT_USER_INTERACTION_CONSTRAINT__REQUIRES_GROUP_OWNERSHIP);<z>
ROOT_USER_INTERACTION_CONSTRAINT__REQUIRES_OWNERSHIP);<z>
(rootUserInteractionConstraintEClass, ROOT_USER_INTERACTION_CONSTRAINT__REQUIRED_ROLES);<z>
ROOT_USER_INTERACTION_CONSTRAINT__OPEN_TO_PUBLIC);<z>
rootUserInteractionConstraintEClass, ROOT_USER_INTERACTION_CONSTRAINT__REQUIRED_STATES);<z>
= createEClass(USER_INTERACTION_CONSTRAINT);<z>
(userInteractionConstraintEClass, USER_INTERACTION_CONSTRAINT__INHERIT_FROM_PARENT);<z>
REQUIRED_STATE);<z>
, REQUIRED_STATE__CONSTRAINT);<z>
String> properties, final Problems.Monitor monitor)<z>
monitor;<z>
.properties = ImmutableMap.copyOf(properties);<z>
?>>()<z>
)<z>
monitor);<z>
});<z>
public UniquenessFilter create( Object optionalParameter )<z>
( optionalParameter );<z>
return new LevelUnique( PrimitiveTypeFetcher.RELATIONSHIP );<z>
{<z>
DnDClipboard) {<z>
return true;<z>
)) {<z>
true;<z>
} else {<z>
false;<z>
boolean newAllowsPassByReference) {<z>
;<z>
allowsPassByReference = newAllowsPassByReference;<z>
;<z>
;<z>
)<z>
oldAllowsPassByReference, allowsPassByReference, !oldAllowsPassByReferenceESet));<z>
AbstractTopicRequestMessage(<z>
,<z>
,<z>
,<z>
long timeToLive,<z>
<String, Object> headers,<z>
destination,<z>
String topic) {<z>
headers);<z>
destination = destination;<z>
topic;<z>
File getBackupFile( File projectFile )<z>
;<z>
File( backupFolderName );<z>
)<z>
( projectFile.getParentFile(), backupFolderName );<z>
if( !backupFolder.exists() )<z>
.mkdirs();<z>
projectFile.getName() + ".backup" );<z>
backupFile;<z>
) {<z>
) {<z>
index : guiFolderList.getSelectedIndices()) {<z>
(index);<z>
Composite parent, Series series )<z>
getContext( ).getUIFactory( )<z>
parent,<z>
.NONE,<z>
);<z>
GridData( );<z>
SWT.CENTER;<z>
.setLayoutData( gd );<z>
ChartCheckbox.STATE_SELECTED<z>
: ChartCheckbox.STATE_UNSELECTED )<z>
ChartCheckbox.STATE_GRAYED );<z>
btnTranslucent.addSelectionListener( this );<z>
emitRet() {<z>
;<z>
myProgram.add(instruction);<z>
return this;<z>
public void incrBy_should_reset_and_increment_expired_keys() throws InterruptedException {<z>
set(SJIVE, SDURATION);<z>
, 1);<z>
sleep(2);<z>
(SJIVE, 2);<z>
2L));<z>
final MultipleHostsModel hostsModel) {<z>
;<z>
>();<z>
()) {<z>
);<z>
VDS();<z>
hostDetailModel.getName());<z>
hostDetailModel.getAddress());<z>
.setSSHKeyFingerprint(hostDetailModel.getFingerprint());<z>
host.setport(54321);<z>
getClusterId());<z>
setpm_enabled(false);<z>
AddVdsActionParameters parameters = new AddVdsActionParameters();<z>
getId());<z>
;<z>
.setRootPassword(hostDetailModel.getPassword());<z>
.setOverrideFirewall(false);<z>
;<z>
Frontend.RunMultipleAction(VdcActionType.AddVds,<z>
{<z>
{<z>
hostsModel.StopProgress();<z>
true;<z>
: result.getReturnValue())<z>
isAllCanDoPassed && returnValueBase.getCanDoAction();<z>
if (!isAllCanDoPassed)<z>
)<z>
;<z>
null);<z>
(){<z>
);<z>
this.conflictMessage;<z>
public MisRNA(String value) throws Exception{<z>
;<z>
.equals(TAG_NAME)){<z>
,new XMLElement(value));<z>
onComponentTag(ComponentTag tag) {<z>
IValueMap valueMap = tag.getAttributes();<z>
for (String s : optionNames) {<z>
(valueMap.containsKey(s)) {<z>
containsKey(s))<z>
getString(s));<z>
s);<z>
(tag);<z>
> trades) {<z>
for (ManageableTrade trade : trades) {<z>
).getObjectId()) == null) {<z>
+ trade.getUniqueId());<z>
(WindowRef windowRef) {<z>
windowRef.window= null;<z>
Display display= Display.getCurrent();<z>
(display == null)<z>
;<z>
shell != null) {<z>
.getData();<z>
(data instanceof IWorkbenchWindow) {<z>
(IWorkbenchWindow)data;<z>
;<z>
shells[]= display.getShells();<z>
++) {<z>
= shells[i].getData();<z>
data instanceof IWorkbenchWindow) {<z>
data;<z>
createCancelButton() {<z>
("cancelButton") {<z>
1L;<z>
onClick(AjaxRequestTarget target) {<z>
this.onCancel(target);<z>
] block_array,<z>
{<z>
bigBlockSize);<z>
) {<z>
throw new IOException(<z>
"Illegal block count; minimum count is 1, got " + block_count<z>
" instead");<z>
MAX_BLOCK_COUNT) {<z>
IOException("Block count " + block_count<z>
+ ".");<z>
block_count, block_array.length);<z>
;<z>
new RawDataBlock[ block_count ];<z>
; block_index++)<z>
[ block_index ];<z>
.blockCount()) {<z>
.blockCount() +<z>
" sectors, but the initial DIFAT array at index " + block_index +<z>
+<z>
" your file is corrupt");<z>
block_index ] =<z>
;<z>
block_count)<z>
(xbat_index < 0)<z>
throw new IOException(<z>
);<z>
int chain_index = xbat_index;<z>
int max_entries_per_block = bigBlockSize.getXBATEntriesPerBlock();<z>
bigBlockSize.getNextXBATChainOffset();<z>
j < xbat_count; j++)<z>
min(block_count - block_index,<z>
max_entries_per_block);<z>
();<z>
int offset = 0;<z>
)<z>
blocks[ block_index++ ] =<z>
raw_block_list<z>
;<z>
INT_SIZE;<z>
getInt(data, chain_index_offset);<z>
chain_index == POIFSConstants.END_OF_CHAIN)<z>
block_count)<z>
;<z>
raw_block_list);<z>
(Animation animation) {<z>
view2));<z>
;<z>
mCurrentView) {<z>
else {<z>
, boolean blocking, CLEvent... eventsToWaitFor) {<z>
null)<z>
IllegalArgumentException("Null input buffer !");<z>
.isDirect();<z>
> ptr = null;<z>
if (indirect) {<z>
().getKernelsDefaultByteOrder());<z>
.setValues(in);<z>
blocking = true;<z>
else {<z>
pointerToBuffer(in);<z>
;<z>
{<z>
;<z>
oncanvas = false;<z>
redraw();<z>
x); } }<z>
(File d) {<z>
exportDirectory = d;<z>
this.exportDirectory == null) {<z>
"");<z>
{<z>
());<z>
this.exportDirectory != null);<z>
orderId, int mode) {<z>
FastList.newInstance();<z>
> entry: orderAttributes.entrySet()) {<z>
("OrderAttribute");<z>
.isNotEmpty(orderId)) {<z>
"orderId", orderId);<z>
entry.getKey();<z>
();<z>
"attrName", key);<z>
.put("attrValue", value);<z>
switch (mode) {<z>
ALL:<z>
;<z>
FILLED_ONLY:<z>
.isNotEmpty(value)) {<z>
orderAtt);<z>
case EMPTY_ONLY:<z>
isEmpty(value)) {<z>
(orderAtt);<z>
(orderAtt);<z>
;<z>
getEntitiesWithinAABB(Class class1, AxisAlignedBB axisalignedbb)<z>
16D);<z>
16D);<z>
);<z>
maxZ + 2D) / 16D);<z>
arraylist = new ArrayList();<z>
; i1 <= j; i1++)<z>
++)<z>
, j1))<z>
;<z>
;<z>
public void shutdown() {<z>
;<z>
);<z>
;<z>
sp_counts.close();<z>
;<z>
so_counts.close();<z>
);<z>
IOException e) {<z>
("could not close tables", e);<z>
);<z>
void rule__XEqualityExpression__RightOperandAssignment_1_1() throws RecognitionException {<z>
= keepStackSize();<z>
) {<z>
getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());<z>
;<z>
);<z>
--;<z>
if (state.failed) return ;<z>
if ( state.backtracking==0 ) {<z>
);<z>
(RecognitionException re) {<z>
re);<z>
input,re);<z>
stackSize);<z>
other)<z>
) other;<z>
);<z>
isValid()<z>
.LogConfigType.VIEW))<z>
), this, "isValid()"));<z>
(DomNodeInterface) this.titleBody);<z>
.TRUE;<z>
catch(Exception e)<z>
LogConfigType.VIEWERROR))<z>
,this,"isValid()",e));<z>
;<z>
throws Exception {<z>
.forName("org.apache.derby.jdbc.EmbeddedDriver");<z>
con = DriverManager.getConnection(<z>
_sqlDir + "/" + _databaseName + ";create=true", "",<z>
;<z>
_fileName)) {<z>
, _sqlDir + "/portal/portal-derby.sql");<z>
_sqlDir + "/indexes.sql");<z>
+ _fileName);<z>
);<z>
con = DriverManager.getConnection(<z>
+ _databaseName +<z>
);<z>
) {<z>
String sqlState = sqle.getSQLState();<z>
{<z>
sqle;<z>
String s)<z>
String nn;<z>
hn;<z>
;<z>
sep2);<z>
nextToken();<z>
);<z>
();<z>
(Exception e)<z>
null;<z>
hn, ga);<z>
{<z>
.bottom() <= p.y)<z>
;<z>
;<z>
= 0;<z>
List fragments = getFragmentsWithoutBorder();<z>
i >= 0; i--) {<z>
;<z>
getAscent() > p.y<z>
== null<z>
closestBox.getBaseline() || (box<z>
&& hDistanceBetween(<z>
) {<z>
box;<z>
index = i;<z>
(p, trailing, closestBox, index);<z>
dispose() {<z>
().getModel();<z>
!= null)<z>
.removeModelChangedListener(this);<z>
super.dispose();<z>
String reduitIPv6(String adr) {<z>
null) return null;<z>
pos7=-1, pos8 = -1;<z>
;<z>
indexOf(separateurIPv6,pos1+1);<z>
1);<z>
(separateurIPv6,pos3+1);<z>
;<z>
separateurIPv6,pos5+1);<z>
1);<z>
,pos7+1);<z>
(0,pos1);<z>
+1,pos2);<z>
(pos2+1,pos3);<z>
+1, pos4);<z>
+1, pos5);<z>
(pos5+1, pos6);<z>
substring(pos6+1, pos7);<z>
String p8;<z>
);<z>
1, pos8);<z>
);<z>
return resultat;<z>
classId) throws CacheCorruptedException {<z>
);<z>
ArrayUtil.EMPTY_INT_ARRAY;<z>
catch (Throwable e) {<z>
;<z>
throws I2B2Exception {<z>
uploaderDaoFactory<z>
getUploadStatusDAO();<z>
new UploadSetStatus();<z>
.setUploadId(getUploadId());<z>
);<z>
(UploadStatusDAO.MODIFIER_SET);<z>
);<z>
.setSourceCd(getSourceSystemCd());<z>
));<z>
setStatus);<z>
(getInputLoadFile());<z>
+ getUploadId();<z>
);<z>
.getConceptDAO();<z>
);<z>
"Created Modifier staging table" + getStagingTableName());<z>
ModifierXmlDbLoader(<z>
getOutputXmlFileName(),<z>
());<z>
);<z>
getOutputXmlFileName() + "to staging table"<z>
));<z>
),<z>
getUploadId());<z>
"Completed Modifiier insert operation for staging table"<z>
);<z>
getUploadSetStatus(getUploadId(),<z>
;<z>
);<z>
()));<z>
setStatus.setLoadedRecord(modifierDAO<z>
;<z>
setNoOfRecord(modifierDbLoader.getRowCount());<z>
(setStatus);<z>
} catch (I2B2Exception i2b2Ex) {<z>
uploaderDaoFactory<z>
();<z>
= uploadStatusDao.getUploadSetStatus(<z>
getUploadId(), UploadStatusDAO.MODIFIER_SET);<z>
.setLoadStatus("ERROR");<z>
= new StringWriter();<z>
);<z>
printStackTrace(pw);<z>
.substring(0, 500));<z>
);<z>
;<z>
throws Exception {<z>
raw();<z>
.EffectiveTuple) {<z>
(lhs.nominal());<z>
)) {<z>
nominal = raw;<z>
);<z>
{<z>
return null;<z>
(final HttpParams params) {<z>
== null) {<z>
throw new IllegalArgumentException("HTTP parameters may not be null");<z>
params.getBooleanParameter<z>
(CoreConnectionPNames.TCP_NODELAY, true);<z>
Object, Object> iArgs) {<z>
request.getText();<z>
(ODatabaseRecordTx) getDatabase();<z>
;<z>
.instance().getScriptManager();<z>
());<z>
;<z>
;<z>
);<z>
instanceof Invocable) {<z>
;<z>
= null;<z>
iArgs != null) {<z>
[iArgs.size()];<z>
;<z>
entrySet())<z>
arg.getValue();<z>
parserText, args);<z>
else {<z>
)), binding);<z>
} catch (ScriptException e) {<z>
), e);<z>
(NoSuchMethodException e) {<z>
.getText(), 0, e);<z>
finally {<z>
unbind(binding);<z>
Object slot, Widget content) {<z>
HeaderPresenter.SLOT_CONTENT) {<z>
clear();<z>
)<z>
add(content);<z>
;<z>
Point where, IFigure childFigure) {<z>
where.x);<z>
, where.y);<z>
);<z>
yIndex == myHeights.length) {<z>
0) {<z>
;<z>
yIndex = 0;<z>
{<z>
) - 1);<z>
;<z>
int row = myHeights.length - 1;<z>
boolean figureFound = false;<z>
&& row >= 0; ) {<z>
= myColumnCount - 1;<z>
{<z>
) {<z>
true;<z>
} else {<z>
--;<z>
{<z>
row--;<z>
(!figureFound) {<z>
null;<z>
) {<z>
(gridData.horizontalSpan, myColumnCount));<z>
.length) {<z>
) {<z>
column++;<z>
;<z>
if (endCount <= myColumnCount) {<z>
index = column;<z>
row][index] == null) {<z>
index++;<z>
)<z>
column = index;<z>
hSpan >= myColumnCount) {<z>
= 0;<z>
++;<z>
;<z>
yIndex = row;<z>
else {<z>
[yIndex][xIndex] == null) {<z>
return null;<z>
[xIndex - 1]; xIndex--) {<z>
[xIndex]; yIndex--) {<z>
int xPosition = 0;<z>
; i++) {<z>
[i];<z>
= 0;<z>
{<z>
i];<z>
myWidths[xIndex];<z>
];<z>
{<z>
myWidths.length) {<z>
width;<z>
else {<z>
) {<z>
];<z>
.verticalAlignment > myHeights.length) {<z>
height = childFigure.getBounds().height;<z>
else {<z>
++) {<z>
myHeights[i];<z>
, yPosition, width, height);<z>
XYDataset createread() {<z>
);<z>
);<z>
.t_lread);<z>
.addSeries(this.t_pread);<z>
return timeseriescollection;<z>
void setSmallIcon(Image newSmallIcon) {<z>
newSmallIcon != smallIcon) {<z>
= null;<z>
!= null)<z>
.ABSTRACT_TOOL__SMALL_ICON, null, msgs);<z>
)<z>
, null, msgs);<z>
= basicSetSmallIcon(newSmallIcon, msgs);<z>
if (msgs != null)<z>
dispatch();<z>
} else if (eNotificationRequired())<z>
;<z>
LoadContext context,<z>
CompanionMod cMod, String value)<z>
Constants.PIPE);<z>
))<z>
nextToken();<z>
Race> ref =<z>
ref.getCDOMReference(RACE_CLASS, token);<z>
.APPLIED_RACE,<z>
;<z>
.SUCCESS;<z>
forDefault) {<z>
.getServiceState().getRadioTechnology();<z>
(rt == ServiceState.RADIO_TECHNOLOGY_IS95A) ||<z>
ServiceState.RADIO_TECHNOLOGY_IS95B) ||<z>
) ||<z>
.RADIO_TECHNOLOGY_EVDO_0) ||<z>
.RADIO_TECHNOLOGY_EVDO_A) ||<z>
== ServiceState.RADIO_TECHNOLOGY_EVDO_B) ||<z>
(rt == ServiceState.RADIO_TECHNOLOGY_EHRPD)) {<z>
;<z>
{<z>
if (forDefault) {<z>
);<z>
} else {<z>
"ro.gsm.2nd_data_retry_config");<z>
void remove(long userGroupId, long teamId)<z>
SystemException {<z>
)) {<z>
= teamPersistence.getListeners();<z>
(ModelListener<UserGroup> listener : listeners) {<z>
userGroupId,<z>
), teamId);<z>
: teamListeners) {<z>
.onBeforeRemoveAssociation(teamId,<z>
, userGroupId);<z>
new Object[] {<z>
Long(teamId)<z>
});<z>
(ModelListener<UserGroup> listener : listeners) {<z>
userGroupId,<z>
);<z>
{<z>
onAfterRemoveAssociation(teamId,<z>
(), userGroupId);<z>
SecurityTestRunner securityTestRunner, TestStep testStep, SecurityTestRunContext context )<z>
);<z>
);<z>
testStep, context );<z>
, context );<z>
setMessageExchange( message );<z>
this );<z>
Exception e )<z>
logError( e, "[MaliciousAttachmentSecurityScan]Property value is not valid xml!" );<z>
( "Property value is not XML or XPath is wrong!" );<z>
{<z>
IOException("chunk is null");<z>
(!chunk.isShort()){<z>
)==null){<z>
("chunk is big chunk and chunk content is null : chunk = "+chunk.toString());<z>
)!= chunk.getBody()){<z>
chunk.toString());<z>
(os,chunk.header,null);<z>
,chunk.body+4,null);<z>
,null);<z>
if(!chunk.isShort()){<z>
,chunk.content,null);<z>
null);<z>
long ifModifiedSince) {<z>
(false);<z>
= null;<z>
get(feedUrl, ifModifiedSince);<z>
InterruptedException e) {<z>
return null;<z>
e) {<z>
e.printStackTrace();<z>
)) {<z>
;<z>
(Node node, XMLValidateContext context)<z>
{<z>
);<z>
element = null;<z>
() == Node.DOCUMENT_NODE) {<z>
).getDocumentElement();<z>
) {<z>
= (Element) node;<z>
{<z>
new MarshalException<z>
);<z>
getLocalName();<z>
null) {<z>
throw new MarshalException("Document implementation must " +<z>
;<z>
) {<z>
, context, getProvider());<z>
{<z>
throw new MarshalException("invalid Signature tag: " + tag);<z>
)<z>
countValue.intValue();<z>
0 )<z>
continueValue();<z>
int) item.intValue() );<z>
);<z>
{<z>
method = method;<z>
= scheduleExpression;<z>
.timerConfig = timerConfig;<z>
) {<z>
();<z>
) {<z>
);<z>
PREFIX + "." + typeKey);<z>
(null == contentType)<z>
PREFIX + "." + contentType);<z>
;<z>
ok)<z>
put(typeKey, mapper);<z>
_context) {<z>
, "jetbrains.mps.baseLanguage.structure.AnnotationInstance")) {<z>
);<z>
, false), "method", true);<z>
annotationMethodDeclarations).count() == 1) {<z>
(), false);<z>
args []) throws Exception<z>
args [0]);<z>
;<z>
(app.expr());<z>
dump(" ");<z>
("{ \u005c"a\u005c": [" +<z>
", \u005c"b\u005c": null, \u005c"c\u005c": { \u005c"d\u005c": 1234 }}");<z>
x.eval(json);<z>
[0] + "</code>");<z>
"</code>");<z>
+ o + "</code>");<z>
catch (Exception err) {<z>
printStackTrace();<z>
void close() throws IOException {<z>
== this) {<z>
(null);<z>
delegate.getCache().close();<z>
getRole() {<z>
null) {<z>
IncqueryFeatureHelper<z>
getIncqueryDerivedFeature(<z>
EIQSnapshotPackageImpl.Literals.MATCH_RECORD__ROLE,<z>
,<z>
, false);<z>
incquery.snapshot.EIQSnapshot.RecordRole) roleHandler<z>
);<z>
ipAddress, final int port, final int timeout)<z>
IOException {<z>
Socket();<z>
, port);<z>
(endPoint.isUnresolved()) {<z>
UnknownHostException(ipAddress);<z>
timeout), true));<z>
{<z>
();<z>
IOException ioe) {<z>
SocialActivitySetting update(<z>
boolean merge,<z>
SystemException {<z>
)<z>
, serviceContext);<z>
public MgmtData(Document doc, String mgmtData) {<z>
(doc);<z>
);<z>
) throws IOException<z>
checkStatus();<z>
boolean retAtEndOfBuffer = false;<z>
if (pos > limit)<z>
;<z>
;<z>
)<z>
1;<z>
if (markPos < 0)<z>
;<z>
, buffer.length - limit);<z>
count > 0)<z>
+= count;<z>
pos] == '\n')<z>
;<z>
)<z>
;<z>
++pos;<z>
return count;<z>
, IProgressMonitor monitor) {<z>
synchronized (additionalSystemInfoLock) {<z>
manager.getInterpreterInfo(interpreter, monitor);<z>
getGrammarVersion();<z>
AbstractAdditionalTokensInfo currInfo = AdditionalSystemInterpreterInfo.getAdditionalSystemInfo(<z>
);<z>
!= null) {<z>
;<z>
) manager.getInterpreterInfo(interpreter,<z>
;<z>
defaultInterpreterInfo.getModulesManager();<z>
AbstractAdditionalTokensInfo info = restoreInfoForModuleManager(monitor, m,<z>
" - " + interpreter + ")",<z>
;<z>
null) {<z>
interpreter),<z>
info);<z>
();<z>
{<z>
.log(e);<z>
EObject entryRuleState() throws RecognitionException {<z>
null;<z>
EObject iv_ruleState = null;<z>
newCompositeNode(grammarAccess.getStateRule());<z>
);<z>
=ruleState();<z>
_fsp--;<z>
iv_ruleState;<z>
,EOF,FOLLOW_EOF_in_entryRuleState563);<z>
RecognitionException re) {<z>
re);<z>
);<z>
;<z>
{<z>
(r.getId() == null) {<z>
);<z>
);<z>
);<z>
) {<z>
getHistoryKey(), 8);<z>
(<z>
getHistoryKey())) {<z>
(entry) < 0) {<z>
;<z>
getContent(Customer entry, RequestContext request)<z>
content = factory.newContent();<z>
("customer"));<z>
"name"), entry.getName());<z>
content.setValueElement(customerEl);<z>
;<z>
void skip() {<z>
) {<z>
= false;<z>
;<z>
null;<z>
node == root ) {<z>
= null;<z>
node.right != null ) {<z>
.right;<z>
{<z>
up;<z>
== null || node == root ) {<z>
;<z>
if ( node.right != null ) {<z>
right;<z>
void removeDeadProperty(DavPropertyName name)<z>
DavException {<z>
))<z>
+ " on " +<z>
;<z>
(name));<z>
fireChangeEvent(boolean alwaysFire) {<z>
alwaysFire || m_isFireAll) {<z>
);<z>
{<z>
lastFails;<z>
0 < num) {<z>
.exit(-num);<z>
num = lastErrors;<z>
if (0 < num) {<z>
exit(num);<z>
0);<z>
SNode node) {<z>
new RefNodeCellProvider(node, editorContext);<z>
setRole("exception");<z>
);<z>
;<z>
(editorContext);<z>
.setSubstituteInfo(provider.createDefaultSubstituteInfo());<z>
();<z>
Class attributeKind = provider.getRoleAttributeClass();<z>
!= null) {<z>
getOperationContext();<z>
getInstanceFromContext(opContext);<z>
editorContext, attributeConcept, attributeKind, editorCell);<z>
return editorCell;<z>
Bundle savedInstanceState) {<z>
);<z>
(this);<z>
"Baustelle");<z>
textview);<z>
flags) {<z>
(TAG);<z>
dest.writeInt(viewId);<z>
writeToParcel(dest, 0 );<z>
) {<z>
);<z>
if(this.code!=null) {<z>
append(" ");<z>
this.name !=null) {<z>
append(this.name);<z>
();<z>
void init() {<z>
{<z>
) {<z>
throw new Error("The UUIDPIDGenerator cannot verify unique PIDs without a tripleStoreQueryService.");<z>
(OutputStream stream, Address address) {<z>
null) {<z>
getBytes());<z>
" ".getBytes());<z>
e) {<z>
);<z>
)<z>
ComposedAdapterFactory.Descriptor.Registry.INSTANCE);<z>
());<z>
));<z>
addAdapterFactory(new EcoreItemProviderAdapterFactory());<z>
);<z>
new BasicCommandStack();<z>
.addCommandStackListener<z>
()<z>
EventObject event)<z>
getContainer().getDisplay().asyncExec<z>
new Runnable()<z>
public void run()<z>
;<z>
()).getMostRecentCommand();<z>
if (mostRecentCommand != null)<z>
));<z>
)<z>
.refresh();<z>
);<z>
});<z>
<Resource, Boolean>());<z>
void colorMeSunday() {<z>
isCenter) {<z>
bottomView.setTextColor(0xFF773333);<z>
setTextColor(0xFF553333);<z>
bottomView.setTextColor(0xFF442222);<z>
0xFF553333);<z>
() {<z>
length();<z>
StringBuffer(20 + q);<z>
;<z>
;<z>
.append(minor);<z>
.append(SEPARATOR);<z>
);<z>
(q > 0) {<z>
result.append(SEPARATOR);<z>
.append(qualifier);<z>
toString();<z>
(DoServerRemoteActionListener listener, boolean longShowMessage)<z>
listener;<z>
longShowMessage;<z>
createDefaultEditPolicies() {<z>
);<z>
(EditPolicyRoles.SEMANTIC_ROLE,<z>
PseudostateInitialItemSemanticEditPolicy());<z>
);<z>
,<z>
new QualifiedNameDisplayEditPolicy());<z>
.STEREOTYPE_LABEL_POLICY,<z>
AppliedStereotypeNodeLabelDisplayEditPolicy());<z>
() {<z>
;<z>
getExtensionRegistry().getConfigurationElementsFor("org.eclipse.pde.ui.tests.macroSupport");<z>
length; i++) {<z>
) {<z>
("class");<z>
obj instanceof IWidgetResolver)<z>
add(obj);<z>
catch (CoreException e) {<z>
.println(e);<z>
protected void doRollback(DefaultTransactionStatus status) {<z>
status.getTransaction();<z>
{<z>
debug("Rolling back OJB transaction on PersistenceBroker [" +<z>
.getPersistenceBroker() + "]");<z>
abortTransaction();<z>
private ConventionBundle getLiborConventionBundle(ConventionBundle swapConvention) {<z>
);<z>
());<z>
if (liborConvention == null) {<z>
.getSwapFloatingLegInitialRate());<z>
return liborConvention;<z>
void dispose()<z>
(themers)<z>
))<z>
dispose(control);<z>
clear();<z>
){<z>
= startOffset;<z>
endOffset;<z>
.totalBoost = totalBoost;<z>
subInfos;<z>
AbstractResource> rootResources) {<z>
) return null;<z>
;<z>
Shell shell )<z>
( );<z>
;<z>
);<z>
getSize( );<z>
min( size.y, DROP_DOWN_HIGHT );<z>
250 );<z>
int imageBoundsX = 0;<z>
.getItemCount( ) > 0 )<z>
( 0 );<z>
).x;<z>
);<z>
= toolbarBounds.x<z>
width<z>
+ trim.x<z>
imageBoundsX;<z>
!isLTR( ) )<z>
width;<z>
, rect.y + rect.height );<z>
pt );<z>
;<z>
.width );<z>
> 0 )<z>
overlap;<z>
.x )<z>
monitor.x;<z>
pt );<z>
( width, height );<z>
)<z>
"/".equals( tocId ) )<z>
return root;<z>
;<z>
public void addInterval(@NotNull E interval) {<z>
.assertUnderWriteLock();<z>
add(createGetter(interval));<z>
++;<z>
);<z>
double v) {<z>
;<z>
{<z>
)]=v;<z>
getShortCut(int slot, int page)<z>
+ page * 12);<z>
() == L2ShortCut.TYPE_ITEM)<z>
.getId()) == null)<z>
sc.getPage());<z>
= null;<z>
;<z>
public Object getAdapter(Class type) {<z>
{<z>
page = new PropertySheetPage();<z>
)));<z>
page;<z>
== GraphicalViewer.class)<z>
getGraphicalViewer();<z>
)<z>
);<z>
== ActionRegistry.class)<z>
();<z>
.class && getGraphicalViewer() != null)<z>
;<z>
&& getGraphicalViewer() != null)<z>
).getFigure();<z>
getAdapter(type);<z>
OntologyProperty property) {<z>
this.property = property;<z>
))) {<z>
);<z>
else {<z>
+ getIndividualPatternRoleName();<z>
void setFolderType(String newType) {<z>
newType;<z>
getPropName(), this.folderType);<z>
ex) {<z>
);<z>
> attr) {<z>
{<z>
attr);<z>
) {<z>
BooleanAttributeDefinition) attr);<z>
attr instanceof StringAttributeDefinition) {<z>
;<z>
if (attr instanceof IntegerAttributeDefinition) {<z>
((IntegerAttributeDefinition) attr);<z>
{<z>
);<z>
ZLTextWordCursor cursor, int overlappingValue) {<z>
() || (overlappingValue == 0)) {<z>
;<z>
= null;<z>
i : LineInfos) {<z>
i;<z>
{<z>
--overlappingValue;<z>
if (overlappingValue == 0) {<z>
.ParagraphCursor);<z>
info.EndElementIndex, info.EndCharIndex);<z>
in, long size) {<z>
;<z>
this.size = size;<z>
0;<z>
IOException, FlickrException,<z>
();<z>
ArrayList<Parameter>();<z>
Parameter("method", METHOD_GET_LIST));<z>
OAuthInterface.PARAM_OAUTH_CONSUMER_KEY,<z>
;<z>
.addOAuthToken(parameters);<z>
= transportAPI.postJSON(sharedSecret, parameters);<z>
if (response.isError()) {<z>
(response.getErrorCode(), response<z>
getErrorMessage());<z>
().getJSONObject(<z>
);<z>
= contactsElement.getJSONArray("contact");<z>
.length(); i++) {<z>
.getJSONObject(i);<z>
);<z>
);<z>
setUsername(contactElement.getString("username"));<z>
));<z>
.getString("friend")));<z>
);<z>
));<z>
("path_alias"));<z>
)) {<z>
);<z>
(contactElement.getString("iconfarm"));<z>
"iconserver"));<z>
);<z>
;<z>
void addInitialArenaToScreen()<z>
,<z>
<AMRMProtocol> resourceManagerFactory,<z>
{<z>
.checkNotNull(parameters);<z>
= resourceManagerFactory;<z>
containerManagerFactory = containerManagerFactory;<z>
.containerTrackers = Lists.newArrayList();<z>
coreType) {<z>
featureID) {<z>
case EvidencePackage.OWNED_BY__OWNER:<z>
);<z>
basicGetOwner();<z>
eGet(featureID, resolve, coreType);<z>
onLowMemory()<z>
)<z>
;<z>
void notifySelectedState() {<z>
ButtonModel model: buttonModels) {<z>
) != selected) {<z>
selected);<z>
IIOImage(RenderedImage image,<z>
,<z>
{<z>
(image == null) {<z>
;<z>
;<z>
;<z>
;<z>
.metadata = metadata;<z>
, Document docModel) {<z>
();<z>
JLabel(pLabel);<z>
init();<z>
null) {<z>
);<z>
title) {<z>
;<z>
;<z>
this.path = path;<z>
this.title = title;<z>
EStructuralFeature feature, Object value) {<z>
{<z>
SetCommand.UNSET_VALUE;<z>
(commandName);<z>
) {<z>
feature.getEContainingClass());<z>
style, feature, value);<z>
append(command);<z>
) {<z>
(myEditingDomain, cc));<z>
) {<z>
31;<z>
int result = 1;<z>
? 0 : _images.hashCode());<z>
));<z>
return result;<z>
{<z>
(debug) {<z>
.format("[DEBUG] ceres-config: %s", msg));<z>
.ProcessInstance.NodeInstanceContent.StateNode parseFrom(<z>
google.protobuf.ByteString data,<z>
google.protobuf.ExtensionRegistryLite extensionRegistry)<z>
{<z>
)<z>
.buildParsed();<z>
Code() {<z>
(Ctx ctx) {<z>
();<z>
public final void ruleOptionalFeature() throws RecognitionException {<z>
();<z>
( state.backtracking==0 ) {<z>
).getGroup());<z>
;<z>
();<z>
;<z>
(state.failed) return ;<z>
.backtracking==0 ) {<z>
);<z>
) {<z>
;<z>
);<z>
restoreStackSize(stackSize);<z>
{<z>
);<z>
start = System.currentTimeMillis();<z>
complete();<z>
- start;<z>
1000d + " seconds.");<z>
);<z>
String getSelectedUnit() {<z>
unitComboBox == null ? null<z>
((TwoFacedObject) unitComboBox.getSelectedItem())<z>
();<z>
void eUnset(int featureID)<z>
switch (featureID)<z>
case CDODefsPackage.CDO_SESSION_DEF__CONNECTOR_DEF:<z>
;<z>
.CDO_SESSION_DEF__REPOSITORY_NAME:<z>
;<z>
CDO_SESSION_DEF__CDO_PACKAGE_REGISTRY_DEF:<z>
null);<z>
:<z>
);<z>
.eUnset(featureID);<z>
TKwonce node)<z>
if(this._kwonce_ != null)<z>
this._kwonce_.parent(null);<z>
!= null)<z>
null)<z>
().removeChild(node);<z>
;<z>
this._kwonce_ = node;<z>
superComponent ) {<z>
componentData.getVariablesScope();<z>
;<z>
< keys.length; i++ ) {<z>
i ].toString();<z>
= variablesScope.getData( key );<z>
{<z>
userDefinedFunction)cfdata).duplicateAndInherit( superComponent );<z>
;<z>
;<z>
UnicodeProp forPOSIXName(String propName) {<z>
propName.toUpperCase(Locale.ENGLISH));<z>
)<z>
return null;<z>
return valueOf (propName);<z>
, PointerBuffer event) {<z>
;<z>
function_pointer);<z>
.checkBuffer(buffer_offset, 3);<z>
BufferChecks.checkBuffer(host_offset, 3);<z>
checkBuffer(region, 3);<z>
, region, host_row_pitch, host_slice_pitch));<z>
null)<z>
);<z>
null)<z>
checkBuffer(event, 1);<z>
getAddressSafe(event), function_pointer);<z>
.registerCLEvent(event);<z>
__result;<z>
maxValue, int nbBin, boolean integer)<z>
();<z>
this.minValue = minValue;<z>
.maxValue = maxValue;<z>
.integer = integer;<z>
double range = (maxValue - minValue);<z>
;<z>
integer)<z>
range)<z>
bw = 1d;<z>
bw = (range + 1d) / nbBin;<z>
floor(bw));<z>
) / bw)];<z>
nbBin;<z>
];<z>
;<z>
0)<z>
range;<z>
= 0d;<z>
nd) {<z>
poly = getPoly();<z>
, nd);<z>
;<z>
()) {<z>
.setUndefined();<z>
n;<z>
B.inhomX) / 2;<z>
2;<z>
alpha = Kernel.PI_2 / n;<z>
- alpha) / 2;<z>
.inhomY;<z>
B.inhomX - A.inhomX;<z>
tan(beta) / 2;<z>
tanBetaHalf * ny, 1.0);<z>
{<z>
GeoElement) A);<z>
* alpha);<z>
rotate(rotAngle, centerPoint);<z>
= new GeoPoint[n];<z>
A;<z>
points[1] = B;<z>
n; i++)<z>
= outputPoints.getElement(i - 2);<z>
) {<z>
i).modifyInputPoints(points[i],<z>
n]);<z>
);<z>
]));<z>
calcArea();<z>
B, outputPoints.getElement(0));<z>
numOld = n;<z>
{<z>
variableComparator = ScriptDebugManager<z>
.getInstance().getVariableNameComparatorByDebugModel(<z>
));<z>
locals != null) {<z>
(locals, variableComparator);<z>
null) {<z>
globals, variableComparator);<z>
if (classes != null) {<z>
;<z>
return this;<z>
() throws ModelException {<z>
;<z>
= ((ISourceReference) imports[0])<z>
.getSourceRange();<z>
length - 1])<z>
.getSourceRange();<z>
), lastRange<z>
)<z>
getOffset());<z>
range;<z>
, byte[] buffer) {<z>
output;<z>
;<z>
= 0;<z>
length;<z>
property) {<z>
{<z>
.toUpperCase())) {<z>
;<z>
{<z>
e(this, e);<z>
{<z>
.e(this, e);<z>
null;<z>
PaceMatrix b ){<z>
( n != b.n )<z>
IllegalArgumentException("unequal numbers of rows.");<z>
;<z>
n - 1, this );<z>
b );<z>
;<z>
String name)<z>
SystemException {<z>
InlineSQLHelperUtil.isEnabled()) {<z>
, name);<z>
3);<z>
_FILTER_SQL_COUNT_EXPANDOCOLUMN_WHERE);<z>
(_FINDER_COLUMN_T_N_TABLEID_2);<z>
if (name == null) {<z>
(_FINDER_COLUMN_T_N_NAME_1);<z>
equals(StringPool.BLANK)) {<z>
;<z>
_FINDER_COLUMN_T_N_NAME_2);<z>
query.toString(),<z>
(),<z>
;<z>
null;<z>
session = openSession();<z>
sql);<z>
.addScalar(COUNT_COLUMN_NAME,<z>
;<z>
= QueryPos.getInstance(q);<z>
);<z>
if (name != null) {<z>
(name);<z>
();<z>
count.intValue();<z>
e) {<z>
e);<z>
session);<z>
submissions) {<z>
;<z>
));<z>
(SubmissionData submission : submissions) {<z>
;<z>
;<z>
close();<z>
(IOException e) {<z>
{<z>
{<z>
= true;<z>
int size = width*height;<z>
= new int[size];<z>
if (bData != null) {<z>
) {<z>
getRGB(bData[i]);<z>
(iData != null) {<z>
; i++) {<z>
;<z>
getRGBdefault();<z>
;<z>
;<z>
, width, masks, null);<z>
accessor.getDataInt(db);<z>
;<z>
TYPE_INT;<z>
Object value) throws ConverterException<z>
if (value == null) {<z>
return NO_SELECTION_VALUE;<z>
{<z>
.CONTINUE;<z>
updateEnabledState() {<z>
;<z>
>();<z>
null) {<z>
inclusionGroup);<z>
if (exclusionGroup != null) {<z>
exclusionGroup);<z>
{<z>
controls.removeFirst();<z>
(enabled);<z>
instanceof Composite) {<z>
getChildren()));<z>
public boolean isWon()<z>
char c;<z>
(int[] winSet : winSets)<z>
]);<z>
))<z>
= c;<z>
return true;<z>
;<z>
onResume()<z>
!SdCardUnavailableActivity.isExternalStorageAvailable() )<z>
SdCardUnavailableActivity.show( this );<z>
( isUpdateNeeded() )<z>
);<z>
() )<z>
);<z>
;<z>
stopButton.setEnabled( true );<z>
.setEnabled( true );<z>
true );<z>
( false );<z>
onResume();<z>
void interruptPoll() {<z>
int rc = Status.APR_SUCCESS;<z>
synchronized (this) {<z>
!= 0) {<z>
serverPollset);<z>
} else {<z>
("Interrupt with closed pollset");<z>
(rc != Status.APR_SUCCESS) {<z>
;<z>
t) {<z>
();<z>
> FALLBACK_POLL_TIME) {<z>
= FALLBACK_POLL_TIME;<z>
void main(String [] args) {<z>
{<z>
System.err.println("Uso: java TestFirmaDNIe <fichero_original> <fichero_de_firma> <PIN>");<z>
1);<z>
args[0]);<z>
.isFile()) {<z>
]+" no es un nombre de fichero válido");<z>
System.exit(1);<z>
new File(args[1]);<z>
) {<z>
" no es un nombre de fichero válido");<z>
.exit(1);<z>
.length()!=256) {<z>
]+" no corresponde a un fichero de firma");<z>
;<z>
String pin=PinDialog.showPinDialog();<z>
{<z>
println("Operación cancelada por el usuario");<z>
.exit(0);<z>
System.err.println("Inicializacion");<z>
(pin);<z>
.err.println("Verificacion de la firma");<z>
;<z>
(result) {<z>
("Verificación de firma correcta");<z>
.out.println("Operación completada con éxito");<z>
{<z>
.println("Verificación de firma fallida");<z>
exit(0);<z>
catch( Exception e) {<z>
));<z>
();<z>
exit(1);<z>
) {<z>
onCreate(savedInstanceState);<z>
).getThemedContext();<z>
{<z>
<AbMenu>();<z>
AbMenu(R.drawable.ab_planner,<z>
, 0));<z>
drawable.ab_twit,<z>
.string.btn_home_twitter), 1));<z>
drawable.ab_traffic,<z>
), 2));<z>
drawable.ab_chat,<z>
), 3));<z>
(new AbMenu(R.drawable.ab_starred,<z>
string.btn_home_starred), 4));<z>
(R.drawable.ab_closest,<z>
;<z>
AbMenu(R.drawable.ab_settings,<z>
6));<z>
7));<z>
drawable.ab_map,<z>
), 8));<z>
(context,<z>
, data);<z>
setNavigationMode(<z>
.NAVIGATION_MODE_LIST);<z>
).setListNavigationCallbacks(adapter, this);<z>
().setDisplayShowHomeEnabled(false);<z>
;<z>
);<z>
{<z>
agentName);<z>
null) {<z>
;<z>
} else {<z>
return agent.getCapabilities();<z>
) throws Exception<z>
;<z>
setInvocationProperty(AjaxConnector.COMETD_CLIENT, client);<z>
.getReplyTo();<z>
replyTo != null)<z>
, PropertyScope.INBOUND);<z>
routeMessage(messageToRoute);<z>
null : event.getMessage();<z>
(getConnector() instanceof AjaxConnector)<z>
;<z>
null)<z>
), message, replyTo);<z>
null;<z>
monitor ) throws Exception {<z>
);<z>
);<z>
= handler.getEditBlackboard(editLayer);<z>
.startBatchingEvents();<z>
) {<z>
(editBlackboard, geom);<z>
.currentState);<z>
.fireBatchedEvents();<z>
);<z>
() throws RecognitionException {<z>
();<z>
==0 ) {<z>
().getNameValidIDParserRuleCall_2_0());<z>
);<z>
);<z>
._fsp--;<z>
state.failed) return ;<z>
if ( state.backtracking==0 ) {<z>
getNameValidIDParserRuleCall_2_0());<z>
catch (RecognitionException re) {<z>
);<z>
recover(input,re);<z>
stackSize);<z>
value)<z>
0 || idx > size)<z>
size));<z>
pageSize;<z>
% pageSize;<z>
pageIdx] = value;<z>
index) {<z>
) {<z>
case 0: return this.left;<z>
this.right;<z>
);<z>
public SimpleListView(Context context, AttributeSet attrs) {<z>
10);<z>
;<z>
();<z>
int k, EntityLiving entityliving)<z>
, j, k);<z>
int l;<z>
oldmeta == 12){<z>
;<z>
) / 360F) + 0.5D) & 3;<z>
0)<z>
j, k, 2 + oldmeta );<z>
(l == 1)<z>
oldmeta );<z>
== 2)<z>
, 3 + oldmeta );<z>
l == 3)<z>
0 + oldmeta);<z>
) throws AxisFault {<z>
();<z>
SOAPFaultDetail detail = flt.getDetail();<z>
operation, flt);<z>
null)<z>
null;<z>
.iterator().next();<z>
getName());<z>
odeMsgEl.appendChild(partel);<z>
) != null) {<z>
importNode(<z>
), true));<z>
else {<z>
true));<z>
;<z>
base, String path) throws XMLDBException, IOException {<z>
listChildCollections();<z>
childCols != null) {<z>
= null;<z>
childCol : childCols) {<z>
col = base.getChildCollection(childCol);<z>
if (col != null) {<z>
Project.MSG_DEBUG);<z>
destDir;<z>
subdir;<z>
(path != null) {<z>
);<z>
childCol;<z>
else {<z>
childCol;<z>
exists() && createdirectories == true) {<z>
;<z>
col, subdir);<z>
== true) {<z>
subdir);<z>
Exception {<z>
anzahl;<z>
int verarbeitet;<z>
();<z>
;<z>
{<z>
anzahl = dtblm.getRowCount();<z>
){<z>
){<z>
> 0){<z>
(anzahl-1)){<z>
;<z>
);<z>
+<z>
(aktuell,14) ;<z>
){<z>
else{<z>
);<z>
{<z>
.dieseMaschine+zeit);<z>
}else{<z>
img,aktuell,1);<z>
) ){<z>
SuchenSeite.mussUnterbrechen)<z>
)<z>
()-1))<z>
==anzahl) ){<z>
);<z>
;<z>
;<z>
img2 = null;<z>
;<z>
throws XPathExpressionException, ParserConfigurationException {<z>
if (searchingConfig == null) {<z>
XPathHelper.newXPath();<z>
searchingConfigExpr = "//searchingConfig";<z>
);<z>
;<z>
() {<z>
.get().getI18nManager();<z>
LOGIN_USERNAME);<z>
getMessage(Messages.LOGIN_PASSWORD);<z>
(Messages.LOGIN_BUTTON);<z>
, final IPluginContext context,<z>
,<z>
model, final String siteName) {<z>
breadCrumbModel);<z>
setOutputMarkupId(true);<z>
model = model;<z>
(new Image("img_component", "images/component-48.png"));<z>
,<z>
model, "componentName")));<z>
,<z>
(model, "componentType")));<z>
final AjaxBreadCrumbLink edit =<z>
new AjaxBreadCrumbLink("edit-component",<z>
breadCrumbModel, siteName) {<z>
=<z>
getParticipant(<z>
String componentId, final String siteName) {<z>
return new ComponentPanel(<z>
componentId, context, breadCrumbModel,<z>
);<z>
setVisible(true);<z>
);<z>
AjaxLinkLabel("delete-component",<z>
)) {<z>
= 3776750333491622263L;<z>
public void onClick(final AjaxRequestTarget target) {<z>
.class.getName(),<z>
(<z>
(model, this) {<z>
final long serialVersionUID =<z>
5828988483261392319L;<z>
) {<z>
name =<z>
())<z>
.getComponentName();<z>
model);<z>
siteName);<z>
{<z>
"component-delete-title";<z>
String getTextKey() {<z>
"component-delete-text";<z>
});<z>
);<z>
(int property)<z>
] listeners = fListeners.getListeners();<z>
; i++)<z>
propertyChanged(this, property);<z>
(final Plugin plugin) {<z>
entrySet()) {<z>
);) {<z>
equals(i.next()) )<z>
.remove();<z>
Element child, Element by) {<z>
super.replaceChild(child, by))<z>
true;<z>
()) {<z>
setTryStatement((Statement)by);<z>
return true;<z>
{<z>
;<z>
;<z>
class, this, child, by);<z>
(String s)<z>
.length() == 0)<z>
null;<z>
))<z>
) - "(sec)".length()));<z>
parseDouble(s);<z>
evaluate(){<z>
contentListContains("is", "dealer")){<z>
();<z>
if(contentListContains("is", "ticket")){<z>
);<z>
configTicket();<z>
();<z>
;<z>
String[] options )<z>
( PlatformManagerCapabilities.AccessExplicitVMOptions );<z>
= checkAndGetLocalVMOptionFile();<z>
String>();<z>
()){<z>
;<z>
{<z>
.delete();<z>
.renameTo( backup )){<z>
));<z>
boolean ok = false;<z>
);<z>
){<z>
println( option );<z>
= true;<z>
}finally{<z>
.close();<z>
{<z>
!ok ){<z>
;<z>
);<z>
Throwable e ){<z>
(e) } )));<z>
,<z>
Exception {<z>
) {<z>
;<z>
decodeNetworkPacket(buf);<z>
) {<z>
this.frameGeometry = gm;<z>
titlePane != null) {<z>
titlePane.getHeight()));<z>
points(){<z>
>();<z>
(ig){<z>
); i++)<z>
) instanceof IPoint)<z>
));<z>
[points.size()]);<z>
pickupItem(RoamingItem roamingItem) {<z>
;<z>
= roamingItem.getOwner();<z>
&& owner!=this) {<z>
+ owner.getName());<z>
roamingItem.stopDeleteTimer();<z>
this, roamingItem);<z>
roamingItem);<z>
() {<z>
getLabelText());<z>
());<z>
);<z>
) {<z>
).refreshFeedback();<z>
{<z>
releaseExternalResources( );<z>
);<z>
return true;<z>
int chunkSize) {<z>
<List<T>>();<z>
chunkSize);<z>
(currentChunk);<z>
int counter = 0;<z>
entry : list) {<z>
currentChunk.add(entry);<z>
;<z>
% chunkSize == 0) {<z>
);<z>
(currentChunk);<z>
isEmpty())<z>
;<z>
return chunkList;<z>
, FileRequest request) throws IOException {<z>
instanceof FolderContents)<z>
response);<z>
if (response instanceof File) {<z>
File)response, request);<z>
"I dont know how to obtain a tuple from type: " + response.getClass());<z>
= new Handler() {<z>
{<z>
Log.d(TAG, "______________________handle_message");<z>
.STATE_DONE == msg.arg2) {<z>
msg.getData();<z>
itemKey = data.getString("itemKey");<z>
itemKey != null) {<z>
if (collectionKey != null) {<z>
(itemKey, db);<z>
collectionKey, db);<z>
coll.add(item);<z>
;<z>
);<z>
mProgressDialog = null;<z>
+itemKey);<z>
(), ItemDataActivity.class);<z>
, itemKey);<z>
(i);<z>
ProgressThread.STATE_PARSING == msg.arg2) {<z>
getString(R.string.identifier_processing));<z>
== msg.arg2) {<z>
);<z>
(getApplicationContext(),<z>
getString(R.string.identifier_lookup_failed),<z>
Toast.LENGTH_SHORT).show();<z>
ProgressThread.STATE_DONE);<z>
eFeature ) {<z>
) {<z>
.MIME_PART__MIME_ELEMENTS:<z>
);<z>
:<z>
)null);<z>
);<z>
void handleREJECTOFFER(RejectOffer mes)<z>
.get(mes.getGame());<z>
if (brainQ != null)<z>
);<z>
CutoffExceededException exc)<z>
exc);<z>
void paintComponent(Graphics g) {<z>
;<z>
g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,<z>
RenderingHints.VALUE_ANTIALIAS_ON);<z>
bottomColor);<z>
.setPaint(gp);<z>
;<z>
g);<z>
);<z>
(text);<z>
1);<z>
textShadow);<z>
1, getHeight()-3);<z>
g2d.setColor(textColor);<z>
getHeight()-4);<z>
public void loadPalettes() {<z>
SEQUENTIAL);<z>
(DIVERGING);<z>
(QUALITATIVE);<z>
PathParam("type") String type,<z>
PathParam("uuid") String uuid) throws SrampAtomException {<z>
type);<z>
newInstance();<z>
(uuid, artifactType);<z>
if (artifact == null)<z>
("Artifact not found.");<z>
= new ArtifactToFullAtomEntryVisitor();<z>
visitor, artifact);<z>
visitor.getAtomEntry();<z>
e) {<z>
new SrampAtomException(e);<z>
boolean seeding )<z>
seeding ){<z>
( new SeedingUnchoker());<z>
{<z>
));<z>
) {<z>
;<z>
.messageConsumer.setMessageListener(listener);<z>
catch (JMSException ex) {<z>
);<z>
;<z>
,<z>
name_resource)<z>
;<z>
.NULL);<z>
;<z>
CURSOR_HAND));<z>
setForeground(Colors.blue);<z>
{<z>
arg0) {<z>
;<z>
arg0) {<z>
();<z>
;<z>
oldtext, String langCode) {<z>
.setTextAttribute(textAttribute);<z>
oldtext);<z>
);<z>
currentScope, FlowContext flowContext, FlowInfo flowInfo) {<z>
.ignoreFurtherInvestigation)<z>
;<z>
tagBits & FlowInfo.UNREACHABLE) == 0) {<z>
;<z>
localType = (LocalTypeBinding) this.binding;<z>
localType));<z>
);<z>
;<z>
e) {<z>
= true;<z>
flowInfo;<z>
Thread threadToStop, int sleepTime )<z>
;<z>
threadToStop = threadToStop;<z>
sleepTime;<z>
( Thread.MIN_PRIORITY );<z>
()<z>
("#");<z>
{<z>
digits()) {<z>
buffer.append('.');<z>
append('0');<z>
.append('.');<z>
.append('#');<z>
;<z>
()<z>
)<z>
new MavenXpp3Reader();<z>
= new FileInputStream(getUnderlyingResourceObject());<z>
> 0)<z>
= reader.read(stream);<z>
);<z>
));<z>
)<z>
(e);<z>
(QuestEnv env)<z>
env.getPlayer();<z>
().getQuestState(questId);<z>
1096);<z>
null)<z>
< 50)<z>
return false;<z>
() != QuestStatus.COMPLETE)<z>
;<z>
.setQuestId(questId);<z>
START);<z>
;<z>
return false;<z>
(<z>
String humanReadableCommandName,<z>
launcher,<z>
machineReadableCommand,<z>
,<z>
final Lock synchronizationLockObjectOrNull,<z>
> environmentVariables,<z>
directoryToRunCommandFrom,<z>
final TaskListener listenerToLogFailuresTo,<z>
final Logger loggerToLogFailuresTo,<z>
final ICmdOutputParser<TResult, TContext> commandOutputParser,<z>
final TContext commandOutputParserContext) {<z>
;<z>
ByteArrayStream();<z>
final OutputStream stdoutStream = stdout.getOutput();<z>
.getOutput();<z>
machineReadableCommand, masksOrNull,<z>
, stderrStream);<z>
, loggerToLogFailuresTo,<z>
);<z>
= runCommandToCompletion(starter, synchronizationLockObjectOrNull);<z>
InputStream outputFromCommand = stdout.getInput();<z>
);<z>
0) {<z>
, humanReadableCommandName,<z>
, listenerToLogFailuresTo);<z>
null;<z>
commandOutputParser.parse(outputFromCommand, commandOutputParserContext);<z>
;<z>
catch (Exception ex) {<z>
, ex,<z>
listenerToLogFailuresTo);<z>
return null;<z>
} finally {<z>
.close();<z>
;<z>
) {<z>
ex,<z>
loggerToLogFailuresTo, listenerToLogFailuresTo);<z>
{<z>
;<z>
result.fCaptureDefault = fCaptureDefault;<z>
!= null) {<z>
{<z>
!= null) {<z>
);<z>
(fDeclarator != null) {<z>
(fDeclarator.copy(style));<z>
!= null) {<z>
fBody.copy(style));<z>
setOffsetAndLength(this);<z>
{<z>
.setCopyLocation(this);<z>
result;<z>
int length,<z>
forward, final Position annotationPosition) {<z>
;<z>
= null;<z>
null;<z>
null;<z>
;<z>
(<z>
);<z>
;<z>
Integer.MAX_VALUE;<z>
()<z>
getEditorInput());<z>
model,<z>
;<z>
while (e.hasNext()) {<z>
Annotation a = e.next();<z>
a instanceof IErlangAnnotation<z>
((IErlangAnnotation) a).hasOverlay()<z>
!isNavigationTarget(a)) {<z>
= model.getPosition(a);<z>
(p == null) {<z>
forward && p.offset == offset || !forward<z>
+ length) {<z>
|| forward<z>
&& p.length >= containingAnnotationPosition.length<z>
|| !forward<z>
< containingAnnotationPosition.length) {<z>
= a;<z>
;<z>
length;<z>
{<z>
0;<z>
if (forward) {<z>
= p.getOffset() - offset;<z>
if (currentDistance < 0) {<z>
currentDistance;<z>
distance<z>
distance<z>
{<z>
distance = currentDistance;<z>
a;<z>
p;<z>
{<z>
= offset + length<z>
length);<z>
currentDistance < 0) {<z>
currentDistance = endOfDocument + currentDistance;<z>
currentDistance < distance<z>
distance<z>
nextAnnotationPosition.length) {<z>
distance = currentDistance;<z>
a;<z>
;<z>
if (containingAnnotationPosition != null<z>
currentAnnotation || nextAnnotation == null)) {<z>
.setOffset(containingAnnotationPosition<z>
);<z>
containingAnnotationPosition<z>
getLength());<z>
containingAnnotation;<z>
!= null) {<z>
;<z>
(nextAnnotationPosition.getLength());<z>
return nextAnnotation;<z>
)<z>
bound.minY );<z>
.set( bound );<z>
value)<z>
0,<z>
= 1,<z>
getChars();<z>
) {<z>
digit(chars[i], 10);<z>
{<z>
;<z>
10;<z>
else {<z>
" to a long.");<z>
longValue;<z>
changed) {<z>
);<z>
);<z>
size;<z>
layout != null) {<z>
LAYOUT_CHANGED) != 0;<z>
changed);<z>
~LAYOUT_CHANGED;<z>
{<z>
size = minimumSize ();<z>
; int height = size.y;<z>
) width = DEFAULT_WIDTH;<z>
if (height == 0) height = DEFAULT_HEIGHT;<z>
wHint != SWT.DEFAULT) width = wHint;<z>
height = hHint;<z>
, width, height);<z>
width, titleSize.x + 6);<z>
;<z>
width, height);<z>
(Interface instance) {<z>
instance);<z>
;<z>
(RuntimeException e) {<z>
, e);<z>
obj) {<z>
) {<z>
false;<z>
)) {<z>
return false;<z>
(EnvelopeWithTimePeriodType) obj;<z>
)) {<z>
return false;<z>
equals(other.endPosition))) {<z>
;<z>
.equals(other.frame)) {<z>
false;<z>
true;<z>
String ignored) {<z>
String macroOptions = Macro.getOptions();<z>
"";<z>
;<z>
= false;<z>
null) {<z>
"substring", null);<z>
( value != null ) {<z>
= value;<z>
.getValue(macroOptions, "keep", null);<z>
if( value != null ) {<z>
+"'");<z>
null);<z>
!= null ) {<z>
+"'");<z>
] wList = WindowManager.getIDList();<z>
) {<z>
error("No images are open.");<z>
< 2 ) {<z>
"Must have at least two images open.");<z>
matchingTitles = new ArrayList<String>();<z>
ImagePlus>();<z>
=new ImagePlus[wList.length];<z>
[wList.length];<z>
int totalMatchingTitles = 0;<z>
i < wList.length; i++) {<z>
(wList[i]);<z>
.getTitle() : "";<z>
indexOf(mustHaveSubstring) >= 0 ) {<z>
out.println("Yes, matched: "+title);<z>
matchingTitles.add(title);<z>
);<z>
+"' in: "+title);<z>
.size() < 2 ) {<z>
"'");<z>
;<z>
.get(0));<z>
1));<z>
;<z>
);<z>
) {<z>
new int[2];<z>
0] = gd.getNextChoiceIndex();<z>
.getNextChoiceIndex();<z>
] sourceImages = new ImagePlus[2];<z>
]);<z>
matchingImages.get(index[1]);<z>
1] );<z>
;<z>
new ModelessQuestions("Rate This Registration",rgbResult);<z>
, 20, "Your message:" );<z>
"Something");<z>
q.addLabel("Just a label.");<z>
q.addCompletingButton("ok","Done");<z>
"Rubbish!");<z>
10; ++i ) {<z>
""+i);<z>
();<z>
("Finished waiting for answers!");<z>
{<z>
i < allImages.length; ++i ) {<z>
.close();<z>
public final void rule__XAssignment__Group_1_1_0_0__0() throws RecognitionException {<z>
();<z>
;<z>
;<z>
--;<z>
failed) return ;<z>
pushFollow(FOLLOW_rule__XAssignment__Group_1_1_0_0__1_in_rule__XAssignment__Group_1_1_0_0__06590);<z>
();<z>
state._fsp--;<z>
.failed) return ;<z>
catch (RecognitionException re) {<z>
);<z>
(input,re);<z>
(stackSize);<z>
{<z>
;<z>
(Group g : group.childGroups) {<z>
;<z>
IInteractionElement node) {<z>
.getActivePage();<z>
if (page != null) {<z>
>(4);<z>
)) {<z>
ICElement.class);<z>
null<z>
{<z>
add(reference);<z>
(PartInitException e) {<z>
) {<z>
()]), true);<z>
{<z>
);<z>
= getClient("");<z>
);<z>
new ArrayList<Image>();<z>
Image image : images) {<z>
(image);<z>
);<z>
return imageList;<z>
{<z>
ChatPassword, StartTimer, IncomingGameFileNames );<z>
cloneBasicAttributes( clone );<z>
return clone;<z>
void rule__XMemberFeatureCall__Group__1__Impl() throws RecognitionException {<z>
();<z>
if ( state.backtracking==0 ) {<z>
().getAlternatives_1());<z>
2;<z>
input.LA(1) ) {<z>
case 35:<z>
);<z>
) ) {<z>
=1;<z>
case 75:<z>
= input.LA(2);<z>
) ) {<z>
1;<z>
76:<z>
.LA(2);<z>
( (synpred77_InternalMyDsl()) ) {<z>
alt50=1;<z>
(alt50) {<z>
case 1 :<z>
pushFollow(FOLLOW_rule__XMemberFeatureCall__Alternatives_1_in_rule__XMemberFeatureCall__Group__1__Impl12813);<z>
();<z>
state._fsp--;<z>
.failed) return ;<z>
loop50;<z>
} while (true);<z>
==0 ) {<z>
getAlternatives_1());<z>
RecognitionException re) {<z>
re);<z>
;<z>
restoreStackSize(stackSize);<z>
annType) {<z>
JavaAnnotation jann = new JavaAnnotation();<z>
setFullName(annType.getName());<z>
jann;<z>
getOpaqueRGBImage() {<z>
BufferedImage.TYPE_INT_ARGB) {<z>
bimage.getWidth();<z>
.getHeight();<z>
;<z>
.getDataBuffer();<z>
, 0);<z>
0; i < size; i++) {<z>
>>> 24) != 0xff) {<z>
return bimage;<z>
= new DirectColorModel(24,<z>
0x000000ff);<z>
0x00ff0000, 0x0000ff00, 0x000000ff};<z>
, h, w,<z>
);<z>
createImage(opModel, opRaster,<z>
;<z>
opImage;<z>
} catch (Exception e) {<z>
;<z>
;<z>
public void setProperties(Properties props) {<z>
) ) {<z>
String)key;<z>
props.getProperty(keyStr);<z>
) {<z>
.equalsIgnoreCase(KEY_NAME) ) {<z>
(value);<z>
.equalsIgnoreCase(KEY_NAME_IN_SOURCE) ) {<z>
;<z>
keyStr.equalsIgnoreCase(KEY_DESCRIPTION) ) {<z>
setDescription(value);<z>
) ) {<z>
);<z>
) ) {<z>
value);<z>
(keyStr.equalsIgnoreCase(KEY_UNIQUE_KEY_NAME) ) {<z>
value);<z>
{<z>
(value);<z>
OctetBufferListener octetBufferListener) throws IOException {<z>
{<z>
& 0xFF;<z>
} else {<z>
!= null) {<z>
onBeforeOctetBufferOverwrite();<z>
;<z>
if (_octetBufferOffset < _octetBufferEnd) {<z>
_octetBuffer[_octetBufferOffset];<z>
offset = 1;<z>
;<z>
{<z>
"message.EOF"));<z>
_octetBufferOffset = 0;<z>
;<z>
) {<z>
(context);<z>
setFocusable(true);<z>
(true);<z>
;<z>
;<z>
Align.CENTER);<z>
.ANTI_ALIAS_FLAG);<z>
mLabelPaint.setTextSize(8);<z>
Align.CENTER);<z>
] pos = mPos;<z>
index = 0;<z>
{<z>
= col * 20 + 10;<z>
) {<z>
= x;<z>
++] = row * YMUL + YBASE;<z>
public static String[] getThemes( )<z>
);<z>
list.add( CHOICE_NONE );<z>
= SessionHandleAdapter.getInstance( )<z>
);<z>
= handle.getVisibleThemes( IAccessControl.DIRECTLY_INCLUDED_LEVEL )<z>
;<z>
iterator != null )<z>
)<z>
;<z>
) );<z>
.toArray( new String[0] );<z>
int destPort,<z>
short windowSize)<z>
int seqNum = seqNumber;<z>
ackNumber;<z>
;<z>
= false;<z>
false;<z>
;<z>
= true;<z>
= false;<z>
true;<z>
, seqNum, ackNum, offset,<z>
));<z>
getTooltip()<z>
.get(TOOLTIP_KEY);<z>
!= null ? string : getName();<z>
) throws RecognitionException {<z>
();<z>
.backtracking==0 ) {<z>
.getLiteralListAccess().getCommaKeyword_2_2());<z>
2;<z>
(1);<z>
KEYWORD_8) ) {<z>
=1;<z>
switch (alt106) {<z>
case 1 :<z>
(state.failed) return ;<z>
( state.backtracking==0 ) {<z>
());<z>
(RecognitionException re) {<z>
);<z>
;<z>
);<z>
{<z>
);<z>
);<z>
linenumber=1;<z>
)){<z>
);<z>
);<z>
scanner.close();<z>
loan) throws AccountException {<z>
NO);<z>
)) {<z>
.getAccountId()),<z>
);<z>
) {<z>
new AccountException(e);<z>
boolean needsJavaNature(IFeatureModel model) {<z>
getInstallHandler();<z>
) {<z>
return false;<z>
();<z>
|| libName.length() <= 0) {<z>
false;<z>
getInstallLocation(), libName);<z>
lib.exists();<z>
String label, String[] args)<z>
(Player) sender : null;<z>
("fastfood.admin"))<z>
.tell(sender, "You do not have permission to use this command.");<z>
;<z>
;<z>
;<z>
[2].toLowerCase() : null;<z>
arg1 == null)<z>
sender, "Usage:");<z>
(sender, "- /ff sethealth <material> <value>");<z>
(sender, "- /ff gethealth <material>");<z>
sender, "- /ff settings <setting> <value>");<z>
;<z>
equals("sethealth"))<z>
if (arg2 == null || arg3 == null)<z>
"Usage: /ff sethealth <material> <value>");<z>
true;<z>
(arg2);<z>
== null)<z>
"' could not be found.");<z>
true;<z>
(!arg3.matches("(-)?[0-9]+"))<z>
.tell(sender, "Value must be an integer.");<z>
true;<z>
arg3);<z>
(mat, value);<z>
0)<z>
);<z>
else if (value > 0)<z>
+ value + " points when eaten.");<z>
+ " points when eaten.");<z>
return true;<z>
if (arg1.equals("gethealth"))<z>
== null)<z>
plugin.tell(sender, "Usage: /ff gethealth <material>");<z>
return true;<z>
Material mat = getMaterial(arg2);<z>
)<z>
(sender, "Item '" + arg2 + "' could not be found.");<z>
;<z>
));<z>
return true;<z>
("settings"))<z>
|| arg3 == null)<z>
plugin.tell(sender, "Usage: /ff settings <setting> <value>");<z>
return true;<z>
replaceAll("-", ""));<z>
setting == null)<z>
"'.");<z>
true;<z>
if (!setting.valid(arg3))<z>
+ "' is not a valid setting for '" + arg2 + "'.");<z>
return true;<z>
(arg3));<z>
();<z>
+ arg3);<z>
;<z>
else if (arg1.equals("food"))<z>
= Integer.parseInt(arg2);<z>
= (Player) sender;<z>
food);<z>
true;<z>
.equals("health"))<z>
parseInt(arg2);<z>
;<z>
(health);<z>
return true;<z>
return false;<z>
getPunctuation(final EditorCell cell) {<z>
Style(cell);<z>
);<z>
return style;<z>
) {<z>
.conflictCont = (ExcludePairContainer) pc;<z>
();<z>
this.grammar == null)<z>
getGrammar();<z>
) {<z>
.incomingServer;<z>
this.streamID = streamID;<z>
= text;<z>
) {<z>
getFilter();<z>
getActiveShell(),<z>
(),<z>
);<z>
);<z>
);<z>
new ModelProjectSelectionStatusValidator() );<z>
);<z>
getWorkspace().getRoot() );<z>
[ 1 ];<z>
== Window.OK ) {<z>
= dlg.getResult();<z>
: (IContainer)objs[0] );<z>
public State optimisticTraverse(State s0) {<z>
().getBestDwellTime(stopIndex);<z>
s0.edit(this);<z>
.incrementTimeInSeconds(dwellTime);<z>
s1.setBackMode(getMode());<z>
dwellTime);<z>
();<z>
void stopCapture() {<z>
&& this.isRecording) {<z>
this.isRecording = false;<z>
.stopRecord();<z>
.startRecordTime = 0;<z>
commit();<z>
catch (IOException e) {<z>
.printStackTrace();<z>
"gestoppt");<z>
void main(final String[] args) {<z>
= new ClassPathXmlApplicationContext("application-context.xml");<z>
"employeeXmlWebService", RestTemplate.class);<z>
, RestTemplate.class);<z>
"http://localhost:8080/rest/employee/names");<z>
;<z>
uri, String.class));<z>
catch (RestClientException ex) {<z>
));<z>
;<z>
;<z>
.class));<z>
(RestClientException ex) {<z>
.getMessage());<z>
URI uri = new URI("http://localhost:8080/rest/employee/vera");<z>
LOGGER.info(uri);<z>
getForObject(uri, String.class));<z>
RestClientException ex) {<z>
));<z>
);<z>
;<z>
employee = new Employee(500, "john");<z>
employee);<z>
Employee.class));<z>
(RestClientException ex) {<z>
.warn(ex.getMessage());<z>
URISyntaxException e) {<z>
public void initService() {<z>
info("Registering UACommsClient with XMPP Communication Manager");<z>
getCommsMgr().register(this);<z>
} catch (CommunicationException e) {<z>
.printStackTrace();<z>
getIdManager().fromJid("XCManager.societies.local");<z>
) {<z>
();<z>
{<z>
(method)) {<z>
;<z>
(ActionEvent ae) throws AbortProcessingException<z>
debug("*****Log: inside AuthorActionListener =debugging ActionEvent: " + ae);<z>
();<z>
();<z>
GradingService();<z>
AuthorBean author = (AuthorBean) ContextUtil.lookupBean(<z>
;<z>
getProtocol());<z>
ServerConfigurationService.getString("samigo.showAssessmentTypes");<z>
{<z>
(Boolean.FALSE);<z>
(Boolean.TRUE);<z>
ArrayList templateList = assessmentService.getTitleOfAllActiveAssessmentTemplates();<z>
)==1){<z>
setShowTemplateList(false);<z>
(templateList);<z>
(templateList);<z>
("1");<z>
, gradingService, publishedAssessmentService);<z>
getString("samigo.editPubAssessment.restricted");<z>
).equals("false")) {<z>
;<z>
setEditPubAssessmentRestricted(true);<z>
) ContextUtil.lookupBean("authorization");<z>
getGradeOwnAssessment());<z>
));<z>
{<z>
{<z>
.getIdentifier();<z>
return null;<z>
ContextMenu menu,<z>
,<z>
menuInfo)<z>
;<z>
ExpandableListContextMenuInfo) menuInfo;<z>
) {<z>
;<z>
.delete);<z>
;<z>
(String path) throws IOException {<z>
dirNumLastAccessed]),<z>
path);<z>
;<z>
;<z>
catch (DiskErrorException d) {<z>
.stringifyException(d));<z>
null;<z>
private boolean saveRrr() {<z>
true).size() <= 0) {<z>
;<z>
close();<z>
true;<z>
false;<z>
throws TemplateModelException {<z>
(cachedResult == null) {<z>
.getEffectiveURLEscapingCharset();<z>
{<z>
TemplateModelException(<z>
"foo?url('ISO-8859-1').");<z>
.URLEnc(target, cs);<z>
) {<z>
new TemplateModelException(<z>
, e);<z>
;<z>
protected Content newContent(<z>
,<z>
) {<z>
();<z>
;<z>
atomEntryContentType == AtomEntryContent.Type.HTML) {<z>
HTML);<z>
{<z>
);<z>
.TEXT) {<z>
);<z>
Type.XHTML) {<z>
XHTML);<z>
.Type.XML) {<z>
Type.XML);<z>
IllegalArgumentException();<z>
void parseDetachedState(ClassMetaData meta,<z>
{<z>
null) {<z>
)<z>
(null);<z>
detached.fieldName()))<z>
ClassMetaData.SYNTHETIC);<z>
detached.fieldName());<z>
else {<z>
Field[]) AccessController.doPrivileged(<z>
getDeclaredFieldsAction(<z>
meta.getDescribedType()));<z>
i < fields.length; i++)<z>
if ((AccessController.doPrivileged(J2DoPrivHelper<z>
class)))<z>
.booleanValue())<z>
);<z>
BundleContext context) throws Exception {<z>
List<FriendID> selectIDs() {<z>
<FriendID, FriendID, FriendID, QCharacterFriend>(<z>
characterFriend, mapper<z>
(QCharacterFriend.characterFriend)) {<z>
protected OQueryContextNative query(<z>
record, QCharacterFriend e) {<z>
null;<z>
});<z>
keys() {<z>
;<z>
();<z>
{<z>
r.add(f);<z>
r;<z>
{<z>
= new IIOMetadataNode("Compression");<z>
IIOMetadataNode node = null;<z>
new IIOMetadataNode("CompressionTypeName");<z>
);<z>
;<z>
);<z>
;<z>
compression_node.appendChild(node);<z>
);<z>
"1");<z>
compression_node.appendChild(node);<z>
compression_node;<z>
String key, final T value) {<z>
.key = key;<z>
.value = value;<z>
;<z>
setSection("default");<z>
);<z>
;<z>
{<z>
);<z>
(simpleName))<z>
;<z>
imports.get(simpleName);<z>
null) {<z>
imported.equals(clazz))<z>
return simpleName;<z>
;<z>
(simpleName, clazz);<z>
simpleName;<z>
game) {<z>
);<z>
{<z>
== type) {<z>
), game)) {<z>
return true;<z>
return false;<z>
final int initMaxChunkSize) {<z>
;<z>
= 0;<z>
length);<z>
) {<z>
{<z>
OtpErlangBinary((byte[]) obj);<z>
} else if (obj instanceof Boolean) {<z>
) obj);<z>
obj instanceof Byte) {<z>
obj);<z>
Character) {<z>
(Character) obj);<z>
Double) {<z>
) obj);<z>
Float) {<z>
Float) obj);<z>
(obj instanceof Integer) {<z>
new OtpErlangInt((Integer) obj);<z>
Long) {<z>
);<z>
) {<z>
(Short) obj);<z>
) {<z>
;<z>
} else {<z>
throw new ErlangConversionException(<z>
getClass()<z>
+ "] to an Erlang data type.");<z>
) throws FileNotFoundException {<z>
>();<z>
'|', '"')) {<z>
);<z>
String> anchors = collectAnchors(articles);<z>
File("./data/prog_anchors.csv"));<z>
anchor : anchors) {<z>
);<z>
();<z>
protected void unpackSequenceControlField() {<z>
;<z>
;<z>
x >> 4;<z>
(ItemEvent e) {<z>
.length; i++) {<z>
[i]) {<z>
[i].length; j++) {<z>
i][j]<z>
getStateChange() == ItemEvent.SELECTED);<z>
) {<z>
== null) {<z>
;<z>
_fonts;<z>
host) {<z>
( host == null ) {<z>
false;<z>
(host.toLowerCase()) ) {<z>
;<z>
toLowerCase());<z>
( removed ) {<z>
_hosts, ",");<z>
;<z>
boolean allConnectionsAvailable()<z>
); j++)<z>
get(j)).inUse())<z>
false;<z>
true;<z>
String[] userList, String[] permissions)<z>
throws UserAdminException {<z>
();<z>
(permissions != null &&<z>
.equals(loggedInUserName)){<z>
(permissions);<z>
-1 ||<z>
, "/permission") > -1){<z>
.error("An attempt to create role with admin permission");<z>
);<z>
);<z>
(roleName, userList, null);<z>
updateRoleUIPermission(roleName, permissions);<z>
} catch (UserStoreException e) {<z>
(), e);<z>
) {<z>
;<z>
getMessage(), e);<z>
DataOutputStream dos) throws IOException {<z>
;<z>
if (node instanceof UnionTypeClassNode) {<z>
= (UnionTypeClassNode) node;<z>
delegates = union.getDelegates();<z>
(delegates.length);<z>
) {<z>
;<z>
LowestUpperBoundClassNode) {<z>
(LowestUpperBoundClassNode) node;<z>
lub.getLubName());<z>
);<z>
interfaces = lub.getInterfaces();<z>
null) {<z>
1);<z>
else {<z>
.writeInt(interfaces.length);<z>
ClassNode anInterface : interfaces) {<z>
dos);<z>
)) {<z>
dos.writeBoolean(true);<z>
), dos);<z>
} else {<z>
(false);<z>
));<z>
());<z>
getGenericsTypes();<z>
{<z>
.writeInt(-1);<z>
{<z>
.length);<z>
GenericsType type : genericsTypes) {<z>
isPlaceholder());<z>
;<z>
(type.getType(), dos);<z>
();<z>
(lb == null) {<z>
(false);<z>
else {<z>
dos.writeBoolean(true);<z>
;<z>
();<z>
if (upperBounds == null) {<z>
;<z>
else {<z>
writeInt(upperBounds.length);<z>
ClassNode bound : upperBounds) {<z>
(bound, dos);<z>
static final PeakDetectionStrategy ABSOLUTEHEIGHT = new PeakDetectionStrategy() {<z>
Peak> detect(Histogram histogram, int windowSize,<z>
{<z>
getMedian() * thresholdFactor / 10;<z>
>();<z>
(); i++) {<z>
currentValue = histogram.getCountForClass(i);<z>
- 1);<z>
i + 1);<z>
threshold;<z>
isPeak) {<z>
Peak(i, currentValue));<z>
peaks);<z>
Collections.reverse(peaks);<z>
); i++) {<z>
get(i).getPosition();<z>
++) {<z>
();<z>
firstPeakIndex - secondPeakIndex);<z>
) / 2;<z>
(diff > halfSize )<z>
= halfSize - (diff % halfSize);<z>
< windowSize) {<z>
(j);<z>
j--;<z>
.size(); i++) {<z>
;<z>
peak.getPosition();<z>
histogram.getKeyForClass(peakIndex);<z>
position);<z>
return peaks;<z>
String id) {<z>
) {<z>
lastNodeName, id)) {<z>
false;<z>
}else {<z>
return true;<z>
{<z>
return false;<z>
(Annotation annotation) {<z>
handle(<z>
,<z>
)},<z>
.resolvedType.shortReadableName())},<z>
annotation.sourceStart,<z>
;<z>
(<z>
final NHttpClientConnection conn,<z>
{<z>
(getState(conn));<z>
getHandler(conn));<z>
decoder, conn);<z>
;<z>
decoder.isCompleted()) {<z>
handler);<z>
YarnRemoteExceptionPBImpl(String message, Throwable t) {<z>
(t);<z>
if (message != null)<z>
.setMessage(message);<z>
) {<z>
);<z>
parameterOwner = owner;<z>
).getItemProvidersAdapterFactory());<z>
;<z>
)<z>
)<z>
SvgPathPackage.QUADRATIC_BEZIER_CURVETO_ARGUMENT__C1:<z>
)null);<z>
QUADRATIC_BEZIER_CURVETO_ARGUMENT__C2:<z>
setC2((coordinate_pair)null);<z>
eUnset(featureID);<z>
Server server)<z>
;<z>
_server=server;<z>
void setInitialFilePath(String initialFilePath) {<z>
;<z>
this.initialFilePath = initialFilePath;<z>
;<z>
List<String> excludes) {<z>
);<z>
rootDir);<z>
rootDir);<z>
;<z>
ex) {<z>
ex);<z>
;<z>
new IllegalArgumentException("includes cannot be null.");<z>
) throw new IllegalArgumentException("excludes cannot be null.");<z>
("**");<z>
;<z>
(String include : includes)<z>
Pattern(include));<z>
;<z>
)<z>
);<z>
);<z>
if (!allExcludePatterns.isEmpty()) {<z>
matchIter.hasNext();) {<z>
matchIter.next();<z>
ArrayList(allExcludePatterns);<z>
);) {<z>
)excludeIter.next();<z>
)) {<z>
();<z>
;<z>
matches(fileName)) {<z>
;<z>
outerLoop;<z>
);<z>
"\\" + File.separator);<z>
(String fileName : fileNames) {<z>
);) {<z>
Pattern)excludeIter.next();<z>
) {<z>
);<z>
exclude.incr(fileName);<z>
)) {<z>
();<z>
outerLoop;<z>
()) continue outerLoop;<z>
finally {<z>
exclude : allExcludePatterns)<z>
();<z>
PasswordPolicyRelImpl() {<z>
public Object clone() {<z>
;<z>
<PasswordPolicyRel> toCacheModel() {<z>
_nullPasswordPolicyRelCacheModel;<z>
{<z>
{<z>
class.getName());<z>
());<z>
;<z>
.clearCache(FINDER_CLASS_NAME_LIST);<z>
) {<z>
(eventBus, resources);<z>
initListBoxEditors();<z>
);<z>
);<z>
.driver.initialize(this);<z>
.kaleo.model.KaleoInstanceToken> findByC_PKITI(<z>
end,<z>
.util.OrderByComparator orderByComparator)<z>
.portal.kernel.exception.SystemException {<z>
getPersistence()<z>
parentKaleoInstanceTokenId, start,<z>
);<z>
, double Easting, double Northing)<z>
Error_Code = UTM_NO_ERROR;<z>
;<z>
= 500000;<z>
0;<z>
= 0.9996;<z>
(Zone > 60))<z>
|= UTM_ZONE_ERROR;<z>
)<z>
Error_Code |= UTM_HEMISPHERE_ERROR;<z>
(Northing > MAX_NORTHING))<z>
|= UTM_NORTHING_ERROR;<z>
if (Error_Code == UTM_NO_ERROR)<z>
>= 31)<z>
PI / 180.0 );<z>
PI / 180.0 );<z>
if (Hemisphere == 'S')<z>
10000000;<z>
Easting, Northing,<z>
(Central_Meridian),<z>
False_Northing, Scale);<z>
;<z>
Longitude = TM.getLongitude().radians;<z>
MAX_LAT))<z>
UTM_NORTHING_ERROR;<z>
(Exception e)<z>
UTM_TM_ERROR;<z>
return (Error_Code);<z>
) {<z>
exists()) {<z>
lastadd;<z>
);<z>
<R> methodSecurity)<z>
super(parameters);<z>
;<z>
static void main(String args[]) {<z>
{<z>
() {<z>
().setVisible(true);<z>
);<z>
newValue) {<z>
oldValue, newValue);<z>
synchronized (listeners) {<z>
listenerIter.hasNext();) {<z>
processRankingEvent(e);<z>
{<z>
float result;<z>
> min && base_value < max) {<z>
);<z>
<= base_value) {<z>
) {<z>
;<z>
} else {<z>
feather_result;<z>
/ feather_result;<z>
0;<z>
result;<z>
final Class clazz)<z>
return (ProtectionDomain)AccessController.doPrivileged(<z>
new PrivilegedAction()<z>
)<z>
.getProtectionDomain();<z>
);<z>
CharUnit(<z>
,<z>
Grammar grammar) {<z>
super(grammar);<z>
(declaration == null) {<z>
;<z>
this.declaration = declaration;<z>
<String> paths, boolean caseSensitive)<z>
patternStart = 0;<z>
= 0;<z>
) {<z>
patterns.get(patternStart);<z>
) {<z>
get(pathStart), caseSensitive)) {<z>
;<z>
patternStart++;<z>
pathStart++;<z>
();<z>
void doApplyInformationToEditor() {<z>
myEditor.getUserData(LAST_TIME_INDENTS_BUILT);<z>
)) return;<z>
oldHighlighters = myEditor.getUserData(INDENT_HIGHLIGHTERS_IN_EDITOR_KEY);<z>
ArrayList<RangeHighlighter>();<z>
;<z>
;<z>
if (oldHighlighters != null) {<z>
;<z>
) {<z>
;<z>
);<z>
int cmp = compare(range, highlighter);<z>
< 0) {<z>
createHighlighter(mm, range));<z>
curRange++;<z>
if (cmp > 0) {<z>
.dispose();<z>
++;<z>
newHighlighters.add(highlighter);<z>
++;<z>
++;<z>
oldHighlighters.size(); curHighlight++) {<z>
= oldHighlighters.get(curHighlight);<z>
;<z>
final int startRangeIndex = curRange;<z>
) {<z>
() {<z>
{<z>
;<z>
);<z>
(INDENT_HIGHLIGHTERS_IN_EDITOR_KEY, newHighlighters);<z>
());<z>
myDescriptors);<z>
public InputStream getInputStream() {<z>
null) {<z>
is;<z>
{<z>
getInputStream();<z>
;<z>
value) {<z>
MonthOfYear monthOfYear : values()) {<z>
value) {<z>
monthOfYear;<z>
null;<z>
importWarpPoints() {<z>
getFiles(new File(importPath + File.separator<z>
, ".yml"), false);<z>
= null;<z>
= null;<z>
world = null;<z>
= "";<z>
int counter = 0;<z>
File f : files) {<z>
;<z>
{<z>
info("[ERROR] Could not import WarpPoint: "<z>
;<z>
getString("world"));<z>
{<z>
("name");<z>
buildLocation(esWarp, world);<z>
final Exception e) {<z>
info("[ERROR] Could not import WarpPoint: "<z>
4));<z>
name, acWarp);<z>
counter++;<z>
.new PatternFilter(<z>
.FILE, ".yml"), false);<z>
esJails = null;<z>
) {<z>
"jails")) {<z>
f);<z>
null) {<z>
("[ERROR] Could not import Jails.");<z>
jails = null;<z>
esJails.getConfigurationSection("jails");<z>
null) {<z>
);<z>
;<z>
== null) {<z>
info("[ERROR] Could not import Jails.");<z>
null;<z>
: keys) {<z>
) {<z>
("[ERROR] Could not import jail "<z>
.valueOf(jName));<z>
;<z>
(esWarp.getString("world"));<z>
if (world == null) {<z>
.buildLocation(jail, world);<z>
Exception e) {<z>
jName);<z>
);<z>
++;<z>
;<z>
public <T> T[] list()<z>
<T>();<z>
: list)<z>
.add((T)child);<z>
(Exception x)<z>
.toArray();<z>
Object masterElement) {<z>
(masterElement);<z>
;<z>
))<z>
();<z>
(<z>
{<z>
];<z>
; i++) {<z>
] = toSoapModel(models[i]);<z>
soapModels;<z>
native_drawRoundRect(int nativeCanvas,<z>
, int paint) {<z>
, false , false ,<z>
Drawable() {<z>
(Graphics2D graphics, Paint_Delegate paintDelegate) {<z>
int style = paintDelegate.getStyle();<z>
== Paint.Style.FILL.nativeInt ||<z>
{<z>
(<z>
.top,<z>
),<z>
ry);<z>
STROKE.nativeInt ||<z>
.Style.FILL_AND_STROKE.nativeInt) {<z>
drawRoundRect(<z>
)rect.top,<z>
),<z>
int)rx, (int)ry);<z>
;<z>
) {<z>
(appPreference.isStateChanged()){<z>
working),true,false);<z>
t = new Thread() {<z>
() {<z>
updateDB();<z>
.post(new Runnable() {<z>
public void run() {<z>
.dismiss();<z>
;<z>
);<z>
();<z>
(int time) {<z>
;<z>
time);<z>
);<z>
initParameters() {<z>
);<z>
{<z>
] params = queryString.split("&");<z>
(String element : params) {<z>
= element.split("=");<z>
(tuple.length>1) {<z>
);<z>
[0], "");<z>
final Object object) {<z>
{<z>
= (Feature)object;<z>
class);<z>
<Double>(value);<z>
belongTo.SUCCEEDING;<z>
.getValue();<z>
(f);<z>
null;<z>
final Object instance, final Context context,<z>
last_viewed_id, final Bundle args) {<z>
|| args == null) return;<z>
args.getInt(INTENT_KEY_LIST_ID, -1);<z>
getLong(INTENT_KEY_ACCOUNT_ID, -1);<z>
args.getLong(INTENT_KEY_USER_ID, -1);<z>
String screen_name = args.getString(INTENT_KEY_SCREEN_NAME);<z>
= args.getString(INTENT_KEY_LIST_NAME);<z>
Context.MODE_PRIVATE).getInt(<z>
PREFERENCE_KEY_DATABASE_ITEM_LIMIT, PREFERENCE_DEFAULT_DATABASE_ITEM_LIMIT);<z>
Long>();<z>
(last_viewed_id > 0) {<z>
(last_viewed_id);<z>
= data.size();<z>
{<z>
items_limit) {<z>
(data.get(i)));<z>
()<z>
.getSimpleName()<z>
;<z>
= new ObjectOutputStream(fos);<z>
(statuses);<z>
os.close();<z>
close();<z>
} catch (final IOException e) {<z>
{<z>
{tagBarcodeId}, new TagBarcodeMapper());<z>
eResults.get(0) : null;<z>
return e;<z>
left, NodeFilter right)<z>
predicates;<z>
2];<z>
= left;<z>
1] = right;<z>
(predicates);<z>
public boolean visit(SuperConstructorInvocation node) {<z>
= getChildNode(node, SuperConstructorInvocation.EXPRESSION_PROPERTY);<z>
expression != null) {<z>
);<z>
.result.append('.');<z>
) >= AST.JLS3) {<z>
), String.valueOf('>'));<z>
"super(");<z>
);<z>
result.append(");");<z>
;<z>
{<z>
(getFile()));<z>
DiagnosisModel.DIAGNOSIS_ROOT);<z>
);<z>
int handleG(String value,<z>
DoubleMetaphoneResult result,<z>
index,<z>
) {<z>
value, index + 1) == 'H') {<z>
, index);<z>
+ 1) == 'N') {<z>
!slavoGermanic) {<z>
);<z>
index + 2, 2, "EY") &&<z>
+ 1) != 'Y' && !slavoGermanic) {<z>
("N", "KN");<z>
else {<z>
append("KN");<z>
2;<z>
{<z>
, "L");<z>
2;<z>
2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {<z>
.append('K', 'J');<z>
index += 2;<z>
index + 1, 2, "ER") ||<z>
index + 1) == 'Y') &&<z>
, "RANGER", "MANGER") &&<z>
&&<z>
"RGY", "OGY")) {<z>
'K', 'J');<z>
2;<z>
, "E", "I", "Y") ||<z>
)) {<z>
, "ET")) {<z>
result.append('K');<z>
, "IER")) {<z>
.append('J');<z>
{<z>
result.append('J', 'K');<z>
index += 2;<z>
'G') {<z>
2;<z>
result.append('K');<z>
else {<z>
++;<z>
);<z>
index;<z>
, char dst[], int dstBegin) {<z>
0) {<z>
;<z>
> used) {<z>
);<z>
srcEnd) {<z>
srcEnd - srcBegin);<z>
- srcBegin);<z>
id) {<z>
;<z>
switch (javaClassId) {<z>
case DEFAULT_CLS_JAVA_CLASS_ID:<z>
;<z>
case DEFAULT_SLOT_JAVA_CLASS_ID:<z>
class);<z>
case DEFAULT_FACET_JAVA_CLASS_ID:<z>
DefaultFacet.class);<z>
:<z>
, DefaultSimpleInstance.class);<z>
{<z>
frame;<z>
Class<? extends Instance> javaType = null;<z>
javaClassId);<z>
e) {<z>
.SEVERE, "Error at creating Java class with Java Frame type id: " + javaClassId , e);<z>
javaType == null) {<z>
RuntimeException("Invalid java class id: " + javaClassId);<z>
javaType);<z>
(RealType aniRealType)<z>
{<z>
aniRealType = aniRealType;<z>
if (aniRealType != null) {<z>
();<z>
= new AnimationInfo();<z>
checkInput() {<z>
(<z>
;<z>
IllegalArgumentException(<z>
;<z>
List<File> files) {<z>
{<z>
;<z>
(SessionCallback callback, Session session) {<z>
null;<z>
= session.beginTransaction();<z>
.execute(session);<z>
;<z>
e ) {<z>
, e);<z>
)<z>
();<z>
;<z>
} finally {<z>
;<z>
init(Font font) {<z>
font;<z>
GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();<z>
.fontList.setListData(fontFamilies);<z>
;<z>
true);<z>
valueOf(font.getSize()));<z>
exampleLabel.setFont(font);<z>
(final Action action) {<z>
));<z>
;<z>
return result;<z>
, String value, String type) throws IOException {<z>
(key, value, type);<z>
{<z>
.getMessage());<z>
(CreateException ex) {<z>
new IOException(ex.getMessage());<z>
{<z>
(ex.getMessage());<z>
> cls) {<z>
return cls.newInstance();<z>
();}<z>
return null;<z>
ValueNode bindExpression(<z>
subqueryList,<z>
Vector aggregateVector)<z>
, subqueryList, aggregateVector);<z>
postBindFixup();<z>
return this;<z>
obj)<z>
instanceof IdentityList<z>
) obj).embeddedList);<z>
readPath, FileSystem writeFs,<z>
Configuration conf) throws IOException {<z>
(readFs, readPath, false, conf);<z>
;<z>
} catch (IOException e) {<z>
;<z>
{<z>
;<z>
();<z>
{<z>
);<z>
(subscriberId);<z>
NetworkTemplate template4g = buildTemplateMobile4g(subscriberId);<z>
NetworkTemplate templateAll = buildTemplateMobileAll(subscriberId);<z>
== beforeSplit) {<z>
false;<z>
&& !split) {<z>
= getPolicy(template3g);<z>
);<z>
compareTo(policy4g) < 0 ? policy3g<z>
policy4g;<z>
;<z>
remove(policy4g);<z>
cycleDay,<z>
.limitBytes,<z>
.inferred));<z>
true;<z>
if (!beforeSplit && split) {<z>
templateAll);<z>
policyAll);<z>
.cycleDay, policyAll.cycleTimezone,<z>
limitBytes, SNOOZE_NEVER, SNOOZE_NEVER,<z>
.inferred));<z>
.cycleTimezone,<z>
limitBytes, SNOOZE_NEVER, SNOOZE_NEVER,<z>
policyAll.inferred));<z>
return true;<z>
else {<z>
;<z>
ChatAdapter getChat(Chat chat) {<z>
= chat.getParticipant();<z>
containsKey(key)) {<z>
.get(key);<z>
;<z>
mService.getBaseContext()).getBoolean(<z>
false);<z>
()).getString(<z>
"");<z>
getBaseContext()).getString(<z>
"");<z>
"/Android/data/com.rei.lolchat/chat/";<z>
history);<z>
(accountUser);<z>
;<z>
(TAG, "getChat put " + key);<z>
;<z>
return res;<z>
long active1)<z>
) == 0L)<z>
, 0L);<z>
readChar(); }<z>
.IOException e) {<z>
);<z>
return 7;<z>
)<z>
case 69:<z>
active1, 0x48L);<z>
:<z>
) != 0L)<z>
68, 32);<z>
83:<z>
);<z>
:<z>
, 0x40000000000L, active1, 0L);<z>
case 101:<z>
0x1000000L) != 0L)<z>
24, 32);<z>
0L)<z>
;<z>
active1, 0L);<z>
:<z>
active1, 0L);<z>
112:<z>
0x40000000000000L) != 0L)<z>
54, 32);<z>
case 116:<z>
)<z>
);<z>
, active1, 0L);<z>
void moveUp(int pos) {<z>
while (pos > 0) {<z>
- 1) >> 1;<z>
0) {<z>
;<z>
= parent;<z>
String> sourceLocations){<z>
= new HashSet<String>();<z>
.ExtensionInfo() {<z>
Job job) {<z>
(job);<z>
;<z>
(false)));<z>
, nf)));<z>
));<z>
, Pass.OUTPUT);<z>
passes;<z>
.getOptions();<z>
;<z>
new LinkedList<File>();<z>
();<z>
)){<z>
next = it.next();<z>
()));<z>
"java"};<z>
false;<z>
fileName);<z>
File(fileName).getParentFile());<z>
polyglot.main.Options.global = options;<z>
extInfo;<z>
Series series )<z>
= ChartHelpContextIds.SUBTASK_YSERIES_DIFFERENCE;<z>
helpId;<z>
getTextBounds() {<z>
();<z>
translate(getTextLocation()),<z>
;<z>
RecordInputStream in)<z>
in.readShort();<z>
;<z>
0;<z>
( field_3_unicode_flag ) {<z>
field_4_formatstring = in.readUnicodeLEString( field_3_unicode_len );<z>
);<z>
{<z>
(tCurrent.get() != null) {<z>
.get().setStarted(false);<z>
(null);<z>
{<z>
);<z>
[] getFeatureModels() {<z>
new ArrayList();<z>
().getFeatureModelManager();<z>
;<z>
) {<z>
());<z>
if (model != null)<z>
model);<z>
;<z>
(IServer server) {<z>
= dataByServer.get(server);<z>
(data == null) {<z>
;<z>
.put(server, data);<z>
data;<z>
DeleteRequest parseFrom(<z>
data,<z>
.protobuf.ExtensionRegistryLite extensionRegistry)<z>
{<z>
().mergeFrom(data, extensionRegistry)<z>
);<z>
)<z>
);<z>
(j));<z>
(i));<z>
;<z>
, ParamMetaData metaData) {<z>
metaData.getParamName() != null) {<z>
.getParamName());<z>
{<z>
return inv.getParameterBindingResult();<z>
throws IPCException<z>
(true);<z>
;<z>
();<z>
(result);<z>
.SUCCESS)<z>
.handle);<z>
return result;<z>
{<z>
PQcount = 0;<z>
0;<z>
* sqrt_nsites;<z>
PQhash = new Halfedge[PQhashsize];<z>
PQhashsize; i++) {<z>
Halfedge();<z>
= null;<z>
context) {<z>
);<z>
Style.STROKE);<z>
.setStyle(Paint.Style.FILL);<z>
;<z>
toString() {<z>
_extends + ", _implements="<z>
_implements + ", _classAnnotation=" + _classAnnotation + ", _isCompileTime=" + _isCompileTime<z>
+ ", _isRuntimeTime=" + _isRuntimeTime + ", _directlyReferenced=" + _directlyReferenced<z>
+ "]";<z>
final String toString() {<z>
;<z>
;<z>
% HOURS_MILLIS;<z>
= millis / MINUTE_MILLIS;<z>
millis = millis % MINUTE_MILLIS;<z>
SECOND_MILLIS;<z>
;<z>
String sep = "";<z>
":") > 0){<z>
sep = ":";<z>
){<z>
",";<z>
= "";<z>
String delim = sep;<z>
){<z>
".";<z>
delim);<z>
() > 2){<z>
"WARNING: Invalid format subtype!");<z>
true;<z>
(tok.hasMoreTokens()){<z>
String token = tok.nextToken();<z>
token)){<z>
.equals(sep)) {<z>
result += "00"+sep;<z>
{<z>
sep;<z>
else if (hours < 10) {<z>
+ sep;<z>
+ sep;<z>
token)){<z>
(firstToken){<z>
+ minutes;<z>
{<z>
+= "00"+sep;<z>
sep)) {<z>
minutes + sep;<z>
{<z>
sep;<z>
sep;<z>
{<z>
){<z>
;<z>
(sep)) {<z>
+sep;<z>
":".equals(sep)) {<z>
+ sep;<z>
) {<z>
+= seconds + sep;<z>
+ sep;<z>
equals(token)){<z>
== 0) {<z>
;<z>
< 10) {<z>
millis;<z>
if (millis < 100) {<z>
) millis/10;<z>
result += (int)millis/100;<z>
equals(token)){<z>
{<z>
;<z>
else if (millis < 10) {<z>
+ millis;<z>
if (millis < 100) {<z>
millis;<z>
10;<z>
(token)){<z>
millis == 0) {<z>
+= "000";<z>
millis < 10) {<z>
result += "00" + millis;<z>
(millis < 100) {<z>
millis;<z>
millis;<z>
;<z>
){<z>
result.length()-1);<z>
;<z>
> targetURIs, IAcceptor<IReferenceDescription> acceptor,<z>
filter, IProgressMonitor monitor) {<z>
() {<z>
) {<z>
trimFragment();<z>
;<z>
allResourceDescriptions = index.getAllResourceDescriptions();<z>
= Iterables.size(allResourceDescriptions);<z>
"Find puppet references", numResources);<z>
IResourceDescription resourceDescription : allResourceDescriptions) {<z>
(resourceDescription != null) {<z>
subMonitor.isCanceled())<z>
resourceDescription.getURI())) {<z>
.getReferenceDescriptions()) {<z>
if(subMonitor.isCanceled())<z>
referenceDescription.getTargetEObjectUri()) &&<z>
apply(referenceDescription))) {<z>
acceptor.accept(referenceDescription);<z>
;<z>
) throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
pushFollow(FOLLOW_rule__XDoWhileExpression__Group__2__Impl_in_rule__XDoWhileExpression__Group__219816);<z>
();<z>
._fsp--;<z>
) return ;<z>
FOLLOW_rule__XDoWhileExpression__Group__3_in_rule__XDoWhileExpression__Group__219819);<z>
;<z>
._fsp--;<z>
) return ;<z>
RecognitionException re) {<z>
;<z>
re);<z>
stackSize);<z>
] getPublicKeyBlob(){<z>
=super.getPublicKeyBlob();<z>
if(foo!=null) return foo;<z>
(pub_array==null) return null;<z>
+4+<z>
length+4+<z>
length+4);<z>
;<z>
buf.putString(pub_array);<z>
;<z>
;<z>
<E> getAll()<z>
ensureCorrectState();<z>
;<z>
Collection<TypeReference> getJavaLangRuntimeExceptionTypes() {<z>
null) {<z>
TypeReference.JavaLangRuntimeException);<z>
.size());<z>
hasNext();) {<z>
);<z>
(klass.getReference());<z>
return Collections.unmodifiableCollection(runtimeExceptionTypeRefs);<z>
public void deselect(boolean reset)<z>
caret.row;<z>
;<z>
changeType(ST.NORM);<z>
boolean local)<z>
CalicoPacket();<z>
packet.putInt(IntentionalInterfacesNetworkCommands.CLINK_DELETE);<z>
putLong(uuid);<z>
();<z>
receive(packet);<z>
local)<z>
(packet);<z>
write(OutputStream out) throws IOException {<z>
xslFile =<z>
File(m_server.getHomeDir(),<z>
);<z>
);<z>
);<z>
reposInfo.write(po);<z>
=<z>
getTransformerFactory();<z>
Templates template =<z>
));<z>
.newTransformer();<z>
setParameter("fedora", context<z>
);<z>
),<z>
StreamResult(out));<z>
) {<z>
, te);<z>
flush();<z>
void setDocument(Document document) {<z>
(document == null) {<z>
("document was null");<z>
;<z>
(Appendable out, CSVFormat format) {<z>
= out;<z>
? CSVFormat.DEFAULT : format;<z>
();<z>
void resolveTypeStructure(Environment env) {<z>
.dtEnter("SourceMember.resolveTypeStructure: " + this);<z>
(resolved) {<z>
dtEvent("SourceMember.resolveTypeStructure: OK " + this);<z>
"multiple member type resolution");<z>
else {<z>
;<z>
= true;<z>
(env);<z>
if (isInnerClass()) {<z>
ClassDefinition nc = getInnerClass();<z>
) {<z>
)nc).resolveTypeStructure(env);<z>
);<z>
{<z>
, type, isSynthetic());<z>
;<z>
)) {<z>
argNames = args; args = null;<z>
;<z>
)) {<z>
addOuterThis();<z>
) env.dtExit("SourceMember.resolveTypeStructure: " + this);<z>
RequestContext request) {<z>
);<z>
) {<z>
.length() - 1);<z>
)) {<z>
);<z>
(6);<z>
);<z>
;<z>
[] paths;<z>
);<z>
) {<z>
(e);<z>
{<z>
;<z>
);<z>
);<z>
NAMESPACE, "taggings"),<z>
());<z>
> tagCounts = tagPath.getTagCounts();<z>
java.util.Properties();<z>
tagCounts.entrySet()) {<z>
);<z>
.addPropertyExtensionElement(properties,<z>
,<z>
);<z>
entry);<z>
);<z>
{<z>
pollers == null) {<z>
;<z>
else {<z>
;<z>
{<z>
.getKeepAliveCount();<z>
keepAliveCount;<z>
(String name) {<z>
);<z>
null)<z>
name);<z>
CtrlFlowNode> getChildren(){<z>
== null){<z>
);<z>
return m_children;<z>
getMin2(double start, double end) {<z>
result = null;<z>
start_time, start);<z>
;<z>
, tlow, false);<z>
, false);<z>
{<z>
start_time;<z>
)))<z>
;<z>
0.0) {<z>
;<z>
te) && (te < thigh))<z>
, te, false);<z>
]) < thigh))<z>
, false);<z>
; i < numbounces; i++) {<z>
{<z>
i]) + start_time;<z>
]) < te) &&<z>
endtime[i])))<z>
, false);<z>
[i]) < thigh))<z>
);<z>
result;<z>
jjMoveStringLiteralDfa0_0() {<z>
switch (curChar) {<z>
:<z>
(0, 14, 1);<z>
case 40:<z>
0, 12);<z>
case 41:<z>
, 13);<z>
case 44:<z>
, 17);<z>
:<z>
jjStopAtPos(0, 9);<z>
:<z>
;<z>
:<z>
return jjStopAtPos(0, 16);<z>
:<z>
, 0x0L);<z>
97:<z>
,<z>
, 0x4L);<z>
98:<z>
);<z>
:<z>
(0x0L, 0x1004010400000002L, 0x1000L);<z>
case 100:<z>
0x0L);<z>
101:<z>
return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L, 0x0L);<z>
case 102:<z>
, 0x40008000000L, 0x88L);<z>
:<z>
return jjMoveStringLiteralDfa1_0(0x1000000L, 0x3e00L, 0x0L);<z>
104:<z>
);<z>
case 105:<z>
0x6000000000000L, 0x40078000L,<z>
);<z>
:<z>
(0x1000000000000000L,<z>
0x0L);<z>
108:<z>
);<z>
case 110:<z>
(0x4000000L, 0x180000L, 0x500L);<z>
case 111:<z>
(0x0L, 0x2000000L, 0x0L);<z>
:<z>
(0x8000000000000L,<z>
;<z>
case 114:<z>
return jjMoveStringLiteralDfa1_0(0xc0000L, 0x2001000000000L, 0x0L);<z>
115:<z>
return jjMoveStringLiteralDfa1_0(0x780003f88000000L,<z>
, 0x2000L);<z>
case 116:<z>
return jjMoveStringLiteralDfa1_0(0x801ffc000000000L,<z>
);<z>
case 117:<z>
;<z>
:<z>
0x2L);<z>
122:<z>
jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x4400000L,<z>
;<z>
case 123:<z>
);<z>
125:<z>
(0, 11);<z>
;<z>
) {<z>
) ) {<z>
getName());<z>
String lvKeyStr = (String) pvKey;<z>
(DELIMITER);<z>
{<z>
+<z>
+ " (" + lvKeyArray.length + ")");<z>
[0];<z>
.valueOf(lvPosStr);<z>
.intValue();<z>
lvKeyValue = lvKeyArray[1];<z>
null;<z>
== 3) {<z>
String lvKeyClass = lvKeyArray[2];<z>
clazz = ReflectionHelper.forName(lvKeyClass);<z>
clazz, lvKeyValue);<z>
(Exception e) {<z>
lvKeyValue);<z>
{<z>
lvKey = lvKeyValue;<z>
, lvKey);<z>
() {<z>
if (activeDirectoryGUIDTypeEDataType == null) {<z>
;<z>
;<z>
(Player player,Long amount){<z>
if (amount != 0){<z>
"%money%", amount.toString()));<z>
player.getName(), amount);<z>
true;<z>
public void addBinding(IBinding binding) {<z>
= NAMESPACE_TYPE_OTHER;<z>
(binding instanceof ICompositeType || binding instanceof IEnumeration) {<z>
NAMESPACE_TYPE_TAG;<z>
SuppressWarnings("unchecked")<z>
type];<z>
(map == CharArrayObjectMap.EMPTY_MAP)<z>
CharArrayObjectMap<Object>(2);<z>
getNameCharArray(), binding);<z>
getCharArrayFromByteArray(byte[] buf)<z>
.length / 2;<z>
a = new char[n];<z>
;<z>
;<z>
; i < n;)<z>
buf[j++] & 0xFF));<z>
;<z>
boolean movable, final long sLimit) {<z>
super(titl, descript, movable);<z>
duration;<z>
this.limitDay = valid;<z>
.necessaryMembers = necessary;<z>
this.otherMembers = wished;<z>
;<z>
.startLimit = sLimit;<z>
{<z>
;<z>
view);<z>
final boolean ignoreEncodingErrors) throws UnsupportedOperationException {<z>
)<z>
);<z>
;<z>
int type) {<z>
SMALLINT) {<z>
return "INT";<z>
.sql.Types.TINYINT) {<z>
return "INT";<z>
{<z>
"INT";<z>
.sql.Types.BIGINT) {<z>
;<z>
DECIMAL) {<z>
"DOUBLE";<z>
java.sql.Types.DOUBLE) {<z>
;<z>
FLOAT) {<z>
;<z>
java.sql.Types.VARCHAR) {<z>
return "STRING";<z>
) {<z>
return "STRING";<z>
== java.sql.Types.CLOB) {<z>
;<z>
(<z>
);<z>
input) {<z>
)) {<z>
;<z>
);<z>
0;<z>
;<z>
for (String param : params) {<z>
+"\n");<z>
i++;<z>
abb.toString();<z>
String localRepository) {<z>
);<z>
LocalRepository localRepo = new LocalRepository(localRepository);<z>
(localRepo));<z>
session;<z>
sendOperationAdded(final SendOperation sendOperation) {<z>
.invokeLater(new Runnable() {<z>
run() {<z>
().addOperation(sendOperation);<z>
;<z>
SUBSYSTEM_READ_APPLICATION = new DescriptionProvider() {<z>
Locale locale) {<z>
getSubsystemReadApplication(locale);<z>
[] getResult() {<z>
if (modelResource != null) {<z>
;<z>
)modelResource.getUnderlyingResource();<z>
{<z>
ModelerCore.Util.log(theException);<z>
{<z>
;<z>
getResult();<z>
, Class<?> type) {<z>
length; i++) {<z>
i];<z>
().equals(name)) {<z>
||<z>
isPrimitive()))<z>
return f;<z>
ftype = f.getType();<z>
{<z>
f;<z>
null;<z>
() {<z>
mappingCreatedAction.remove(this);<z>
false, true)) {<z>
));<z>
) {<z>
.onAction(new Closure() {<z>
void execute() {<z>
);<z>
);<z>
handleGetCapability(Class<T> capability) {<z>
Group.class.isAssignableFrom(capability)) {<z>
return capability.cast(this);<z>
;<z>
) throws RequestHandledException,<z>
().getRequest();<z>
u = new RemainingPath(restletRequest.getResourceRef()<z>
);<z>
(u);<z>
;<z>
();<z>
givenMediaType;<z>
)<z>
);<z>
= null;<z>
identifyMethod(resourceObjectAndPath,<z>
givenMediaType);<z>
method;<z>
protected void runImpl()<z>
getClient().getActiveChar();<z>
().getIdByName(_name);<z>
.getAccessLevelById(targetId);<z>
(activeChar == null)<z>
switch (_type)<z>
BLOCK:<z>
UNBLOCK:<z>
)<z>
(SystemMessageId.FAILED_TO_REGISTER_TO_IGNORE_LIST));<z>
)<z>
YOU_MAY_NOT_IMPOSE_A_BLOCK_ON_GM));<z>
targetId)<z>
== BLOCK)<z>
targetId);<z>
removeFromBlockList(activeChar, targetId);<z>
BLOCKLIST:<z>
activeChar);<z>
ALLBLOCK:<z>
.MESSAGE_REFUSAL_MODE));<z>
true);<z>
:<z>
SystemMessageId.MESSAGE_ACCEPTANCE_MODE));<z>
);<z>
);<z>
{<z>
;<z>
addAll( ontology.getClassesInSignature() );<z>
() );<z>
() );<z>
getIndividualsInSignature() );<z>
= new ArrayList<OWLOntologyChange>();<z>
axiom : ontology.getAxioms() ) {<z>
) ) {<z>
new RemoveAxiom( ontology, axiom ) );<z>
.applyChanges( changes );<z>
<OWLOntologyChange>();<z>
referencedEntities ) {<z>
) ) {<z>
)<z>
entity );<z>
( ontology, declaration ) );<z>
( changes );<z>
( OWLOntologyChangeException e ) {<z>
new OWLRuntimeException( e );<z>
String expansionSetCode) {<z>
, token.getName());<z>
token = token;<z>
expansionSetCode;<z>
initialize(WikiEngine engine, Properties properties)<z>
, IOException {<z>
;<z>
= new WikiPageDAO();<z>
Object put(Object key, Object value)<z>
);<z>
value;<z>
int y){<z>
;<z>
this.x=x;<z>
this.y=y;<z>
=null;<z>
=null;<z>
(Object obj) {<z>
null) {<z>
return false;<z>
{<z>
false;<z>
final AttributeData other = (AttributeData) obj;<z>
.name, other.name)) {<z>
return false;<z>
.materialName)) {<z>
return false;<z>
.precision)) {<z>
;<z>
this.values, other.values)) {<z>
return false;<z>
;<z>
[] options) {<z>
Utils.getFlag('h', options))<z>
throw new Exception("Help requested");<z>
.setOptions(options);<z>
);<z>
().length() == 0)<z>
new Exception("No directory provided!");<z>
Exception ex) {<z>
) + "\n\n" + javadoc.generateHelp();<z>
throw new Exception(result);<z>
generate() + "\n");<z>
) {<z>
;<z>
{<z>
);<z>
);<z>
(), this);<z>
) {<z>
(collegue)) {<z>
);<z>
;<z>
) {<z>
.create(resources.treeClosed());<z>
treeLeaf());<z>
);<z>
rule__XSwitchExpression__Group_2_1__1__Impl() throws RecognitionException {<z>
= keepStackSize();<z>
0 ) {<z>
).getSwitchAssignment_2_1_1());<z>
(FOLLOW_rule__XSwitchExpression__SwitchAssignment_2_1_1_in_rule__XSwitchExpression__Group_2_1__1__Impl17226);<z>
);<z>
--;<z>
state.failed) return ;<z>
) {<z>
());<z>
{<z>
reportError(re);<z>
,re);<z>
restoreStackSize(stackSize);<z>
AbstractListComponent listComponent) {<z>
cssStyle = new CssStyle();<z>
listComponent.isRenderEnabled();<z>
border;<z>
foreground, background;<z>
;<z>
(!renderEnabled) {<z>
(AbstractListComponent.PROPERTY_DISABLED_BACKGROUND);<z>
) listComponent.getRenderProperty(AbstractListComponent.PROPERTY_DISABLED_BORDER);<z>
) listComponent.getRenderProperty(AbstractListComponent.PROPERTY_DISABLED_FONT);<z>
PROPERTY_DISABLED_FOREGROUND);<z>
{<z>
listComponent.getRenderProperty(AbstractListComponent.PROPERTY_BACKGROUND,<z>
);<z>
null) {<z>
);<z>
) {<z>
PROPERTY_FONT);<z>
if (foreground == null) {<z>
,<z>
);<z>
} else {<z>
(AbstractListComponent.PROPERTY_BORDER);<z>
AbstractListComponent.PROPERTY_FOREGROUND, DEFAULT_FOREGROUND);<z>
AbstractListComponent.PROPERTY_BACKGROUND, DEFAULT_BACKGROUND);<z>
.getRenderProperty(AbstractListComponent.PROPERTY_FONT);<z>
border);<z>
background);<z>
renderToStyle(cssStyle, font);<z>
AbstractListComponent.PROPERTY_WIDTH, DEFAULT_WIDTH);<z>
getBoolean(ClientProperties.QUIRK_IE_SELECT_PERCENT_WIDTH)<z>
() == Extent.PERCENT) {<z>
;<z>
PROPERTY_HEIGHT);<z>
.PROPERTY_INSETS, DEFAULT_INSETS);<z>
.renderToStyle(cssStyle, "padding", insets);<z>
"width", width);<z>
cssStyle, "height", height);<z>
);<z>
return cssStyle;<z>
ClassNode cn) {<z>
false;<z>
false;<z>
;<z>
;<z>
) != null) return false;<z>
ACC_STATIC) == 0;<z>
) {<z>
.stringLiterals != null) {<z>
;<z>
.nlsTags.length;<z>
) {<z>
if (nlsTagsLength != 0) {<z>
0; i < nlsTagsLength; i++) {<z>
this.nlsTags[i];<z>
!= null) {<z>
);<z>
) {<z>
{<z>
stringLiteralsLength]), 0, stringLiteralsLength);<z>
sort(this.stringLiterals, STRING_LITERAL_COMPARATOR);<z>
; i++) {<z>
i]);<z>
} else {<z>
{<z>
, 0, stringLiteralsLength);<z>
stringLiterals, STRING_LITERAL_COMPARATOR);<z>
1;<z>
int lastLineNumber = -1;<z>
null;<z>
int index = 0;<z>
i = 0;<z>
< stringLiteralsLength; i++) {<z>
this.stringLiterals[i];<z>
= literal.lineNumber;<z>
!= literalLineNumber) {<z>
indexInLine = 1;<z>
= literalLineNumber;<z>
else {<z>
++;<z>
) {<z>
(; index < nlsTagsLength; index++) {<z>
nlsTags[index];<z>
tag == null) continue nlsTagsLoop;<z>
= tag.lineNumber;<z>
) {<z>
problemReporter().nonExternalizedStringLiteral(literal);<z>
;<z>
tagLineNumber) {<z>
== indexInLine) {<z>
.nlsTags[index] = null;<z>
;<z>
;<z>
{<z>
nlsTagsLength; index2++) {<z>
= this.nlsTags[index2];<z>
tag2 == null) continue nlsTagsLoop2;<z>
= tag2.lineNumber;<z>
if (literalLineNumber == tagLineNumber2) {<z>
.index == indexInLine) {<z>
[index2] = null;<z>
;<z>
} else {<z>
continue nlsTagsLoop2;<z>
else {<z>
).nonExternalizedStringLiteral(literal);<z>
stringLiteralsLoop;<z>
problemReporter().nonExternalizedStringLiteral(literal);<z>
continue stringLiteralsLoop;<z>
else {<z>
(tag.start, tag.end);<z>
;<z>
stringLiteralsLoop;<z>
i < stringLiteralsLength; i++) {<z>
[i]);<z>
{<z>
< nlsTagsLength; index++) {<z>
this.nlsTags[index];<z>
!= null) {<z>
);<z>
()<z>
(this, false);<z>
;<z>
finish();<z>
i);<z>
, boolean isInterface,<z>
isAbstract, Modifiers modifiers) {<z>
name;<z>
= parent;<z>
isInterface;<z>
= isAbstract;<z>
modifiers;<z>
ArrayList();<z>
ArrayList();<z>
);<z>
);<z>
public URL getIndexPath() {<z>
));<z>
)entry).getLibraryIndexLocation();<z>
} catch (JavaModelException e) {<z>
return null;<z>
args) {<z>
out.println("timingTest");<z>
100000;<z>
;<z>
;<z>
Random();<z>
[n];<z>
M);<z>
;<z>
start = timer.getTime();<z>
numTrials; i++){<z>
++){<z>
.nextGaussian()*100.0;<z>
y);<z>
Date();<z>
end = timer.getTime();<z>
1000.0;<z>
println("time = " + runtime);<z>
) {<z>
a - b;<z>
(diff > 0.0) {<z>
;<z>
) {<z>
return -1;<z>
0;<z>
Resources resource, File file,<z>
InfiniteProgressPanel progressPanel,<z>
,<z>
boolean useDOIDAsHREF) throws Exception{<z>
;<z>
);<z>
=<z>
, progressPanel, internalOnly,<z>
numberedCs, includeDaos);<z>
fos = new FileOutputStream(file);<z>
);<z>
(osw);<z>
);<z>
JAXB_FORMATTED_OUTPUT, Boolean.TRUE);<z>
m.setProperty(Marshaller.JAXB_SCHEMA_LOCATION,<z>
;<z>
;<z>
;<z>
);<z>
} catch (JAXBException jabe) {<z>
();<z>
throw jabe;<z>
IOException ioe) {<z>
;<z>
ioe;<z>
) {<z>
destroyComponent();<z>
destroy();<z>
-=1;<z>
0){<z>
();<z>
;<z>
() {<z>
stateful == null) {<z>
stateful = new Stateful();<z>
return stateful;<z>
, Vector b)<z>
= zeroVec();<z>
b.X;<z>
.Y;<z>
a.Z - b.Z;<z>
return temp;<z>
ByteArray payload) {<z>
payload;<z>
) > MAX_PAYLOAD_SIZE) )<z>
());<z>
,GLUT inGLUT) {<z>
,"/shaders/fractalshaders/mandelbrot.fs");<z>
tFragmentShader);<z>
DirectBufferUtils.createDirectFloatBuffer(<z>
] {<z>
,<z>
(float)mBaseFrameBufferObjectRendererExecutor_Mandelbrot.getHeight()<z>
1);<z>
;<z>
1,0,0x00A7DB9E);<z>
(2,0,0x005EA692);<z>
0,0x00524B70);<z>
);<z>
tLUT,GL_CLAMP);<z>
ruleSetName) {<z>
null) {<z>
getRoot();<z>
= rootNode.children();<z>
while (ruleSetNodes.hasMoreElements()) {<z>
RulesTreeNode) ruleSetNodes.nextElement();<z>
().equalsIgnoreCase(ruleSetName)) {<z>
return ruleSetNode;<z>
;<z>
tryConsume() {<z>
().getClassifier())<z>
;<z>
class, eObjectConsumer)) return null;<z>
;<z>
) {<z>
> pastSnapshots = configuration.getProjectPastSnapshots();<z>
pastSnapshot : pastSnapshots) {<z>
());<z>
pastSnapshot.getMode());<z>
(), pastSnapshot.getModeParameter());<z>
getTargetDate());<z>
.save(projectSnapshot);<z>
;<z>
public void tsMoves() {<z>
;<z>
= new ArrayList<TSMovePoint>();<z>
: _vertices) {<z>
: GemColor.PERMUTATIONS) {<z>
TSMoveType type: TSMoveType.values()) {<z>
)) {<z>
;<z>
).getLettersString(" "));<z>
list) {<z>
;<z>
;<z>
().getLettersString(" "));<z>
IMember m2)<z>
instanceof IField)<z>
1;<z>
m1 instanceof IField && m2 instanceof IMethod)<z>
1;<z>
return 0;<z>
){<z>
{<z>
wasTun==1){<z>
ret = blockPasstGenau();<z>
(this.wasTun==2){<z>
blockObenAnschliessen();<z>
if(this.wasTun==3){<z>
this.ret = blockUntenAnschliessen();<z>
wasTun==4){<z>
;<z>
.wasTun==5){<z>
();<z>
6){<z>
this.ret = blockNachfolgeKuerzen();<z>
){<z>
==8){<z>
;<z>
==10){<z>
blockFreiTermin();<z>
(this.wasTun==11){<z>
= blockLoeschen();<z>
this.wasTun==12){<z>
.ret = blockTauschen(-1);<z>
){<z>
this.ret = blockTauschen(1);<z>
{<z>
= blockAufNull();<z>
;<z>
(String namespace) {<z>
);<z>
keySet().iterator();<z>
= null;<z>
while (iter.hasNext()) {<z>
;<z>
{<z>
;<z>
;<z>
()) {<z>
next();<z>
if (key.startsWith(namespace)) {<z>
add(key);<z>
{<z>
(listToBeRemoved.get(i));<z>
.get(i));<z>
public SCDMIResponse deleteContainer( String server, String path )<z>
SCDMIResponse result = new SCDMIResponse();<z>
server );<z>
DELETE );<z>
Hashtable<String, String>() );<z>
;<z>
= delete.code;<z>
.body;<z>
delete.content;<z>
result = item;<z>
e )<z>
();<z>
);<z>
;<z>
= "INTERNAL ERROR or SERVER OFF-LINE";<z>
;<z>
return result;<z>
obj)<z>
)<z>
;<z>
obj instanceof X509Extension)<z>
(X509Extension)obj)));<z>
DERBitString.getInstance(obj));<z>
IOException {<z>
(adaptee == null)<z>
return null;<z>
(IGeoResourceInfo.class)) {<z>
adaptee.cast(createInfo(monitor));<z>
{<z>
;<z>
)) {<z>
));<z>
)) {<z>
adaptee.cast(createMapGraphic());<z>
;<z>
getHelper(DAVResourceType resourceType) throws DAVException {<z>
DAVResourceHelper) ourResourceHelpers.get(resourceType);<z>
if (helperImpl == null) {<z>
HttpServletResponse.SC_INTERNAL_SERVER_ERROR, null,<z>
, null, null, 0, null);<z>
;<z>
ServiceException {<z>
))) {<z>
= CampaignImageDaos.getCampaignIdsForImageId(imageId);<z>
String campaignId : campaignIds) {<z>
, campaignId);<z>
Role.SUPERVISOR)) {<z>
campaignId, imageId);<z>
CampaignRoleCache.Role.AUTHOR) &&<z>
SHARED.equals(imagePrivacyState)) {<z>
.getCampaignPrivacyState(campaignId);<z>
(CampaignRoleCache.Role.ANALYST) &&<z>
SHARED.equals(imagePrivacyState) &&<z>
SHARED.equals(campaignPrivacyState)) {<z>
;<z>
;<z>
(DataAccessException e) {<z>
.setFailed();<z>
throw new ServiceException(e);<z>
followedBy) {<z>
this;<z>
FloatMatrix B = followedBy;<z>
FloatMatrix();<z>
;<z>
.a12);<z>
B.a22);<z>
A.a21 * B.a02);<z>
* B.a12);<z>
a22);<z>
a22 * B.a02);<z>
a12);<z>
);<z>
B.a02) + B.a03;<z>
B.a12) + B.a13;<z>
B.a23;<z>
;<z>
startOffset,<z>
{<z>
IVjoSourceModule) module;<z>
jstType;<z>
= sourceModule.getJstType();<z>
) {<z>
);<z>
exists()<z>
|| !(resource instanceof IFile)) {<z>
(sourceModule<z>
);<z>
else {<z>
typeName = CodeassistUtils<z>
());<z>
sourceModule.getScriptProject()<z>
;<z>
);<z>
startOffset;<z>
.getLeafNode(jstType, startOffset,<z>
, true);<z>
JstNodeDLTKElementResolver<z>
lookupBinding(selection);<z>
;<z>
) throws IOException {<z>
;<z>
.readUTF();<z>
);<z>
originator, group, channel);<z>
List changedResources) {<z>
clearStaleResources();<z>
hasNext(); ) {<z>
(IResource)iter.next();<z>
theIResource.exists() ) {<z>
obj = resourceMap.get(theIResource);<z>
HashMap theMarkerMap = null;<z>
instanceof HashMap ) {<z>
= (HashMap)obj;<z>
);<z>
) {<z>
HashMap();<z>
theIResource, theMarkerMap);<z>
;<z>
else {<z>
(theIResource);<z>
(final Iterator<Object> objects) {<z>
yield("Another String");<z>
(objects.hasNext()) {<z>
= objects.next();<z>
<?>) {<z>
(Class<?>) object;<z>
);<z>
));<z>
));<z>
);<z>
public String getDescriptorType()<z>
if (indexable)<z>
"Index";<z>
;<z>
throws ParseException {<z>
;<z>
LinkedHashMap();<z>
(true) {<z>
():jj_ntk) {<z>
:<z>
;<z>
("background-color",n.image);<z>
case URL:<z>
n = jj_consume_token(URL);<z>
n.image);<z>
BACKGROUND_REPEAT:<z>
jj_consume_token(BACKGROUND_REPEAT);<z>
.image);<z>
case BACKGROUND_ATTACHMENT:<z>
jj_consume_token(BACKGROUND_ATTACHMENT);<z>
n.image);<z>
:<z>
LENGTH:<z>
:<z>
case RELATIVE_SIZE:<z>
BACKGROUND_POSITION:<z>
BORDER_WIDTH:<z>
background_position();<z>
)<z>
);<z>
.image);<z>
;<z>
;<z>
;<z>
) {<z>
case URL:<z>
case PERCENTAGE:<z>
case LENGTH:<z>
:<z>
:<z>
:<z>
:<z>
:<z>
case BACKGROUND_POSITION:<z>
BORDER_WIDTH:<z>
= jj_gen;<z>
label_3;<z>
(Exception ex) {<z>
.out.println("The parse for the input background is failed!");<z>
;}<z>
() throws RecognitionException {<z>
= KEYWORD_17;<z>
int _channel = DEFAULT_TOKEN_CHANNEL;<z>
);<z>
type = _type;<z>
= _channel;<z>
IEnvironmentVariable addVariable(IEnvironmentVariable var){<z>
null)<z>
null;<z>
var.getName();<z>
name = EnvVarOperationProcessor.normalizeName(name);<z>
null){<z>
);<z>
if(old != null){<z>
old, var);<z>
var);<z>
;<z>
static String getProcessingInstructionTarget(XmlProcessingInstruction pi) {<z>
pi.getChildren();<z>
, "Unknown PI structure");<z>
;<z>
;<z>
;) i++;<z>
(' ', i);<z>
{<z>
(i, pos);<z>
{<z>
);<z>
if (LOG.isDebugEnabled()) {<z>
.debug("Target: " + text);<z>
text;<z>
) {<z>
items) {<z>
StringType) {<z>
{<z>
{<z>
;<z>
true;<z>
String apnIdToType(int id) {<z>
) {<z>
APN_DEFAULT_ID:<z>
.APN_TYPE_DEFAULT;<z>
APN_MMS_ID:<z>
return Phone.APN_TYPE_MMS;<z>
:<z>
return Phone.APN_TYPE_SUPL;<z>
APN_DUN_ID:<z>
.APN_TYPE_DUN;<z>
case APN_HIPRI_ID:<z>
.APN_TYPE_HIPRI;<z>
case APN_IMS_ID:<z>
Phone.APN_TYPE_IMS;<z>
:<z>
Phone.APN_TYPE_FOTA;<z>
:<z>
Phone.APN_TYPE_CBS;<z>
") in apnIdToType");<z>
APN_TYPE_DEFAULT;<z>
MembershipEntry> getUserMembershipsFromIdentityRegistry(String authenticatedUser) {<z>
container = ExoContainerContext.getCurrentContainer();<z>
;<z>
);<z>
return currentUserIdentity.getMemberships();<z>
RecognitionException {<z>
= keepStackSize();<z>
));<z>
2;<z>
.predict(input);<z>
) {<z>
:<z>
;<z>
rule__XAttribute__UnorderedGroup_2__0();<z>
._fsp--;<z>
if (state.failed) return ;<z>
catch (RecognitionException re) {<z>
(re);<z>
recover(input,re);<z>
);<z>
;<z>
, UISpecRunContext context, JSONObject contents) throws JSONException{<z>
contents.has("type")){<z>
("type"));<z>
{<z>
"default"));<z>
.has("properties")) {<z>
);<z>
"items")) {<z>
("items"));<z>
) {<z>
());<z>
++) {<z>
instanceof JTable) {<z>
(i);<z>
= middleEnd;<z>
;<z>
, group);<z>
public String toString(Object object)<z>
)<z>
());<z>
instanceof ASTNode)<z>
toString((ASTNode)object);<z>
return super.toString(object);<z>
createFollower(int index, IEObjectConsumer inst) {<z>
{<z>
;<z>
default: return null;<z>
( HttpServletRequest request,<z>
HttpServletResponse response,<z>
String parameterName)<z>
, ServletException<z>
);<z>
)<z>
, parameterName, parameterValues );<z>
0] ) )<z>
+ "].";<z>
"validateParameterAsSingleValueAlphanumericString(): " + msg );<z>
msg );<z>
;<z>
return true;<z>
void doOKAction()<z>
;<z>
equals(review.getFile()))<z>
= null;<z>
message("projectSettings.review.export.sameFile.text"));<z>
parentDir;<z>
if (validatedFile.isDirectory())<z>
;<z>
review.getName()));<z>
();<z>
isDirectory())<z>
= null;<z>
parentDir.getPath()));<z>
.doOKAction();<z>
) {<z>
];<z>
0);<z>
ret;<z>
private boolean isNewline(int i) {<z>
i);<z>
'\u0085' ||<z>
'\u2028' || nextChar == '\u2029';<z>
{<z>
.getLocalePath(locale));<z>
null) {<z>
.getPath(), locale, url);<z>
} else {<z>
null;<z>
} catch (MalformedURLException e) {<z>
return null;<z>
boolean evalBoolean(ELContext env)<z>
env);<z>
kind) {<z>
();<z>
;<z>
InteractionContextRelation edge : edges) {<z>
{<z>
= edge.getTarget();<z>
.getContentType());<z>
));<z>
!= null) {<z>
;<z>
toArray();<z>
getDatafiles(Long datasetId) {<z>
datafiles = null;<z>
()<z>
(sessionId, datasetId,<z>
);<z>
);<z>
"datafiles number: " + datafiles.size());<z>
) {<z>
error(<z>
.getFedId(),<z>
e);<z>
datafiles;<z>
) {<z>
for (DbAttribute da : dbAttrs) {<z>
(da);<z>
oa != null) {<z>
addEdit(new RemoveAttributeUndoableEdit(<z>
] {<z>
);<z>
{<z>
this.emptyTokensEnabnled;<z>
=true;<z>
){<z>
hasToken=false;<z>
m=matcher;<z>
hasMatch=false;<z>
while(m.find()){<z>
{<z>
=true;<z>
{<z>
(emptyOk){<z>
;<z>
m,MatchResult.SUFFIX);<z>
{<z>
true;<z>
==0 && !emptyOk){<z>
;<z>
=true;<z>
();<z>
;<z>
.prefix();<z>
MatchResult.SUFFIX);<z>
MediaType> createQualitySourceMediaTypes(Produces mime) {<z>
== null) {<z>
return GENERAL_QUALITY_SOURCE_MEDIA_TYPE_LIST;<z>
;<z>
Definitions newDefinitions ) {<z>
)) {<z>
throw new IllegalArgumentException(<z>
toString());<z>
NotificationChain msgs = null;<z>
);<z>
.eInverseAdd(this,<z>
.DEFINITIONS__BINDINGS,<z>
Definitions.class,<z>
msgs);<z>
)newDefinitions, WsdlPackage.BINDING__DEFINITIONS, msgs);<z>
.dispatch();<z>
(new ENotificationImpl(this, Notification.SET,<z>
,<z>
));<z>
Fileable object)<z>
;<z>
if (object instanceof Student)<z>
STUDENT_FILE;<z>
(object instanceof Password)<z>
name = PASSWORD_FILE;<z>
else if (object instanceof Registration)<z>
= REGISTRATION_FILE;<z>
"Error, class " +<z>
() + "cannot " +<z>
;<z>
;<z>
endDocument() throws IOException<z>
depth > 0) {<z>
[ depth ]);<z>
(writeLineSepartor) {<z>
;<z>
finished = pastRoot = startTagIncomplete = true;<z>
.flush();<z>
MessageId id) {<z>
;<z>
(this) {<z>
);<z>
|| map.isEmpty()) {<z>
);<z>
( removed!=null ) {<z>
decrementReferenceCount();<z>
<UMLLinkDescriptor> getContainedTypeModelFacetLinks_Abstraction_4013(Package container) {<z>
= new LinkedList();<z>
{<z>
;<z>
) {<z>
)linkObject;<z>
UMLVisualIDRegistry.getLinkWithClassVisualID(link)) {<z>
);<z>
? targets.get(0) : null;<z>
instanceof NamedElement) {<z>
(NamedElement)theTarget;<z>
= link.getClients();<z>
sources.get(0) : null;<z>
) {<z>
)theSource;<z>
;<z>
result;<z>
wasNull() {<z>
return rs.wasNull();<z>
} catch (SQLException e) {<z>
e);<z>
, String value) {<z>
(property);<z>
(";");<z>
StringBuilder sb = new StringBuilder();<z>
;<z>
) {<z>
)) {<z>
(":");<z>
.length != 2) {<z>
], ""};<z>
equals(parts[0])) {<z>
[1] = value;<z>
;<z>
+ parts[1] + ";");<z>
!found) {<z>
+ ":" + value + ";");<z>
;<z>
this;<z>
public void uninstallListeners() {<z>
.uninstallListeners();<z>
if (_component instanceof JTextComponent) {<z>
(this);<z>
.removePropertyChangeListener("document", this);<z>
Object node) {<z>
!(node instanceof HadoopNodeEntity))<z>
false;<z>
node).getVmName() != null) {<z>
().equals(this.vmName);<z>
false;<z>
) {<z>
{<z>
);<z>
(observable, dataModification);<z>
java.util.Calendar param){<z>
(param != null){<z>
= true;<z>
} else {<z>
;<z>
this.localLastUpdatedTime=param;<z>
(boolean wts) {<z>
if (wts) {<z>
= false;<z>
);<z>
(String id) throws DaoException {<z>
LOG.debug("Find one instance of Finders entity by id : " + id);<z>
= HibernateUtil.currentSession();<z>
createCriteria(Finders.class)<z>
));<z>
uniqueResult();<z>
return result;<z>
HibernateException e) {<z>
);<z>
) {<z>
;<z>
;<z>
);<z>
f.read(buffer);<z>
} finally {<z>
(f != null)<z>
();<z>
ignored) {<z>
IOException e) {<z>
;<z>
String(buffer);<z>
String name, InputType inputType) {<z>
parent;<z>
superClass;<z>
) {<z>
(inputType.superClassId != null) {<z>
(inputType.superClassId);<z>
setId(Id);<z>
name);<z>
isExtensionInputType = false;<z>
Id.equals(inputType.id);<z>
if (inputType.sourceContentTypeIds != null) {<z>
clone();<z>
sourceContentTypes != null) {<z>
sourceContentTypes = inputType.sourceContentTypes.clone();<z>
(inputType.inputExtensions != null) {<z>
inputType.inputExtensions.clone();<z>
(inputType.headerContentTypeIds != null) {<z>
();<z>
if (inputType.headerContentTypes != null) {<z>
;<z>
) {<z>
);<z>
inputType.dependencyContentTypeId != null) {<z>
new String(inputType.dependencyContentTypeId);<z>
= inputType.dependencyContentType;<z>
!= null) {<z>
;<z>
null) {<z>
;<z>
null) {<z>
new String(inputType.assignToOptionId);<z>
if (inputType.buildVariable != null) {<z>
new String(inputType.buildVariable);<z>
.multipleOfType != null) {<z>
.booleanValue());<z>
null) {<z>
booleanValue());<z>
dependencyGeneratorElement;<z>
dependencyGenerator = inputType.dependencyGenerator;<z>
;<z>
inputType.languageName;<z>
languageInfoCalculatorElement;<z>
.languageInfoCalculator;<z>
buildInfoDicsoveryProfileId;<z>
null) {<z>
inputOrder : inputType.getInputOrderList()) {<z>
);<z>
getInputOrderList().add(newInputOrder);<z>
(inputType.additionalInputList != null) {<z>
getAdditionalInputList()) {<z>
(this, additionalInput);<z>
getAdditionalInputList().add(newAdditionalInput);<z>
{<z>
.isDirty;<z>
rebuildState;<z>
{<z>
(true);<z>
);<z>
{<z>
parameters = new Parameters();<z>
IS_MANDATORY));<z>
;<z>
(<z>
listener) {<z>
null) {<z>
NullPointerException();<z>
bcmListeners) {<z>
!bcmListeners.contains(listener)) {<z>
bcmListeners.add(listener);<z>
) {<z>
size();<z>
widths = new int[compCount];<z>
index = 0;<z>
;<z>
: controlPanel.getFlowComponents()) {<z>
getPreferredSize().width;<z>
;<z>
currBestResult += (pref + gap);<z>
inflectionIndex1++) {<z>
inflectionIndex2++) {<z>
;<z>
; index1 <= inflectionIndex1; index1++) {<z>
[index1] + gap;<z>
int w2 = 0;<z>
1; index2 <= inflectionIndex2; index2++) {<z>
+ gap;<z>
int w3 = 0;<z>
index3++) {<z>
] + gap;<z>
w1, w2), w3);<z>
)<z>
;<z>
currBestResult;<z>
value) {<z>
{<z>
NullPointerException();<z>
.bar_.isEmpty()) {<z>
();<z>
bar_.add(value);<z>
this;<z>
boolean synpred4_PPLexer() {<z>
++;<z>
.mark();<z>
);<z>
} catch (RecognitionException re) {<z>
);<z>
= !state.failed;<z>
rewind(start);<z>
backtracking--;<z>
state.failed=false;<z>
;<z>
{<z>
newGeo = null;<z>
();<z>
)<z>
;<z>
+geo+" as "+cmdtext);<z>
).getAlgebraProcessor()<z>
);<z>
doAfterRedefine(newGeo);<z>
);<z>
return newGeo;<z>
e) {<z>
.showError("ReplaceFailed");<z>
MyError err) {<z>
.showError(err);<z>
return newGeo;<z>
public NetXAConnection createControlConnection(NetLogWriter logWriter,<z>
user,<z>
password,<z>
.derby.jdbc.ClientDataSource dataSource,<z>
rmId,<z>
{<z>
controlCon_ = new NetXAConnection(logWriter,<z>
this);<z>
.getNetConnection().setTransactionIsolation(<z>
;<z>
if (logWriter_ != null) {<z>
controlCon_);<z>
return controlCon_;<z>
( SqlException se )<z>
se.getSQLException();<z>
() {<z>
(myFacetPointer == null) {<z>
null;<z>
();<z>
) {<z>
;<z>
facet);<z>
!= null<z>
, AndroidCommonUtils.ANDROID_FINAL_PACKAGE_FOR_ARTIFACT_SUFFIX)<z>
: null;<z>
null<z>
? FileUtil.toSystemIndependentName(path) + "!/"<z>
;<z>
public String toString() {<z>
("getAllMetrics_args(");<z>
boolean first = true;<z>
);<z>
== null) {<z>
append("null");<z>
{<z>
ctx);<z>
false;<z>
sb.append(")");<z>
;<z>
openConnection()<z>
"keystore.path");<z>
);<z>
.getProperty("keystore.passwd");<z>
keystorePasswd);<z>
keystorePasswd.toCharArray();<z>
KeyStore.getInstance("JKS");<z>
;<z>
tmf = TrustManagerFactory.getInstance("SunX509");<z>
(tks);<z>
getProperty("p12.path");<z>
(p12Path);<z>
.getProperty("p12.passwd");<z>
);<z>
KeyStore ks = KeyStore.getInstance("PKCS12");<z>
);<z>
(new FileInputStream(p12Path), p12Password);<z>
= KeyManagerFactory.getInstance("SunX509");<z>
.init(ks, p12Password);<z>
"SSLv3");<z>
null);<z>
;<z>
(c);<z>
NoSuchAlgorithmException ex) {<z>
());<z>
catch (KeyManagementException ex) {<z>
new IOException(ex.toString());<z>
) {<z>
(ex.toString());<z>
{<z>
;<z>
UnrecoverableKeyException ex) {<z>
toString());<z>
null) {<z>
);<z>
{<z>
negativeText = text;<z>
negativeListener = listener;<z>
;<z>
throws Exception {<z>
;<z>
numArgs ) {<z>
()+ " arguments";<z>
"'" );<z>
args );<z>
stream)<z>
;<z>
; j < _properties_per_block; j++)<z>
[ j ].writeData(stream);<z>
(int colorspace)<z>
CS_END))<z>
CS_BASE;<z>
] == null)<z>
colorspace);<z>
(profile);<z>
return INSTANCES[instanceIndex];<z>
("unknown/unsupported colorspace");<z>
getCompactionCandidates()<z>
i >= 0; i--)<z>
];<z>
isEmpty())<z>
;<z>
getCompacting());<z>
;<z>
, score);<z>
) > 1))<z>
(i);<z>
logger.isDebugEnabled())<z>
));<z>
())<z>
return candidates;<z>
;<z>
() throws PersistenceException {<z>
.persistence.Catalog();<z>
[] ids = panel.getActiveFiltersId();<z>
for (String filterId : ids) {<z>
= new ActiveFilter();<z>
.setId(filterId);<z>
add(af);<z>
.getTags();<z>
(String tag : tags) {<z>
;<z>
xmlTag.setText(tag);<z>
;<z>
sources = panel.getTaggedSources(tag);<z>
String source : sources) {<z>
().add(source);<z>
(xmlTag);<z>
Services.getService(Workspace.class);<z>
File file = ws.getFile(CATALOG_PERSISTENCE_FILE);<z>
JAXBContext.newInstance(<z>
.GEOCATALOG_PERSISTENCE_FILE,<z>
.getClassLoader());<z>
= new PrintWriter(file);<z>
).marshal(cat, printWriter);<z>
();<z>
) {<z>
"orbisgis.org.orbisgis.core.geocatalog.cannotSave"), e);<z>
e) {<z>
+ ": " + file);<z>
lParam) {<z>
OS.IsWinCE) return null;<z>
= new HELPINFO ();<z>
);<z>
shell = menuShell ();<z>
.isEnabled ()) return null;<z>
== OS.HELPINFO_MENUITEM) {<z>
.iCtrlId);<z>
item.isEnabled ()) {<z>
;<z>
)) {<z>
widget = item;<z>
else {<z>
Menu menu = item.parent;<z>
) widget = menu;<z>
{<z>
handle;<z>
, OS.WM_CANCELMODE, 0, 0);<z>
(SWT.Help);<z>
LRESULT.ONE;<z>
null;<z>
) {<z>
postEvent (SWT.Help);<z>
return LRESULT.ONE;<z>
null;<z>
public boolean onCreateOptionsMenu(Menu menu) {<z>
;<z>
contact_list_menu, menu);<z>
BrandingResources brandingRes = mApp.getBrandingResource(mProviderId);<z>
id.menu_invite_user).setTitle(<z>
(BrandingResourceIDs.STRING_MENU_ADD_CONTACT));<z>
true;<z>
loader, Map namedEntityResolver, ArrayOpHandler arrayOpHandler) {<z>
loader;<z>
= namedEntityResolver;<z>
!=null? arrayOpHandler: this;<z>
this.insts = loader.getInstructionFactory();<z>
boolean getGraphicsLevel()<z>
;<z>
() throws DeploymentException {<z>
true);<z>
Utils.calculateDefaultModuleVersion(<z>
axisConfig);<z>
);<z>
();<z>
{<z>
,<z>
.getMessage()));<z>
;<z>
{<z>
env.isClosed()) {<z>
);<z>
);<z>
protected IAction applyAction(IAction a){<z>
oldState = currentState.copy();<z>
currentState.modify(a);<z>
(oldState,a);<z>
reward=r;<z>
.iterator();<z>
{<z>
);<z>
.setCurrentState(currentState);<z>
{<z>
> iterator2=listOfAgents.iterator();<z>
)){<z>
ag=iterator2.next();<z>
getOldState(),<z>
.getCurrentState(),<z>
ag.getLastAction(),<z>
));<z>
a;<z>
)<z>
] = (byte) in;<z>
>> 8);<z>
) (in >> 16);<z>
byte) (in >> 24);<z>
ClassifierDescriptor getClassifier(@NotNull Name name) {<z>
;<z>
classifier = writableWorker.getClassifier(name);<z>
classifier != null) return classifier;<z>
name);<z>
;<z>
super.getClassifier(name);<z>
mult(int scalar) {<z>
scalar;<z>
*= scalar;<z>
z *= scalar;<z>
image )<z>
tracker.process(image);<z>
());<z>
0 ) {<z>
();<z>
.spawnTracks();<z>
mode = 1;<z>
false;<z>
1 ) {<z>
checkInitialize();<z>
) {<z>
updatePosition() ) {<z>
);<z>
= 1;<z>
;<z>
;<z>
reset();<z>
();<z>
= false;<z>
= true;<z>
false;<z>
{<z>
isSufficientMotion() ) {<z>
);<z>
;<z>
true;<z>
getPassPercentage(boolean onlyCritical) {<z>
passed, total;<z>
{<z>
();<z>
= getCriticalTotal();<z>
{<z>
passed = getOverallPassed();<z>
total = getOverallTotal();<z>
return 100;<z>
passed / total * 100;<z>
return roundToDecimals(percentage, 1);<z>
columnIndex) {<z>
columns) {<z>
col == columnIndex) {<z>
;<z>
false;<z>
,<z>
)<z>
throws SystemException {<z>
, categoryId, threadId);<z>
list = findByG_C_T(groupId, categoryId, threadId,<z>
orderByComparator);<z>
.isEmpty()) {<z>
(0);<z>
;<z>
) {<z>
))<z>
nextInt(list.size()));<z>
;<z>
public Dimension getPreferredSize() {<z>
= getMapTileSize();<z>
Dimension(<z>
.width,<z>
);<z>
[] getUserIDs(String globusID) {<z>
userIDs = super.getUserIDs(globusID);<z>
{<z>
;<z>
String[] {user};<z>
return userIDs;<z>
IOException {<z>
= new Path(input);<z>
);<z>
.getFileStatus(inputPath);<z>
;<z>
) + qPath.toString()<z>
status.getLen();<z>
);<z>
.Class refinement) {<z>
ActivityFinalNode) {<z>
BASE_PART.equals(part)<z>
== ActivityFinalNodePropertiesEditionComponent.class)<z>
(), mode);<z>
(editingContext, mode, part, refinement);<z>
() {<z>
);<z>
LEFT, 0, 0));<z>
BorderFactory.createTitledBorder(<z>
,<z>
.getResString("aggregate_graph_yaxis_group")));<z>
yAxisPane.add(maxValueYAxisLabel);<z>
return yAxisPane;<z>
isEnabled() {<z>
();<z>
(Exception e) {<z>
(e, e);<z>
return false;<z>
{<z>
= null;<z>
ResultSet rs = null;<z>
"SELECT * FROM " + tableName + " WHERE "<z>
+ columnName + "=?;");<z>
);<z>
);<z>
);<z>
catch (SQLException ex) {<z>
);<z>
false;<z>
} finally {<z>
;<z>
;<z>
onCreateDialog(int id) {<z>
(this).create();<z>
(id) {<z>
SHOW_ERROR_DIALOG:<z>
alertDialog.setCancelable(false);<z>
("Error!!!");<z>
.setMessage("Error!!! Session got changed. Please check schedule again.");<z>
"OK", new DialogInterface.OnClickListener() {<z>
void onClick(DialogInterface dialog, int which) {<z>
(SHOW_ERROR_DIALOG);<z>
this.finish();<z>
new Intent(SessionDetailsActivity.this,<z>
.class);<z>
intent);<z>
;<z>
alertDialog;<z>
{<z>
Log.d(TAG, "onResume");<z>
onResume();<z>
);<z>
= Context.NOTIFICATION_SERVICE;<z>
mNotificationManager = (NotificationManager)getSystemService(ns);<z>
.cancel(WeiboAApplication.NOTIFICATION_NEW_WEIBO_ID);<z>
;<z>
) {<z>
);<z>
) {<z>
= index;<z>
.removeFirst();<z>
private void collectAliasCandidates(NodeTraversal t,<z>
referenceMap) {<z>
{<z>
();) {<z>
;<z>
referenceMap.getReferences(v);<z>
size() >= 2 &&<z>
) &&<z>
referenceInfo.isAssignedOnceInLifetime()) {<z>
referenceInfo.getInitializingReference();<z>
Node value = init.getAssignedValue();<z>
null && value.isName()) {<z>
;<z>
program, int location, LongBuffer value) {<z>
= GLContext.getCapabilities();<z>
function_pointer = caps.glProgramUniform1i64vNV;<z>
.checkFunctionAddress(function_pointer);<z>
(value);<z>
getAddress(value), function_pointer);<z>
) {<z>
job = new WorkbenchJob("MemoryViewTab PropertyChanged") {<z>
{<z>
isDisposed())<z>
;<z>
== fRendering)<z>
().equals(IBasicPropertyConstants.P_TEXT))<z>
event.getNewValue();<z>
!= null && value instanceof String)<z>
(String)value;<z>
setTabLabel(label);<z>
(fRendering.getLabel());<z>
P_IMAGE))<z>
.getNewValue();<z>
)<z>
(Image)value;<z>
.setImage(image);<z>
;<z>
.OK_STATUS;<z>
(true);<z>
schedule();<z>
viewType) {<z>
, viewType);<z>
;<z>
.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);<z>
mActionBar.setListNavigationCallbacks(mActionBarMenuSpinnerAdapter, this);<z>
{<z>
.AGENDA:<z>
.setSelectedNavigationItem(BUTTON_AGENDA_INDEX);<z>
case ViewType.DAY:<z>
BUTTON_DAY_INDEX);<z>
WEEK:<z>
);<z>
.MONTH:<z>
setSelectedNavigationItem(BUTTON_MONTH_INDEX);<z>
BUTTON_DAY_INDEX);<z>
before, CompileContext context) {<z>
;<z>
this) {<z>
>();<z>
myState.beforeCompileTasks : myState.afterCompileTasks;<z>
for (MavenCompilerTask each : tasks) {<z>
);<z>
(file == null) continue;<z>
add(new MavenRunnerParameters(true,<z>
).getPath(),<z>
()),<z>
)));<z>
));<z>
public void setPageIncrement (int value) {<z>
checkWidget ();<z>
< 1) return;<z>
= new GtkAdjustment ();<z>
adjustment, adjustmentHandle);<z>
value;<z>
(adjustmentHandle, adjustment);<z>
0, 0, VALUE_CHANGED);<z>
(adjustmentHandle);<z>
0, VALUE_CHANGED);<z>
<String> callback)<z>
= new ScriptBuffer();<z>
= "";<z>
null)<z>
= "var reply = ";<z>
(callbackPrefix + getContextPath() + "getSortType");<z>
if (callback != null)<z>
class);<z>
"__System.activateCallback", key, "reply");<z>
(script);<z>
throws RemoteException {<z>
long startTime = System.currentTimeMillis();<z>
hello.sayHello(message);<z>
startTime);<z>
elapsed+" ms");<z>
disp) {<z>
.eventLoopIdle(disp);<z>
!= null)<z>
();<z>
;<z>
represent() throws SAXException, IOException {<z>
new StringWriter();<z>
XmlWriter xmlWriter = new XmlWriter(xml);<z>
.startDocument();<z>
;<z>
("response");<z>
"0");<z>
alias("record", TranscriberData.class);<z>
"data");<z>
);<z>
, "resolves-to");<z>
(TranscriberData transcriber : transcriberDataBean<z>
getAllTranscribers()) {<z>
, xmlWriter.getWriter());<z>
endElement("data");<z>
);<z>
);<z>
xml.toString();<z>
StorageFactory defaultStorageFactory, IndexerFactory defaultIndexerFactory, SerializerFactory defaultSerializerFactory)<z>
this.defaultStorageFactory = defaultStorageFactory;<z>
defaultIndexerFactory = defaultIndexerFactory;<z>
;<z>
o2) {<z>
!= -1) {<z>
) o1)[_idx];<z>
_idx];<z>
} else {<z>
(o1, o1, _ctx, _params);<z>
_ctx, _params);<z>
null && o2 == null)<z>
;<z>
if (o1 == null)<z>
;<z>
null)<z>
? -1 : 1;<z>
(o1 instanceof Boolean && o2 instanceof Boolean) {<z>
: 0;<z>
) ? 1 : 0;<z>
- i2;<z>
(_asc)<z>
(o2);<z>
(o1);<z>
} catch (ClassCastException cce) {<z>
Localizer.forPackage<z>
class);<z>
("not-comp", o1, o2));<z>
void defineDisplayGeos(){<z>
)<z>
();<z>
) + "]";<z>
, null, true);<z>
setObjColor(Color.red);<z>
.setPointSize(4);<z>
("testPoint");<z>
(xSegment != null)<z>
xSegment.remove();<z>
", (x(" + testPoint.getLabel() + "),0) ]";<z>
= createGeoFromString(expr, null, true);<z>
xSegment.setEuclidianVisible(true);<z>
red);<z>
);<z>
ySegment != null)<z>
.remove();<z>
+ ")) ]";<z>
true);<z>
.red);<z>
(true);<z>
"ySegment");<z>
null)<z>
;<z>
"," + testPoint.getLabel() + "]";<z>
(expr, null, true);<z>
setObjColor(Color.red);<z>
tangentLine.setEuclidianVisible(false);<z>
);<z>
null)<z>
);<z>
getLabel() + "]";<z>
, null, true);<z>
oscCircle.setObjColor(Color.red);<z>
;<z>
oscCircle.setLabel("oscCircle");<z>
!= null)<z>
();<z>
() + "]";<z>
(expr, null, true);<z>
);<z>
("derivative");<z>
)<z>
;<z>
+ selectedGeo.getLabel() + " , 2 ]";<z>
(expr, null, true);<z>
setEuclidianVisible(false);<z>
"derivative2");<z>
();<z>
{<z>
;<z>
System.err.print(" [ ");<z>
boolean first = true;<z>
) {<z>
first) {<z>
print("| ");<z>
;<z>
;<z>
.print(key);<z>
key.endsWith("="))<z>
;<z>
System.err.print(" ");<z>
println("]*");<z>
void paintComponent(Graphics g) {<z>
paintComponent(g);<z>
) {<z>
.setColor(Color.GRAY);<z>
;<z>
dy = 17;<z>
setColor(Color.WHITE);<z>
{<z>
text, 8, dy);<z>
{<z>
dy);<z>
org.w3c.dom.Element elem)<z>
)<z>
);<z>
)));<z>
)));<z>
;<z>
()));<z>
ele.appendChild(eleText);<z>
ele);<z>
point.getTime() != null)<z>
createElement("time");<z>
.createTextNode(point.getTime());<z>
(timeText);<z>
.appendChild(time);<z>
.appendChild(trkpt);<z>
{<z>
if(parser == null) {<z>
));<z>
return parser;<z>
buildIPString(final int[] ipBytes) {<z>
final StringBuilder str = new StringBuilder();<z>
.length; ++i) {<z>
[i]);<z>
i != ipBytes.length - 1) {<z>
(".");<z>
str.toString();<z>
<IASSwitchLabel> getLabels()<z>
;<z>
());<z>
)<z>
);<z>
.unmodifiableList(results);<z>
void addHeadFilter(final HeadFilter headFilter) {<z>
isReference()) {<z>
);<z>
(false);<z>
.addElement(headFilter);<z>
) {<z>
init_arrays();<z>
(ins));<z>
public void closeScreen()<z>
.windowId));<z>
this.closeInventory();<z>
(){<z>
0.0;<z>
) {<z>
[i]);<z>
d;<z>
private void updateBusyLabel() {<z>
);<z>
0;<z>
if (shouldShowBusy == fIsBusyShown)<z>
;<z>
;<z>
, Object data) {<z>
if (minValue == null) {<z>
getValue().toString());<z>
} else {<z>
));<z>
data);<z>
List<TxnEventBase> bucket) throws IOException {<z>
+ bucket.size() + " items");<z>
event:bucket) {<z>
.toString());<z>
log.info(".output End of bucket");<z>
(Object object) {<z>
(<z>
).getRootAdapterFactory(),<z>
),<z>
getString("_UI_Font_name_feature"),<z>
("_UI_PropertyDescriptor_description", "_UI_Font_name_feature",<z>
FONT__NAME, true, false, false,<z>
);<z>
{<z>
= false;<z>
.compile("^[0-9]{4}?[aA-zZ]{2}$");<z>
matches();<z>
return rtrn;<z>
() throws InterruptedException {<z>
!= null) {<z>
cleaner.shutdown();<z>
init() {<z>
0;<z>
isFirst = true;<z>
isLast = false;<z>
public boolean equals(Object obj) {<z>
obj)<z>
;<z>
== null)<z>
return false;<z>
.getClass())<z>
return false;<z>
ArtifactModelConfiguration) obj;<z>
(_contentType != other._contentType)<z>
;<z>
)<z>
;<z>
_includeVirtualModuleForMissingTypes)<z>
false;<z>
return true;<z>
) {<z>
{<z>
;<z>
{<z>
URL url = null;<z>
("http://www.google.com");<z>
MalformedURLException e1) {<z>
();<z>
) {<z>
.this);<z>
"Connection Error", JOptionPane.ERROR_MESSAGE, _kairosIcon);<z>
updatePart(Notification msg) {<z>
editingPart.isVisible()) {<z>
(TransitionPropertiesEditionPart)editingPart;<z>
){<z>
!= null) {<z>
));<z>
{<z>
transitionPart.setDescription("");<z>
GraalViewsRepository.Transition.Properties.guard)) {<z>
.getNewValue() != null) {<z>
)));<z>
} else {<z>
transitionPart.setGuard("");<z>
)<z>
);<z>
Properties.target))<z>
)msg.getNewValue());<z>
GraalViewsRepository.Transition.Properties.kind))<z>
msg.getNewValue());<z>
closeConference(IConference conf)<z>
.out.println("ConferenceManager::closeConference");<z>
);<z>
this.recordingAdapter != null)<z>
());<z>
confKey);<z>
.conferenceClosed();<z>
getAdapter().reportMeetingClosed(conf);<z>
);<z>
)<z>
conf.getConferenceId());<z>
Exception e)<z>
spill ( DataBag<?> bag ) {<z>
) {<z>
?>)bag).spill() ;<z>
) {<z>
javax.swing.JToolBar();<z>
();<z>
new javax.swing.JButton();<z>
();<z>
javax.swing.JScrollPane();<z>
org.jdesktop.swingx.JXTable();<z>
javax.swing.JScrollPane();<z>
.swingx.JXTable();<z>
setName("Form");<z>
.event.AncestorListener() {<z>
AncestorEvent evt) {<z>
event.AncestorEvent evt) {<z>
;<z>
swing.event.AncestorEvent evt) {<z>
;<z>
new java.awt.BorderLayout());<z>
true);<z>
.setName("bHerramientas");<z>
PanelPartesPerdidosProfesor.class, this);<z>
actionMap.get("actualizar"));<z>
);<z>
.SwingConstants.CENTER);<z>
.setName("bActualizar");<z>
(javax.swing.SwingConstants.BOTTOM);<z>
.add(bActualizar);<z>
;<z>
);<z>
(javax.swing.SwingConstants.CENTER);<z>
jButton1.setName("jButton1");<z>
BOTTOM);<z>
);<z>
PAGE_START);<z>
setDividerLocation(250);<z>
);<z>
"scrollProfesores");<z>
tablaProfesores.setModel(modeloProfesores);<z>
(true);<z>
"tablaProfesores");<z>
.setViewportView(tablaProfesores);<z>
.setLeftComponent(scrollProfesores);<z>
setName("scroll");<z>
(modelo);<z>
tabla.setColumnControlVisible(true);<z>
setName("tabla");<z>
scroll.setViewportView(tabla);<z>
(scroll);<z>
.CENTER);<z>
)<z>
;<z>
text.trim();<z>
!originalText.equals(text));<z>
boolean equals(Object obj)<z>
) return true;<z>
;<z>
obj;<z>
);<z>
method, RepositoryBaseResource resource, String id )<z>
() == null )<z>
equals( resource.getRepoType() ) )<z>
.class.getName() );<z>
() );<z>
new XStreamRepresentation( xstream, "", mediaType );<z>
"" : "/" + id;<z>
idPart;<z>
;<z>
);<z>
( repoResponseRequest );<z>
) );<z>
.sendMessage( serviceURI, method, representation );<z>
,<z>
{<z>
(Identifier<z>
);<z>
(application == null) {<z>
, getDatabaseName())));<z>
null;<z>
());<z>
BSONObject document: documents){<z>
);<z>
id instanceof ObjectId){<z>
());<z>
.toMap());<z>
) {<z>
, e);<z>
e);<z>
null;<z>
() {<z>
return (this.contextPath);<z>
() {<z>
updatePasteStatusTimer.isRunning()) {<z>
;<z>
updatePasteStatus();<z>
, int postalCode, String city) {<z>
= addressLine1;<z>
= addressLine2;<z>
.postalCode = postalCode;<z>
city;<z>
public final void mLiteral() throws RecognitionException {<z>
= Literal;<z>
;<z>
int alt9=2;<z>
= input.LA(1);<z>
) {<z>
=1;<z>
LA9_0=='\'') ) {<z>
2;<z>
=<z>
, 9, 0, input);<z>
;<z>
(alt9) {<z>
:<z>
match('\"');<z>
alt7=2;<z>
1);<z>
7_0<='\uFFFF')) ) {<z>
1;<z>
) {<z>
:<z>
ut.LA(1)<='\uFFFF') ) {<z>
input.consume();<z>
(null,input);<z>
mse);<z>
mse;}<z>
loop7;<z>
);<z>
('\"');<z>
2 :<z>
;<z>
=2;<z>
input.LA(1);<z>
\uFFFF')) ) {<z>
=1;<z>
switch (alt8) {<z>
1 :<z>
input.LA(1)<='\uFFFF') ) {<z>
);<z>
new MismatchedSetException(null,input);<z>
;<z>
;}<z>
loop8;<z>
;<z>
('\'');<z>
= _type;<z>
;<z>
) {<z>
) {<z>
label + "=");<z>
INFINITY)<z>
"inf");<z>
].distance);<z>
sPath[j].parentVertex].label;<z>
;<z>
" ");<z>
public String[] getExtensions() {<z>
;<z>
> 0) {<z>
getContentTypeManager();<z>
;<z>
contentTypeIds.length; ++i) {<z>
;<z>
if (null != contentType) {<z>
= contentType.getFileSpecs(IContentType.FILE_EXTENSION_SPEC);<z>
(thisTypeExtensions));<z>
()]);<z>
EMPTY_ARR;<z>
public Plot getRootPlot() {<z>
;<z>
== null) {<z>
;<z>
);<z>
public int getMaskAt(int index){<z>
length)<z>
[index];<z>
return -1;<z>
{<z>
;<z>
8) {<z>
;<z>
(left);<z>
left;<z>
) {<z>
uri != null) {<z>
setImageURI(uri);<z>
);<z>
initializeValues(int selectionIndex) {<z>
{<z>
;<z>
0){<z>
.removeAll();<z>
param : extractMethodRefactoring.getCallAndMethHeadParameters()) {<z>
.NONE);<z>
createSimpleTypeName(param.getType()));<z>
, tblItem);<z>
);<z>
tblParameters);<z>
;<z>
() {<z>
(guid);<z>
== null) {<z>
;<z>
addLinks(entity);<z>
sbdAlias, String expression) throws StreamBaseException<z>
conversation = SbClientFactory.getByAlias(sbdAlias);<z>
varName,expression);<z>
EditorCell createConstant_hezczn_a0(EditorContext editorContext, SNode node) {<z>
);<z>
"Constant_hezczn_a0");<z>
).apply(editorCell);<z>
.setDefaultText("");<z>
;<z>
private final ICommCallback callback = new ICommCallback() {<z>
) {<z>
;<z>
> getJavaPackages() {<z>
TrustEvidenceCollector.PACKAGES;<z>
stanza, Object payload) {<z>
Log.d(TrustEvidenceCollector.TAG, "receiveResult:stanza="<z>
.stanzaToString(stanza)<z>
.getClass().getName());<z>
TrustEvidenceCollectorResponseBean) {<z>
=<z>
payload;<z>
d(TrustEvidenceCollector.TAG,<z>
responseBean.getMethodName());<z>
responseBean.getMethodName()) {<z>
:<z>
:<z>
= null;<z>
this.callbackException =<z>
"Unsupported method in response bean: "<z>
responseBean.getMethodName());<z>
{<z>
callbackException =<z>
TrustEvidenceCollectorCommException("Unsupported payload type: "<z>
().getName());<z>
.this.cdLatch.countDown();<z>
(Stanza stanza, XMPPError error) {<z>
TrustEvidenceCollector.TAG, "receiveError:stanza="<z>
.stanzaToString(stanza)<z>
;<z>
!= null)<z>
.callbackException = error;<z>
.callbackException =<z>
TrustEvidenceCollectorCommException("Unspecified XMPPError");<z>
.this.cdLatch.countDown();<z>
, String node, XMPPInfo info) {<z>
"receiveInfo with stanza "<z>
.stanzaToString(stanza));<z>
(Stanza stanza, Object payload) {<z>
"receiveMessage with stanza "<z>
;<z>
node, List<String> items) {<z>
, "receiveItems with stanza "<z>
(stanza)<z>
+ ", node " + node<z>
+ " and items: ");<z>
: items)<z>
, item);<z>
{<z>
sb = new StringBuilder();<z>
);<z>
.getId());<z>
.append(",");<z>
);<z>
);<z>
.getTo());<z>
);<z>
();<z>
> _withValueTypeSerializer(TypeSerializer vts)<z>
, _keyType, _valueType, _valueTypeIsStatic, vts,<z>
_property);<z>
(_valueSerializer != null) {<z>
= _valueSerializer;<z>
ms;<z>
int dnId, long numbytes,<z>
{<z>
= id;<z>
datanodeId = dnId;<z>
= numbytes;<z>
this.genstamp = genstamp;<z>
fileId = fileId;<z>
.fileIndex = fileIndex;<z>
= id;<z>
> getComponentData(final Page page)<z>
ComponentData>();<z>
Void>()<z>
Void> visit)<z>
.getPath()))<z>
componentData;<z>
();<z>
(name.indexOf("$") > 0)<z>
);<z>
, Component.PATH_SEPARATOR);<z>
, name,<z>
;<z>
);<z>
if (renderDuration != null)<z>
renderDuration;<z>
value = component.getDefaultModelObjectAsString();<z>
)<z>
= e.getMessage();<z>
);<z>
;<z>
return data;<z>
) {<z>
).getSelected();<z>
;<z>
);<z>
) != 2) {<z>
Main.parent,<z>
,<z>
("Warning"),<z>
WARNING_MESSAGE);<z>
new HashSet <Node>();<z>
, newNodes);<z>
selectedNodes);<z>
).addSelected(newNodes);<z>
null;<z>
, SNode node) {<z>
editorContext, node);<z>
setCellId("Collection_ju370r_a");<z>
));<z>
(editorContext, node));<z>
createRefNode_ju370r_c0(editorContext, node));<z>
editorCell;<z>
int featureID) {<z>
{<z>
REQUEST_BASE_TYPE__SERVICE:<z>
();<z>
REQUEST_BASE_TYPE__VERSION:<z>
unsetVersion();<z>
.REQUEST_BASE_TYPE__BASE_URL:<z>
(BASE_URL_EDEFAULT);<z>
REQUEST_BASE_TYPE__EXTENDED_PROPERTIES:<z>
setExtendedProperties(EXTENDED_PROPERTIES_EDEFAULT);<z>
eUnset(featureID);<z>
public boolean authenticate(Request request,<z>
HttpServletResponse response,<z>
config)<z>
throws IOException {<z>
principal = request.getUserPrincipal();<z>
REQ_SSOID_NOTE);<z>
(principal != null) {<z>
)<z>
;<z>
if (ssoId != null)<z>
(true));<z>
true);<z>
!= null) {<z>
))<z>
" set; attempting " +<z>
);<z>
))<z>
return true;<z>
= null;<z>
String password = null;<z>
MessageBytes authorization =<z>
getMimeHeaders()<z>
.getValue("authorization");<z>
if (authorization != null) {<z>
();<z>
authorizationBC = authorization.getByteChunk();<z>
0)) {<z>
);<z>
= authorization.getCharChunk();<z>
;<z>
colon = authorizationCC.indexOf(':');<z>
(colon < 0) {<z>
;<z>
} else {<z>
);<z>
0, colon);<z>
new String(buf, colon + 1,<z>
) - colon - 1);<z>
getOffset() - 6);<z>
authenticate(username, password);<z>
(principal != null) {<z>
, response, principal,<z>
HttpServletRequest.BASIC_AUTH, username, password);<z>
true);<z>
;<z>
("Basic realm=\"");<z>
{<z>
value.append(REALM_NAME);<z>
else {<z>
(config.getRealmName());<z>
.append('\"');<z>
AUTH_HEADER_NAME, value.toString());<z>
HttpServletResponse.SC_UNAUTHORIZED);<z>
false);<z>
{<z>
!= null) {<z>
;<z>
returned;<z>
return 0;<z>
, Object... args) {<z>
format(format,args));<z>
e) {<z>
"Error reading line "+<z>
,e);<z>
(MessagePartInfo part, XMLStreamReader reader) {<z>
null) {<z>
() == XMLStreamReader.START_DOCUMENT) {<z>
);<z>
().getMethod("loadObject",<z>
.class})<z>
, reader);<z>
;<z>
{<z>
Fault(e);<z>
return null;<z>
)<z>
ASTUtils.parse(statement + ";;");<z>
;<z>
(parser.statement());<z>
)<z>
, e);<z>
stmt;<z>
Command createChangeConstraintCommand(<z>
EditPart child, Object constraint) {<z>
BControlChangeLayoutCommand();<z>
;<z>
());<z>
((Rectangle) constraint);<z>
= cmd;<z>
.NORTH_SOUTH) != 0) {<z>
request.getExtendedData().get(<z>
);<z>
) {<z>
, part, result,<z>
);<z>
!= null) {<z>
.getAlignment(part);<z>
edgeBeingResized = 0;<z>
)<z>
1;<z>
1;<z>
edgeBeingResized)<z>
part, true));<z>
0) {<z>
.getExtendedData().get(<z>
.KEY_VERTICAL_GUIDE);<z>
(guidePos != null) {<z>
chainGuideAttachmentCommand(request, part, result,<z>
false);<z>
!= null) {<z>
.getAlignment(part);<z>
;<z>
WEST) != 0)<z>
;<z>
edgeBeingResized = 1;<z>
edgeBeingResized)<z>
(new ChangeGuideCommand(part, false));<z>
().equals(REQ_MOVE_CHILDREN)<z>
equals(REQ_ALIGN_CHILDREN)) {<z>
);<z>
false);<z>
);<z>
);<z>
;<z>
) {<z>
qualifiedName = subRuleQualifiedName(false);<z>
) == PLACE_HOLDER;<z>
(qualifiedName);<z>
;<z>
;<z>
);<z>
index, GdkColor color) {<z>
();<z>
color);<z>
{<z>
lock.unlock();<z>
, GraphPoint p2) {<z>
- p2.y,<z>
.x);<z>
(angle < 0) {<z>
.PI;<z>
;<z>
,<z>
MappedStoreManager storeMgr, DatastoreContainerObject table,<z>
int fieldRole, ClassLoaderResolver clr)<z>
,<z>
));<z>
);<z>
,<z>
;<z>
mapping;<z>
{<z>
) {<z>
"IPTarget is not yet initialized or has been reset");<z>
();<z>
(<z>
final String classId,<z>
username)<z>
{<z>
getUserClassRole(classId, username);<z>
) {<z>
);<z>
{<z>
if (menuConfigurationItemProvider == null) {<z>
new MenuConfigurationItemProvider(this);<z>
;<z>
(Element vecElement, List<FieldRef> vectorFields)<z>
throws Exception {<z>
m_vectorFields = vectorFields;<z>
.getAttribute("id");<z>
{<z>
new Exception("[VectorInstance] no ID attribute defined!");<z>
;<z>
vecElement.getElementsByTagName("REAL-SparseArray");<z>
.getElementsByTagName("REAL-ARRAY");<z>
() == 0) {<z>
;<z>
= (s_arrL.getLength() > 0)<z>
;<z>
0);<z>
(theArray);<z>
{<z>
) {<z>
null;<z>
newsletterCategory : mailingManagedBean.getCategories()) {<z>
{<z>
newsletterCategory;<z>
return null;<z>
() {<z>
();<z>
tempMap.keySet();<z>
{<z>
(str);<z>
object) {<z>
) {<z>
return "null";<z>
instanceof Throwable) {<z>
Throwable) object);<z>
).isEnum()) {<z>
();<z>
).isArray()) {<z>
StringBuilder stringBuilder = new StringBuilder();<z>
getSimpleName());<z>
(object);<z>
;<z>
i++) {<z>
)));<z>
) stringBuilder.append(',');<z>
("}").toString();<z>
.getClass())) {<z>
>) object);<z>
stringBuilder = new StringBuilder();<z>
.append(']');<z>
("{");<z>
Object subObject : listObject) {<z>
.append(',');<z>
);<z>
append('}').toString();<z>
{<z>
), "toString");<z>
false);<z>
Throwable t) {<z>
toString();<z>
) {<z>
return "FailToString";<z>
public static CategoryDto categoryPost()<z>
CategoryDto category = new CategoryDto();<z>
setName("category");<z>
category.setErasable(false);<z>
category.setDefaultCategory(false);<z>
category;<z>
void paintPopupMenuBackground(SynthContext context,<z>
, int x, int y,<z>
int w, int h) {<z>
h, null);<z>
{<z>
ownerId);<z>
this.cardNumber = 246;<z>
this.expansionSetCode = "10E";<z>
String value) {<z>
.getItemCount(); i++) {<z>
equals(value)) {<z>
(i);<z>
,<z>
TypeMapper __typeMapper) throws java.io.IOException {<z>
, username__is_set);<z>
);<z>
public List getIntervalosEpaTasasParo() {<z>
= null;<z>
);<z>
Query q = session.createQuery ("from from IntervalosepaTasasParo");<z>
q.list();<z>
{<z>
.printStackTrace();<z>
return epatasasocup;<z>
(POFilter op) throws VisitorException{<z>
op);<z>
;<z>
;<z>
Exception e){<z>
errCode = 2034;<z>
.getClass().getSimpleName();<z>
, PigException.BUG, e);<z>
BPTreeRecords fromBlock(Block block)<z>
RecordBufferPage rbp = recordBufferConverter.fromBlock(block) ;<z>
rbp) ;<z>
protected void performDefaults()<z>
performDefaults();<z>
doGetPreferenceStore();<z>
(doGetPreferenceString());<z>
] descriptors = ErrorDescriptor.deserializeErrorDescriptors(editors);<z>
(descriptors));<z>
_tableEditor.setItems(items);<z>
().getDefaultString(IPreferenceConstants.VALIDATORS_LIST);<z>
restoreCheckedValidators(stored_validators);<z>
calledNarrativeDotTxt() {<z>
new FilenameFilter() {<z>
String name) {<z>
.toLowerCase().equals("narrative.txt");<z>
(final String serviceName) {<z>
Callable() {<z>
> call() throws Exception {<z>
getServiceArtifactInfo(serviceName);<z>
exc) {<z>
;<z>
return null;<z>
public void setScaleModifier(final ScaleModifier scaleMod) {<z>
= d_scaleModifier;<z>
scaleMod;<z>
);<z>
{<z>
.doActivityForResult(<z>
)context, obj));<z>
onChunkLoad(ChunkLoadEvent event) {<z>
counter = 0;<z>
().getDisplayTables()) {<z>
().getChunk())) {<z>
true);<z>
);<z>
counter++;<z>
e) {}<z>
{<z>
) pkgSources.getByKey(pkgName);<z>
) {<z>
);<z>
synchronized (pkgSources) {<z>
);<z>
;<z>
)<z>
properties );<z>
serializer = DefaultSerializer.INSTANCE;<z>
;<z>
recordManager.getNamedObject( "index" );<z>
)<z>
.load( recordManager, recid );<z>
= index.size();<z>
ByteArrayComparator comparator = new ByteArrayComparator();<z>
;<z>
, index.getRecid() );<z>
;<z>
);<z>
()<z>
));<z>
);<z>
;<z>
);<z>
BorderFactory.createTitledBorder("Proxy"));<z>
= new GridBagConstraints();<z>
c.fill = GridBagConstraints.HORIZONTAL;<z>
.NORTH;<z>
= 1;<z>
1;<z>
SPACING);<z>
, c);<z>
;<z>
in) throws Exception {<z>
);<z>
);<z>
instanceof IoBuffer) {<z>
IoBuffer) in, session);<z>
RTMP_CONNECTION_KEY);<z>
conn, state, in);<z>
msn, Properties cfg) {<z>
);<z>
i++) {<z>
].equalsIgnoreCase(msn)) return true;<z>
return false;<z>
bean, T returnValue) {<z>
context = requestContext(bean);<z>
)) {<z>
return returnValue;<z>
{<z>
@SuppressWarnings("unchecked")<z>
returnValue);<z>
return toReturn;<z>
>) {<z>
).setFrozen(false);<z>
otherBean = AutoBeanUtils.getAutoBean(returnValue);<z>
{<z>
));<z>
;<z>
target) {<z>
FieldDeclaration result = new FieldDeclaration(target);<z>
, getLength());<z>
(<z>
()));<z>
.ast.apiLevel == AST.JLS2_INTERNAL) {<z>
.internalSetModifiers(getModifiers());<z>
apiLevel >= AST.JLS3_INTERNAL) {<z>
()));<z>
.clone(target));<z>
).addAll(<z>
fragments()));<z>
;<z>
file) {<z>
GFBuilderHelper.getTagsFileFullPath(file) );<z>
)) {<z>
();<z>
);<z>
catch (Exception _) {<z>
public String export() throws Exception {<z>
);<z>
) == 0)<z>
this.getDefaultExportFileName();<z>
String title = this.fileName;<z>
this.fileName = WebUtils.encodeFileName(<z>
, this.fileName);<z>
"attachment;filename=\"" + fileName<z>
".xls\"";<z>
.isDebugEnabled()) {<z>
"exportKeys=" + exportKeys);<z>
;<z>
("contentType=" + contentType);<z>
bufferSize);<z>
"contentDisposition=" + contentDisposition);<z>
() != null) {<z>
setPage(this.findPage());<z>
).getData();<z>
} else {<z>
= this.findList();<z>
(logger.isDebugEnabled())<z>
));<z>
exporter = buileGridExporter(title,<z>
getText("label.idLabel"));<z>
;<z>
isDebugEnabled())<z>
getWasteTime(startTime));<z>
exporter.exportTo(out);<z>
.isDebugEnabled())<z>
"3:" + DateUtils.getWasteTime(startTime));<z>
(out.toByteArray());<z>
;<z>
, final String mailbox,<z>
)<z>
labelCounters = get(mailbox, labelId);<z>
!= null) {<z>
, labelCounters);<z>
Composite> c;<z>
));<z>
(), new CompositeSerializer());<z>
, labelCounters.getTotalMessages());<z>
, new CompositeSerializer());<z>
== ReservedLabels.ALL_MAILS.getId()) {<z>
CN_SUBTYPE_BYTES, labelCounters.getTotalMessages());<z>
);<z>
token) {<z>
||<z>
( token ) ||<z>
equals( token ) ||<z>
"foreign".equals( token ) ||<z>
;<z>
exclusions,<z>
IOException {<z>
exclusions, cha);<z>
.fExtInfo = extInfo;<z>
(DescribeVpcsType param){<z>
;<z>
, Object o2)<z>
o1);<z>
m2 = describeBean(o2);<z>
propertyName);<z>
get(propertyName);<z>
Float i1 = null;<z>
i2 = null;<z>
true;<z>
;<z>
);<z>
catch (NumberFormatException e)<z>
false;<z>
= new Float(s2);<z>
e)<z>
= false;<z>
returnValue=0;<z>
if (firstFloatValid && secondFloatValid) {<z>
if (i1 != null) {<z>
i1.compareTo(i2);<z>
&& !secondFloatValid) returnValue = 1;<z>
returnValue = -1;<z>
&& !secondFloatValid) returnValue = 0;<z>
return returnValue;<z>
parse(RuleGrammar grammar, RuleAlternatives ra,<z>
input, int pos) {<z>
();<z>
: ra.getRules()) {<z>
rule, input, pos);<z>
(p != null)<z>
);<z>
return res;<z>
setStep(int step)<z>
, step);<z>
this;<z>
void createInkop(){<z>
.out.println("Create Inköp");<z>
Statement stmt = null;<z>
new Random();<z>
.setSeed(1);<z>
;<z>
new SimpleDateFormat(DB_DATE_FORMAT);<z>
.getInstance();<z>
7*16);<z>
week <= 28; week++){<z>
){<z>
0; ink < 10; ink++){<z>
());<z>
= conn.createStatement();<z>
{<z>
.getMessage());<z>
());<z>
;<z>
));<z>
, -24*7);<z>
c){<z>
MODE_WORLD_READABLE);<z>
defaultValue = DEFAULT_VALUE_TRANSITION_TYPE;<z>
c)){<z>
;<z>
;<z>
)){<z>
;<z>
}else {<z>
false;<z>
Reader input) throws IOException {<z>
CharArrayWriter buffer = new CharArrayWriter(4096);<z>
;<z>
cbuf = new char[4096];<z>
{<z>
r);<z>
;<z>
CombineShimRecordReader(CombineFileSplit split,<z>
TaskAttemptContext context, Integer index)<z>
{<z>
split, context, index);<z>
NodeContainer nodeContainer, long id) {<z>
nodeContainerFactory;<z>
;<z>
forEachNode = new ForEachNode();<z>
(id);<z>
;<z>
() {<z>
)<z>
StringAsset(<z>
, "jboss-deployment-structure.xml")<z>
("seam.properties")<z>
"components.properties")<z>
.addAsResource("messages_en.properties")<z>
)<z>
.addAsResource("testProcess1.jpdl.xml")<z>
("testProcess2.jpdl.xml")<z>
addAsResource("testProcess3.jpdl.xml")<z>
("testProcess4.jpdl.xml")<z>
)<z>
.addAsResource("hibernate.cfg.xml")<z>
"WEB-INF/components-jbpm.xml", "components.xml")<z>
"pages.xml")<z>
"web.xml")<z>
.addAsWebInfResource("WEB-INF/ejb-jar.xml", "ejb-jar.xml")<z>
)<z>
.configureFrom("pom.xml")<z>
()<z>
)<z>
)<z>
("org.hibernate:hibernate-core")<z>
));<z>
public void setSocket( final Socket socket )<z>
socket;<z>
this.pauser.unpause();<z>
monitor) throws CoreException {<z>
target);<z>
synchronizer == null)<z>
null;<z>
monitor);<z>
QueryUtil.createIUAnyQuery(), null);<z>
) {<z>
PortRefMetaData portRef : portRefs) {<z>
intf = null;<z>
(portRef.getServiceEndpointInterface() != null) {<z>
(portRef.getServiceEndpointInterface());<z>
ClassNotFoundException e) {<z>
{<z>
isEmpty()) {<z>
.get(0));<z>
.isEnableMtom();<z>
proxy.getBinding() instanceof SOAPBinding) {<z>
;<z>
{<z>
) entry.getKey();<z>
= (String) entry.getValue();<z>
name, value);<z>
string2, String string3)<z>
{<z>
ui.Select(browser.findElement(By<z>
"USER_TITLE"))).selectByVisibleText(string1);<z>
("USER_FIRST_NAME")).sendKeys(string2);<z>
sendKeys(string3);<z>
() {<z>
"as3fb", "back pressed fb activity");<z>
;<z>
("USER_LOG_IN_CANCEL", "null");<z>
finish();<z>
.io.File getFile()<z>
AVKey.FILE_STORE_LOCATION);<z>
null;<z>
editorContext, SNode node) {<z>
, "<-");<z>
.setCellId("Constant_cjpy1b_a0a");<z>
"");<z>
));<z>
;<z>
(String entityName, String entityId) throws Exception{<z>
.getLocalPart(), entityId);<z>
) {<z>
Integer> income = income();<z>
sells = 0;<z>
sell().toCharArray())<z>
fromChar(c));<z>
int buys = 0;<z>
.buy().toCharArray())<z>
fromChar(c));<z>
offer) : api.declineOffer(offer);<z>
public List<VirtualMachineTemplate> findStatefulVirtualMachineTemplatesByCategoryAndDatacenterandVirutalDatacenter(<z>
final Category category, final Datacenter datacenter,<z>
final VirtualDatacenter virtualdatacenter, final StatefulInclusion stateful)<z>
(category, datacenter,<z>
;<z>
t, PrintStream ps, Set visited) {<z>
visited == null) {<z>
;<z>
t);<z>
(t, visited);<z>
null) {<z>
(chained_t instanceof BaseException) {<z>
ps, visited);<z>
(chained_t instanceof BaseRuntimeException) {<z>
.printStackTrace(ps, visited);<z>
else {<z>
;<z>
;<z>
Context context, int drawable)<z>
, drawable);<z>
mContext = context;<z>
this.mDrawableStateNormal = drawable;<z>
Preferences getDefault()<z>
if (sharedInstance == null) {<z>
;<z>
sharedInstance;<z>
) {<z>
== null || sText.isDisposed()) {<z>
text);<z>
{<z>
.getText());<z>
SWTException e) {<z>
(text);<z>
(Object o) {<z>
true;<z>
.getClass()) return false;<z>
) o;<z>
;<z>
return false;<z>
return false;<z>
;<z>
) throws SQLException {<z>
nameA = null;<z>
String nameB = null;<z>
.connection.prepareStatement(<z>
);<z>
switch(relation.getType()){<z>
BIDIRECIONAL_COMPOSITION:<z>
Relation.BIDIRECIONAL_COMPOSITION_HAS_BELONGS_TO:<z>
;<z>
(CompositionRelation) relation).getNameB();<z>
case Relation.UNIDIRECIONAL_COMPOSITION:<z>
();<z>
Relation.SYMMETRIC_COMPOSITION:<z>
).getName();<z>
.getUri());<z>
;<z>
stmt.setString (3, nameA);<z>
);<z>
.getType());<z>
(6, relation.getComment());<z>
, relation.getValid());<z>
.executeUpdate();<z>
getGeneratedKeys();<z>
(keys.next()){<z>
.getLong(1));<z>
String[] args) throws Exception {<z>
);<z>
final MapContext context = createContext();<z>
show(context);<z>
IOException {<z>
;<z>
);<z>
()<z>
artifact.getId();<z>
MockControl.ZERO_OR_MORE );<z>
Object value, boolean doit) {<z>
if (doit)<z>
arg(key, value);<z>
return this;<z>
lookupTagByName(String name) {<z>
VdcQueryParametersBase())) {<z>
equals(name)) {<z>
return map(tag);<z>
name), false);<z>
StringBuffer sb, char out, String in) {<z>
i++) {<z>
) {<z>
+1, in);<z>
+= in.length();<z>
boolean placeContentWithSize( LegendItemHints lih, Point size )<z>
!hasPlaceForOneItem( size, lgData ) )<z>
;<z>
( ) > lgData.dAvailableHeight<z>
.dSafeSpacing )<z>
.clear( );<z>
return false;<z>
size.getX( ) > lgData.dAvailableWidth<z>
)<z>
;<z>
= computeContentSize( lih );<z>
lih, size );<z>
, dMaxH );<z>
dX += size.getX( );<z>
.getValidTextLen( ) );<z>
( dX - size.getX( ) );<z>
;<z>
== LegendItemHints.Type.LG_GROUPNAME )<z>
gnList.add( lih );<z>
.width( size.getX( ) );<z>
dVerticalSpacing );<z>
lih.width( size.getX( )<z>
;<z>
( ) );<z>
( bIsShowValue )<z>
.getHeight( ) );<z>
( laiValue.getValidTextLen( ) );<z>
.add( lih );<z>
true;<z>
) throws Exception {<z>
NodeLocation nodeLocation = NodeLocation.getNodeLocationByNode(node);<z>
String repository = nodeLocation.getRepository();<z>
String workspace = nodeLocation.getWorkspace();<z>
(FriendlyService.class);<z>
link = "#";<z>
getCurrentPortalContainerName();<z>
String restContextName = PortalContainer.getCurrentRestContextName();<z>
)) {<z>
.getProperty("jcr:frozenUuid").getString();<z>
;<z>
+ restContextName + "/jcr/" + repository + "/"<z>
.getName();<z>
else {<z>
"/"<z>
.getPath();<z>
);<z>
private void updateHands() {<z>
HOUR_OF_DAY);<z>
MINUTE);<z>
);<z>
, m);<z>
* 360<z>
60.0f) : 0);<z>
void spinnerItemSelected(int position) {<z>
if (position == mAllForms.length) {<z>
;<z>
mShowAllMessages = true;<z>
= true;<z>
beginListViewReload();<z>
} else {<z>
this.mShowAllMessages = false;<z>
];<z>
;<z>
);<z>
) {<z>
();<z>
, jp);<z>
OUTPUT_STREAM, baos);<z>
exportReport();<z>
) {<z>
);<z>
{<z>
int stackSize = keepStackSize();<z>
));<z>
(FOLLOW_ruleDetailCode_in_rule__Guard__GuardAssignment_147746);<z>
();<z>
._fsp--;<z>
.getGuardDetailCodeParserRuleCall_1_0());<z>
RecognitionException re) {<z>
re);<z>
;<z>
);<z>
() {<z>
(mAnimationStartTime == NO_ANIMATION) {<z>
return false;<z>
LAST_ANIMATION) {<z>
;<z>
)) {<z>
notifyTransitionComplete();<z>
false;<z>
} else {<z>
return startSnapbackIfNeeded();<z>
long now = SystemClock.uptimeMillis();<z>
;<z>
== 0) {<z>
;<z>
else {<z>
mAnimationDuration;<z>
progress >= 1) {<z>
= 1;<z>
mToX;<z>
mToY;<z>
= mToScale;<z>
= LAST_ANIMATION;<z>
{<z>
- progress;<z>
mAnimationKind) {<z>
case ANIM_KIND_SCROLL:<z>
case ANIM_KIND_FLING:<z>
f;<z>
:<z>
- f * f;<z>
ANIM_KIND_SNAPBACK:<z>
:<z>
ANIM_KIND_SLIDE:<z>
f * f * f;<z>
{<z>
);<z>
else {<z>
linearInterpolate(progress);<z>
, mCurrentScale);<z>
true;<z>
name )<z>
if ( name == null )<z>
false;<z>
newFolder = getFile( name );<z>
)<z>
;<z>
mkdirs();<z>
void refresh(final Object entity) throws DataAccessException {<z>
new JdoCallback<Object>() {<z>
JDOException {<z>
);<z>
null;<z>
}, true);<z>
buildDFA(String javaCode) throws Throwable {<z>
.getDefaultVersion().getLanguageVersionHandler();<z>
);<z>
);<z>
, null);<z>
().initializeWith(cu);<z>
getDataFlowHandler(), cu);<z>
;<z>
attrib, GenericObject obj) throws AttributeInterpreterException {<z>
attrib.getName());<z>
;<z>
(_header.attributeClass) {<z>
:<z>
();<z>
)) {<z>
);<z>
case Enumerated:<z>
;<z>
.equals("(null)")) {<z>
)));<z>
null) {<z>
+ attrib.getValue());<z>
Float:<z>
();<z>
.equals("(null)")) {<z>
);<z>
Free:<z>
ENCFreeAttribute();<z>
getValue().equals("(null)")) {<z>
(attrib.getValue());<z>
:<z>
;<z>
equals("(null)")) {<z>
;<z>
List:<z>
_retVal = new ENCListAttribute();<z>
)) {<z>
",");<z>
int[_contents.length];<z>
;<z>
_nullCounter = 0;<z>
0;<z>
.length; i++) {<z>
[i]);<z>
_correctValues++;<z>
} catch (NumberFormatException e) {<z>
) {<z>
[_correctValues];<z>
) {<z>
_header.attributeCode, _intValueList[i]);<z>
{<z>
_intValueList[i]));<z>
;<z>
[_correctValues - _nullCounter];<z>
0; i < _correctValues; i++) {<z>
null) {<z>
_tempIdx] = _listValues[i];<z>
_tempIdx++;<z>
).setENCAttributeValue(_updatedListValues);<z>
new AttributeInterpreterException("Cannot establish attribute context -- unknown attribute class.");<z>
e) {<z>
;<z>
return null;<z>
);<z>
_retVal;<z>
final String principalId){<z>
).execute(new PersistenceBrokerCallback() {<z>
{<z>
PreparedStatement statement = null;<z>
ResultSet resultSet = null;<z>
;<z>
);<z>
= connection.prepareStatement(ACTION_LIST_COUNT_AND_MAX_ACTION_ITEM_ID_QUERY);<z>
.setString(1, principalId);<z>
();<z>
.next()) {<z>
WorkflowRuntimeException("Error determining Action List Count and Max Action Item Id.");<z>
(1));<z>
getInt(2));<z>
;<z>
SQLException e) {<z>
);<z>
} catch (LookupException e) {<z>
("Error determining Action List Count and Max Action Item Id.", e);<z>
{<z>
null) {<z>
.close();<z>
) {}<z>
{<z>
resultSet.close();<z>
{}<z>
);<z>
int port, int timeout) throws JSchException{<z>
null){<z>
proxy_host, proxy_port, timeout);<z>
();<z>
.getOutputStream();<z>
;<z>
;<z>
;<z>
timeout>0){<z>
);<z>
.setTcpNoDelay(true);<z>
];<z>
0;<z>
;<z>
++]=4;<z>
buf[index++]=1;<z>
8);<z>
=(byte)(port&0xff);<z>
;<z>
);<z>
length; i++) {<z>
]=byteAddress[i];<z>
){<z>
+uhe.toString(), uhe);<z>
(user!=null){<z>
;<z>
.length();<z>
=0;<z>
;<z>
int len=8;<z>
=0;<z>
len){<z>
-s);<z>
if(i<=0){<z>
new JSchException("ProxySOCKS4: stream is closed");<z>
+=i;<z>
{<z>
;<z>
]!=90){<z>
}<z>
Exception eee){<z>
buf[1];<z>
new JSchException(message);<z>
{<z>
;<z>
catch(Exception e){<z>
(); }<z>
){<z>
.toString());<z>
> keywords) {<z>
;<z>
) {<z>
found);<z>
resolve, boolean coreType) {<z>
featureID) {<z>
SAPOUTPUTPORT_TYPE__DSQINSTNAME:<z>
getDSQINSTNAME();<z>
.SAPOUTPUTPORT_TYPE__FIELDNAME:<z>
();<z>
PowrmartPackage.SAPOUTPUTPORT_TYPE__PORTNAME:<z>
);<z>
PowrmartPackage.SAPOUTPUTPORT_TYPE__VARNAME:<z>
();<z>
;<z>
){<z>
user.getNickname());<z>
);<z>
().remove(userRoomInfo);<z>
)){<z>
)<z>
);<z>
)<z>
().invalidatePSIconView(psiv);<z>
== MainApplication.screen.getSpace())<z>
view.getActivity().invalidateSpaceView();<z>
(user, "deleteuser");<z>
{<z>
m_height = -1;<z>
= -1;<z>
m_maxHeight = -1;<z>
;<z>
0;<z>
= 0;<z>
= 0;<z>
= 0;<z>
m_cropX = -1;<z>
m_cropY = -1;<z>
;<z>
-1;<z>
Color.WHITE;<z>
;<z>
();<z>
{<z>
)) {<z>
new DefaultImportCompilerCustomizer();<z>
collectDefaultImportsPerArtifact();<z>
addCompilationCustomizers(defaultImportCompilerCustomizer);<z>
} else {<z>
("Default imports feature disabled.");<z>
super.makeCompileUnit();<z>
();<z>
.CONVERSION);<z>
.getConfigOption(CommandLineConstants.KEY_DISABLE_LOGGING_INJECTION)) {<z>
, Phases.CANONICALIZATION);<z>
{<z>
);<z>
KEY_DISABLE_THREADING_INJECTION)) {<z>
Phases.CANONICALIZATION);<z>
else {<z>
);<z>
GriffonCompilerContext.getConfigOption(CommandLineConstants.KEY_DISABLE_AST_INJECTION)) {<z>
);<z>
;<z>
DungeonRoom room)<z>
);<z>
)+"] to Library.");<z>
catch (DataStoreSaveException e) {<z>
();<z>
, String kind, String id) {<z>
{<z>
parent);<z>
{<z>
getChild(kind, id));<z>
(BitInputStream bis) throws IOException {<z>
-1L;<z>
(bis);<z>
);<z>
);<z>
;<z>
v;<z>
int firstPostIndex, int noOfPosts)<z>
, noOfPosts);<z>
entries);<z>
token, int numVerts) {<z>
.intValue();<z>
+ idx) : idx-1;<z>
idx;<z>
revision, String author,<z>
merged_revision,<z>
,<z>
String line)<z>
(date, revision, author, line);<z>
jj_3_7() {<z>
if (jj_3R_17())<z>
;<z>
false;<z>
, Node[] values) {<z>
null && values.length > 0) {<z>
)) {<z>
ArrayList<Node>();<z>
));<z>
changed = false;<z>
) {<z>
(!valuesList.contains(value)) {<z>
;<z>
true;<z>
if (changed) {<z>
[] {}));<z>
else {<z>
;<z>
String term, Boolean searchingPlayers) {<z>
null;<z>
2;<z>
.get("search.error.required"));<z>
get("search.error.minChars", minCharacters));<z>
null &&<z>
"search.player.playerOrLogin"))<z>
)) {<z>
("search.error.required"));<z>
;<z>
) {<z>
();<z>
();<z>
) {<z>
(login.name);<z>
playersList.contains(p)) {<z>
(p);<z>
Comparator<Player>() {<z>
p2) {<z>
.toLowerCase());<z>
);<z>
else {<z>
find("order by name asc").fetch();<z>
searchingPlayers) {<z>
== 0) {<z>
);<z>
);<z>
(playersList);<z>
30);<z>
renderTemplate("Application/players.html", players, term);<z>
else {<z>
(playersList.size() == 0) {<z>
;<z>
);<z>
<Player>(playersList);<z>
(30);<z>
, term);<z>
,<z>
, Map<String, Object> parameters) {<z>
ParametersEditor result;<z>
type) {<z>
:<z>
, operation);<z>
case DATE_CHOOSER_PARAMETERS_EDITOR:<z>
DateChooserParametersEditor(filterProperty, operation);<z>
case TWO_DATE_CHOOSER_PARAMETERS_EDITOR:<z>
TwoDateChooserParametersEditor(filterProperty, operation);<z>
:<z>
(filterProperty, operation);<z>
:<z>
result = new TwoSpinnerParametersEditor(filterProperty, operation);<z>
:<z>
operation);<z>
();<z>
!= null)<z>
.setParameters(parameters);<z>
result;<z>
(Composite parent, int style) {<z>
| style);<z>
new FormTextLayout());<z>
= new FormTextModel();<z>
{<z>
void widgetDisposed(DisposeEvent e) {<z>
();<z>
;<z>
});<z>
, new Listener() {<z>
void handleEvent(Event e) {<z>
e.character == '\r') {<z>
);<z>
);<z>
new Listener() {<z>
void handleEvent(Event e) {<z>
)<z>
;<z>
!model.hasFocusSegments()) {<z>
= true;<z>
detail == SWT.TRAVERSE_TAB_NEXT)<z>
);<z>
(e.detail == SWT.TRAVERSE_TAB_PREVIOUS)<z>
advance(false);<z>
!= SWT.TRAVERSE_RETURN)<z>
;<z>
});<z>
(new FocusListener() {<z>
) {<z>
if (!hasFocus) {<z>
true;<z>
(DEBUG_FOCUS) {<z>
System.out.println("FormText: focus gained");<z>
!controlFocusTransfer) {<z>
;<z>
public void focusLost(FocusEvent e) {<z>
) {<z>
);<z>
(hasFocus) {<z>
= false;<z>
(!controlFocusTransfer)<z>
handleFocusChange();<z>
;<z>
(new MouseListener() {<z>
mouseDoubleClick(MouseEvent e) {<z>
(MouseEvent e) {<z>
);<z>
e) {<z>
handleMouseClick(e, false);<z>
});<z>
getFont());<z>
setTabList(new Control[] {});<z>
String name, String value ) {<z>
if ( mAttributes == null ) {<z>
mAttributes = CollectionUtils.newTreeMap();<z>
name, value );<z>
public synchronized void removeCall(ICall call) {<z>
.createCallList(1);<z>
(call);<z>
cl);<z>
{<z>
handleMessage(Message msg) {<z>
{<z>
{<z>
;<z>
ar.exception != null) {<z>
= (CommandException) ar.exception;<z>
Error.SIM_PUK2) {<z>
.string.fdn_enable_puk2_requested);<z>
();<z>
{<z>
.string.pin2_invalid);<z>
();<z>
EVENT_PIN2_CHANGE_COMPLETE: {<z>
)<z>
log("Handle EVENT_PIN2_CHANGE_COMPLETE");<z>
msg.obj;<z>
exception != null) {<z>
;<z>
CommandException.Error.SIM_PUK2) {<z>
this)<z>
(R.string.puk2_requested)<z>
)<z>
FdnSetting.this)<z>
();<z>
.getWindow().addFlags(<z>
LayoutParams.FLAG_DIM_BEHIND);<z>
();<z>
} else {<z>
) {<z>
string.badPin2);<z>
;<z>
else {<z>
.badPuk2);<z>
();<z>
else {<z>
displayMessage(R.string.pin2_changed);<z>
;<z>
traverse()<z>
();<z>
() );<z>
Title_();<z>
register()<z>
addOnQuestStart(questId);<z>
);<z>
setNpcQuestData(203589).addOnTalkEvent(questId);<z>
(questId);<z>
int[]{182203205};<z>
<Integer, List<CollectionSheetCustomerAccountCollectionDto>> findOutstandingFeesForCustomerAccountOnCustomerHierarchy(<z>
, final LocalDate transactionDate,<z>
Integer customerAtTopOfHierarchyId) {<z>
new HashMap<String, Object>();<z>
);<z>
);<z>
;<z>
accountCollectionFeeForHierarchyCustomer = execUniqueResultNamedQueryWithResultTransformer(<z>
"findOutstandingCustomerAccountFeesForTopCustomerOfHierarchyAsDto", queryParameters,<z>
CollectionSheetCustomerAccountCollectionDto.class);<z>
accountCollectionFeeForHierarchyCustomer != null) {<z>
customerAtTopOfHierarchyId, Arrays<z>
accountCollectionFeeForHierarchyCustomer));<z>
HashMap<String, Object>();<z>
put("BRANCH_ID", branchId);<z>
withinHierarchyQueryParameters.put("SEARCH_ID", searchId);<z>
("TRANSACTION_DATE", transactionDate.toString());<z>
(<z>
, withinHierarchyQueryParameters,<z>
);<z>
customerAccountFees == null) {<z>
accountCollectionsOnCustomerAccountGroupedByCustomerId;<z>
) {<z>
.getCustomerId();<z>
.containsKey(customerId)) {<z>
CollectionSheetCustomerAccountCollectionDto> customerAccountFeesList = accountCollectionsOnCustomerAccountGroupedByCustomerId<z>
);<z>
add(accountCollectionFee);<z>
else {<z>
;<z>
add(accountCollectionFee);<z>
customerId, customerAccountFeesList);<z>
return accountCollectionsOnCustomerAccountGroupedByCustomerId;<z>
, int start, int length)<z>
SAXException {<z>
{<z>
();<z>
start, length);<z>
, double maxY) {<z>
Point>();<z>
));<z>
);<z>
return points;<z>
IOSession session) {<z>
.disconnected(session);<z>
catch (CancelledKeyException ex) {<z>
} catch (RuntimeException ex) {<z>
(ex);<z>
{<z>
, args);<z>
= parseColor("&2[&a%s&2] &f%s", pluginName, msg);<z>
) {<z>
log.info(formattedMessage);<z>
{<z>
(formattedMessage);<z>
( UpgradeContext context )<z>
"Upgrade check ok." );<z>
true;<z>
Triple> unchangedConfidences(List<UriRef> subsumed,<z>
graph,<z>
> loseConfidence) {<z>
i++) {<z>
);<z>
);<z>
)) {<z>
;<z>
loseConfidence;<z>
uri, String baseUri) {<z>
uri!=null;<z>
(baseUri==null) return uri;<z>
URI(escapeURI(uri));<z>
baseUri));<z>
.isOpaque())<z>
;<z>
()) ||<z>
), theBaseUri.getAuthority()))<z>
;<z>
();<z>
= theBaseUri.getPath();<z>
("/")) {<z>
);<z>
.equals(basePath))<z>
return ".";<z>
= calculateRelativePath(uriPath, basePath);<z>
if (relPath == null)<z>
return uri;<z>
StringBuffer relUri = new StringBuffer();<z>
append(relPath);<z>
getQuery() != null)<z>
getQuery());<z>
(theUri.getFragment() != null)<z>
;<z>
);<z>
catch (URISyntaxException e) {<z>
;<z>
QuestionDto> listQuestionsByQuestionGroup(<z>
, boolean needDetails,<z>
{<z>
new QuestionDao();<z>
new ArrayList<QuestionDto>();<z>
allowSideEffects) {<z>
> questionList = questionDao<z>
listQuestionsByQuestionGroup(<z>
questionGroupId), needDetails,<z>
allowSideEffects);<z>
null && !questionList.isEmpty()) {<z>
: questionList.values()) {<z>
QuestionDto dto = marshalQuestionDto(canonical);<z>
add(dto);<z>
{<z>
<Question> questionList = questionDao<z>
Long(questionGroupId));<z>
&& !questionList.isEmpty()) {<z>
) {<z>
dto = marshalQuestionDto(canonical);<z>
.add(dto);<z>
> 0) {<z>
questionDtoList;<z>
} else {<z>
return null;<z>
l) {<z>
null) {<z>
) {<z>
new IllegalArgumentException("Listener " + l +<z>
" is not of type " + t);<z>
= -1;<z>
) {<z>
l) == true)) {<z>
;<z>
) {<z>
Object[listenerList.length - 2];<z>
0, tmp, 0, index);<z>
if (index < tmp.length)<z>
listenerList, index + 2, tmp, index,<z>
.length - index);<z>
length == 0) ? NULL_ARRAY : tmp;<z>
throws JDBCException {<z>
);<z>
jdbcConnectionAccess.obtainConnection();<z>
: observers ) {<z>
physicalConnection );<z>
debug( "Obtained JDBC connection" );<z>
sqle) {<z>
.convert( sqle, "Could not open connection" );<z>
boolean initializeTextArea(Graphics g)<z>
names == null || values == null) {<z>
return false;<z>
;<z>
numLines, valueLen;<z>
;<z>
length; i++) {<z>
i] != null) {<z>
[i]);<z>
{<z>
l;<z>
[i]);<z>
(l > valueLen) {<z>
;<z>
numLines++;<z>
valueLen == 0) {<z>
return false;<z>
+ valueLen;<z>
) + HEIGHT_PAD;<z>
= WIDTH_PAD + lineWidth + WIDTH_PAD;<z>
numLines * lineHeight;<z>
= 20;<z>
() - (20 + textHeight);<z>
true;<z>
classes) {<z>
()) {<z>
();<z>
) != -1) {<z>
: c.getMethods()) {<z>
if (m.isStatic()) {<z>
),cpg);<z>
gen.getInstructionList();<z>
;<z>
il);<z>
"GETSTATIC LDC FSUB PUTSTATIC");<z>
()) {<z>
;<z>
).getFieldName(cpg));<z>
Success;<z>
return SearchResult.Failure;<z>
event.ActionEvent evt) {<z>
= "ALL";<z>
() > 0) {<z>
;<z>
, nymID);<z>
(acctMap, jComboBox1);<z>
public int length()<z>
len = 1;<z>
null; curr = curr._next) {<z>
;<z>
return len;<z>
{<z>
.ALL_FULLY_QUALIFIED);<z>
getElementLabel(o2, JavaElementLabels.ALL_FULLY_QUALIFIED);<z>
return s1.compareTo(s2);<z>
) throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
);<z>
;<z>
--;<z>
failed) return ;<z>
(FOLLOW_rule__XMemberFeatureCall__Group_1_1_1__3_in_rule__XMemberFeatureCall__Group_1_1_1__216023);<z>
rule__XMemberFeatureCall__Group_1_1_1__3();<z>
--;<z>
;<z>
(RecognitionException re) {<z>
re);<z>
recover(input,re);<z>
);<z>
(MtGoxTickerData data) {<z>
SQLiteDatabase db = getWritableDatabase();<z>
ContentValues values = new ContentValues();<z>
).getId());<z>
;<z>
));<z>
(COLUMN_HIGH, data.getHigh());<z>
));<z>
COLUMN_BUY, data.getBuy());<z>
, data.getSell());<z>
null, values);<z>
if (result == -1) {<z>
, "Error when inserting data: " + data);<z>
db.close();<z>
{<z>
= true;<z>
);<z>
m_title);<z>
{<z>
Socket) obj;<z>
(100);<z>
.read() == -1) {<z>
false;<z>
.net.SocketTimeoutException e) {<z>
{<z>
;<z>
&& !socket.isOutputShutdown();<z>
)<z>
;<z>
controller.getSelected() == this)<z>
;<z>
);<z>
.setOpacity(1);<z>
;<z>
waiting)<z>
;<z>
20);<z>
;<z>
0.8);<z>
VISIBLE);<z>
getStyle().setZIndex(1);<z>
().setZIndex(0);<z>
;<z>
().setVisibility(Visibility.HIDDEN);<z>
DocFlavor[] flavors,<z>
AttributeSet attributes) {<z>
SecurityManager security = System.getSecurityManager();<z>
) {<z>
checkPrintJobAccess();<z>
[0];<z>
throws RecognitionException {<z>
);<z>
( state.backtracking==0 ) {<z>
().getParamTypesAssignment_0_1_1_1());<z>
(FOLLOW_rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1_in_rule__XFunctionTypeRef__Group_0_1_1__1__Impl30646);<z>
;<z>
state._fsp--;<z>
(state.failed) return ;<z>
( state.backtracking==0 ) {<z>
));<z>
RecognitionException re) {<z>
re);<z>
recover(input,re);<z>
restoreStackSize(stackSize);<z>
)<z>
);<z>
equals( crosstab.getMeasureDirection( ) ) ? ROW_AXIS_TYPE<z>
;<z>
null )<z>
( this, null, targetAxis ) )<z>
return getHeader( getHeaderCount( ) - 1 );<z>
getAxisType( ) == targetAxis )<z>
.getInnerMostLevel( crosstab,<z>
targetAxis );<z>
if ( levelView == innerMost )<z>
return getHeader( );<z>
.getAllAggregationLevels( crosstab,<z>
;<z>
);<z>
0;<z>
size( ); i++ )<z>
= levels.get( i );<z>
if ( lv == innerMost<z>
this,<z>
getCubeLevelName( ),<z>
) )<z>
lv )<z>
return getHeader( realIndex );<z>
;<z>
null;<z>
path){<z>
;<z>
(absolutePath);<z>
("uploadButton")).click();<z>
) throws ParseException {<z>
;<z>
qn0=null ;<z>
SmClassBody smSs0=null ;<z>
=null ;<z>
null ;<z>
= jj_consume_token(STATE_MACHINE);<z>
;<z>
) {<z>
:<z>
();<z>
;<z>
.kind) {<z>
IMPLEMENTS:<z>
();<z>
jj_la1[110] = jj_gen;<z>
;<z>
) return new UmodSmDecl().setParms<z>
), smSs0) ;}<z>
);<z>
long targets, int ntargets) {<z>
lock.lock();<z>
;<z>
finally {<z>
unlock();<z>
UniqueId nodeId, final ManageablePosition manPos) {<z>
= manPos.toPosition(nodeId);<z>
manPos.getUniqueId(), nodeId);<z>
setUniqueId(posId);<z>
manPos.getTrades()) {<z>
;<z>
return position;<z>
{<z>
();<z>
.setLength(0);<z>
);<z>
);<z>
);<z>
(0);<z>
.trimToSize();<z>
handleValidateTargetCanContain( Object targetObj,<z>
boolean validateContainer )<z>
;<z>
, int startId) {<z>
;<z>
this);<z>
{<z>
);<z>
SimObject getSimObject(int id) {<z>
) {<z>
objects.get(id);<z>
void close() {<z>
close();<z>
Driver driver;<z>
(getUrl());<z>
(driver);<z>
e) {<z>
;<z>
print() {<z>
= new ArrayList<String>();<z>
add("LucentV7RouteSelect ::=");<z>
"{");<z>
= " ";<z>
(DeviceID<z>
.callingDevice, "callingDevice", indent));<z>
,<z>
"directAgentCallSplit", indent));<z>
(this.priorityCalling, "priorityCalling",<z>
;<z>
.destRoute, "destRoute", indent));<z>
this.collectCode,<z>
;<z>
addAll(LucentUserProvidedCode.print(this.userProvidedCode,<z>
"userProvidedCode", indent));<z>
"useNCR", indent));<z>
(this.userInfo, "userInfo",<z>
;<z>
add("}");<z>
return lines;<z>
getUserData()<z>
+ user_id);<z>
HttpClient client = new DefaultHttpClient();<z>
HttpGet get = new HttpGet(uri);<z>
("Accept", "application/json");<z>
setHeader("Content-type", "application/json");<z>
);<z>
responseHandler);<z>
();<z>
setDateFormat("E MMM d HH:mm:ss Z y");<z>
Gson gson = g.create();<z>
.class);<z>
um;<z>
) {<z>
, "Unable to retrieve User data");<z>
);<z>
LENGTH_LONG).show();<z>
.class);<z>
0);<z>
return null;<z>
Message msg) {<z>
if (mMessages != null) {<z>
msg);<z>
else {<z>
mHandler.sendMessage(msg);<z>
{<z>
) {<z>
;<z>
;<z>
id);<z>
) {<z>
= id;<z>
);<z>
() + " Type");<z>
);<z>
"local");<z>
);<z>
setIsControllableAcl(true);<z>
setIsControllablePolicy(false);<z>
(true);<z>
true);<z>
false);<z>
setIsIncludedInSupertypeQuery(true);<z>
setIsQueryable(true);<z>
?>>();<z>
(props);<z>
ALLOWED);<z>
setIsVersionable(false);<z>
, String nodeIdentifier, String identifier) {<z>
;<z>
.nodeIdentifier = nodeIdentifier;<z>
;<z>
() {<z>
minecarts = new ArrayList<EntityMinecart>();<z>
getWorlds()) {<z>
.getWorld())) {<z>
(world)) {<z>
class)) {<z>
add((EntityMinecart) entity);<z>
: minecarts) {<z>
(em);<z>
clear();<z>
node) {<z>
provider = new RefCellCellProvider(node, editorContext);<z>
provider.setRole("macro");<z>
setNoTargetText("<no macro>");<z>
EditorCell editorCell;<z>
BuildSourceMacroRelativePath_Editor._Inline_3is4rg_a1a());<z>
createEditorCell(editorContext);<z>
();<z>
set(StyleAttributes.INDENT_LAYOUT_NO_WRAP, true);<z>
);<z>
();<z>
= provider.getRoleAttributeClass();<z>
attributeConcept != null) {<z>
;<z>
.getInstanceFromContext(opContext);<z>
editorContext, attributeConcept, attributeKind, editorCell);<z>
;<z>
) {<z>
if (_persistence == null) {<z>
class.getName());<z>
ReferenceRegistry.registerReference(RatingsStatsUtil.class,<z>
);<z>
_persistence;<z>
, IntBuffer span) {<z>
getCapabilities();<z>
glGetSeparableFilter;<z>
function_pointer);<z>
.ensurePackPBOdisabled(caps);<z>
row);<z>
(column);<z>
.checkDirect(span);<z>
), function_pointer);<z>
{<z>
(true) {<z>
peer.move(100);<z>
2);<z>
peer.move(-100);<z>
.PI * 2);<z>
int n)<z>
null)<z>
[1]);<z>
.discretizeNrPoints(n);<z>
decoratorTarget) {<z>
;<z>
(View) getDecoratorTarget().getAdapter(<z>
);<z>
).runExclusive(<z>
{<z>
void run() {<z>
.viewId = view != null ? ViewUtil<z>
) : null;<z>
);<z>
} catch (Exception e) {<z>
getInstance().logError(<z>
e);<z>
static Icon getIconIcon() {<z>
iconIcon == null) {<z>
getWindowIconColor();<z>
getWindowIconRolloverColor();<z>
(iconColor, null, iconRolloverColor);<z>
return iconIcon;<z>
ViewGroup parent) {<z>
;<z>
(position);<z>
null) {<z>
layoutInflaterService.inflate(listViewResource, null);<z>
;<z>
= (TextView) convertView<z>
(android.R.id.text1);<z>
) convertView<z>
text2);<z>
setTag(holder);<z>
convertView.getTag();<z>
) {<z>
setText(session.title);<z>
text2 != null) {<z>
" @ " + session.location;<z>
);<z>
convertView;<z>
,<z>
throws IOException {<z>
BlockReportRequestProto<z>
(PBHelper.convert(registration))<z>
);<z>
: reports) {<z>
Builder reportBuilder = StorageBlockReportProto<z>
);<z>
);<z>
.length; i++) {<z>
i]);<z>
reportBuilder.build());<z>
resp;<z>
NULL_CONTROLLER, builder.build());<z>
(ServiceException se) {<z>
getRemoteException(se);<z>
: null;<z>
() throws XPathException {<z>
FastStringBuffer(20);<z>
;<z>
toString();<z>
{<z>
);<z>
hibernate.beginTransaction();<z>
User>();<z>
= hibernate.createCriteria(User.class);<z>
.setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY);<z>
Restrictions.eq("email", email));<z>
"activities", FetchMode.JOIN);<z>
) criteria.list();<z>
commit();<z>
{<z>
getTransaction().isActive()) {<z>
rollback();<z>
();<z>
result.size() != 1) {<z>
throw new LoginException();<z>
} else {<z>
;<z>
, user.getPassword())) {<z>
LoginException();<z>
} else {<z>
hibernate = HibernateUtil.getSession();<z>
);<z>
;<z>
;<z>
();<z>
randomUUID().toString());<z>
.clone(user));<z>
ex) {<z>
isActive()) {<z>
();<z>
;<z>
)<z>
ImageWriter writer = getImageWriter( format );<z>
( out );<z>
writer.setOutput( imageOut );<z>
= writer.getDefaultWriteParam();<z>
JPEGImageWriteParam )<z>
setCompressionMode( ImageWriteParam.MODE_EXPLICIT );<z>
);<z>
;<z>
;<z>
.flush();<z>
imageOut.close();<z>
, IOException, NotFoundException, WorkflowOperationException {<z>
;<z>
);<z>
= null;<z>
);<z>
RuntimeException exc) {<z>
(exc);<z>
]));<z>
);<z>
= new Track[2];<z>
info("Building the new tracks.");<z>
MediaPackageElementBuilder builder = new MediaPackageElementBuilderImpl();<z>
.Track, MediaPackageElements.PRESENTER_SOURCE);<z>
(qtTrack.getMimeType());<z>
]);<z>
Type.Track, MediaPackageElements.PRESENTER_SOURCE);<z>
;<z>
[1]);<z>
return splitTracks;<z>
arg) throws ControlFlow {<z>
) {<z>
.setDocumentation(null, message, context);<z>
else {<z>
;<z>
);<z>
;<z>
public ProtocolExec(<z>
final ClientExecChain requestExecutor,<z>
{<z>
null) {<z>
new IllegalArgumentException("HTTP client request executor may not be null");<z>
httpProcessor == null) {<z>
throw new IllegalArgumentException("HTTP protocol processor may not be null");<z>
this.requestExecutor = requestExecutor;<z>
= httpProcessor;<z>
"service") String serviceID,<z>
) {<z>
get(serviceID);<z>
} catch (UnboundReasoningServiceException e) {<z>
);<z>
.status(Status.NOT_FOUND);<z>
CONTENT_TYPE, TEXT_HTML + "; charset=utf-8");<z>
servletContext, rb, headers);<z>
.build();<z>
"service", this));<z>
TEXT_HTML + "; charset=utf-8");<z>
);<z>
;<z>
children, final String word, final int depth,<z>
parentNode) {<z>
length();<z>
word.charAt(depth);<z>
int childrenLength = children.length;<z>
Node childNode = null;<z>
= false;<z>
childrenLength; i++) {<z>
= children.data[i];<z>
) {<z>
true;<z>
(!found) {<z>
;<z>
;<z>
parentNode;<z>
;<z>
) {<z>
.terminal = true;<z>
.frequency);<z>
.frequency = 255;<z>
) {<z>
);<z>
, childNode);<z>
> opdfs)<z>
pi.length != a.length ||<z>
!= a.length)<z>
("Wrong parameter");<z>
();<z>
;<z>
a.length; i++) {<z>
length)<z>
("'A' is not a square" +<z>
);<z>
= a[i].clone();<z>
(opdfs);<z>
{<z>
true;<z>
gameThread = new Thread(this);<z>
);<z>
{<z>
!= null) {<z>
add(term);<z>
new Node(term);<z>
id) {<z>
switch(id) {<z>
case 1 :<z>
;<z>
:<z>
;<z>
:<z>
;<z>
case 4 :<z>
return SMS;<z>
OTHER;<z>
public void ForInit() throws ParseException {<z>
"ForInit");<z>
) {<z>
();<z>
} else {<z>
?jj_ntk():jj_ntk) {<z>
BOOLEAN:<z>
case BYTE:<z>
CHAR:<z>
case DOUBLE:<z>
case FALSE:<z>
FLOAT:<z>
INT:<z>
:<z>
:<z>
:<z>
case SHORT:<z>
case SUPER:<z>
case THIS:<z>
TRUE:<z>
:<z>
case INTEGER_LITERAL:<z>
:<z>
CHARACTER_LITERAL:<z>
:<z>
IDENTIFIER:<z>
LPAREN:<z>
:<z>
case DECR:<z>
StatementExpressionList();<z>
-1);<z>
ParseException();<z>
} finally {<z>
;<z>
setVolumeControlStream(int streamType) {<z>
get();<z>
if (activity != null) {<z>
(streamType);<z>
parameters) {<z>
;<z>
(double d : parameters) {<z>
? "" : ", ") + d;<z>
(distribution + "(" + dp + ")");<z>
.distribution);<z>
) throws ServiceCallException<z>
for (MockRequest mockRequest : requests)<z>
.equals(mockRequest.requestData, request))<z>
HttpURLConnection mockConn = mock(HttpURLConnection.class);<z>
.thenReturn(mockRequest.code);<z>
(new ByteArrayInputStream(mockRequest.responseData));<z>
mockConn;<z>
(IOException e)<z>
new ServiceCallException(ServiceCallException.Reason.OTHER,<z>
"There was an IO exception while mocking the request.", null);<z>
.debug("No mocked request matching the given url and data: URL: {}; Data:\n{}", address,<z>
(request));<z>
);<z>
for (MockRequest mockRequest : requests)<z>
String(mockRequest.requestData));<z>
OTHER,<z>
null);<z>
initializeFilters() {<z>
addFilter(new IdentityInputFilter());<z>
);<z>
addFilter(new ChunkedInputFilter());<z>
;<z>
VoidInputFilter());<z>
);<z>
());<z>
));<z>
inputBuffer.filterLibrary.length;<z>
Throwable t)<z>
.print("Error: ");<z>
.err.println(message);<z>
();<z>
{<z>
);<z>
);<z>
controller = controller;<z>
display()<z>
;<z>
(100, 35));<z>
.LEFT));<z>
));<z>
new FlowLayout(FlowLayout.LEFT));<z>
, 35));<z>
FlowLayout(FlowLayout.LEFT));<z>
;<z>
;<z>
new Dimension(300, 35));<z>
);<z>
);<z>
(FlowLayout.LEFT));<z>
;<z>
;<z>
, JLabel.RIGHT);<z>
);<z>
);<z>
setBorder(BorderFactory.createLoweredBevelBorder());<z>
setEditable(false);<z>
JButton("Add");<z>
addButtonListener);<z>
);<z>
(downloadButtonListener);<z>
("Clear");<z>
);<z>
("Cancel");<z>
;<z>
);<z>
browseButtonListener);<z>
(urlTextField);<z>
add(urlLabel);<z>
);<z>
add(urlAddButton);<z>
(new FlowLayout(FlowLayout.CENTER));<z>
urlLabelPanel);<z>
urlPanel.add(urlFieldPanel);<z>
add(urlAddButtonPanel);<z>
downloadLocationLabel.setLabelFor(browseTextField);<z>
downloadLocationLabel);<z>
);<z>
add(browseButton);<z>
CENTER));<z>
add(browseLabelPanel);<z>
browseFieldPanel);<z>
.add(browseButtonPanel);<z>
));<z>
.add(urlListArea);<z>
(statusLabel);<z>
);<z>
add(statusLabelPanel);<z>
);<z>
add(clearButton);<z>
new JPanel();<z>
;<z>
;<z>
add(browsePanel);<z>
(urlListPanel);<z>
urlDownloadPanel);<z>
EXIT_ON_CLOSE);<z>
BorderLayout.NORTH);<z>
450));<z>
.pack();<z>
);<z>
> dest, Configuration config,<z>
)<z>
key);<z>
value != null)<z>
Collection)<z>
>) value;<z>
(col);<z>
dest.add(value);<z>
void issueSuccessNotification() {<z>
.string.comment_saved_ok,<z>
;<z>
finish();<z>
deployedCondition) throws SwfException {<z>
session = this.getSession();<z>
);<z>
append("select max(version) from SwfFormContent where formId = :formId");<z>
deployedCondition)<z>
SwfFormModel.STATUS_DEPLOYED).append("'");<z>
.append(")");<z>
.toString());<z>
query.setString("formId", formId);<z>
;<z>
null)<z>
;<z>
>();<z>
SwfFormDef formDef = new SwfFormDef();<z>
getContent());<z>
{<z>
;<z>
hasNext();)<z>
.next());<z>
result;<z>
keys) {<z>
Map<String, String> extraParams = null;<z>
sortOrder.equals(SortOrder.CREATION_DATE)) {<z>
new HashMap<String, String>();<z>
);<z>
MAX_LIST_RESULTS, listener, keys);<z>
void l2i() {<z>
+ "\t\tl2i");<z>
0;<z>
stackDepth--;<z>
length) {<z>
);<z>
++;<z>
= OPC_l2i;<z>
void setPaVehicleFutureUseIndicator6(final String value) {<z>
(checkReadOnly()) {<z>
();<z>
)) {<z>
== previous) {<z>
);<z>
} else {<z>
;<z>
paVehicleFutureUseIndicator6 = value;<z>
,<z>
, getPaVehicleFutureUseIndicator6());<z>
{<z>
checkRealm();<z>
.set(index, element);<z>
(Diffs.createListDiff(<z>
),<z>
;<z>
oldElement;<z>
public static String guessPluginNameForConnectionDictionary(NSDictionary connectionDictionary) {<z>
null;<z>
String) connectionDictionary.objectForKey("URL");<z>
!= null) {<z>
("plugin");<z>
) {<z>
JDBCPlugIn.plugInNameForURL(jdbcUrl);<z>
null) {<z>
;<z>
;<z>
secondColon != -1) {<z>
substring(firstColon + 1, secondColon);<z>
{<z>
= ERXStringUtilities.lastPropertyKeyInKeyPath(pluginName);<z>
);<z>
if (pluginName.startsWith("_")) {<z>
pluginName = pluginName.substring(1);<z>
().length() == 0) {<z>
= null;<z>
pluginName;<z>
unsetRowGroup(int row1, int row2)<z>
throws WriteException, RowsExceededException<z>
if (row2 < row1)<z>
.warn("Cannot merge cells - top and bottom rows incorrectly " +<z>
;<z>
if (row2 >= numRows)<z>
.warn("" + row2 +<z>
" is greater than the sheet bounds");<z>
- 1;<z>
++)<z>
[i].decrementOutlineLevel();<z>
= 0;<z>
length; i-- > 0; )<z>
max(maxRowOutlineLevel,<z>
rows[i].getOutlineLevel());<z>
{<z>
null;<z>
= null;<z>
this.configuration = configuration;<z>
CascadingService service )<z>
== null )<z>
)<z>
public Priority priority()<z>
return Priority.SERVICE_PROVIDER;<z>
public void execute()<z>
;<z>
( Throwable throwable )<z>
"failed stopping cascading service", throwable );<z>
);<z>
;<z>
private void setLenseWidgetsVisibility(int visibility) {<z>
(visibility);<z>
visibility);<z>
;<z>
mAmPm.setVisibility(visibility);<z>
setVisibility(visibility);<z>
is24HourFormat(mContext))<z>
setVisibility(View.INVISIBLE);<z>
synchronized void setError(RuntimeException error) {<z>
(error);<z>
OnErrorAction.ABORT)) {<z>
;<z>
{<z>
throw getError();<z>
{<z>
);<z>
workItemId);<z>
());<z>
);<z>
) {<z>
).ip();<z>
+ ".");<z>
"/" + ip + "-messages.log");<z>
);<z>
"-neo4j-server.properties");<z>
+ "-neo4j.properties");<z>
(Object object) {<z>
) {<z>
object);<z>
(object);<z>
addInstallLocationPropertyDescriptor(object);<z>
(object);<z>
object);<z>
;<z>
static void checkForUpdates(Plugin plugin) {<z>
"Checking for updates...");<z>
getBukkitDevDownload("spouttrade");<z>
.getVersion().split(" ");<z>
version[0])) {<z>
("This version is out of date!");<z>
getDescription().getVersion());<z>
+ version[0]);<z>
());<z>
;<z>
().getUpdateFolder());<z>
if (!directory.exists()) {<z>
);<z>
);<z>
) {<z>
info("Jar already exists in update folder.");<z>
} else {<z>
info("Downloading latest version.");<z>
= new FileOutputStream(file);<z>
, 0, 1 << 24);<z>
);<z>
{<z>
"Error while checking for updates!");<z>
EventBus eventBus, MyView view, MyProxy proxy,<z>
placeManager) {<z>
proxy);<z>
;<z>
int convertFontSize(String size) throws FOPException {<z>
;<z>
POINT;<z>
(!size.endsWith(sFONTSUFFIX)) {<z>
+ "', must end with '"<z>
+ "'");<z>
= 0;<z>
));<z>
).floatValue());<z>
) {<z>
new FOPException("Invalid font size value '" + size + "'");<z>
* 2.0);<z>
shouldBeIdempotentOnDuplicateSaveOfFacility() {<z>
, "Ghana", "Awutu", "Senya", "Province");<z>
(mrsFacility).getId();<z>
new Facility(mrsFacility);<z>
final String motechId = "123456";<z>
.phoneNumber("1234567890");<z>
allMotechModuleFacilities.facilityExists(motechId));<z>
(facility);<z>
facilityExists(motechId));<z>
facility);<z>
is(asList(motechId)));<z>
boolean activateOnOpen)<z>
{<z>
(commit);<z>
(PlatformUI.getWorkbench()<z>
, ID, activateOnOpen);<z>
String newspaper)<z>
(newspaper);<z>
for (Article article : articles) {<z>
);<z>
);<z>
article);<z>
] args) {<z>
BarAction(1);<z>
, 2);<z>
));<z>
));<z>
{ "a" })));<z>
>("a", 1)));<z>
(1, 1)));<z>
));<z>
(null).hashCode());<z>
));<z>
toString());<z>
BarAction(null).toString());<z>
{<z>
));<z>
registerBeanDefinitionParser("list", new CollectionBeanDefinitionParser() {<z>
() {<z>
.LIST;<z>
});<z>
) {<z>
CollectionType collectionType() {<z>
;<z>
;<z>
;<z>
);<z>
(final String vlanname) {<z>
) {<z>
;<z>
;<z>
else {<z>
false;<z>
] buffer) {<z>
y*nx;<z>
= buffer.length;<z>
= buffer[0].length;<z>
;<z>
) {<z>
(double[])data[z];<z>
j<lenj; j++) {<z>
+y)*nx;<z>
{<z>
[j][k]);<z>
) {<z>
, z);<z>
DataDDS dds, boolean verbose,<z>
, boolean compress) {<z>
(verbose)<z>
);<z>
if (dump_data) {<z>
;<z>
catch (java.io.IOException e) {<z>
.err.println(e);<z>
} else {<z>
verbose) {<z>
println("\nThe DDX:");<z>
printXML(System.out);<z>
;<z>
(System.out);<z>
println();<z>
aggregatePackageDataTypes(){<z>
+ PackageInstaller.DATA_TYPES_DIRECTORY_NAME);<z>
())<z>
);<z>
LookupEnvironment env) {<z>
) return null;<z>
(binaryValue instanceof Constant)<z>
return binaryValue;<z>
(binaryValue instanceof ClassSignature)<z>
);<z>
Object[]) {<z>
(Object[]) binaryValue;<z>
;<z>
0) return objects;<z>
;<z>
length; i++)<z>
], env);<z>
return values;<z>
IllegalStateException();<z>
text) {<z>
text = text;<z>
measureString(text);<z>
;<z>
String name, UserDBResourceDAO userDBErd) {<z>
getFilename();<z>
this.userDB = userDBErd.getParent();<z>
.userDBERD = userDBErd;<z>
) {<z>
);<z>
catalog, PackageTypeEnum.FACTORY));<z>
;<z>
"/" + config + "/" + prettyCatalog + "DataPoolFactory.java";<z>
;<z>
MacroParameter params) throws IllegalArgumentException, IOException<z>
.getContext();<z>
get("vcontext");<z>
);<z>
.api.Object obj;<z>
get("classname", 0);<z>
, 1);<z>
null)<z>
parseInt(snb));<z>
classname);<z>
);<z>
) {<z>
) return node.toStringTree();<z>
;<z>
r) {<z>
(), key);<z>
r);<z>
;<z>
public boolean isIgnorableWSNode(Node node) {<z>
() == Node.TEXT_NODE &&<z>
("[\\t\\n\\x0B\\f\\r\\s]+");<z>
() {<z>
) < 5) {<z>
{<z>
(int keyCode, KeyEvent event,<z>
int duration) {<z>
(keyCode, event);<z>
public void onShortPressBack(int keyCode, KeyEvent event,<z>
, int duration) {<z>
;<z>
);<z>
Object obj) {<z>
instanceof ISiteCategoryDefinition) {<z>
PAGE_ID;<z>
;<z>
getRootEntity() {<z>
;<z>
!= null) {<z>
.getBaseEntity();<z>
return current;<z>
(AutoConfResource resource) {<z>
()) {<z>
.getFactoryPid());<z>
equals(resource.getPid());<z>
procNull(RpcPacket rpc) {<z>
();<z>
;<z>
boolean printTotals) {<z>
double[counts.length];<z>
].length];<z>
;<z>
< counts.length; i++) {<z>
.length; j++) {<z>
j];<z>
][j];<z>
counts[i][j];<z>
);<z>
) {<z>
padLeft("", cellSize));<z>
].length; j++) {<z>
colLabels[j].toString();<z>
.padLeftOrTrim(s, cellSize);<z>
.append(s);<z>
printTotals) {<z>
("Total", cellSize));<z>
;<z>
) {<z>
!= null) {<z>
();<z>
pad(s, cellSize);<z>
s);<z>
; j++) {<z>
[j]), cellSize));<z>
if (printTotals) {<z>
));<z>
'\n');<z>
) {<z>
.pad("Total", cellSize));<z>
: colTotals) {<z>
), cellSize));<z>
), cellSize));<z>
;<z>
) {<z>
))) {<z>
().getName());<z>
;<z>
other;<z>
);<z>
(lastComparison != 0) {<z>
lastComparison;<z>
(isSetSuccess()) {<z>
(this.success, typedOther.success);<z>
lastComparison != 0) {<z>
;<z>
;<z>
(String field) {<z>
;<z>
(fmd == null)<z>
get("no-field", field,<z>
).getClass()))<z>
);<z>
.getIndex(), null, true);<z>
{<z>
= myTable;<z>
if (table.getRowCount() <= 0)<z>
= table.getRowHeight();<z>
1;<z>
++) {<z>
(); column++) {<z>
, column) != null) {<z>
int) table<z>
(row, column)<z>
,<z>
row, column), false,<z>
getPreferredSize()<z>
getHeight();<z>
max(prefHeight, tempHeight);<z>
;<z>
)<z>
.getAttributes().get("mode");<z>
).get("streamId"));<z>
&& mode.equals("saved"))<z>
);<z>
) throws SoapUIException<z>
;<z>
e )<z>
);<z>
) throws Exception {<z>
readhandle.close();<z>
;<z>
.close();<z>
(int id, String endingClan, String victor)<z>
);<z>
);<z>
new Date().getTime());<z>
setString(2, endingClan);<z>
;<z>
setInt(4, id);<z>
();<z>
closeConn();<z>
(SQLException e)<z>
), e);<z>
{<z>
XQuery query = new XQuery(<z>
ctx);<z>
final QT3Result res = result(query);<z>
;<z>
"FOUT1170")<z>
u, double t) {<z>
isTrue(t > 0.0, "t > 0");<z>
);<z>
temp = multiply(_sigma, u);<z>
);<z>
(t, res);<z>
) throws HTTPSRequestException<z>
.getOutputStream();<z>
= httpRequestMessage.getHTTPMessageHeaders();<z>
HTTPMessageHeader httpRequestMessage1Header1 = httpRequestMessage1Headers1[0];<z>
;<z>
();<z>
);<z>
.length; i = i + 1)<z>
[i];<z>
= httpRequestMessage1Header1.getKey();<z>
;<z>
;<z>
"\r\n").getBytes());<z>
);<z>
();<z>
httpResponseMessage1 = new HTTPResponseMessage(httpRequestMessage, sslSocketInputStream);<z>
read();<z>
return httpResponseMessage1;<z>
e)<z>
;<z>
(DXFLayer layer) throws NullArgumentException, InvalidArgumentException {<z>
>();<z>
@SuppressWarnings("unchecked")<z>
(DXFConstants.ENTITY_TYPE_ARC);<z>
(dxfArcs != null) {<z>
dxfArc : dxfArcs) {<z>
boolean isCounterClockwise = dxfArc.isCounterClockwise();<z>
;<z>
dxfArc.getEndPoint());<z>
getCenterPoint());<z>
isCounterClockwise);<z>
archimedesArcs.add(arc);<z>
return archimedesArcs;<z>
similarity) {<z>
;<z>
length;i++) {<z>
i].docState.similarity = similarity;<z>
setAgendaGroup(<z>
ProtobufMessages.Agenda.AgendaGroup.Builder builderForValue) {<z>
{<z>
;<z>
());<z>
);<z>
{<z>
(index, builderForValue.build());<z>
this;<z>
void toggleShowTextField() {<z>
;<z>
CvsApplicationLevelConfiguration.getInstance().SHOW_PATH = myShowPath;<z>
updateTextFieldShowing();<z>
void debug(String inDebugMsg) {<z>
if (commonsLogger != null) {<z>
debug(inDebugMsg);<z>
{<z>
(inDebugMsg);<z>
CommandSender sender, String[] args) {<z>
.getDescription().getCommands();<z>
();<z>
)) {<z>
RED + "Help page for /" + args[1]);<z>
ChatColor.RED + "---------------------------------");<z>
) {<z>
ChatColor.GOLD);<z>
.GREEN + use);<z>
} else {<z>
+ "Help page");<z>
;<z>
: commands.keySet()) {<z>
(ChatColor.RED + "/" + commandsEntry);<z>
("description"));<z>
; i++) {<z>
sendMessage(messages.get(i));<z>
return true;<z>
run()<z>
log.debug("Reinvite please");<z>
;<z>
)<z>
e.printStackTrace();<z>
) throws SQLException<z>
;<z>
column);<z>
();<z>
<Constants.ColoredManaSymbol> chosenColors) {<z>
(cards.isEmpty()) {<z>
;<z>
;<z>
.MAX_VALUE;<z>
cards) {<z>
, chosenColors);<z>
score < minScore) {<z>
minScore = score;<z>
= card;<z>
worstCard;<z>
PgsComboBoxButtonUI(<z>
, Icon i,<z>
, JList list) {<z>
this();<z>
;<z>
i;<z>
;<z>
list;<z>
());<z>
final String version) {<z>
String lname = name.toLowerCase();<z>
StringUtils.capitalize(lname) + "Processor";<z>
@SuppressWarnings("unchecked")<z>
>) Class<z>
);<z>
Processor> constructor = clazz<z>
class);<z>
.newInstance(version);<z>
{<z>
;<z>
final InvocationTargetException e) {<z>
);<z>
InstantiationException e) {<z>
"Ignoring invalid processor " + name, e);<z>
) {<z>
+ name, e);<z>
(final ClassNotFoundException e) {<z>
"Ignoring invalid processor " + name, e);<z>
;<z>
,<z>
String newValue) {<z>
;<z>
newValue);<z>
void execute() throws ResourceUnavailableException,<z>
InsufficientCapacityException, ServerApiException,<z>
{<z>
ManagementService.Name);<z>
);<z>
);<z>
<ListVolumesOnFilerCmdResponse>();<z>
<ListVolumesOnFilerCmdResponse>();<z>
: volumes) {<z>
= new ListVolumesOnFilerCmdResponse();<z>
.getId());<z>
setIpAddress(volume.getIpAddress());<z>
(volume.getPoolName());<z>
volume.getAggregateName());<z>
(volume.getVolumeName());<z>
getSnapshotPolicy());<z>
));<z>
.setVolumeSize(volume.getVolumeSize());<z>
response.setObjectName("volume");<z>
.add(response);<z>
listResponse.setResponses(responses);<z>
.setResponseName(getCommandName());<z>
(listResponse);<z>
(InvalidParameterValueException e) {<z>
;<z>
{<z>
;<z>
(isDropCell) {<z>
"Tree.dropCellBackground");<z>
== null) {<z>
();<z>
(selected) {<z>
);<z>
else {<z>
bColor = getBackgroundNonSelectionColor();<z>
(bColor == null) {<z>
);<z>
int imageOffset = -1;<z>
fillBackground) {<z>
imageOffset = getLabelStart();<z>
(bColor);<z>
().isLeftToRight()) {<z>
imageOffset, 0, getWidth() - imageOffset,<z>
getHeight());<z>
else {<z>
imageOffset,<z>
));<z>
hasFocus) {<z>
drawsFocusBorderAroundIcon) {<z>
imageOffset = 0;<z>
imageOffset == -1) {<z>
imageOffset = getLabelStart();<z>
)) {<z>
, 0, getWidth() - imageOffset,<z>
getHeight(), bColor);<z>
else {<z>
getHeight(), bColor);<z>
g);<z>
, final VirtualSocketAddress address,<z>
Map<String, String>data) {<z>
mAddress = address;<z>
mSocketInfo = data;<z>
String fetchKeyword() throws ParseException {<z>
= fetchWord();<z>
startsWith("\"")) {<z>
ParseException(<z>
+ w, 0, 0);<z>
w;<z>
{<z>
= route;<z>
= vehicle;<z>
);<z>
;<z>
characters)<z>
length)<z>
;<z>
: characters)<z>
) != character)<z>
false;<z>
;<z>
return false;<z>
workingMemory,<z>
,<z>
,<z>
final Extractor extractor2, final Object object2) {<z>
object1 ) ) {<z>
;<z>
workingMemory, object2 );<z>
> extra) {<z>
new MultiCalendarServiceImpl();<z>
= new GtfsStopContext();<z>
0;<z>
{<z>
;<z>
;<z>
service);<z>
);<z>
(stopContext);<z>
;<z>
) {<z>
+ bundleIndex);<z>
;<z>
= new CalendarServiceDataFactoryImpl();<z>
);<z>
= csfactory.createData();<z>
dao);<z>
gtfsBundle.getDefaultStreetToStopTime());<z>
.run(graph);<z>
)) {<z>
createStationTransfers(graph);<z>
{<z>
) {<z>
.setDao(dao);<z>
(graph);<z>
(null);<z>
catch (IOException e) {<z>
(e);<z>
= service.getData();<z>
data);<z>
;<z>
RecognitionException {<z>
;<z>
==0 ) {<z>
.getExpAccess().getEqualsSignGreaterThanSignKeyword_2_2());<z>
return ;<z>
backtracking==0 ) {<z>
());<z>
(RecognitionException re) {<z>
re);<z>
recover(input,re);<z>
(stackSize);<z>
protected static void extractXuaUserNameFromSaml2Assertion(<z>
SoapMessage message,<z>
auditDataset)<z>
getContextualProperty(XUA_USERNAME_CONTEXT_KEY) != null) {<z>
(XUA_USERNAME_CONTEXT_KEY).toString());<z>
expressions = XUA_XPATH_EXPRESSIONS.get();<z>
.getContent(Node.class);<z>
evaluate(envelopeNode, XPathConstants.NODE);<z>
) {<z>
;<z>
getTextContent();<z>
userName.isEmpty()) {<z>
StringBuilder()<z>
Element) nameNode).getAttribute("SPProvidedID"))<z>
append('<')<z>
append(userName)<z>
('@')<z>
append(issuer)<z>
'>');<z>
());<z>
void norm() {<z>
(a, b));<z>
;<z>
;<z>
g;<z>
&& b < 0) {<z>
-a;<z>
b = -b;<z>
;<z>
) {<z>
(partial == null) {<z>
return this;<z>
;<z>
tables.records.TAuthorRecord value) {<z>
null) {<z>
.TBook.CO_AUTHOR_ID, null);<z>
.tables.TAuthor.ID));<z>
, PrintStream out)<z>
{<z>
model = DP.flatView(model);<z>
stateA = model.stateAlphabet();<z>
model.emissionAlphabet();<z>
"\">");<z>
);<z>
; stateI.hasNext(); ) {<z>
) stateI.next();<z>
) {<z>
() + "\">");<z>
{<z>
EmissionState es = (EmissionState) s;<z>
Distribution dis = es.getDistribution();<z>
{<z>
= (Symbol) symI.next();<z>
" <weight sym=\"" + sym.getName() +<z>
getWeight(sym) + "\"/>");<z>
" </state>");<z>
{<z>
State) i.next();<z>
;<z>
("</MarkovModel>");<z>
[] getDirtyFields() {<z>
null || _fieldOriginalValues.isEmpty())<z>
|| _fieldCollectionChangeTimeLines.isEmpty()))<z>
;<z>
HashSet<String>();<z>
null)<z>
());<z>
_fieldCollectionChangeTimeLines != null)<z>
());<z>
()]);<z>
)<z>
this.failure = x;<z>
;<z>
process(FilterContext context) {<z>
{<z>
mHeight,<z>
,<z>
FrameFormat.TARGET_GPU);<z>
,<z>
GLFrame.EXISTING_TEXTURE_BINDING,<z>
);<z>
setTimestamp(mTimestamp);<z>
, mFrame);<z>
) {<z>
closeOutputPort("frame");<z>
execute(ActionMapping mapping, ActionForm form,<z>
response)<z>
{<z>
ActionMessages();<z>
DynaActionForm) form;<z>
.getString("txtDataIni");<z>
lDatFim = _form.getString("txtDataFim");<z>
);<z>
;<z>
lTexto = _form.getString("txtTexto");<z>
(request);<z>
).getAttribute(Constants.PA_FUNCIONARIO);<z>
));<z>
) funcionarioCtrl.get(funcionarioId);<z>
AcionamentoCtrl(getDaoFactory());<z>
= acionCtrl.listaMensagensRespondidas(func,<z>
, org);<z>
setAttribute("lstAcionamentos", lstAcionamentos);<z>
"totalMsg", String<z>
;<z>
func);<z>
.isEmpty()) {<z>
("success"));<z>
mapping.findForward("failure"));<z>
info, Double actual, double other) {<z>
;<z>
)) return;<z>
shouldBeGreaterOrEqual(actual, other));<z>
AbstractBuild build, File changelogFile)<z>
IOException, SAXException {<z>
);<z>
r = new ArrayList<LogEntry>();<z>
;<z>
("*/logentry", LogEntry.class);<z>
);<z>
.addBeanPropertySetter("*/logentry/task", "taskId");<z>
"user");<z>
("*/logentry/date");<z>
"*/logentry/msg");<z>
.addSetNext("*/logentry", "add");<z>
addObjectCreate("*/logentry/paths/path", Path.class);<z>
("*/logentry/paths/path");<z>
addBeanPropertySetter("*/logentry/paths/path", "action");<z>
);<z>
;<z>
changelogFile);<z>
catch (IOException e) {<z>
"Failed to parse " + changelogFile, e);<z>
{<z>
("Failed to parse " + changelogFile, e);<z>
new SynergyChangeLogSet(build, r);<z>
;<z>
void actionPerformed(ActionEvent event)<z>
.getGlobeLayerName();<z>
layerName, this.styleName, globeLayerName);<z>
event);<z>
PMContext context) throws Exception {<z>
{<z>
;<z>
FileSystem wspFS = context.getFileSystem();<z>
;<z>
LocalFileSystem blobFS = new LocalFileSystem();<z>
(), "blobs"));<z>
.init();<z>
;<z>
(blobFS);<z>
= true;<z>
(List<String> keys) {<z>
();<z>
(r.nextInt(100));<z>
public final EObject entryRuleJvmTypeReference() throws RecognitionException {<z>
current = null;<z>
;<z>
.backtracking==0 ) {<z>
.getJvmTypeReferenceRule());<z>
(FOLLOW_ruleJvmTypeReference_in_entryRuleJvmTypeReference12133);<z>
iv_ruleJvmTypeReference=ruleJvmTypeReference();<z>
--;<z>
.failed) return current;<z>
) {<z>
current =iv_ruleJvmTypeReference;<z>
failed) return current;<z>
) {<z>
,re);<z>
);<z>
current;<z>
private static void useObsoleteParameter() {<z>
v = new Vector(1);<z>
new Vector(2));<z>
){<z>
exchangeItem: itemList){<z>
);<z>
){<z>
;<z>
;<z>
) {<z>
();<z>
] getTransformed() {<z>
new Transformations();<z>
InputStream is = null;<z>
)));<z>
} catch (FileNotFoundException e) {<z>
);<z>
;<z>
= im.transformL33t(is);<z>
catch (UnsupportedEncodingException e1) {<z>
();<z>
();<z>
) {<z>
;<z>
fileName);<z>
;<z>
);<z>
null;<z>
return modified;<z>
public OutgoingFigure() {<z>
);<z>
();<z>
());<z>
throws IOException<z>
)<z>
;<z>
if( inFontTag() )<z>
NEWLINE);<z>
);<z>
tagID, CGMWriter cgm) throws IOException {<z>
);<z>
);<z>
.MIN_VALUE);<z>
print(", ");<z>
.writeReal(Double.MAX_VALUE);<z>
print(", ");<z>
(20);<z>
(String name) {<z>
StringBuilder buf = new StringBuilder();<z>
name.toCharArray();<z>
) {<z>
encodedStr =<z>
: CHAR_TABLE[ch]);<z>
encodedStr == null) {<z>
buf.append(ch);<z>
else {<z>
;<z>
();<z>
, Context context) {<z>
, v2.type());<z>
.T_BOOL, lub)) {<z>
.Bool) v2, context);<z>
, lub)) {<z>
.Rational) v2, context);<z>
T_LIST_ANY, lub)) {<z>
context);<z>
lub)) {<z>
) v2, context);<z>
bop);<z>
return null;<z>
(Object o) {<z>
if (! (o instanceof NestedClass)) {<z>
;<z>
(NestedClass) o;<z>
) {<z>
!= null) {<z>
;<z>
null) {<z>
{<z>
return false;<z>
return true;<z>
createMeetingListClickListener() {<z>
() {<z>
id) {<z>
meetingTime = meetingListAdapter.getItem(position);<z>
TeamDetails.this, MeetingDetails.class);<z>
("teamName", team.getName());<z>
intent.putExtra("meetingTime", meetingTime);<z>
);<z>
void compressSQL(Reader reader) throws IOException {<z>
= new UnsyncBufferedReader(<z>
;<z>
;<z>
unsyncBufferedReader.readLine()) != null) {<z>
;<z>
.length() > 0) {<z>
(s.startsWith("insert into ")) {<z>
);<z>
) > 0) {<z>
;<z>
close();<z>
public boolean isSuspended() {<z>
)) {<z>
if (!thread.isInSuspendState()) {<z>
false;<z>
return !threads.isEmpty();<z>
) {<z>
1) {<z>
) {<z>
= true;<z>
1].equals("Test")) {<z>
;<z>
(args[2]);<z>
;<z>
int offset, int nbytes, short nelems) {<z>
offset = offset;<z>
this.nbytes = nbytes;<z>
= nelems;<z>
()<z>
(getServer(), this);<z>
;<z>
;<z>
>= 0)<z>
clear();<z>
_channel.read(_buffer);<z>
0)<z>
();<z>
)<z>
(_buffer))<z>
reset();<z>
IOException e)<z>
e);<z>
(this);<z>
();<z>
IOException e)<z>
e);<z>
(Profile profile, boolean selectRow) {<z>
new ProfilePanel(profile);<z>
RepositoryPanel repoPanel = new RepositoryPanel(profile);<z>
foldersPanel = new FoldersPanel(profile);<z>
;<z>
load();<z>
.load();<z>
();<z>
();<z>
new DefaultMutableTreeNode(<z>
(), "profile", profilePanel));<z>
)));<z>
)));<z>
.getChildCount() - 1);<z>
if (selectRow) {<z>
);<z>
.expandRow(profileNodeIndex);<z>
setSelectionRow(profileNodeIndex);<z>
> execute(String[] machines,<z>
,<z>
svcPath)<z>
Exception {<z>
V>();<z>
; i < machines.length; i++)<z>
exec(callable, svcPath));<z>
rl;<z>
.repository.model.FileEntry addFileEntry(<z>
userId, long repositoryId, long folderId,<z>
.lang.String mimeType,<z>
,<z>
,<z>
ServiceContext serviceContext)<z>
portal.kernel.exception.PortalException,<z>
portal.kernel.exception.SystemException {<z>
)<z>
, repositoryId, folderId,<z>
title, description, changeLog, is, size,<z>
);<z>
) {<z>
if (length < 0) {<z>
;<z>
return length;<z>
etime,<z>
eventParent) {<z>
= stime;<z>
etime;<z>
this.eventParent = eventParent;<z>
{<z>
; jj_lastpos = jj_scanpos = token;<z>
}<z>
catch(LookaheadSuccess ls) { return true; }<z>
populateParams() {<z>
super.populateParams();<z>
getComponent();<z>
tag.setKey(_key);<z>
adaptableObject, Class adapterType) {<z>
) {<z>
PersonAdapter((Person) adaptableObject);<z>
;<z>
{<z>
if (_conn == null) {<z>
false;<z>
_inTransaction) {<z>
;<z>
= false;<z>
result = false;<z>
commit();<z>
setAutoCommit(true);<z>
;<z>
SQLException e) {<z>
.error(e);<z>
return result;<z>
PropertyDefn defn, Object value )<z>
value == null )<z>
null;<z>
instanceof String )<z>
;<z>
(Integer) value ).toString( );<z>
<ExpandoValue> getColumnValues(<z>
,<z>
, int start, int end)<z>
SystemException {<z>
(<z>
classNameId, tableName);<z>
table == null) {<z>
emptyList();<z>
ExpandoColumn column = expandoColumnPersistence.fetchByT_N(<z>
), columnName);<z>
== null) {<z>
return Collections.emptyList();<z>
data == null) {<z>
return expandoValuePersistence.findByT_C(<z>
), start, end);<z>
.findByT_C_D(<z>
;<z>
PhaseEvent phaseEvent, boolean beforePhaseNotifcation) {<z>
();<z>
if (!AjaxUtil.isPortletRequest(facesContext))<z>
return false;<z>
getRequest();<z>
RequestFacade requestFacade = RequestFacade.getInstance(request);<z>
) + ":" + beforePhaseNotifcation;<z>
.getAttribute(phasePassedKey) != null)<z>
;<z>
TRUE);<z>
;<z>
ArrayList<ContentProviderOperation> operations)<z>
OperationApplicationException {<z>
int ypCount = 0;<z>
;<z>
boolean callerIsSyncAdapter = false;<z>
;<z>
;<z>
true);<z>
;<z>
] results = new ContentProviderResult[numOperations];<z>
< numOperations; i++) {<z>
++opCount >= MAX_OPERATIONS_PER_YIELD_POINT) {<z>
new OperationApplicationException(<z>
);<z>
i);<z>
{<z>
= true;<z>
)) {<z>
= 0;<z>
(mDb.yieldIfContendedSafely(SLEEP_AFTER_YIELD_DELAY)) {<z>
;<z>
results, i);<z>
setTransactionSuccessful();<z>
results;<z>
finally {<z>
.set(false);<z>
;<z>
(callerIsSyncAdapter);<z>
url,<z>
,<z>
throws NamingException {<z>
== schema.length()) {<z>
null;<z>
String element : pkgPrefixes) {<z>
;<z>
= element<z>
schema + "." + schema + "URLContextFactory";<z>
(clsName).newInstance();<z>
Exception e) {<z>
);<z>
{<z>
return obj;<z>
catch (final Exception e) {<z>
e instanceof NamingException) {<z>
(NamingException) e;<z>
new NamingException(<z>
;<z>
.setRootCause(e);<z>
nex;<z>
return null;<z>
long insertDocumentID(String docId) {<z>
1;<z>
new ContentValues();<z>
;<z>
args);<z>
} catch (Exception e) {<z>
"Error inserting document id", e);<z>
;<z>
entity, int sessionType)<z>
throws Exception {<z>
JavaClass javaClass = _getJavaClass(<z>
) +<z>
_getSessionTypeName(sessionType) + "Service.java");<z>
> context = _getContext();<z>
entity);<z>
, _getMethods(javaClass));<z>
, _getSessionTypeName(sessionType));<z>
context);<z>
new File(<z>
+<z>
);<z>
ejbFile, content, _author);<z>
!_serviceOutputPath.equals(_outputPath)) {<z>
new File(<z>
.getName() +<z>
_getSessionTypeName(sessionType) + "ServiceUtil.java");<z>
) {<z>
out.println("Relocating " + ejbFile);<z>
;<z>
C) {<z>
, C,<z>
;<z>
.getConicPart();<z>
= new ASTPair();<z>
tmp41_AST);<z>
(LITERAL_private);<z>
modifier_AST = (AST)currentAST.root;<z>
create(LT(1));<z>
(currentAST, tmp42_AST);<z>
match(LITERAL_public);<z>
AST tmp43_AST = null;<z>
, tmp43_AST);<z>
match(LITERAL_protected);<z>
LITERAL_static:<z>
astFactory.create(LT(1));<z>
, tmp44_AST);<z>
(LITERAL_static);<z>
(AST)currentAST.root;<z>
LITERAL_transient:<z>
tmp45_AST);<z>
AST)currentAST.root;<z>
case FINAL:<z>
AST tmp46_AST = null;<z>
(LT(1));<z>
(currentAST, tmp46_AST);<z>
match(FINAL);<z>
AST)currentAST.root;<z>
ABSTRACT:<z>
tmp47_AST = null;<z>
(ABSTRACT);<z>
(AST)currentAST.root;<z>
.addASTChild(currentAST, tmp48_AST);<z>
= (AST)currentAST.root;<z>
LITERAL_threadsafe:<z>
AST tmp49_AST = null;<z>
, tmp49_AST);<z>
currentAST.root;<z>
LITERAL_synchronized:<z>
, tmp50_AST);<z>
AST)currentAST.root;<z>
LT(1));<z>
, tmp51_AST);<z>
LITERAL_volatile);<z>
(LT(1));<z>
.addASTChild(currentAST, tmp52_AST);<z>
match(STRICTFP);<z>
modifier_AST = (AST)currentAST.root;<z>
(1), getFilename());<z>
= modifier_AST;<z>
{<z>
();<z>
len; i++) {<z>
(i);<z>
dom.Node.ELEMENT_NODE){<z>
("Key")){<z>
else {<z>
xmlCreateComponent(elt, dockableLocation);<z>
nestedNode = comp;<z>
static Cache getDefaultCache() {<z>
cp = CacheProviderUtil.getDefaultCacheProvider();<z>
)<z>
new IllegalArgumentException("Default cache provider is not set." +<z>
);<z>
).getDefaultCacheName();<z>
if (name == null)<z>
new IllegalArgumentException("Default cache name is not set. " +<z>
);<z>
return cp.getCache(name);<z>
Method readMethod)<z>
{<z>
findIndexedPropertyType(readMethod,<z>
()));<z>
;<z>
getGridHeight() {<z>
getStringValue(<z>
(),<z>
);<z>
350;<z>
)) {<z>
= Boolean.TRUE;<z>
).size() * 22);<z>
else {<z>
Integer.parseInt(heightStr);<z>
(Exception e) {<z>
return height;<z>
String name)<z>
(IS_REPAIRING_NAMESPACES.equals(name))<z>
Boolean(prefixDefaulting);<z>
name);<z>
page_will_wait_for_any_of_several_rendered_elements() {<z>
mock(WebElement.class);<z>
));<z>
id("element2"));<z>
BasicPageObject(driver);<z>
;<z>
"element2"));<z>
void refreshComponent() {<z>
DomainPropertiesEditionContext(null,<z>
;<z>
propertiesEditingContext.createPropertiesEditingComponent(<z>
, getDescriptor());<z>
null) {<z>
).getAdapterFactory();<z>
(new BindingViewHelper(propertiesEditingContext,<z>
)));<z>
.setPropertiesEditionPart(<z>
;<z>
.setLiveEditingDomain(editingDomain);<z>
!= null) {<z>
.dispose();<z>
getWidgetFactory());<z>
(editingComposite != null) {<z>
(GridData.FILL_BOTH));<z>
();<z>
null) {<z>
,<z>
));<z>
propertiesEditionComponent.addListener(new IPropertiesEditionListener() {<z>
public void firePropertiesChanged(IPropertiesEditionEvent event) {<z>
messageManager.processMessage(event);<z>
);<z>
initialise(){<z>
);<z>
;<z>
value = properties.getProperty(displayRadiusProperty);<z>
){<z>
.readDouble(value);<z>
.getProperty(symmetryRadiusProperty);<z>
null){<z>
);<z>
= properties.getProperty(mapRadiusProperty);<z>
(value != null){<z>
;<z>
(contourLevelsProperty);<z>
value != null){<z>
(value);<z>
j, int k)<z>
0;<z>
, j - 1, k);<z>
)<z>
return j;<z>
96;<z>
)<z>
i, k1, k);<z>
1, k)])<z>
+ 1;<z>
k1--;<z>
true);<z>
;<z>
getCollectionPath() {<z>
if (encodedCollectionPath == null) {<z>
;<z>
encodedCollectionPath, "UTF-8");<z>
catch (UnsupportedEncodingException e) {<z>
new IllegalArgumentException(encodedCollectionPath + " can not be properly escaped");<z>
{<z>
= 80;<z>
getName() + " <options>";<z>
APPLICATION_KEY_OPTION, ID_OPTION);<z>
;<z>
header, options, footer, false);<z>
public void addTheme(String theme)<z>
();<z>
(!allowedThemes.contains(theme))<z>
(theme);<z>
basePath, String fullPath) {<z>
startsWith(basePath)) {<z>
;<z>
.length());<z>
, String[] args) {<z>
(Player) sender;<z>
);<z>
()) {<z>
, Messages.get("moderator.problem.not-inside"));<z>
true;<z>
.getCurrentPort();<z>
player, TravelPermissions.MODERATE);<z>
);<z>
isModerator || isOwner) {<z>
(args, " ", 1));<z>
get("moderator.success.rename"));<z>
{<z>
("moderator.problem.not-own"));<z>
return true;<z>
public createTag_result(<z>
.evernote.edam.type.Tag success,<z>
,<z>
,<z>
edam.error.EDAMNotFoundException notFoundException)<z>
();<z>
;<z>
.userException = userException;<z>
= systemException;<z>
;<z>
MixinModel implementMethodWithClass( Method method, Class mixinClass )<z>
.getMixinModel( mixinClass );<z>
null )<z>
);<z>
.addMixinModel( mixinModel );<z>
mixinsModel.addMethodMixin( method, mixinModel );<z>
mixinModel;<z>
final public void TypeArguments() throws ParseException {<z>
;<z>
();<z>
) {<z>
)) {<z>
} else {<z>
break label_75;<z>
(COMMA);<z>
;<z>
;<z>
{<z>
key == NULL_KEY ?<z>
;<z>
updateListDialog() {<z>
final CharSequence items[];<z>
(SHOW_TODAY_IN_PICKER)<z>
PICKER_RANGE*2 + 2];<z>
PICKER_RANGE*2 + 1];<z>
;<z>
; i <= PICKER_RANGE; i++) {<z>
Calendar)mSelectedDate.clone();<z>
CALENDAR_UNIT, i);<z>
());<z>
if (SHOW_TODAY_IN_PICKER)<z>
] = "Today";<z>
(mActivity);<z>
("Choose a date");<z>
items, new DialogInterface.OnClickListener() {<z>
item) {<z>
.equals("Today"))<z>
mSelectedDate = Calendar.getInstance();<z>
.toString()));<z>
();<z>
{<z>
);<z>
= builder.create();<z>
notifyChanged(Notification notification) {<z>
);<z>
class)) {<z>
:<z>
GEN_NODE__GRAPHICAL_NODE_EDIT_POLICY_CLASS_NAME:<z>
:<z>
, false, true));<z>
case GMFGenPackage.GEN_NODE__MODEL_FACET:<z>
GMFGenPackage.GEN_NODE__LABELS:<z>
;<z>
notification);<z>
String text, String toTrim) {<z>
= countTrailing(text, toTrim);<z>
;<z>
(CustomizedTextSelectFormBean customMessageFormBean) {<z>
() == null) {<z>
));<z>
)<z>
).getPageSetup( );<z>
= pageSetup.getMasterPageCount( );<z>
if ( pageCount > 0 )<z>
MasterPageDesign pageDesign = pageSetup.getMasterPage( 0 );<z>
( pageDesign.getName( ) );<z>
return pageDesign;<z>
return null;<z>
fieldDeclaration, MethodScope scope) {<z>
.binding;<z>
(scope.enclosingSourceType());<z>
fieldDeclaration, enclosingType);<z>
Expression initialization = fieldDeclaration.initialization;<z>
!= null<z>
AllocationExpression<z>
AllocationExpression) initialization).enumConstant != null) {<z>
, enclosingType);<z>
} else {<z>
createField(info, b, enclosingType);<z>
true;<z>
} catch (Throwable e) {<z>
e);<z>
) {<z>
!= null) {<z>
BuildException("The class attribute has already been set.");<z>
clazz = c;<z>
{<z>
;<z>
if (clearScreen) {<z>
.clear();<z>
()) {<z>
;<z>
(exit) {<z>
.clear();<z>
endFrame();<z>
if (resolutionChanged) {<z>
resolutionChanged = false;<z>
);<z>
) {<z>
XQuery query = new XQuery(<z>
);<z>
res = result(query);<z>
res;<z>
assertBoolean(true)<z>
(SapphireRenderingContext context) {<z>
);<z>
!= null && file.exists()) {<z>
);<z>
;<z>
return null;<z>
)<z>
protobuf.InvalidProtocolBufferException {<z>
();<z>
.isInitialized()) {<z>
newUninitializedMessageException(<z>
asInvalidProtocolBufferException();<z>
return result;<z>
Service service, IIdentity node,<z>
) {<z>
()) LOG.debug("SLM CommsClient: unshareService called");<z>
Stanza(node);<z>
(stanza.getId(), serviceControlCallback);<z>
new ServiceControlMsgBean();<z>
setMethod(MethodType.UNSHARE_SERVICE);<z>
;<z>
(node.getJid());<z>
debug("SLM CommsClient: Sending Message...");<z>
sendIQGet(stanza, bean, callback);<z>
CommunicationException e) {<z>
.warn(e.getMessage());<z>
boolean getPreferenceValue(IViewPart part)<z>
baseKey = getPreferenceKey();<z>
);<z>
= viewKey + "." + baseKey;<z>
= getPreferenceStore();<z>
= false;<z>
.contains(compositeKey))<z>
(compositeKey);<z>
= store.getBoolean(baseKey);<z>
return value;<z>
{<z>
;<z>
);<z>
();<z>
getElementByQName(partElement);<z>
getSchemaType();<z>
);<z>
(createWrappedElements(seq));<z>
) {<z>
getContent();<z>
if (xmlSchemaConent instanceof XmlSchemaComplexContentExtension) {<z>
type<z>
();<z>
baseTypeName = extension.getBaseTypeName();<z>
getTypeByQName(baseTypeName);<z>
{<z>
(XmlSchemaComplexType)schemaType;<z>
) instanceof XmlSchemaSequence) {<z>
XmlSchemaSequence)complexType.getParticle();<z>
createWrappedElements(seq));<z>
XmlSchemaSequence) {<z>
XmlSchemaSequence)extension.getParticle();<z>
qnames.addAll(createWrappedElements(xmlSchemaSeq));<z>
;<z>
JobPersistenceException {<z>
(trigger);<z>
} catch (Exception e) {<z>
(),e);<z>
{<z>
new ClickHandler() {<z>
) {<z>
= (Widget) event.getSource();<z>
w );<z>
"from" ) + "</div>";<z>
DirtyableFlexTable panel = new DirtyableFlexTable();<z>
;<z>
== null ) {<z>
.setWidget( r,<z>
.INSTANCE.clickToAddPatterns() + "</font>",<z>
);<z>
;<z>
r,<z>
) );<z>
getModeller(),<z>
.getEventBus(),<z>
(),<z>
);<z>
expressionBuilder.addOnModifiedCommand( new Command() {<z>
() {<z>
);<z>
} );<z>
.setWidget( r,<z>
);<z>
panel;<z>
addFixedRange(String label, final DateRange dateRange) {<z>
>() {<z>
ce) {<z>
) {<z>
dateRange);<z>
;<z>
] argv){<z>
void eUnset(int featureID) {<z>
(featureID) {<z>
SOAPPackage.SOAP_MESSAGE_COMPOSER_TYPE__UNWRAPPED:<z>
;<z>
(featureID);<z>
, JsonParseException<z>
if (_pendingLF != 0) {<z>
if (_inputSource == null) {<z>
false;<z>
);<z>
)) {<z>
];<z>
(c == '\r' || c == '\n') {<z>
= c;<z>
();<z>
;<z>
false;<z>
data)<z>
(type);<z>
.type = type;<z>
isNotNull(source);<z>
source = source;<z>
data;<z>
, PrintWriter stream)<z>
" ();");<z>
" ", "value", entry, stream);<z>
;<z>
ClassLoader classLoader) {<z>
{<z>
"ClassLoader must not be null");<z>
= classLoader;<z>
invokeWithOGLSharedContextCurrent(GraphicsConfiguration config,<z>
)<z>
OGLGraphicsConfig)) {<z>
false;<z>
OGLRenderQueue rq = OGLRenderQueue.getInstance();<z>
.lock();<z>
OGLContext.setScratchSurface((OGLGraphicsConfig)config);<z>
rq.flushAndInvokeNow(r);<z>
OGLContext.invalidateCurrentContext();<z>
{<z>
();<z>
;<z>
{<z>
bm = (BackgroundManager) Services<z>
;<z>
(text));<z>
boolean equals(Object obj) {<z>
== obj) {<z>
true;<z>
AUTMainPO || obj instanceof IAUTMainPO)) {<z>
return false;<z>
= (IAUTMainPO)obj;<z>
equals(o.getGuid());<z>
> aspectsToRemove, Iterable<String> aspectsToAdd)<z>
.getNodeRef(), aspectsToRemove, aspectsToAdd);<z>
(CMISInvalidArgumentException e)<z>
, e);<z>
doAttachitem(RunData data)<z>
());<z>
.getCurrentToolSession();<z>
.getParameters ();<z>
"itemId");<z>
);<z>
attach_links == null)<z>
);<z>
, state);<z>
getAttribute(STATE_REMOVED_ITEMS);<z>
== null)<z>
>();<z>
STATE_REMOVED_ITEMS, removed);<z>
);<z>
())<z>
next();<z>
)<z>
.remove();<z>
, MODE_ATTACHMENT_SELECT_INIT);<z>
nodeId) throws IOException,<z>
XMLEvent e;<z>
attributes;<z>
xyz = { 0, 0, 0 };<z>
;<z>
e, XMLEvent.START_ELEMENT, "position");<z>
(POSITIONAttribute.class,<z>
.asStartElement());<z>
X,<z>
);<z>
POSITIONAttribute.X));<z>
attributes.get(POSITIONAttribute.Y));<z>
);<z>
sourceId, nodeId, "xyz", xyz);<z>
= getNextEvent();<z>
, "spells")) {<z>
e);<z>
;<z>
);<z>
"position");<z>
Builder addAllStoreName(<z>
String> values) {<z>
.storeName_.isEmpty()) {<z>
.String>();<z>
storeName_);<z>
;<z>
() {<z>
query = new XQuery(<z>
;<z>
(query);<z>
result = res;<z>
true)<z>
) {<z>
;<z>
(name) + "</b></td>");<z>
value);<z>
);<z>
private EntrySet postCollection(Reader r) throws HandlerException {<z>
(r);<z>
isEmpty()) {<z>
);<z>
;<z>
return c;<z>
> data)<z>
); i++)<z>
data.get(i));<z>
(IChemModel chemModel,<z>
IAtomContainer oldcontainer, String s, boolean reactantOrProduct,<z>
{<z>
);<z>
) {<z>
ret;<z>
< .5) {<z>
Double.MAX_VALUE;<z>
{<z>
;<z>
ret;<z>
(DataSource dataSource) {<z>
dataSource, "read_actors");<z>
"out_actors_cur", OracleTypes.CURSOR,<z>
ParameterizedBeanPropertyRowMapper.newInstance(Actor.class))<z>
ParseNode r) {<z>
if (r.value != null)<z>
r);<z>
h.isEmpty()) {<z>
(r.eval());<z>
null)<z>
children.length; i++)<z>
.children[i]);<z>
(<z>
ActionRequest actionRequest, ActionResponse actionResponse)<z>
{<z>
long calendarResourceId = ParamUtil.getLong(<z>
);<z>
calendarResourceId);<z>
)<z>
{<z>
);<z>
save();<z>
;<z>
boolean allowNewArguments, boolean qualifyAmbiguousNames) {<z>
)) {<z>
();<z>
= moduleTypeInfo;<z>
this.typeChecker = typeChecker;<z>
;<z>
;<z>
() {<z>
mMapView.getMaxZoomLevel()) {<z>
;<z>
.getController().setZoom(mZoomLevel);<z>
parseResponse() throws XMLStreamException {<z>
String tempParseString;<z>
.xmlr.getEventType();<z>
XMLStreamConstants.START_DOCUMENT, null, null);<z>
this.xmlr.next();<z>
.require(XMLStreamConstants.START_ELEMENT, null,<z>
.useLowerCaseElementNames ? Constants.ERROR_ROOT_ELEMENT.toLowerCase()<z>
Constants.ERROR_ROOT_ELEMENT);<z>
()) {<z>
= this.xmlr.next();<z>
== XMLStreamConstants.CHARACTERS) {<z>
eventType == XMLStreamConstants.END_ELEMENT) {<z>
).toString();<z>
() : name;<z>
) {<z>
Constants.ERROR_CODE.toLowerCase()<z>
) {<z>
(Utility.readElementFromXMLReader(this.xmlr,<z>
Constants.ERROR_CODE));<z>
.ERROR_MESSAGE.toLowerCase()<z>
ERROR_MESSAGE)) {<z>
(Utility.readElementFromXMLReader(this.xmlr,<z>
ERROR_MESSAGE.toLowerCase()<z>
: Constants.ERROR_MESSAGE));<z>
)<z>
: Constants.ERROR_EXCEPTION)) {<z>
(this.xmlr);<z>
require(XMLStreamConstants.END_ELEMENT, null,<z>
toLowerCase()<z>
Constants.ERROR_EXCEPTION);<z>
readElementFromXMLReader(this.xmlr, name);<z>
{ tempParseString });<z>
(XMLStreamConstants.END_ELEMENT, null, null);<z>
path) throws BackingStoreException {<z>
storage == null)<z>
];<z>
= new String[1][];<z>
new BackingStoreException[1];<z>
() {<z>
public void run() throws Exception {<z>
= storage.childrenNames(path);<z>
void handleException(Throwable exception) {<z>
exception instanceof BackingStoreException)<z>
(BackingStoreException) exception;<z>
);<z>
SafeRunner.run(code);<z>
!= null)<z>
0];<z>
];<z>
(Tag site) throws IOException {<z>
tag = new Tag(site, "doc");<z>
, getName());<z>
);<z>
tag;<z>
) {<z>
c != null;<z>
;<z>
c;<z>
cursorPresent;<z>
mContext = context;<z>
;<z>
);<z>
cursorPresent) {<z>
.registerContentObserver(mChangeObserver);<z>
(mDataSetObserver);<z>
void clear(DN dn) throws Exception {<z>
,<z>
.getName() }<z>
, int order) throws Exception {<z>
;<z>
newInstance().createXMLStreamReader(<z>
currentContent));<z>
StAXOMBuilder builder = new StAXOMBuilder(reader);<z>
builder.getDocumentElement();<z>
), currentOmElement);<z>
;<z>
, currentCollection.getUserName(), null);<z>
;<z>
getTargetState() != null) {<z>
,null);<z>
, null);<z>
, itemChildElement);<z>
;<z>
), null);<z>
currentCollection.getValidations() != null) {<z>
getNamespace(), actionElement);<z>
OMElement> validations = currentCollection.getValidations();<z>
()) {<z>
factory.createOMElement("validation"<z>
actionValidationsElement);<z>
validation.getKey(),null);<z>
getValue() != null) {<z>
= factory.createOMElement("operations"<z>
validationElement);<z>
());<z>
currentCollection.getExecutors() != null) {<z>
actionElement.getNamespace(), actionElement);<z>
.getExecutors();<z>
)) {<z>
OMElement executorElement = factory.createOMElement("executor"<z>
), actionExecutors);<z>
, null);<z>
getValue() != null) {<z>
("operations"<z>
;<z>
;<z>
){<z>
, actionElement.getNamespace(), actionElement);<z>
.setText(currentCollection.getActionValue());<z>
return currentOmElement.toString();<z>
byte[] buffer, int bufferIndex ) {<z>
start = bufferIndex;<z>
: false;<z>
+= 2;<z>
(extendedSecurity) {<z>
);<z>
bufferIndex += 2;<z>
byte[blobLength];<z>
return bufferIndex - start;<z>
throws ObjectInvalid {<z>
.element( obj );<z>
{<z>
true;<z>
);<z>
){<z>
return true;<z>
(i-1) ) >= 0 )<z>
){<z>
;<z>
return false;<z>
int end)<z>
throws MalformedURLException, FileNotFoundException {<z>
(chr, start, end);<z>
) {<z>
;<z>
new LinkedList<SAMRecord>();<z>
>();<z>
0;<z>
itor.hasNext()) {<z>
++;<z>
> 20000) {<z>
list = null;<z>
itor.next());<z>
);<z>
null == list)<z>
return null;<z>
return list;<z>
style) {<z>
lv = style.getLineVisible();<z>
(lv == null) {<z>
;<z>
styleContainer instanceof Style) {<z>
parentStyle = (Style) styleContainer;<z>
return isLineVisible(parentStyle);<z>
{<z>
null;<z>
{<z>
return lv;<z>
protected void doDSGet(Context context, HttpServletRequest request,<z>
,<z>
, AuthorizeException<z>
.getParameter("scope");<z>
)<z>
;<z>
String path = request.getPathInfo();<z>
endsWith("description.xml"))<z>
.getDescription(scope);<z>
(OpenSearch.getContentType("opensearchdescription"));<z>
length());<z>
.write(svcDescrip);<z>
getParameter("format");<z>
))<z>
= "atom";<z>
.getFormats().contains(format))<z>
response.sendError(HttpServletResponse.SC_BAD_REQUEST);<z>
query = request.getParameter("query");<z>
.getIntParameter(request, "start");<z>
request, "rpp");<z>
"sort_by");<z>
= request.getParameter("order");<z>
.startsWith("asc")) ?<z>
SortOption.DESCENDING;<z>
QueryArgs();<z>
0)<z>
= 0;<z>
qArgs.setStart(start);<z>
0)<z>
(rpp);<z>
.setSortOrder(sortOrder);<z>
)<z>
);<z>
(Exception e)<z>
qArgs.setSortOrder(sortOrder);<z>
)<z>
"";<z>
, scope) : null;<z>
logInfo = "";<z>
.setQuery(query);<z>
;<z>
(container == null)<z>
= DSQuery.doQuery(context, qArgs);<z>
if (container instanceof Collection)<z>
) + ",";<z>
container);<z>
Community)<z>
+ container.getID() + ",";<z>
, (Community)container);<z>
).size()];<z>
size(); i++)<z>
().get(i);<z>
context, myHandle);<z>
dso == null)<z>
"Query \"" + query<z>
);<z>
= dso;<z>
"search", logInfo + "query=\""<z>
")"));<z>
String> labelMap = getLabels(request);<z>
labelMap);<z>
.newTransformer();<z>
format));<z>
getWriter()));<z>
)<z>
log.error(e);<z>
toString());<z>
deep) {<z>
) {<z>
();<z>
= null;<z>
hide();<z>
RuleModeller parent,<z>
model) {<z>
= parent;<z>
model = model;<z>
);<z>
= model.metadataList;<z>
( meta.length > 0 ) {<z>
();<z>
.INSTANCE.Metadata2() ) );<z>
( hp );<z>
; i++ ) {<z>
RuleMetadata rmd = meta[i];<z>
addAttribute( rmd.attributeName,<z>
( rmd,<z>
);<z>
= model.attributes;<z>
.length > 0 ) {<z>
HorizontalPanel();<z>
.Attributes1() ) );<z>
( hp );<z>
< attrs.length; i++ ) {<z>
= attrs[i];<z>
.attributeName,<z>
at,<z>
) );<z>
;<z>
String flowId, FlowExecutionKey key,<z>
> conversationScope, FlowExecutionKeyFactory keyFactory)<z>
throws FlowExecutionRestorationFailureException {<z>
= (SimpleFlowExecutionSnapshot) snapshot;<z>
getFlowDefinition(flowId);<z>
();<z>
, key, conversationScope, flowDefinitionLocator);<z>
execution;<z>
protected FlashDriver flashDriver() {<z>
;<z>
){<z>
;<z>
new FlashNotSupported(driver);<z>
{<z>
( key ){<z>
case 'w':<z>
-= 50; break;<z>
's':<z>
rectY += 50; break;<z>
case 'a':<z>
rectX -= 50; break;<z>
case 'd':<z>
+= 50;<z>
'W':<z>
; break;<z>
case 'S':<z>
;<z>
'A':<z>
-= 1; break;<z>
'D':<z>
;<z>
'+':<z>
1; rectHeight += 5; break;<z>
:<z>
; rectHeight -= 5; break;<z>
;<z>
){<z>
+ rectHeight);<z>
);<z>
() {<z>
env.enableRandom("Improved Login");<z>
;<z>
Color.BLUE, "Thanks for using my script, please leave your feedback on my thread.");<z>
private static boolean hasGeometry(LayerInfo lyr) {<z>
;<z>
.getResource() instanceof FeatureTypeInfo) {<z>
) {<z>
.getBinding())) {<z>
;<z>
return false;<z>
[] mk_tokenSet_69() {<z>
[8];<z>
0]=4810363371520L;<z>
=1477075058612994048L;<z>
]=-6629298651002438191L;<z>
=1019L;<z>
return data;<z>
{<z>
length=entry.getSize();<z>
);<z>
+ hdr.length];<z>
bufWithHeader,0,hdr.length);<z>
hdr.length,length);<z>
),classCatalog,getClassLoader());<z>
return jin.readObject();<z>
{<z>
(e);<z>
( ClassNotFoundException e) {<z>
RuntimeExceptionWrapper(e);<z>
private void update(V value) {<z>
value)) {<z>
;<z>
{<z>
value);<z>
parseSlotListIndex(String keyword) throws IOException {<z>
0) {<z>
"Duplicate slotListIndex definition");<z>
>= 0) {<z>
"Only one of slot and slotListIndex must be specified");<z>
();<z>
= parseWord();<z>
slotListIndex = decodeNumber(slotString);<z>
"slotListIndex: " + slotListIndex);<z>
) {<z>
(!builder.compareToken(OPEN_BLOCK)) {<z>
false;<z>
.Marker serviceMethodBlockMarker = builder.mark();<z>
);<z>
)) {<z>
{<z>
(OptionDeclaration.parseSeparateOption(builder)) {<z>
} else {<z>
"unexpected.token");<z>
;<z>
serviceMethodBlockMarker.done(SERVICE_METHOD_BLOCK);<z>
;<z>
void publish(final Element cruisecontrolLog) throws CruiseControlException {<z>
XMLLogHelper helper = new XMLLogHelper(cruisecontrolLog);<z>
.isBuildFix()) {<z>
client.login(userKey, APPLICATION_KEY);<z>
debug("Got session " + session);<z>
);<z>
String>();<z>
);<z>
.put("tags", issueTag);<z>
session, projectId, searchArgs);<z>
(bugs.size() == 1) {<z>
;<z>
("issue_id");<z>
("Found bug with id" + bugId);<z>
, bugId, "Build fixed see: "<z>
()), "status::closed," + issueTag);<z>
else {<z>
warn("Did not find exactly one match, found "<z>
+ " bugs.");<z>
.wasPreviousBuildSuccessful()<z>
{<z>
, APPLICATION_KEY);<z>
LOG.debug("Got session " + session);<z>
, projectName);<z>
String issueDescription = "Build failed see: "<z>
(helper.getLogFileName());<z>
addIssue(session, projectId, issueSubject, issueDescription,<z>
+ issueTag, issuePrivate);<z>
e) {<z>
.error("Problem during xmlrpc call", e);<z>
;<z>
(Integer i){<z>
maxSize ){<z>
add(i);<z>
size ++;<z>
;<z>
false;<z>
} else {<z>
.getFirst() ) / maxSize;<z>
;<z>
(i);<z>
return true;<z>
BSPTree<S> copySelf() {<z>
(cut == null) {<z>
BSPTree<S>(attribute);<z>
(),<z>
;<z>
public void auth_contacts(){<z>
;<z>
cb = new AjaxCallback<XmlDom>();<z>
).weakHandler(this, "contactsCb");<z>
AQuery.AUTH_CONTACTS, AQuery.ACTIVE_ACCOUNT);<z>
id.progress).ajax(cb);<z>
handle) throws SQLException,<z>
"collection");<z>
;<z>
.createDSO();<z>
) ?<z>
HandleManager.createHandle(context, c) :<z>
, handle);<z>
} catch(IllegalStateException ie) {<z>
c!=null) {<z>
delete();<z>
{ }<z>
ie;<z>
, 0);<z>
= ResourcePolicy.create(context);<z>
;<z>
READ);<z>
myPolicy.setGroup(anonymousGroup);<z>
();<z>
context);<z>
c);<z>
.setAction(Constants.DEFAULT_ITEM_READ);<z>
myPolicy.setGroup(anonymousGroup);<z>
.update();<z>
ResourcePolicy.create(context);<z>
.setResource(c);<z>
.setAction(Constants.DEFAULT_BITSTREAM_READ);<z>
setGroup(anonymousGroup);<z>
myPolicy.update();<z>
));<z>
"create_collection",<z>
"collection_id=" + row.getIntColumn("collection_id"))<z>
",handle=" + c.handle);<z>
c;<z>
addVariablesToContext(Map map) {<z>
null) {<z>
entrySet().iterator();<z>
hasNext()) {<z>
Entry) iterator.next();<z>
.getValue()) );<z>
() {<z>
ArrayList<OfflinePlayer>();<z>
Set<Entry> entries = getEntries();<z>
= null;<z>
{<z>
getOfflinePlayers();<z>
else {<z>
;<z>
offplayers) {<z>
, entries)) {<z>
players.add(p);<z>
;<z>
evaluate( Reader templateReader ) {<z>
StringWriter out = new StringWriter( );<z>
context, out, logName, templateReader);<z>
);<z>
);<z>
{<z>
;<z>
;<z>
{<z>
(roundingMode, "RoundingMode must not be null");<z>
{<z>
this;<z>
;<z>
(currency, newAmount);<z>
{<z>
= warning.indexOf('\n');<z>
lineLength > 0) {<z>
, lineLength);<z>
;<z>
void addInElement(Id id, GeocognitionElement newElement) {<z>
(root, id) != null) {<z>
new IllegalArgumentException(<z>
);<z>
getLast());<z>
GeocognitionElement parent = createNecessaryNodes(id);<z>
.addElement(newElement);<z>
int crit1, int crit2) {<z>
= shortStepsNear;<z>
crit1 = crit2; crit2 = t; }<z>
;<z>
x <= crit2);<z>
+= 1;<z>
(x > D) {<z>
(x < crit1-D) {<z>
1) >> downShift;<z>
D) x = crit1-D;<z>
x < crit2-D) {<z>
1) >> downShift;<z>
crit2-D) x = crit2-D;<z>
x;<z>
) {<z>
(!renderOptions.isShowGrid());<z>
));<z>
, Object data) {<z>
(node, data);<z>
hasElse()) {<z>
;<z>
return lineCount;<z>
void setData(MimeBodyPart data, DataHistoryItem historyItem) {<z>
this.data = data;<z>
) {<z>
(data.getContentType());<z>
} catch (MessagingException e) {<z>
setContentType(null);<z>
"Content-Disposition", null));<z>
MessagingException e) {<z>
);<z>
historyItem != null) {<z>
).add(historyItem);<z>
> abbrs, String part) {<z>
= new Vector<String>();<z>
part) != null)<z>
);<z>
: abbrs.keySet())<z>
)<z>
" : " + abbrs.get(t));<z>
() == 1)<z>
));<z>
;<z>
boolean notFinalizedSize, ObjectContainer container, ClientContext context) {<z>
);<z>
e) {<z>
, container, context);<z>
FetchException e) {<z>
(notFinalizedSize)<z>
setNotFinalizedSize();<z>
;<z>
ArchiveFailureException e) {<z>
false, container, context);<z>
} catch (ArchiveRestartException e) {<z>
context);<z>
() throws NamingException<z>
();<z>
Exception e )<z>
.getMessage() );<z>
(BytesRef value) {<z>
(!(fieldsData instanceof BytesRef)) {<z>
getSimpleName() + " to BytesRef");<z>
()) {<z>
);<z>
;<z>
AbstractInsnNode insn) {<z>
tree.AbstractInsnNode i = first;<z>
insn) {<z>
i.next;<z>
!= null;<z>
public void println( String s ) throws IOException<z>
at_line_start )<z>
printIndent();<z>
;<z>
( EOL );<z>
= true;<z>
<LanguageVO> languageVOList, InfoGluePrincipal principal) throws Exception<z>
(contentVO.getIsBranch())<z>
(), null, false);<z>
(final ContentVO child : childs)<z>
, principal);<z>
final LanguageVO languageVO : languageVOList)<z>
languageVO, principal);<z>
buildSolrQueryString(SeriesQuery query, boolean forEdit) {<z>
().getId();<z>
);<z>
(), orgId));<z>
));<z>
.FULLTEXT_KEY, query.getText());<z>
query.getCreator());<z>
getContributor());<z>
.LANGUAGE_KEY, query.getLanguage());<z>
));<z>
));<z>
.ABSTRACT_KEY, query.getAbstract());<z>
, query.getDescription());<z>
PUBLISHER_KEY, query.getPublisher());<z>
getRightsHolder());<z>
));<z>
getCreatedTo());<z>
(sb, SolrFields.ORGANIZATION, orgId);<z>
(sb, forEdit);<z>
.toString();<z>
) throws Exception<z>
();<z>
!= null)<z>
m_httpServiceReg.unregister();<z>
m_server.getState() == Server.ACTIVE_STATE)<z>
();<z>
xaResourceRecordWrappingPluginClassName)<z>
(this)<z>
)<z>
= null;<z>
xaResourceRecordWrappingPluginClassName.equals(this.xaResourceRecordWrappingPluginClassName))<z>
= null;<z>
xaResourceRecordWrappingPluginClassName;<z>
() {<z>
new XQuery(<z>
;<z>
(query);<z>
res;<z>
(true)<z>
{<z>
;<z>
mark();<z>
;<z>
catch (RecognitionException re) {<z>
err.println("impossible: "+re);<z>
!state.failed;<z>
);<z>
backtracking--;<z>
false;<z>
;<z>
void setZOrder (Control control, boolean above) {<z>
{<z>
OS.BringToFront (shellHandle);<z>
else {<z>
OS.GetControlOwner (control.handle);<z>
;<z>
ASN1Sequence seq)<z>
Enumeration seqEnum = seq.getObjects();<z>
.hasMoreElements())<z>
.nextElement());<z>
seq;<z>
)<z>
= FacesContext.getCurrentInstance();<z>
ApplicationFactory factory = (ApplicationFactory) FactoryFinder.<z>
.APPLICATION_FACTORY);<z>
= factory.getApplication();<z>
Serializable)<z>
(<z>
, beanName);<z>
;<z>
public Response.ResponseBuilder variant(Variant variant)<z>
) type(variant.getMediaType());<z>
(variant.getLanguage());<z>
, variant.getEncoding());<z>
;<z>
protected void processElement(IJavaElement element) throws JavaModelException {<z>
element.getElementType()) {<z>
.CLASS_FILE :<z>
.COMPILATION_UNIT :<z>
.KEEP_HISTORY);<z>
:<z>
IPackageFragment) element);<z>
;<z>
element instanceof IOpenable) {<z>
)element).close();<z>
{<z>
] rowList = mTabs.getPossibleRows();<z>
if (rowList.length != 0) {<z>
(int aRowList : rowList) {<z>
) mTabs.getIndexedEntry(aRowList);<z>
;<z>
.setNeedsUpdate();<z>
{<z>
false);<z>
.setNeedsUpdate();<z>
msgContext) {<z>
;<z>
currentMessageContext.get();<z>
);<z>
tc.oldClassLoader = contextClassLoader;<z>
;<z>
getParameterValue(Constants.SERVICE_TCCL);<z>
null) {<z>
toLowerCase();<z>
{<z>
AccessController.doPrivileged(new PrivilegedAction() {<z>
{<z>
(new URL[]{},<z>
new ClassLoader[]{<z>
.getAxisService().getClassLoader(),<z>
});<z>
;<z>
AccessController.doPrivileged(<z>
{<z>
run() {<z>
.setContextClassLoader(<z>
;<z>
;<z>
)) {<z>
doPrivileged(<z>
{<z>
run() {<z>
.setContextClassLoader(<z>
).getClassLoader()<z>
null;<z>
;<z>
;<z>
private MessageContext getResponseSOAPBody(OMElement requestElement)<z>
{<z>
;<z>
FileRepositoryServiceClient<z>
();<z>
();<z>
CRCLoaderUtil.getInstance()<z>
();<z>
(frOperationName == null) {<z>
(<z>
"File Repository operation property missing from the property file");<z>
.debug("File Repository operation property value ["<z>
+ "]");<z>
options.setAction(frOperationName);<z>
SOAP_ENVELOPE_NAMESPACE_URI);<z>
getInstance().getFileRepositoryTimeout();<z>
"File Repository timeout property value [" + timeout + "]");<z>
);<z>
Configuration.CACHE_ATTACHMENTS,<z>
.VALUE_TRUE);<z>
.setProperty(Constants.Configuration.ATTACHMENT_TEMP_DIR,<z>
getFileRepositoryTempSpace());<z>
.Configuration.FILE_SIZE_THRESHOLD,<z>
.getFileRepositoryThreshold());<z>
);<z>
setOptions(options);<z>
mepClient = serviceClient<z>
createClient(ServiceClient.ANON_OUT_IN_OP);<z>
mc = new MessageContext();<z>
sfac = OMAbstractFactory.getSOAP11Factory();<z>
SOAPEnvelope env = sfac.getDefaultEnvelope();<z>
.addChild(requestElement);<z>
;<z>
mc.setDoingSwA(true);<z>
mc);<z>
;<z>
= mepClient<z>
MESSAGE_LABEL_IN_VALUE);<z>
.debug("File Repository response envelope: "<z>
+ "]");<z>
).getBody()<z>
getFirstOMChild();<z>
);<z>
(frResponse);<z>
resultStatusType.getStatus() != null<z>
getStatus().getType() != null<z>
.getType().equalsIgnoreCase(<z>
"error")) {<z>
getValue();<z>
throw new I2B2Exception(<z>
);<z>
);<z>
operationContext<z>
.MESSAGE_LABEL_IN_VALUE);<z>
.debug("File Repository response has ["<z>
outMessageContext.getAttachmentMap()<z>
().length<z>
;<z>
(AxisFault axisFault) {<z>
new I2B2Exception(<z>
getMessage() + "]");<z>
JAXBUtilException jaxbUtilEx) {<z>
new I2B2Exception(<z>
jaxbUtilEx.getMessage() + "]");<z>
catch (Throwable t) {<z>
();<z>
(<z>
+ t.getMessage() + "]");<z>
;<z>
static void set(Injector injector) {<z>
(InjectorSingleton.injector == null) {<z>
InjectorSingleton.injector = injector;<z>
} else {<z>
RuntimeException("once set, the injector cannot be changed.");<z>
private void initImports() {<z>
null) {<z>
String, Object>();<z>
final int hard)<z>
;<z>
this.ramHardLimitInMb = hard;<z>
this;<z>
{<z>
{<z>
file.findElementAt(offset);<z>
if (element instanceof PsiWhiteSpace) {<z>
false;<z>
!= null && isInContext(element);<z>
;<z>
{<z>
(taskInstance);<z>
taskInstance.getActorId());<z>
taskInstance.getActorId());<z>
public List getPropertyBindings( )<z>
( );<z>
= new ArrayList<PropertyBinding>( );<z>
DesignElement element = getElement( );<z>
( ) != null )<z>
= element.getRoot( )<z>
element );<z>
resultList.addAll( filterPropertyBindingName( propBindings,<z>
nameList ) );<z>
element.isVirtualElement( ) )<z>
= element.getVirtualParent( );<z>
( );<z>
return resultList;<z>
setDimensionAndSpawnPlayer(int par1)<z>
this.theWorld.setSpawnLocation();<z>
.theWorld.removeAllEntities();<z>
;<z>
null)<z>
.entityId;<z>
(this.thePlayer);<z>
= null;<z>
func_78754_a(this.theWorld);<z>
par1;<z>
this.thePlayer;<z>
();<z>
thePlayer);<z>
flipPlayer(this.thePlayer);<z>
gameSettings);<z>
;<z>
);<z>
this.currentScreen instanceof GuiGameOver)<z>
this.displayGuiScreen((GuiScreen)null);<z>
(Menu menu) {<z>
(R.id.view);<z>
if (mObservation.id == null) {<z>
setVisible(false);<z>
super.onPrepareOptionsMenu(menu);<z>
type, String message) {<z>
;<z>
;<z>
;<z>
> container) {<z>
() {<z>
paused)<z>
false;<z>
);<z>
protected Change performDelete() {<z>
})) {<z>
filter, null, null, ADD);<z>
null;<z>
version) {<z>
));<z>
(SQLException e) {<z>
, e);<z>
s, String delimiter) {<z>
();<z>
= s.iterator();<z>
(iter.hasNext()) {<z>
();<z>
) {<z>
('\'');<z>
buffer.append(nxt);<z>
) {<z>
append('\'');<z>
.hasNext()) {<z>
;<z>
;<z>
{<z>
;<z>
;<z>
fPreferenceStore = store;<z>
, String repository, String branchName) {<z>
startsWith("*/")) {<z>
);<z>
if (branchName.contains("*")) {<z>
null;<z>
= build.getAction(ParametersAction.class);<z>
!= null) {<z>
= parameters.substitute(build, branchName);<z>
return branchName;<z>
boolean equals(Object obj)<z>
)<z>
;<z>
())<z>
false;<z>
= (MappingSet) obj;<z>
.equals(other.name))<z>
false;<z>
)<z>
return false;<z>
.equals(obj);<z>
) {<z>
= code[ip++];<z>
if (s >= range) return false;<z>
.length(bytes, s, end);<z>
> range) return false;<z>
int ss = s;<z>
;<z>
(bytes, ss, s);<z>
, ip, c)) return false;<z>
;<z>
return true;<z>
name )<z>
);<z>
) != null ){<z>
);<z>
getSize();<z>
);<z>
protected final int getDcsByte() {<z>
this.messageEncoding == SmsMessageEncoding.EncCustom) {<z>
) throw new IllegalSmsEncodingException("TP-DCS (Data-Coding-Scheme) must not be zero for custom encoding.");<z>
.dataCodingScheme;<z>
} else {<z>
TpduUtils.getDcsByte(this.messageEncoding);<z>
GATKSAMRecord read, ReadMetaDataTracker metaDataTracker) {<z>
;<z>
;<z>
= true;<z>
alignments = aligner.getAllAlignments(bases);<z>
]> alignmentIterator = alignments.iterator();<z>
(!alignmentIterator.hasNext()) {<z>
.getReadUnmappedFlag();<z>
alignmentsOfBestQuality = alignmentIterator.next();<z>
Alignment alignment: alignmentsOfBestQuality) {<z>
() == read.getReferenceIndex());<z>
() == read.getAlignmentStart());<z>
) == read.getReadNegativeStrandFlag());<z>
(read.getCigar()));<z>
getMappingQuality());<z>
matches) break;<z>
!matches) {<z>
);<z>
getReadName()));<z>
);<z>
);<z>
, read.getReadNegativeStrandFlag()));<z>
()));<z>
" Mapping quality: %s%n", read.getMappingQuality()));<z>
) {<z>
length; i++) {<z>
;<z>
[i].getContigIndex()));<z>
.getAlignmentStart()));<z>
i].isNegativeStrand()));<z>
);<z>
));<z>
.getReadName()));<z>
return 1;<z>
) {<z>
) {<z>
MODEL_EXPRESSION__BODY:<z>
;<z>
:<z>
getBefore();<z>
CstPackage.MODEL_EXPRESSION__EACH:<z>
;<z>
:<z>
;<z>
;<z>
(Composite parent) {<z>
;<z>
SWT.BORDER);<z>
questionIdData = new GridData(GridData.FILL_HORIZONTAL);<z>
setLayoutData(questionIdData);<z>
(new FocusAdapter() {<z>
@SuppressWarnings("synthetic-access")<z>
public void focusLost(FocusEvent e) {<z>
!= null)<z>
));<z>
;<z>
) {<z>
"synthetic-access")<z>
e) {<z>
{<z>
)<z>
questionId.getText()));<z>
);<z>
AmlViewsRepository.EvidenceExhibit.Properties.questionId);<z>
(questionId, "eef::Text");<z>
AmlViewsRepository.SWT_KIND), null);<z>
return parent;<z>
tryagain) {<z>
== null) {<z>
getContext().getExperimentContext();<z>
) {<z>
(tryagain) {<z>
new Runnable() {<z>
run() {<z>
;<z>
);<z>
= ExplorerContext.getCurContext(expContext);<z>
();<z>
(maincontext.getAbsDataAreaCoord() == null) {<z>
"Got no main coordinate - but must still clear masks!");<z>
maincontext.addListener(new ContextChangeAdapter() {<z>
void maskAdded(BitMask mask) {<z>
(mask);<z>
);<z>
public void maskChanged(BitMask mask) {<z>
(mask);<z>
WellCoordinate coord) {<z>
;<z>
();<z>
public void masksChanged() {<z>
("masks changed: ");<z>
();<z>
});<z>
);<z>
, String variables) {<z>
this.templateName = templateName;<z>
implementationName;<z>
;<z>
version) throws IOException {<z>
isEmpty()) {<z>
;<z>
!= ObjectStreamConstants.PROTOCOL_VERSION_1<z>
{<z>
version));<z>
= version;<z>
Object object) {<z>
itemPropertyDescriptors == null) {<z>
;<z>
;<z>
addTargetMetaFeaturePropertyDescriptor(object);<z>
return itemPropertyDescriptors;<z>
, Object context, boolean select) {<z>
context instanceof IMember) {<z>
{<z>
);<z>
resourceServiceProviderRegistry<z>
.getResourceServiceProvider(sourceResourceURI);<z>
null) {<z>
);<z>
(opener != null) {<z>
(IMember) context, select);<z>
context, true, true);<z>
Exception exc) {<z>
;<z>
uri, select);<z>
String id) {<z>
articleDataProvider);<z>
findAsInteger(ArticleConstants.CONF_ARTICLES_PER_PAGE));<z>
(ReuseIfModelsEqualStrategy.getInstance());<z>
synchronized void registerMBeans(MBeanServer mbeanServer) {<z>
BlueprintState(bundleContext), BlueprintStateMBean.class);<z>
NotCompliantMBeanException e) {<z>
);<z>
debug("Registering bundle state monitor with MBeanServer: {} with name: {}",<z>
, blueprintStateName);<z>
mbeanServer.registerMBean(blueprintState, blueprintStateName);<z>
} catch (InstanceAlreadyExistsException e) {<z>
("Cannot register BlueprintStateMBean");<z>
) {<z>
"Cannot register BlueprintStateMBean", e);<z>
e) {<z>
e);<z>
;<z>
(NotCompliantMBeanException e) {<z>
e);<z>
.debug("Registering bundle metadata monitor with MBeanServer: {} with name: {}",<z>
);<z>
mbeanServer.registerMBean(blueprintMetadata, blueprintMetadataName);<z>
{<z>
;<z>
{<z>
("Cannot register BlueprintMetadataMBean", e);<z>
catch (NotCompliantMBeanException e) {<z>
, e);<z>
);<z>
protected CommandResult reorientTarget() throws ExecutionException {<z>
remove(getOldTarget());<z>
getNewTarget());<z>
.newOKCommandResult(referenceOwner);<z>
Path finalizedPath) {<z>
.endsWith(CHECKPOINT_FINALIZED_POSTFIX)) {<z>
InvalidParameterException(<z>
"getCheckpoint: " + finalizedPath + "Doesn't end in " +<z>
CHECKPOINT_FINALIZED_POSTFIX);<z>
checkpointString =<z>
replace(CHECKPOINT_FINALIZED_POSTFIX, "");<z>
(checkpointString);<z>
(String label, Instrument instrument,<z>
, double lot) {<z>
= label;<z>
this.instrument = instrument;<z>
command;<z>
.lot = lot;<z>
itemTemplate) {<z>
CreatureWithDistance>();<z>
();<z>
StartMovingListener();<z>
;<z>
this.skillLevel = skillLvl;<z>
= skillTemplate.getLvl();<z>
skillTemplate;<z>
.effector = effector;<z>
this.itemTemplate = itemTemplate;<z>
(itemTemplate != null)<z>
SkillType.ITEM;<z>
if (skillTemplate.isPassive())<z>
PASSIVE;<z>
(skillTemplate.isProvoked())<z>
skillType = SkillType.PROVOKED;<z>
{<z>
writeExternal(out);<z>
.writeUTF(method);<z>
.length);<z>
++i)<z>
[i]);<z>
isComplete() {<z>
!=null;<z>
return result;<z>
{<z>
encryption.isStartTLS()) {<z>
return "secure";<z>
;<z>
public void setParameters(Parameters params) {<z>
;<z>
);<z>
block();<z>
] joiningMembers) {<z>
"joining members must not be null";<z>
.joiningMembers = joiningMembers;<z>
Node node : joiningMembers) {<z>
nextMembership.add(node);<z>
pce) {<z>
equals(RankingUIModel.CURRENT_ELEMENT_TYPE)) {<z>
;<z>
(RankingUIModel.CURRENT_TRANSFORMER)<z>
.equals(RankingUIModel.CURRENT_ELEMENT_TYPE)) {<z>
refreshTransformers();<z>
().equalsIgnoreCase(RankingUIModel.START_AUTO_TRANSFORMER)<z>
STOP_AUTO_TRANSFORMER)) {<z>
();<z>
() {<z>
serializers = super.createArtifactSerializersMap();<z>
new DummyPOSDictionarySerializer());<z>
;<z>
public void stop(BundleContext ctxt) throws Exception {<z>
;<z>
containerManagerTracker != null) {<z>
.close();<z>
containerManagerTracker = null;<z>
if (syncStrategyFactoryServiceTracker != null) {<z>
syncStrategyFactoryServiceTracker.close();<z>
= null;<z>
null;<z>
= null;<z>
Class c) {<z>
( c );<z>
{<z>
return co;<z>
( c.isArray() ) {<z>
c.getComponentType();<z>
new ArrayCoercion(c.getComponentType());<z>
} else {<z>
(c);<z>
, co );<z>
co;<z>
, PermissionStatus permissions,<z>
)<z>
{<z>
src = normalizePath(src);<z>
INode.getPathNames(src);<z>
INode.getPathComponents(names);<z>
.length];<z>
{<z>
getExistingPathINodes(components, inodes);<z>
;<z>
int i = 1;<z>
[i] != null; i++) {<z>
.SEPARATOR + names[i]);<z>
{<z>
("Parent path is not a directory: "<z>
);<z>
i < inodes.length; i++) {<z>
]);<z>
.toString();<z>
permissions,<z>
, now);<z>
(inodes[i] == null) {<z>
false;<z>
!= null)<z>
().numFilesCreated.inc();<z>
cur, inodes[i]);<z>
(<z>
);<z>
;<z>
, char c) {<z>
index);<z>
, c);<z>
this;<z>
Context context) {<z>
XmlTag.class);<z>
if (tag == null) {<z>
final XmlTag parentTag = tag.getParentTag();<z>
parentTag == null) {<z>
())) {<z>
);<z>
false;<z>
(JavaType valueType, boolean staticTyping, EnumValues keyEnums,<z>
, BeanProperty property)<z>
);<z>
getInstance()<z>
)<z>
MoteSensorManager();<z>
"MoteSensorManager.getInstance";<z>
, "created New");<z>
return INSTANCE;<z>
Exception{<z>
weightsOut.println("# This file lists the weights and weighting functions to be used for\n"<z>
"13 : 0.5 linear");<z>
;<z>
();<z>
int i) throws SQLException {<z>
(<z>
.getInt("id"),<z>
getString("name"),<z>
),<z>
equals(""),<z>
),<z>
resultSet.getFloat("rating"),<z>
,<z>
, boolean myTurn)<z>
;<z>
.visit();<z>
)) {<z>
(myTurn), !myTurn);<z>
else {<z>
node.expand();<z>
)) {<z>
= node.getRandomChild();<z>
.visit();<z>
returnStatus = simulateFrom(node);<z>
{<z>
1);<z>
(returnStatus)) {<z>
);<z>
returnStatus;<z>
String signature, String[] exceptions) {<z>
) > 0) {<z>
(access, name, desc));<z>
, exceptions);<z>
(RageMod Plugin){<z>
CompassCommands(plugin);<z>
;<z>
(plugin);<z>
new Commands(plugin);<z>
= new NPCTownCommands(plugin);<z>
PermitCommands(plugin);<z>
plugin);<z>
Context ctx){<z>
);<z>
) throw new IllegalStateException("There is no Referrals category!");<z>
;<z>
key, String value) {<z>
key)) {<z>
key, value);<z>
boolean onTouchEvent(MotionEvent event) {<z>
MotionEvent.ACTION_DOWN) {<z>
());<z>
;<z>
return super.onTouchEvent(event);<z>
triple )<z>
) ;<z>
public Builder addDetourStopIds(<z>
Builder builderForValue) {<z>
(detourStopIdsBuilder_ == null) {<z>
ensureDetourStopIdsIsMutable();<z>
());<z>
;<z>
{<z>
index, builderForValue.build());<z>
return this;<z>
, FileInformationBlock fib )<z>
.getFcSttbfbkmk();<z>
fib.getLcbSttbfbkmk();<z>
!= 0 )<z>
SttbUtils<z>
readSttbfBkmk( tableStream, namesStart ) ) );<z>
int firstDescriptorsStart = fib.getFcPlcfbkf();<z>
();<z>
0 && firstDescriptorsLength != 0 )<z>
descriptorsFirst = new PlexOfCps( tableStream,<z>
firstDescriptorsStart, firstDescriptorsLength,<z>
getSize() );<z>
fib.getFcPlcfbkl();<z>
= fib.getLcbPlcfbkl();<z>
!= 0 && limDescriptorsLength != 0 )<z>
PlexOfCps( tableStream, limDescriptorsStart,<z>
, 0 );<z>
) {<z>
exceptionTypes == null)<z>
;<z>
clone();<z>
equals(final Object other)<z>
instanceof SessionXAGetInDoubtXidsResponseMessage == false)<z>
return false;<z>
= (SessionXAGetInDoubtXidsResponseMessage)other;<z>
super.equals(other))<z>
.xids.size())<z>
++)<z>
)))<z>
return false;<z>
;<z>
;<z>
BigDecimal quantity, Integer language, Integer userId,<z>
Record> records) throws ItemDecimalsException {<z>
=<z>
>(entityId,<z>
;<z>
);<z>
!= null) {<z>
entityId, currencyId, order, records);<z>
myTask = taskManager.getNextClass();<z>
e) {<z>
class, e);<z>
{<z>
.getCause() instanceof ItemDecimalsException) {<z>
;<z>
} else {<z>
, e);<z>
{<z>
);<z>
ContentActionConstants.SESSION_PARAM_NAME_CURRENT_CONTENT);<z>
this.setContentStatus(Content.STATUS_DRAFT);<z>
(), Group.FREE_GROUP_NAME)) {<z>
Group.FREE_GROUP_NAME);<z>
(Throwable t) {<z>
, this, "openNew");<z>
FAILURE;<z>
return SUCCESS;<z>
(Event event)<z>
getShiftKey()) {<z>
{<z>
isEnabled(Command.INSERT_HTML)) {<z>
.INSERT_HTML, "&nbsp;&nbsp;&nbsp;&nbsp;");<z>
();<z>
boolean playImpl() {<z>
impl.play(looping);<z>
;<z>
new EventHandler<Event>() {<z>
) {<z>
;<z>
;<z>
);<z>
true;<z>
boolean saveNationList() {<z>
.fileSeparator() + "nations.txt"));<z>
)<z>
) + newLine);<z>
;<z>
;<z>
(Exception e) {<z>
.out.println("[Towny] Saving Error: Exception while saving nation list file");<z>
();<z>
return false;<z>
throws Exception {<z>
event.getSource() ;<z>
);<z>
class);<z>
.getRequestContext().getRequestParameter(OBJECTID) ;<z>
(";");<z>
order = "";<z>
) order = Preference.BLUE_DOWN_ARROW;<z>
;<z>
order);<z>
setTypeSort(array[1]);<z>
= uiExplorer.getPreference();<z>
(array.length == 2) {<z>
);<z>
].trim());<z>
else {<z>
event) ;<z>
) {<z>
(LOG.isErrorEnabled()) {<z>
("Repository cannot be found");<z>
addMessage(new ApplicationMessage("UIDocumentInfo.msg.repository-error", null,<z>
ApplicationMessage.WARNING)) ;<z>
} catch (Exception e) {<z>
(uiApp, e);<z>
) {<z>
.PARAMETER);<z>
type = type();<z>
token() == ELLIPSIS) {<z>
;<z>
.VARARGS;<z>
;<z>
S.nextToken();<z>
);<z>
] buffers,<z>
)<z>
0;<z>
;i++){<z>
);<z>
false;<z>
write( buffers, position );<z>
);<z>
write_ok = true;<z>
e ){<z>
);<z>
{<z>
if ( write_ok ){<z>
;i++){<z>
);<z>
{<z>
uiBinder.createAndBindUi(this));<z>
= new TextField<String>();<z>
));<z>
titleField);<z>
.setAutoSizeMode(AutoSizeMode.HEIGHT);<z>
.setConstrain(true);<z>
setAlignment("cl");<z>
);<z>
);<z>
true);<z>
;<z>
public ISchemaAttribute getAttribute(String name) {<z>
type instanceof ISchemaComplexType) {<z>
).getAttribute(name);<z>
;<z>
user, EmailSubject subject,<z>
DocumentType documentType) {<z>
)) {<z>
(getEmailFrom(documentType),<z>
.getEmailAddressUnmasked()),<z>
;<z>
{<z>
sendEmail(<z>
getEmailFrom(documentType),<z>
().getParameterValueAsString(<z>
KEW_NAMESPACE,<z>
.DetailTypes.ACTION_LIST_DETAIL_TYPE,<z>
ACTIONLIST_EMAIL_TEST_ADDRESS)),<z>
false);<z>
{<z>
);<z>
final private boolean jj_3R_370() {<z>
(jj_scan_token(COMMA)) return true;<z>
()) return true;<z>
return false;<z>
toInt(byte b) {<z>
0) {<z>
b;<z>
return b;<z>
StringWriter writer)<z>
writer);<z>
);<z>
namespaceId, Block block, boolean keepLength,<z>
boolean closeFile) throws IOException {<z>
) {<z>
();<z>
WILDCARD_STAMP);<z>
(tmp) != null) {<z>
+<z>
;<z>
(msg);<z>
, block);<z>
int errorCount = 0;<z>
int rbwCount = 0;<z>
int rwrCount = 0;<z>
ArrayList<BlockRecord>();<z>
<InterDatanodeProtocol> datanodeProxies =<z>
;<z>
id : datanodeids) {<z>
;<z>
equals(id)) {<z>
info("Skipping IDNPP creation for local id " + id);<z>
= this;<z>
} else {<z>
" (dnReg="<z>
namespaceId) + ")");<z>
.createInterDataNodeProtocolProxy(<z>
getConf(), socketTimeout);<z>
);<z>
startBlockRecovery(namespaceId, block);<z>
{<z>
+ " on datanode "<z>
id);<z>
{<z>
)<z>
+ id + " (needed block=" +<z>
block + ")");<z>
);<z>
()) {<z>
;<z>
{<z>
rbwCount++;<z>
e) {<z>
++errorCount;<z>
.LOG.warn(<z>
"Failed to getBlockMetaDataInfo for block (=" + block<z>
e);<z>
(rbwCount == 0);<z>
<BlockRecord>();<z>
;<z>
BlockRecord record : blockRecords) {<z>
record.info;<z>
;<z>
()) {<z>
record + " since it was recovered on "<z>
;<z>
keepLength) {<z>
() == block.getNumBytes()) {<z>
);<z>
{<z>
record);<z>
< minlength) {<z>
getBlock().getNumBytes();<z>
isEmpty() && errorCount > 0) {<z>
(datanodeProxies);<z>
("All datanodes failed: block=" + block<z>
", datanodeids=" + Arrays.asList(datanodeids));<z>
if (!keepLength) {<z>
minlength);<z>
, block, syncList, closeFile, datanodeProxies);<z>
{<z>
) {<z>
remove(block);<z>
(StringWithPlaceholder string, AVList attributeValues)<z>
) == null)<z>
null;<z>
;<z>
return string.replacePlaceholder(stringValue);<z>
final IAction action) {<z>
setToolTipText(SubstepsFeatureMessages.SubstepsFeatureTestRunnerViewPart_test_run_history);<z>
imageDescriptorFor(SubstepsControlsIcon.HistoryListDisabled));<z>
SubstepsControlsIcon.HistoryListEnabled));<z>
iconProvider.imageDescriptorFor(SubstepsControlsIcon.HistoryListEnabled));<z>
public final void rule__NullElement__Group__3() throws RecognitionException {<z>
();<z>
FOLLOW_rule__NullElement__Group__3__Impl_in_rule__NullElement__Group__34672);<z>
;<z>
state._fsp--;<z>
(state.failed) return ;<z>
catch (RecognitionException re) {<z>
;<z>
;<z>
;<z>
private boolean resolveFromCompileUnit(ClassNode type) {<z>
compileUnit = currentClass.getCompileUnit();<z>
compileUnit == null) return false;<z>
.getClass(type.getName());<z>
) {<z>
cuClass);<z>
true;<z>
return false;<z>
) {<z>
event);<z>
getName())) {<z>
context = event.getContext();<z>
;<z>
[0];<z>
repo = doc.getRepositoryName();<z>
);<z>
catch (Throwable e) {<z>
ClientRuntimeException(<z>
);<z>
io.IOException {<z>
if (actor__is_set) {<z>
"actor", actor);<z>
(mustUnderstand__is_set) {<z>
"1" : "0";<z>
getNamespace(), "mustUnderstand", val);<z>
Element> emptyOrSingleton(<z>
("element")<z>
"ceylon.language.Nothing|Element")<z>
Element element) {<z>
return element==null ?<z>
.getEmpty$() :<z>
;<z>
)<z>
add(entry);<z>
- 1);<z>
) {<z>
super.dispose();<z>
!= null) {<z>
().removePartListener(<z>
);<z>
cachedWorkbenchWindow = null;<z>
public void setPressed(boolean b) {<z>
== b) || !isEnabled()) {<z>
isArmed()) {<z>
isButtonSelected());<z>
(b) {<z>
;<z>
&= ~PRESSED;<z>
();<z>
&& isArmed()) {<z>
= 0;<z>
getCurrentEvent();<z>
(currentEvent instanceof InputEvent) {<z>
();<z>
if (currentEvent instanceof ActionEvent) {<z>
getModifiers();<z>
.ACTION_PERFORMED,<z>
,<z>
.getMostRecentEventTime(),<z>
;<z>
final List<ColumnInfo> columnsForTable) {<z>
;<z>
();<z>
ColumnInfo columnInfo : columnsForTable) {<z>
;<z>
;<z>
currentCSVSchema);<z>
true;<z>
) {<z>
+ "sendQueuedSearchPacket()");<z>
registeredForSearchSelects = false;<z>
) {<z>
()) {<z>
("not holding queue manager lock!!!");<z>
= false;<z>
boolean stayRegistered = false;<z>
pruneExpiredSearches();<z>
if (queueFull()) {<z>
= false;<z>
) {<z>
(pruned == 0) {<z>
Debug.out(getDescription()<z>
+ "sendQueuedSearchPacket() called, but noting to forward!");<z>
= false;<z>
{<z>
FINEST)) {<z>
;<z>
getSearchMessage();<z>
(search, true);<z>
;<z>
() != null) {<z>
;<z>
} else {<z>
= false;<z>
) {<z>
();<z>
.FINEST)) {<z>
finest(getDescription() + "sendQueuedSearchPacket(), sent=" + packetSent<z>
);<z>
return packetSent;<z>
] names) {<z>
<Town>();<z>
names)<z>
.add(getTown(name));<z>
{<z>
matches;<z>
req) {<z>
== null) {<z>
.put(val);<z>
request.put(o);<z>
e) {<z>
;<z>
if (source instanceof Button) {<z>
;<z>
if (button.getSelection())<z>
);<z>
Obj car, Obj isd) {<z>
y, w, h));<z>
(BorderFactory.createLoweredBevelBorder());<z>
);<z>
(alShape);<z>
);<z>
shp, button);<z>
put(shp, car);<z>
put(shp, isd);<z>
;<z>
) {<z>
"freezed");<z>
beforeFind();<z>
();<z>
afterFind();<z>
name) {<z>
fileStore != null;<z>
.getWorkbench().getActiveWorkbenchWindow();<z>
(window != null) {<z>
getActivePage();<z>
) {<z>
.endsWith(".pom")) {<z>
);<z>
);<z>
else {<z>
;<z>
new File(fileStore.toURI());<z>
getAbsolutePath(),<z>
new FileInputStream(file)));<z>
(input, name);<z>
selectEditorPage(part), line, column);<z>
e) {<z>
"failed opening editor", e);<z>
catch(PartInitException e) {<z>
openInformation(<z>
).getActiveShell(),<z>
PomHyperlinkDetector_error_title,<z>
toString()));<z>
, Instrumentation instrumentation) throws Exception {<z>
-1;<z>
if(agentArguments!=null) {<z>
(",")) {<z>
("help")) {<z>
;<z>
{<z>
);<z>
(t.equals("trace")) {<z>
System.err);<z>
("strong")) {<z>
makeStrong();<z>
startsWith("http=")) {<z>
1));<z>
) {<z>
(6)));<z>
("error=")) {<z>
));<z>
} else {<z>
err.println("Unknown option: "+t);<z>
();<z>
err.println("File leak detector installed");<z>
true;<z>
),true);<z>
retransformClasses(<z>
class,<z>
.class,<z>
class,<z>
"java.net.PlainSocketImpl"),<z>
ZipFile.class);<z>
if (serverPort>=0)<z>
;<z>
(new Thread() {<z>
{<z>
Listener.TRACE != null) {<z>
();<z>
) {<z>
.close();<z>
(Throwable t) {<z>
Listener.ERROR != null) {<z>
ERROR.flush();<z>
{<z>
.close();<z>
Throwable t) {<z>
});<z>
appWidgetId, AppWidgetProviderInfo appWidget) {<z>
AppWidgetHostView v;<z>
.minWidth =<z>
complexToDimensionPixelSize(appWidget.minWidth, mDisplayMetrics);<z>
.minHeight =<z>
.complexToDimensionPixelSize(appWidget.minHeight, mDisplayMetrics);<z>
=<z>
mDisplayMetrics);<z>
.minResizeHeight =<z>
minResizeHeight, mDisplayMetrics);<z>
) {<z>
;<z>
null) {<z>
appWidget);<z>
setId(String value) {<z>
setId(value);<z>
(prefix, value);<z>
;<z>
void writeLabelsSheet(WritableSheet ws) throws WriteException<z>
);<z>
.setPassword("jxl");<z>
.setVerticalFreeze(5);<z>
25*20);<z>
WritableFont.ARIAL, 12);<z>
;<z>
;<z>
;<z>
* 256);<z>
cv.setFormat(wcf);<z>
0, cv);<z>
;<z>
; i < 61; i++)<z>
Label(0, i, "Common Label");<z>
, "Distinct label number " + i);<z>
(l1);<z>
);<z>
, 61, "Common Label", wcf);<z>
(1, 61, "1-1234567890", wcf);<z>
;<z>
;<z>
);<z>
ws.addCell(l5);<z>
)<z>
0, i, "Common Label");<z>
);<z>
addCell(l1);<z>
);<z>
.BOLD);<z>
RED);<z>
wf);<z>
(true);<z>
;<z>
l);<z>
, wcf2);<z>
;<z>
4, "Another label, longer this time and " +<z>
;<z>
;<z>
new CellView();<z>
;<z>
(5, cf);<z>
ownerId) {<z>
);<z>
285;<z>
this.expansionSetCode = "7ED";<z>
cfMapDef) {<z>
getEffectiveColFamName()) {<z>
().getName()<z>
);<z>
{<z>
state) {<z>
:<z>
;<z>
;<z>
ACTION_REQUIRED:<z>
.setVisibility(INVISIBLE);<z>
.setVisibility(VISIBLE);<z>
);<z>
case ERROR:<z>
);<z>
VISIBLE);<z>
.drawable.error);<z>
case SUCCESS:<z>
(INVISIBLE);<z>
image.setVisibility(VISIBLE);<z>
(R.drawable.success);<z>
, Object item) {<z>
instanceof SelectItemCommand){<z>
hide();<z>
item);<z>
);<z>
(String id) throws FormatException, IOException {<z>
;<z>
getName();<z>
|| name.equals(EXPERIMENT_FILE) ||<z>
equals(ACQUISITION_FILE))<z>
true;<z>
Location parent = file.getParentFile();<z>
(parent != null) {<z>
getParentFile();<z>
);<z>
void disposeFacet() {<z>
()) {<z>
.runWriteAction(new Runnable() {<z>
() {<z>
.getModuleFqName()));<z>
;<z>
mySolution = null;<z>
;<z>
(Object value, int columnWidth) {<z>
{<z>
(DownloadItem) value;<z>
;<z>
));<z>
setVisible(columnWidth > resources.getProgressBarCutoffWidth() &&<z>
state == DownloadState.DOWNLOADING ||<z>
PAUSED ||<z>
== DownloadState.SCANNING ||<z>
state == DownloadState.SCANNING_FRAGMENT));<z>
;<z>
{<z>
(0);<z>
(false);<z>
progressBar.setEnabled(true);<z>
<ModelNode> operations) throws XMLStreamException {<z>
name = null;<z>
null;<z>
timeout = null;<z>
null;<z>
cacheContainer = null;<z>
String beanCache = null;<z>
= null;<z>
passivateEventsOnReplicate = null;<z>
{<z>
reader, i);<z>
(i);<z>
i))) {<z>
{<z>
name = value;<z>
: {<z>
value, reader).asInt();<z>
case IDLE_TIMEOUT: {<z>
value, reader).asLong();<z>
{<z>
, reader).asString();<z>
: {<z>
);<z>
{<z>
;<z>
CLIENT_MAPPINGS_CACHE: {<z>
, reader).asString();<z>
: {<z>
.asBoolean();<z>
{<z>
(reader, i);<z>
);<z>
if (name == null) {<z>
()));<z>
);<z>
Class<D> derivType ) {<z>
= imageType;<z>
.derivType = derivType;<z>
;<z>
part) {<z>
null) {<z>
null;<z>
instanceof FormEditor) {<z>
;<z>
);<z>
() instanceof StructuredTextEditor) {<z>
) ed.getActiveEditor();<z>
return null;<z>
(ImplicitTask task) {<z>
if ( task instanceof ImplicitBlockingTask && useBlockingThreadPool ) {<z>
task);<z>
> 0) {<z>
Thread.currentThread();<z>
{<z>
(WorkStealingThread)thread;<z>
> taskQueue = wthread.getTaskQueue();<z>
wthread.remainingRecursionDepth == 0 ) {<z>
push(task);<z>
) {<z>
;<z>
else {<z>
remainingRecursionDepth--;<z>
(rt);<z>
++;<z>
{<z>
task);<z>
();<z>
{<z>
Thread thread = Thread.currentThread();<z>
{<z>
WorkStealingThread)thread;<z>
oneTaskPerLevel ) {<z>
.getTaskQueue();<z>
.peek();<z>
) {<z>
.remainingRecursionDepth--;<z>
.invoke(rt);<z>
.remainingRecursionDepth++;<z>
{<z>
push(task);<z>
) <= 1 ) {<z>
;<z>
else {<z>
).push(task);<z>
size() <= 1 ) {<z>
wthread);<z>
else {<z>
);<z>
);<z>
( Kind kind ) {<z>
{<z>
IMessageProvider.ERROR;<z>
.QUESTION == kind)) {<z>
;<z>
if (Kind.WARNING == kind) {<z>
.WARNING;<z>
IMessageProvider.NONE;<z>
int cAmount, Boolean dryrun) {<z>
int changes = 0;<z>
String sortBy = "price DESC";<z>
(cType == 2) {<z>
;<z>
"SELECT * FROM "<z>
Config.sqlPrefix<z>
sortBy;<z>
;<z>
con = getSQLConnection();<z>
(ciID, ciDur);<z>
;<z>
PreparedStatement statement = con.prepareStatement(query);<z>
;<z>
2, sender.getName());<z>
setInt(3, ciID);<z>
ciDur);<z>
statement.executeQuery();<z>
double price;<z>
id, amount;<z>
senderBalance;<z>
trader;<z>
int canBuy;<z>
;<z>
Boolean infinite;<z>
enchants;<z>
result.next()) {<z>
<= 0)<z>
true;<z>
getInt(1);<z>
.getBoolean(3);<z>
4);<z>
result.getDouble(8);<z>
amount = result.getInt(9);<z>
);<z>
cAmount);<z>
{<z>
;<z>
true)<z>
= L("preview");<z>
== 1) {<z>
, 1);<z>
ciDur);<z>
(canBuy);<z>
enchants.equalsIgnoreCase("")) {<z>
;<z>
; i--) {<z>
ciDur, i) == true) {<z>
)<z>
id, "amount", i);<z>
itemName, i));<z>
2) {<z>
money = price * canBuy;<z>
== false) {<z>
, money);<z>
if (infinite == false) {<z>
;<z>
priceRounding)));<z>
cAmount -= canBuy;<z>
+= 1;<z>
);<z>
} catch (SQLException e) {<z>
();<z>
dryrun == false) {<z>
con);<z>
(con);<z>
hasOrders == false)<z>
;<z>
return changes;<z>
{<z>
WebServiceFeature[].class);<z>
return true;<z>
catch (NoSuchMethodException e) {<z>
LinkageError e) {<z>
;<z>
void setStopped() throws EInvalidData {<z>
_state == STATE_STOPPING) {<z>
STATE_STOPPED;<z>
} else {<z>
EInvalidData("The state must be STOPPING before it can be set to STOPPED.");<z>
ContactList recipients, boolean allowQuery) {<z>
(DEBUG) {<z>
recipients.serialize());<z>
< 1) {<z>
createNew(context);<z>
.get(recipients);<z>
)<z>
return conv;<z>
getOrCreateThreadId(context, recipients);<z>
;<z>
"xxxxxxx");<z>
equals(recipients)) {<z>
"Conversation.get: new conv's recipients don't match input recpients "<z>
);<z>
put(conv);<z>
{<z>
;<z>
(!Cache.replace(conv)) {<z>
LogTag.error("get by recipients cache.replace failed on " + conv);<z>
;<z>
{<z>
{<z>
return null;<z>
, Object>();<z>
{<z>
;<z>
map;<z>
( IContent content ) throws BirtException<z>
);<z>
IContent.DATA_CONTENT )<z>
content;<z>
dataContent = (IDataContent) content;<z>
getGenerateBy( );<z>
instanceof DataItemDesign )<z>
;<z>
.getSuppressDuplicate( ) )<z>
( );<z>
state = states.get( dataDesign );<z>
)<z>
.lastValue;<z>
lastValue == value<z>
null && lastValue.equals( value ) ) )<z>
return null;<z>
state == null )<z>
DataItemExecutionState( );<z>
state );<z>
;<z>
return content;<z>
analyzedInstruction) {<z>
Instruction35s)analyzedInstruction.instruction;<z>
, instruction.getRegCount(),<z>
.getRegisterF(),<z>
.getReferencedItem());<z>
);<z>
(analyzedInstruction);<z>
org.xml.sax.SAXException<z>
isOutsideDocElem()<z>
(ch, start, length))<z>
(m_inCData)<z>
;<z>
(ch, start, length);<z>
childNode;<z>
(): null;<z>
.getNodeType() == Node.TEXT_NODE ){<z>
;<z>
.createTextNode(s);<z>
append(text);<z>
HyperGraph hg, HGEvent event)<z>
replacedEvent = (HGAtomReplacedEvent)event;<z>
HGHandle handle = replacedEvent.getAtomHandle();<z>
autoSkip || ownUpdatedHandles.contains(handle))<z>
"Own replace detected: " + handle);<z>
remove(handle);<z>
}else{<z>
.println("Replace to propagate: " + handle);<z>
), Operation.Update);<z>
.run();<z>
;<z>
getAnswerTweetSwitch(final TweetPoll tweetPoll,<z>
QuestionAnswer questionAnswer) {<z>
final DetachedCriteria criteria = DetachedCriteria<z>
class);<z>
("tweetPoll", tweetPoll));<z>
;<z>
return (TweetPollSwitch) DataAccessUtils<z>
).findByCriteria(criteria));<z>
protected void onRecycle() {<z>
.onRecycle();<z>
TouchEvent touchEvent = this.mTouchEvent;<z>
.getMotionEvent().recycle();<z>
.recycle();<z>
(HttpServletRequest request,<z>
ServletException, IOException {<z>
).substring(1);<z>
;<z>
= request.getParameter("sha");<z>
StringUtils.isBlank(s)) {<z>
.SC_NOT_FOUND,<z>
);<z>
);<z>
(Exception e) {<z>
sendError(HttpServletResponse.SC_NOT_FOUND,<z>
+ s + "'");<z>
("_id",<z>
;<z>
) {<z>
.sendError(HttpServletResponse.SC_NOT_FOUND, "Bucket '"<z>
;<z>
"GET");<z>
{<z>
request, response, bucket, sha);<z>
equals(mode)) {<z>
response, bucket, sha);<z>
;<z>
{<z>
!= null) {<z>
(tf);<z>
;<z>
{<z>
private void closeConnection( final Connection connection )<z>
)<z>
close();<z>
catch( SQLException sqle )<z>
,<z>
AnalysisResultsItem item)<z>
ctx);<z>
null)<z>
("No files to load");<z>
item;<z>
;<z>
attachments.size() == 0)<z>
("No files to load");<z>
;<z>
);<z>
void acceptVisit(ExpressionVisitor visitor) {<z>
enter(this);<z>
(visitor);<z>
(this);<z>
throws SQLException {<z>
(logger.isDebugEnabled())<z>
logger.debug("rollback");<z>
rollback();<z>
List<KeyValue> getKeyValues(ViewModel model) {<z>
<KeyValue>();<z>
.class,<z>
;<z>
for (KewTypeBo typeBo : kewTypeBos) {<z>
typeBo.isActive()) {<z>
typeBo.getName()));<z>
return kewTypes;<z>
username, String password,<z>
custom, boolean readOnly,<z>
storage, TimeZone timezone) throws ClassException {<z>
readOnly,validate,storage,timezone);<z>
Exception {<z>
= new TempUpgradeColumnImpl("groupId");<z>
(<z>
"parentFolderId");<z>
IGFolderNameColumnImpl igFolderNameColumn = new IGFolderNameColumnImpl(<z>
parentFolderIdColumn);<z>
= UpgradeTableFactoryUtil.getUpgradeTable(<z>
TABLE_COLUMNS,<z>
parentFolderIdColumn, igFolderNameColumn);<z>
);<z>
UpgradeColumn imageIdColumn = new TempUpgradeColumnImpl("imageId");<z>
IGImageNameColumnImpl imageNameColumn =<z>
new IGImageNameColumnImpl(imageIdColumn);<z>
upgradeTable = UpgradeTableFactoryUtil.getUpgradeTable(<z>
,<z>
;<z>
;<z>
static TicketLocalService getService() {<z>
null) {<z>
getName());<z>
,<z>
"_service");<z>
);<z>
return _service;<z>
"CLASSLEVEL[.=]",<z>
{ "CLASSLEVEL.", "CLASSLEVEL=" },<z>
{<z>
(<z>
String expressionString,<z>
src,<z>
matchedSection) throws TermEvaulatorException<z>
, ')');<z>
String classString = exp.substring(11);<z>
(<z>
classString);<z>
record) {<z>
(<z>
);<z>
return rows;<z>
filename) {<z>
player = null;<z>
= new FileInputStream("sounds/" + filename<z>
+ ".mp3");<z>
;<z>
);<z>
Exception e) {<z>
filename);<z>
.println(e);<z>
player;<z>
{<z>
public void run() {<z>
.play();<z>
{<z>
.println(e);<z>
();<z>
Query getWebEntityCreationRuleByLRUQuery(String lru) {<z>
null) {<z>
;<z>
= new BooleanQuery();<z>
);<z>
name(), lru));<z>
;<z>
MUST);<z>
) {<z>
;<z>
q;<z>
{<z>
(context, attrs);<z>
, "init");<z>
mContext = context;<z>
= false;<z>
= getHolder();<z>
this);<z>
(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);<z>
;<z>
new FaceResult[MAX_FACE];<z>
< MAX_FACE; i++)<z>
new FaceResult();<z>
void startClickTimer() {<z>
_clickTimer == null) {<z>
ActionListener() {<z>
ActionEvent e) {<z>
_clickTimer.stop();<z>
&& _clickEvent != null) {<z>
(_clickEvent);<z>
null;<z>
);<z>
)) {<z>
_clickTimer.start();<z>
assignedUsers( String role )<z>
RemoteException<z>
( role ).assignedUsers( role );<z>
public StationState getUpstreamStationState(int idx) {<z>
{<z>
null;<z>
; i--) {<z>
.get(i);<z>
(st.type.isStation()) {<z>
return (StationState) st;<z>
null;<z>
void setHidden(Node node, Hashtable hiddenNodes) {<z>
.NodeImpl) {<z>
;<z>
(node, "");<z>
boolean equals(Object obj) {<z>
(this == obj) return true;<z>
== null) return false;<z>
== false) return false;<z>
DescribeExportTasksRequest other = (DescribeExportTasksRequest)obj;<z>
) return false;<z>
false;<z>
;<z>
JList getArgumentJList () {<z>
argumentJList == null) {<z>
= new DefaultListModel ();<z>
, InputBinding>();<z>
{<z>
;<z>
;<z>
MonitorApp.getInstance().getCalServices();<z>
MessagePropertyDescription propertyInfo : messagePropertyDescriptions) {<z>
propertyInfo.getCalType(calServices);<z>
getTypeFromString(MonitorApp.TARGET_MODULE, "Cal.Samples.BusinessActivityMonitor.BAM.Printable a => a");<z>
);<z>
GemEntity gemEntity : gemEntities) {<z>
gemEntity.getName(), propertyInfo );<z>
MetricItem (metricDescription));<z>
));<z>
(model);<z>
new MouseAdapter () {<z>
e) {<z>
getClickCount() == 2) {<z>
onInsertArgument ();<z>
});<z>
;<z>
;<z>
(String poleString){<z>
.parseInt(poleString);<z>
="pudlo";<z>
i++){<z>
if(pole==polozeniePol[i]){<z>
wynik="trafiony";<z>
iloscTrafien++;<z>
.length){<z>
="zatopiony";<z>
.out.println(wynik);<z>
return wynik;<z>
public void postCommand(AbstractDebuggerCommand cmd) {<z>
scriptConsoleCommunication.postCommand(cmd);<z>
} catch (Exception e) {<z>
(e);<z>
String getArgonOperatorInterfaceURL(){<z>
{<z>
.getString(Constants.adapterProperties, "argonNRPS.operatorInterfaceAddress");<z>
;<z>
) {<z>
event.getReason();<z>
= null;<z>
{<z>
getBreakpoint();<z>
{<z>
;<z>
event.getTasks();<z>
tasks.isEmpty();<z>
.taskSize());<z>
.nextSetBit(0));<z>
);<z>
, onetask, 0,<z>
1);<z>
.addEventRequest(request);<z>
= request.getStackFrames(tasks);<z>
.getLocator();<z>
catch (PDIException e) {<z>
(e);<z>
else if (reason instanceof IPDIEndSteppingRangeInfo)<z>
);<z>
(reason instanceof IPDILocationReachedInfo)<z>
getLocator();<z>
)<z>
();<z>
reason instanceof IPDIFunctionFinishedInfo)<z>
reason).getLocator();<z>
else if (reason instanceof IPDISharedLibraryInfo)<z>
if (reason instanceof IPDIWatchpointScopeInfo)<z>
reason instanceof IPDIWatchpointTriggerInfo)<z>
{<z>
();<z>
.toArray();<z>
.values()) {<z>
.clear(members);<z>
);) {<z>
= iter.next();<z>
().cardinality() == 0)<z>
;<z>
(setsByLocation.containsKey(locator))<z>
;<z>
tasks, locator));<z>
, IPDebugEvent.CONTENT,<z>
;<z>
Element sourceElement, Element mergedElement) {<z>
);<z>
;<z>
;<z>
_diff2 = diff2;<z>
_mergedElement = mergedElement;<z>
;<z>
Hashtable<UnresolvedAttributesConflict, MergeAttributeAction>();<z>
UnresolvedAttributesConflict>();<z>
;<z>
;<z>
processToUpdateOfAttributes();<z>
();<z>
,<z>
ContentResolver resolver) {<z>
values = new ContentValues();<z>
uri, SessionsQuery.PROJECTION,<z>
);<z>
.moveToFirst()) {<z>
,<z>
);<z>
values.put(Sessions.SESSION_STARRED,<z>
getInt(SessionsQuery.STARRED));<z>
else {<z>
SyncColumns.UPDATED, ScheduleContract.UPDATED_NEVER);<z>
finally {<z>
close();<z>
return values;<z>
throws java.io.IOException {<z>
switch (toWrite) {<z>
SIG :<z>
, sig, 4);<z>
:<z>
2);<z>
BITFLAG :<z>
+ 6, bitFlag, 2);<z>
:<z>
);<z>
MODTIME :<z>
position + 10, lastModTime, 4);<z>
case CRC32 :<z>
14, crc32, 4);<z>
COMPSIZE :<z>
;<z>
:<z>
, uncompressedSize, 4);<z>
NAMELENGTH :<z>
fileNameLength, 2);<z>
EXTRALENGTH :<z>
+ 28, extraFieldLength, 2);<z>
case FILENAME :<z>
position + 30, fileName);<z>
EXTRAFIELD :<z>
(), extraField);<z>
<java.lang.Object> getFoldersAndFileEntriesAndFileShortcuts(<z>
mimeTypes,<z>
,<z>
kernel.dao.orm.QueryDefinition queryDefinition)<z>
portal.kernel.exception.SystemException {<z>
_dlFolderLocalService.getFoldersAndFileEntriesAndFileShortcuts(groupId,<z>
;<z>
static boolean supportsGzip(final HttpServletRequest request) {<z>
;<z>
return encoding != null<z>
;<z>
public String getVMMReport() {<z>
);<z>
} catch (WorkspaceDatabaseException e) {<z>
);<z>
();<z>
IOException {<z>
);<z>
.readUnsignedShort();<z>
new FeatureRecord[featureCount];<z>
;<z>
i++) {<z>
i] = new FeatureRecord(raf);<z>
i < featureCount; i++) {<z>
);<z>
(DateTime a, DateTime b) {<z>
(a == null || b == null) {<z>
return null;<z>
).compare(a, b);<z>
return (res < 0 ?<z>
privateCreate(Player player) {<z>
if (permissionsEnabled) {<z>
permission(player, "mywarp.warp.basic.createprivate");<z>
} else {<z>
true;<z>
public void kAdjTimeToTimezoneFunc16() {<z>
final XQuery query = new XQuery(<z>
ctx);<z>
(query);<z>
;<z>
true)<z>
ClassWriter cw, String dispatchMethodName,<z>
, String processEventMethodName) {<z>
.visitMethod(ACC_PUBLIC, dispatchMethodName, "("<z>
).getDescriptor()<z>
null);<z>
visitCode();<z>
l3 = new Label();<z>
(l3);<z>
);<z>
));<z>
);<z>
true;<z>
);<z>
{<z>
if (first) {<z>
l4 = new Label();<z>
l4);<z>
mv2.visitVarInsn(ALOAD, 2);<z>
;<z>
new Label();<z>
visitJumpInsn(IFEQ, l5);<z>
Label l6 = new Label();<z>
;<z>
visitVarInsn(ALOAD, 3);<z>
;<z>
;<z>
getInternalName(targetClass), processEventMethodName,<z>
)) + ")V");<z>
aroundLabel);<z>
);<z>
{<z>
(targetClass) }, 0, null);<z>
false;<z>
else {<z>
;<z>
addErrorLogStatement(mv2);<z>
eventHierarchies.size() > 0) {<z>
mv2.visitLabel(aroundLabel);<z>
0, null, 0, null);<z>
visitInsn(RETURN);<z>
;<z>
visitLabel(l8);<z>
l8, 1);<z>
, l3, l8, 2);<z>
, l8, 3);<z>
);<z>
;<z>
throws Exception{<z>
null){<z>
useDefaultScreen("xdruid.logo");<z>
, new Object());<z>
{<z>
, "/linkedin/login", "LinkedInController.login");<z>
addRoute("GET", "/linkedin/logout", "LinkedInController.logout");<z>
"LinkedInController.callback");<z>
execute(DTState state) throws RulesException {<z>
datapop().stringValue();<z>
.datapop().stringValue();<z>
;<z>
getConnectionPropertiesFromNode(Node node) {<z>
);<z>
)));<z>
;<z>
());<z>
if(node.getPort() != 0)<z>
);<z>
p);<z>
, p);<z>
p);<z>
.MySql, OPTIONS, "&autoReconnect=true&autoReconnectForPools=true", p);<z>
return p;<z>
uri, String local, String raw,<z>
SAXException {<z>
();<z>
raw)) {<z>
contentReaderContext = Context.Security;<z>
) {<z>
("created".equals(raw)) {<z>
Creation;<z>
) {<z>
Context.Modification;<z>
)) {<z>
= Context.Publish;<z>
)) {<z>
, attrs.getValue("id"));<z>
.getValue("realm"));<z>
(ProtoNetwork protoNetwork,<z>
) throws ProtoNetworkError {<z>
String filename = PROTO_NETWORK_FILENAME;<z>
File(asPath(protoNetworkRootPath, filename));<z>
oos = null;<z>
FileOutputStream(file));<z>
);<z>
(file);<z>
) {<z>
.getAbsolutePath();<z>
String msg =<z>
e);<z>
finally {<z>
IOUtils.closeQuietly(oos);<z>
savedInstanceState) {<z>
.onCreate(savedInstanceState);<z>
.setContentView(R.layout.manager);<z>
this);<z>
).setOnClickListener(this);<z>
= DeviceManager.getInstanceNoCreate();<z>
if (this.deviceManager == null) {<z>
.e(TAG, "There is no device manager instance!");<z>
);<z>
ManagerItemAdapter(<z>
this.deviceManager,<z>
layout.manager_item<z>
deviceList.setAdapter(this.deviceListAdapter);<z>
;<z>
();<z>
);<z>
.addAction(BluetoothAdapter.ACTION_STATE_CHANGED);<z>
.ACTION_STATUS_BROADCAST);<z>
registerReceiver(<z>
,<z>
bluetoothDisabledDialog = new AlertDialog.Builder(this)<z>
.setMessage("Bluetooth is not enabled.")<z>
OnCancelListener(){<z>
DialogInterface dialog) {<z>
;<z>
, new DialogInterface.OnClickListener () {<z>
) {<z>
startBluetoothSettings();<z>
);<z>
getPackageManager();<z>
getPackageName(), 0);<z>
mVersionName = info.versionName;<z>
.i(TAG, "Spine server Test Application Version " + mVersionName);<z>
catch (NameNotFoundException e) {<z>
e.toString());<z>
) throws Exception {<z>
output = null;<z>
task.getActivityType();<z>
);<z>
activityImplementation = activityImplementationFactory.getActivityImplementation(activityType);<z>
null) {<z>
("Unknown activity type: " + activityType);<z>
);<z>
isManualActivityCompletion()) {<z>
), output);<z>
CancellationException e) {<z>
getTaskToken(), null);<z>
(ActivityFailureException e) {<z>
isErrorEnabled()) {<z>
) + ", workflowGenerationId="<z>
.getWorkflowId() + ", activity=" + activityType<z>
+ task.getActivityId(), e);<z>
e.getDetails());<z>
{<z>
isErrorEnabled()) {<z>
+ ", workflowGenerationId="<z>
+ ", activity=" + activityType<z>
), e);<z>
);<z>
StringWriter();<z>
);<z>
.toString();<z>
(), reason, details);<z>
synchronized PropertyChangeListener[] getPropertyChangeListeners()<z>
())<z>
new PropertyChangeListener[0];<z>
listenerList.size()]);<z>
verifyWhereClauseAppend(StringBuffer query, boolean hasAppendWhereClause) {<z>
if (hasAppendWhereClause) {<z>
);<z>
{<z>
query.append("WHERE ");<z>
;<z>
;<z>
EncodingAlgorithm ea) throws FastInfosetException, IOException {<z>
write (EncodingConstants.CHARACTER_CHUNK | EncodingConstants.CHARACTER_CHUNK_ENCODING_ALGORITHM_FLAG |<z>
>> 6));<z>
_b = (id & 0x3F) << 2;<z>
reset();<z>
data, _encodingBufferOutputStream);<z>
_encodingBufferIndex);<z>
write(_encodingBuffer, _encodingBufferIndex);<z>
getNode(TreePath path) {<z>
{<z>
;<z>
return (DefaultMutableTreeNode) path.getLastPathComponent();<z>
public static CommunicationType get(String literal)<z>
; i < VALUES_ARRAY.length; ++i)<z>
= VALUES_ARRAY[i];<z>
.toString().equals(literal))<z>
result;<z>
null;<z>
boolean coreType) {<z>
) {<z>
AstPackage.UNARY_EXPRESSION__OPERAND:<z>
();<z>
(featureID, resolve, coreType);<z>
params)<z>
downloadBitmap(params[0]);<z>
)<z>
!= null && tcpSelectorDef.eIsProxy())<z>
tcpSelectorDef;<z>
tcpSelectorDef = (TCPSelectorDef)eResolveProxy(oldTcpSelectorDef);<z>
oldTcpSelectorDef)<z>
if (eNotificationRequired())<z>
ENotificationImpl(this, Notification.RESOLVE,<z>
, oldTcpSelectorDef, tcpSelectorDef));<z>
;<z>
) {<z>
.readConfigValue(pageElement, "pageName"));<z>
readConfigValue(pageElement, "scale");<z>
scale);<z>
);<z>
.setText("" + this.patternLength);<z>
));<z>
setText("" + this.quantization);<z>
(pageElement, "startNote"));<z>
"" + this.startNote);<z>
"maxNote"));<z>
.maxNote);<z>
);<z>
this.numNotes);<z>
readConfigValue(pageElement, "chance"));<z>
.setText(""+this.chance);<z>
(pageElement, "maxRadius"));<z>
("" + this.maxRadius);<z>
monome.readConfigValue(pageElement, "midiChannel"));<z>
midiChannel);<z>
<?> targetClass)<z>
(className);<z>
)) {<z>
;<z>
<?> impl;<z>
, byteCode.length);<z>
LinkageError e) {<z>
,e);<z>
);<z>
impl;<z>
password){<z>
if(password!=null){<z>
byte[password.length];<z>
length);<z>
MarkupModel markup, @NotNull Project project) {<z>
.VERIFY) {<z>
.getDocument();<z>
new Processor<HighlightInfo>() {<z>
) {<z>
.containsHighlighter(info.highlighter);<z>
;<z>
});<z>
);<z>
highlighter : allHighlighters) {<z>
highlighter.isValid()) continue;<z>
);<z>
{<z>
HighlightInfo)tooltip;<z>
), new Processor<HighlightInfo>() {<z>
boolean process(HighlightInfo highlightInfo) {<z>
0;<z>
});<z>
;<z>
() {<z>
;<z>
InterestPostingPeriodResult(postingPeriod);<z>
InterestCalculationPeriodResult periodResult : calculationPeriodResults) {<z>
result.add(periodResult);<z>
result;<z>
final MacroAnnotation annotation, final Throwable exception) {<z>
Procedure1<XtendAnnotationTarget>() {<z>
public void apply(final XtendAnnotationTarget it) {<z>
= it.getAnnotations();<z>
,Boolean>() {<z>
final XAnnotation it) {<z>
();<z>
_annotationType.getSimpleName();<z>
;<z>
);<z>
_equals);<z>
>filter(_annotations, _function);<z>
Procedure1<XAnnotation>() {<z>
(final XAnnotation it) {<z>
;<z>
boolean _matched = false;<z>
) {<z>
instanceof MacroEvaluationException) {<z>
= (MacroEvaluationException)exception;<z>
=true;<z>
_builder = new StringConcatenation();<z>
append("Problem during processing : [");<z>
getCause();<z>
;<z>
);<z>
);<z>
);<z>
= _macroEvaluationException.getMessage();<z>
;<z>
;<z>
"in ");<z>
;<z>
_eResource.getURI();<z>
.lastSegment();<z>
_lastSegment, "");<z>
(" Line:");<z>
.getNode(_macroEvaluationException.causer);<z>
= _node.getStartLine();<z>
_startLine, "");<z>
_builder.newLineIfNotEmpty();<z>
;<z>
_builder.append("\t");<z>
.causer, 2, 2);<z>
_highlightedRange, " ");<z>
newLineIfNotEmpty();<z>
_builder.newLine();<z>
_string = _builder.toString();<z>
;<z>
{<z>
> _class = exception.getClass();<z>
.getSimpleName();<z>
;<z>
String _plus_1 = (_plus + "] ");<z>
.getMessage();<z>
<String>operator_elvis(_message, "");<z>
_elvis);<z>
;<z>
= _switchResult;<z>
> _errors = resource.getErrors();<z>
;<z>
_minus, null);<z>
(_eObjectDiagnosticImpl);<z>
forEach(_filter, _function_1);<z>
XtendAnnotationTarget>forEach(annotatedElements, _function);<z>
() throws RecognitionException {<z>
);<z>
pushFollow(FOLLOW_rule__XTryCatchFinallyExpression__Group__3__Impl_in_rule__XTryCatchFinallyExpression__Group__328404);<z>
);<z>
_fsp--;<z>
;<z>
re) {<z>
(re);<z>
(input,re);<z>
);<z>
void start() throws Exception<z>
;<z>
start();<z>
clusterConnection.flushExecutor();<z>
);<z>
event) throws Exception {<z>
= event.getSource();<z>
, "0.75f", "1.0f",<z>
, "2.0f", "3.0f"};<z>
SCALE_PAGE).getValue();<z>
;<z>
1; i++) {<z>
(arrValue[i])) {<z>
;<z>
arrValue[i + 1]);<z>
(pdfViewer);<z>
private void setupRandPartB() throws IOException {<z>
(this.su_ch2 != this.su_chPrev) {<z>
.currentState = RAND_PART_A_STATE;<z>
su_count = 1;<z>
;<z>
4) {<z>
.su_tPos] & 0xff);<z>
.tt[this.su_tPos];<z>
if (this.su_rNToGo == 0) {<z>
] - 1;<z>
512) {<z>
su_rTPos = 0;<z>
} else {<z>
.su_rNToGo--;<z>
su_j2 = 0;<z>
RAND_PART_C_STATE;<z>
su_rNToGo == 1) {<z>
;<z>
();<z>
else {<z>
currentState = RAND_PART_A_STATE;<z>
();<z>
) {<z>
, config);<z>
ds = ds;<z>
outerName != null;<z>
config.innerName != null;<z>
.innerName);<z>
= ds.findDimension(config.outerName);<z>
inner != null : config.innerName;<z>
.outerName;<z>
);<z>
!= null) {<z>
for (String name : config.vars) {<z>
ds.findVariable(name);<z>
v == null) continue;<z>
.add(v);<z>
;<z>
shape = new int[rank - 2];<z>
;<z>
), shape);<z>
else {<z>
ds.getVariables()) {<z>
) < 2) continue;<z>
(this.inner)) {<z>
add(v);<z>
int rank = v.getRank();<z>
new int[rank - 2];<z>
, shape, 0, rank - 2);<z>
.getDataType(), shape);<z>
, Object> buildDefaultModel(<z>
,<z>
,<z>
,<z>
NodeRef script,<z>
NodeRef document,<z>
space)<z>
>();<z>
model);<z>
put("companyhome", companyHome);<z>
)<z>
("userhome", userHome);<z>
null)<z>
;<z>
null)<z>
, script);<z>
document != null)<z>
("document", document);<z>
if (space != null)<z>
("space", space);<z>
;<z>
.StoredSettingsBean storedSettingsBean, String dialogTitle) {<z>
.getContainingFile());<z>
ModuleUtil.findModuleForPsiElement(element);<z>
);<z>
= element.getProject();<z>
= new SliceForwardForm();<z>
init(storedSettingsBean.showDereferences);<z>
);<z>
save(storedSettingsBean.analysisUIOptions);<z>
myProject, analysisScope, name, true,<z>
element) {<z>
) {<z>
.getComponent();<z>
dialog.show();<z>
()) return null;<z>
save(analysisUIOptions);<z>
form.isToShowDerefs();<z>
, analysisScope, myProject, module);<z>
params = new SliceAnalysisParams();<z>
scope;<z>
= dataFlowToThis;<z>
= form.isToShowDerefs();<z>
params;<z>
Security security) {<z>
security instanceof FinancialSecurity) {<z>
security;<z>
null) {<z>
visitGovernmentBondSecurity(final GovernmentBondSecurity security) {<z>
));<z>
ExternalId visitMunicipalBondSecurity(final MunicipalBondSecurity security) {<z>
.ISO_COUNTRY_ALPHA2, security.getIssuerDomicile());<z>
{<z>
security.getIssuerDomicile());<z>
) {<z>
;<z>
security) {<z>
();<z>
visitFXForwardSecurity(final FXForwardSecurity security) {<z>
security.getRegionId();<z>
) {<z>
getRegionId();<z>
{<z>
.getRegionId();<z>
(final SimpleZeroDepositSecurity security) {<z>
();<z>
PeriodicZeroDepositSecurity security) {<z>
();<z>
(final ContinuousZeroDepositSecurity security) {<z>
();<z>
);<z>
return regionId;<z>
null;<z>
)<z>
name, "addNotificationListener");<z>
, handback);<z>
ext, int blockSize)<z>
= FileRef.create(fileSet, ext) ;<z>
BlockMgr blockMgr = blockMgrs.get(ref) ;<z>
blockMgr == null )<z>
;<z>
blockMgr = new BlockMgrReadonly(blockMgr) ;<z>
;<z>
) {<z>
();<z>
<String, Attribute>();<z>
keySet = columnMap.keySet();<z>
: keySet) {<z>
get(key);<z>
());<z>
(newColumnMap);<z>
obj;<z>
public ScriptDef(XmlNode xmlNode) {<z>
;<z>
getAttribute("language");<z>
("return");<z>
) {<z>
sb = new StringBuilder();<z>
.append("cell ");<z>
(0);<z>
(" ");<z>
(row[0]);<z>
;<z>
COLUMNS / 3;<z>
append(labelCol);<z>
;<z>
1);<z>
();<z>
;<z>
add(label);<z>
StringBuilder();<z>
;<z>
+ 1);<z>
;<z>
0]);<z>
" ");<z>
sb.append(COLUMNS - labelCol);<z>
append(" ");<z>
;<z>
);<z>
);<z>
GuiHashMapOutputField(data, textConstraint);<z>
);<z>
e) {<z>
if (e.getCause() instanceof RuntimeException)<z>
RuntimeException) e.getCause());<z>
;<z>
<?> readNewClass(boolean unshared)<z>
IOException {<z>
classDesc = readClassDesc();<z>
if (classDesc != null) {<z>
);<z>
!= null) {<z>
, nextHandle(), unshared);<z>
return localClass;<z>
);<z>
image)<z>
if (index == 0)<z>
;<z>
image != null && imagePadding == null)<z>
().width);<z>
;<z>
getObjectByBFSFile(Long key) {<z>
= null;<z>
, key);<z>
) {<z>
printStackTrace();<z>
return su;<z>
{<z>
null ? ef.hashCode() : 0;<z>
hashCode() : 0);<z>
return result;<z>
) {<z>
, Util.makeIndent(indent));<z>
= addChild(an, pos, "[");<z>
, an.getElements(), depth);<z>
;<z>
configure() throws Exception {<z>
true);<z>
()<z>
.maximumRedeliveries(5)<z>
.redeliveryDelay(2000)<z>
WARN));<z>
maximumRedeliveries(3)<z>
true)<z>
"file:target/ftp/upload");<z>
)<z>
("http://localhost:8765/rider");<z>
Bundle savedInstanceState)<z>
.onCreate(savedInstanceState);<z>
R.layout.main);<z>
, "Toc ListView activated successfully!");<z>
new TocAdapter(this));<z>
} catch (SQLException e) {<z>
.e(TAG_NAME, "Error: SQLException", e);<z>
(IOException e) {<z>
);<z>
.txtTitle);<z>
) findViewById(R.id.btnExit);<z>
btnExit == null) {<z>
TAG_NAME, "txtTitle / btnExit in main View is null");<z>
setText("Daftar Isi");<z>
btnExit.setOnClickListener(new OnClickListener() {<z>
v)<z>
, "Exit button was clicked!");<z>
"android.action.KILL");<z>
;<z>
;<z>
);<z>
(ISourceViewer sourceViewer)<z>
.getHyperlinkDetectorTargets(sourceViewer);<z>
put("com.aptana.editor.js.sourceCode", getEditor());<z>
targets;<z>
, String targetAttribute) {<z>
;<z>
null;<z>
!= null) {<z>
(1));<z>
backingfile.getLocation() : filePath));<z>
.isEmpty()) {<z>
));<z>
.size() == 1) {<z>
(ILaunchConfiguration)configs.get(0);<z>
} else {<z>
;<z>
null) {<z>
!= null) {<z>
)) {<z>
copy = configuration.getWorkingCopy();<z>
;<z>
!DEFAULT_TARGET.equals(targetAttribute)) {<z>
= targetAttribute;<z>
;<z>
();<z>
exception) {<z>
)}), exception);<z>
;<z>
} else {<z>
();<z>
() {<z>
DEBUG) {<z>
.d(TAG, "++OnCreate++");<z>
getApplicationContext();<z>
mContext);<z>
new IntentFilter();<z>
ACTION_PLAYER_COMMAND);<z>
.addAction(ACTION_REQUEST_UPDATE);<z>
mCommandReceiver, filter);<z>
0));<z>
clearSongInfo();<z>
(mWidgetPlaystateListener);<z>
.TELEPHONY_SERVICE);<z>
PhoneStateListener.LISTEN_DATA_CONNECTION_STATE);<z>
parseCharacterColumnType() {<z>
, BYTE) || match(BINARY)) {<z>
);<z>
)) {<z>
.previous();<z>
lengthExpression = parseLength();<z>
, null);<z>
(CHARACTER)) {<z>
();<z>
= parseLength();<z>
();<z>
, lengthExpression, characterTypeAttributes);<z>
CHAR) || match(NCHAR)) {<z>
();<z>
if (start.match(CHAR)) {<z>
);<z>
();<z>
> characterTypeAttributes = parseCharTypeAttributes();<z>
NCHAR, lengthExpression, characterTypeAttributes);<z>
) {<z>
= lastMatch();<z>
= parseLength();<z>
<SQLParsedElement> characterTypeAttributes = parseCharTypeAttributes();<z>
);<z>
(match(VARBINARY)) {<z>
start = lastMatch();<z>
= parseLength();<z>
.Type.VARBINARY, lengthExpression, null);<z>
{<z>
(), ColumnDataType.Type.TINYBLOB);<z>
(match(BLOB)) {<z>
Token start = lastMatch();<z>
lengthExpression = parseLength();<z>
null);<z>
) {<z>
Type.MEDIUMBLOB);<z>
)) {<z>
, ColumnDataType.Type.LONGBLOB);<z>
match(TINYTEXT)) {<z>
start = lastMatch();<z>
;<z>
);<z>
) {<z>
Token start = lastMatch();<z>
lengthExpression = parseLength();<z>
;<z>
;<z>
{<z>
= lastMatch();<z>
characterTypeAttributes = parseCharTypeAttributes();<z>
, null, characterTypeAttributes);<z>
match(LONGTEXT)) {<z>
;<z>
parseCharTypeAttributes();<z>
Type.LONGTEXT, null, characterTypeAttributes);<z>
{<z>
).warn("***Unhandled column type " + ENUM);<z>
return null;<z>
{<z>
"Tosa").warn("***Unhandled column type " + SET);<z>
;<z>
{<z>
null;<z>
public void setHeader(JwtHeader header) {<z>
JweHeader) {<z>
;<z>
} else {<z>
new JweHeader(header));<z>
(<z>
req) {<z>
(req)) {<z>
:<z>
new ClaimClaimSolutionsReorientCommand(req));<z>
:<z>
return getGEFWrapper(new ArgumentArgumentEvidenceReorientCommand(<z>
req));<z>
EvidenceEvidenceContextsEditPart.VISUAL_ID:<z>
new EvidenceEvidenceContextsReorientCommand(<z>
;<z>
:<z>
EvidenceEvidenceReorientCommand(req));<z>
req);<z>
IOException<z>
len];<z>
);<z>
handler);<z>
return result;<z>
controller, final ModelNode originalResult) {<z>
this.identity = identity;<z>
.controller = controller;<z>
= originalResult;<z>
{<z>
.getProperty("machine.scanner"));<z>
sScannerType = sd.nextToken(':');<z>
= sd.nextToken(',');<z>
equals(sScannerType)) {<z>
(sScannerParam1);<z>
else {<z>
;<z>
getAVPairBytes(int avId, String value)<z>
{<z>
getBytes("UTF-16LE");<z>
4 + valueBytes.length];<z>
short)avId, avPairBytes, 0);<z>
, avPairBytes, 2);<z>
avPairBytes, 4, valueBytes.length);<z>
;<z>
) throws IOException {<z>
.endsWith("war")) {<z>
new File(WEBAPP_DIR, name);<z>
else {<z>
(APPS_DIR, name);<z>
out.println(currentFile);<z>
archive);<z>
server = new RemoteServer(100, true);<z>
.start();<z>
) {<z>
;<z>
;<z>
;<z>
) {<z>
;<z>
pluginLoadTable.getSelectionCount(); i++) {<z>
());<z>
(), pluginList);<z>
(EditorContext editorContext, SNode node) {<z>
new EditorCell_Constant(editorContext, node, "");<z>
"Constant_cz3bck_a0d0");<z>
.setDefaultText("<no compartments>");<z>
return editorCell;<z>
) {<z>
.this) {<z>
();<z>
] b;<z>
{<z>
b = new byte[blockSize];<z>
addAndGet(blockSize);<z>
;<z>
return b;<z>
ValueImpl prepareForAssignmentTo(ValueContainer destination)<z>
InvalidTypeException,<z>
validateAssignment(destination);<z>
return this;<z>
object) {<z>
if (childrenFeatures == null) {<z>
);<z>
;<z>
;<z>
public PrincipalImpl(String hostName) throws UnknownHostException {<z>
) {<z>
InetAddress[1];<z>
InetAddress.getByName(hostName);<z>
hostName );<z>
= new ArrayFactory<GrReferenceList>() {<z>
GrReferenceList[] create(int count) {<z>
[0];<z>
)<z>
getByName(DOMAIN).isReachable(TIMEOUT);<z>
true;<z>
catch (UnknownHostException e)<z>
false;<z>
IOException e)<z>
false;<z>
, Parameters parms,<z>
pw) {<z>
); ++i) {<z>
;<z>
) {<z>
();<z>
.getType().getName();<z>
+":"+typeName);<z>
typeName)|| KSoap2Utils.isStringType(typeName))<z>
+javifiedName+");");<z>
)) {<z>
(typeName);<z>
pw.println(" //generate an arraytype SoapObject for input array ");<z>
,javifiedName,baseType);<z>
.printf( " if (%s !=null) \n" ,javifiedName);<z>
,javifiedName);<z>
" _%s.addProperty(\"item\",o);\n",javifiedName);<z>
+");");<z>
+javifiedName+");");<z>
eIsSet( EStructuralFeature eFeature ) {<z>
{<z>
CorePackage.MODEL_IMPORT__NAME:<z>
);<z>
case CorePackage.MODEL_IMPORT__PATH:<z>
equals(getPath());<z>
.MODEL_IMPORT__MODEL_LOCATION:<z>
null : !MODEL_LOCATION_EDEFAULT.equals(modelLocation);<z>
:<z>
);<z>
.MODEL_IMPORT__MODEL_TYPE:<z>
;<z>
CorePackage.MODEL_IMPORT__PRIMARY_METAMODEL_URI:<z>
);<z>
.MODEL_IMPORT__MODEL:<z>
getModel() != null;<z>
return eDynamicIsSet(eFeature);<z>
) {<z>
);<z>
();<z>
getNearCacheHitCount();<z>
String consumerKey,<z>
) {<z>
consumerSercret, requestToken, null,<z>
);<z>
bb) throws MalformedRequestException {<z>
.decode(bb);<z>
;<z>
m.matches())<z>
);<z>
;<z>
m.group(1));<z>
IllegalArgumentException x) {<z>
;<z>
u;<z>
new URI("http://"<z>
)<z>
2));<z>
(URISyntaxException x) {<z>
();<z>
.group(3), u);<z>
int getFirstCharRelativePosition( final IDocument document,<z>
final IRegion region )<z>
BadLocationException {<z>
getLength() );<z>
= 0;<z>
;<z>
< src.length() ) {<z>
( src.charAt( i ) ) == false<z>
.charAt( i ) != '\t' ) {<z>
i++;<z>
true;<z>
++;<z>
if( !breaked ) {<z>
++;<z>
1;<z>
(String rname) throws TokenStreamException {<z>
(!GroovyRecognizer.tracing) return;<z>
+= returnAST.toStringList();<z>
traceOut(rname);<z>
) {<z>
entities = new EntityType[] {<z>
CHICKEN, EntityType.COW,<z>
, EntityType.GHAST,<z>
GIANT,<z>
.PIG, EntityType.PIG_ZOMBIE,<z>
.SHEEP, EntityType.SKELETON,<z>
,<z>
.SQUID, EntityType.ZOMBIE,<z>
.WOLF,<z>
EntityType.ENDERMAN, EntityType.SILVERFISH,<z>
VILLAGER,<z>
,<z>
, EntityType.SNOWMAN };<z>
elementToConfigDef(Element element) {<z>
new ConfigDef();<z>
setName(element.getAttributeValue("name"));<z>
.getChildren("display-group");<z>
);<z>
()) {<z>
= (Element) iter.next();<z>
(this.elementToDisplayGroup(e));<z>
configdef;<z>
public long renewDelegationToken(Token<DelegationTokenIdentifier> token)<z>
InvalidToken, IOException {<z>
));<z>
renewDelegationToken(token);<z>
{<z>
.unwrapRemoteException(InvalidToken.class,<z>
.class);<z>
() {<z>
) return;<z>
> 0) {<z>
--;<z>
csoundUnlockMutex(m);<z>
} else {<z>
println("Warning: Mutex trying to unlock imaginary threads.");<z>
LoggingRootResource() {<z>
,<z>
.getResourceDescriptionResolver(),<z>
LoggingSubsystemAdd.INSTANCE,<z>
);<z>
final BaseCommand banlist = new BaseCommand("<IP or bans> - Gives a list of bans") {<z>
) {<z>
;<z>
equalsIgnoreCase("ips"))<z>
;<z>
ips) {<z>
new StringBuilder();<z>
getSpoutServer().getBannedPlayers()) {<z>
(player + ",");<z>
" " + players.toString());<z>
{<z>
StringBuilder players = new StringBuilder();<z>
).getIPBans()) {<z>
+ ",");<z>
+ players.toString());<z>
{<z>
);<z>
(isuni)<z>
2;<z>
+ strOffset + len > m_buf.length)<z>
);<z>
, m_offset + offset);<z>
;<z>
, m_buf, m_offset + offset + 4);<z>
- m_offset;<z>
String key) {<z>
= getEntryDefinition(key);<z>
)) {<z>
;<z>
onCollision(Sprite that, Point collisionVector) {<z>
.getClass() == Player.class) {<z>
= (Player) that;<z>
.getY() < 0)) {<z>
spawnBits();<z>
.remove(this);<z>
onCollision(that, collisionVector);<z>
(final ValueType type,<z>
String operatorId,<z>
boolean isNegated,<z>
parameterText,<z>
final Target left,<z>
right ) {<z>
return this.evaluators.getEvaluator( type,<z>
determineOperator( operatorId,<z>
isNegated ) );<z>
) {<z>
);<z>
.length; i++) {<z>
(source[i]) {<z>
case '\b' :<z>
"\\b");<z>
'\t' :<z>
append("\\t");<z>
:<z>
;<z>
case '\f' :<z>
"\\f");<z>
'\r' :<z>
("\\r");<z>
:<z>
output.append("\\\"");<z>
'\'' :<z>
append("\\'");<z>
'\\' :<z>
);<z>
append(source[i]);<z>
('\"');<z>
output;<z>
) {<z>
<ButtonSE>();<z>
();<z>
, new String[] {<z>
.ID,<z>
ButtonSETable.NAME,<z>
SAMPLE,<z>
);<z>
(c.moveToNext()) {<z>
));<z>
);<z>
buttonSEs.add(se);<z>
.close();<z>
return buttonSEs;<z>
ProfilSessionController(MainSessionController mainSessionCtrl,<z>
ComponentContext componentContext) {<z>
super(mainSessionCtrl,<z>
;<z>
, int st_gid,<z>
long st_atime, long st_mtime, long st_ctime,<z>
st_blksize, long st_blocks) {<z>
= st_dev;<z>
= st_ino;<z>
st_mode = st_mode;<z>
st_nlink = st_nlink;<z>
;<z>
this.st_gid = st_gid;<z>
.st_rdev = st_rdev;<z>
st_size = st_size;<z>
this.st_atime = st_atime;<z>
st_mtime = st_mtime;<z>
st_ctime = st_ctime;<z>
.st_blksize = st_blksize;<z>
st_blocks;<z>
String email, String code) {<z>
("application.email.enabled")) {<z>
.sendInvitation(email, code);<z>
(String roleName)<z>
IllegalArgumentException,<z>
roleName == null) {<z>
"Invalid parameter.";<z>
excMsg);<z>
RelationSupport.class.getName(),<z>
roleName);<z>
role = null;<z>
) {<z>
(roleName));<z>
role == null) {<z>
NO_ROLE_WITH_NAME;<z>
(pbType,<z>
);<z>
catch (InvalidRoleValueException exc) {<z>
getRoleValue());<z>
(),<z>
;<z>
size());<z>
optimize(){<z>
super.optimize();<z>
{<z>
restart();<z>
double amount) {<z>
if(amount > 0) {<z>
Account acc = AccountHandler.getAccount(player);<z>
)) {<z>
acc.substractMoney(amount);<z>
return true;<z>
false;<z>
ObjectKey doInsert(Criteria criteria)<z>
criteria, (Connection) null);<z>
throws Exception<z>
);<z>
OMPlatform.INSTANCE.isOSGiRunning())<z>
;<z>
catch (Throwable t)<z>
LOG.error(t);<z>
void fireTreeStructureChanged( XmlTreeNode rootNode )<z>
for( TreeModelListener listener : listeners )<z>
;<z>
( String warning, Object... arguments ) {<z>
warning;<z>
( isWarnEnabled() ) {<z>
length - 1;<z>
( lastArgument == -1 ) {<z>
);<z>
} else {<z>
lastArgument + "}" ) == -1 ) {<z>
lastArgument > 0 ) {<z>
= MessageFormat.format( logged, arguments );<z>
(Throwable) arguments[lastArgument] );<z>
--;<z>
} else {<z>
arguments );<z>
( logged );<z>
{<z>
lastArgument + "} in message '" + warning + "'" );<z>
;<z>
lessOrEqualTo(K expectedValue) {<z>
;<z>
Comparable<?>) expectedValue));<z>
;<z>
setValueHP(BigInteger value) {<z>
0) {<z>
();<z>
) < 0) {<z>
= getMinimumHP();<z>
(value.mod(unitIncrementHP));<z>
valueHP);<z>
{<z>
- getVisibleAmount();<z>
lastValueSeen = lpValue;<z>
setValue(lpValue);<z>
fireStateChanged();<z>
, ContentDecodingException, IOException, NoSuchAlgorithmException {<z>
Key unwrappedKey = null;<z>
readLock().lock();<z>
Log.FAC_ACCESSCONTROL, Level.INFO)) {<z>
;<z>
] keyid : _keyIDs) {<z>
.FAC_ACCESSCONTROL, Level.INFO)) {<z>
.info(Log.FAC_ACCESSCONTROL,<z>
(keyid));<z>
(keyid)) {<z>
unwrappedKey = unwrapKeyViaCache(keyid);<z>
{<z>
);<z>
unwrappedKey;<z>
getClasspathEntriesFor(Class<?> clazz) {<z>
Assure.notNull("clazz", clazz);<z>
ClassLoader classLoader = clazz.getClassLoader();<z>
classLoader.getClass();<z>
equals(CLASS_ORG_APACHE_TOOLS_ANT_ANTCLASSLOADER)) {<z>
]);<z>
[0]);<z>
).split(File.pathSeparator);<z>
++) {<z>
]);<z>
fileNames;<z>
(Exception e) {<z>
printStackTrace();<z>
;<z>
.getCodeSource();<z>
getFile();<z>
patchedfileName = patchFileName(fileName);<z>
A4ELogging.isDebuggingEnabled()) {<z>
fileName, patchedfileName);<z>
;<z>
(<z>
long groupId, long folderId, int status,<z>
.kernel.util.OrderByComparator orderByComparator)<z>
liferay.portal.kernel.exception.SystemException,<z>
portlet.documentlibrary.NoSuchFileVersionException {<z>
()<z>
findByG_F_S_PrevAndNext(fileVersionId, groupId, folderId,<z>
);<z>
int[] pivotsHeap, final int k) {<z>
;<z>
;<z>
int node = 0;<z>
> MIN_SELECT_SIZE) {<z>
final int pivot;<z>
] >= 0)) {<z>
= pivotsHeap[node];<z>
} else {<z>
medianOf3(work, begin, end));<z>
(node < pivotsHeap.length) {<z>
= pivot;<z>
) {<z>
];<z>
pivot) {<z>
= pivot;<z>
, pivotsHeap.length);<z>
} else {<z>
pivot + 1;<z>
+ 2, pivotsHeap.length);<z>
;<z>
work[k];<z>
(final ServiceIdentification serviceIdentification, final ServiceProvider serviceProvider,<z>
List<Themes> them) {<z>
serviceProvider, operationsMetadata, version, updateSequence);<z>
contents = con;<z>
;<z>
{<z>
LWCToolkit.getSunAwtDisableCALayers()) {<z>
dispose();<z>
super.dispose();<z>
displayExec(Runnable r) {<z>
.class) {<z>
display.isDisposed()) {<z>
;<z>
T> key, T value) {<z>
while (true) {<z>
= myUserMap;<z>
get(COPYABLE_USER_MAP_KEY);<z>
null) {<z>
.EMPTY_MAP;<z>
(key, value);<z>
, newCopyableMap);<z>
this, map, newMap)) {<z>
{<z>
(fQueue) {<z>
;<z>
{<z>
buildPartial();<z>
!result.isInitialized()) {<z>
result);<z>
return result;<z>
start() {<z>
);<z>
, 60000, 30000);<z>
;<z>
.start();<z>
, _watcherInstantMessenger, 60000, 30000);<z>
);<z>
;<z>
e) {<z>
, e);<z>
{<z>
{<z>
EObject eObject = (EObject)object;<z>
!= null) {<z>
eObject.eClass())) {<z>
UMLPackage.Literals.INSTANCE_SPECIFICATION);<z>
) || ite.hasChildren(object);<z>
;<z>
SliceOperation operation) {<z>
.hasCnt())<z>
(operation) {<z>
ADD:<z>
() : source.getCnt());<z>
case COMPLEMENT:<z>
: -source.getCnt());<z>
) {<z>
attributes;<z>
(final URLSegment segment, final VisitationArg arg) {<z>
'>');<z>
return super.visitURLSegment(segment, arg);<z>
(PortletRequest portletRequest) {<z>
);<z>
DAOParamUtil.getLike(portletRequest, DESCRIPTION);<z>
getLike(portletRequest, NAME);<z>
.getInteger(portletRequest, TYPE);<z>
(StringTokenizer st) {<z>
().intern();<z>
0);<z>
), iFromYear);<z>
iToYear < iFromYear) {<z>
);<z>
nextToken());<z>
= new DateTimeOfYear(st);<z>
parseTime(st.nextToken());<z>
= parseOptional(st.nextToken());<z>
,<z>
result)<z>
result != null)<z>
result.getConnection().getErrorMessage();<z>
;<z>
) {<z>
toString(), ex);<z>
;<z>
(Expr arg, boolean any) throws ExprException {<z>
arg instanceof ExprEvaluatable) {<z>
).evaluate();<z>
arg instanceof ExprDouble || arg instanceof ExprInteger) {<z>
;<z>
ExprArray) {<z>
;<z>
arg;<z>
int rows = arr.rows();<z>
arr.columns();<z>
< rows; i++) {<z>
; j++) {<z>
), any);<z>
count;<z>
else {<z>
) {<z>
ExprBoolean ||<z>
)<z>
1;<z>
;<z>
String name, Object[] args )<z>
name );<z>
!= null )<z>
( context, args );<z>
return null;<z>
getPreviousMonthLastDayStr(){<z>
();<z>
getPreviousMonth(currDate);<z>
previousMonth));<z>
int visit(IASTDeclaration declaration) {<z>
();<z>
) {<z>
equals(fFileName)) {<z>
PROCESS_SKIP;<z>
offset= loc.getNodeOffset();<z>
{<z>
;<z>
PROCESS_CONTINUE;<z>
() {<z>
) == 0) {<z>
;<z>
1);<z>
y, int modifiers) {<z>
true;<z>
{<z>
{<z>
:<z>
SWT.MouseMove:<z>
: {<z>
true;<z>
: {<z>
return true;<z>
Event ();<z>
button) {<z>
break;<z>
= 3; break;<z>
;<z>
event.button = 4; break;<z>
5: event.button = 5; break;<z>
.x = x;<z>
y = y;<z>
;<z>
detail = detail;<z>
chord, modifiers);<z>
{<z>
event);<z>
if (isDisposed ()) return false;<z>
else {<z>
;<z>
return event.doit;<z>
(Criteria criteria)<z>
== null)<z>
if (isNew())<z>
new ArrayList();<z>
NewsletterPeer.REL_PROJECT_ID, getProjectId());<z>
NewsletterPeer.doSelectJoinCustomerCategory(criteria);<z>
NewsletterPeer.REL_PROJECT_ID, getProjectId());<z>
!lastNewslettersRelatedByRelProjectIdCriteria.equals(criteria))<z>
);<z>
= criteria;<z>
;<z>
public ExpandoValue findByPrimaryKey(long valueId)<z>
{<z>
expandoValue = fetchByPrimaryKey(valueId);<z>
) {<z>
{<z>
_NO_SUCH_ENTITY_WITH_PRIMARY_KEY + valueId);<z>
new NoSuchValueException(_NO_SUCH_ENTITY_WITH_PRIMARY_KEY +<z>
);<z>
;<z>
() throws IOException {<z>
;<z>
WritableRaster raster = null;<z>
== null) {<z>
(<z>
sampleModel.createCompatibleSampleModel(destinationRegion.x +<z>
destinationRegion.width,<z>
.y +<z>
.height),<z>
));<z>
0, 0);<z>
raster);<z>
;<z>
getErrorMessage()<z>
oldEntries.length == 1 ? BrowserCoreMessages.jobs__move_entry_error_1<z>
: BrowserCoreMessages.jobs__move_entry_error_n;<z>
JadeParser.program_return program() throws RecognitionException {<z>
(new program_scope());<z>
();<z>
);<z>
)).globals = new ArrayList();<z>
);<z>
cnt1=0;<z>
alt1=2;<z>
.LA(1);<z>
LA1_0==PIPE) ) {<z>
=1;<z>
switch (alt1) {<z>
1 :<z>
(FOLLOW_declaration_in_program45);<z>
);<z>
state._fsp--;<z>
cnt1 >= 1 ) break loop1;<z>
=<z>
;<z>
;<z>
cnt1++;<z>
;<z>
getInstanceOf("program",<z>
)).functions));<z>
-1);<z>
RecognitionException re) {<z>
(re);<z>
re);<z>
);<z>
;<z>
(<z>
,<z>
.protobuf.ExtensionRegistryLite extensionRegistry)<z>
.io.IOException {<z>
.protobuf.UnknownFieldSet.Builder unknownFields =<z>
google.protobuf.UnknownFieldSet.newBuilder(<z>
;<z>
while (true) {<z>
readTag();<z>
{<z>
case 0:<z>
);<z>
;<z>
;<z>
: {<z>
unknownFields,<z>
tag)) {<z>
;<z>
;<z>
this;<z>
case 8: {<z>
bitField0_ |= 0x00000001;<z>
readInt64();<z>
{<z>
0x00000002;<z>
;<z>
{<z>
);<z>
if (hasProperties()) {<z>
());<z>
(subBuilder, extensionRegistry);<z>
buildPartial());<z>
(CollidableObject o) {<z>
{<z>
if (obj instanceof ConcreteCollidableObject){<z>
(obj)){<z>
true;<z>
false;<z>
rankingListVisible) {<z>
== rankingListVisible) {<z>
boolean old = this.rankingListVisible;<z>
rankingListVisible;<z>
old, rankingListVisible);<z>
{<z>
com.objectfabric.Transaction.getCurrent();<z>
inner = startRead_objectfabric(outer);<z>
, INT294_INDEX);<z>
;<z>
endRead_objectfabric(outer, inner);<z>
return value;<z>
) {<z>
, "[setProgressBarIndeterminate] indeterminate: " + indeterminate);<z>
setProgressBarIndeterminate(indeterminate);<z>
.Expr maps) {<z>
.make(<z>
});<z>
IOException {<z>
data == null)<z>
new IOException("No data.");<z>
;<z>
VehicleEntityCollisionEvent event) {<z>
plugin.cancelEvent(event);<z>
plugin.debugMessage(event);<z>
godMode(event);<z>
) throws IOException,<z>
);<z>
setDeserializationConfig(ctxt.getConfig());<z>
jp.setCodec(mapper);<z>
(jp.hasCurrentToken()) {<z>
JsonNode node = jp.readValueAsTree();<z>
JsonNode dataNode = node.get("data");<z>
(dataNode,<z>
<List<Reference>>() {<z>
;<z>
.get("count");<z>
: 0;<z>
Reference>(commentsList, referenceCount);<z>
;<z>
.List findAll () {<z>
Session s = null;<z>
s = getSession();<z>
findAll(s);<z>
;<z>
void update(float deltaTime) {<z>
addGameObjects();<z>
);<z>
objects) {<z>
go.update(deltaTime);<z>
{<z>
0;<z>
= 0;<z>
for (Individual indiv : rs.population) {<z>
i];<z>
)<z>
(thresholdSeconds - t);<z>
i++;<z>
return aggregate;<z>
fileName, IOContext context) throws IOException {<z>
createOutput(fileName, context);<z>
false;<z>
(baseBlockSize);<z>
(out, 2*baseBlockSize) {<z>
int pendingCount;<z>
+2*baseBlockSize];<z>
value) throws IOException {<z>
= value;<z>
baseBlockSize;<z>
if (pendingCount == flushAt+1) {<z>
flushAt;i++) {<z>
writeVInt(buffer[i]);<z>
flushAt];<z>
1;<z>
;<z>
{<z>
0;<z>
success = true;<z>
;<z>
{<z>
{<z>
.closeWhileHandlingException(out);<z>
, Type to) {<z>
)) return true;<z>
return true;<z>
)) return false;<z>
if (from instanceof BasicType) {<z>
!(to instanceof BasicType)) return false;<z>
true;<z>
)) {<z>
.T_BOOLEAN:<z>
) == Constants.T_CHAR ||<z>
() == Constants.T_SHORT ||<z>
to.getType() == Constants.T_INT;<z>
T_CHAR:<z>
) == Constants.T_SHORT ||<z>
.getType() == Constants.T_INT;<z>
T_SHORT:<z>
;<z>
false;<z>
ReferenceType) {<z>
);<z>
(ClassNotFoundException e) {<z>
from+" to "+to, e);<z>
;<z>
void initializeImageRegistry() {<z>
, "icons/logo_b.gif");<z>
);<z>
;<z>
;<z>
registerImage(IMG_ICON_MOTION_WIZ, "icons/icon_motion_wiz.gif");<z>
);<z>
.getExtensionRegistry();<z>
= reg<z>
"de.bmotionstudio.gef.editor.registerImages");<z>
)) {<z>
: extension<z>
)) {<z>
configurationElement.getName())) {<z>
= (IBMotionStudioImageRegistry) configurationElement<z>
("class");<z>
.registerImages();<z>
e) {<z>
.printStackTrace();<z>
;<z>
throws RecognitionException {<z>
);<z>
;<z>
(FollowSets010.FOLLOW_ruleComponentImplementationReference_in_rule__ThreadGroupSubcomponent__ImplementationReferenceAssignment_4_1_2_1258241);<z>
);<z>
--;<z>
().getImplementationReferenceComponentImplementationReferenceParserRuleCall_4_1_2_1_0());<z>
) {<z>
);<z>
recover(input,re);<z>
restoreStackSize(stackSize);<z>
AttachProvider provider, String id)<z>
.provider = provider;<z>
id;<z>
{<z>
;<z>
);<z>
(rootPath, newRoot);<z>
);<z>
ParseException {<z>
;<z>
= new ArrayList();<z>
);<z>
.add( c1 );<z>
(true) {<z>
:jj_ntk) {<z>
COMMA:<z>
] = jj_gen;<z>
;<z>
;<z>
orderByColumn();<z>
c1 );<z>
(true) return obList;}<z>
("Missing return statement in function");<z>
.INodeDir<AbstractFileSystem> dir,<z>
URI uri)<z>
throws URISyntaxException {<z>
FsConstants.VIEWFS_SCHEME, false, -1);<z>
dir;<z>
creationTime = cTime;<z>
.ugi = ugi;<z>
;<z>
) {<z>
(API_KEY);<z>
Feed feed = pachubeClient.getFeed(feedId);<z>
(feed.getId(), "1");<z>
println(data.getBody());<z>
catch (PachubeException e) {<z>
());<z>
ThreadPool threadPool, MaskGen maskGen, int bufferSize)<z>
== null)<z>
QueuedThreadPool();<z>
;<z>
(_threadPool);<z>
_buffers = new WebSocketBuffers(bufferSize);<z>
_buffers);<z>
= maskGen;<z>
;<z>
= new WebSocketClientSelector();<z>
);<z>
;<z>
{<z>
);<z>
new SVNAdminEventAdapter() {<z>
) throws SVNCancelException {<z>
();<z>
double progress) throws SVNException {<z>
!= null) {<z>
);<z>
;<z>
;<z>
(SVNException e) {<z>
;<z>
} finally {<z>
();<z>
{<z>
get("<manifest>");<z>
(manifest == null) {<z>
"";<z>
tree : manifest.getChildren()) {<z>
0) {<z>
.getName();<z>
;<z>
() {<z>
extractComposite.getArgumentsTable() != null) {<z>
getDeducer().getParameters());<z>
) throws Exception {<z>
session = sess;<z>
), pass,<z>
version));<z>
) {<z>
{<z>
(this.size - 1);<z>
null;<z>
void addContent(T content) {<z>
content == null)<z>
;<z>
, content);<z>
getLanguage());<z>
(TypeCode typeCode,<z>
)<z>
BadKind,<z>
id());<z>
name());<z>
);<z>
) {<z>
= new ArrayList<Meme>();<z>
; i++) {<z>
++], MEMES[i]));<z>
return memes;<z>
int msgno) throws ProtocolException {<z>
= null;<z>
"FLAGS");<z>
length; i < len; i++) {<z>
i] == null ||<z>
instanceof FetchResponse) ||<z>
msgno)<z>
;<z>
.class)) != null) {<z>
r[i] = null;<z>
r);<z>
-1]);<z>
return flags;<z>
serverName, String portNum)<z>
-1;<z>
);<z>
)<z>
(SYSTEM_PROPERTY_REGEX);<z>
.matcher(portNum);<z>
if (matcher.find())<z>
String propertyName = matcher.group(1);<z>
, propertyName);<z>
;<z>
return portValue;<z>
{<z>
{<z>
;<z>
(WUResultView) obj;<z>
) {<z>
return false;<z>
{<z>
;<z>
(__equalsCalc != null) {<z>
return (__equalsCalc == obj);<z>
;<z>
boolean _equals;<z>
&&<z>
) ||<z>
&&<z>
getWuid()))) &&<z>
||<z>
null &&<z>
getViewName()))) &&<z>
getSequence()==null) ||<z>
.sequence!=null &&<z>
other.getSequence()))) &&<z>
)==null) ||<z>
!=null &&<z>
));<z>
= null;<z>
return _equals;<z>
int node) {<z>
) {<z>
;<z>
DTMManager.IDENT_DTM_NODE_BITS;<z>
!= dom) {<z>
_type == NO_TYPE) {<z>
dom].getAxisIterator(_axis);<z>
.CHILD) {<z>
_type);<z>
else {<z>
;<z>
;<z>
setStartNode(node);<z>
;<z>
text, int nodeType,<z>
) {<z>
;<z>
throw new IllegalArgumentException("QName text arg cannot be null!");<z>
= true;<z>
.textNS =<z>
.getPrefix());<z>
text.getLocalPart();<z>
nodeType = nodeType;<z>
)<z>
;<z>
width = 0;<z>
;<z>
result, MessageHeaders requestHeaders) {<z>
result)) {<z>
(Iterable<?>) result) {<z>
);<z>
!= null) {<z>
produceReply(result, requestHeaders);<z>
TransactionalEditingDomain domain, String label, String dropLocation) {<z>
label, null);<z>
this.adaptable = adaptable;<z>
this.adaptableForDropped = adaptableForDropped;<z>
= prefHints;<z>
adaptable, prefHints);<z>
viewDescriptor));<z>
dropLocation;<z>
parameter) {<z>
()))<z>
valueOf(parameter);<z>
(parameter instanceof String || parameter instanceof Enum)<z>
"\"";<z>
else if (parameter instanceof ObjectId)<z>
toString() + "\"}";<z>
marshall(parameter);<z>
{<z>
;<z>
typedParser.entryRulePlans();<z>
return typedParser.getFollowElements();<z>
) {<z>
RuntimeException(ex);<z>
boolean canGetInstanceInfo() {<z>
.jdwpMajor < 1 ||<z>
jdwpMinor < 6) {<z>
false;<z>
);<z>
return hasNewCapabilities() &&<z>
().canGetInstanceInfo;<z>
{<z>
String temp=chaine;<z>
"%2F","/");<z>
"(");<z>
,")");<z>
temp3 ;<z>
) {<z>
++j) {<z>
]==0.0)<z>
return false;<z>
return true;<z>
{<z>
beanval;<z>
"EquationBean: \nequation: "+equation);<z>
return beanval;<z>
, double[] coeff){<z>
;<z>
{<z>
coeff[0]<z>
val<z>
(val,2));<z>
;<z>
Context context)<z>
, InterruptedException {<z>
[] keyb = key.get();<z>
> map1 = values.getMap();<z>
StringBuilder();<z>
> e1 : map1.entrySet()) {<z>
getKey());<z>
).append(" => [");<z>
boolean e2_first = true;<z>
().entrySet()) {<z>
) {<z>
;<z>
sb.append(", ");<z>
);<z>
).append(" => [");<z>
{<z>
);<z>
col.equals("sha1")) {<z>
);<z>
.equals("filesize")) {<z>
()));<z>
sb.append('1');<z>
);<z>
;<z>
));<z>
, IProgressMonitor pm) throws CoreException {<z>
getSelectedElementList(selection);<z>
null || elements.isEmpty())<z>
0];<z>
));<z>
new ArrayList<NonNLSElement>();<z>
{<z>
.next();<z>
() == IJavaElement.PACKAGE_FRAGMENT)<z>
));<z>
element.getElementType() == IJavaElement.PACKAGE_FRAGMENT_ROOT)<z>
pm, 1)));<z>
() == IJavaElement.JAVA_PROJECT)<z>
;<z>
size()]);<z>
finally{<z>
.done();<z>
mdl)<z>
;<z>
int iter;<z>
< maxIter; iter++) {<z>
("***AsyncLoopyBP iteration "+iter);<z>
propagate (mdl);<z>
if (hasConverged ()) break;<z>
);<z>
;<z>
maxIter) {<z>
maxIter+" iterations.");<z>
{<z>
iterUsed++;<z>
+" iterations");<z>
doneWithGraph (mdl);<z>
save()<z>
();<z>
;<z>
);<z>
0; i < nbMaxEntry; i++)<z>
if (i < list.size())<z>
get(i));<z>
);<z>
) {<z>
();<z>
myName;<z>
.myId = myId;<z>
return result;<z>
, int num){<z>
+num+1];<z>
m;<z>
num-degree);<z>
]=0;<z>
inc;<z>
knots[k]=1.;<z>
knots;<z>
boolean isMms) {<z>
number : mTokenizer.getNumbers()) {<z>
, isMms)) {<z>
{<z>
return true;<z>
MessageUtils.isAlias(number)) {<z>
return true;<z>
;<z>
void resetStat() {<z>
0;<z>
0;<z>
0;<z>
XmlPullParser parser) throws XmlPullParserException, IOException {<z>
new GeoLoc();<z>
START_TAG) {<z>
final String tag = parser.getName();<z>
"description")) {<z>
.getTagText(parser);<z>
(tag.equals("text")) {<z>
(parser);<z>
)) {<z>
parser);<z>
.equals("lon")) {<z>
(parser);<z>
.equals("accuracy")) {<z>
parser);<z>
(accuracyStr);<z>
)) {<z>
getTagText(parser);<z>
(uri.startsWith("http://juick.com/places/")) {<z>
));<z>
{<z>
(parser);<z>
;<z>
hasNoExtraProperties(T item, Description mismatchDescription) {<z>
, Object.class));<z>
);<z>
actualPropertyNames.isEmpty()) {<z>
"has extra properties called " + actualPropertyNames);<z>
return false;<z>
;<z>
setValueDirectly(Object value) throws CayenneRuntimeException {<z>
old = this.objectSet;<z>
== null || value instanceof Set) {<z>
);<z>
if (value instanceof Collection) {<z>
HashSet((Collection) value));<z>
throw new CayenneRuntimeException("Value must be a list, got: "<z>
.getName());<z>
;<z>
private void makeHighlightingActions()<z>
)<z>
void run()<z>
RelationshipType> relTypes = getCurrentSelectedRelTypes();<z>
for ( RelationshipType relType : relTypes )<z>
relType );<z>
;<z>
.setEnabled( true );<z>
;<z>
()<z>
run()<z>
;<z>
: relTypes )<z>
highlightNodes( relType, Direction.INCOMING );<z>
setEnabled( true );<z>
markIncomingAction );<z>
markIncomingAction.setEnabled( false );<z>
new Action()<z>
run()<z>
getCurrentSelectedRelTypes();<z>
)<z>
highlightNodes( relType, Direction.OUTGOING );<z>
;<z>
markOutgoingAction );<z>
.setEnabled( false );<z>
Action()<z>
)<z>
graphLabelProvider.clearMarkedNodes();<z>
;<z>
refresh( true );<z>
setEnabled( false );<z>
);<z>
HIGHLIGHT_CLEAR.initialize( clearMarkedAction );<z>
.setEnabled( false );<z>
observeChangesOnTheValueModel()<z>
new PresentationModelPropertyChangeListener() {<z>
void propertyChanged()<z>
propertyChangeEventOccurred = true;<z>
();<z>
;<z>
throws IOException {<z>
();<z>
c);<z>
return c;<z>
@NotNull WSDLPort port) {<z>
isOneWay==null) {<z>
WSDLBoundOperation op = getOperation(port);<z>
)<z>
getOperation().isOneWay();<z>
false;<z>
isOneWay;<z>
x)<z>
throws JSONException {<z>
;<z>
();<z>
;<z>
'[') {<z>
']';<z>
c == '(') {<z>
')';<z>
} else {<z>
x.syntaxError("A JSONArray text must start with '['");<z>
x.nextClean() == ']') {<z>
;<z>
) {<z>
x.nextClean() == ',') {<z>
.back();<z>
.m_myArrayList.add(null);<z>
{<z>
.back();<z>
(x.nextValue());<z>
.nextClean();<z>
) {<z>
:<z>
case ',':<z>
== ']') {<z>
);<z>
']':<z>
:<z>
q != c) {<z>
new Character(q) + "'");<z>
("Expected a ',' or ']'");<z>
Class type) {<z>
== null) {<z>
InitializationException("No "<z>
AttributeMapper.class.getName()<z>
;<z>
.addAttributeFor(fieldName, type);<z>
) {<z>
if(locationCheckBox != null) {<z>
;<z>
().getSession();<z>
if(session != null) {<z>
user = session.getUserSettings();<z>
(user != null) {<z>
.isNotificationsAvailable(getContext());<z>
);<z>
getCategoryAttributes(KXmlParser parser) throws Exception {<z>
);<z>
;<z>
(namespace, "id");<z>
, "condition");<z>
) > 0 ) {<z>
condition );<z>
} else {<z>
= new Category( name, id );<z>
unregister(String[] paths)<z>
)<z>
);<z>
private String trimTZ(String toParse) {<z>
).matches())<z>
) + 'Z';<z>
return toParse;<z>
void init( String title, Icon icon ){<z>
contentLayout = new CardLayout(){<z>
( Container parent ){<z>
() ) {<z>
state );<z>
== null ) {<z>
10, 10 );<z>
getComponent().getPreferredSize();<z>
( Container parent ){<z>
( parent.getTreeLock() ) {<z>
= getNearestComponent( state );<z>
{<z>
return new Dimension( 10, 10 );<z>
;<z>
( Container parent ){<z>
.getTreeLock() ) {<z>
getNearestComponent( state );<z>
current == null ) {<z>
new Dimension( 10, 10 );<z>
.getComponent().getMaximumSize();<z>
new JPanel( contentLayout );<z>
;<z>
this ){<z>
gui.Orientation current ){<z>
current;<z>
){<z>
if( item != null ){<z>
.setOrientation( current );<z>
);<z>
);<z>
getCommand( EditToolHandler handler, MapMouseEvent e,<z>
eventType ) {<z>
e, eventType)){<z>
+<z>
"should not be ran");<z>
SelectHoleCommand(handler, e);<z>
() {<z>
if (properties == null) {<z>
(project);<z>
e) {<z>
throw new RuntimeException(<z>
CoreException(<z>
project,<z>
properties;<z>
(Object v) throws Exception {<z>
== null) {<z>
null;<z>
);<z>
(ClassCastException e) {<z>
return null;<z>
.Location2D bounds, long pauseTime,<z>
minspeed, float maxspeed)<z>
precision, minspeed, maxspeed);<z>
, Properties properties, BuildContext context) {<z>
= directoryProviderName;<z>
context = context;<z>
DEFAULT_INDEXESMETADATA_CACHENAME );<z>
= properties.getProperty( "data_cachename", DEFAULT_INDEXESDATA_CACHENAME );<z>
"locking_cachename", DEFAULT_LOCKING_CACHENAME );<z>
chunkSize = ConfigurationParseHelper.getIntValue(<z>
InfinispanDirectory.DEFAULT_BUFFER_SIZE<z>
right) {<z>
(n.isInstanceOf());<z>
)<z>
) {<z>
= null;<z>
if (NodeUtil.isImmutableValue(left)) {<z>
();<z>
else if (right.isName()<z>
())) {<z>
();<z>
if (replacementNode != null) {<z>
n, replacementNode);<z>
;<z>
replacementNode;<z>
return n;<z>
boolean verifyMessageType(ReplicationMessage message,<z>
expectedType)<z>
{<z>
{<z>
return true;<z>
.TYPE_ERROR) {<z>
)message.getMessage();<z>
.<z>
exception);<z>
{<z>
newException<z>
REPLICATION_UNEXPECTED_EXCEPTION);<z>
Object obj )<z>
( this == obj )<z>
;<z>
obj == null )<z>
false;<z>
.getClass() )<z>
false;<z>
obj;<z>
( id != other.id )<z>
;<z>
true;<z>
SelectItem[] getGenderItems() {<z>
.values().length];<z>
= 0;<z>
: Gender.values()) {<z>
, g.getLabel());<z>
items;<z>
final ConnectedMessageChannel channel) {<z>
ByteBuffer> pooledReceiveBuffer = connection.allocate();<z>
);<z>
int res;<z>
receive(receiveBuffer);<z>
(IOException e) {<z>
connection.handleException(e);<z>
(res == -1) {<z>
));<z>
0) {<z>
, receiveBuffer);<z>
();<z>
msgType = receiveBuffer.get();<z>
) {<z>
: {<z>
client.trace("Client received connection alive");<z>
();<z>
.CONNECTION_ALIVE_ACK: {<z>
.trace("Client received connection alive ack");<z>
case Protocol.CONNECTION_CLOSE: {<z>
trace("Client received connection close request");<z>
connection.handlePreAuthCloseRequest();<z>
case Protocol.STARTTLS: {<z>
trace("Client received STARTTLS response");<z>
= channel;<z>
;;) {<z>
c instanceof SslChannel) {<z>
();<z>
e) {<z>
connection.handleException(e, false);<z>
(remoteServerName);<z>
WrappedChannel) {<z>
?>)c).getChannel();<z>
} else {<z>
);<z>
: {<z>
);<z>
handleException(client.invalidMessage(connection));<z>
} catch (BufferUnderflowException e) {<z>
handleException(client.invalidMessage(connection));<z>
e) {<z>
));<z>
finally {<z>
);<z>
private void updateOutOfBoundsTexture()<z>
= DETAILVALUEFONT;<z>
TYPE_INT_ARGB);<z>
.createGraphics();<z>
);<z>
= "You are out of the existing map area.";<z>
String message2;<z>
(key != Keyboard.KEY_NONE)<z>
.JUMP_NEAREST, key) + "' to jump to the nearest valid chunk.";<z>
JUMP);<z>
(key != Keyboard.KEY_NONE)<z>
+ "' to jump to any arbitrary location.";<z>
= "Assign a key to the 'Jump Nearest' action for an easy way to jump to the nearest valid chunk.";<z>
());<z>
message2, g2d.getFontRenderContext());<z>
+ 15;<z>
outOfRangeWidth = bounds2.getWidth() + 10;<z>
;<z>
, 100, 100));<z>
() + 5));<z>
10));<z>
;<z>
;<z>
)<z>
e.printStackTrace();<z>
= false;<z>
throws RecognitionException {<z>
), 0) ) {<z>
.failed=true; return ;}<z>
new FailedPredicateException(input, "synpred246_InternalXcore", "getUnorderedGroupHelper().canSelect(grammarAccess.getXReferenceAccess().getUnorderedGroup_9(), 0)");<z>
;<z>
.backtracking==0 ) {<z>
.getXReferenceAccess().getGroup_9_0());<z>
;<z>
();<z>
_fsp--;<z>
.failed) return ;<z>
findByUuid_C_Last(String uuid, long companyId,<z>
orderByComparator)<z>
{<z>
fetchByUuid_C_Last(uuid, companyId,<z>
;<z>
!= null) {<z>
;<z>
StringBundler(6);<z>
msg.append(_NO_SUCH_ENTITY_WITH_KEY);<z>
.append("uuid=");<z>
uuid);<z>
;<z>
companyId);<z>
append(StringPool.CLOSE_CURLY_BRACE);<z>
));<z>
int getRealHeight() {<z>
.RSInterface childInterface = getInterfaceInternal();<z>
if (childInterface != null) {<z>
childInterface.getVerticalScrollBarThumbSize();<z>
1;<z>
{<z>
( namespace!=null ) {<z>
( ERR_NAMESPACE_NOT_SUPPROTED );<z>
;<z>
= module.hedgeRules.getOrCreate(label);<z>
);<z>
;<z>
intf,<z>
<?, ?>> adapter) {<z>
= intf;<z>
.adapter = adapter;<z>
) {<z>
{<z>
);<z>
) {<z>
return s;<z>
;<z>
void registerSubtasks( )<z>
{<z>
, "Chart.Axis.X Axis"<z>
} );<z>
{<z>
} );<z>
.put( ANCILLARY_AXIS_SHEET_COLLECTION, new String[]{<z>
);<z>
.put( ORTHOGONAL_SERIES_SHEET_COLLECTION_FOR_CHARTS_WITH_AXES,<z>
]{<z>
;<z>
BASE_SERIES_SHEET_COLLECTION_FOR_CHARTS_WITHOUT_AXES,<z>
]{<z>
} );<z>
put( ORTHOGONAL_SERIES_SHEET_COLLECTION_FOR_CHARTS_WITHOUT_AXES,<z>
]{<z>
;<z>
put( DIAL_SERIES_SHEET_COLLECTION, new String[]{<z>
;<z>
{<z>
.getData(i, j, k);<z>
j, k);<z>
= true;<z>
) {<z>
.id);<z>
else {<z>
, Block.FURNACE.id);<z>
;<z>
);<z>
tileentity != null) {<z>
;<z>
j, k, tileentity);<z>
TemplateStore(IPreferenceStore store, String key) {<z>
.isNotNull(store);<z>
key);<z>
store;<z>
fKey= key;<z>
{<z>
;<z>
/ (float) badgeY;<z>
ratioY);<z>
;<z>
{<z>
.length()==0)<z>
new IllegalArgumentException("Need to specify name");<z>
))<z>
);<z>
(name.toLowerCase()))<z>
("Name is reserved: " + name);<z>
&& category!= TypeCategory.HasProperties)<z>
IllegalArgumentException("Can only specify signatures for labeled edge types");<z>
(keysig);<z>
);<z>
newHashSet(keysig);<z>
intersectSign.retainAll(compactsig);<z>
)<z>
IllegalArgumentException("The primary key and the compact signature contain identical types: " + intersectSign);<z>
(Object obj) {<z>
{<z>
;<z>
length) {<z>
++) {<z>
.args[i])) {<z>
false;<z>
;<z>
;<z>
node) {<z>
);<z>
if (shouldContinue) {<z>
);<z>
static String toCanonicalForm(final Artifact artifact) {<z>
);<z>
()).append(":");<z>
":");<z>
getExtension();<z>
;<z>
artifact.getClassifier();<z>
) != 0) {<z>
);<z>
());<z>
return sb.toString();<z>
setSavePluginsAll() {<z>
!savePluginFolderAll;<z>
);<z>
);<z>
private VMAccount(final UsernamePassword iAuth)<z>
= iAuth;<z>
;<z>
.user;<z>
= null;<z>
;<z>
minAmountDue = null;<z>
dueDate = null;<z>
null;<z>
null;<z>
{<z>
) {<z>
.close();<z>
URI uri) {<z>
result = new BPMResourceImpl(uri);<z>
TRUE);<z>
);<z>
TRUE);<z>
(XMLResource.OPTION_USE_ENCODED_ATTRIBUTE_STYLE, Boolean.TRUE);<z>
.OPTION_USE_ENCODED_ATTRIBUTE_STYLE, Boolean.TRUE);<z>
.TRUE);<z>
result;<z>
element, TokenConsumer consumer) {<z>
((PsiLanguageInjectionHost)element)) {<z>
;<z>
DriverException {<z>
"Execute SQL Statement" + '\n' + sql);<z>
;<z>
void setupButtons(){<z>
id.enable_throttle_button);<z>
) == null){<z>
setText(ENABLE);<z>
else {<z>
;<z>
{<z>
;<z>
void onClick(View v) {<z>
){<z>
= new ConnectionThrottle();<z>
setMinConnections("25");<z>
"100");<z>
;<z>
setRateInterval("5");<z>
);<z>
);<z>
(true);<z>
);<z>
);<z>
;<z>
} else {<z>
;<z>
.setEnabled(false);<z>
false);<z>
.setEnabled(false);<z>
;<z>
(ENABLE);<z>
});<z>
findViewById(R.id.save_throttle_button);<z>
submit.setOnClickListener(new OnClickListener() {<z>
id.enable_throttle_button);<z>
void onClick(View v) {<z>
connectionThrottle = new ConnectionThrottle();<z>
));<z>
().toString());<z>
;<z>
.getText().toString());<z>
toString().equals(DISABLE)){<z>
){<z>
.execute();<z>
else {<z>
execute();<z>
;<z>
() {<z>
.mode == Play.Mode.DEV) {<z>
&& !Play.runingInTestMode()) {<z>
);<z>
.loadModels("test-datas.yml");<z>
Continuation command) {<z>
if (exists(id))<z>
put(id, metadata);<z>
(id)));<z>
)<z>
i != null;<z>
) ];<z>
dimensions( dims );<z>
1;<z>
l : dims )<z>
;<z>
;<z>
Collection<AssignableNode> concerningAssignments) {<z>
= inlinedClassProvider.getMethodsWithNameConflict(inlinedClassPart);<z>
.keySet()){<z>
(currentKey);<z>
){<z>
getName();<z>
if(currentAssignment instanceof InstAsgnNode){<z>
().getMethods();<z>
: targetClassMethods){<z>
, concerningVarName);<z>
(currentAssignment instanceof LocalAsgnNode){<z>
();<z>
currentMethod, targetConstructor, concerningVarName);<z>
{<z>
, "onComplete action already configured.");<z>
;<z>
();<z>
String value)<z>
AttributeBadValueException {<z>
+<z>
);<z>
int read() throws IOException {<z>
= read(oneBytebuff, 0, 1);<z>
(value < 0) {<z>
value;<z>
} else {<z>
0xFF & oneBytebuff[0];<z>
public Unit getYDisplayUnit() {<z>
null;<z>
yAxisMap != null) {<z>
= yAxisMap.getOverrideUnit();<z>
) {<z>
();<z>
return u;<z>
, int endOffset) {<z>
StdLanguages.JAVA)) return null;<z>
PsiExpression.class);<z>
0) {<z>
JAVA);<z>
PsiJavaToken) {<z>
PsiJavaToken token = (PsiJavaToken)element2;<z>
IElementType tokenType = token.getTokenType();<z>
.equals(JavaTokenType.SEMICOLON)) {<z>
(), PsiExpression.class);<z>
null;<z>
return expression;<z>
() {<z>
doctors = doctorService.retrieveDoctors();<z>
(Doctor doctor : doctors) {<z>
addDoctor(doctor);<z>
new UpdateAppointmentListCommand(controller.getView(),<z>
.getSelectedDoctor())));<z>
) {<z>
(max_block_times == null)<z>
return 0;<z>
=null;<z>
()) {<z>
);<z>
)<z>
retval != null? retval : 0;<z>
firstToken, Token lastToken) {<z>
super(new Property[] {<z>
("javacodeProduction", javacodeProduction)<z>
}, firstToken, lastToken);<z>
{<z>
ClickHandler() {<z>
(ClickEvent event) {<z>
;<z>
.fireEvent(new AutoReloadEvent(<z>
, widget.isReloading(),<z>
);<z>
(toggleHandler);<z>
.addClickHandler(toggleHandler);<z>
ChangeHandler() {<z>
{<z>
.fireEvent(new AutoReloadEvent(<z>
, widget<z>
, getPeriodOption()));<z>
fireTimeCount();<z>
);<z>
(ComponentContext context) {<z>
.loadResourceThemes();<z>
BundleContext bundleContext = context.getBundleContext();<z>
.class.getName(),<z>
new Hashtable());<z>
("******* Multitenancy Theme Config bundle is activated ******* ");<z>
(Exception e) {<z>
error("******* Multitenancy Theme Config bundle failed activating ****", e);<z>
rule__XEqualityExpression__Group_1__0__Impl() throws RecognitionException {<z>
();<z>
( state.backtracking==0 ) {<z>
).getGroup_1_0());<z>
FOLLOW_rule__XEqualityExpression__Group_1_0__0_in_rule__XEqualityExpression__Group_1__0__Impl12553);<z>
;<z>
_fsp--;<z>
;<z>
{<z>
());<z>
) {<z>
reportError(re);<z>
re);<z>
);<z>
userSession, HttpServletRequest request) {<z>
findId(request));<z>
currentUser = userSession.getUser();<z>
));<z>
)<z>
float c=0.0f;<z>
;<z>
)) * 4;<z>
ouputRaf.seek(bp);<z>
();<z>
(IOException e) {}<z>
;<z>
void init() {<z>
map.generate();<z>
);<z>
new Dimension(500,500));<z>
addMouseListener(this);<z>
> getPackageImport_4019IncomingLinks(View view) {<z>
PackageImport)view.getElement();<z>
());<z>
<UMLLinkDescriptor>();<z>
crossReferences));<z>
addAll(getIncomingFeatureModelFacetLinks_Comment_AnnotatedElement_4014(modelElement, crossReferences));<z>
return result;<z>
buffer, int keyCode, KeyEvent event) {<z>
) {<z>
buffer);<z>
);<z>
return true;<z>
;<z>
String args[]) throws IOException {<z>
new A();<z>
B();<z>
);<z>
= new File("tmp.ser");<z>
=<z>
;<z>
);<z>
writeObject(b);<z>
writeObject(c);<z>
A();<z>
= new B();<z>
);<z>
(a);<z>
(b);<z>
c);<z>
out.close();<z>
) {<z>
= getReader();<z>
.put(0, NULL_LABEL);<z>
header.getLabelStart();<z>
.getLabelSize();<z>
reader.position(start + mult);<z>
= mult;<z>
off++) {<z>
= reader.get();<z>
{<z>
;<z>
(mult - 1)) != 0) {<z>
;<z>
(labelOffset <= off) {<z>
labelOffset++;<z>
else {<z>
.get();<z>
++;<z>
labelOffset++;<z>
) {<z>
if (editMode == null) {<z>
getFieldType() == FieldDefinition.FIELD_TYPE_ROLE) {<z>
RoleField)fieldDefinition;<z>
.getEditMode();<z>
;<z>
boolean recursive) {<z>
>();<z>
.getOntProperty(propertyUri);<z>
return new ArrayList<String>();<z>
);<z>
);<z>
v) {<z>
c : MultiplicityEnum.values()) {<z>
) {<z>
c;<z>
());<z>
getTokenStream() {<z>
.isEmpty()) {<z>
throw new IllegalStateException("Unable to return a TokenStream when there are problems with the lex");<z>
;<z>
() {<z>
) {<z>
jContentPane = new JPanel();<z>
jContentPane.setLayout(new BorderLayout());<z>
.BorderLayout.NORTH);<z>
CENTER);<z>
);<z>
jContentPane;<z>
private String getMessage(PointOfFailure failure) {<z>
message = failure.getMessage();<z>
(message)) {<z>
return "";<z>
;<z>
> getAttributes() {<z>
.isEmpty()) {<z>
Start start : Start.values()) {<z>
(start.toString());<z>
return attributes;<z>
> atomList) {<z>
);<z>
atom : atomList ) {<z>
( this );<z>
null )<z>
;<z>
atoms.add( swrlAtom );<z>
;<z>
() {<z>
if (nodeTypeNames == null) {<z>
null;<z>
{<z>
return Collections.unmodifiableSet(nodeTypeNames);<z>
ICharmLearnListener listener) {<z>
group : getAllGroups()) {<z>
addCharmLearnListener(listener);<z>
{<z>
= context;<z>
questions;<z>
getInstance(context);<z>
getAdditionalQa();<z>
PythonGrammar26(boolean generateTree, PythonGrammar26TokenManager tm) {<z>
(generateTree);<z>
;<z>
tm;<z>
();<z>
;<z>
= 0;<z>
; i++)<z>
;<z>
< jj_2_rtns.length; i++)<z>
();<z>
(Object parameter_3, final TypeCheckingContext typeCheckingContext) {<z>
SNode result = null;<z>
_parameterValues_129834374 = new HashSet<SNode>();<z>
null;<z>
GlobalScope.getInstance(), false);<z>
SNode quotedNode1_2 = quotedNode_1;<z>
(SNode) parameter_3);<z>
quotedNode1_2;<z>
result;<z>
{<z>
.getWorkingDirectory("Spoutcraft");<z>
()) {<z>
Utils.getWorkingDirectory();<z>
;<z>
) {<z>
(brokenSpoutcraftDir, correctSpoutcraftDir);<z>
(brokenSpoutcraftDir);<z>
) {<z>
();<z>
ensureAuxiliarInfoIsMutable() {<z>
) == 0x00100000)) {<z>
.DocumentProtos.Auxiliar>(auxiliarInfo_);<z>
bitField0_ |= 0x00100000;<z>
receiver) {<z>
("[(id<JavaObject>) ");<z>
);<z>
" getClass]");<z>
map) {<z>
result = new ServiceComponentAttribs();<z>
;<z>
(COMPONENT_FACTORY);<z>
map.get(COMPONENT_SERVICEFACTORY));<z>
);<z>
get(COMPONENT_ENABLED));<z>
.get(COMPONENT_PROVIDE));<z>
get(COMPONENT_IMPLEMENTATION);<z>
;<z>
: null;<z>
configPolicy;<z>
e) {<z>
configurationPolicy = null;<z>
.get(COMPONENT_ACTIVATE);<z>
deactivate = map.get(COMPONENT_DEACTIVATE);<z>
= map.get(COMPONENT_MODIFIED);<z>
;<z>
) {<z>
();<z>
npw : pointsWorld ) {<z>
.add( npw.getName() );<z>
;<z>
(Object a, Object b) {<z>
(a != null ?<z>
equals(b) :<z>
== b<z>
final AbstractHttpRequest httpRequestData,<z>
HttpMethodBase method) {<z>
requestHeaders = httpRequestData<z>
);<z>
null && !requestHeaders.isEmpty()) {<z>
> keys = requestHeaders.keySet();<z>
for (String key : keys) {<z>
));<z>
, int[] c) {<z>
;<z>
) {<z>
,0,_n-1);<z>
else {<z>
;<z>
int n = c.length;<z>
n];<z>
i<=i1; ++i) {<z>
; ++j) {<z>
c[j]];<z>
b);<z>
createClientDependencyReferencesTable(FormToolkit widgetFactory, Composite parent) {<z>
UmlMessages.SignalEventPropertiesEditionPart_ClientDependencyLabel, new ReferencesTableListener () {<z>
); }<z>
); }<z>
(element, oldIndex, newIndex); }<z>
) { removeFromClientDependency(element); }<z>
}<z>
;<z>
FORM_KIND));<z>
;<z>
addSelectionListener(new SelectionAdapter() {<z>
widgetSelected(SelectionEvent e) {<z>
) instanceof EObject) {<z>
getData()));<z>
);<z>
clientDependencyData = new GridData(GridData.FILL_HORIZONTAL);<z>
= 3;<z>
.clientDependency.setLayoutData(clientDependencyData);<z>
clientDependency.disableMove();<z>
clientDependency);<z>
"eef::AdvancedReferencesTable");<z>
return parent;<z>
?> objectClass) {<z>
{<z>
(objectClass);<z>
{<z>
PropertyUtils.getPropertyDescriptors(objectClass);<z>
Dimension size, final int tabsCount) {<z>
Dimension header = computeHeaderPreferredSize(tabsCount);<z>
top || getTabsPosition() == JBTabsPosition.bottom;<z>
(horizontal) {<z>
height;<z>
width, header.width);<z>
;<z>
;<z>
insets = getLayoutInsets();<z>
left + insets.right + 1;<z>
.top + insets.bottom + 1;<z>
)<z>
.PREF_HTTP_SERVER_ADDRESS));<z>
.PREF_HTTP_SERVER_PORTS));<z>
{<z>
= session;<z>
this.backupDeliverer = packetDeliverer;<z>
;<z>
InnerState innerState)<z>
throws StopRequestException {<z>
.mFilename)) {<z>
LOGV) {<z>
.mId +<z>
+ state.mFilename);<z>
.isFilenameValid(state.mFilename,<z>
getDownloadDataDirectory())) {<z>
.Impl.STATUS_FILE_ERROR,<z>
);<z>
File(state.mFilename);<z>
exists()) {<z>
) {<z>
.mId +<z>
mFilename);<z>
.length();<z>
== 0) {<z>
d(TAG, "setupDestinationFile() found fileLength=0, deleting "<z>
;<z>
f.delete();<z>
state.mFilename = null;<z>
{<z>
+ mInfo.mId +<z>
);<z>
mETag == null && !mInfo.mNoIntegrity) {<z>
(TAG, "setupDestinationFile() unable to resume download, deleting "<z>
;<z>
.delete();<z>
,<z>
"Trying to resume a download that can't be resumed");<z>
} else {<z>
) {<z>
"resuming download for id: " + mInfo.mId +<z>
;<z>
new FileOutputStream(state.mFilename, true);<z>
} catch (FileNotFoundException exc) {<z>
.Impl.STATUS_FILE_ERROR,<z>
.toString(), exc);<z>
.mCurrentBytes = (int) fileLength;<z>
-1) {<z>
.mTotalBytes);<z>
mInfo.mETag;<z>
true;<z>
Constants.LOGV) {<z>
TAG, "resuming download for id: " + mInfo.mId +<z>
", state.mCurrentBytes: " + state.mCurrentBytes +<z>
", and setting mContinuingDownload to true: ");<z>
Impl.DESTINATION_EXTERNAL) {<z>
);<z>
sortOrderings, boolean fetch) {<z>
results;<z>
fetch) {<z>
EOQualifier fullQualifier;<z>
this);<z>
== null) {<z>
fullQualifier = inverseQualifier;<z>
qualifiers = new NSMutableArray<EOQualifier>();<z>
);<z>
(inverseQualifier);<z>
= new EOAndQualifier(qualifiers);<z>
);<z>
();<z>
!= null) {<z>
(results, qualifier);<z>
if (sortOrderings != null) {<z>
);<z>
return results;<z>
() {<z>
) {<z>
!animating;<z>
TasksUiPreferencePage() {<z>
;<z>
());<z>
;<z>
, PropertyDefinition<?> pd) {<z>
;<z>
;<z>
;<z>
Folder folder = null;<z>
= null;<z>
so instanceof Content)<z>
so).getContent(0, 0);<z>
DocumentVersion)<z>
= (DocumentVersion) so;<z>
VersionedDocument)<z>
so;<z>
(so instanceof Folder)<z>
;<z>
instanceof Document)<z>
doc = (Document) so;<z>
) {<z>
return so.getName();<z>
.equals(PropertyIds.OBJECT_ID)) {<z>
getId();<z>
{<z>
);<z>
BASE_TYPE_ID)) {<z>
;<z>
{<z>
);<z>
.CREATION_DATE)) {<z>
return so.getCreatedAt();<z>
{<z>
return so.getModifiedBy();<z>
PropertyIds.LAST_MODIFICATION_DATE)) {<z>
return so.getModifiedAt();<z>
(PropertyIds.CHANGE_TOKEN)) {<z>
getChangeToken();<z>
if (ver != null) {<z>
IS_MAJOR_VERSION)) {<z>
ver.isMajor();<z>
PropertyIds.CHECKIN_COMMENT)) {<z>
);<z>
VERSION_LABEL)) {<z>
();<z>
)) {<z>
? ver.getId() : null;<z>
{<z>
{<z>
verDoc.getId();<z>
propertyId.equals(PropertyIds.IS_VERSION_SERIES_CHECKED_OUT)) {<z>
verDoc.isCheckedOut();<z>
.VERSION_SERIES_CHECKED_OUT_BY)) {<z>
verDoc.getCheckedOutBy();<z>
null != content) {<z>
CONTENT_STREAM_FILE_NAME)) {<z>
return content.getFileName();<z>
(PropertyIds.CONTENT_STREAM_LENGTH)) {<z>
;<z>
) {<z>
);<z>
(folder != null) {<z>
equals(PropertyIds.PARENT_ID)) {<z>
.getParent().getId();<z>
)) {<z>
;<z>
null) {<z>
PropertyIds.IS_IMMUTABLE)) {<z>
return false;<z>
.get(propertyId);<z>
if (null == lVal)<z>
;<z>
Cardinality.SINGLE) {<z>
();<z>
} else {<z>
return lVal.getValues();<z>
public void onDisable() {<z>
unloadAllZones();<z>
;<z>
+ ", by DDoS");<z>
{<z>
] result = new byte[2];<z>
BYTE_MASK);<z>
);<z>
;<z>
static int getSessionTimeout() {<z>
sessionTimeout==null){<z>
= "30";<z>
(sessionTimeout);<z>
public TransportSearchAction(Settings settings, ThreadPool threadPool,<z>
TransportService transportService, ClusterService clusterService,<z>
dfsQueryThenFetchAction,<z>
queryThenFetchAction,<z>
TransportSearchDfsQueryAndFetchAction dfsQueryAndFetchAction,<z>
TransportSearchQueryAndFetchAction queryAndFetchAction,<z>
TransportSearchScanAction scanAction,<z>
) {<z>
);<z>
this.clusterService = clusterService;<z>
this.dfsQueryThenFetchAction = dfsQueryThenFetchAction;<z>
;<z>
dfsQueryAndFetchAction;<z>
this.queryAndFetchAction = queryAndFetchAction;<z>
scanAction = scanAction;<z>
;<z>
= componentSettings.getAsBoolean("optimize_single_shard", true);<z>
;<z>
(<z>
)<z>
newInstance( dataSource,<z>
) );<z>
)<z>
return new ResultMetaData( resultClass );<z>
;<z>
Canvas getViewPanel() {<z>
form = new DynamicForm();<z>
);<z>
Tree tree = new Tree();<z>
(departmentRoot);<z>
;<z>
setTitle("Department");<z>
setValueField("name");<z>
.setValueTree(tree);<z>
dataSource = SupplyCategoryXmlDS.getInstance();<z>
IPickTreeItem();<z>
;<z>
;<z>
"No Sub Categories");<z>
);<z>
.setItems(departmentItem, categoryItem);<z>
return form;<z>
CommandLineConfig setCommonJSModulePathPrefix(<z>
commonJSModulePathPrefix) {<z>
commonJSModulePathPrefix = commonJSModulePathPrefix;<z>
return this;<z>
, SVNRevision revision) throws SVNException {<z>
info = new SVNInfo[1];<z>
().createGetInfo();<z>
(url, pegRevision));<z>
(revision);<z>
);<z>
ISvnObjectReceiver<SvnInfo>() {<z>
{<z>
[0] == null) {<z>
] = SvnCodec.info(object);<z>
});<z>
);<z>
];<z>
{<z>
new CalendarClp();<z>
.setUuid(getUuid());<z>
.setCalendarId(getCalendarId());<z>
);<z>
));<z>
));<z>
));<z>
.setCreateDate(getCreateDate());<z>
);<z>
clone.setResourceBlockId(getResourceBlockId());<z>
setCalendarResourceId(getCalendarResourceId());<z>
));<z>
));<z>
clone.setColor(getColor());<z>
getDefaultCalendar());<z>
clone;<z>
boolean isEmpty() {<z>
mEmptyListEnabled) {<z>
return false;<z>
} else if (isSearchMode()) {<z>
(getQueryString());<z>
(mLoading) {<z>
false;<z>
} else {<z>
;<z>
throws Exception {<z>
(args.length != 1) {<z>
;<z>
.exit(1);<z>
);<z>
;<z>
0].startsWith("ftp:"))<z>
args[0]);<z>
(args[0]));<z>
;<z>
"\nHeader of dataset:\n");<z>
;<z>
( Sequence seq_key ) {<z>
);<z>
NodeType.TERMINAL);<z>
.key = seq_key;<z>
private void processMove(Move move) {<z>
.getEvaluationHandler();<z>
score = evaluationHandler.fireAllRulesAndCalculateDecisionScore();<z>
(move, score);<z>
);<z>
(move, score, acceptChance);<z>
String argv[], Configuration conf)<z>
IOException {<z>
) {<z>
(false);<z>
"hdfsproxy-default.xml");<z>
);<z>
if (startOpt == null) {<z>
);<z>
null;<z>
switch (startOpt) {<z>
case RELOAD:<z>
conf, "/reloadPermFiles");<z>
;<z>
:<z>
sendCommand(conf, "/clearUgiCache");<z>
0);<z>
;<z>
proxy = new HdfsProxy(conf);<z>
;<z>
;<z>
,<z>
Mi_YY,<z>
{<z>
{<z>
= null;<z>
;<z>
assign(0);<z>
Ri_Y.assign(0);<z>
.hasNext()) {<z>
;<z>
int f = feature.index();<z>
yp = feature.y();<z>
();<z>
();<z>
if (yprev < 0) {<z>
);<z>
oldVal+lambda[f]*val);<z>
) {<z>
);<z>
initMDone = true;<z>
) {<z>
0; r--) {<z>
.getQuick(r)));<z>
null)<z>
>= 0; c--) {<z>
));<z>
initMDone;<z>
InvalidDataException {<z>
(myColorsScheme == null){<z>
= UIUtil.getTreeTextBackground();<z>
&& ColorUtil.isDark(color)) {<z>
clone();<z>
DEFAULT_SCHEME_NAME).clone();<z>
readExternal(element);<z>
String host, int port, String exclList) {<z>
;<z>
port;<z>
setExclusionList(exclList);<z>
(EditorContext editorContext, SNode node) {<z>
(editorContext, node);<z>
;<z>
);<z>
;<z>
Context HttpHeaders headers) {<z>
();<z>
);<z>
();<z>
MobilisView serverView) {<z>
(mServerViews) {<z>
mServerViews.remove(serverView);<z>
void handleEntity(Packet30Entity par1Packet30Entity) {<z>
);<z>
null) {<z>
serverPosX += par1Packet30Entity.xPosition;<z>
serverPosY += par1Packet30Entity.yPosition;<z>
var2.serverPosZ += par1Packet30Entity.zPosition;<z>
/ 32.0D;<z>
/ 32.0D;<z>
)var2.serverPosZ / 32.0D;<z>
360) / 256.0F : var2.rotationYaw;<z>
360) / 256.0F : var2.rotationPitch;<z>
, var10, 3);<z>
private IntegerProperty prefColumnCount = new IntegerPropertyBase(DEFAULT_PREF_COLUMN_COUNT) {<z>
Override public void set(int value) {<z>
value < 0) {<z>
;<z>
(value);<z>
; }<z>
}<z>
text) {<z>
) {<z>
i);<z>
) {<z>
false;<z>
true;<z>
public Object getPreferredValue(EStructuralFeature feature) {<z>
);<z>
;<z>
eINSTANCE.getFillStyle_FillColor()) {<z>
null;<z>
.eINSTANCE.getLineStyle_LineColor()) {<z>
PreferenceConstantHelper.COLOR_LINE);<z>
()) {<z>
;<z>
) {<z>
"MergeNode", PreferenceConstantHelper.COLOR_FILL);<z>
((IPreferenceStore)preferenceStore, prefColor));<z>
)) {<z>
("MergeNode", PreferenceConstantHelper.COLOR_GRADIENT);<z>
(preferenceStore.getString(prefGradient));<z>
== NotationPackage.eINSTANCE.getFillStyle_Transparency()) {<z>
));<z>
) {<z>
();<z>
== null) {<z>
;<z>
;<z>
> type, String propertyName) {<z>
;<z>
String pluralPropertyName;<z>
{<z>
.length() - 3) + "y";<z>
pluralPropertyName = propertyName;<z>
.endsWith("S")) {<z>
- 1);<z>
= propertyName;<z>
{<z>
= propertyName;<z>
+ "s";<z>
] methodNameCondidates = new String[4];<z>
] = "set" + singularPropertyName + "ForKey";<z>
= "_set" + singularPropertyName + "ForKey";<z>
+ pluralPropertyName + "ForKey";<z>
3] = "_set" + pluralPropertyName + "ForKey";<z>
, methodNameCondidates, 2);<z>
@NonNull Root root) {<z>
.Literals.PACKAGE)) {<z>
String name2 = name;<z>
if (name2 != null) {<z>
Package pkge : root.getNestedPackage()) {<z>
) {<z>
getPrimaryPackage(pkge));<z>
.getNestedPackage()) {<z>
{<z>
;<z>
() {<z>
;<z>
.checkAndClear(Flags.TLA_DISMISSED_FROM_TASK_EDIT)) {<z>
getTaskEditFragment();<z>
if (tea != null)<z>
onBackPressed();<z>
.hasExtra(NEW_LIST)) {<z>
;<z>
.removeExtra(NEW_LIST);<z>
;<z>
).hasExtra(OPEN_TASK)) {<z>
(OPEN_TASK, 0);<z>
id > 0) {<z>
onTaskListItemClicked(id);<z>
else {<z>
;<z>
(tlf != null) {<z>
("", true);<z>
null)<z>
;<z>
fragmentLayout == LAYOUT_SINGLE)<z>
;<z>
message) {<z>
) {<z>
void doAssert() {<z>
);<z>
});<z>
<Results> more3() {<z>
39,0.01);<z>
= new MoreDerivative3(39,0.01);<z>
);<z>
) throws Exception {<z>
);<z>
getProtocolManager();<z>
();<z>
if (optionProtocols) {<z>
;<z>
)) {<z>
;<z>
printEndCommand();<z>
return null;<z>
&& !resourceId.equalsIgnoreCase("")) {<z>
[] argsRouterName = new String[2];<z>
splitResourceName(resourceId);<z>
catch (Exception e) {<z>
getMessage());<z>
printEndCommand();<z>
-1;<z>
[1]);<z>
));<z>
().isEmpty()) {<z>
+ " didn't have any live session. Use protocol:add command to active.");<z>
;<z>
;<z>
{<z>
(session, sessionManager.isLocked(session))<z>
.getSessionContext();<z>
));<z>
{<z>
;<z>
;<z>
.isLocked(session)) {<z>
;<z>
{<z>
) - sessionManager.getSessionlastUsed(session);<z>
MILLISECONDS<z>
);<z>
();<z>
+ age + ")");<z>
;<z>
null;<z>
.getAllResourceIds()) {<z>
.getProtocolSessionManager(device);<z>
.getAllProtocolSessionIds().isEmpty()) {<z>
device);<z>
printInfo(name);<z>
device);<z>
getAllProtocolSessionIds()) {<z>
isLocked(session))<z>
();<z>
get(context.PROTOCOL));<z>
) {<z>
age;<z>
long millis;<z>
)) {<z>
"(locked)";<z>
{<z>
session);<z>
MILLISECONDS<z>
.toMinutes(millis)));<z>
)).getStatus();<z>
" (Not used in: " + age + ")");<z>
);<z>
return null;<z>
) throws IOException {<z>
if (_spillItemCount == _spillIndexBufferSize) {<z>
(null);<z>
done = false;<z>
while (!done) {<z>
= _spillDataBuffer.position();<z>
= false;<z>
null) {<z>
.generateOptimizedKeyForPair(key, value, _optimizedKey);<z>
));<z>
;<z>
;<z>
key.write(_outputStream);<z>
int valueSizePos = _spillDataBuffer.position();<z>
keySizePos - 4;<z>
;<z>
_spillDataBuffer.putInt(keySize);<z>
+ 4);<z>
;<z>
);<z>
;<z>
position(valueSizePos);<z>
;<z>
.position(endPosition);<z>
!= null) {<z>
!= 0) {<z>
_spillDataBuffer.position() - startPositon);<z>
_optimizedKey.writeBufferToStream(_outputStream);<z>
);<z>
_spillDataBuffer.position(startPositon);<z>
_optimizedKey.writeHeaderToStream(_outputStream);<z>
nextItemPosition);<z>
= startPositon;<z>
_spillItemCount++;<z>
;<z>
{<z>
overflow = true;<z>
{<z>
= true;<z>
{<z>
startPositon);<z>
sortAndSpill(null);<z>
void rule__OutputCondition__Group_5__2() throws RecognitionException {<z>
stackSize = keepStackSize();<z>
pushFollow(FollowSets000.FOLLOW_rule__OutputCondition__Group_5__2__Impl_in_rule__OutputCondition__Group_5__27760);<z>
);<z>
--;<z>
FOLLOW_rule__OutputCondition__Group_5__3_in_rule__OutputCondition__Group_5__27763);<z>
();<z>
state._fsp--;<z>
) {<z>
reportError(re);<z>
(input,re);<z>
);<z>
statement) {<z>
);<z>
statement.getBody(), false);<z>
);<z>
.getInitialization();<z>
{<z>
initialization.accept(this);<z>
statement.getCondition();<z>
condition != null) {<z>
.accept(this);<z>
condition);<z>
condition == null) {<z>
();<z>
) {<z>
;<z>
);<z>
statement, false);<z>
());<z>
.addInstruction(instruction);<z>
);<z>
statement.getBody();<z>
{<z>
);<z>
;<z>
null) {<z>
accept(this);<z>
offset = initialization != null<z>
.getEndOffset(initialization)<z>
(statement);<z>
(offset);<z>
);<z>
myStartStatementStack.popStatement();<z>
);<z>
);<z>
MessengerMember target, final int position) throws RemoteException {<z>
Messenger messenger = registry.getMessenger(messengerid);<z>
{<z>
new IllegalArgumentException("No messenger with the specified messengerid exists");<z>
;<z>
final DataSource ds, Properties properties) {<z>
Properties converted = new Properties();<z>
SuperProperties().caseInsensitive(true);<z>
putAll(properties);<z>
;<z>
);<z>
config.setDataSource(ds);<z>
;<z>
);<z>
) {<z>
;<z>
, converted);<z>
) {<z>
!isChunked)<z>
) {<z>
();<z>
start_block();<z>
read_long();<z>
() - 4);<z>
< 0)<z>
nextLong >= maxBlockLength) {<z>
read_value();<z>
;<z>
} else {<z>
CompletionStatus.COMPLETED_MAYBE,<z>
, new Integer( get_offset() ) ) ;<z>
, File file) throws Exception {<z>
jar;<z>
= new Jar(file);<z>
Exception e) {<z>
;<z>
"", in);<z>
) {<z>
println("Weird input");<z>
throw e;<z>
;<z>
manifest == null)<z>
"Main-Class");<z>
).getValue("JPM-Embedded");<z>
("JPM-Classpath");<z>
getMainAttributes().getValue("JPM-JVMArgs");<z>
).getValue("JPM-Command");<z>
);<z>
.getMainAttributes().getValue("JPM-Name");<z>
)<z>
jpmCommand;<z>
== null)<z>
jpmName = jpmService;<z>
null)<z>
add(jpmName);<z>
!= null) {<z>
();<z>
= "x-jpm";<z>
.put("x-jpm", jpmName);<z>
(main != null)<z>
"main", main);<z>
)<z>
.ps.put("embedded:List<String>", embedded);<z>
if (classpath != null)<z>
, classpath);<z>
)<z>
.put("jvmargs", jvmargs);<z>
if (jpmCommand != null) {<z>
jpmCommand);<z>
;<z>
) {<z>
.put("service", jpmService);<z>
(jpmService);<z>
.capabilities.add(c);<z>
close();<z>
PlayerEggThrowEvent event) {<z>
.getEgg())) {<z>
event.setHatching(false);<z>
.remove(event.getEgg());<z>
) {<z>
drawable.getGL(), component);<z>
drawable);<z>
component);<z>
) {<z>
) return null;<z>
superClass = classNode.getUnresolvedSuperClass();<z>
(superClass==null) {<z>
return ClassHelper.OBJECT_TYPE;<z>
superClass;<z>
] genericsTypes = classNode.getGenericsTypes();<z>
().getGenericsTypes();<z>
);<z>
==null) return superClass;<z>
length; i < genericsTypesLength; i++) {<z>
{<z>
= genericsTypes[i];<z>
getGenericsTypes();<z>
; j < superGenericTypesLength; j++) {<z>
;<z>
)) {<z>
] = genericsType;<z>
;<z>
output,<z>
reporter) throws IOException {<z>
)) {<z>
oc == null) {<z>
oc = output;<z>
rp = reporter;<z>
oc);<z>
reducer.setReporter(rp);<z>
= (BytesWritable) key;<z>
) 0);<z>
(isTagged) {<z>
getSize() - 1;<z>
)[size]);<z>
);<z>
keyWritable.equals(groupKey)) {<z>
) {<z>
new BytesWritable();<z>
{<z>
.trace("End Group");<z>
();<z>
keyWritable);<z>
) {<z>
(<z>
, 0,<z>
()) + " with properties "<z>
+ keyTableDesc.getProperties(), e);<z>
);<z>
("Start Group");<z>
);<z>
.setGroupKeyObject(keyObject);<z>
values.hasNext()) {<z>
BytesWritable) values.next();<z>
.get()]<z>
.deserialize(valueWritable);<z>
catch (SerDeException e) {<z>
throw new HiveException(<z>
.get()<z>
(), 0,<z>
) + " with properties "<z>
), e);<z>
row.clear();<z>
keyObject);<z>
[tag.get()]);<z>
row.add(tag);<z>
isLogInfoEnabled) {<z>
++;<z>
(cntr == nextCntr) {<z>
().getUsed();<z>
+ cntr<z>
);<z>
;<z>
));<z>
{<z>
;<z>
);<z>
} catch (Exception e2) {<z>
= "[Error getting row data with exception " +<z>
e2) + " ]";<z>
throw new HiveException("Hive Runtime Error while processing row (tag="<z>
") " + rowString, e);<z>
(Throwable e) {<z>
= true;<z>
) {<z>
;<z>
} else {<z>
));<z>
e);<z>
short readShort() throws IOException {<z>
) & 0xff;<z>
.readByte() & 0xff;<z>
;<z>
{<z>
=c.getPropertyChangeListeners();<z>
length==0)<z>
false;<z>
;i<ilen;i++) {<z>
[i] instanceof PropertyChangeListenerProxy &&<z>
i]).getListener()==internalListener)<z>
return true;<z>
internalListener)<z>
true;<z>
;<z>
{<z>
;<z>
"Deleting session: {}", id);<z>
id, false, true);<z>
;<z>
TNEFAttribute attr) {<z>
) {<z>
return null;<z>
(attr instanceof TNEFDateAttribute) {<z>
attr).getDate();<z>
+ attr.toString());<z>
return null;<z>
{<z>
.isInternalRelease()) {<z>
URL url = null;<z>
;<z>
).getUrlVersionCheck());<z>
"AbstractStartupActivity", "checkVersion() checking version at: " + url);<z>
()));<z>
= in.readLine();<z>
readLine();<z>
("1")));<z>
);<z>
(clientVersion, serverVersion) > 0) {<z>
isForced, true);<z>
) {<z>
);<z>
;<z>
} finally {<z>
(in != null) {<z>
();<z>
) {}<z>
getWfServerInterface().clientUpgradeCheck(this);<z>
{<z>
();<z>
NodeId(<z>
| 0x0000000000004000L,<z>
.nextLong() & 0x3fffFfffFfffFfffL | 0x8000000000000000L<z>
void pasted() throws DuplicateNameException {<z>
{<z>
if (myDestination == myEntityBeforeCloning) {<z>
myDestination = myEntity;<z>
{<z>
if (myDestination != null) {<z>
model = myEntity.getModel();<z>
modelGroup = model.getModelGroup();<z>
;<z>
myJoins) {<z>
.pasted();<z>
null;<z>
context) {<z>
);<z>
RepeatSynchronizationManager.contextHolder.set(context);<z>
return oldSession;<z>
int getNumOfDisks()<z>
);<z>
);<z>
buildAssocDefModel(Association assoc) {<z>
fetchWholeTopicType(assoc).getUri();<z>
= fetchPartTopicType(assoc).getUri();<z>
, partTopicTypeUri,<z>
, "dm4.core.one", null);<z>
){<z>
.get(conn);<z>
gemGraph.setArgumentUpdatingDisabled(true);<z>
conn);<z>
);<z>
displayConn.getTargetConnectionPoint());<z>
tidyNewGemPair(displayConn, collGem, emitGem);<z>
(0));<z>
);<z>
gemGraph.setArgumentUpdatingDisabled(false);<z>
);<z>
();<z>
) {<z>
super(new ExceptionHandler() {<z>
ServerFailure createServerFailure(Throwable throwable) {<z>
.getMessage(),<z>
;<z>
);<z>
(Session session,<z>
assetVocabulary, long companyId,<z>
orderByComparator, boolean previous) {<z>
null;<z>
(orderByComparator != null) {<z>
query = new StringBundler(6 +<z>
* 6));<z>
query = new StringBundler(3);<z>
_SQL_SELECT_ASSETVOCABULARY_WHERE);<z>
(_FINDER_COLUMN_COMPANYID_COMPANYID_2);<z>
(orderByComparator != null) {<z>
);<z>
length > 0) {<z>
.append(WHERE_AND);<z>
) {<z>
append(_ORDER_BY_ENTITY_ALIAS);<z>
append(orderByFields[i]);<z>
+ 1) < orderByFields.length) {<z>
(orderByComparator.isAscending() ^ previous) {<z>
query.append(WHERE_GREATER_THAN_HAS_NEXT);<z>
query.append(WHERE_LESSER_THAN_HAS_NEXT);<z>
previous) {<z>
);<z>
append(WHERE_LESSER_THAN);<z>
.append(ORDER_BY_CLAUSE);<z>
{<z>
);<z>
.append(orderByFields[i]);<z>
1) < orderByFields.length) {<z>
() ^ previous) {<z>
);<z>
query.append(ORDER_BY_DESC_HAS_NEXT);<z>
.isAscending() ^ previous) {<z>
;<z>
;<z>
);<z>
String sql = query.toString();<z>
q = session.createQuery(sql);<z>
setFirstResult(0);<z>
2);<z>
);<z>
qPos.add(companyId);<z>
{<z>
] values = orderByComparator.getOrderByValues(assetVocabulary);<z>
) {<z>
qPos.add(value);<z>
;<z>
(list.size() == 2) {<z>
list.get(1);<z>
return null;<z>
keys(final String pattern) {<z>
Jedis>() {<z>
(Jedis redis) throws IOException {<z>
!= null) {<z>
getNewConnection();<z>
;<z>
redis.keys(pattern);<z>
closeNewConnection(redis);<z>
redis.keys(pattern);<z>
});<z>
float y, float z) {<z>
);<z>
;<z>
/ factor;<z>
int ny = LengthY / factor;<z>
;<z>
gy, gz, dist;<z>
gx = gy = gz = 0;<z>
float min_dist = Float.MAX_VALUE;<z>
; k++) {<z>
j++) {<z>
0; i < nx; i++) {<z>
) + j * factor * LengthX + i<z>
factor;<z>
mySamples[0][idx] - x)<z>
[idx] - y)<z>
z);<z>
(dist < min_dist) {<z>
min_dist = dist;<z>
i * factor;<z>
= j * factor;<z>
= k * factor;<z>
{ gx, gy, gz };<z>
URL url) {<z>
)<z>
;<z>
) {<z>
);<z>
{<z>
toExternalForm());<z>
if (bundle != null)<z>
;<z>
bundle = null;<z>
UpdateManagerUtils.asDirectoryURL(url);<z>
null);<z>
(), l);<z>
, bundle);<z>
{<z>
);<z>
) {<z>
warn(e.getLocalizedMessage());<z>
;<z>
{<z>
errorAcceptor != null) {<z>
)<z>
;<z>
)<z>
PLUS__RIGHT));<z>
(semanticObject);<z>
createSequencerFeeder(semanticObject, nodes);<z>
getLeft());<z>
());<z>
);<z>
final boolean ok) {<z>
verifiedCount++;<z>
.format("Verified %s: %s",<z>
;<z>
ok) {<z>
ok);<z>
dismiss();<z>
.string.msgDictCorruped,<z>
(d, true));<z>
;<z>
} else {<z>
(new Runnable() {<z>
{<z>
.makeText(<z>
.this,<z>
msgDictOk, getTitle(d,<z>
LENGTH_SHORT).show();<z>
);<z>
max) {<z>
);<z>
dismiss();<z>
tiffCode) {<z>
getFieldWithTag(tiffCode);<z>
{<z>
);<z>
XTIFFField.TIFF_SHORT) {<z>
return field.getAsInt(0);<z>
-1;<z>
public void progress(TradeRequest request) {<z>
(request);<z>
, this);<z>
), trade);<z>
.getPlayer(), trade);<z>
args) {<z>
null;<z>
= new PropertiesCredentials(<z>
class.getResourceAsStream("AwsCredentials.properties"));<z>
(IOException e1) {<z>
);<z>
.println(e1.getMessage());<z>
);<z>
AmazonEC2Client(credentials);<z>
securityGroupRequest = new CreateSecurityGroupRequest("GettingStartedGroup", "Getting Started Security Group");<z>
.createSecurityGroup(securityGroupRequest);<z>
catch (AmazonServiceException ase) {<z>
getMessage());<z>
String ipAddr = "0.0.0.0/0";<z>
addr = InetAddress.getLocalHost();<z>
)+"/10";<z>
{<z>
>();<z>
ipAddr);<z>
= new ArrayList<IpPermission> ();<z>
();<z>
;<z>
;<z>
Integer(22));<z>
ipRanges);<z>
);<z>
,ipPermissions);<z>
;<z>
} catch (AmazonServiceException ase) {<z>
ase.getMessage());<z>
go() {<z>
(mSync) { }<z>
catch (NullPointerException e) {<z>
(Thread.holdsLock(mSync2));<z>
mSync2) {<z>
));<z>
));<z>
getBusPrototype() {<z>
busPrototypeEClass == null) {<z>
eNS_URI)<z>
).get(185);<z>
return busPrototypeEClass;<z>
createFilterOptions(String[] data) {<z>
+ 1];<z>
"", "Select");<z>
i++) {<z>
data[i]);<z>
;<z>
() {<z>
IBinder service) {<z>
(TermService.TSBinder) service;<z>
mTermService = binder.getService();<z>
);<z>
arg0) {<z>
mTermService = null;<z>
checkInvariants_() {<z>
;<z>
] array = _array;<z>
(array != null)<z>
: array)<z>
object != null)<z>
));<z>
equals(Object o) {<z>
return true;<z>
!= o.getClass()) return false;<z>
(TaskUser) o;<z>
return false;<z>
;<z>
throws BuildException {<z>
f = getLocations(features);<z>
b = getLocations(bundles);<z>
= createPublisherApplication();<z>
length > 0)<z>
new FeaturesAction(f));<z>
0)<z>
new BundlesAction(b));<z>
) {<z>
(siteXML, siteQualifier);<z>
)<z>
action.setCategoryVersion(categoryVersion);<z>
addAction(action);<z>
) {<z>
CategoryXMLAction(categoryXML, siteQualifier);<z>
if (categoryVersion != null)<z>
setCategoryVersion(categoryVersion);<z>
(action);<z>
());<z>
} catch (Exception e) {<z>
printStackTrace();<z>
{<z>
();<z>
ast);<z>
) {<z>
;<z>
isLinked = false;<z>
) {<z>
= PathVariable.class.getCanonicalName();<z>
)) {<z>
(decl);<z>
importRewrite = createImportRewrite(astRoot);<z>
;<z>
.newSingleMemberAnnotation();<z>
("PathVariable"));<z>
);<z>
.setLiteralValue(variableName);<z>
;<z>
"PathVariable");<z>
setValue(pathVariableName);<z>
isLinked = true;<z>
;<z>
property = SingleVariableDeclaration.MODIFIERS2_PROPERTY;<z>
null);<z>
newStringLiteral();<z>
setLiteralValue(newTemplateString);<z>
track(newTemplate);<z>
.replace(oldTemplate, newTemplate, null);<z>
if (isLinked) {<z>
addLinkedPosition(new StringLiteralTrackedPosition(trackTemplateVariable, cursorOffset, variableName<z>
"PathVariable");<z>
cursorOffset<z>
, true));<z>
rewrite;<z>
() {<z>
;<z>
{<z>
)<z>
? UIBundle.message("status.bar.column.status.text")<z>
)<z>
)<z>
;<z>
"";<z>
void logout() {<z>
logout(context, new FacebookLogoutListener() {<z>
{<z>
(response, state);<z>
);<z>
);<z>
boolean isTokenValid(<z>
request,<z>
, String tokenName) {<z>
= request.getSession(false);<z>
{<z>
return false;<z>
);<z>
null) {<z>
return false;<z>
{<z>
, tokenName);<z>
);<z>
token == null) {<z>
false;<z>
.equals(token);<z>
final ActorClassConfig acConf) {<z>
;<z>
, true);<z>
(_path, String.class)));<z>
boolean _and = false;<z>
:config.getMin();<z>
equal(_min, null);<z>
) {<z>
_and = false;<z>
} else {<z>
config.getMax();<z>
);<z>
(_equals && _equals_1);<z>
(_and) {<z>
StringConcatenation();<z>
return _builder;<z>
false, false, true, true);<z>
.configExt.toPath(_path_1, "_");<z>
);<z>
ActorClassConfig) _eContainer).getActor();<z>
getName();<z>
StringConcatenation _builder_1 = new StringConcatenation();<z>
("checkMinMax(_");<z>
.getAttribute();<z>
_attribute.getName();<z>
.append(_name, "");<z>
_builder_1.append(", ");<z>
getMin();<z>
(_min_1, null));<z>
if (_notEquals) {<z>
;<z>
".MIN");<z>
.append(path, "");<z>
{<z>
);<z>
", ");<z>
);<z>
, null));<z>
if (_notEquals_1) {<z>
;<z>
.append(".MAX");<z>
path, "");<z>
{<z>
.append("null");<z>
;<z>
;<z>
_xblockexpression = (_builder_1);<z>
return _xblockexpression;<z>
int parentIndex)<z>
;<z>
child;<z>
if (isLeaf())<z>
1].element, true);<z>
].element, add);<z>
1].element = null;<z>
i >= 0; i--)<z>
i];<z>
; i--)<z>
.entries[i];<z>
nrElements++;<z>
p != BTreeSet.this.root)<z>
; x--, y--)<z>
.entries[y];<z>
Entry();<z>
0].child = ls;<z>
)<z>
y];<z>
= null;<z>
--;<z>
isRoot() && p.nrElements == 0)<z>
;<z>
parent = null;<z>
].element;<z>
ls.nrElements].child;<z>
++;<z>
.nrElements; x >= 0; x--)<z>
] = entries[x];<z>
1; x >= 0; x--)<z>
;<z>
.parent = this;<z>
++;<z>
root)<z>
, y++)<z>
" " + y);<z>
= p.entries[y];<z>
entries[0] = new Entry();<z>
.nrElements; x++, y++)<z>
.entries[y];<z>
;<z>
p.nrElements--;<z>
() && p.nrElements == 0)<z>
= this;<z>
= null;<z>
Frame getFrame(){<z>
(null,null);<z>
{<z>
.printStackTrace();<z>
null;<z>
String delay,<z>
, double locationY) {<z>
this.vehicle = vehicle;<z>
station = station;<z>
;<z>
locationX;<z>
= locationY;<z>
()<z>
)IIOPListener.this.profile;<z>
iiopProfile.getAddress().copy();<z>
IIOPAddress) listenerAddress.copy();<z>
loopbackAddress.setHostname("127.0.0.1");<z>
!= null;<z>
if (isSSL)<z>
setPort(iiopProfile.getSSLPort());<z>
.getSSLPort());<z>
private boolean saveMessage( )<z>
)<z>
listChanged )<z>
)<z>
( i );<z>
null )<z>
.key );<z>
);<z>
;<z>
( ); i++ )<z>
GlobalProperty property = globalLinkedProperties.get( i );<z>
null )<z>
key, property.value );<z>
length; i++ )<z>
;<z>
( url != null )<z>
.getProtocol( ).equals( "file" ) )<z>
),<z>
contents[i],<z>
[i] );<z>
e )<z>
handle( e );<z>
;<z>
;<z>
children) {<z>
()) {<z>
TimeUnit.SECONDS);<z>
();<z>
(String bookieAddrString : children) {<z>
InetSocketAddress bookieAddr;<z>
(bookieAddrString);<z>
{<z>
", ignoring this bookie");<z>
.add(bookieAddr);<z>
) {<z>
= newBookieAddrs;<z>
channel, Value thisVal,<z>
int methodDispatchId, Value[] args) {<z>
.getJavaObjectsExposedInBrowser();<z>
;<z>
= moduleHandleMap.get(channel);<z>
;<z>
TreeLogger logger = moduleHandle.getLogger();<z>
;<z>
(methodDispatchId == 0) {<z>
("java.lang.Object::toString()");<z>
JsValueOOPHM();<z>
thisVal, jsThis);<z>
branch = TreeLogger.NULL;<z>
isLoggable(TreeLogger.SPAM)) {<z>
;<z>
append("Client invoke of ");<z>
logMsg.append(methodDispatchId);<z>
methodDispatchId);<z>
null) {<z>
;<z>
!= null) {<z>
);<z>
member.getName());<z>
")");<z>
.append(" on ");<z>
);<z>
logMsg.toString(), null);<z>
;<z>
args.length; ++i) {<z>
;<z>
], jsArgs[i]);<z>
),<z>
);<z>
jsRetVal = new JsValueOOPHM();<z>
;<z>
DispatchObject dispObj;<z>
.isWrappedJavaObject()) {<z>
();<z>
} else {<z>
();<z>
getField(methodDispatchId);<z>
dispMethod = jsMethod.getWrappedJavaFunction();<z>
boolean exception;<z>
invoke(jsThis, jsArgs, jsRetVal);<z>
Throwable t) {<z>
exception = true;<z>
(jsRetVal, moduleSpace.getIsolatedClassLoader(),<z>
), t);<z>
.convertFromJsValue(localObjects, jsRetVal);<z>
, retVal);<z>
() {<z>
super.getConnectionManager();<z>
();<z>
.isProxy(unproxied)) {<z>
;<z>
else {<z>
).getClassLoader());<z>
getDmtAdmin() {<z>
null)<z>
IllegalStateException("Cannot retrieve Dmt Admin " +<z>
;<z>
=<z>
());<z>
)<z>
("Dmt Admin service not found in " +<z>
"service registry.");<z>
(dmtAdminRef);<z>
(dmtAdmin == null)<z>
+<z>
;<z>
dmtAdmin;<z>
) {<z>
;<z>
.size()));<z>
) ;<z>
pid);<z>
;<z>
{<z>
s;<z>
d.getPatients();<z>
sb = new StringBuilder();<z>
(Patient p : patients) {<z>
if (sb.length() > 0)<z>
", ");<z>
());<z>
toString();<z>
IOException e) {<z>
+ ": " + e.getLocalizedMessage();<z>
return s;<z>
public void removeByGroupId(long groupId) throws SystemException {<z>
{<z>
ddlRecordSet);<z>
float y) {<z>
this.x -= x;<z>
y -= y;<z>
;<z>
) final UUID eventId,<z>
,<z>
JsonProperty("bundleId") final UUID bundleId,<z>
"requestedTransitionTime") final DateTime requestedTransitionTime,<z>
("effectiveTransitionTime") final DateTime effectiveTransitionTime,<z>
.SubscriptionState previousState,<z>
"previousPlan") final String previousPlan,<z>
@JsonProperty("previousPhase") final String previousPhase,<z>
final String previousPriceList,<z>
,<z>
) final String nextPlan,<z>
final String nextPhase,<z>
"nextPriceList") final String nextPriceList,<z>
totalOrdering,<z>
final UUID userToken,<z>
@JsonProperty("transitionType") final SubscriptionTransitionType transitionType,<z>
final Integer remainingEventsForUserOperation,<z>
("startDate") final DateTime startDate) {<z>
previousPlan,<z>
, userToken,<z>
, startDate);<z>
{<z>
NAME_DIRECTORY_ROOT);<z>
==0)<z>
throw new IOException("Collection not found");<z>
dir = fetch(nameDirectory_recid);<z>
dir.get(name);<z>
throw new IOException("Collection not found");<z>
;<z>
LinkedList2){<z>
l = (LinkedList2) o;<z>
l.clear();<z>
delete(l.rootRecid);<z>
BTree){<z>
);<z>
else if( o instanceof HTree){<z>
t = (HTree) o;<z>
t.clear();<z>
SERIALIZER);<z>
);<z>
;<z>
}else{<z>
.getClass()));<z>
delete(recid);<z>
remove(name);<z>
.remove(name);<z>
{<z>
IOError(e);<z>
double computeLUNPower(JXPathContext context){<z>
power = 0.0;<z>
String myQuery = "LogicalUnit";<z>
);<z>
(iterator.hasNext())<z>
)iterator.next();<z>
;<z>
(JXPathContext.newContext(lut));<z>
();<z>
=new PowerType();<z>
;<z>
.setComputedPower(LUNPower);<z>
power=power+powerLUN;<z>
power;<z>
row, int column) {<z>
) {<z>
return false;<z>
) {<z>
false;<z>
} else {<z>
;<z>
public GsBasic firstDead()<z>
= this.members.size();<z>
len; ++i)<z>
gab = this.get(i);<z>
alive) return gab;<z>
return null;<z>
(byte[] buf, int offset) {<z>
length - offset < GZIP_STATIC_HEADER_SIZE) {<z>
();<z>
GZIP_STATIC_HEADER_SIZE);<z>
(Session session) {<z>
getValueResultSet(session);<z>
(v == null) {<z>
return null;<z>
) {<z>
.reset();<z>
cachedResult;<z>
);<z>
.isDeterministic()) {<z>
result;<z>
= v;<z>
result;<z>
public String getDescription() {<z>
;<z>
Env env,<z>
,<z>
,<z>
,<z>
path,<z>
,<z>
Optional boolean secure,<z>
Optional boolean httpOnly) {<z>
;<z>
)) {<z>
value = "";<z>
StringBuilder();<z>
len = value.length();<z>
< len; i++) {<z>
(i);<z>
ch && ch <= '9'<z>
'a' <= ch && ch <= 'z'<z>
<= 'Z'<z>
'-'<z>
'.'<z>
ch == '_') {<z>
ch);<z>
if (ch == ' ') {<z>
('+');<z>
} else {<z>
append('%');<z>
16) & 0xf;<z>
(d < 10) {<z>
) ('0' + d));<z>
} else {<z>
'A' + d - 10));<z>
ch & 0xf;<z>
(d < 10) {<z>
+ d));<z>
} else {<z>
('A' + d - 10));<z>
;<z>
;<z>
if (expire > 0) {<z>
int) (expire - now / 1000);<z>
maxAge > 0) {<z>
setMaxAge(maxAge);<z>
else {<z>
;<z>
equals("")) {<z>
cookie.setPath(path);<z>
.equals("")) {<z>
domain);<z>
if (secure) {<z>
;<z>
().addCookie(cookie);<z>
new StringBuilder();<z>
append("Set-Cookie: ");<z>
append(cookie.getName());<z>
);<z>
.getValue());<z>
) {<z>
"; expires=Thu, 01-Dec-1994 16:00:00 GMT");<z>
else {<z>
getGmtDate();<z>
);<z>
append("; expires=");<z>
;<z>
) {<z>
append("; path=");<z>
append(path);<z>
{<z>
.append("; domain=");<z>
);<z>
secure) {<z>
cookieHeader.append("; secure");<z>
);<z>
;<z>
public int compareTo(Object o)<z>
if (o instanceof OIDImplKodo)<z>
OIDImplKodo)o;<z>
;<z>
(o == null)<z>
new ClassCastException("object is null");<z>
());<z>
throws SearchException {<z>
indexDirectory = config.getPropertiesSearchIndexFile();<z>
getAbsolutePath());<z>
if (searcher != null) {<z>
lucene.search.MatchAllDocsQuery();<z>
;<z>
indexDirectory.getAbsolutePath() + ")");<z>
;<z>
ArrayList<String>();<z>
i++) {<z>
getField(PATH_FIELD_NAME).stringValue();<z>
contains("#revision=")) {<z>
resultPath.lastIndexOf("#revision="));<z>
10);<z>
().existsNode(resultPathWithoutRevision)) {<z>
getNode(resultPathWithoutRevision).getRevision(revisionName);<z>
{<z>
resultPathWithoutRevision + "#" + revisionName);<z>
results.add(resultPath);<z>
{<z>
"' found within search index, but no such node within repository: " + resultPathWithoutRevision);<z>
);<z>
} else {<z>
getRepo().existsNode(resultPath)) {<z>
;<z>
resultPath);<z>
} catch (NoSuchNodeException nsne) {<z>
;<z>
(resultPath);<z>
size() == limitSize) {<z>
+ limitSize + "'");<z>
.close();<z>
{<z>
"Delete missing documents from index...");<z>
), config.getWriteLockTimeout());<z>
(indexWriter != null) {<z>
path: results) {<z>
"DEBUG: Try to delete document from index: " + path);<z>
));<z>
close();<z>
} else {<z>
new SearchException("Could not init IndexWriter in order to delete missing documents!");<z>
) {<z>
SearchException(e);<z>
size()]);<z>
) {<z>
;<z>
e);<z>
} else {<z>
);<z>
null;<z>
catch (Exception e) {<z>
);<z>
.getMessage(),e);<z>
] x, int[] y)<z>
(!strokeExists(uuid))<z>
x, y);<z>
, boolean saveTriangles) {<z>
();<z>
;<z>
Vector<Triangle_dt> triangles = null;<z>
(point);<z>
) {<z>
System.err.println("findConnectedVertices: Could not find connected vertices since the first found triangle doesn't" +<z>
" share the given point.");<z>
null;<z>
(triangle, point);<z>
if(triangles == null) {<z>
.println("Error: can't delete a point on the perimeter");<z>
return null;<z>
) {<z>
deletedTriangles = triangles;<z>
for (Triangle_dt tmpTriangle : triangles) {<z>
();<z>
p2();<z>
.p3();<z>
.contains(point2)) {<z>
);<z>
.add(point2);<z>
)) {<z>
.add(point3);<z>
point3);<z>
{<z>
(point1);<z>
pointsVec.add(point1);<z>
pointsVec;<z>
, int offset, int count) {<z>
;<z>
i < offset + count; ++i) {<z>
i]) & 0xff;<z>
if (DEBUG) {<z>
);<z>
) {<z>
doTelnetCommand(curByte);<z>
;<z>
{<z>
case IAC:<z>
= true;<z>
(!peerIsTelnetd) {<z>
);<z>
:<z>
(byte) CMD_GA };<z>
if (!peerSuppressedGoAhead) {<z>
(!suppressGoAhead) {<z>
.length);<z>
);<z>
:<z>
if (lastByte == '\r') {<z>
if (echoInput) {<z>
doEchoInput(0);<z>
processInput(buffer, i, 1);<z>
{<z>
[i]);<z>
lastByte = curByte;<z>
mLastInputByteProcessed = lastByte;<z>
)<z>
)<z>
;<z>
();<z>
(Object obj, AbstractHessianOutput out)<z>
{<z>
());<z>
));<z>
) {<z>
;<z>
ref == -1) {<z>
(out);<z>
.getName());<z>
, out);<z>
> headers) {<z>
(isTerminated()) {<z>
(this + " is already terminated.");<z>
SIPCall.State.DISCONNECTED);<z>
, headers);<z>
(SipServletResponse.SC_OK).send();<z>
final Exception e) {<z>
.warn("", e);<z>
)<z>
).getRequestParameterMap();<z>
;<z>
;<z>
value.startsWith(getClientId(context)))<z>
1));<z>
new MessageEvent(this, action);<z>
event);<z>
{<z>
storageDir.listFiles(new FilenameFilter() {<z>
String name) {<z>
.endsWith(NFO_SUFFIX);<z>
;<z>
> params,<z>
Node body, int lineno, int charno) {<z>
);<z>
for (Node param : params) {<z>
.addChildToBack(param);<z>
.FUNCTION, lineno, charno);<z>
.addChildrenToBack(<z>
, charno));<z>
parameterParen);<z>
function.addChildToBack(body);<z>
return function;<z>
) {<z>
0;<z>
h = 0;<z>
= 0;<z>
= true;<z>
0;<z>
!= null) {<z>
(MapInfoControl c : stackViews) {<z>
++;<z>
) != View.GONE) {<z>
);<z>
;<z>
MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);<z>
;<z>
) {<z>
getPaddingTop();<z>
prevBot;<z>
);<z>
getPaddingBottom();<z>
isCollapsible = false;<z>
MapInfoControl c : collapsedViews) {<z>
;<z>
) {<z>
true;<z>
{<z>
? topDrawable : getStackDrawable(cacheStack));<z>
;<z>
);<z>
w, c.getMeasuredWidth());<z>
getPaddingBottom();<z>
{<z>
getPaddingTop();<z>
prevBot;<z>
h += c.getMeasuredHeight();<z>
prevBot = c.getPaddingBottom();<z>
} else {<z>
) {<z>
MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);<z>
();<z>
) {<z>
);<z>
().getMinimumWidth());<z>
(w, h);<z>
addDatastoreFields()<z>
;<z>
addDatastoreField(ClassNameConstants.DOUBLE);<z>
V get(Object key) {<z>
null == key) {<z>
;<z>
(key.toString());<z>
)<z>
i++)<z>
= recipeItems[0][i];<z>
< recipeItems.length - 1; j++)<z>
];<z>
(item), new Object[] {<z>
.valueOf('X'), obj<z>
);<z>
[] {<z>
, Item.ingotIron<z>
});<z>
final Provider<? extends TheatreServlet> theatreServlet)<z>
super();<z>
this.theatreServlet = theatreServlet;<z>
{<z>
);<z>
(JourneyPart part : parts) {<z>
"\n");<z>
;<z>
private InconsistencyWrapper<TreatmentDefinition> createInconsistencyModel() {<z>
).buildNetwork());<z>
attachModelSavableListener(inconsistencyModel);<z>
());<z>
JvmMethodSignature mapConstructorSignature(ConstructorDescriptor descriptor, CalculatedClosure closure) {<z>
.Mode.METHOD, true);<z>
TypeParameterDescriptor>emptyList(), signatureWriter);<z>
);<z>
descriptor.getContainingDeclaration();<z>
) : null;<z>
if (captureThis != null) {<z>
.writeParameterType(JvmMethodParameterKind.OUTER);<z>
), signatureWriter, JetTypeMapperMode.VALUE);<z>
();<z>
? closure.getCaptureReceiver() : null;<z>
null) {<z>
.RECEIVER);<z>
);<z>
writeParameterTypeEnd();<z>
getKind() == ClassKind.ENUM_ENTRY) {<z>
;<z>
, signatureWriter, JetTypeMapperMode.VALUE);<z>
;<z>
signatureWriter.writeParameterType(JvmMethodParameterKind.ENUM_ORDINAL);<z>
signatureWriter, JetTypeMapperMode.VALUE);<z>
signatureWriter.writeParameterTypeEnd();<z>
closure != null) {<z>
) {<z>
.getKey();<z>
) {<z>
variableDescriptor);<z>
== null) {<z>
variableDescriptor).getType());<z>
);<z>
;<z>
;<z>
superCall = closure.getSuperCall();<z>
{<z>
.REFERENCE_TARGET,<z>
.getCalleeExpression()<z>
getConstructorReferenceExpression());<z>
) {<z>
final ConstructorDescriptor superConstructor = (ConstructorDescriptor) superDescriptor;<z>
())) {<z>
superConstructor);<z>
().getKotlinParameterTypes();<z>
if (types != null) {<z>
types) {<z>
signatureWriter.writeParameterType(JvmMethodParameterKind.SUPER_CALL_PARAM);<z>
);<z>
writeParameterTypeEnd();<z>
.getValueParameters()) {<z>
(signatureWriter, parameter.getType());<z>
writeParametersEnd();<z>
writeVoidReturn();<z>
);<z>
(MuleContext muleContext) throws TransactionException<z>
;<z>
() == null)<z>
null;<z>
XaTransaction xat = new ExternalXaTransaction(muleContext);<z>
;<z>
return xat;<z>
Exception e)<z>
;<z>
ResetGlobalObjectives(String registrationId, boolean deleteLatestInstanceOnly) throws Exception<z>
;<z>
).add("regid", registrationId);<z>
if (deleteLatestInstanceOnly)<z>
, "latest");<z>
callService("rustici.registration.resetGlobalObjectives");<z>
(final MessageWrapper messageWrapper)<z>
;<z>
.notifyObservers(messageWrapper);<z>
.countObservers() == 0)<z>
getMessage());<z>
goForward() {<z>
;<z>
getSelectedIndex() + 1;<z>
getSize()) {<z>
= 0;<z>
)) {<z>
? toolWindows : files;<z>
list.setSelectedIndex(index);<z>
index);<z>
public String rewrite(final String url) {<z>
('/');<z>
: this.sourceUri.substring(0,<z>
lastSlashIndex + 1);<z>
= prefix + url;<z>
).toString();<z>
return normalizedUrl;<z>
catch (URISyntaxException e) {<z>
(e);<z>
flush() throws IOException<z>
1);<z>
if (numBytes > 0)<z>
)<z>
output_.write(numBytes);<z>
(buffer_, 0, numBytes);<z>
0] = 0;<z>
0;<z>
bitsLeft_ = 8;<z>
sendRequestToServer( LDAPMessage msg,<z>
int timeout,<z>
LDAPResponseQueue queue,<z>
)<z>
agent;<z>
{<z>
= new MessageAgent();<z>
agent);<z>
} else {<z>
);<z>
, msg, timeout, queue, bindProps);<z>
return queue;<z>
() {<z>
=<z>
());<z>
{<z>
(ApplicationMetadataFactory) bundleContext.getService(ref);<z>
} else {<z>
return null;<z>
) {<z>
(split == null) {<z>
;<z>
} else {<z>
return split;<z>
[] coveredCols) {<z>
{<z>
== starsByCol[i] ? 0 : 1;<z>
cl, Class []types)<z>
= cl.getConstructors();<z>
{<z>
constructors[i].getParameterTypes();<z>
== types.length)<z>
i];<z>
null;<z>
String imageUrl, Drawable errorDrawable,<z>
) {<z>
, imageUrl, errorDrawable, compoundDrawablesEnabledPositions[0],<z>
2],<z>
;<z>
newExpression) {<z>
newExpression != expression) {<z>
= null;<z>
null)<z>
- As3EPackage.AS3_THROW_STATEMENT__EXPRESSION, null, msgs);<z>
if (newExpression != null)<z>
- As3EPackage.AS3_THROW_STATEMENT__EXPRESSION, null, msgs);<z>
(newExpression, msgs);<z>
.dispatch();<z>
))<z>
AS3_THROW_STATEMENT__EXPRESSION, newExpression, newExpression));<z>
String text) {<z>
{<z>
(text);<z>
();<z>
) throws OperationFailedException {<z>
) {<z>
) {<z>
();<z>
else {<z>
.getName()).asInt();<z>
else {<z>
;<z>
{<z>
FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);<z>
.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);<z>
AssetCategoryProperty assetCategoryProperty : assetCategoryProperties) {<z>
(AssetCategoryPropertyModelImpl.ENTITY_CACHE_ENABLED,<z>
,<z>
assetCategoryProperty.getPrimaryKey());<z>
;<z>
BridgeFactory<?>> type) {<z>
();<z>
type);<z>
} finally {<z>
readLock().unlock();<z>
{<z>
;<z>
).setSelected(false);<z>
.getBtnWorkOffline().setFocusable(false);<z>
setEnabled(false);<z>
false);<z>
;<z>
().setEnabled(false);<z>
(false);<z>
setFocusable(false);<z>
(false);<z>
(false);<z>
false);<z>
getBtnReOpenBugReport().setEnabled(false);<z>
;<z>
false);<z>
.setEnabled(false);<z>
.getBtnFixBugReport().setSelected(false);<z>
getBtnFixBugReport().setFocusable(false);<z>
,<z>
String details) {<z>
this.logType = LogType.REPORT_SCHEMA_CHANGE;<z>
this.user = user;<z>
;<z>
= appAction;<z>
.details = details;<z>
));<z>
Creator<ISKIdentity>() {<z>
public ISKIdentity createFromParcel(Parcel in) {<z>
;<z>
ident;<z>
ISKIdentity[] newArray(int size) {<z>
[size];<z>
, int itemPos, int itemCount) {<z>
desc = descriptors[index];<z>
;<z>
< itemCount) {<z>
.getItem(itemPos);<z>
getData() != desc) {<z>
;<z>
setData(desc);<z>
desc));<z>
== 0) {<z>
0);<z>
updateFolders(desc);<z>
{<z>
;<z>
);<z>
desc);<z>
;<z>
== 0) {<z>
resourceNames.setSelection(0);<z>
(desc);<z>
(true);<z>
, int offset)<z>
ShortBufferException<z>
virgin)<z>
new IllegalStateException("not initialized");<z>
;<z>
member) {<z>
(new RedisCallback<Jedis>() {<z>
Jedis redis) {<z>
null) {<z>
, member);<z>
pipeline != null) {<z>
);<z>
null;<z>
member) > 0;<z>
false;<z>
});<z>
public StringNameValidator( final int minLength,<z>
,<z>
char[] validNonLetterOrDigitChars ) {<z>
, DEFAULT_CASE_SENSITIVE_NAME_COMPARISON, DEFAULT_REPLACEMENT_CHARACTER, validNonLetterOrDigitChars);<z>
, int elementIndex, int elementSize) {<z>
match = match;<z>
;<z>
matchSize;<z>
;<z>
elementIndex = elementIndex;<z>
= elementSize;<z>
TransitionException {<z>
);<z>
mRest) {<z>
= transition(current, m);<z>
return current;<z>
new ClickHandler() {<z>
event)<z>
.preventDefault();<z>
target = getTargetHistoryToken();<z>
= HistoryStateImpl.getContextPath();<z>
);<z>
))<z>
(contextPath.length() - 1);<z>
startsWith("/"))<z>
.substring(1);<z>
;<z>
protected void addParamTwoValue(PARAM_TWO_TYPE value) {<z>
if (paramTwoValues == paramTwoDefValues) {<z>
paramTwoValues = new ArrayList<PARAM_TWO_TYPE>();<z>
);<z>
{<z>
_surveyName == null) {<z>
BLANK;<z>
return _surveyName;<z>
public RuleType createRuleTypeObjectFromString( EDataType eDataType,<z>
)<z>
AttributePackage.Literals.RULE_TYPE,<z>
initialValue );<z>
pOther) {<z>
instanceof Map.Entry)) {<z>
false;<z>
entry = (Map.Entry) pOther;<z>
k1 = mKey;<z>
= entry.getKey();<z>
k1.equals(k2))) {<z>
;<z>
.getValue();<z>
))) {<z>
return true;<z>
return false;<z>
lang.String in0, long in1)<z>
.InvalidSessionException,<z>
.atlassian.confluence.rpc.RemoteException {<z>
{<z>
;<z>
_call = createCall();<z>
[22]);<z>
);<z>
;<z>
.soap.SOAPConstants.SOAP11_CONSTANTS);<z>
"http://soap.rpc.confluence.atlassian.com", "getChildren"));<z>
_call);<z>
;<z>
in1) });<z>
_resp instanceof java.rmi.RemoteException) {<z>
java.rmi.RemoteException) _resp;<z>
{<z>
(_call);<z>
_resp;<z>
java.lang.Exception _exception) {<z>
apache.axis.utils.JavaUtils.convert(<z>
);<z>
org.apache.axis.AxisFault axisFaultException) {<z>
axisFaultException.detail != null) {<z>
.RemoteException) {<z>
) axisFaultException.detail;<z>
InvalidSessionException) {<z>
confluence.rpc.InvalidSessionException) axisFaultException.detail;<z>
.confluence.rpc.RemoteException) {<z>
confluence.rpc.RemoteException) axisFaultException.detail;<z>
throw axisFaultException;<z>
arg)<z>
Absyn.KVDBPutRsp();<z>
getActiveEditor() {<z>
);<z>
== null) {<z>
return null;<z>
getActiveEditor();<z>
!= null) {<z>
;<z>
] editorReferences = activePage<z>
();<z>
(IEditorReference edRef : editorReferences) {<z>
IEditorPart editorPart = edRef.getEditor(false);<z>
instanceof IJBEditor) {<z>
;<z>
getEditorHelper().isActive()) {<z>
gdEd;<z>
null;<z>
String arguments) throws CoreException<z>
);<z>
));<z>
antRunner.setArguments(arguments);<z>
));<z>
<Item> getAllFarms() {<z>
Item>();<z>
;<z>
).getCompanyForUser(user);<z>
(comp == null) {<z>
));<z>
;<z>
getDao().getAllFishFarms();<z>
fishFarm : fishFarms)<z>
fishFarm.getAddress() + ")"));<z>
items;<z>
word) {<z>
if (fCaseSensitive)<z>
evaluate(scanner, word);<z>
.clear();<z>
); i < n; i++)<z>
));<z>
= fUppercaseWords.get(fBuffer);<z>
token != null)<z>
;<z>
UNDEFINED;<z>
(<z>
jobConf,<z>
Deserializer deserializer,<z>
predicate)<z>
get(<z>
.hive.serde.Constants.LIST_COLUMNS);<z>
columnNames =<z>
(","));<z>
= (HBaseSerDe) deserializer;<z>
hbaseSerde.getKeyColumnOffset();<z>
.Constants.LIST_COLUMN_TYPES).<z>
[keyColPos];<z>
IndexPredicateAnalyzer analyzer =<z>
get(keyColPos), keyColType,<z>
0));<z>
IndexSearchCondition> searchConditions =<z>
();<z>
=<z>
;<z>
);<z>
|| 2 < scSize) {<z>
;<z>
if (scSize == 2 &&<z>
(0).getComparisonOp()<z>
equals("org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPEqual") ||<z>
.getComparisonOp()<z>
("org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPEqual"))) {<z>
null;<z>
decomposedPredicate = new DecomposedPredicate();<z>
= analyzer.translateSearchConditions(<z>
searchConditions);<z>
;<z>
decomposedPredicate;<z>
fields, URI uri, SinkMode sinkMode )<z>
;<z>
;<z>
currentType) {<z>
if (type.equals(currentType)) {<z>
false;<z>
;<z>
{<z>
UiKey.paths);<z>
{<z>
.substring(0, 32);<z>
, "_"));<z>
(increasePosition) {<z>
position++;<z>
(pageId, position);<z>
) {<z>
new Recipe("steak");<z>
.Meat));<z>
Type.Grocery));<z>
), Ingredient.Type.Grocery));<z>
;<z>
,<z>
final int a_upperBounds)<z>
InvalidConfigurationException {<z>
;<z>
a_lowerBounds;<z>
= a_upperBounds;<z>
) throws TException {<z>
{<z>
first_ = false;<z>
;<z>
} else {<z>
);<z>
!colon_;<z>
jsFunction_isURLValid(String urlVal)<z>
APIManagementException {<z>
response = "";<z>
&& !urlVal.equals("")) {<z>
;<z>
.openConnection();<z>
conn.connect();<z>
;<z>
) {<z>
response = "malformed";<z>
} catch (UnknownHostException e) {<z>
"unknown";<z>
} catch (ConnectException e) {<z>
response = "Cannot establish connection to the provided address";<z>
SSLHandshakeException e) {<z>
response = "ssl_error";<z>
) {<z>
e.getMessage();<z>
return response;<z>
public PrivateCredentialPermission(String name, String action) {<z>
name);<z>
if (READ.equalsIgnoreCase(action)) {<z>
(name);<z>
else {<z>
("auth.11"));<z>
void actionPerformed(ActionEvent ae)<z>
)<z>
trace("DetailViewActionListener - print");<z>
;<z>
getSource() == editButton)<z>
trace("DetailViewActionListener - edit");<z>
;<z>
companyId, boolean active)<z>
throws SystemException {<z>
!InlineSQLHelperUtil.isEnabled()) {<z>
, active);<z>
(3);<z>
append(_FILTER_SQL_COUNT_LAYOUTSETPROTOTYPE_WHERE);<z>
);<z>
(_FINDER_COLUMN_C_A_ACTIVE_2);<z>
replacePermissionCheck(query.toString(),<z>
.class.getName(),<z>
);<z>
Session session = null;<z>
session = openSession();<z>
sql);<z>
,<z>
dao.orm.Type.LONG);<z>
.getInstance(q);<z>
qPos.add(companyId);<z>
qPos.add(active);<z>
);<z>
();<z>
(Exception e) {<z>
(e);<z>
(session);<z>
{<z>
setOnClickListener(new View.OnClickListener() {<z>
v) {<z>
(TAG, "Go Left Clicked");<z>
.handleGoLeftClicked();<z>
);<z>
(new View.OnClickListener() {<z>
{<z>
(TAG, "Go Right Clicked");<z>
);<z>
);<z>
new View.OnClickListener() {<z>
arg0) {<z>
.handleCancelClicked();<z>
Log.d(TAG, "Dismiss Click");<z>
;<z>
) {<z>
0) {<z>
];<z>
} else {<z>
return -1;<z>
boolean deleteSelection(View view, Editable content) {<z>
.getSelectionStart(content);<z>
content);<z>
< selectionStart) {<z>
selectionEnd;<z>
selectionEnd = selectionStart;<z>
selectionStart = temp;<z>
if (selectionStart != selectionEnd) {<z>
selectionEnd);<z>
true;<z>
return false;<z>
synchronized VersionCheckClient getSingleton() {<z>
instance == null) {<z>
);<z>
(instance);<z>
(String documentId){<z>
routeNodeInstances = null;<z>
().getCurrentRouteNodeInstances(documentId);<z>
for (RouteNodeInstance currentNode : routeNodeInstances) {<z>
return currentNode.getName();<z>
return null;<z>
)<z>
null;<z>
();<z>
;<z>
);<z>
class);<z>
));<z>
("constituency",constituency));<z>
++)<z>
).get(i));<z>
e)<z>
);<z>
session!=null)<z>
close();<z>
return Votelist;<z>
parent) {<z>
(parent, SWT.BORDER);<z>
);<z>
setEditable(true);<z>
;<z>
String newDescriptionContent) throws RulesRepositoryException {<z>
node.checkout();<z>
.node.setProperty( DESCRIPTION_PROPERTY_NAME,<z>
);<z>
getInstance();<z>
( LAST_MODIFIED_PROPERTY_NAME,<z>
lastModified );<z>
e ) {<z>
log.error( "Caught Exception",<z>
;<z>
( e );<z>
renderRoleSet(Set<String> requiredParents) {<z>
boolean first = true;<z>
;<z>
requiredParents) {<z>
first) {<z>
first = false;<z>
else {<z>
.append(" or ");<z>
le=");<z>
sb.append(role);<z>
append('\u201D');<z>
return sb;<z>
(long userId)<z>
, SystemException {<z>
findByPrimaryKey(userId);<z>
();<z>
[] defaultUserGroupNames = PrefsPropsUtil.getStringArray(<z>
), PropsKeys.ADMIN_DEFAULT_USER_GROUP_NAMES,<z>
, PropsValues.ADMIN_DEFAULT_USER_GROUP_NAMES);<z>
: defaultUserGroupNames) {<z>
.findByC_N(<z>
user.getCompanyId(), defaultUserGroupName);<z>
.containsUserGroup(<z>
{<z>
getUserGroupId());<z>
nsuge) {<z>
(<z>
userGroupIdSet.size()]));<z>
userGroupIds) {<z>
);<z>
);<z>
(String authMethod, String realmName,<z>
loginPage, String errorPage) {<z>
);<z>
(authMethod);<z>
setRealmName(realmName);<z>
loginPage);<z>
;<z>
doc1, Document doc2)<z>
.version)<z>
return doc2;<z>
(doc2.version);<z>
findModelCopy) {<z>
UsageViewPresentation();<z>
scope = getTitleForScope(findModelCopy);<z>
String stringToFind = findModelCopy.getStringToFind();<z>
scope);<z>
;<z>
;<z>
));<z>
(toOpenInNewTab);<z>
false);<z>
;<z>
boolean isAdmin(CommandSender s) {<z>
isOp())<z>
true;<z>
if (!plugin.PermissionUse)<z>
return false;<z>
Player) {<z>
) s, "lc.admin")<z>
, "lc.admin.*")<z>
(Player) s, "lc.admin.purge")<z>
has((Player) s, "lc.admin.setexp")<z>
(Player) s, "lc.admin.reload")<z>
(Player) s, "lc.admin.getexp")<z>
((Player) s, "lc.admin.getlvl")<z>
s, "lc.admin.reset")<z>
)) {<z>
;<z>
{<z>
return false;<z>
return false;<z>
flushSyncBehavior)<z>
throws DatabaseException {<z>
commitLsn = DbLsn.NULL_LSN;<z>
{<z>
);<z>
{<z>
throw new DatabaseException<z>
+<z>
;<z>
(handleLockToHandleMap != null) {<z>
Iterator handleLockIter =<z>
.entrySet().iterator();<z>
)){<z>
handleLockIter.next();<z>
entry.getKey(),<z>
getValue());<z>
.getLogManager();<z>
();<z>
numWriteLocks = 0;<z>
(writeInfo != null) {<z>
writeInfo.size();<z>
=<z>
new TxnCommit(id, lastLoggedLsn);<z>
) {<z>
= logManager.<z>
);<z>
} else if (flushSyncBehavior == TXN_WRITE_NOSYNC) {<z>
commitLsn = logManager.<z>
commitRecord, false);<z>
} else {<z>
= logManager.log(commitRecord);<z>
;<z>
;<z>
.values().iterator();<z>
(iter.hasNext()) {<z>
iter.next();<z>
this);<z>
(info.abortLsn != DbLsn.NULL_LSN &&<z>
) {<z>
(info.abortLsn);<z>
longLsn)) {<z>
logManager.countObsoleteNode<z>
abortLsn, null);<z>
;<z>
;<z>
0) {<z>
deleteInfo.values(),<z>
false);<z>
;<z>
numReadLocks);<z>
);<z>
close(true);<z>
return commitLsn;<z>
e) {<z>
e;<z>
{<z>
(flushSyncBehavior == TXN_SYNC,<z>
(t instanceof DatabaseException));<z>
,<z>
);<z>
abortT2) {<z>
DatabaseException<z>
("Failed while attempting to commit transaction " +<z>
getMessage() +<z>
getMessage(),<z>
;<z>
DatabaseException<z>
("Failed while attempting to commit transaction " + id +<z>
, t);<z>
) {<z>
;<z>
;<z>
, FillStyle.FILL_STYLE_BACKGROUND);<z>
.applyStyle(cross, be);<z>
ResourcePermission> findByC_N_S_P_R(long companyId,<z>
start,<z>
{<z>
name, scope, primKey, roleIds, start,<z>
null);<z>
{<z>
true;<z>
= new JLabel();<z>
;<z>
LimeJProgressBar();<z>
getPreferredSize();<z>
;<z>
BAR, SizePolicy.RESTRICT_HEIGHT);<z>
getLocale());<z>
(3);<z>
;<z>
));<z>
);<z>
this);<z>
(LABEL != null) {<z>
SkinHandler.getWindow4Color());<z>
setMaximum(steps+1);<z>
;<z>
;<z>
) {<z>
;<z>
() : this.hashCode();<z>
() {<z>
private int myContextAnonymousInt;<z>
IOException {<z>
);<z>
== TEXT && isWhitespace()) {<z>
;<z>
&& eventType != END_TAG) {<z>
(<z>
()<z>
": expected start or end tag", this, null);<z>
return eventType;<z>
{<z>
()<z>
.maxEntries(4096)<z>
);<z>
csvReader, URL url) {<z>
.assertNotNull(csvReader);<z>
;<z>
close();<z>
catch (IOException e) {<z>
"DDDB: I/O warning: failed to close DDDB file: "<z>
;<z>
private static void xml() {<z>
inXml) return;<z>
inXml = true;<z>
;<z>
new StringWriter();<z>
) :<z>
get())));<z>
outputWriter);<z>
);<z>
;<z>
));<z>
modeName());<z>
? "YES" : "NO");<z>
);<z>
(xml);<z>
Loader.printXML(xml);<z>
(xml);<z>
applyToTools(new ToolVisitor() {<z>
) {<z>
push("tool");<z>
toString());<z>
(xml);<z>
();<z>
;<z>
);<z>
("errorTotal", ErrorMessage.getTotalNumberOfErrors());<z>
.getTotalNumberOfDistinctErrors());<z>
ErrorMessages.xmlErrorsByMethod(xml);<z>
(xml);<z>
);<z>
ErrorMessages.xmlErrorsByLock(xml);<z>
);<z>
;<z>
("yikesTotal", Yikes.getNumYikes());<z>
"failed", Assert.getFailed());<z>
;<z>
();<z>
);<z>
;<z>
)<z>
Player player = env.getPlayer();<z>
0;<z>
env.getVisibleObject() instanceof Npc)<z>
getNpcId();<z>
.getQuestStateList().getQuestState(questId);<z>
== 204596)<z>
() == QuestStatus.NONE)<z>
26)<z>
1011);<z>
(env);<z>
== 204590)<z>
getQuestVarById(0) == 0)<z>
.getDialogId() == 26)<z>
sendQuestDialog(env, 1352);<z>
)<z>
qs.getQuestVarById(0) + 1);<z>
env);<z>
).getObjectId(), 10));<z>
true;<z>
(env);<z>
== 204630)<z>
qs != null)<z>
getStatus() == QuestStatus.START)<z>
, 2375);<z>
)<z>
;<z>
;<z>
;<z>
env);<z>
(env);<z>
false;<z>
static int GetFileSecurity(String path,<z>
int requestedInformation,<z>
pSecurityDescriptor,<z>
WindowsException<z>
NativeBuffer buffer = asNativeBuffer(path);<z>
(), requestedInformation,<z>
, nLength);<z>
{<z>
;<z>
Object element) {<z>
) {<z>
true;<z>
(element instanceof ILaunchConfiguration) {<z>
)element;<z>
resources = config.getMappedResources();<z>
if(resources == null) {<z>
true;<z>
{<z>
;<z>
.exists()) {<z>
true;<z>
(CoreException e) {}<z>
return false;<z>
documentManager,<z>
ClientException {<z>
, fullname, path,<z>
, true);<z>
req) {<z>
== req.getElementType()) {<z>
);<z>
) {<z>
));<z>
return null;<z>
final Config config) {<z>
.getUsername();<z>
);<z>
.getGroup();<z>
edgePropertyKeys,<z>
vertexPropertiesRule, final ElementPropertiesRule edgePropertiesRule) {<z>
;<z>
this.vertexPropertyKeys = vertexPropertyKeys;<z>
;<z>
= edgePropertyKeys;<z>
(int n)<z>
1 || movement_speed + n > 3)<z>
.movement_speed += n;<z>
i++)<z>
);<z>
(Object object)<z>
user = (User)object;<z>
user.name)<z>
) == user.meals.size()<z>
user.members.size())<z>
meal++)<z>
user.meals.get(meal)))<z>
return false;<z>
++)<z>
))<z>
false;<z>
return true;<z>
false;<z>
) {<z>
responseHeaders = new HttpHeaders();<z>
responseHeaders.setContentType(MediaType<z>
+ ";charset=UTF-8"));<z>
return responseHeaders;<z>
() {<z>
);<z>
.yCoord, this.zCoord);<z>
!= null && pipe.gate != null){<z>
ordinal();<z>
{<z>
.gateKind = 0;<z>
((byte) 0, coreState);<z>
((byte) 1, renderState);<z>
IClientState) {<z>
) pipe);<z>
getPacket();<z>
currencyId) {<z>
(currencyId));<z>
{<z>
final XQuery query = new XQuery(<z>
ctx);<z>
final QT3Result res = result(query);<z>
= res;<z>
(false)<z>
public final void rule__MultiplicativeExpression__OpAssignment_1_0() throws RecognitionException {<z>
();<z>
.getMultiplicativeExpressionAccess().getOpAlternatives_1_0_0());<z>
);<z>
rule__MultiplicativeExpression__OpAlternatives_1_0_0();<z>
;<z>
));<z>
catch (RecognitionException re) {<z>
(re);<z>
re);<z>
;<z>
{<z>
onCreate(savedInstanceState);<z>
.layout.topic);<z>
.id.linlayout);<z>
findViewById(R.id.webview);<z>
.getSettings().setJavaScriptEnabled(true);<z>
JSInterface(mWebView);<z>
;<z>
, "text/html", "utf-8");<z>
();<z>
== null) {<z>
;<z>
.getInt("PID",0);<z>
);<z>
execute(mPid, mPage);<z>
} else {<z>
threadSaved;<z>
o.mTopic;<z>
mPage;<z>
= o.mHtmlCode;<z>
mPid;<z>
);<z>
<Weight> x) {<z>
).getValue();<z>
setValue( x, false );<z>
;<z>
).doubleValue() );<z>
)<z>
(DATABASE_NAME);<z>
)<z>
);<z>
));<z>
(STATUS, obj.getStatus());<z>
.getDistributorName1());<z>
(DISTRIBUTOR_NAME_2, obj.getDistributorName2());<z>
getDistributorDisplay());<z>
;<z>
;<z>
getGender());<z>
.getDistributorCatId());<z>
());<z>
ADDRESS_1, obj.getAddress1());<z>
obj.getAddress2());<z>
;<z>
());<z>
, obj.getState());<z>
getCountryId());<z>
));<z>
obj.getPhone1());<z>
());<z>
obj.getFax());<z>
obj.getEmail());<z>
);<z>
, obj.getSendNews());<z>
));<z>
);<z>
CUSTOM_2, obj.getCustom2());<z>
);<z>
obj.getCustom4());<z>
());<z>
;<z>
);<z>
());<z>
.getModified());<z>
getCreatedBy());<z>
));<z>
criteria;<z>
(Node parent, Node node) {<z>
)) {<z>
(getCatchBlock(parent))) {<z>
parent.removeChild(node);<z>
{<z>
.detachChildren();<z>
()) {<z>
);<z>
tryNode));<z>
node.detachFromParent();<z>
} else if (isTryCatchNodeContainer(node)) {<z>
tryNode = node.getParent();<z>
);<z>
detachChildren();<z>
else if (node.isBlock()) {<z>
.detachChildren();<z>
} else if (isStatementBlock(parent)<z>
) {<z>
.removeChild(node);<z>
parent.isVar()) {<z>
)) {<z>
);<z>
} else {<z>
(node);<z>
);<z>
)<z>
)) {<z>
parent.removeChild(node);<z>
(parent.getParent(), parent);<z>
(parent.isFor()<z>
) == 4) {<z>
());<z>
else {<z>
IllegalStateException("Invalid attempt to remove node: " +<z>
parent.toString());<z>
EList<ContextElement> getElements() {<z>
) {<z>
);<z>
elements;<z>
void respond(<z>
HttpServletRequest httpRequest,<z>
HttpServletResponse httpResponse) {<z>
.info("Responding to an OMH read request.");<z>
) {<z>
.SC_BAD_REQUEST);<z>
.respond(httpRequest, httpResponse, null);<z>
()) {<z>
(HttpServletResponse.SC_BAD_REQUEST);<z>
httpRequest, httpResponse);<z>
streamReadRequest.respond(httpRequest, httpResponse);<z>
, OutboundMessage msg)<z>
+ gatewayId);<z>
out.println(msg);<z>
static KalturaTubeMogulSyndicationFeedOrderBy get(String hashCode) {<z>
"+playlistId"))<z>
PLAYLIST_ID_ASC;<z>
hashCode.equals("-playlistId"))<z>
return PLAYLIST_ID_DESC;<z>
("+name"))<z>
return NAME_ASC;<z>
)<z>
NAME_DESC;<z>
if (hashCode.equals("+type"))<z>
return TYPE_ASC;<z>
))<z>
TYPE_DESC;<z>
.equals("+createdAt"))<z>
return CREATED_AT_ASC;<z>
if (hashCode.equals("-createdAt"))<z>
CREATED_AT_DESC;<z>
return PLAYLIST_ID_ASC;<z>
() {<z>
final MTJTrack track = new MTJTrack();<z>
= track.size = size;<z>
];<z>
{<z>
[i].duplicate();<z>
track.points[i] = point;<z>
(track);<z>
id;<z>
= color;<z>
;<z>
= lastpointid;<z>
pointiding = pointiding;<z>
return track;<z>
List<INews> newsList, INews news) {<z>
{<z>
.get(i)))<z>
return i;<z>
return -1;<z>
ISpellCheckerSession asInterface(android.os.IBinder obj)<z>
) {<z>
;<z>
obj.queryLocalInterface(DESCRIPTOR);<z>
{<z>
.internal.textservice.ISpellCheckerSession)iin);<z>
Stub.Proxy(obj);<z>
,<z>
response,<z>
)<z>
null &&<z>
getPath()) != null)<z>
if (_fileOut==null)<z>
StringBuilder(160);<z>
.getField("X-I2P-DestHash");<z>
if(addr != null)<z>
);<z>
request.getRemoteAddr());<z>
(" - ");<z>
();<z>
);<z>
" [");<z>
;<z>
("] \"");<z>
append(request.getMethod());<z>
.append(' ');<z>
;<z>
append(' ');<z>
append(request.getVersion());<z>
buf.append("\" ");<z>
getStatus();<z>
)%10)));<z>
)%10)));<z>
10)));<z>
(responseLength>=0)<z>
);<z>
responseLength>99999)<z>
Integer.toString(responseLength));<z>
if (responseLength>9999)<z>
);<z>
>999)<z>
);<z>
responseLength>99)<z>
100)%10)));<z>
if (responseLength>9)<z>
);<z>
responseLength%10)));<z>
buf.append(' ');<z>
" - ");<z>
);<z>
synchronized(_writer)<z>
;<z>
if (isExtended())<z>
request,response,_writer);<z>
))<z>
_writer.write(" -");<z>
(getLogCookies())<z>
] cookies = request.getCookies();<z>
.length==0)<z>
_writer.write(" -");<z>
(" \"");<z>
;i++)<z>
)<z>
';');<z>
);<z>
);<z>
i].getValue());<z>
("\"");<z>
)<z>
)));<z>
.write(StringUtil.__LINE_SEPARATOR);<z>
flush();<z>
catch(IOException e)<z>
warn(LogSupport.EXCEPTION,e);<z>
) {<z>
];<z>
= DistanceUtils.parseLatitudeLongitude(null, val);<z>
InvalidGeoException e) {<z>
.BAD_REQUEST, e);<z>
1], latLon[0]);<z>
private static String getString( String key,<z>
,<z>
{<z>
(key, value, value2);<z>
Uri uri) {<z>
uri;<z>
();<z>
if (null != id) {<z>
.setText(null);<z>
thumbBitmap = MediaStore.Images.Thumbnails.getThumbnail(<z>
getContentResolver(),<z>
(id),<z>
Thumbnails.MICRO_KIND,<z>
;<z>
;<z>
) {<z>
;<z>
> 0) {<z>
().line;<z>
;<z>
LogicalPosition(vline, repeatColumn));<z>
< repeatLines; i++) {<z>
repeatAppend && repeatColumn < MotionGroup.LAST_COLUMN &&<z>
repeatColumn) {<z>
, lline + i, repeatColumn);<z>
() > 0) {<z>
);<z>
context, off, pad);<z>
(repeatColumn >= MotionGroup.LAST_COLUMN) {<z>
.getCaretModel().moveToOffset(<z>
lline + i, true));<z>
;<z>
editor, vline + i) >= repeatColumn) {<z>
repeatColumn));<z>
1) : count);<z>
count);<z>
moveCaretHorizontal(editor, -1, false);<z>
0;<z>
repeatColumn = 0;<z>
false;<z>
moveCaret(editor, context, cpos);<z>
) {<z>
view.getRows();<z>
RowDef> rowDefs = rows.getRowDefCollection();<z>
(RowDef rowDef : rowDefs) {<z>
)) {<z>
rowDef;<z>
" for status view: "+view.getName());<z>
getLastModified() {<z>
.getLastModified();<z>
;<z>
(treeService != null) {<z>
.getLastModified();<z>
) {<z>
;<z>
return res;<z>
public void onResetClicked(View v) {<z>
;<z>
reset();<z>
setEnabled(false);<z>
setEnabled(false);<z>
{<z>
) {<z>
);<z>
) {<z>
return FlexoLocalization.localizedForKey("ontology_library");<z>
getCurrentPerspective() == VIEW_POINT_PERSPECTIVE) {<z>
return VIEW_POINT_PERSPECTIVE.getWindowTitleforObject(object);<z>
if (getCurrentPerspective() == ONTOLOGY_PERSPECTIVE) {<z>
);<z>
;<z>
boolean eIsSet( int featureID )<z>
)<z>
LEGEND__HORIZONTAL_SPACING :<z>
( );<z>
LayoutPackage.LEGEND__VERTICAL_SPACING :<z>
);<z>
case LayoutPackage.LEGEND__CLIENT_AREA :<z>
;<z>
:<z>
text != null;<z>
:<z>
isSetOrientation( );<z>
LayoutPackage.LEGEND__DIRECTION :<z>
);<z>
case LayoutPackage.LEGEND__SEPARATOR :<z>
return separator != null;<z>
.LEGEND__POSITION :<z>
( );<z>
case LayoutPackage.LEGEND__ITEM_TYPE :<z>
return isSetItemType( );<z>
.LEGEND__TITLE :<z>
!= null;<z>
case LayoutPackage.LEGEND__TITLE_POSITION :<z>
( );<z>
LEGEND__SHOW_VALUE :<z>
;<z>
LEGEND__SHOW_PERCENT :<z>
( );<z>
LEGEND__SHOW_TOTAL :<z>
return isSetShowTotal( );<z>
LEGEND__WRAPPING_SIZE :<z>
( );<z>
case LayoutPackage.LEGEND__MAX_PERCENT :<z>
isSetMaxPercent( );<z>
case LayoutPackage.LEGEND__TITLE_PERCENT :<z>
( );<z>
LEGEND__ELLIPSIS :<z>
isSetEllipsis( );<z>
:<z>
!= null;<z>
.eIsSet( featureID );<z>
) throws JniException {<z>
getPointer() == NULL) {<z>
new JniMarkerFieldException(<z>
"Pointer is NULL, trace closed? (populateMarkerInformation)");<z>
thisMarkerFieldPtr.getPointer());<z>
thisMarkerFieldPtr.getPointer());<z>
{<z>
(this.wasFirst) {<z>
;<z>
.append(s);<z>
s);<z>
void fillTextareaWithStyleSheetContent(InputStream stream) {<z>
new StringWriter();<z>
new InputStreamReader(stream);<z>
BufferedReader(streamReader);<z>
;<z>
;<z>
)) {<z>
)<z>
.write("\n");<z>
writer.write(line);<z>
true;<z>
buffer.close();<z>
.close();<z>
;<z>
);<z>
(Exception e) {<z>
;<z>
int doEndTag() throws JspException<z>
!userName.equals(""))<z>
(userName));<z>
!= null)<z>
String versionUserName = contentVersion.getVersionModifier();<z>
(""))<z>
getPrincipal(versionUserName));<z>
+ versionUserName);<z>
JspException("Must state either userName or contentVersion");<z>
this.userName = null;<z>
null;<z>
EVAL_PAGE;<z>
() {<z>
).getPlugin("Spout");<z>
{<z>
);<z>
useSpout = false;<z>
().getFullName() + " for spout support!");<z>
true;<z>
void doVerifyUniqueEmailAdress( String email, UserStoreKey userStoreKey )<z>
isEmpty( email ) )<z>
UserStoreEntity userStore = userStoreDao.findByKey( userStoreKey );<z>
usersWithThisEmail = findUsersWithEmail( email, userStoreKey );<z>
( usersWithThisEmail.size() > 0 )<z>
, userStore.getName() );<z>
UIAdvancedSearchForm> event) throws Exception {<z>
.getSource() ;<z>
uiForm.getAncestorOfType(UICalendarPortlet.class) ;<z>
) ;<z>
int stars) {<z>
;<z>
).toString()+"\n");<z>
FIRST_BASKET_Y_OFFSET));<z>
.GameProperties.FIRST_BASKET_Y_OFFSET));<z>
{<z>
();<z>
;<z>
this.g=0;<z>
.b=255;<z>
(SunGraphics2D sg,<z>
int xPoints[], int yPoints[],<z>
) {<z>
(validate(sg)) {<z>
(sg, xPoints, yPoints, nPoints);<z>
)<z>
nodeService, authenticationService,<z>
, workflowService);<z>
;<z>
String spaceKey) throws Exception<z>
this.xwikiContext);<z>
getName()));<z>
getSpaces().contains(spaceKey)) {<z>
, spaceKey));<z>
boolean spaceDeleted = true;<z>
getSpaceDocsName(spaceKey);<z>
pageName : pageNames) {<z>
;<z>
xwikiApi.exists(pageFullName)) {<z>
getDocument(pageFullName);<z>
{<z>
!doc.getLocked()) {<z>
);<z>
else {<z>
spaceDeleted = false;<z>
XWikiException e) {<z>
e.getMessage());<z>
false;<z>
{<z>
;<z>
;<z>
kernel) {<z>
ArrayList<ModuleConfigurer>();<z>
;<z>
for (AbstractName configurerName : configurerNames) {<z>
getGBean(configurerName);<z>
{<z>
.getClassLoader());<z>
getClassLoader());<z>
= (ModuleConfigurer) o;<z>
.add(configurer);<z>
GBeanNotFoundException e) {<z>
);<z>
;<z>
e) {<z>
();<z>
("dependencies"))<z>
.setActivePage(DependenciesPage.PAGE_ID);<z>
(href.equals("runtime"))<z>
.PAGE_ID);<z>
) {<z>
setActivePage(ExtensionsPage.PAGE_ID) == null)<z>
(ExtensionsPage.PAGE_ID);<z>
("ex-points")) {<z>
.PAGE_ID) == null)<z>
(ExtensionPointsPage.PAGE_ID);<z>
{<z>
)) {<z>
OverviewPage_buildTitle, PDEUIMessages.OverviewPage_buildQuestion))<z>
(getPDEEditor().getCommonProject());<z>
= new WorkspaceBuildModel(file);<z>
save();<z>
FileEditorInput(file);<z>
getPDEEditor(), in, false));<z>
;<z>
if (href.equals("export")) {<z>
.run();<z>
"action.convert")) {<z>
);<z>
if (href.equals("organize")) {<z>
().doSave(null);<z>
OrganizeManifestsAction organizeAction = new OrganizeManifestsAction();<z>
).getCommonProject()));<z>
);<z>
equals("externalize")) {<z>
).doSave(null);<z>
;<z>
).getCommonProject()));<z>
.run(null);<z>
(e);<z>
paData, int pnLen) {<z>
"1")) {<z>
String lcMsg = "";<z>
"";<z>
;<z>
= pnLen>160 ? 160 : pnLen;<z>
pnLen; i++) {<z>
-1] & 0xff));<z>
+ lcPart );<z>
>=32)<z>
i-1]);<z>
".";<z>
==0 || i==pnLen) {<z>
)<z>
;<z>
lcDispl);<z>
lcMsg = "";<z>
"";<z>
String extension) {<z>
.length()==0)<z>
return name;<z>
int dotIndex = name.lastIndexOf(".");<z>
)<=5) {<z>
name.charAt(dotIndex+1)))<z>
name += extension;<z>
substring(0, dotIndex) + extension;<z>
+= extension;<z>
return name;<z>
> MessageBuf<T> outboundMessageBuffer() {<z>
) {<z>
handler instanceof ChannelOutboundHandler) {<z>
throw new NoSuchBufferException(String.format(<z>
class.getSimpleName(),<z>
ByteBuf.class.getSimpleName()));<z>
{<z>
.format(<z>
);<z>
>) outMsgBuf;<z>
, String userId, String roleId) {<z>
;<z>
userId;<z>
.roleId = roleId;<z>
(StringTokenizer strtok)<z>
ArrayList<Integer>();<z>
while(strtok.hasMoreTokens())<z>
parseInt(strtok.nextToken()));<z>
)<z>
_peekToken != UNSET) {<z>
toReturn = _peekToken;<z>
= UNSET;<z>
;<z>
int ch = consumeWhiteSpace();<z>
{<z>
case '(':<z>
')':<z>
'?':<z>
':':<z>
';':<z>
:<z>
:<z>
case '%':<z>
case '*':<z>
:<z>
return ch;<z>
'>':<z>
'=')<z>
;<z>
;<z>
'>';<z>
'<':<z>
() == '=')<z>
LE;<z>
);<z>
'<';<z>
'=':<z>
() == '=')<z>
return EQ;<z>
UNKNOWN;<z>
'!':<z>
(read() == '=')<z>
NEQ;<z>
return UNKNOWN;<z>
case '&':<z>
() == '&')<z>
AND;<z>
UNKNOWN;<z>
case '|':<z>
)<z>
;<z>
UNKNOWN;<z>
ch);<z>
final StopContext context) {<z>
;<z>
;<z>
shutdown();<z>
, boolean sort )<z>
String item;<z>
sort ) {<z>
itemUC;<z>
i;<z>
) {<z>
String) items.nextElement();<z>
.toUpperCase();<z>
getItemCount(); i++ ) {<z>
toUpperCase() ) < 0 ) break;<z>
, i );<z>
} else {<z>
( items.hasMoreElements() ) {<z>
nextElement();<z>
;<z>
{<z>
;<z>
= Dropbox.OAUTH;<z>
oauth = OAuth.service(serviceInfo);<z>
oauthResponse = oauth.retrieveRequestToken();<z>
(oauthResponse.error == null) {<z>
;<z>
SessionKeys.TOKEN, oauthResponse.token);<z>
SessionKeys.SECRET, oauthResponse.secret);<z>
.token) +<z>
+ "/auth-cb", "UTF-8"));<z>
else {<z>
);<z>
"Error connecting to Dropbox.");<z>
(WOComponent component) {<z>
NSMutableArray ajaxOptionsArray = new NSMutableArray();<z>
("onCancel", AjaxOption.FUNCTION));<z>
, AjaxOption.FUNCTION));<z>
, AjaxOption.FUNCTION));<z>
"onFailure", AjaxOption.FUNCTION));<z>
AjaxOption.FUNCTION));<z>
));<z>
));<z>
);<z>
"useSpinner", AjaxOption.BOOLEAN));<z>
, AjaxOption.STRING));<z>
DICTIONARY));<z>
), component);<z>
);<z>
, options);<z>
;<z>
public void attachListener(PropertyChangeListener listener)<z>
addPropertyChangeListener(listener);<z>
instanceof JComboBox) {<z>
c = (JComboBox) area;<z>
) {<z>
ActionEvent e) {<z>
notifyDataToSave();<z>
;<z>
} else if (area instanceof JTextComponent) {<z>
c = (JTextComponent) area;<z>
.getDocument().addDocumentListener(this);<z>
) {<z>
(key)) {<z>
;<z>
;<z>
.getPropertiesEditionPart(kind, key);<z>
IdentitySet<ReplyDoodad> anchors) {<z>
new CanonicalAnchorFinder(id);<z>
.each(finder);<z>
return finder.min;<z>
private void logMailCreation(MailImpl mail) {<z>
{<z>
StringBuilder("Created mail with name: ");<z>
getName());<z>
append(", sender: ");<z>
(mail.getSender());<z>
;<z>
).iterator();<z>
recipientIterator.hasNext()) {<z>
append(recipientIterator.next());<z>
);<z>
(", remote address: ");<z>
);<z>
", remote host name: ");<z>
.getRemoteHost());<z>
append('.');<z>
debug(messageBuffer.toString());<z>
public final void rule__XBlockExpression__Group_2__0__Impl() throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
( state.backtracking==0 ) {<z>
getExpressionsAssignment_2_0());<z>
FollowSets003.FOLLOW_rule__XBlockExpression__ExpressionsAssignment_2_0_in_rule__XBlockExpression__Group_2__0__Impl89044);<z>
;<z>
._fsp--;<z>
(state.failed) return ;<z>
( state.backtracking==0 ) {<z>
getXBlockExpressionAccess().getExpressionsAssignment_2_0());<z>
catch (RecognitionException re) {<z>
reportError(re);<z>
;<z>
;<z>
void rule__PojoEntityModifier2__Group_1__0() throws RecognitionException {<z>
);<z>
pushFollow(FOLLOW_rule__PojoEntityModifier2__Group_1__0__Impl_in_rule__PojoEntityModifier2__Group_1__042653);<z>
();<z>
state._fsp--;<z>
;<z>
FOLLOW_rule__PojoEntityModifier2__Group_1__1_in_rule__PojoEntityModifier2__Group_1__042656);<z>
();<z>
;<z>
return ;<z>
RecognitionException re) {<z>
reportError(re);<z>
,re);<z>
);<z>
getMarshalingCostImpl(Value argValue)<z>
)<z>
Marshal.ONE;<z>
argValue.length() == 1)<z>
ONE;<z>
else if (argValue.isLongConvertible())<z>
THREE;<z>
.FOUR;<z>
(DragGestureEvent event) {<z>
()) {<z>
setCursor(dragCursor);<z>
dragSource.startDrag(event, DragSource.DefaultMoveDrop,<z>
;<z>
getSourceAsDragGestureRecognizer().resetRecognizer();<z>
CollateralRequest(<z>
CollReqID aCollReqID,<z>
CollAsgnReason aCollAsgnReason,<z>
aTransactTime ) {<z>
(new MsgType("AX"));<z>
;<z>
aCollAsgnReason);<z>
set(aTransactTime);<z>
void skipTags(XMLStreamReader reader, boolean exitCondition) {<z>
0;<z>
()) != END_DOCUMENT) {<z>
if (state == START_ELEMENT) {<z>
;<z>
if (state == END_ELEMENT) {<z>
== 0 && exitCondition) return;<z>
tags--;<z>
(XMLStreamException e) {<z>
;<z>
updateCheckSum(MethodInfo prologue) {<z>
md, md2;<z>
getInstance("SHA1");<z>
("SHA1");<z>
NoSuchAlgorithmException e) {<z>
e);<z>
null;<z>
;<z>
= null;<z>
tempFile = null;<z>
if (dumpCacheKeyFile != null) {<z>
tempFile = new File(dumpCacheKeyFile +"-temp.txt");<z>
new PrintWriter(tempFile);<z>
(FileNotFoundException e) {<z>
printStackTrace();<z>
) {<z>
;<z>
;<z>
Collections.sort(classNames);<z>
classNames) {<z>
);<z>
(ci.getMethodSignatures());<z>
methodNames);<z>
methodNames) {<z>
= ci.getMethodInfo(method);<z>
hasCode()) {<z>
mi, md);<z>
{<z>
print("M "+mi+": ");<z>
, md2);<z>
digest();<z>
.println(getDigestString());<z>
getFinalConstantPool();<z>
updateCheckSum(cp, md);<z>
) {<z>
print("CP " + ci + ": ");<z>
;<z>
();<z>
+" ");<z>
.println(getDigestString());<z>
this.digest = md.digest();<z>
);<z>
writer != null) {<z>
);<z>
() + ".txt");<z>
;<z>
;<z>
;<z>
, float par9)<z>
.getBlockTileEntity(par2, par3, par4);<z>
null)<z>
;<z>
ForgeDirection.DOWN))<z>
;<z>
par3, par4))<z>
true;<z>
, par3, par4)))<z>
;<z>
))<z>
return true;<z>
par3, par4 - 1)))<z>
;<z>
par3, par4 + 1)))<z>
return true;<z>
.blockID)<z>
par4), (IInventory)var10);<z>
== this.blockID)<z>
));<z>
1) == this.blockID)<z>
(IInventory)var10);<z>
) == this.blockID)<z>
1));<z>
isRemote)<z>
;<z>
((IInventory)var10);<z>
;<z>
IExtension ext){<z>
.getConfigurationElements();<z>
{<z>
i];<z>
getName())){<z>
;<z>
null;<z>
)<z>
);<z>
){<z>
+ name );<z>
( null );<z>
Object obj) {<z>
this == obj) {<z>
;<z>
(obj)) {<z>
false;<z>
) obj;<z>
), other.getValue());<z>
{<z>
.println("JoglPipeline.updateMaterialColor()");<z>
;<z>
b, a);<z>
(GL2.GL_LIGHTING);<z>
stop()<z>
null);<z>
.getContext().ungetService(m_packageAdminRef);<z>
Method getResolvedFactoryMethod() {<z>
{<z>
this.resolvedConstructorOrFactoryMethod;<z>
) candidate : null);<z>
public float readFloat() throws IOException<z>
(style & STYLE_BINARY_FLOATING_POINT) != 0)<z>
("Binary deserialization of floats is not supported for GWT");<z>
());<z>
parseExclusions(String key, String exclusions) {<z>
== null) {<z>
;<z>
int numExclusions = 1;<z>
= 0;<z>
-1) {<z>
;<z>
++;<z>
new int[numExclusions * 2];<z>
= 0;<z>
newPos = 0;<z>
{<z>
;<z>
lo = 0, up = 0;<z>
exclusions.indexOf('-', pos);<z>
.substring(pos, newPos);<z>
= newPos + 1;<z>
',', pos);<z>
(newPos == -1) {<z>
= exclusions.length();<z>
pos, newPos);<z>
;<z>
= lower.length();<z>
int upperLength = upper.length();<z>
if (lowerLength != 4 && lowerLength != 6<z>
) {<z>
();<z>
Integer.parseInt(lower, 16);<z>
(upper, 16);<z>
(lo > up) {<z>
();<z>
Exception e) {<z>
) {<z>
"Failed parsing " + key +<z>
;<z>
;<z>
] = lo;<z>
exclusionRanges[j++] = up;<z>
exclusionRanges;<z>
void installLocus(View view) {<z>
.parse("market://search?q=pname:menion.android.locus")));<z>
e) {<z>
();<z>
sendCommandsToRouter(final DomainRouterVO elbVm,<z>
cmds) throws AgentUnavailableException {<z>
[] answers = null;<z>
(), cmds);<z>
OperationTimedoutException e) {<z>
);<z>
(<z>
(), e);<z>
(answers == null) {<z>
;<z>
!= cmds.size()) {<z>
return false;<z>
length > 0) {<z>
Answer ans = answers[0];<z>
.getResult();<z>
;<z>
void storeEvidence() throws ObjectStoreException {<z>
annotationEvidence : goTermGeneToEvidence.values()) {<z>
String>();<z>
= null;<z>
annotationEvidence) {<z>
"Evidence");<z>
;<z>
publicationEvidence = evidence.getPublications();<z>
) {<z>
.setCollection("publications", publicationEvidence);<z>
(goevidence);<z>
.getIdentifier());<z>
getStoredAnnotationId();<z>
new ReferenceList("evidence",<z>
));<z>
(refIds, goAnnotationRefId);<z>
int col) {<z>
{<z>
{<z>
length;<z>
];<z>
= rgb;<z>
int getOpticalZoomLevelFactor() {<z>
if (this.zoomControl != null) {<z>
() - 100)<z>
;<z>
;<z>
.Feature_NOT_SUPPORTED;<z>
config) throws RemoteException {<z>
);<z>
;<z>
getVirtualservers()));<z>
loadBalancerNames;<z>
public static void updateCtxBeforeType(final VjoValidationCtx ctx,<z>
){<z>
(node);<z>
;<z>
getMakeParentType(node) != null){<z>
;<z>
) != null){<z>
;<z>
, true);<z>
long numThreads) {<z>
<= 0) {<z>
"Number of threads must be greater than zero");<z>
;<z>
collectNewChildDescriptors(<z>
newChildDescriptors, Object object) {<z>
;<z>
createChildParameter(<z>
Literals.CONSTRAINT__SPECIFICATION,<z>
.createExpressionInOCL()));<z>
(int featureID) {<z>
switch (featureID) {<z>
case SclPackage.TDO_TYPE__GROUP:<z>
!= null && !group.isEmpty();<z>
:<z>
return !getSDO().isEmpty();<z>
.TDO_TYPE__DA:<z>
.isEmpty();<z>
case SclPackage.TDO_TYPE__CDC:<z>
null : !CDC_EDEFAULT.equals(cdc);<z>
case SclPackage.TDO_TYPE__IED_TYPE:<z>
);<z>
.eIsSet(featureID);<z>
( final BundleContext bundleContext )<z>
= new JspMappingTracker(<z>
();<z>
0, jspMappingTracker );<z>
(IWContext iwc) {<z>
(SCRIPT_PREFIX_PARAMETER);<z>
String suffix = iwc.getParameter(SCRIPT_SUFFIX_PARAMETER);<z>
DISPLAYSTRING_PARAMETER_NAME);<z>
valueString = iwc.getParameter(VALUE_PARAMETER_NAME);<z>
<Parameter>();<z>
SCRIPT_PREFIX_PARAMETER,prefix));<z>
new Parameter(SCRIPT_SUFFIX_PARAMETER,suffix));<z>
(new Parameter(DISPLAYSTRING_PARAMETER_NAME,displayString));<z>
(VALUE_PARAMETER_NAME,valueString));<z>
;<z>
{<z>
.size() == 0) {<z>
return null;<z>
).toString());<z>
(); i++) {<z>
();<z>
path);<z>
result);<z>
{<z>
getMessage());<z>
;<z>
(mProtoTuple);<z>
);<z>
;<z>
public Date getEndDate() {<z>
)) {<z>
Date end = new Date();<z>
Long.parseLong(endDate));<z>
return end;<z>
return null;<z>
Error> getErrors()<z>
errors == null)<z>
Bug309949TestLanguagePackage.MODEL__ERRORS);<z>
;<z>
String[] links) {<z>
0) { return ""; }<z>
= new StringBuilder();<z>
'\r', '\n' };<z>
(final String element : links) {<z>
);<z>
());<z>
tmp);<z>
return ret.toString();<z>
]s){<z>
new RobotExtraButton();<z>
(300, 300);<z>
.setVisible(true);<z>
{<z>
void mousePressed(MouseEvent e) {<z>
println("PRESSED "+e);<z>
MouseEvent e) {<z>
.println("RELEASED "+e);<z>
void mouseClicked(MouseEvent e) {<z>
.println("CLICKED "+e);<z>
;<z>
(robot);<z>
];<z>
); i++){<z>
);<z>
("TEST: "+buttonMask[i]);<z>
);<z>
)/2);<z>
out.println("TEST: press 1");<z>
robot.mousePress(InputEvent.BUTTON1_MASK);<z>
robot.delay(50);<z>
.mouseRelease(InputEvent.BUTTON1_MASK);<z>
;<z>
System.out.println("TEST: press 2");<z>
BUTTON2_MASK);<z>
;<z>
InputEvent.BUTTON2_MASK);<z>
robot);<z>
.out.println("TEST: press 3");<z>
robot.mousePress(InputEvent.BUTTON3_MASK);<z>
;<z>
BUTTON3_MASK);<z>
.waitForIdle(robot);<z>
("--------------------------------------------------");<z>
i < buttonMask.length; i++){<z>
[i]);<z>
);<z>
.delay(50);<z>
robot.mouseRelease(buttonMask[i]);<z>
Util.waitForIdle(robot);<z>
){<z>
);<z>
e);<z>
,<z>
orderByComparator) throws SystemException {<z>
= null;<z>
[] finderArgs = null;<z>
&&<z>
)) {<z>
FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID;<z>
new Object[] { uuid };<z>
finderPath = FINDER_PATH_WITH_PAGINATION_FIND_BY_UUID;<z>
{ uuid, start, end, orderByComparator };<z>
>)FinderCacheUtil.getResult(finderPath,<z>
;<z>
)) {<z>
for (KBComment kbComment : list) {<z>
))) {<z>
= null;<z>
== null) {<z>
StringBundler query = null;<z>
null) {<z>
new StringBundler(3 +<z>
* 3));<z>
= new StringBundler(3);<z>
_SQL_SELECT_KBCOMMENT_WHERE);<z>
uuid == null) {<z>
;<z>
{<z>
;<z>
;<z>
!= null) {<z>
,<z>
;<z>
append(KBCommentModelImpl.ORDER_BY_JPQL);<z>
String sql = query.toString();<z>
null;<z>
openSession();<z>
createQuery(sql);<z>
);<z>
) {<z>
(uuid);<z>
start,<z>
;<z>
Exception e) {<z>
throw processException(e);<z>
{<z>
finderPath, finderArgs);<z>
;<z>
.putResult(finderPath, finderArgs, list);<z>
(session);<z>
;<z>
) throws SystemException, SQLException<z>
);<z>
();<z>
JCheckList()<z>
(createData());<z>
(ListSelectionModel.SINGLE_SELECTION);<z>
;<z>
addMouseListener(new MouseListener()<z>
MouseEvent e) {}<z>
mousePressed(MouseEvent e)<z>
;<z>
.getModel().getElementAt(index);<z>
selected = !item.isSelected();<z>
;<z>
getCellBounds(index, index);<z>
);<z>
(selected)<z>
selectedItems++;<z>
.getSize())<z>
;<z>
;<z>
< 0)<z>
= 0;<z>
;<z>
) {}<z>
mouseEntered(MouseEvent e) {}<z>
void mouseExited(MouseEvent e) {}<z>
});<z>
0)<z>
);<z>
BoardData board_data, final List<ThreadData> data_list_db,<z>
callback) {<z>
= TuboroidApplication<z>
: false;<z>
(), use_external_storage);<z>
;<z>
* 1000) {<z>
;<z>
catch (SecurityException e) {<z>
false;<z>
, new DataFileAgent.FileReadUTF8Callback() {<z>
) {<z>
(reader == null) {<z>
();<z>
);<z>
);<z>
>());<z>
();<z>
);<z>
;<z>
;<z>
logger) {<z>
= "";<z>
.totalMemory()+"\n";<z>
;<z>
numFragments+" trash="+numObjectsInTrash+"\n";<z>
+pendingRequests+"\n";<z>
"@L.GL fragSizeBytes="+fragmentStorageSize+" trashSizeBytes="+trashStorageSize+"\n";<z>
+bucketMin+" bucketMax="+bucketMax+"\n";<z>
s+="@L.GL bucketConsumed="+bucketConsumed+"\n";<z>
"@L.GL byTag=";<z>
<messagesSentByTag.length; i++)<z>
i]+" ";<z>
;<z>
);<z>
private SipModel.ScanPredicate createPredicate() {<z>
();<z>
filterBox.getSelectedItem()) {<z>
:<z>
.ScanPredicate() {<z>
) {<z>
Pattern.compile(filterString));<z>
case MODULO:<z>
modulo;<z>
parseInt(filterString);<z>
(NumberFormatException e) {<z>
;<z>
) modulo = 1;<z>
int recordNumberModulo = modulo;<z>
.ScanPredicate() {<z>
record) {<z>
% recordNumberModulo == 0;<z>
);<z>
key, V value) {<z>
rawKey = rawKey(key);<z>
;<z>
<Long>() {<z>
RedisConnection connection) {<z>
(rawKey, rawValue);<z>
);<z>
propertySource) {<z>
;<z>
!relativePropertySourceName.equals(newPropertySourceName),<z>
.format(ILLEGAL_RELATIVE_ADDITION_MESSAGE, newPropertySourceName));<z>
) {<z>
());<z>
) {<z>
null;<z>
"LBL_NewJ2SEProjectWizardIterator_WizardProgress_CreatingProject"), 1);<z>
sourceFolders, testFolders, MANIFEST_FILE, librariesDefinition);<z>
NewJ2SEProjectWizardIterator.class, "LBL_NewJ2SEProjectWizardIterator_WizardProgress_PreparingToOpen"), 4);<z>
SharableLibrariesUtils.setLastProjectSharable(librariesDefinition != null);<z>
d) {<z>
?<z>
)d :<z>
));<z>
ValueObject(sqlTime));<z>
{<z>
null) {<z>
;<z>
;<z>
.Dynamic registration, String servletClass) {<z>
(annotationScanRequired) {<z>
ServletSecurityElement servletSecurityElement = processServletConstraintAnnotation(servletClass);<z>
servletSecurityElement != null) {<z>
(registration, servletSecurityElement);<z>
messageMethod, final JMethod jMethod) {<z>
{<z>
;<z>
)<z>
.isJBoss())<z>
JBossTransactionManagerLookup();<z>
JBossStandaloneJTAManagerLookup();<z>
throws ValidationException {<z>
= getFieldValue(getFieldName(), object);<z>
<T>) obj;<z>
) {<z>
T minComparatorValue = getMinComparatorValue();<z>
) < 0)) {<z>
object);<z>
();<z>
maxComparatorValue) > 0)) {<z>
getFieldName(), object);<z>
private static BufferedImage makeXArrow(Color background) {<z>
BufferedImage image = makeIcon(background);<z>
;<z>
(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);<z>
11 }, 3);<z>
image.flush();<z>
return image;<z>
) {<z>
;<z>
));<z>
SettingsEditorPanel(configuration);<z>
;<z>
.SOUTH);<z>
setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);<z>
,<z>
{<z>
rm.getTable(UserTable.NAME);<z>
(Bytes.toBytes(username));<z>
UserTable.DATA_FAMILY, UserTable.FIRSTNAME,<z>
.toBytes(firstName));<z>
);<z>
.toBytes(email));<z>
(put);<z>
.flushCommits();<z>
;<z>
() {<z>
null) {<z>
0, 0);<z>
(R.id.latitude);<z>
.setOnKeyListener(new View.OnKeyListener() {<z>
View v, int i, KeyEvent k) {<z>
;<z>
return false;<z>
;<z>
id.longitude);<z>
() {<z>
{<z>
;<z>
return false;<z>
;<z>
contains("anylongitude") == true) {<z>
, true));<z>
, "lon", true));<z>
);<z>
.setOnClickListener(new currentListener());<z>
String name) {<z>
(name);<z>
null)<z>
image;<z>
).getImageRegistry().put(name,<z>
(UIActivator.ICON_PATH + name));<z>
get(name);<z>
) {<z>
xsluri;<z>
= xmlsep;<z>
this.outputs = new Properties();<z>
HashMap<String, Object>();<z>
void initialize(NodeList children) throws IllegalStateException {<z>
= properties.get(FILENAME_ATTR);<z>
filename.length()==0) {<z>
("Property '" + FILENAME_ATTR + "' required to create file buffer object");<z>
= "";<z>
filename.startsWith("/")) {<z>
Pipeline.PROJECT_HOME);<z>
null) {<z>
projHome;<z>
+ filename);<z>
K> keyAnalyzer,<z>
K, ? extends V> m) {<z>
keyAnalyzer);<z>
;<z>
{<z>
) <= index)) {<z>
return 0;<z>
char ch = text.charAt(index);<z>
isWhitespace(ch)) {<z>
;<z>
{<z>
;<z>
isDigit(ch)) {<z>
return 3;<z>
) {<z>
;<z>
{<z>
4;<z>
o) {<z>
;<z>
o instanceof BookmarkRecord)) {<z>
;<z>
BookmarkRecord other = (BookmarkRecord) o;<z>
!super.equalPayloads(other)) {<z>
return false;<z>
)) {<z>
false;<z>
{<z>
title + ", " + this.guid);<z>
.guid);<z>
if (this.children == null &&<z>
children != null) {<z>
trace("Records differ: one children array is null.");<z>
return false;<z>
.children != null &&<z>
other.children == null) {<z>
trace("Records differ: one children array is null.");<z>
false;<z>
!= other.children.size()) {<z>
trace("Records differ: children arrays differ in size (" +<z>
.size() + ").");<z>
;<z>
++) {<z>
get(i);<z>
other.children.contains(child)) {<z>
child + " not found.");<z>
false;<z>
;<z>
stringsEqual(this.title, other.title)<z>
, other.bookmarkURI)<z>
, other.parentID)<z>
parentName)<z>
description, other.description)<z>
other.keyword)<z>
.tags, other.tags);<z>
, Instant postedTime) {<z>
!=null){<z>
;<z>
;<z>
currentForecast!=null){<z>
currentForecast);<z>
) {<z>
new StringTokenizer(sourcepath,<z>
.pathSeparator);<z>
>();<z>
st.hasMoreTokens()) {<z>
.nextToken();<z>
(s.endsWith(".jar") ||<z>
))) {<z>
.add(s);<z>
(new String[0]);<z>
closeConnection()<z>
;<z>
if (ircBot != null)<z>
.quit();<z>
;<z>
{<z>
properties = new Properties();<z>
));<z>
"unchecked")<z>
<String>)properties.propertyNames();<z>
{<z>
String propertyName = propertyNames.nextElement();<z>
);<z>
( )<z>
);<z>
id );<z>
notifyInterfaceLinkStateChanged(String iface, boolean up) {<z>
for (INetworkManagementEventObserver obs : mObservers) {<z>
.interfaceLinkStateChanged(iface, up);<z>
) {<z>
"Observer notifier failed", ex);<z>
)<z>
: paths)<z>
log.info("Importing corpus from: " + path);<z>
;<z>
);<z>
String declaration) {<z>
endIndex = declaration.indexOf(" :");<z>
) endIndex = declaration.indexOf(" {");<z>
;<z>
= declaration.indexOf(searchString);<z>
if (startIndex == -1) {<z>
;<z>
declaration.indexOf(searchString);<z>
);<z>
throws CppDuplicateException {<z>
.factory.create("EXIStream*", "strm");<z>
.create("xsd_float_t", "fl_val");<z>
factory.create(Cpp.INT, "encodeFloat",<z>
var_strm, var_flVal);<z>
methodBody =<z>
=<z>
methodBody);<z>
));<z>
);<z>
boolean match(Player tester)<z>
();<z>
null)<z>
false;<z>
tester).getGroups())<z>
.equalsIgnoreCase(groupname))<z>
true;<z>
false;<z>
request, @Nonnull HttpServletResponse response)<z>
{<z>
;<z>
;<z>
int docID) {<z>
;<z>
];<z>
(code & 0xff)==1) {<z>
>>8;<z>
docID >>> 16) & 0xff;<z>
tnums[whichArray];<z>
} else {<z>
= null;<z>
upto = code;<z>
this;<z>
EditorContext editorContext, SNode node) {<z>
.createIndent2(editorContext, node);<z>
.setCellId("Collection_x7b2gi_a0");<z>
);<z>
StyleAttributes.SELECTABLE, false);<z>
editorContext, node));<z>
this.createRefNode_x7b2gi_b0a(editorContext, node));<z>
;<z>
createAttributedNodeCell_x7b2gi_d0a(editorContext, node));<z>
editorCell;<z>
,RecordStoreNotOpenException, RecordStoreException {<z>
) {<z>
;<z>
) {<z>
;<z>
lastRecordIndex + 1;<z>
recordIds.length) {<z>
new InvalidRecordIDException("The end of the enumeration is reached.");<z>
lastRecordIndex = nextRecordIndex;<z>
;<z>
(recordId);<z>
return result;<z>
) throws Exception {<z>
();<z>
.getCurrentDepth();<z>
1;<z>
2;<z>
(true) {<z>
nextEvent();<z>
;<z>
)) {<z>
("Status", targetDepth)) {<z>
(context));<z>
context.testExpression("CIDRIP", targetDepth)) {<z>
));<z>
()) {<z>
context.getCurrentDepth() < originalDepth) {<z>
return iPRange;<z>
){<z>
{<z>
(myManager, myPackageName);<z>
myManager, myRefPackage);<z>
private void removeFromAll(String n) {<z>
n);<z>
currentProfile == null) {<z>
(currentProfile);<z>
+ " does not exist");<z>
));<z>
= null;<z>
currentProfile);<z>
;<z>
HttpServletRequest request) {<z>
== null || specificAuthChains.isEmpty()) {<z>
;<z>
getSpecificAuthChainName(request);<z>
specificAuthChainName);<z>
null) {<z>
);<z>
{<z>
;<z>
ns,<z>
name,<z>
<Response> failure) {<z>
.CONFIGURATION_TRANSFORM).get(name);<z>
!= null) {<z>
return new TransformConfig(name, json);<z>
StatusType() {<z>
() { return 404; }<z>
; }<z>
}<z>
).build());<z>
;<z>
public void onFailedToInit()<z>
(R.string.d_error),<z>
, makeOnFailedToInitHandler()).show();<z>
getAuthSkipApproved(Context c) {<z>
).fine("Trying to get auth page template");<z>
getParameters().getFirstValue("authSkipApproved");<z>
null)<z>
false;<z>
);<z>
String className) {<z>
_columnBitmask |= CLASSNAME_COLUMN_BITMASK;<z>
== null) {<z>
_originalClassName = _className;<z>
;<z>
) {<z>
("value");<z>
);<z>
();<z>
);<z>
;<z>
componentTag != null) {<z>
("dataValue").getExpressionString()) +<z>
getELContext());<z>
} catch (Exception e) {}<z>
dataValue != null) {<z>
(dataValue.getExpressionString());<z>
if (value == null) {<z>
);<z>
.getExpressionString());<z>
catch (Exception e) {}<z>
;<z>
() {<z>
null && npc != null)<z>
(this);<z>
);<z>
void generateRandomDPTParameters(){<z>
throw new RuntimeException("Length of params not defined");<z>
;<z>
;<z>
nextDouble() - 0.5;<z>
.nextDouble() - 0.5);<z>
k <= m; k++){<z>
.factorial(k);<z>
( )<z>
renderExtensions != null )<z>
for ( IRenderExtension renderExtension : renderExtensions )<z>
close( );<z>
= null;<z>
;<z>
void stop(BundleContext bc) throws Exception {<z>
.unregister();<z>
this.resourceReg.unregister();<z>
this.marshallerProviderReg.unregister();<z>
key) {<z>
length;<z>
{<z>
index] == key)<z>
;<z>
if (++index == length) {<z>
index = 0;<z>
;<z>
String> getAllDeps() {<z>
;<z>
values()) {<z>
;<z>
;<z>
) {<z>
.getFrontBufferCapabilities(),<z>
.getBackBufferCapabilities(),<z>
.getFlipContents() ==<z>
BACKGROUND ?<z>
FlipContents.BACKGROUND :<z>
BufferCapabilities.FlipContents.COPIED);<z>
.orig = orig;<z>
) {<z>
.SINGLE | SWT.FULL_SELECTION );<z>
.setLinesVisible( true );<z>
;<z>
;<z>
TreeColumn( tree, SWT.NONE );<z>
;<z>
( tree, SWT.NONE );<z>
setWidth( 500 );<z>
() {<z>
void widgetDefaultSelected( SelectionEvent e ) {<z>
)e.item;<z>
) {<z>
UiComponent )item.getData();<z>
) {<z>
);<z>
);<z>
return tree;<z>
double a, double b) {<z>
;<z>
abs(b)) {<z>
;<z>
r);<z>
else if (b != 0) {<z>
a/b;<z>
*r);<z>
else {<z>
0.0;<z>
;<z>
(Field aField, Object aValue)<z>
() == 0) {<z>
set(target, null);<z>
{<z>
);<z>
) {<z>
);<z>
);<z>
;<z>
);<z>
("header");<z>
headerPanel);<z>
headerContent = new HorizontalPanel();<z>
("header-content");<z>
.add(headerContent);<z>
= new HTML();<z>
.setStyleName("title");<z>
);<z>
title, "100%");<z>
contentPanel = new FlowPanel();<z>
addStyleName("content");<z>
portletPanel.add(contentPanel);<z>
;<z>
Point throughVector, Point toVector) {<z>
null ? throughVector.x : 0,<z>
? throughVector.y : 0,<z>
? toVector.x : 0,<z>
.y : 0);<z>
boolean verifyCharacterCaching() {<z>
;<z>
+1];<z>
results.length; i++)<z>
[i] = (char)i;<z>
++) {<z>
(char)i;<z>
if (C != results[i]) {<z>
;<z>
+ C +<z>
;<z>
Character.MAX_VALUE; i++) {<z>
C;<z>
i;<z>
(C.charValue() != i) {<z>
;<z>
+<z>
;<z>
cached;<z>
EObject combinedFragment, String editing_mode) {<z>
);<z>
if (combinedFragment instanceof CombinedFragment) {<z>
PropertiesEditingProvider provider = null;<z>
);<z>
, CombinedFragmentCombinedFragmentPropertiesEditionComponent.COMBINEDFRAGMENT_PART, CombinedFragmentCombinedFragmentPropertiesEditionComponent.class);<z>
);<z>
);<z>
MetadataCptPropertiesEditionComponent.METADATAS_PART, MetadataCptPropertiesEditionComponent.class);<z>
);<z>
public List getRelTypesOnTarget(IAdaptable target) {<z>
class);<z>
targetEditPart instanceof NodeMappingEditPart) {<z>
ArrayList();<z>
types.add(GMFMapElementTypes.TopNodeReferenceOwnedChild_4001);<z>
ChildReferenceOwnedChild_4004);<z>
.ChildReferenceReferencedChild_4002);<z>
return types;<z>
instanceof ChildReferenceEditPart) {<z>
ArrayList();<z>
.CompartmentMappingChildren_4003);<z>
;<z>
return Collections.EMPTY_LIST;<z>
) {<z>
{<z>
TCONTROL__DAT_SET:<z>
String)newValue);<z>
super.eSet(featureID, newValue);<z>
public Rectangle subtract(Border border) {<z>
new Rectangle(<z>
+ border.left,<z>
.top,<z>
border.right,<z>
- border.bottom);<z>
)<z>
{<z>
user = userPersistence.findByPrimaryKey(userId);<z>
status);<z>
, false);<z>
= IndexerRegistryUtil.getIndexer(User.class);<z>
indexer.reindex(user);<z>
;<z>
String elementName) {<z>
Element element = findElement(elementName);<z>
ObjectValue v = element.objectValue;<z>
== null || v.valueType != VALUE_ENUMERATION) {<z>
;<z>
v.enumeratedValues.toArray();<z>
() {<z>
;<z>
0] = 0;<z>
, ShaderProgram.PARAMETERS_CONTAINER, 0);<z>
[0];<z>
i++) {<z>
, ShaderProgram.NAME_CONTAINER, 0);<z>
[0];<z>
if(length == 0) {<z>
] != '\0')) {<z>
;<z>
, length);<z>
glGetUniformLocation(this.mProgramID, name);<z>
, location);<z>
) {<z>
("(<nowiki>)(.*?)(</nowiki>)");<z>
"(<pre>)(.*?)(</pre>)");<z>
add(<z>
"~(\\*\\*|~|//|-|#|\\{\\{|}}|\\\\|~\\[~~[|]]|----|=|\\|)");<z>
(final IProject project,<z>
buildInfo,<z>
) {<z>
);<z>
push(int level) {<z>
;<z>
-1)<z>
;<z>
(lastlevel >= currentLevel) {<z>
size() - 1);<z>
0) {<z>
lastlevel = 0;<z>
size()-1)).level;<z>
EditorCell createRefNodeList_pkrqbh_l0(EditorContext editorContext, SNode node) {<z>
(node, "nodes", editorContext);<z>
false);<z>
);<z>
= editorCell.getStyle();<z>
);<z>
INDENT_LAYOUT_INDENT, true);<z>
set(StyleAttributes.INDENT_LAYOUT_CHILDREN_NEWLINE, true);<z>
(handler.getElementRole());<z>
editorCell;<z>
) {<z>
)) {<z>
&& targetAnchor == null) {<z>
;<z>
) {<z>
doesCreateNewElement();<z>
!= null) {<z>
.getConnectionLabel();<z>
attr);<z>
ATTR_ID);<z>
= targetAnchor.getConnectionLabel();<z>
);<z>
BeansSchemaConstants.ATTR_ID);<z>
).length() != 0) {<z>
;<z>
return false;<z>
{<z>
value = value;<z>
;<z>
literal;<z>
() {<z>
"createLoanProductConfirmation.link.viewLoanDetails");<z>
;<z>
;<z>
<String> getTypes() {<z>
;<z>
.values()) {<z>
ft.toString());<z>
;<z>
, SessionState state)<z>
state.getAttribute(JOINABLE_SORT_ASC) == null)<z>
;<z>
(JOINABLE_SORT_ASC));<z>
null)<z>
state.setAttribute(SEARCH_TERM, "");<z>
.getAttribute(SEARCH_TERM));<z>
(state);<z>
("openSites", openSites);<z>
);<z>
("tlang", rb);<z>
).get("template");<z>
template + "_joinable";<z>
, String username, String password,<z>
configContext)<z>
{<z>
serverURL + "WSRegistryService";<z>
, serverURL, username, password);<z>
(configContext, epr);<z>
ServiceClient client = stub._getServiceClient();<z>
options = client.getOptions();<z>
true);<z>
;<z>
VALUE_TRUE);<z>
;<z>
catch (Exception axisFault) {<z>
"Failed to initiate WSRegistry Service client. " + axisFault.getMessage();<z>
error(msg, axisFault);<z>
axisFault);<z>
(String value) {<z>
= null;<z>
;<z>
Verb.POST, POST_URL);<z>
("Content-Type", "application/json");<z>
;<z>
.addPayload(value);<z>
(), request);<z>
request.send();<z>
.getBody();<z>
;<z>
throws Exception<z>
;<z>
data[] = entry.getResourceData();<z>
.length == 0)<z>
text = "";<z>
0] == -1)<z>
(data, 2, data.length);<z>
= new String(data);<z>
Element element)<z>
;<z>
);<z>
);<z>
String pattern, Closure<?> closure) {<z>
hasLength(pattern, "Argument [pattern] must be a valid regular expression");<z>
notNull(closure, "Argument [closure] cannot be null");<z>
pattern);<z>
;<z>
(Bundle icicle) {<z>
);<z>
.xml.fdn_setting);<z>
.getPhone();<z>
PreferenceScreen prefSet = getPreferenceScreen();<z>
EditPinPreference) prefSet.findPreference(BUTTON_FDN_ENABLE_KEY);<z>
EditPinPreference) prefSet.findPreference(BUTTON_CHANGE_PIN2_KEY);<z>
setOnPinEnteredListener(this);<z>
updateEnableFDN();<z>
setOnPinEnteredListener(this);<z>
icicle == null) {<z>
resetPinChangeState();<z>
{<z>
(SKIP_OLD_PIN_KEY);<z>
mPinChangeState = icicle.getInt(PIN_CHANGE_STATE_KEY);<z>
(OLD_PIN_KEY);<z>
= icicle.getString(NEW_PIN_KEY);<z>
setDialogMessage(icicle.getString(DIALOG_MESSAGE_KEY));<z>
(DIALOG_PIN_ENTRY_KEY));<z>
getActionBar();<z>
if (actionBar != null) {<z>
true);<z>
{<z>
null) {<z>
, Object> oldBindings = _extraBindings;<z>
<String, Object>(16);<z>
e.hasMoreElements();) {<z>
String) e.nextElement();<z>
valueForKey(key);<z>
(newValue != null) {<z>
;<z>
;<z>
void handleChannelError( SelectorWriteHandler entry, Throwable error)<z>
!= null)<z>
notifyError(error);<z>
);<z>
close(entry);<z>
attributes, String text )<z>
; }<z>
indent();<z>
)<z>
+ ">");<z>
+ ">");<z>
( text );<z>
;<z>
txNext() {<z>
]) {<z>
[RAM_TXFIFO] & 0xff;<z>
) {<z>
(0);<z>
{<z>
i] & 0xff);<z>
] = txCrc.getCRCHi();<z>
len] = txCrc.getCRCLow();<z>
{<z>
"**** Warning - packet size too large - repeating packet bytes txfifoPos: " + txfifoPos);<z>
!= null) {<z>
& 0xFF));<z>
0xFF));<z>
;<z>
.scheduleTimeEventMillis(sendEvent, SYMBOL_PERIOD * 2);<z>
} else {<z>
(DEBUG) log("Completed Transmission.");<z>
~STATUS_TX_ACTIVE;<z>
);<z>
false);<z>
(overflow) {<z>
setState(RadioState.RX_OVERFLOW);<z>
} else {<z>
RadioState.RX_CALIBRATE);<z>
setMode(MODE_RX_ON);<z>
txfifoFlush = true;<z>
{<z>
{<z>
;<z>
= (UnicodeEregKey) o;<z>
.equals(ereg._regexpValue)<z>
;<z>
) {<z>
return true;<z>
jj_scan_token(E_kbd)) return true;<z>
false;<z>
int currentRow) {<z>
1) {<z>
;<z>
currentRow + 1)<z>
.getRowCount() - 1);<z>
{<z>
) == null) {<z>
null;<z>
);<z>
if (uri == null) {<z>
return null;<z>
else {<z>
return uri.toString();<z>
getData() {<z>
>();<z>
.ACTION_MAIN, null);<z>
);<z>
();<z>
, 0);<z>
) {<z>
list.size(); i++) {<z>
);<z>
;<z>
toString() : info.activityInfo.name;<z>
] labelPath = label.split("/");<z>
nextLabel = labelPath[0];<z>
== 0) {<z>
();<z>
);<z>
();<z>
.activityInfo.name);<z>
;<z>
.add(temp);<z>
(data, sDisplayNameComparator);<z>
data;<z>
() {<z>
);<z>
FileUtils.ONE_GB));<z>
("MB", FileUtils.ONE_MB));<z>
);<z>
new DecimalFormat(",##0.0");<z>
rm,<z>
dct) {<z>
);<z>
if (DBG) log("DataConnection constructor E");<z>
this.phone = phone;<z>
.mDataConnectionTracker = dct;<z>
;<z>
= rm;<z>
cid = -1;<z>
setDbg(false);<z>
mDefaultState);<z>
;<z>
;<z>
(mActiveState, mDefaultState);<z>
mDisconnectingState, mDefaultState);<z>
addState(mDisconnectingErrorCreatingConnection, mDefaultState);<z>
;<z>
= new ArrayList<ApnContext>();<z>
if (DBG) log("DataConnection constructor X");<z>
(AuditEvent aEvt, Throwable aThrowable)<z>
mInitialized) {<z>
getSourceName());<z>
.getFileName(), aThrowable);<z>
void visitToken(Token node) {<z>
ompDirective : node.getOpenMPComments()) {<z>
)) {<z>
PRAGMA);<z>
textStyles, IInformationPresenter presenter, String statusFieldText) {<z>
parent, statusFieldText);<z>
;<z>
presenter;<z>
();<z>
) throws SQLException<z>
conn = conn;<z>
conn.getLargeObjectAPI();<z>
oid);<z>
subLOs = new ArrayList();<z>
protected void processHeader() {<z>
) : DEFAULT_HEADER_TEMPLATE;<z>
m_options.hasNoheaderOption()) {<z>
, substitute( header ) );<z>
;<z>
(m_options.hasOntologyOption()) {<z>
writeln( 0, "import com.hp.hpl.jena.ontology.*;" );<z>
)) {<z>
;<z>
Exception ex) {<z>
= null;<z>
{<z>
.VERSION.SDK_INT, ex);<z>
String name)<z>
();<z>
classLoader.loadClass(name);<z>
return true;<z>
(ClassNotFoundException e)<z>
false;<z>
void moduleURIs3() {<z>
final XQuery query = new XQuery(<z>
);<z>
));<z>
query);<z>
;<z>
, false)<z>
builder, Params params) throws IOException {<z>
startObject(Fields.REFRESH);<z>
TOTAL, total);<z>
);<z>
TOTAL_TIME_IN_MILLIS, totalTimeInMillis);<z>
endObject();<z>
;<z>
MumbleProto.ContextAction parseFrom(<z>
.google.protobuf.CodedInputStream input)<z>
io.IOException {<z>
.mergeFrom(input).buildParsed();<z>
String logMessage, int resCode)<z>
.log(logMessage);<z>
sendError(resCode, logMessage);<z>
catch (IllegalStateException e)<z>
e)<z>
public ThumbnailGridPanel() {<z>
;<z>
.BLACK);<z>
(Color.BLACK);<z>
;<z>
(contentWrapperPanel);<z>
[] getPropertyDefinitions() {<z>
).getPropertyDefinitions();<z>
) {<z>
LOG.isErrorEnabled()) {<z>
);<z>
;<z>
Object[] toArray(Object[] array)<z>
a.length;<z>
)<z>
[])<z>
, size);<z>
size)<z>
null;<z>
, 0, size);<z>
return array;<z>
void fireRemovedEvent(String id, Object data) {<z>
{<z>
.onRemove(id, data);<z>
(int position) {<z>
) {<z>
(position);<z>
} else {<z>
= position;<z>
;<z>
!= null) {<z>
.stop();<z>
;<z>
DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException<z>
);<z>
.isPortletArchive(du))<z>
getAttachment(Attachments.MODULE_SPECIFICATION);<z>
getAttachment(GateInConfigurationKey.KEY);<z>
ModuleDependency dep: config.getPortletWarDependencies())<z>
);<z>
du);<z>
int off, int len) throws IOException {<z>
0;<z>
);<z>
if (res > 0) {<z>
res;<z>
return res;<z>
) {<z>
= mod;<z>
= id;<z>
;<z>
);<z>
mCh = new Chapter(mod, chapterName);<z>
null) {<z>
getLineCount();<z>
) {<z>
(i), -1);<z>
{<z>
);<z>
;<z>
(this);<z>
fileName, sourceFile);<z>
sourceFile;<z>
public void setSite(Site site) {<z>
= site;<z>
mTitle);<z>
.setText(mSite.mDescription);<z>
component)<z>
<C, PM> expression) {<z>
));<z>
resultVar = expression.getResultVariable();<z>
(resultVar);<z>
parameterResults;<z>
expression.getParameterVariable();<z>
()) {<z>
= Collections.emptyList();<z>
{<z>
parameters.size());<z>
: parameters) {<z>
parameterResults.add(safeVisit(iterVar));<z>
expression.getBodyExpression());<z>
,<z>
);<z>
long used) {<z>
;<z>
setUsedIsSet(true);<z>
;<z>
get_DIVIDE(){<z>
;<z>
> print() {<z>
String>();<z>
);<z>
("{");<z>
indent = " ";<z>
, indent));<z>
.add("}");<z>
return lines;<z>
)<z>
= "";<z>
matchresult = false;<z>
null) {<z>
return matchresult;<z>
get(data.getPublishedAnswerId());<z>
answerIfc == null) {<z>
;<z>
();<z>
= itemdata.getItemId();<z>
.CASE_SENSITIVE_FOR_FIB);<z>
itemdata.getItemMetaDataByLabel(ItemMetaDataIfc.MUTUALLY_EXCLUSIVE_FOR_FIB);<z>
null)<z>
;<z>
)<z>
trim();<z>
.equalsIgnoreCase(casesensitive)) {<z>
{<z>
().trim();<z>
, studentanswer, true);<z>
{<z>
.getAnswerText().trim();<z>
, false);<z>
){<z>
false;<z>
mutuallyexclusive))<z>
get(itemId);<z>
()))){<z>
alreadyused=true;<z>
) {<z>
HashSet();<z>
));<z>
fibmap.put(itemId, answer_used_sofar);<z>
) {<z>
false;<z>
;<z>
{<z>
{<z>
;<z>
;<z>
selectedAttribute);<z>
void insertNewPatient(Patients p){<z>
ContentValues();<z>
));<z>
));<z>
getLname());<z>
());<z>
"age", p.getAge());<z>
getMed_history());<z>
p.getPat_status());<z>
;<z>
{<z>
);<z>
resultHandler, this, ___protocolFactory, ___transport);<z>
;<z>
;<z>
boolean equals(Object o)<z>
))<z>
false;<z>
) o;<z>
_jarPath.equals(entry._jarPath);<z>
, long next) throws IOException<z>
), true);<z>
Long.toString(next + 1));<z>
;<z>
void render()<z>
.glBindBufferARB( ARBVertexBufferObject.GL_ARRAY_BUFFER_ARB, vertexDataId );<z>
.GL_VERTEX_ARRAY );<z>
( GL11.GL_NORMAL_ARRAY );<z>
.GL_FLOAT, STRIDE, 0 );<z>
* SIZE_OF_FLOAT );<z>
, 0, indicesCount );<z>
.glDisableClientState( GL11.GL_VERTEX_ARRAY );<z>
GL11.glDisableClientState( GL11.GL_NORMAL_ARRAY );<z>
.GL_ARRAY_BUFFER_ARB, 0 );<z>
0 );<z>
{<z>
);<z>
FOLLOW_rule__XFeatureCall__Group__2__Impl_in_rule__XFeatureCall__Group__224308);<z>
();<z>
state._fsp--;<z>
if (state.failed) return ;<z>
FOLLOW_rule__XFeatureCall__Group__3_in_rule__XFeatureCall__Group__224311);<z>
();<z>
--;<z>
failed) return ;<z>
) {<z>
;<z>
(input,re);<z>
restoreStackSize(stackSize);<z>
() {<z>
final XQuery query = new XQuery(<z>
);<z>
"docs/works.xml")));<z>
file("docs/staff.xml")));<z>
= result(query);<z>
;<z>
(false)<z>
void onException(Exception e) {<z>
);<z>
("ID-Request", e.getMessage());<z>
String pluginKey)<z>
FEEDBACK);<z>
(FeedbackDialog.class, pluginKey);<z>
(MessageContext synCtx) {<z>
()) {<z>
.getMessageID() + " through the " +<z>
"resource: " + name);<z>
{<z>
.REST_METHOD);<z>
synCtx)) {<z>
SYNAPSE_RESOURCE, name);<z>
;<z>
int queryIndex = path.indexOf('?');<z>
{<z>
path.substring(queryIndex + 1);<z>
] entries = query.split("&");<z>
: entries) {<z>
.indexOf('=');<z>
(index != -1) {<z>
0, index);<z>
+ 1),<z>
.DEFAULT_ENCODING);<z>
value);<z>
UnsupportedEncodingException ignored) {<z>
: inSequence;<z>
if (sequence != null) {<z>
synCtx);<z>
);<z>
isResponse() ? outSequenceKey : inSequenceKey;<z>
sequenceKey != null) {<z>
registerFaultHandler(synCtx);<z>
);<z>
(referredSequence != null) {<z>
);<z>
{<z>
sequenceKey + " cannot " +<z>
);<z>
isResponse()) {<z>
()) {<z>
;<z>
);<z>
);<z>
(log.isDebugEnabled()) {<z>
.debug("No in-sequence configured. Dropping the request.");<z>
public ResourceList getChildren() throws NotAuthorizedException, BadRequestException {<z>
{<z>
!= null) {<z>
getItemVersion().getMembers();<z>
, members, renderMode);<z>
else {<z>
new ResourceList();<z>
;<z>
(int propertyIndex)<z>
propertyIndex)<z>
:<z>
unsetSequence(getAny());<z>
LOOP_CONDITION:<z>
();<z>
case LOOP_COUNTER:<z>
;<z>
LOOP_MAXIMUM:<z>
;<z>
case TEST_TIME:<z>
);<z>
ANY_ATTRIBUTE:<z>
;<z>
.unset(propertyIndex);<z>
String externalId) throws StoreException {<z>
externalId, "externalId");<z>
>() {<z>
call() throws SQLException, StoreException {<z>
;<z>
createNamedQuery("GET_WORKFLOW_ID_FOR_EXTERNAL_ID");<z>
"externalId", externalId);<z>
= q.getResultList();<z>
) {<z>
"";<z>
;<z>
);<z>
;<z>
;<z>
wfId;<z>
)<z>
;<z>
true);<z>
{<z>
i-15;<z>
-15;<z>
sub=0;<z>
visible=true;<z>
(SecurityContext ctx,<z>
long pixelsID)<z>
=<z>
context,<z>
;<z>
;<z>
.createRenderingEngine(ctx,<z>
;<z>
context,<z>
, re);<z>
} catch (Exception e) {<z>
"Cannot restart the " +<z>
+pixelsID, e);<z>
<String, String> params) {<z>
;<z>
null) {<z>
baseURL = "";<z>
&& !params.isEmpty()) {<z>
)) {<z>
);<z>
paramCnt = 0;<z>
) {<z>
();<z>
();<z>
&& value != null) {<z>
paramCnt++;<z>
(paramCnt > 1) {<z>
append("&");<z>
);<z>
paramsStr;<z>
MailerFeature clone()<z>
();<z>
) {<z>
.setMailer(new String(mailer));<z>
));<z>
.setEncodingType(getEncodingType());<z>
.setID(getID());<z>
cloned;<z>
{<z>
String typeCast = generateTypeCast();<z>
+ " kernel,\n" +<z>
);<z>
)<z>
.print("\t\t\t\t\t\t\t\t int divisor , boolean includeBorder)\n");<z>
("\t\t\t\t\t\t\t\t boolean includeBorder)\n");<z>
.print("\t{\n" +<z>
dataInput + "[] dataSrc = image.data;\n" +<z>
+<z>
"\n");<z>
; i < num; i++) {<z>
;<z>
print("\n" +<z>
+") * k1;\n");<z>
1; i < num; i++) {<z>
"\t\t\t\tindexSrc += image.stride;\n");<z>
, (i + 1));<z>
"\n");<z>
)<z>
+ typeCast + "(total/divisor);\n");<z>
+ typeCast + "total;\n");<z>
"\t\t\t}\n" +<z>
);<z>
FileObject fileOrDirectory, boolean processDir) throws Exception {<z>
{<z>
(fileOrDirectory);<z>
processDir) {<z>
);<z>
] files = null;<z>
null) {<z>
fileOrDirectory.findFiles(selector));<z>
{<z>
.getChildren());<z>
(FileObject f : files) {<z>
f, isRecursive());<z>
{<z>
));<z>
, HttpServletRequest request) {<z>
.initWorkplaceRequestValues(settings, request);<z>
m_groups);<z>
importTasks() {<z>
();<z>
!= null){<z>
isLoggedIn()){<z>
()){<z>
return null;<z>
} else{<z>
= OperationFeedback.INVALID_NOINTERNET;<z>
return null;<z>
} else {<z>
= OperationFeedback.USER_NOT_LOGGEDIN;<z>
return null;<z>
{<z>
;<z>
;<z>
ImmutableBytesWritable, Result> getRecordReader(<z>
,<z>
,<z>
{<z>
;<z>
hbaseSplit.getSplit();<z>
);<z>
;<z>
.get(HBaseSerDe.HBASE_COLUMNS_MAPPING);<z>
String>();<z>
new ArrayList<String>();<z>
[]>();<z>
new ArrayList<byte []>();<z>
int iKey;<z>
,<z>
;<z>
SerDeException se) {<z>
;<z>
.getReadColumnIDs(jobConf);<z>
()) {<z>
);<z>
0);<z>
scan = new Scan();<z>
= true;<z>
) {<z>
for (int i : readColIDs) {<z>
if (i == iKey) {<z>
) {<z>
addFamily(hbaseColumnFamiliesBytes.get(i));<z>
else {<z>
;<z>
= false;<z>
{<z>
hbaseColumnFamilies.size(); i++) {<z>
if (i == iKey) {<z>
null) {<z>
));<z>
else {<z>
);<z>
(!addAll) {<z>
tableSplit, iKey);<z>
;<z>
= new Job(jobConf);<z>
=<z>
TaskAttemptID()) {<z>
public void progress() {<z>
progress();<z>
><z>
);<z>
() {<z>
{<z>
recordReader.close();<z>
createKey() {<z>
ImmutableBytesWritable();<z>
public Result createValue() {<z>
);<z>
{<z>
;<z>
getProgress() throws IOException {<z>
;<z>
();<z>
(InterruptedException e) {<z>
throw new IOException(e);<z>
;<z>
throws IOException {<z>
= false;<z>
;<z>
next) {<z>
getCurrentValue().getRow());<z>
(), value);<z>
(InterruptedException e) {<z>
IOException(e);<z>
return next;<z>
index) {<z>
interrupted())<z>
;<z>
(index) {<z>
STATE_INDEX: {<z>
reader.canReadInteger()) {<z>
);<z>
= reader.readInteger();<z>
{<z>
;<z>
if (reader.interrupted()) {<z>
interrupt(null);<z>
: {<z>
);<z>
)) {<z>
reader.interrupt(null);<z>
TimeItemFactory ( final ScheduledExecutorService executor, final BundleContext context )<z>
);<z>
.executor = executor;<z>
params) {<z>
getId();<z>
channelId);<z>
(channel == null) {<z>
new IllegalStateException("The specified chat channel (" + channelId + ") does not exist");<z>
;<z>
(PermissionException e) {<z>
new SecurityException("You do not have permission to delete this channel");<z>
createClob() throws SQLException {<z>
null;<z>
();<z>
= this.connection.createClob();<z>
(SQLException e) {<z>
throw markPossiblyBroken(e);<z>
result;<z>
v, int x, int y)<z>
n;<z>
= v;<z>
x;<z>
;<z>
(String path, DirMode mode) throws ClusterInfoException<z>
(path,mode);<z>
null && mode.isEphemeral())<z>
(localEphemeralDirs)<z>
ret);<z>
ret;<z>
K key)<z>
co = cache.get(key);<z>
co.getValue();<z>
boolean clearCache) {<z>
);<z>
(clearCache) {<z>
MapReader.clearCache();<z>
listFiles(new FileFilter() {<z>
final File f) {<z>
)<z>
ANVIL_EXTENSION);<z>
});<z>
) {<z>
.getForFile(f);<z>
getChunks();<z>
final ChunkInFilePosition p : chunkList) {<z>
);<z>
unloadChunk(chunk);<z>
CallContext context, String repositoryId, String typeId,<z>
maxItems, BigInteger skipCount, ExtensionsData extension) {<z>
, typeId, extension);<z>
= includePropertyDefinitions == null ? false : includePropertyDefinitions;<z>
repositoryId);<z>
.intValue();<z>
.intValue();<z>
TypeDefinitionListImpl result = new TypeDefinitionListImpl();<z>
TypeDefinitionContainer> children;<z>
null) {<z>
getRootTypes(repositoryId);<z>
else {<z>
BigInteger.valueOf(1),<z>
);<z>
)));<z>
skip);<z>
= new ArrayList<TypeDefinition>();<z>
);<z>
) {<z>
= children.size();<z>
++) {<z>
).getTypeDefinition());<z>
);<z>
result;<z>
imageconvolution(BiancaImage image, ArrayValue matrix,<z>
div, double offset) {<z>
;<z>
3; y++) {<z>
x++) {<z>
kernelValues[x + y * 3] =<z>
x)).toDouble();<z>
kernelValues),<z>
,<z>
);<z>
BufferedImage bufferedImage =<z>
._bufferedImage, null);<z>
(bufferedImage, 1, 0, null);<z>
return true;<z>
Exception {<z>
= null;<z>
stop(context);<z>
);<z>
declspec) {<z>
(declspec instanceof ICPPASTCompositeTypeSpecifier) {<z>
ICPPASTCompositeTypeSpecifier cts= (ICPPASTCompositeTypeSpecifier) declspec;<z>
);<z>
(name, fDefinitionName);<z>
(name, declspec);<z>
{<z>
declspec;<z>
.getName();<z>
(name, fDefinitionName);<z>
);<z>
return PROCESS_CONTINUE;<z>
Shape getShape()<z>
= getBounds();<z>
GeneralPath();<z>
;<z>
.getY());<z>
getY() + FOLD_Y));<z>
)bounds.getMaxY());<z>
;<z>
();<z>
path;<z>
, int dy){<z>
){<z>
? font : getMainFont());<z>
,g);<z>
scaleFactor);<z>
* scaleFactor);<z>
.lvalid=true;<z>
==0){return;}<z>
= scaleFactor * coef;<z>
setColor(this.color);<z>
.TEXT_AS_LINE_PROJ_COEF || !zoomSensitive){<z>
getMainFont());<z>
;<z>
;}<z>
}<z>
].lcy);}<z>
trueCoef, trueCoef));}<z>
.setTransform(at);<z>
){<z>
g.setComposite(alphaC);<z>
, 0.0f);<z>
.setComposite(acO);<z>
drawString(text, 0.0f, 0.0f);<z>
);<z>
{<z>
.setComposite(alphaC);<z>
,1,1);<z>
g.setComposite(acO);<z>
);<z>
CredentialsType credentials)<z>
WebServiceFault {<z>
checkAuthentication(credentials);<z>
;<z>
getApplicationName());<z>
getResource().parse();<z>
resource.setApplication(application);<z>
insert(resource);<z>
{<z>
);<z>
view.View.OnClickListener(){<z>
) {<z>
asyncTask.isRunning()){<z>
asyncTask.togglePause();<z>
);<z>
) throws IOException<z>
new SocketChannelImpl(false);<z>
getVMChannel();<z>
stream);<z>
(true);<z>
;<z>
String getBrowserCommand() {<z>
);<z>
.equalsIgnoreCase("windows")) {<z>
.getBrowser("http");<z>
{<z>
"firefox";<z>
String name) {<z>
currentThread()<z>
getContextClassLoader();<z>
loggers.get(name);<z>
Invitee object) {<z>
{<z>
"adding " + object + " to invitees relationship");<z>
, "invitees");<z>
View convertView, ViewGroup parent )<z>
View view = convertView;<z>
= directions.get( position );<z>
( view == null )<z>
.inflate( rowViewResource, null );<z>
null )<z>
);<z>
(R.id.destinationField);<z>
if( dirView != null )<z>
);<z>
!= null )<z>
.setText( direction.getTitle() );<z>
view;<z>
StringBuffer toAppendTo, FieldPosition fieldPosition) {<z>
<Pattern, String> pattern : patterns) {<z>
number).matches()) {<z>
(pattern.getRight());<z>
return toAppendTo;<z>
!= null) {<z>
);<z>
return toAppendTo;<z>
index, Cleaner cleaner)<z>
{<z>
Node n = getTarget(index);<z>
if (n instanceof LN &&<z>
, index)) {<z>
, null);<z>
);<z>
} else {<z>
return 0;<z>
() {<z>
;<z>
Intent intent = interaction.getIntentMovie();<z>
null;<z>
theaterId = null;<z>
ParamIntent.ACTIVITY_MOVIE_FROM_WIDGET, false);<z>
.getStringExtra(ParamIntent.ACTIVITY_MOVIE_NEAR);<z>
(TAG, "From Widget : " + fromWidget);<z>
movie = null;<z>
theater = null;<z>
(ParamIntent.MOVIE_ID);<z>
(ParamIntent.MOVIE);<z>
intent.getStringExtra(ParamIntent.THEATER_ID);<z>
= intent.getParcelableExtra(ParamIntent.THEATER);<z>
ACTIVITY_MOVIE_LATITUDE, -1);<z>
;<z>
)) {<z>
("GPS");<z>
.setLatitude(latitude);<z>
(longitude);<z>
(gpsLocation);<z>
{<z>
model.setGpsLocation(null);<z>
);<z>
);<z>
, model, tracker, this);<z>
notifyDataSetChanged();<z>
if (theaterId != null) {<z>
theater);<z>
();<z>
);<z>
) {<z>
interaction.openDialog();<z>
() == null) {<z>
ANALYTICS_CATEGORY_MOVIE<z>
CineShowtimeCst.ANALYTICS_ACTION_INTERACTION<z>
+ 0<z>
searchMovieDetail(movie, near);<z>
} else {<z>
tracker.trackEvent(CineShowtimeCst.ANALYTICS_CATEGORY_MOVIE<z>
, CineShowtimeCst.ANALYTICS_ACTION_INTERACTION<z>
.ANALYTICS_LABEL_MOVIE_REUSE + 1<z>
moviePagedAdapter.fillViews(movie);<z>
e) {<z>
, e);<z>
(int index, IEObjectConsumer inst) {<z>
{<z>
this, 0, inst);<z>
: return null;<z>
Object key) {<z>
key, "key");<z>
{<z>
return null;<z>
getBeanId((String) key);<z>
);<z>
boolean onMenuItemSelected(int featureId, MenuItem item) {<z>
)) {<z>
return true;<z>
item);<z>
propertyName, Object data) {<z>
.setInitializationData(cfig, propertyName, data);<z>
strIcon = cfig.getAttribute("icon");<z>
) {<z>
).getName(), strIcon);<z>
baseImageDescriptor == null) {<z>
);<z>
) throws IOException {<z>
Preconditions.checkNotNull(data);<z>
(statuses);<z>
);<z>
!fs.exists(statuses)) {<z>
new RuntimeException(statuses + " does not exist!");<z>
isDir()) {<z>
new RuntimeException(statuses + " does not exist!");<z>
member, boolean isFirst) {<z>
{<z>
.printMemberHeader();<z>
("");<z>
ExecutableMemberDoc) member).signature());<z>
h3();<z>
;<z>
h3End();<z>
() {<z>
) {<z>
if (psTB.isDisposed()) {<z>
.ELEMENT);<z>
)<z>
(MUIElement) changedObj);<z>
switcherWin = modelService.getTopLevelWindowFor(psME);<z>
if (perspWin != switcherWin)<z>
if (UIEvents.isADD(event)) {<z>
.NEW_VALUE)) {<z>
= (MPerspective) o;<z>
.isToBeRendered())<z>
addPerspectiveItem(added);<z>
)) {<z>
EventTags.OLD_VALUE)) {<z>
) o;<z>
isToBeRendered())<z>
;<z>
String> getMatchMap(CharSequence input) {<z>
)<z>
return null;<z>
= CorePlugin.getLogger();<z>
matcher(input);<z>
{<z>
"URI pattern does not match %s", input);<z>
null;<z>
groupCount = m.groupCount();<z>
= parameters.size();<z>
{<z>
);<z>
top != groupCount) {<z>
Integer.valueOf(top)));<z>
= groupCount;<z>
)<z>
);<z>
String, String>();<z>
0; idx < top; ++idx) {<z>
= parameters.get(idx);<z>
1));<z>
value != null) {<z>
getName(), value);<z>
(param.getName(), value);<z>
matchMap;<z>
throws SQLException<z>
);<z>
(spy)<z>
,<z>
SPY_LOGGER_PREFIX_RESULTSET,<z>
x);<z>
x);<z>
)<z>
);<z>
newTweets) {<z>
)<z>
queryInterval *= 20;<z>
;<z>
);<z>
60 * 1001);<z>
,<z>
senderName) {<z>
"kmelia", "KmeliaBmEJB.getAlertNotificationMetaData()",<z>
"root.MSG_GEN_ENTER_METHOD");<z>
pubPK);<z>
NotificationMetaData notifMetaData =<z>
(topicPK, pubDetail, NotifAction.REPORT,<z>
));<z>
("kmelia", "KmeliaBmEJB.getAlertNotificationMetaData()",<z>
"root.MSG_GEN_EXIT_METHOD");<z>
;<z>
void closeQuietly(Closeable closeable) {<z>
if (closeable != null) {<z>
close();<z>
{}<z>
boolean evaluateCachedRight(InternalWorkingMemory workingMemory,<z>
context,<z>
Object left) {<z>
,<z>
;<z>
right;<z>
if ( array == null ) return true;<z>
array,<z>
value );<z>
GroupSelectorDisplay addGroupSelector() {<z>
;<z>
(selector.asWidget());<z>
;<z>
handleCloseGroup() {<z>
;<z>
()) {<z>
.buffer.length()>0) {<z>
();<z>
);<z>
.rtfParser.isConvert()) {<z>
&& this.iTextParagraph == null) {<z>
();<z>
.buffer.length() > 0 ) {<z>
;<z>
.buffer.toString());<z>
(chunk);<z>
this.iTextParagraph != null) {<z>
addParagraphToDocument();<z>
true;<z>
setWorkersEnabled(boolean flag) {<z>
(mWorkersEnabled != flag) {<z>
mWorkersEnabled = flag;<z>
);<z>
obj,<z>
name,<z>
nameCtx,<z>
,?> environment)<z>
{<z>
) {<z>
;<z>
obj;<z>
) {<z>
null;<z>
());<z>
));<z>
poolProps);<z>
private ConfigurationBuilder completeFilesystem(ConfigurationBuilder currentBuilder, Configuration configuration)<z>
currentBuilder;<z>
configuration)) {<z>
);<z>
();<z>
.clearCacheLoaders();<z>
()) {<z>
{<z>
;<z>
if (cacheLoaderConfig instanceof FileCacheStoreConfiguration) {<z>
) cacheLoaderConfig;<z>
FileCacheStoreConfigurationBuilder loaderBuilder =<z>
addFileCacheStore().read(fileCacheLoaderConfig);<z>
location();<z>
{<z>
());<z>
return builder;<z>
Mutate.ColumnValue.QualifierValue parseFrom(<z>
com.google.protobuf.CodedInputStream input)<z>
io.IOException {<z>
;<z>
nodeService,<z>
) {<z>
);<z>
transport = transport;<z>
nodeService = nodeService;<z>
,<z>
currentMapSlots)<z>
IOException {<z>
if (maxMapSlots > currentMapSlots) {<z>
);<z>
taskTracker);<z>
getLookUpStatus()) {<z>
(tlr.getTask());<z>
public static NameStructureType get(int value) {<z>
{<z>
return IED_NAME;<z>
return null;<z>
ASTNode child, String name) {<z>
()) {<z>
;<z>
(this, caller, name);<z>
() {<z>
r = world.getRandom();<z>
.getAvailableTiles().length;<z>
)) {<z>
r.nextInt(max)]);<z>
KeeperException,<z>
id = leaderSeqPath<z>
.lastIndexOf("/") + 1);<z>
, id);<z>
,<z>
true);<z>
start(id);<z>
) {<z>
();<z>
attrs.getLength();<z>
0; i<len; i++) {<z>
@SuppressWarnings("null")<z>
attrs.getQName(i);<z>
.getValue(i);<z>
;<z>
();<z>
0 : attrs.getLength();<z>
false;<z>
++) {<z>
)<z>
name = attrs.getQName(i);<z>
);<z>
value).append("\"\n");<z>
defaultNSSeen |= "xmlns".equals(name);<z>
addDefaultNS && !defaultNSSeen) {<z>
.append(" xmlns=\"\"\n");<z>
false;<z>
);<z>
attrs.getLength();<z>
len; i++) {<z>
)<z>
.getQName(i);<z>
value = attrs.getValue(i);<z>
append(name).append("=\"");<z>
)).append("\"\n");<z>
BukkitConfigCmd() {<z>
CommandCategory.BUKKIT);<z>
= new Properties();<z>
streamIn = new FileInputStream("server.properties");<z>
);<z>
} catch (FileNotFoundException e) {<z>
);<z>
) {<z>
e.printStackTrace();<z>
setupCurationTasks()<z>
();<z>
();<z>
;<z>
(Exception we)<z>
GraphElement> path) {<z>
newPath = new LinkedList<GraphElement>();<z>
(path);<z>
;<z>
>(proc.getOutputNodes())) {<z>
);<z>
parameters) {<z>
new Reply(200);<z>
isEmpty()) {<z>
) {<z>
);<z>
{<z>
);<z>
(Command command : commands) {<z>
().startsWith(commandName)) {<z>
+ ": " + command.getBriefDescription());<z>
()) {<z>
detailDescription);<z>
;<z>
AnimationSet loadSet(String path) {<z>
= null;<z>
);<z>
ois = new ObjectInputStream(fis);<z>
ois.readObject();<z>
path;<z>
();<z>
fis.close();<z>
catch (FileNotFoundException e1) {<z>
printStackTrace();<z>
e1) {<z>
.printStackTrace();<z>
) {<z>
;<z>
return as;<z>
{<z>
{<z>
;<z>
{<z>
null;<z>
proxy) {<z>
;<z>
itsConverters = new Converters();<z>
clear();<z>
void setMergeFactor(int mergeFactor)<z>
)<z>
("mergeFactor has to be at least 2. Override " + mergeFactor + " with 2");<z>
;<z>
= mergeFactor;<z>
getMergeFactor())<z>
"maxSmallSegments has to be greater than mergeFactor. Override maxSmallSegments to: " + (mergeFactor + 1));<z>
+ 1;<z>
));<z>
(CDOID id, CDOBranchPoint branchPoint)<z>
)<z>
.put(id, branchPoint);<z>
public Coordinate getExpectedPositionAtTime(long time) {<z>
= startX;<z>
float currentY = startY;<z>
if (state == PlayerState.MOVING) {<z>
timestamp;<z>
(EForce.Movement.getMagnitude() /<z>
hitPoints)) *<z>
distanceTraveled = ratePerMs * dt;<z>
= destX - startX;<z>
startY;<z>
dx) + (dy * dy));<z>
) {<z>
;<z>
destY;<z>
} else {<z>
(<z>
(distanceTraveled * distanceTraveled) /<z>
);<z>
float) Math.sqrt(<z>
/<z>
* dy) + 1));<z>
0) {<z>
-1;<z>
{<z>
*= -1;<z>
+ realDX;<z>
currentY = startY + realDY;<z>
Coordinate(currentX, currentY);<z>
(T tree)<z>
tree == null)<z>
;<z>
parent == null)<z>
);<z>
(this != tree)<z>
;<z>
T>)tree).parent != null)<z>
();<z>
= (T)this;<z>
.next = next;<z>
(next == null)<z>
tree;<z>
>)next).previous = tree;<z>
= tree;<z>
>)tree).parent = parent;<z>
<T>)parent).size++;<z>
tree);<z>
tabIndex) {<z>
sender, tabIndex);<z>
) {<z>
;<z>
;<z>
) + 1);<z>
.DST_SOURCE_RAW + className<z>
;<z>
{<z>
true;<z>
= ColorConstants.class.getName();<z>
".") + 1);<z>
className<z>
);<z>
SwingWorker<?, ?> newSwingWorker() {<z>
, Object>() {<z>
public Result doInBackground() {<z>
();<z>
done() {<z>
Result result = get();<z>
if (result != null) {<z>
setText(result.summary);<z>
null &&<z>
0L &&<z>
) {<z>
overviewPanel.updateCPUInfo(result);<z>
) {<z>
) {<z>
)) {<z>
printStackTrace();<z>
)<z>
;<z>
DENY.equals(effect))<z>
Result.DECISION_DENY;<z>
if(PERMIT.equals(effect))<z>
;<z>
effect + "'");<z>
Element getGlobalConfigElement(String name)<z>
IOException {<z>
);<z>
) {<z>
;<z>
{<z>
null;<z>
, PropFile>> system,<z>
PropFile>> local,<z>
PropFile>> adHoc) {<z>
, 1.0f);<z>
13, 1.0f);<z>
put(Scope.Default, defaultScopeChain);<z>
= collectScopes(system, local, adHoc);<z>
;<z>
PropFile>emptyMap(),<z>
(),<z>
>emptyMap(),<z>
defaultScopeChain, allContexts, null);<z>
: allScopes) {<z>
Scope.Default.equals(scope)) {<z>
= system.get(scope);<z>
get(scope);<z>
(scope);<z>
1.0f);<z>
scopedChain);<z>
Context, PropFile>emptyMap() : systemFiles,<z>
,<z>
,<z>
);<z>
chain;<z>
public void processEndElement(QName name) {<z>
currentTypeListener != null) {<z>
currentTypeListener.processEndElement(name);<z>
(name)) {<z>
;<z>
EditorCell createConstant_plbod7_a2a(EditorContext editorContext, SNode node) {<z>
;<z>
;<z>
getKeyword(editorCell).apply(editorCell);<z>
.setDefaultText("");<z>
editorCell;<z>
void manageAirbending() {<z>
getServer());<z>
());<z>
);<z>
AirShield.instances.keySet()) {<z>
.progress(ID);<z>
.progressAll();<z>
()) {<z>
.progress(ID);<z>
Speed.instances.keySet()) {<z>
Speed.progress(ID);<z>
instances.keySet()) {<z>
ID);<z>
AirBurst.progressAll();<z>
progressAll();<z>
AirSpout.spoutAll();<z>
(Object containerID)<z>
(TRACER.isEnabled())<z>
;<z>
containerID;<z>
> members) {<z>
hasAnnotation(annotationType)) return;<z>
);<z>
true;<z>
.getAttributes();<z>
AttributeInfo attributeInfo : attributeInfos) {<z>
if (attributeInfo instanceof AnnotationsAttribute) {<z>
AnnotationsAttribute) attributeInfo;<z>
isNewAttr = false;<z>
] annotations = attr.getAnnotations();<z>
);<z>
{<z>
annotationType.getName())) {<z>
= annotation1;<z>
: members.entrySet()) {<z>
) == null) {<z>
getValue());<z>
} catch (Exception e) {<z>
;<z>
());<z>
(annotation);<z>
if (isNewAttr) {<z>
getClassFile().addAttribute(attr);<z>
public void onPrepare( IList listHandle, IReportContext reportContext )<z>
> models)<z>
);<z>
)._models==null)<z>
String,List<IModel>>();<z>
containsKey(receivedId))<z>
())/config.getSamplingPeriod())<z>
<models.size();i++)<z>
;<z>
.addAll(models);<z>
,models);<z>
_processedElements = getSessionContext()._processedElements + 1;<z>
getElemCount()){<z>
_runningCycle = false;<z>
result )<z>
();<z>
RecognitionException {<z>
current = null;<z>
EObject iv_ruleDefOperationCS = null;<z>
{<z>
(grammarAccess.getDefOperationCSRule());<z>
.FOLLOW_ruleDefOperationCS_in_entryRuleDefOperationCS1618);<z>
();<z>
._fsp--;<z>
;<z>
{<z>
iv_ruleDefOperationCS;<z>
;<z>
catch (RecognitionException re) {<z>
input,re);<z>
;<z>
current;<z>
, boolean editable) {<z>
;<z>
(!editable) {<z>
READ_ONLY;<z>
composite, style);<z>
.VERTICAL_ALIGN_FILL);<z>
;<z>
= 100;<z>
setLayoutData(data);<z>
setItems(items);<z>
return combo;<z>
bucketId) {<z>
n ; ++i) {<z>
i;<z>
return -1;<z>
{<z>
; i++) {<z>
(' ');<z>
{<z>
) {<z>
().createNode();<z>
return null;<z>
(int xpathId) throws BAMException {<z>
;<z>
= null;<z>
;<z>
connection = dataSource.getConnection();<z>
= connection.createStatement();<z>
xpathId;<z>
statement.execute(sql);<z>
e) {<z>
+ xpathId;<z>
log.error(errorMsg, e);<z>
);<z>
finally {<z>
(statement != null) {<z>
close();<z>
!= null) {<z>
connection.close();<z>
SQLException e) {<z>
e);<z>
toString()<z>
().getSimpleName()<z>
"[group=" + _groupId<z>
+ ",artifact=" + _artifactId<z>
",version=" + _version<z>
);<z>
{<z>
;<z>
album.delete();<z>
() {<z>
=nodeMap.getLength();<z>
;<z>
;i<len;i++) {<z>
.item(i);<z>
instanceof Attr)<z>
()));<z>
]);<z>
() {<z>
ItemStack(Material.PISTON_EXTENSION, ShieldsCreated));<z>
"WWW", "WBW", "WWW"});<z>
'W', Material.WOOD);<z>
;<z>
().addRecipe(Shield);<z>
saveAttachtypes(Attachtypes attachtypes) {<z>
= null;<z>
).getCurrentSession();<z>
();<z>
;<z>
commit();<z>
return true;<z>
(HibernateException he) {<z>
!= null)<z>
);<z>
null;<z>
he.printStackTrace();<z>
false;<z>
() {<z>
, 4)<z>
m_StandardDev, 4)<z>
(m_SumOfWeights, 4)<z>
+ m_Precision + "\n";<z>
Problems problems, String compName, String model) {<z>
() - 1) == c) {<z>
(MayNotEndWithValidator.class,<z>
);<z>
() {<z>
;<z>
length == 0)<z>
;<z>
;<z>
;<z>
(start == node.getStartPosition()) {<z>
- 1]);<z>
);<z>
;<z>
{<z>
);<z>
] token= scanner.getCurrentTokenSource();<z>
token[0] == ',')) {<z>
));<z>
} else {<z>
SourceRange(lastNodeEnd, pos - lastNodeEnd);<z>
JavaStatusContext.create(fCUnit, range));<z>
{<z>
1);<z>
range));<z>
) {<z>
.getJavadoc() != null) {<z>
);<z>
>= JLS3) {<z>
printModifiers(node.modifiers());<z>
this);<z>
" ");<z>
.hasNext();) {<z>
;<z>
accept(this);<z>
(it.hasNext()) {<z>
.append(", ");<z>
.append(";");<z>
;<z>
() {<z>
;<z>
> 0) {<z>
getChildStates().get(0);<z>
ret = state.getStartNode();<z>
);<z>
resolve, boolean coreType)<z>
switch (featureID)<z>
case FXGraphPackage.REFERENCE_VALUE_PROPERTY__REFERENCE:<z>
resolve) return getReference();<z>
return basicGetReference();<z>
.REFERENCE_VALUE_PROPERTY__STATIC_PROPERTIES:<z>
();<z>
.REFERENCE_VALUE_PROPERTY__STATIC_CALL_PROPERTIES:<z>
);<z>
resolve, coreType);<z>
private XmlHandler mHandleBookTitle = new XmlHandler(){<z>
) {<z>
;<z>
boolean await) {<z>
);<z>
e) {<z>
;<z>
(uniqueInstance && cacheDirectory != null) {<z>
getAbsolutePath());<z>
;<z>
, int[] fuelConsumption)<z>
= dockId;<z>
teleports;<z>
_fuelConsumption = fuelConsumption;<z>
) {<z>
{<z>
case NAME:<z>
return get_name();<z>
:<z>
return get_options();<z>
);<z>
isSecondLevel()<z>
.level == 1)<z>
;<z>
return false;<z>
, StringTokenizer tok)<z>
);<z>
;<z>
;<z>
;<z>
"raDepth", tok.nextToken());<z>
());<z>
("raNMod", tok.nextToken());<z>
NumberFormatException e) {<z>
("Bad ARRAY line \"" + line + "\": " +<z>
getMessage());<z>
nstrings < 1 || nmodules < 1) {<z>
+ line + "\": " +<z>
"nstrings < 1" :<z>
));<z>
nmodules;<z>
TikaResponse(<z>
String title,<z>
content,<z>
List<String> images,<z>
)<z>
;<z>
this.title = title;<z>
this.content = content;<z>
.images = images;<z>
this.success = success;<z>
true);<z>
IOException {<z>
out = new FileOutputStream(inFile);<z>
(data);<z>
close();<z>
statistics() {<z>
(!printStatistics) {<z>
mfcStats == null) {<z>
long now = System.currentTimeMillis();<z>
< nextStats) {<z>
("--- HUB Statistics ---");<z>
.numberOfConnections());<z>
));<z>
" - clients : " + connections.numberOfClients());<z>
("--- Connection Statistics ---");<z>
{<z>
;<z>
now + STAT_FREQ;<z>
Tool createEntryPointCreationTool() {<z>
new ArrayList<IElementType>(1);<z>
);<z>
types);<z>
tool;<z>
messageSelector, boolean noLocal)<z>
destination);<z>
, _prefetchLowMark, noLocal, true,<z>
;<z>
eUnset(int featureID) {<z>
(featureID) {<z>
:<z>
setAUTHOR(AUTHOR_EDEFAULT);<z>
case RifPackage.RIFHEADER__COMMENT:<z>
;<z>
RIFHEADER__CREATIONTIME:<z>
CREATIONTIME_EDEFAULT);<z>
RifPackage.RIFHEADER__IDENTIFIER:<z>
(IDENTIFIER_EDEFAULT);<z>
:<z>
(SOURCETOOLID_EDEFAULT);<z>
RifPackage.RIFHEADER__TITLE:<z>
(TITLE_EDEFAULT);<z>
eUnset(featureID);<z>
int readVersion(String name) throws IOException {<z>
new DataInputStream(new FileInputStream(name));<z>
.readInt();<z>
finally {<z>
.close();<z>
... rights) {<z>
null && rights.length > 0) {<z>
{<z>
role, right);<z>
;<z>
) {<z>
if (given == null) {<z>
;<z>
return this.given;<z>
) {<z>
"r.length is odd");<z>
_min1;<z>
m1;<z>
/2;<z>
_max1;<z>
[] s = new float[n1];<z>
new float[n1];<z>
[] u = new float[n1];<z>
,r,k1-l1,s);<z>
_a);<z>
sqrt(s[k1]);<z>
;<z>
_a[0];<z>
niter;<z>
boolean converged = false;<z>
float eemax = s[k1]*epsilon;<z>
!converged; ++niter) {<z>
,t);<z>
;<z>
;<z>
k1] *= 0.5f;<z>
; ++i1)<z>
[i1] = 0.0f;<z>
,t);<z>
converged = true;<z>
j<_m; ++j) {<z>
j1 = k1+_lag1[j];<z>
(0<=j1 && j1<n1) {<z>
aj = t[j1];<z>
converged) {<z>
_a[j]-aj;<z>
eemax;<z>
j] = aj;<z>
;<z>
= 1.0f/_a[0];<z>
"Wilson-Burg iterations converged");<z>
SimulationProcess current) throws NoSuchElementException<z>
null) || (current == null))<z>
());<z>
cdr())<z>
.car() == current)<z>
cdr() == null)<z>
return null;<z>
car();<z>
current.evtime())<z>
Head.car();<z>
(String name, int partition)<z>
(name);<z>
setPartition(partition);<z>
getSourceFileName(IMethod method, int bcOffset) {<z>
!(method instanceof AstMethod)){<z>
;<z>
method).getSourcePosition(bcOffset);<z>
pos){<z>
null;<z>
).getFile();<z>
void onSpawn()<z>
super.onSpawn();<z>
= false;<z>
;<z>
(true);<z>
void error(SAXParseException exception) throws SAXException {<z>
log.isWarnEnabled()) {<z>
+ ": " + exception.getMessage()<z>
"Policy will not be available");<z>
);<z>
{<z>
synchronized (this.internalASTLock) {<z>
0) {<z>
{<z>
);<z>
child, property);<z>
finally {<z>
reenableEvents();<z>
, ArrayList<UrlInfo>> map2) {<z>
();<z>
> list2 = map1.getValue();<z>
value1 = 0;<z>
value2 = 0;<z>
); i++) {<z>
getTf();<z>
size(); i++) {<z>
;<z>
value2 > value1 ? 1 : 0;<z>
_get(<z>
toUpperCase) {<z>
request);<z>
) {<z>
name = name.toUpperCase();<z>
);<z>
) {<z>
return null;<z>
getValue();<z>
{<z>
(cursor == null) {<z>
();<z>
getType() == Result.class) {<z>
(cursor);<z>
{<z>
new ArrayTable(cursor);<z>
getType())) {<z>
new ArrayTable(cursor);<z>
) {<z>
cursor);<z>
new SQLDialectNotSupportedException("Converting arbitrary types into array tables is currently not supported");<z>
> categories) throws InvalidRegistryObjectException, CoreException {<z>
null);<z>
null);<z>
;<z>
;<z>
= element.getDeclaringExtension();<z>
);<z>
checkNotNull(fId, "id");<z>
;<z>
== 0)<z>
;<z>
fName= name;<z>
String>();<z>
getChildren(PARTITION);<z>
{<z>
= PARTITION_SET;<z>
{<z>
i < children.length; i++) {<z>
i].getAttribute(TYPE);<z>
;<z>
add(type);<z>
.unmodifiableSet(partitions);<z>
ACTIVATE);<z>
).booleanValue();<z>
= element.getAttribute(NEEDS_SORTING_AFTER_FILTERING);<z>
;<z>
element.getAttribute(CLASS);<z>
);<z>
= element.getAttribute(CATEGORY_ID);<z>
(categoryId == null)<z>
categoryId= DEFAULT_CATEGORY_ID;<z>
= null;<z>
;) {<z>
;<z>
categoryId)) {<z>
cat;<z>
(category == null) {<z>
CompletionProposalCategory(categoryId, fName, registry);<z>
);<z>
{<z>
fCategory= category;<z>
int oldH) {<z>
(),<z>
ARGB_8888);<z>
Canvas(bitmap);<z>
;<z>
content, final boolean isLineStart, final String indentation,<z>
positions) {<z>
= formattingContextSupplier.get();<z>
(formattingContext.hasMoreContent()) {<z>
formattingContext.impersonateNextContentContext();<z>
final IFormattingStrategy formattingStrategy = nextFormattingContext.currentContentType()<z>
(formattingContextSupplierFor(nextFormattingContext));<z>
, formattingStrategy);<z>
;<z>
throws Exception {<z>
;<z>
;<z>
.getBody() != null) {<z>
.getBody(DBObject.class);<z>
.FIELDS_FILTER, DBObject.class);<z>
class);<z>
(MongoDbConstants.NUM_TO_SKIP, Integer.class);<z>
;<z>
DBObject.class);<z>
;<z>
null) {<z>
);<z>
} else if (fieldFilter == null) {<z>
(query);<z>
else {<z>
find(query, fieldFilter);<z>
{<z>
sortBy);<z>
null) {<z>
());<z>
(numToSkip != null) {<z>
;<z>
if (limit != null) {<z>
;<z>
();<z>
ret.toArray());<z>
;<z>
));<z>
} catch (Exception e) {<z>
;<z>
{<z>
(ret != null) {<z>
;<z>
HttpResponse res) throws Exception {<z>
("home", "/");<z>
; }<z>
xml = XmlUtil.getDocument();<z>
;<z>
"LoggerLevelServlet.xsl");<z>
, home };<z>
;<z>
("html");<z>
();<z>
();<z>
UnsupportedLocale, UnsupportedMimeType, UnsupportedMode, UnsupportedWindowState<z>
();<z>
>();<z>
service.performBlockingInteraction(<z>
(registrationContext),<z>
,<z>
,<z>
.toV1UserContext(userContext),<z>
V2ToV1Converter.toV1MarkupParams(markupParams),<z>
interactionParams),<z>
);<z>
toV2UpdateResponse(v1UpdateResponse.value);<z>
value, V1ToV2Converter.EXTENSION);<z>
(V1AccessDenied accessDenied)<z>
);<z>
V1InconsistentParameters inconsistentParameters)<z>
.toV2Exception(InconsistentParameters.class, inconsistentParameters);<z>
invalidCookie)<z>
, invalidCookie);<z>
(V1InvalidHandle invalidHandle)<z>
toV2Exception(InvalidHandle.class, invalidHandle);<z>
(V1InvalidRegistration invalidRegistration)<z>
InvalidRegistration.class, invalidRegistration);<z>
(V1InvalidSession invalidSession)<z>
);<z>
invalidUserCategory)<z>
, invalidUserCategory);<z>
V1MissingParameters missingParameters)<z>
toV2Exception(MissingParameters.class, missingParameters);<z>
V1OperationFailed operationFailed)<z>
.toV2Exception(OperationFailed.class, operationFailed);<z>
(V1PortletStateChangeRequired portletStateChangeRequired)<z>
PortletStateChangeRequired.class, portletStateChangeRequired);<z>
(V1UnsupportedLocale unsupportedLocale)<z>
toV2Exception(UnsupportedLocale.class, unsupportedLocale);<z>
unsupportedMimeType)<z>
UnsupportedMimeType.class, unsupportedMimeType);<z>
catch (V1UnsupportedMode unsupportedMode)<z>
.class, unsupportedMode);<z>
V1UnsupportedWindowState unsupportedWindowState)<z>
);<z>
(Element element, ElementValue[] value,<z>
attrs, Map hints){<z>
)) {<z>
String) value[0]<z>
;<z>
return i;<z>
null;<z>
public DBSource getDBSource() {<z>
host = getInput(HOST);<z>
Integer.parseInt(getInput(PORT));<z>
);<z>
user = getInput(USER);<z>
= getInput(PASSWORD);<z>
getDBDriver();<z>
length() == 0)) {<z>
port = dbDriver.getDefaultPort();<z>
boolean ssl = false;<z>
(SSL).equals("true")){<z>
;<z>
()<z>
;<z>
flush() {<z>
getText());<z>
());<z>
));<z>
;<z>
parseXFBMLTagsEditor.getValue());<z>
initOptions;<z>
void renderImage(<z>
g,<z>
final int x,<z>
y,<z>
width,<z>
int height,<z>
Color color,<z>
float scale) {<z>
> 1);<z>
+ (height >> 1);<z>
, color, scale, centerX, centerY);<z>
IUndoContext context) {<z>
site, context);<z>
(PlatformUI.getWorkbench().getSharedImages()<z>
getImageDescriptor(ISharedImages.IMG_TOOL_UNDO));<z>
()<z>
);<z>
;<z>
UnableToInitializeEntityException {<z>
<Component>();<z>
mcomps );<z>
);<z>
CDOPackageUnit.Type lookup(String packageURI)<z>
types.get(packageURI);<z>
== null)<z>
Registry.INSTANCE.get(packageURI);<z>
EPackage)<z>
;<z>
= register(ePackage);<z>
)<z>
;<z>
types.put(packageURI, type);<z>
;<z>
action) {<z>
IStructuredSelection) {<z>
(IStructuredSelection) selection;<z>
);) {<z>
= it.next();<z>
project = null;<z>
instanceof IProject) {<z>
IProject) element;<z>
(element instanceof IAdaptable) {<z>
;<z>
{<z>
;<z>
(int v) {<z>
2);<z>
;<z>
0);<z>
> walkedNodes, Set<Dual> loadedComps) {<z>
{<z>
[1];<z>
[2];<z>
;<z>
);<z>
5]);<z>
) data[6];<z>
) data[7];<z>
null) {<z>
.getCurrent();<z>
.getAttribute(LOAD_ON_SAVE_TRIGGER_COMPONENT);<z>
triggerEventName});<z>
;<z>
{<z>
.setAttribute(LOAD_ON_SAVE_TRIGGER_COMPONENT, old);<z>
io.IOException<z>
false;<z>
] getErrorsAndWarnings() {<z>
this, parameters);<z>
name, "name");<z>
checkStringNotNullOrEmpty(this, classname, "class name");<z>
e1, e2);<z>
run() {<z>
checkReadonlyUsages()) return;<z>
getInstance(myProject).commitAllDocuments();<z>
myCannotMakeString != null && myChangesDetected) {<z>
&& allTargetsAreValid()) {<z>
(<z>
),<z>
("error.common.title"),<z>
()<z>
0) {<z>
);<z>
else {<z>
showMessageDialog(<z>
),<z>
Messages.getErrorIcon()<z>
close();<z>
.executeCommand(<z>
myProject, new Runnable() {<z>
void run() {<z>
run();<z>
.Switch eSwitch, VariableContext variableContext) throws CodeGenerationException {<z>
= eSwitch.getAlts();<z>
;<z>
;<z>
;<z>
i < alts.length; ++i) {<z>
[i];<z>
) {<z>
defaultAlt = switchAlt.getAltExpr();<z>
} else {<z>
.size() > 1) {<z>
(), variableContext);<z>
;<z>
) {<z>
;<z>
{<z>
TRUE;<z>
CAL_Prelude.DataConstructors.False)) {<z>
;<z>
{<z>
).getQualifiedName());<z>
()) {<z>
;<z>
{<z>
.getAltExpr();<z>
(trueAlt == null) {<z>
defaultAlt;<z>
{<z>
= defaultAlt;<z>
= eSwitch.getSwitchExpr();<z>
, condExpression, variableContext);<z>
Block thenBlock;<z>
(trueAlt == null) {<z>
make("Illegal fallthrough to default case.");<z>
(eSwitch.getErrorInfo(), badValueMessageWrapper);<z>
;<z>
new Block();<z>
thenBlock.addStatement (badValueReturnStatement);<z>
} else {<z>
);<z>
, variableContext);<z>
thenBlock = variableContext.popJavaScope();<z>
thenPart);<z>
;<z>
null) {<z>
.make("Illegal fallthrough to default case in function.");<z>
badValueMessageWrapper), variableContext);<z>
= new Block();<z>
addStatement (badValueReturnStatement);<z>
} else {<z>
);<z>
= genS_R (falseAlt, variableContext);<z>
elseBlock = variableContext.popJavaScope();<z>
);<z>
, thenBlock, elseBlock);<z>
getContextBlock();<z>
contextBlock.addStatement(ite);<z>
return contextBlock;<z>
() {<z>
0, b = 0;<z>
boolean matchFound = false;<z>
) {<z>
if (m instanceof Hitbox) {<z>
)m;<z>
;<z>
.getY();<z>
() + h.getWidth();<z>
.getHeight();<z>
true;<z>
!matchFound) {<z>
super.update();<z>
int i = mMasks.size();<z>
(Mask m : mMasks) {<z>
Hitbox) {<z>
= (Hitbox)m;<z>
if (h.getX() < l)<z>
h.getX();<z>
)<z>
.getY();<z>
() > r)<z>
getX() + h.getWidth();<z>
b)<z>
() + h.getHeight();<z>
= l;<z>
t;<z>
;<z>
b - t;<z>
);<z>
public String validateClearPassword(final String clearPassword) {<z>
ERXValidationFactory factory = ERXValidationFactory.defaultFactory();<z>
= null;<z>
{<z>
, clearPassword, ERXValidationException.NullPropertyException);<z>
throw ex;<z>
()) {<z>
(this, CLEAR_PASSWORD_KEY, clearPassword, "PasswordLengthException");<z>
;<z>
);<z>
passwordReuseDays());<z>
(userQualifier);<z>
sort = ERCredential.DATE_CREATED.descs();<z>
(ERCredential.ENTITY_NAME, q, sort);<z>
;<z>
, sort);<z>
passwordReuseCount());<z>
= fsLimit.fetchObjects(editingContext());<z>
;<z>
pastCredentials) {<z>
(past.hashMatches(clearPassword)) {<z>
);<z>
throw ex;<z>
return clearPassword;<z>
{<z>
();<z>
, getMonth(), day)) return;<z>
SWT.CALENDAR) != 0) {<z>
);<z>
else {<z>
(short)day;<z>
sizeof, dateRec);<z>
dateRec, null);<z>
dateAndTime.day = (short)day;<z>
();<z>
loadMapsHandler = new Handler() {<z>
public void handleMessage(Message msg) {<z>
maps.isEmpty()) {<z>
!= null) {<z>
;<z>
));<z>
finish();<z>
} else {<z>
!= null) {<z>
);<z>
== null) {<z>
);<z>
) {<z>
.maps_list);<z>
);<z>
= 1;<z>
{<z>
image != null) {<z>
;<z>
map.setImageBitmap(image);<z>
smapsView.addView(map);<z>
++;<z>
} catch (Exception e) {<z>
waitDialog != null) {<z>
waitDialog.dismiss();<z>
e.toString());<z>
) throws IOException {<z>
= new MODCAParser(inputStream);<z>
true) {<z>
readNextStructuredField();<z>
field == null) {<z>
;<z>
) == identifier[0]<z>
getSfTypeCode() == identifier[1]<z>
{<z>
getCompleteFieldAsBytes();<z>
(ResourceSet resourceSet) {<z>
;<z>
;<z>
.clear();<z>
} finally {<z>
.eSetDeliver(wasDeliver);<z>
void flush() {<z>
{<z>
count == LINE_SEPERATOR.length()) {<z>
== LINE_SEPERATOR.charAt(0)<z>
]) == LINE_SEPERATOR<z>
)))) {<z>
= 0;<z>
] theBytes = new byte[count];<z>
count);<z>
;<z>
0;<z>
.portal.model.UserGroup getUserGroup(<z>
long userGroupId)<z>
exception.PortalException,<z>
{<z>
return getService().getUserGroup(userGroupId);<z>
EventListener listener)<z>
)<z>
;<z>
&& aom != null)<z>
;<z>
)<z>
addRequestQueueListener((RequestQueueListener)listener);<z>
instanceof RPPoolManagerListener)<z>
listener);<z>
public final void rule__Property__Group__1() throws RecognitionException {<z>
;<z>
(FOLLOW_rule__Property__Group__1__Impl_in_rule__Property__Group__110019);<z>
rule__Property__Group__1__Impl();<z>
_fsp--;<z>
state.failed) return ;<z>
re) {<z>
re);<z>
input,re);<z>
;<z>
r, int c)<z>
c != 1)<z>
);<z>
(e.getKey());<z>
!= null)<z>
))<z>
);<z>
result);<z>
(r, c);<z>
{<z>
();<z>
return this;<z>
{<z>
();<z>
PsiForeachStatement) {<z>
;<z>
PsiCatchSection) {<z>
;<z>
] children = parent.getChildren();<z>
if (children != null) {<z>
length; i++) {<z>
(this)) {<z>
j++) {<z>
];<z>
;<z>
Arrays.asList(children));<z>
return null;<z>
, Token lastToken) {<z>
] {<z>
<ASTStringNode>("identifier", identifier)<z>
firstToken, lastToken);<z>
Exception<z>
;<z>
getColumnsMutationMap(columns));<z>
.batch_mutate(record, cl);<z>
private boolean allObjectsAddable() {<z>
boolean allOK = true;<z>
focusedSelection);<z>
!selectedEObjects.isEmpty() ) {<z>
List applicableObjectsToAdd = CustomDiagramContentHelper.getApplicableDiagramEObjects(selectedEObjects);<z>
null;<z>
;<z>
;<z>
.hasNext() && allOK) {<z>
);<z>
nextObject instanceof Diagram ) {<z>
allOK = false;<z>
} else {<z>
)nextObject);<z>
someAspect == null ||<z>
!(someAspect instanceof UmlPackage ||<z>
instanceof UmlClassifier) ) {<z>
allOK = false;<z>
{<z>
) != null ) {<z>
));<z>
allOK = false;<z>
allOK;<z>
boolean isAllowed(int c) {<z>
|| '+' == c || '&' == c) {<z>
false;<z>
;<z>
public void endUnmarshalCustomValue(InputStreamHook stream) throws IOException<z>
stream.getStreamFormatVersion() == 2)<z>
);<z>
setState(DEFAULT_STATE);<z>
SNode node) {<z>
;<z>
.setCellId("Collection_c8aenb_a");<z>
(editorContext, node));<z>
editorContext, node));<z>
;<z>
private void renderBody() {<z>
setRenderBodyOnly(true);<z>
new Menus("menu", siteId));<z>
();<z>
LastJobRun("lastJobRun", siteId));<z>
);<z>
(visitsVisible) {<z>
, siteId));<z>
{<z>
.setRenderBodyOnly(true));<z>
.isEnableSiteActivity();<z>
if(activityVisible) {<z>
("activityWidget", siteId));<z>
{<z>
.setRenderBodyOnly(true));<z>
false;<z>
isEnableResourceStats() &&<z>
StatsManager.RESOURCES_TOOLID) != null);<z>
}catch(Exception e) {<z>
= false;<z>
if(resourcesVisible) {<z>
;<z>
{<z>
.setRenderBodyOnly(true));<z>
{<z>
;<z>
: owner.getOpponents()) {<z>
))<z>
)>0)<z>
thePlayer.gain(DomCardName.Curse);<z>
.countInSupply(DomCardName.Copper )>0)<z>
Copper);<z>
()<z>
characterPane != null)<z>
.setRefresh(true);<z>
();<z>
) throws NotFoundException {<z>
ArrayList preOrder = new ArrayList();<z>
= blocks.length;<z>
= 0;<z>
i++) {<z>
[i];<z>
int n = block.localsTypes.length;<z>
)<z>
);<z>
block.stackTop;<z>
n; j++)<z>
dfs(preOrder, index, classPool);<z>
) {<z>
;<z>
length; i++) {<z>
+ array[i];<z>
hash;<z>
protected boolean isExistingActor(String actorURI) {<z>
GET_ACTOR_BY_URI, actorURI) > 0) {<z>
return true;<z>
;<z>
(String url) {<z>
mZoomManager.onPageFinished(url);<z>
(isAccessibilityEnabled()) {<z>
);<z>
(int serviceID, String operationName) throws BAMException {<z>
null;<z>
Statement statement = null;<z>
;<z>
;<z>
createStatement();<z>
serviceID +<z>
+ "'";<z>
= statement.execute(sql);<z>
= null;<z>
) {<z>
);<z>
haveResults = resultSet.next();<z>
if (haveResults) {<z>
();<z>
"BAM_ID"));<z>
(resultSet.getInt("BAM_SERVICE_ID"));<z>
(resultSet.getString("BAM_OP_NAME"));<z>
));<z>
operationDO;<z>
(SQLException e) {<z>
;<z>
);<z>
, e);<z>
{<z>
) {<z>
.close();<z>
{<z>
connection.close();<z>
(SQLException e) {<z>
"Cannot close connection to database.", e);<z>
final void removeWatchedDocument(final Document document) {<z>
);<z>
myCurrentDocuments.remove(document);<z>
;<z>
, int l, int i1) {<z>
, 5, 7, l);<z>
l) : null;<z>
Jsonfromurl() throws UnsupportedEncodingException, IOException<z>
lounasaika = new URL("http://www.lounasaika.net/api/json?key=development321");<z>
= new BufferedReader(<z>
openStream()));<z>
String inputLine;<z>
"";<z>
) != null)<z>
("line.separator");<z>
in.close();<z>
return wholejsonstring;<z>
len) throws IOException<z>
< 2) {<z>
== 1) {<z>
;<z>
if (_surrogate > 0) {<z>
.charAt(off++);<z>
--len;<z>
(convertSurrogate(second));<z>
_outPtr;<z>
] outBuf = _outBuffer;<z>
outBufLast = _outBufferEnd;<z>
;<z>
(; off < len; ) {<z>
if (outPtr >= outBufLast) {<z>
.write(outBuf, 0, outPtr);<z>
;<z>
str.charAt(off++);<z>
(c < 0x80) {<z>
++] = (byte)c;<z>
len - off);<z>
(outBufLast - outPtr);<z>
(maxInCount > maxOutCount) {<z>
maxOutCount;<z>
maxInCount += off;<z>
) {<z>
(off >= maxInCount) {<z>
continue output_loop;<z>
(off++);<z>
>= 0x80) {<z>
ascii_loop;<z>
;<z>
c < 0x800) {<z>
| (c >> 6));<z>
(0x80 | (c & 0x3f));<z>
{<z>
SURR1_FIRST || c > SURR2_LAST) {<z>
);<z>
);<z>
(c & 0x3f));<z>
(c > SURR1_LAST) {<z>
_outPtr = outPtr;<z>
;<z>
= c;<z>
>= len) {<z>
++));<z>
0x10FFFF) {<z>
_outPtr = outPtr;<z>
c);<z>
));<z>
));<z>
0x3f));<z>
);<z>
_outPtr = outPtr;<z>
IViewPart part) {<z>
(ViewSite)part.getSite();<z>
MPart modelPart = site.getModel();<z>
Composite) modelPart.getWidget();<z>
int registerObjectInstance( int theClass )<z>
,<z>
= new RegisterObject( theClass );<z>
processMessage( request );<z>
() == false )<z>
).getHandle();<z>
(ErrorResponse)response).getCause();<z>
JRTIinternalError )<z>
throw new RTIinternalError( theException );<z>
instanceof JObjectClassNotDefined )<z>
theException );<z>
theException instanceof JObjectClassNotPublished )<z>
ObjectClassNotPublished( theException );<z>
)<z>
( theException );<z>
( theException instanceof JSaveInProgress )<z>
theException );<z>
( theException instanceof JRestoreInProgress )<z>
new RestoreInProgress( theException );<z>
theException instanceof JConcurrentAccessAttempted )<z>
( theException );<z>
logException( "registerObjectInstance", theException );<z>
PorticoConstants.NULL_HANDLE;<z>
final boolean synpred20_InternalFXGraph() {<z>
.backtracking++;<z>
();<z>
);<z>
) {<z>
"impossible: "+re);<z>
;<z>
);<z>
;<z>
failed=false;<z>
return success;<z>
SecurityManager getSecurityManager(String virtualHost)<z>
IApplicationRegistry appRegistry = ApplicationRegistry.getInstance();<z>
SecurityManager security;<z>
)<z>
();<z>
virtualHost).getSecurityManager();<z>
security;<z>
public RemovePermissionCommand(MyPolly polly) throws DuplicatedSignatureException {<z>
;<z>
this.createSignature(<z>
.REMOVE_PERMISSION_PERMISSION,<z>
, Types.STRING),<z>
Parameter("Permission", Types.STRING));<z>
("Entfernt eine Berechtigung von einer Rolle.");<z>
public void propertyChange ( final PropertyChangeEvent evt )<z>
( evt.getPropertyName () ) )<z>
() );<z>
)<z>
query.getRequestParameters () );<z>
= this.query.getRequestParameters ();<z>
);<z>
final String urlString) {<z>
title) {<z>
ActionEvent e) {<z>
(urlString);<z>
(title + ": " + url);<z>
.runSystemOpenURL(url);<z>
{<z>
, ex);<z>
public void dump(ExpressionDumper dumper) {<z>
dumper.display("comment {");<z>
();<z>
dumper);<z>
.endIndent();<z>
"}");<z>
level, String message, Throwable t)<z>
switch (level)<z>
:<z>
log.warn(message, t);<z>
INFO_ID:<z>
(message, t);<z>
case LogChute.TRACE_ID:<z>
trace(message, t);<z>
ERROR_ID:<z>
error(message, t);<z>
.DEBUG_ID:<z>
(message, t);<z>
LatLon center) {<z>
, null);<z>
.getCount() > 0) {<z>
.getColumnIndex("id");<z>
getColumnIndex("lat");<z>
.getColumnIndex("lon");<z>
.out.println("MDSAndroidDatabaseAdapter.loadAllStreetNodesAround(): " +<z>
);<z>
()) {<z>
getLong(col_id);<z>
double lat = cursor.getDouble(col_lat);<z>
double lon = cursor.getDouble(col_lon);<z>
MobileNode(id, lat, lon);<z>
))) {<z>
, node);<z>
close();<z>
(CategoryAnchor anchor,<z>
int category,<z>
,<z>
,<z>
edge) {<z>
0.0;<z>
) {<z>
edge);<z>
== CategoryAnchor.MIDDLE) {<z>
area, edge);<z>
END) {<z>
, categoryCount, area, edge);<z>
return result;<z>
{<z>
instanceof Person_iBusinessRole_1 ) {<z>
());<z>
;<z>
gcr) {<z>
interpreterObjName != null) {<z>
gcr.getGlobalConfiguration();<z>
= JmxUtil.lookupMBeanServer(globalCfg);<z>
(interpreterObjName, mbeanServer);<z>
(Exception e) {<z>
;<z>
String getCertificate(MoSyncProject project) {<z>
.IPHONE_PROJECT_SPECIFIC_CERT) ?<z>
(PropertyInitializer.IPHONE_CERT):<z>
PropertyInitializer.IPHONE_CERT);<z>
{<z>
;<z>
());<z>
);<z>
settings.getIntScaledFactor());<z>
settings.getTooltipAutoCloseDelay());<z>
public String toString() {<z>
StringBuilder("{extension: ")<z>
append(", entryClass: ")<z>
).append(<z>
).append(<z>
).append(", configurations: ").append(<z>
(<z>
"}");<z>
);<z>
(SignActionEvent info) {<z>
));<z>
.getLine(3));<z>
getGroup().middle();<z>
);<z>
dir == BlockFace.WEST) {<z>
info.isPowered(BlockFace.WEST);<z>
);<z>
(west && !east) {<z>
.WEST;<z>
if (east && !west) {<z>
instruction = BlockFace.EAST;<z>
) {<z>
BlockFace.SELF;<z>
} else {<z>
this.instruction = null;<z>
) {<z>
BlockFace.NORTH);<z>
.SOUTH);<z>
south) {<z>
NORTH;<z>
!north) {<z>
;<z>
{<z>
instruction = BlockFace.SELF;<z>
} else {<z>
.instruction = null;<z>
} else {<z>
length = 0.0;<z>
= null;<z>
valid = false;<z>
, 0.0);<z>
) {<z>
[] toCheck;<z>
== BlockFace.SELF) {<z>
FaceUtil.getFaces(dir);<z>
else {<z>
{this.instruction};<z>
{<z>
;<z>
face;<z>
checkface == BlockFace.NORTH)<z>
= BlockFace.SOUTH;<z>
.EAST)<z>
WEST;<z>
b = info.getRails();<z>
20;<z>
{<z>
getRelative(face);<z>
Rails rr = BlockUtil.getRails(b);<z>
rr.getDirection() != checkface)<z>
tlength++;<z>
;<z>
maxlength <= 0) break;<z>
tlength < length) length = tlength;<z>
) {<z>
;<z>
length;<z>
= true;<z>
[] includeCollections) {<z>
.clear();<z>
includeCollections.length; i++) {<z>
(includeCollections[i]);<z>
public Dimension preferredLayoutSize(Container parent)<z>
insets = getInsets();<z>
();<z>
right,<z>
insets.bottom);<z>
{<z>
[] pixels = image.pixels;<z>
height; y++) {<z>
) {<z>
y * width + x] & 0xff);<z>
{<z>
new HashSet<CaseInsensitiveString>();<z>
) {<z>
hasName()) {<z>
=<z>
()));<z>
if (wasPresent) {<z>
index.name());<z>
() {<z>
= new XQuery(<z>
);<z>
;<z>
;<z>
"0")<z>
void clear() {<z>
= null;<z>
);<z>
this.nimbus_uptime_secs = 0;<z>
;<z>
) throws TorqueException<z>
("dream");<z>
.addTable("PRODUCT_CATEGORY");<z>
= dbMap.getTable("PRODUCT_CATEGORY");<z>
setPrimaryKeyMethod(TableMap.NATIVE);<z>
("PRODUCT_CATEGORY_SEQ");<z>
new Integer(0));<z>
addColumn("PRODUCT_CATEGORY.PRODUCT_CAT_NAME", new String());<z>
elements,<z>
allowEmptySelection,<z>
allowMultiSelection,<z>
Project project<z>
(project, true);<z>
= allowEmptySelection;<z>
= allowMultiSelection;<z>
project;<z>
DefaultMutableTreeNode()));<z>
null;<z>
resetElements(elements);<z>
);<z>
Uri contentUri, final String selection,<z>
final String[] selectionArgs, final String sortOrder,<z>
contentUriForRawContactsEntity) {<z>
,<z>
;<z>
,<z>
) throws IOException {<z>
{<z>
if (lineEnding == null) {<z>
lineEnding = LINE_SEPARATOR;<z>
: lines) {<z>
{<z>
());<z>
lineEnding.getBytes());<z>
name) throws XavaException {<z>
);<z>
) {<z>
return false;<z>
{<z>
int stackSize = keepStackSize();<z>
( state.backtracking==0 ) {<z>
.getSourceExpCSParserRuleCall_1_0());<z>
(FollowSets001.FOLLOW_ruleExpCS_in_rule__NestedExpCS__SourceAssignment_130870);<z>
;<z>
._fsp--;<z>
;<z>
backtracking==0 ) {<z>
);<z>
(RecognitionException re) {<z>
reportError(re);<z>
;<z>
;<z>
final int columnIndex) {<z>
final Object object;<z>
);<z>
(columnIndex == 0) {<z>
expense.getName();<z>
1) {<z>
expense.getSupplier();<z>
) {<z>
object = " " + expense.getAmount();<z>
== 3) {<z>
SimpleDateFormat(<z>
"EEE H:m");<z>
);<z>
setTime(expense.getDate_added());<z>
.getTime());<z>
}else {<z>
("columnIndex: " + columnIndex);<z>
return object;<z>
String name) {<z>
;<z>
) {<z>
{<z>
escape(name, values[0]);<z>
else {<z>
(values[0]);<z>
} else {<z>
(null);<z>
()<z>
;<z>
add(html);<z>
this.setVisible(true);<z>
setSize(500, 500);<z>
{<z>
+ interfaceID.length();<z>
COMMON_OBJECT_HEADER_LENGTH;<z>
(objectLength + headerLength) / 8;<z>
() == true) {<z>
getObjectFrameByteLength();<z>
objectFrameByteLength + bandwidthByteLength;<z>
objectFrameByteLength;<z>
Block rootBlock,<z>
index,<z>
Nullable final CompositeBlockWrapper parent,<z>
@Nullable WrapImpl currentWrapParent,<z>
final Block parentBlock,<z>
boolean rootBlockIsRightBlock)<z>
;<z>
null) {<z>
wrap.registerParent(currentWrapParent);<z>
= wrap;<z>
TextRange textRange = rootBlock.getTextRange();<z>
int blockStartOffset = textRange.getStartOffset();<z>
null) {<z>
() < parent.getStartOffset()) {<z>
,<z>
.getStartOffset(),<z>
)) {<z>
textRange.getEndOffset(),<z>
parent.getEndOffset(),<z>
);<z>
rootBlockIsRightBlock);<z>
ReadOnlyBlockInformationProvider previousProvider = myReadOnlyBlockInformationProvider;<z>
) {<z>
(ReadOnlyBlockInformationProvider)rootBlock;<z>
{<z>
, isReadOnly, index, parentBlock);<z>
.getSubBlocks();<z>
|| myReadOnlyBlockInformationProvider != null<z>
.isReadOnly(rootBlock)) {<z>
);<z>
)) {<z>
.getIndent());<z>
;<z>
);<z>
= previousProvider;<z>
(List<String> resourcenames) {<z>
(resourcenames.isEmpty())) {<z>
);<z>
== 1) {<z>
<String>(resourcenames);<z>
>(resourcenames.size());<z>
;<z>
sort(base);<z>
iterator();<z>
(i.hasNext()) {<z>
resourcename = i.next();<z>
(CmsStringUtil.isEmptyOrWhitespaceOnly(resourcename)) {<z>
= true;<z>
>= 0; j--) {<z>
.get(j);<z>
check)) {<z>
false;<z>
valid) {<z>
);<z>
result;<z>
(ColorSetting o) {<z>
(o instanceof HighlightPreset)<z>
o;<z>
other.text);<z>
1;<z>
eventProcessor, final int defaultPriority )<z>
super ( context, servicePool, eventProcessor );<z>
.poolTracker = poolTracker;<z>
;<z>
= defaultPriority;<z>
Class<V> vclass, String fieldName) {<z>
if (AVAILABLE) {<z>
newUpdater(tclass, vclass, fieldName);<z>
} else {<z>
null;<z>
mergeNameSpace() {<z>
isEmpty(nameSpace)) {<z>
word;<z>
= null;<z>
(Graphics graphics) {<z>
;<z>
());<z>
));<z>
BRACKET_LINE_WIDTH);<z>
1, r.y);<z>
, r.bottom() - 1);<z>
x, r.y + BRACKET_HEIGHT);<z>
- 1, r.y);<z>
- 1 - BRACKET_HEIGHT);<z>
- 1 - BRACKET_HEIGHT);<z>
x;<z>
y + 1);<z>
;<z>
.setLocation(pStart);<z>
String name, Path backing) {<z>
; ptr = ptr.next) {<z>
)) {<z>
backing;<z>
;<z>
);<z>
= firstChild;<z>
;<z>
firstChild = node;<z>
return node;<z>
String tag, String msg) {<z>
ERROR) {<z>
.Log.e(tag, msg);<z>
d1, RelationDescriptor d2) {<z>
;<z>
d1);<z>
r2;<z>
* r2 <= 0 : "can't determine order";<z>
;<z>
{<z>
;<z>
();<z>
{<z>
ProviderException<z>
"SunJSSE is already initialized in FIPS mode");<z>
(false);<z>
void onCreate(Bundle savedInstanceState) {<z>
(savedInstanceState);<z>
.FEATURE_NO_TITLE);<z>
.FLAG_FULLSCREEN);<z>
.addFlags( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON );<z>
();<z>
initRecorder();<z>
(R.layout.camera);<z>
.surface_camera);<z>
cameraView.getHolder();<z>
(this);<z>
.SURFACE_TYPE_PUSH_BUFFERS);<z>
cameraView.setClickable(true);<z>
.setOnClickListener(this);<z>
(PowerManager) getSystemService(Context.POWER_SERVICE);<z>
PowerManager.FULL_WAKE_LOCK, "Ping");<z>
mWakeLock.acquire();<z>
AndroidAuthSession session = buildSession();<z>
= new DropboxAPI<AndroidAuthSession>(session);<z>
checkAppKeySetup();<z>
startAuthentication(this);<z>
Exception e) {<z>
"onCreate", e);<z>
{<z>
= new Select(directoriesListSelectElement);<z>
WebElement> list = directoriesListSelect.getOptions();<z>
webElement : list) {<z>
{<z>
;<z>
) {<z>
)<z>
false;<z>
= DebuggerEngine.getClassPath(outputFileDir);<z>
, "Launch with path: "+classPath);<z>
;<z>
equals(testTemplateMode)) {<z>
.forName(testTemplateClass);<z>
classNameToRun = testTemplateClass;<z>
"-classpath", classPath, classNameToRun});<z>
()).start();<z>
.start();<z>
e) {<z>
+"\nIt is possible that some errors prevented the parser from launching. Check the output panel of the debugger and any other output console in your system to see if an error has been reported from the parser and try again.");<z>
;<z>
) {<z>
+e.toString()+"\nIt is possible that some errors prevented the parser from launching. Check the output panel of the debugger and any other output console in your system to see if an error has been reported from the parser and try again.");<z>
;<z>
);<z>
(InterruptedException e) {<z>
;<z>
{<z>
= new ConceptLinkedList();<z>
oov_word == null) {<z>
oovConcepts;<z>
) {<z>
getConcepts(concept_word);<z>
== 0) {<z>
;<z>
ConceptLinkedList tmpConcepts = new ConceptLinkedList();<z>
Concept head : concepts) {<z>
tail : oovConcepts) {<z>
isBlank(refConcepts)) {<z>
Concept ref : refConcepts) {<z>
ref));<z>
} else {<z>
autoCombineConcept(head, tail, null));<z>
oovConcepts = tmpConcepts;<z>
.size() > MAX_COMBINED_COUNT)) {<z>
;<z>
;<z>
{<z>
if (myElementStack.isEmpty()) {<z>
throw new IllegalStateException(<z>
);<z>
Navajo.class);<z>
Object obj) {<z>
true;<z>
false;<z>
obj instanceof CreateUserListSubscriptionTask)) return false;<z>
other = (CreateUserListSubscriptionTask) obj;<z>
.getOuterType())) return false;<z>
.account_id) return false;<z>
return false;<z>
true;<z>
typeClassName) {<z>
{<z>
(typeClassName);<z>
typeClass != null) {<z>
typeClass;<z>
TypeClass) typeClassMap.get(typeClassName);<z>
void glGetTexEnviv(<z>
env,<z>
,<z>
nio.IntBuffer params<z>
{}<z>
cf_def) throws InvalidRequestException, ConfigurationException<z>
ColumnFamilyType.create(cf_def.column_type);<z>
cfType == null)<z>
column_type);<z>
;<z>
.keyspace,<z>
.name,<z>
,<z>
));<z>
gc_grace_seconds); }<z>
minCompactionThreshold(cf_def.min_compaction_threshold); }<z>
}<z>
); }<z>
parse(cf_def.key_validation_class)); }<z>
))<z>
compaction_strategy);<z>
(cf_def.isSetCompaction_strategy_options())<z>
.compaction_strategy_options));<z>
())<z>
);<z>
if (cf_def.isSetCaching())<z>
fromString(cf_def.caching));<z>
))<z>
.read_repair_chance);<z>
cf_def.isSetDclocal_read_repair_chance())<z>
(cf_def.dclocal_read_repair_chance);<z>
;<z>
.comment)<z>
)<z>
)<z>
(TypeParser.parse(cf_def.key_validation_class))<z>
)<z>
.compressionParameters(cp);<z>
e)<z>
getMessage());<z>
(MarshalException e)<z>
e.getMessage());<z>
final void rule__QualifiedName__Group_1__0() throws RecognitionException {<z>
int stackSize = keepStackSize();<z>
FOLLOW_rule__QualifiedName__Group_1__0__Impl_in_rule__QualifiedName__Group_1__030524);<z>
();<z>
state._fsp--;<z>
.failed) return ;<z>
pushFollow(FOLLOW_rule__QualifiedName__Group_1__1_in_rule__QualifiedName__Group_1__030527);<z>
rule__QualifiedName__Group_1__1();<z>
_fsp--;<z>
if (state.failed) return ;<z>
RecognitionException re) {<z>
re);<z>
re);<z>
(stackSize);<z>
DerivedPropertyNotifier createDerivedPropertyNotifier(<z>
EStructuralFeature property, OCLFactory oclFactory) {<z>
(), DefaultOppositeEndFinder.getInstance(),<z>
oclFactory, property);<z>
{<z>
n == null) {<z>
IllegalArgumentException("Null argument");<z>
if (isInt(n)) {<z>
)),<z>
, Reduced.YES);<z>
{<z>
;<z>
return new BigFraction(<z>
numerator)),<z>
denominator), Reduced.NO);<z>
)<z>
aStream;<z>
DataOutputStream( raStream );<z>
= 0;<z>
-1;<z>
.clear( );<z>
void createControl(Composite parent) {<z>
)).getTargetContainer();<z>
CamelJmsComposite();<z>
() {<z>
public void stateChanged(ChangeEvent arg0) {<z>
(_consumerComposite.getErrorMessage());<z>
_consumerComposite.getErrorMessage() == null);<z>
});<z>
_consumerComposite.setTargetObject(_targetContainer);<z>
createContents(parent, SWT.NONE);<z>
_binding);<z>
.getErrorMessage() == null);<z>
.getPanel());<z>
setErrorMessage(null);<z>
(EOEditingContext editingContext, TaskInfo eo) {<z>
;<z>
localInstance == null && eo != null) {<z>
"You attempted to localInstance " + eo + ", which has not yet committed.");<z>
return localInstance;<z>
) {<z>
EventListeners rtn = null;<z>
wrapped instanceof SessionFactoryImpl) {<z>
);<z>
return rtn;<z>
void updateWorld() {<z>
();<z>
world);<z>
clearRequest() {<z>
;<z>
.getDefaultInstance();<z>
return this;<z>
public Knob updateInternalEvents(PApplet theApplet) {<z>
keyHandler.isAltDown()) {<z>
isActive) {<z>
.mouseY - _myControlWindow.pmouseY;<z>
(c) / resolution;<z>
) {<z>
, 0, 1);<z>
setInternalValue(currentValue);<z>
;<z>
<IValue> getChildren(IValue v) {<z>
) {<z>
(IRelation) v;<z>
relation.range());<z>
ArrayList<IValue>();<z>
: roots) {<z>
res.add(value);<z>
return res;<z>
v)) {<z>
v);<z>
res != null) return res;<z>
ArrayList<IValue>();<z>
>> p3() {<z>
B, C>>>>() {<z>
f(final A a) {<z>
>() {<z>
>> f(final B b) {<z>
, C>>() {<z>
C> f(final C c) {<z>
p(a, b, c);<z>
{<z>
{<z>
index].equalsIgnoreCase("description")) {<z>
[index] = "Comment[description]";<z>
("characteristics [organism]")) {<z>
[index] = "Characteristics[organism]";<z>
.equalsIgnoreCase("LabeledExtract Name")) {<z>
index] = "Labeled Extract Name";<z>
)) {<z>
"FactorValue", "Factor Value");<z>
{<z>
return columnHeaders;<z>
getKaleoTimers(<z>
boolean blocking)<z>
portal.kernel.exception.SystemException {<z>
null;<z>
_methodName21,<z>
] {<z>
,<z>
;<z>
Throwable t) {<z>
ClpSerializer.translateThrowable(t);<z>
{<z>
)t;<z>
if (t instanceof RuntimeException) {<z>
;<z>
.getClass().getName() +<z>
;<z>
);<z>
)<z>
= pathname+dirname ;<z>
= new File(newName) ;<z>
isDirectory() )<z>
getAbsolutePath()) ;<z>
file.exists() )<z>
mkdir() ;<z>
Location(newName) ;<z>
<V, E> state) {<z>
0);<z>
E>();<z>
modGraph);<z>
;<z>
(e))) {<z>
;<z>
} else {<z>
);<z>
newFringe, false);<z>
fontUrl, FontResolver resolver, FontCache fontCache) {<z>
= null;<z>
;<z>
fileLastModified = -1;<z>
if (fontCache != null) {<z>
fileLastModified = FontCache.getLastModified(fontUrl);<z>
(embedUrl)) {<z>
fontCache.getFontInfos(embedUrl, fileLastModified);<z>
) {<z>
fontInfos;<z>
fontCache.isFailedFont(embedUrl, fileLastModified)) {<z>
if (log.isDebugEnabled()) {<z>
("Skipping font file that failed to load previously: " + embedUrl);<z>
return null;<z>
null;<z>
.endsWith(".ttc")) {<z>
;<z>
trim();<z>
null;<z>
fontFileURI);<z>
;<z>
in);<z>
getTTCnames(reader);<z>
} catch (Exception e) {<z>
null) {<z>
;<z>
;<z>
{<z>
(in);<z>
util.ArrayList();<z>
iterator();<z>
(ttcNamesIterator.hasNext()) {<z>
();<z>
) {<z>
debug("Loading " + fontName);<z>
(<z>
);<z>
customFont = ttfLoader.getFont();<z>
this.eventListener != null) {<z>
.eventListener);<z>
catch (Exception e) {<z>
(fontCache != null) {<z>
embedUrl, fileLastModified);<z>
if (this.eventListener != null) {<z>
embedUrl, e);<z>
getFontInfoFromCustomFont(fontUrl, customFont, fontCache);<z>
!= null) {<z>
add(fi);<z>
])embedFontInfoList.toArray(<z>
()]);<z>
{<z>
, true, EncodingMode.AUTO, resolver);<z>
null) {<z>
this.eventListener);<z>
(Exception e) {<z>
!= null) {<z>
embedUrl, fileLastModified);<z>
if (this.eventListener != null) {<z>
);<z>
;<z>
, fontCache);<z>
!= null) {<z>
new EmbedFontInfo[] {fi};<z>
else {<z>
;<z>
List ausschliessen){<z>
= null;<z>
null;<z>
>();<z>
new Vector<Vector>();<z>
thisClass.conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,<z>
.CONCUR_UPDATABLE );<z>
catch (SQLException e) {<z>
);<z>
+" where "+kriterium;<z>
;<z>
int nichtlesen = ausschliessen.size();<z>
(rs.next()){<z>
retvec.clear();<z>
ResultSetMetaData rsMetaData = rs.getMetaData() ;<z>
;<z>
1 ; i < numberOfColumns;i++){<z>
){<z>
{<z>
(i)) );<z>
{<z>
)) );<z>
);<z>
}catch(SQLException ev){<z>
("SQLException: " + ev.getMessage());<z>
+ ev.getSQLState());<z>
));<z>
(rs != null) {<z>
rs.close();<z>
(SQLException sqlEx) {<z>
null;<z>
) {<z>
.close();<z>
) {<z>
null;<z>
)retkomplett.clone();<z>
Remote exportObject( Remote obj, int port )<z>
{<z>
;<z>
;<z>
{<z>
) {<z>
getItems();<z>
i < items.length; i++) {<z>
i];<z>
while (contributionItem instanceof SubContributionItem) {<z>
).getInnerItem();<z>
ActionContributionItem) {<z>
getAction();<z>
action)) {<z>
remove(contributionItem);<z>
double[] coords, int numOfAttributes,<z>
[] attributesArray) {<z>
)<z>
.logger.log(Level.WARNING,<z>
;<z>
.x = coords[0];<z>
this.y = coords[1];<z>
;<z>
(numOfAttributes > 0) {<z>
attributesArray);<z>
(final WPSOutput output) {<z>
outDef = new DocumentOutputDefinitionType();<z>
);<z>
.getAsReference());<z>
setEncoding(output.getEncoding());<z>
));<z>
);<z>
.getUom());<z>
return outDef;<z>
boolean jj_2_2064(int xla) {<z>
;<z>
try { return !jj_3_2064(); }<z>
LookaheadSuccess ls) { return true; }<z>
{ jj_save(2063, xla); }<z>
IdSet subSet(Id from, Id to) {<z>
to));<z>
public String displayName() {<z>
= null;<z>
!= null) {<z>
{<z>
item;<z>
{<z>
choiceDisplayKey();<z>
if (item instanceof EOEnterpriseObject) {<z>
valueForKeyPath(choiceDisplayKey);<z>
) == -1) {<z>
).valueForKey(choiceDisplayKey);<z>
} else {<z>
Utility.valueForKeyPath(item, choiceDisplayKey);<z>
return displayName != null ? displayName : " <null> ";<z>
, String idSolicitacao,String idSessao) {<z>
this.controller = controllerServer;<z>
idSessao = idSessao;<z>
idSolicitacao;<z>
;<z>
;<z>
Label();<z>
new Label();<z>
.lblFaltas = new Label();<z>
.lblCaronasRuins = new Label();<z>
Label();<z>
Label();<z>
() {<z>
) {<z>
setText(result[0]);<z>
(result[1]);<z>
setText(result[2]);<z>
.setText(result[3]);<z>
;<z>
[5]);<z>
(result[6]);<z>
caught) {<z>
+caught.getMessage());<z>
);<z>
VerticalPanel vPanel = new VerticalPanel();<z>
;<z>
vPanel.setSpacing(8);<z>
(formularioAvancado);<z>
;<z>
;<z>
) {<z>
) {<z>
(laneSet == null) {<z>
LaneSet();<z>
UUIDGenerator.generate());<z>
);<z>
main( String args[] ) throws FileNotFoundException {<z>
GenerateDisparityScoreSadRectFive gen = new GenerateDisparityScoreSadRectFive();<z>
;<z>
<XWikiDocument> searchDocuments(final String wheresql,<z>
distinctbylanguage,<z>
,<z>
final XWikiContext unused)<z>
, customMapping);<z>
refreshCenterImageView() {<z>
.cancel(slider.getCenterImageView());<z>
imageLoader.DisplayImage(this,<z>
ATTACH_FILE,<z>
.ImageSize.XLARGE,<z>
(),<z>
getId(), false);<z>
Friend28(String xUrl) throws InterruptedException {<z>
driver.get(xUrl);<z>
.sleep(2000);<z>
"spilautomationplayedcontacts@gmail.com", harvesting_password = "Spil1234";<z>
Login("cookietest", "123456");<z>
harvesting_password);<z>
;<z>
isSelected()){<z>
;<z>
);<z>
= 1;<z>
)).size() == 1){<z>
+ loop + ") .harvestEmail");<z>
++;<z>
;<z>
;<z>
.HARVESTING_SUCCESSFULLY_INVITED_TEXT);<z>
I_CmsReport getEventReport(CmsEvent event) {<z>
= null;<z>
null) {<z>
);<z>
if (report == null) {<z>
, getClass());<z>
;<z>
(<z>
] policyInformation)<z>
policyInformation;<z>
static SFIMManager getInstance() {<z>
if (managerInstance == null) {<z>
new SFIMManager();<z>
;<z>
doExecuteWithResult(IProgressMonitor monitor,<z>
) throws ExecutionException {<z>
{<z>
throw new ExecutionException(<z>
);<z>
&& getTarget() != null) {<z>
(getTarget());<z>
return CommandResult.newOKCommandResult();<z>
context) {<z>
editor);<z>
pos >= 0) {<z>
pos;<z>
return -1;<z>
mappingGroupName, String propertyId,<z>
) {<z>
(mappingGroupName, new FilterAndSortMapping<Long>(<z>
targetPropertyName,<z>
, NULL_AWARE_LONG));<z>
write(Part file) {<z>
getMimeType().equals(ODT_MIME_TYPE)) {<z>
+ file.getMimeType() + "]");<z>
write(file.getInputStream());<z>
catch (IOException e) {<z>
e);<z>
cl)<z>
).getName();<z>
lastIndexOf('.')+1);<z>
n, this);<z>
NOT_FOUND && val != cl) {<z>
.reportRuntimeError1("msg.prop.defined", n);<z>
(n, this, cl);<z>
oP, int oEnd) {<z>
) return false;<z>
if (oBytes == bytes) return true;<z>
oP;<z>
return false;<z>
;<z>
officeHierarchyService,<z>
mandatoryHiddenFieldService, LoanProductDao loanProductDao,<z>
savingsProductDao, OfficeDao officeDao,<z>
,<z>
penaltyDao) {<z>
= productService;<z>
= officeHierarchyService;<z>
= mandatoryHiddenFieldService;<z>
.loanProductDao = loanProductDao;<z>
;<z>
this.officeDao = officeDao;<z>
this.applicationConfigurationDao = applicationConfigurationDao;<z>
fundDao;<z>
penaltyDao = penaltyDao;<z>
generalLedgerDao;<z>
penaltyDao);<z>
{<z>
;<z>
int numParsed = 0;<z>
N = input.length;<z>
; i++) {<z>
[i];<z>
int value;<z>
group && group <= 'Z') {<z>
;<z>
group && group <= '7') {<z>
'2' - 26);<z>
else if (group == SEPARATOR) {<z>
'z') {<z>
value = group - 'a';<z>
'0') {<z>
'A';<z>
else if (group == '1') {<z>
- 'A';<z>
else {<z>
+ group);<z>
output = (output << 5) | value;<z>
++;<z>
(numParsed == 1) {<z>
) {<z>
new IllegalArgumentException("illegal start character; will overflow");<z>
(numParsed > 13) {<z>
IllegalArgumentException("too long; should have 13 characters");<z>
13) {<z>
new IllegalArgumentException("too short; should have 13 characters");<z>
output;<z>
) {<z>
= configuration.getGlobalRules();<z>
.length; i++) {<z>
ValidationRule rule = globalRules[i];<z>
obj)) {<z>
getClass());<z>
{<z>
getNestedPath();<z>
, nestedPath.length() - 1);<z>
;<z>
);<z>
(propertyName);<z>
{<z>
rule.getDefaultErrorMessage());<z>
iRecordSize) throws IOException {<z>
+ 50 > maxHoleSize)<z>
;<z>
);<z>
availableHolesBySize.isEmpty()) {<z>
.size = iRecordSize;<z>
(cursor);<z>
!= null && hole.size == iRecordSize) {<z>
PROFILER_DATA_RECYCLED_COMPLETE, timer);<z>
;<z>
deleteHole(hole.holeOffset);<z>
;<z>
lastKey();<z>
iRecordSize + ODataLocal.RECORD_FIX_SIZE + 50) {<z>
.dataOffset;<z>
(PROFILER_DATA_RECYCLED_PARTIAL, timer);<z>
iRecordSize);<z>
;<z>
timer);<z>
1;<z>
ExternalSortEventsCommand(<z>
sourceFile, File destinationFile, Charset charset,<z>
DoubleEnumerating indexDelegate) {<z>
;<z>
setIndexDelegate(indexDelegate);<z>
) {<z>
.id = id;<z>
this.artist = artist;<z>
;<z>
this.album = album;<z>
= duration;<z>
public boolean equals(Object that) {<z>
(that == null)<z>
return false;<z>
if (that instanceof dropIndex_result)<z>
dropIndex_result)that);<z>
false;<z>
void writeExternal(Element element) throws WriteExternalException {<z>
XmlSerializer.serialize(myState));<z>
"myNode");<z>
myNode.writeExternal(fieldElement);<z>
(fieldElement);<z>
);<z>
);<z>
.addContent(fieldElement);<z>
) {<z>
featureID) {<z>
.DEFENCE__POSITION:<z>
);<z>
.DEFENCE__PLAYER_STATS:<z>
();<z>
featureID, resolve, coreType);<z>
public void monitorRouter() {<z>
();<z>
long netErrors = 0;<z>
.statManager().getRate("udp.sendException");<z>
rs != null) {<z>
60*1000);<z>
if (r != null)<z>
);<z>
5);<z>
if (ok) {<z>
0;<z>
else {<z>
;<z>
;<z>
{<z>
log(Log.CRIT, "Router hung! Restart forced by watchdog!");<z>
) {}<z>
;<z>
int capacity ){<z>
int log = 0;<z>
if( capacity != 0 ){<z>
(capacity);<z>
-MIN_OFFSET : 0 ];<z>
{<z>
);<z>
()-1);<z>
;<z>
{<z>
log : 1 << MIN_OFFSET ];<z>
reference) {<z>
registration = getRemoteServiceRegistrationImpl(reference);<z>
if (registration == null)<z>
null;<z>
,<z>
registration);<z>
;<z>
void printUsage ( PrintStream out ) {<z>
"Usage:");<z>
.println(" java -jar websockify.jar [options] source_port target_addr target_port");<z>
out.println();<z>
("Options:");<z>
;<z>
;<z>
println("Example:");<z>
out.println(" java -jar websockify.jar 5900 server.example.net 5900");<z>
.ByteString value) {<z>
value == null) {<z>
NullPointerException();<z>
result.s_.isEmpty()) {<z>
ByteString>();<z>
);<z>
this;<z>
> returnNewsFeed(Integer id, Integer count) {<z>
;<z>
get(id).getUrl());<z>
SyndFeedInput input = new SyndFeedInput();<z>
feedURL));<z>
entries = sf.getEntries();<z>
iterator();<z>
) {<z>
SyndEntry) it.next();<z>
(),<z>
getDescription().getValue(),<z>
;<z>
tempA);<z>
Collections.sort(articles);<z>
articles);<z>
= articles;<z>
0, count);<z>
Exception e) {<z>
return finalResult;<z>
e) {<z>
.printStackTrace();<z>
;<z>
) {<z>
switch (field) {<z>
:<z>
return getDb();<z>
COLL:<z>
return getColl();<z>
IllegalStateException();<z>
Type newSimpleType(String name) {<z>
;<z>
) >= 0) {<z>
+ name);<z>
Type(name, null);<z>
(String name) {<z>
) {<z>
= VALUES_ARRAY[i];<z>
(name)) {<z>
return result;<z>
;<z>
directory, boolean recursive, String file,<z>
id) {<z>
title = Util.fixEmptyAndTrim(title);<z>
Util.fixEmptyAndTrim(description);<z>
Util.fixEmptyAndTrim(directory);<z>
;<z>
.file = Util.fixEmptyAndTrim(file);<z>
);<z>
void onCreate(Bundle savedInstanceState) {<z>
savedInstanceState);<z>
(R.layout.standard_listview_layout);<z>
.titel);<z>
.string.select_mode);<z>
R.id.line);<z>
id.from);<z>
);<z>
"");<z>
.setText("");<z>
);<z>
();<z>
, final HttpServletRequest httpRequest )<z>
&& httpRequest != null )<z>
);<z>
;<z>
) );<z>
.getContentType() );<z>
;<z>
;<z>
y) {<z>
;<z>
id = id;<z>
.x = x;<z>
.y = y;<z>
;<z>
400;<z>
;<z>
{<z>
null){<z>
;<z>
;<z>
throws RecognitionException {<z>
current = null;<z>
= null;<z>
.getMethodRule());<z>
FOLLOW_ruleMethod_in_entryRuleMethod1341);<z>
;<z>
--;<z>
;<z>
);<z>
) {<z>
re);<z>
();<z>
;<z>
public void actionPerformed(ActionEvent e) {<z>
;<z>
);<z>
;<z>
;<z>
);<z>
);<z>
.NULL);<z>
public boolean equals(Object o) {<z>
{<z>
;<z>
o instanceof Triple) {<z>
) o;<z>
, other.clazz) &&<z>
this.lemma, other.lemma) &&<z>
);<z>
;<z>
() {<z>
) {<z>
.getProperty(ROWSET_SYNC_PROVIDER);<z>
(rowsetPropStr != null) {<z>
sysProviders = rowsetPropStr.split(":");<z>
) {<z>
sysProvider, new ProviderImpl(sysProvider));<z>
);<z>
new FileInputStream(resLocation);<z>
rowsetProp.load(resInput);<z>
();<z>
) {<z>
index = 0;<z>
{<z>
,<z>
);<z>
{<z>
,<z>
, index);<z>
String version = getProviderProperties(rowsetProp,<z>
index);<z>
,<z>
));<z>
index++;<z>
{<z>
> bindings = ctx.listBindings("");<z>
hasMore()) {<z>
= bindings.next();<z>
bind<z>
getObject());<z>
NamingException e) {<z>
= true;<z>
();<z>
l, String q, Attributes a)<z>
SAXException {<z>
q, a);<z>
== "tr") {<z>
;<z>
waitForTd = true;<z>
if (waitForTd && l == "th") {<z>
waitForTd = false;<z>
{<z>
tdCount++;<z>
== "td") {<z>
= true;<z>
;<z>
, String src, int buffersize, boolean verifyChecksum<z>
IOException, UnresolvedLinkException {<z>
dfsClient;<z>
verifyChecksum;<z>
= buffersize;<z>
this.src = src;<z>
this.socketCache = dfsClient.socketCache;<z>
dfsClient.getConf().prefetchSize;<z>
).timeWindow;<z>
.getConf().nCachedConnRetry;<z>
);<z>
String toXML(Element e)<z>
, varName);<z>
;<z>
public void addItem(Item item) {<z>
== null) {<z>
new ArrayList();<z>
items.add(item);<z>
Entity killer, boolean skulled, boolean protectItem) {<z>
int keep = skulled ? 0 : 3;<z>
) {<z>
keep++;<z>
;<z>
if (killer instanceof Player) {<z>
killer;<z>
getLocation();<z>
;<z>
) {<z>
null;<z>
{<z>
= items.iterator();<z>
.hasNext()) {<z>
.next();<z>
(), victimLoc, pkiller));<z>
);<z>
} else {<z>
);<z>
saved = 0;<z>
;<z>
)) {<z>
;<z>
< keep) {<z>
victimLoc, pkiller));<z>
;<z>
<WorldEvent> events) {<z>
if (_maxWaitTimeForNestLocationDecision < 0) {<z>
, 0.4);<z>
getId() + "] Max wait time for nest location: " + _maxWaitTimeForNestLocationDecision);<z>
boolean haveEnoughDataToDecide = false;<z>
== 0)))<z>
)) {<z>
;<z>
() > _maxWaitTimeForNestLocationDecision)) {<z>
_numVotesForBoundaryRight) ? _boundaryCandidateLeft : _boundaryCandidateRight;<z>
: _boundaryCandidateBottom;<z>
+ " points.");<z>
map = _knowledge.getMap();<z>
;<z>
nestLocationY = 0;<z>
(boundaryX > 0) {<z>
map.getRightMargin();<z>
{<z>
;<z>
(boundaryY > 0) {<z>
();<z>
} else {<z>
BOARD_SIZE/2 + map.getBottomMargin();<z>
;<z>
new Point(nestLocationX, nestLocationY));<z>
+ _knowledge.getNestAbsolute());<z>
_nestLocationPublished = true;<z>
message.serialize());<z>
{<z>
(events != null) {<z>
WorldEvent event : events) {<z>
.getId() + "] Got WorldEvent.");<z>
getEvent());<z>
) {<z>
()) {<z>
case BOUNDARY_REPORT:<z>
boundaryReportSay = (BoundaryReportSay) say;<z>
;<z>
TOPOLOGY:<z>
= (TopologySay) say;<z>
_knowledge, topologySay);<z>
return new Pass();<z>
occurence(final int value) {<z>
count = 0;<z>
final int size = size();<z>
i<size; i++) {<z>
i) == value) {<z>
++;<z>
;<z>
(final Shell parentShell, final XYGraph xyGraph) {<z>
);<z>
() | SWT.RESIZE);<z>
size();<z>
+1));<z>
final Annotation annotation;<z>
xyGraph.getPlotArea().getTraceList();<z>
(traces.size() > 0)<z>
, traces.get(0));<z>
annotation = new Annotation(name,<z>
primaryYAxis);<z>
;<z>
OfferCodeDao offerCodeDao, OfferService offerService) {<z>
= offerDao;<z>
.offerCodeDao = offerCodeDao;<z>
offerService = offerService;<z>
{<z>
nOpens == 0) {<z>
i) {<z>
);<z>
(Throwable e) {<z>
e);<z>
)<z>
char16 &&<z>
char16 <= TRAIL_SURROGATE_MAX_VALUE;<z>
void mQUOTE() throws RecognitionException {<z>
int _type = QUOTE;<z>
= DEFAULT_TOKEN_CHANNEL;<z>
LA(1) == '\'') {<z>
.consume();<z>
else {<z>
MismatchedSetException mse = new MismatchedSetException(<z>
null, input);<z>
mse);<z>
mse;<z>
= _type;<z>
state.channel = _channel;<z>
} finally {<z>
throws IOException {<z>
width % 4;<z>
padding != 0) {<z>
= 4 - padding;<z>
int lineLength = width + padding;<z>
) {<z>
height -1) * width : 0;<z>
++) {<z>
)) {<z>
bdata, j, width);<z>
);<z>
j += isBottomUp ? -width : width;<z>
(bi, 0, i,<z>
1, 1, 1,<z>
0});<z>
i/destinationRegion.height);<z>
{<z>
lineLength];<z>
=<z>
);<z>
) {<z>
lastLine =<z>
.height - 1) * scaleY;<z>
height - 1 - lastLine));<z>
* sourceRegion.y);<z>
1);<z>
= destinationRegion.y * lineStride;<z>
)<z>
destinationRegion.height - 1) * lineStride;<z>
;<z>
sourceRegion.y;<z>
j++, y+=scaleY) {<z>
())<z>
, 0, lineLength);<z>
;<z>
m += scaleX) {<z>
i] = buf[m];<z>
+= isBottomUp ? -lineStride : lineStride;<z>
skipBytes(skipLength);<z>
j,<z>
.width, 1, 1, 1,<z>
]{0});<z>
;<z>
(MockExpressionNode node) {<z>
+<z>
;<z>
;<z>
[] scopes) {<z>
scopes));<z>
if (value == null)<z>
defaultValue;<z>
.parseInt(value);<z>
catch (NumberFormatException e) {<z>
;<z>
ctx) {<z>
;<z>
;<z>
();<z>
;<z>
] {Map.class});<z>
;<z>
) {<z>
(e);<z>
{<z>
println("Restore output redirection ... ");<z>
this.restoreOutput();<z>
);<z>
OutboundOrchestratableMessage getCumulativeResponseBasedGLEVEL(<z>
{<z>
) {<z>
(cumulativeSpecLevel) {<z>
: {<z>
);<z>
OutboundDocQueryProcessorHelper<z>
.createNewCumulativeResponse_a0((OutboundDocQueryOrchestratable) individual);<z>
: {<z>
debug("EntityDocQueryProcessor::processNhinResponse createNewCumulativeResponse_a1");<z>
cumulativeResponse = OutboundDocQueryProcessorHelper<z>
OutboundDocQueryOrchestratable) individual);<z>
default: {<z>
log.debug("EntityDocQueryProcessor::processNhinResponse unknown cumulativeSpecLevel so createNewCumulativeResponse_a1");<z>
OutboundDocQueryProcessorHelper<z>
((OutboundDocQueryOrchestratable) individual);<z>
cumulativeResponse;<z>
, File file) {<z>
;<z>
= new FileInputStream(file);<z>
);<z>
getProperty(s);<z>
double var = Double.parseDouble(string);<z>
);<z>
var;<z>
) {<z>
.logger.log(Level.SEVERE,<z>
;<z>
.SEVERE, "[LC]" + e);<z>
return 0;<z>
{<z>
);<z>
) {<z>
left;<z>
1).jjtAccept(this, data);<z>
(left)) {<z>
right;<z>
)) {<z>
left;<z>
{<z>
return left + "&" + right;<z>
{<z>
= new ProgressDialog(context);<z>
dialog.setIndeterminate(true);<z>
("Syncing...");<z>
false);<z>
();<z>
? extends ArgKey> getArgKeys() {<z>
.asList(<z>
FILE_PROGRAM_SOURCE,<z>
,<z>
.CLASSPATH,<z>
.DEFAULT_PROGRAM_FILE,<z>
USE_TOOLS_JAR,<z>
Gosu.ARGKEY_VERIFY,<z>
(long groupId, String recordSetKey)<z>
throws PortalException, SystemException {<z>
recordSet = ddlRecordSetPersistence.findByG_R(<z>
groupId, recordSetKey);<z>
recordSet);<z>
[] getEncoded(String encoding)<z>
{<z>
)) {<z>
(<z>
;<z>
[0].equals(encoding)) {<z>
;<z>
else {<z>
pkcs7Encoding == null) {<z>
;<z>
;<z>
pkcs7Encoding.length);<z>
return result;<z>
String name, int index,<z>
, boolean isSetter)<z>
isSetter, false);<z>
) {<z>
);<z>
TransformerFactory tf = TransformerFactory.newInstance();<z>
);<z>
parent != null) {<z>
;<z>
"xml");<z>
;<z>
!= 0) {<z>
));<z>
"yes");<z>
();<z>
sw);<z>
transform(dumSource, sr);<z>
sw.toString();<z>
Exception e) {<z>
.printStackTrace();<z>
;<z>
) {<z>
DDF_ExchangeChannel known : ENUM_VALUES) {<z>
)) {<z>
;<z>
return UNKNOWN;<z>
mapdata2(Message msg) {<z>
= msg.coord();<z>
intern();<z>
mmname.equals(""))<z>
mmname = null;<z>
256];<z>
while(true) {<z>
msg.uint8();<z>
pidx == 255)<z>
);<z>
;<z>
;<z>
.off);<z>
[10000];<z>
while(true) {<z>
int len;<z>
== 0) {<z>
))<z>
(new RuntimeException("Got unterminated map blob"));<z>
(buf, 0, len);<z>
) {<z>
new RuntimeException("Got malformed map blob", e));<z>
) {<z>
) {<z>
(req.containsKey(c)) {<z>
= 0;<z>
get(c);<z>
mnm = mmname;<z>
cmaps.y; y++) {<z>
x++) {<z>
] = blob.uint8();<z>
cmaps.y; y++) {<z>
cmaps.x; x++)<z>
= 0;<z>
true) {<z>
uint8();<z>
255)<z>
];<z>
);<z>
), blob.uint8());<z>
());<z>
ol;<z>
{<z>
)<z>
2;<z>
ol = 1;<z>
== 1) {<z>
& 1) == 1)<z>
= 8;<z>
;<z>
{<z>
;<z>
y <= c2.y; y++) {<z>
; x++) {<z>
[y] |= ol;<z>
, c2, ol);<z>
.remove(c);<z>
g.makeflavor();<z>
(c)) {<z>
();<z>
;<z>
grids.put(c, g);<z>
);<z>
{<z>
ApplicationListener.Adapter() {<z>
EventObject e) {<z>
, "exit"));<z>
});<z>
(0, 1));<z>
JComboBox(new Locale[] {<z>
"es")<z>
);<z>
;<z>
add("global", global);<z>
" "));<z>
Locale[] {<z>
.FRENCH, new Locale("es")<z>
;<z>
;<z>
addItemListener(new ItemListener() {<z>
ItemEvent e) {<z>
getSelectedItem());<z>
});<z>
.addItemListener(new ItemListener() {<z>
ItemEvent e) {<z>
getSelectedItem());<z>
});<z>
());<z>
void setKeepAlive(boolean on) {<z>
;<z>
opts == null)<z>
)<z>
INACTIVITY_ACTION_SEND);<z>
.setInactivityAction(ConnectionOptions.INACTIVITY_ACTION_NOOP);<z>
private void createCoregionIfNecessary() {<z>
.monitor) {<z>
coregion == null) {<z>
+ COREGION_SUFFIX);<z>
.connectRegion(this.coregion, TOP);<z>
;<z>
(BundleException e) {<z>
);<z>
MIMEMultipartRelated element,<z>
throws Exception {<z>
(WsdlLexicon.MIME_MULTIPART_RELATED, WsdlLexicon.MIME_MULTIPART_RELATED);<z>
getMIMEParts()) {<z>
;<z>
CasProxiedAuthFilterPanelInfo() {<z>
class);<z>
.class);<z>
CasProxiedAuthenticationFilterConfig.class);<z>
{<z>
new XQuery(<z>
);<z>
final QT3Result res = result(query);<z>
= res;<z>
"false false false true true true")<z>
{<z>
.get(player);<z>
e == null) {<z>
e = new PMEntry(player);<z>
players.put(player, e);<z>
e;<z>
(EDataType eDataType, String initialValue) {<z>
initialValue);<z>
) + "'");<z>
return result;<z>
WizardNewProjectCreationPage("main") {<z>
validatePage() {<z>
))<z>
;<z>
main.getProjectHandle());<z>
true;<z>
ObjectStreamException {<z>
equals(CategoryLabelWidthType.CATEGORY)) {<z>
;<z>
.RANGE)) {<z>
return CategoryLabelWidthType.RANGE;<z>
null;<z>
hosts, final String[] cns,<z>
ie6,<z>
)<z>
{<z>
32);<z>
);<z>
hosts.length; i++) {<z>
= hosts[i];<z>
().toLowerCase() : "";<z>
;<z>
{<z>
);<z>
;<z>
('>');<z>
String hostnames = buf.toString();<z>
= new TreeSet<String>();<z>
cns[0] != null) {<z>
add(cns[0]);<z>
{<z>
; i++) {<z>
[i]);<z>
if (subjectAlts != null) {<z>
length; i++) {<z>
] != null) {<z>
.add(subjectAlts[i]);<z>
) {<z>
= "Certificate for " + hosts[0] + " doesn't contain CN or DNS subjectAlt";<z>
SSLException(msg);<z>
;<z>
;<z>
); it.hasNext();) {<z>
it.next();<z>
cn.toLowerCase();<z>
.append(" <");<z>
append(cn);<z>
append('>');<z>
(it.hasNext()) {<z>
append(" OR");<z>
"*.")<z>
('.') >= 0<z>
&& !isIP4Address(cn)<z>
cn);<z>
) {<z>
).toLowerCase();<z>
doWildcard) {<z>
(1));<z>
match && strictWithSubDomains) {<z>
== countDots(cn);<z>
{<z>
cn);<z>
(match) {<z>
out;<z>
if (!match) {<z>
buf);<z>
(final IPreferenceStore store,<z>
{<z>
key)) {<z>
;<z>
.isDefault(key)) {<z>
;<z>
store, key);<z>
new ChannelListener.Setter<ConnectedStreamChannel>() {<z>
? super ConnectedStreamChannel> listener) {<z>
= listener;<z>
DateTimeBox() {<z>
, null, DATE_FORMAT);<z>
).setDateTimeBox(this);<z>
TextBox textbox = getTextBox();<z>
.setVisibleLength(19 + 2);<z>
.setMaxLength(19);<z>
void refreshFileStatus() {<z>
;<z>
f == null || f instanceof LightVirtualFile) return;<z>
getInstance().getOpenProjects()) {<z>
FileStatusManagerImpl)FileStatusManager.getInstance(each);<z>
getDocument());<z>
<Profile> profilesToApply) {<z>
;<z>
{<z>
.contains(alreadyAppliedProfile)) {<z>
.unapplyProfile(alreadyAppliedProfile);<z>
{<z>
(profileToApply)) {<z>
);<z>
return packagge;<z>
] references, int start) {<z>
references.length; ++i) {<z>
[i];<z>
.checkCanceled();<z>
continue;<z>
(!hasBadResolve(reference, false)) {<z>
(reference);<z>
().getStartOffset();<z>
referenceRange = reference.getRangeInElement();<z>
{<z>
.error("Reference range start offset > end offset: " + reference +<z>
referenceRange.getEndOffset());<z>
));<z>
{<z>
();<z>
if (parent instanceof XmlAttribute) {<z>
).getName().toLowerCase();<z>
0 && name.endsWith("stylename")) {<z>
HighlightInfoType.WARNING;<z>
HighlightInfo info = HighlightInfo.createHighlightInfo(<z>
),<z>
getEndOffset(),<z>
);<z>
.registerQuickfix(info, reference);<z>
;<z>
Object value) {<z>
if( contentMetadataClean ) {<z>
= new HashMap(contentMetadata);<z>
contentMetadataClean = false;<z>
);<z>
boolean equals(Object o) {<z>
== o) {<z>
;<z>
{<z>
;<z>
)) {<z>
return false;<z>
final Heads heads = (Heads) o;<z>
null) {<z>
false;<z>
return true;<z>
public void b()<z>
synchronized (this.LockObject)<z>
a();<z>
String plugin, String parameters) {<z>
;<z>
(parameters == null)<z>
);<z>
, parameters);<z>
private static boolean operation()<z>
successful = false;<z>
AtomicTransaction();<z>
begin();<z>
);<z>
;<z>
.nextInt() % _matrixWidth);<z>
.nextInt() % _matrixHeight);<z>
srcValue = new IntHolder();<z>
IntHolder();<z>
x0, y0, srcValue);<z>
)<z>
.get_value(x1, y1, dstValue);<z>
)<z>
set_value(x0, y0, 0);<z>
(x1, y1, 1);<z>
successful = true;<z>
)<z>
!= Reason.ReasonConcurrencyControl)<z>
throw invocationException;<z>
successful)<z>
);<z>
atomicTransaction.rollback();<z>
exception)<z>
get_status() == Status.StatusActive)<z>
);<z>
;<z>
(Exception exception)<z>
"Client03.Worker.operation: " + exception);<z>
err);<z>
throw exception;<z>
;<z>
{<z>
Log.d(TAG, "onCreate - S");<z>
.onCreate(savedInstanceState);<z>
getData();<z>
(uri);<z>
data.setSystemProperties();<z>
, Arrays.asList(frameworkAPKs));<z>
null != cl) {<z>
;<z>
Context.class);<z>
);<z>
);<z>
(TAG, "Main Clazz "+mainClazz);<z>
class });<z>
, "Main Clazz Main "+mainClazzMain);<z>
Exception e) {<z>
+e, e);<z>
(e);<z>
|| null == mStaticContextClear ||<z>
) {<z>
e = new RuntimeException("XXX - incomplete method set");<z>
(TAG, "error: "+e, e);<z>
e;<z>
());<z>
[0];<z>
(TAG, "onCreate - X");<z>
protected Integer doInBackground(Void... params) {<z>
)) {<z>
return CHECKIN_OFFLINE;<z>
" ", "%20");<z>
+ mImdbId + GETGLUE_SOURCE<z>
;<z>
mContext.getResources();<z>
(<z>
getglue_consumer_key),<z>
);<z>
,<z>
mPrefs.getString(OAUTH_TOKEN_SECRET, ""));<z>
HttpURLConnection request = null;<z>
request = AndroidUtils.buildHttpUrlConnection(url);<z>
.sign(request);<z>
) {<z>
Utils.trackException(mContext, e);<z>
);<z>
CHECKIN_FAILED;<z>
OAuthExpectationFailedException e) {<z>
(mContext, e);<z>
w(TAG, e);<z>
;<z>
} catch (OAuthCommunicationException e) {<z>
, e);<z>
TAG, e);<z>
CHECKIN_FAILED;<z>
catch (IOException e) {<z>
);<z>
, e);<z>
CHECKIN_FAILED;<z>
mComment = "";<z>
= null;<z>
();<z>
();<z>
responseIn = request.getInputStream();<z>
;<z>
== HttpURLConnection.HTTP_OK) {<z>
> interactions = getGlueXmlParser.parseInteractions(responseIn);<z>
interactions.size() > 0) {<z>
;<z>
return CHECKIN_SUCCESSFUL;<z>
{<z>
);<z>
null) {<z>
);<z>
} catch (ClientProtocolException e) {<z>
trackException(mContext, e);<z>
e);<z>
e) {<z>
.trackException(mContext, e);<z>
);<z>
(IllegalStateException e) {<z>
, e);<z>
w(TAG, e);<z>
} catch (XmlPullParserException e) {<z>
trackException(mContext, e);<z>
(TAG, e);<z>
{<z>
) {<z>
close();<z>
(IOException e) {<z>
);<z>
(TAG, e);<z>
return CHECKIN_FAILED;<z>
public void nodeDeleted(String path) {<z>
isStopped()) {<z>
cont = refreshListIfRightPath(path);<z>
cont) {<z>
(path + " znode expired, trying to lock it");<z>
ReplicationZookeeper.getZNodeName(path));<z>
setOriginalRate(final double a_originalRate) {<z>
{<z>
IllegalArgumentException("Original rate must be greater than"<z>
;<z>
a_originalRate;<z>
Calendar startTime, User host)<z>
HashMap<User, UserStatus>();<z>
;<z>
= startTime;<z>
globalEventId = Constants.EventIdNotAssigned;<z>
unknown;<z>
(SWITCH q)<z>
;<z>
, numSigmas;<z>
keys;<z>
];<z>
, 0, q.keysLength());<z>
[] {});<z>
.put(q, q0);<z>
{<z>
.getParent(element);<z>
{<z>
)<z>
parent;<z>
flatten(parent))<z>
getParent(parent);<z>
null;<z>
{<z>
.listIterator(tokenIterator.previousIndex());<z>
sb = new StringBuilder();<z>
if (iter.hasNext()) {<z>
append(iter.next());<z>
1;<z>
{<z>
if (count > 20) {<z>
;<z>
sb.append(" ");<z>
;<z>
());<z>
.toString();<z>
() {<z>
resetInput();<z>
mConfigComposite.onXmlModelLoaded();<z>
();<z>
,<z>
simpleWorkFlowClient) {<z>
)){<z>
);<z>
) {<z>
) {<z>
IllegalStateException("PolicyNode is immutable");<z>
(child);<z>
unit, int position) {<z>
> blocks = unit.getJstBlockList();<z>
!blocks.isEmpty()) {<z>
) {<z>
getSource();<z>
{<z>
block;<z>
();<z>
public void stop()<z>
)<z>
cancel( true );<z>
null;<z>
{<z>
ArrayList list = getChildrenOfType(TYPE);<z>
];<z>
.toArray(array);<z>
array;<z>
int tableSize) {<z>
= tableSize;<z>
< fAttributes.length; i++) {<z>
] = new Attribute();<z>
throws Exception {<z>
, System.out ));<z>
e) {<z>
)!=null) {<z>
));<z>
println();<z>
(e.getOptions(),false);<z>
);<z>
protected void LogScopeList() {<z>
"### includeScopeList : " + includeScopeList);<z>
for (Object scope : includeScopeList) {<z>
));<z>
boolean deleteOldRdn, boolean ignoreReferral,<z>
LogChange log ) throws LdapException<z>
;<z>
, dn, newParent,<z>
, deleteOldRdn );<z>
;<z>
setReferralHandling( moveAndRenameContext, ignoreReferral );<z>
( moveAndRenameContext );<z>
[] data)<z>
, 0 + offset, sid);<z>
(data, 2 + offset,<z>
;<z>
0);<z>
));<z>
offset, getLastRowAdd1());<z>
0);<z>
++)<z>
offset, getDbcellAt(k));<z>
();<z>
() {<z>
;<z>
);<z>
resultListShouldContain("Dog - Wikipedia, the free encyclopedia");<z>
) {<z>
boolean matchName(Artifact artifact, String source) {<z>
);<z>
Artifact a) {<z>
));<z>
String getName() {<z>
"sources";<z>
caller, Intent service,<z>
{<z>
) == true) {<z>
throw new IllegalArgumentException("File descriptors passed in Intent");<z>
synchronized(this) {<z>
final int callingPid = Binder.getCallingPid();<z>
final int callingUid = Binder.getCallingUid();<z>
= Binder.clearCallingIdentity();<z>
(caller, service,<z>
callingPid, callingUid);<z>
);<z>
;<z>
] args)<z>
);<z>
OAInterface.initOA();<z>
length - 1]);<z>
().string_to_object(serviceIOR));<z>
= true;<z>
).begin();<z>
);<z>
;<z>
).begin();<z>
);<z>
;<z>
correct && service.is_correct();<z>
(!correct)<z>
new Exception("wasn't correct after adding crash record");<z>
;<z>
= false;<z>
heuristicHazard)<z>
;<z>
if (correct)<z>
println("Passed");<z>
System.out.println("Failed");<z>
exception)<z>
.println("Failed");<z>
+ exception);<z>
.err);<z>
();<z>
.shutdownORB();<z>
exception)<z>
.println("Client01b.main: " + exception);<z>
.err);<z>
void populate() {<z>
.cComboClippingLayer);<z>
(this.cComboLayerToClip);<z>
();<z>
;<z>
byte[] bytes, String destination) {<z>
destination).getChannel();<z>
(bytes));<z>
fc.close();<z>
catch (Exception e) {<z>
printStackTrace();<z>
{<z>
;<z>
;<z>
get(stringCharArray)) < 0) {<z>
stringCharArray);<z>
currentIndex++);<z>
> 0xFFFF){<z>
referenceBinding.scope.referenceType());<z>
writeU1(StringTag);<z>
stringIndex);<z>
index;<z>
String[] args) {<z>
connector = GradleConnector.newConnector();<z>
.length > 0) {<z>
;<z>
) {<z>
));<z>
;<z>
(args.length > 0) {<z>
(args[0]));<z>
ProjectConnection connection = connector.connect();<z>
BuildLauncher launcher = connection.newBuild();<z>
);<z>
ByteArrayOutputStream();<z>
;<z>
launcher.setStandardError(outputStream);<z>
run();<z>
} finally {<z>
close();<z>
buildContent(<z>
> notificationSubList) {<z>
(mainContent == null) {<z>
= new VerticalPanel();<z>
} else {<z>
();<z>
{<z>
.clear(true);<z>
subscriptionTable.removeAllRows();<z>
{<z>
;<z>
) {<z>
= 0;<z>
) {<z>
count, dto);<z>
count++;<z>
add(subscriptionTable);<z>
buttonPanel = new HorizontalPanel();<z>
TEXT_CONSTANTS.add());<z>
.addClickHandler(new ClickHandler() {<z>
ClickEvent event) {<z>
;<z>
= new NotificationSubscriptionDto();<z>
dto);<z>
);<z>
;<z>
);<z>
;<z>
;<z>
;<z>
key)<z>
, null);<z>
;<z>
String yearValue, Collection<String> years) {<z>
]>();<z>
] = null;<z>
debug("silverStatisticsPeas", "SilverStatisticsPeasSessionController.getYear()",<z>
yearValue);<z>
years != null) {<z>
) {<z>
];<z>
[INDICE_VALUE] = indice;<z>
stat[INDICE_LIB] = stat[INDICE_VALUE];<z>
equals(yearValue)) {<z>
INDICE_VALUE] += " selected";<z>
);<z>
;<z>
final void enforceAddDatastream(Context context,<z>
,<z>
String dsId,<z>
] altIDs,<z>
String MIMEType,<z>
,<z>
dsLocation,<z>
,<z>
String dsState,<z>
String checksumType,<z>
)<z>
{<z>
.debug("Entered enforceAddDatastream");<z>
.ADD_DATASTREAM.uri;<z>
context.setActionAttributes(null);<z>
;<z>
"";<z>
= resourceAttributes<z>
uri,<z>
);<z>
resourceAttributes<z>
,<z>
formatURI);<z>
= resourceAttributes<z>
uri,<z>
);<z>
= resourceAttributes<z>
ID.uri, dsId);<z>
= resourceAttributes<z>
Constants.DATASTREAM.LOCATION.uri,<z>
dsLocation);<z>
name = resourceAttributes<z>
(Constants.DATASTREAM.CONTROL_GROUP.uri,<z>
);<z>
resourceAttributes<z>
.uri,<z>
altIDs);<z>
= resourceAttributes<z>
(Constants.DATASTREAM.CHECKSUM_TYPE.uri,<z>
);<z>
name = resourceAttributes<z>
(Constants.DATASTREAM.CHECKSUM.uri,<z>
;<z>
} catch (Exception e) {<z>
.setResourceAttributes(null);<z>
(target + " couldn't set "<z>
);<z>
resourceAttributes);<z>
.LOGIN_ID.uri),<z>
Constants.ACTION.APIM.uri,<z>
(pid),<z>
context);<z>
} finally {<z>
;<z>
)<z>
(), getAuthPassword() );<z>
);<z>
;<z>
( getExactURI() );<z>
;<z>
getResponseDocument() );<z>
( getResponseHeaders() );<z>
fixture.setStrictHeaders( isStrictHeaders() );<z>
fixture.setUriPattern( getUriPattern() );<z>
return fixture;<z>
paintLegend(Graphics g) {<z>
;<z>
;<z>
10));<z>
/ 24);<z>
int h = getHeight() / 2;<z>
x = 0;<z>
i++) {<z>
? "chrX" : "chrY");<z>
getColor(chr);<z>
g.setColor(c);<z>
, 0, w, h);<z>
"Y");<z>
textGraphics);<z>
w;<z>
private IAction createDeleteAction() {<z>
Action(Messages.IssuesView_DeleteIssueAction, IssuesActivator<z>
.DELETE)) {<z>
@SuppressWarnings("unchecked")<z>
public void runWithEvent(Event event) {<z>
IStructuredSelection) viewer<z>
();<z>
<IIssue>();<z>
{<z>
issue = iter.next();<z>
.add(issue);<z>
;<z>
IssuesView_DeleteIssueTooltip);<z>
{<z>
.setEnabled(false);<z>
} else {<z>
);<z>
, true);<z>
;<z>
, RepositoryAccess ra) {<z>
{<z>
;<z>
1;<z>
);<z>
entries : properties.entrySet()) {<z>
entries.getKey();<z>
if (key.startsWith(unknownRootPrefix)) {<z>
int lastDot = key.lastIndexOf('.');<z>
lastDot < 0)<z>
substring(lastDot + 1));<z>
keyNum)<z>
keyNum;<z>
} catch (NumberFormatException e) {<z>
raStr))<z>
maxNum + 1), raStr);<z>
onReceivedTitle(String title) {<z>
if (mWebChromeClient == null) {<z>
sendMessage(obtainMessage(RECEIVED_TITLE, title));<z>
String serverHostKeyAlgorithm,<z>
serverHostKey) throws IOException {<z>
)) {<z>
("Need at least one hostname specification");<z>
(serverHostKey == null)) {<z>
;<z>
;<z>
; i++) {<z>
{<z>
.write(',');<z>
writer.write(hostnames[i]);<z>
write(' ');<z>
write(serverHostKeyAlgorithm);<z>
;<z>
write(Base64.encode(serverHostKey));<z>
"\n");<z>
;<z>
;<z>
);<z>
> 0) {<z>
1);<z>
);<z>
last != '\n') {<z>
);<z>
entry).getBytes());<z>
close();<z>
void unmarshal(String json) throws JSONException {<z>
new JSONObject(json);<z>
);<z>
Object fsizeObject = jsonObject.get("fsize");<z>
(fsizeObject instanceof Long) {<z>
)fsizeObject;<z>
else if (fsizeObject instanceof Integer) {<z>
)fsizeObject);<z>
= jsonObject.get("putTime");<z>
(putTimeObject instanceof Long) {<z>
Long)putTimeObject;<z>
(putTimeObject instanceof Integer) {<z>
int)(Integer)putTimeObject);<z>
(String)jsonObject.get("mimeType");<z>
getCrossHessian (<z>
ip,<z>
(ip, tolerance);<z>
, tolerance);<z>
() {<z>
=<z>
;<z>
if (parallels != null) {<z>
;<z>
if (parallelData != null) {<z>
)) {<z>
oldValue = getParamSaved(param);<z>
);<z>
null);<z>
for (final Host h<z>
) {<z>
;<z>
vmsxml != null) {<z>
String savedValue =<z>
.getValue(param);<z>
!= null) {<z>
savedValue;<z>
, oldValue)) {<z>
);<z>
) {<z>
);<z>
;<z>
VMSVirtualDomainInfo.PARALLEL_TABLE);<z>
getParametersFromXML());<z>
throws IOException {<z>
(in);<z>
multiplier = 1;<z>
0x80000000) > 0) {<z>
= (~value) & 0xffffffff;<z>
;<z>
multiplier = -1;<z>
) >> 16;<z>
value & 0xffff);<z>
65536f;<z>
multiplier;<z>
readFrom(StreamInput in) throws IOException {<z>
in);<z>
(in);<z>
);<z>
(size == 0) {<z>
();<z>
{<z>
ArrayList<Segment>(size);<z>
; i < size; i++) {<z>
add(Segment.readSegment(in));<z>
{<z>
createMedNode(this.med);<z>
: this.selectionProviders) {<z>
();<z>
add(Duration d) {<z>
;<z>
(this instanceof InexactDuration || d instanceof InexactDuration) {<z>
(this, p);<z>
else {<z>
return new DurationWithFields(this, p);<z>
final void mT__36() throws RecognitionException {<z>
_type = T__36;<z>
_channel = DEFAULT_TOKEN_CHANNEL;<z>
'>');<z>
_type;<z>
;<z>
{<z>
>();<z>
);<z>
;i<list.length;i++)<z>
;<z>
v.elements();<z>
) {<z>
editedRole = model.getEditedEntity();<z>
));<z>
;<z>
).clear();<z>
.getPermissionSelectionListener().getSelectedElements());<z>
setCategoryId(Integer id)<z>
;<z>
isDirty = true;<z>
public void start() {<z>
playing = true;<z>
= true;<z>
restart();<z>
void processListInit(final IBackend b) {<z>
b == null) {<z>
.call(MODULE_NAME, "process_list_init", "");<z>
(final Exception e) {<z>
ErlLogger.debug(e);<z>
public ModStatic setParms (AstToken tok0) {<z>
ARG_LENGTH] ;<z>
= new AstTokenInterface [TOK_LENGTH] ;<z>
] = tok0 ;<z>
() ;<z>
this ;<z>
)<z>
.callback = callback;<z>
.more = true;<z>
Surface update(String key, Date updatedAt) {<z>
= key;<z>
this.lastUpdatedAt = updatedAt;<z>
this;<z>
BAMFileSpan clone() {<z>
new BAMFileSpan();<z>
Chunk chunk: chunks)<z>
clone());<z>
clone;<z>
definitionId) {<z>
;<z>
);<z>
setPrimaryKey(definitionId);<z>
definition;<z>
Event<UINodeTypeSelector> event) throws Exception {<z>
uiNodeTypeSelector = event.getSource();<z>
);<z>
= "*";<z>
;<z>
);<z>
(false);<z>
.getParent());<z>
(uiPopup);<z>
Integer, Axis> getAxisMap ( Direction direction )<z>
( direction == Direction.X )<z>
xAxisMap;<z>
;<z>
, String>> sections) {<z>
file = new File(fileName);<z>
().mkdirs();<z>
(new FileWriter(file));<z>
: sections.entries()) {<z>
getKey()+"]");<z>
newLine();<z>
entry.getValue());<z>
;<z>
close();<z>
(Exception e) {<z>
e.printStackTrace();<z>
newAccumulator, NotificationChain msgs) {<z>
Constant oldAccumulator = accumulator;<z>
= newAccumulator;<z>
eNotificationRequired()) {<z>
, newAccumulator);<z>
notification; else msgs.add(notification);<z>
msgs;<z>
) throws IOException {<z>
);<z>
;<z>
version = readUint16();<z>
);<z>
;<z>
= readUint32();<z>
) throws Exception {<z>
.stop();<z>
doGracefulStop();<z>
;<z>
(Object other) {<z>
if (this == other)<z>
return true;<z>
other instanceof Certificate))<z>
;<z>
getEncoded();<z>
();<z>
)<z>
false;<z>
; i++)<z>
] != otherCert[i])<z>
;<z>
return true;<z>
} catch (CertificateException e) {<z>
false;<z>
buf, int offset )<z>
.debug )<z>
err.println<z>
this.currRecIdx<z>
.currBlkIdx );<z>
( this.outStream == null )<z>
new IOException<z>
);<z>
)<z>
throw new IOException<z>
.length<z>
offset<z>
);<z>
recsPerBlock )<z>
();<z>
.arraycopy(<z>
, offset,<z>
,<z>
recordSize );<z>
++;<z>
(final BlockFormEvent event) {<z>
);<z>
getLocation();<z>
ENVIRONMENT)) {<z>
(), PLUGIN));<z>
approveButtonText)<z>
throws HeadlessException {<z>
(dialog != null) {<z>
ERROR_OPTION;<z>
if(approveButtonText != null) {<z>
(approveButtonText);<z>
CUSTOM_DIALOG);<z>
createDialog(parent);<z>
{<z>
e) {<z>
;<z>
);<z>
= ERROR_OPTION;<z>
;<z>
show();<z>
("JFileChooserDialogIsClosingProperty", dialog, null);<z>
();<z>
);<z>
;<z>
;<z>
private void createSchedulingRequirementsTab() {<z>
TabItem tab;<z>
.getName()<z>
+ ":createSchedulingRequirementsTab entered.");<z>
new TabItem(tabbedPane, SWT.NONE);<z>
tabbedPane, SWT.NONE);<z>
);<z>
);<z>
schedulingRequirementsTabPane.setLayout(createTabPaneLayout());<z>
(schedulingRequirementsTabPane, LL_PTP_REQUIREMENTS);<z>
().getName()<z>
);<z>
void showPrefs() {<z>
();<z>
.class);<z>
);<z>
preferencesHint) {<z>
.createShape();<z>
createBounds());<z>
VISUAL_ID));<z>
containerView, node, index, persisted);<z>
;<z>
IPreferenceStore)preferencesHint.getPreferenceStore();<z>
.initForegroundFromPrefs(node, prefStore, "Device");<z>
(node, prefStore, "Device");<z>
.initBackgroundFromPrefs(node, prefStore, "Device");<z>
getType(DeviceCompositeNameEditPartCN.VISUAL_ID));<z>
, true, false, false);<z>
initCompartmentsStatusFromPrefs(node, prefStore, "Device");<z>
;<z>
.protobuf.Message other) {<z>
.AdminProtos.GetStoreFileRequest) {<z>
other);<z>
else {<z>
(other);<z>
;<z>
int compareObjects(Object a, Object b) {<z>
(a instanceof Vector) {<z>
b);<z>
) {<z>
, (Hashtable)b);<z>
{<z>
).compareTo(b);<z>
processJsMessage(<z>
JsMessage message, JsMessageDefinition definition) {<z>
msgNode = definition.getMessageNode();<z>
message);<z>
msgNode);<z>
().replaceChild(msgNode, newValue);<z>
reportCodeChange();<z>
e) {<z>
getNode(),<z>
));<z>
() {<z>
RefreshImageFromUrlTask.class);<z>
private String orderByDirectionToStr(int direction) {<z>
{<z>
return "ASC";<z>
(1):<z>
;<z>
) {<z>
Scenario scenario = new Scenario();<z>
scenario.setId(Util.SCENARIO_ID);<z>
(Util.SCENARIO_NAME);<z>
scenario.setSchemaVersion(Util.SCENARIO_SCHEMA_VERSION);<z>
new Network();<z>
;<z>
.NETWORK_NAME);<z>
(Util.NETWORK_ML_CONTROL);<z>
);<z>
(Util.NETWORK_DT);<z>
scenario.setNetwork(network);<z>
;<z>
) {<z>
.findRecipient(id));<z>
;<z>
;<z>
public TaskScheduleContentProvider(TaskListView taskListView) {<z>
taskListView);<z>
this.taskActivityManager = TasksUiPlugin.getTaskActivityManager();<z>
this);<z>
);<z>
;<z>
.getTime();<z>
= new Unscheduled();<z>
);<z>
.getTimeInMillis() - 1);<z>
Incoming();<z>
= TaskActivityUtil.getCalendar();<z>
2);<z>
new Outgoing();<z>
);<z>
+ 2);<z>
();<z>
) {<z>
)) {<z>
(convertAlignment(alignment));<z>
String, String>> getImportedStrAndComments() {<z>
;<z>
); i++) {<z>
(i)));<z>
lst;<z>
) throws Exception {<z>
= getDatasetNames(this.filename, mon);<z>
, mon);<z>
(filename, allDataSetNames, mon);<z>
final private boolean jj_3_154() {<z>
Token xsp;<z>
jj_3_152()) return true;<z>
) {<z>
xsp = jj_scanpos;<z>
xsp; break; }<z>
false;<z>
abortAttack)<z>
] items = null;<z>
.isEquipped();<z>
getInventoryLimit();<z>
null;<z>
) & L2Item.SLOT_MULTI_ALLWEAPON) != 0)<z>
.getPaperdollItem(Inventory.PAPERDOLL_RHAND);<z>
);<z>
)<z>
.getEnchantLevel() > 0)<z>
);<z>
getEnchantLevel());<z>
;<z>
;<z>
.addItemName(item);<z>
sm);<z>
= getInventory().getSlotFromItem(item);<z>
(slot == L2Item.SLOT_DECO)<z>
));<z>
);<z>
).equipItemAndRecord(item);<z>
item.isEquipped())<z>
if (item.getEnchantLevel() > 0)<z>
getSystemMessage(SystemMessageId.S1_S2_EQUIPPED);<z>
.addNumber(item.getEnchantLevel());<z>
);<z>
(SystemMessageId.S1_EQUIPPED);<z>
.addItemName(item);<z>
sm);<z>
item.decreaseMana(false);<z>
!= 0)<z>
, false);<z>
(SystemMessageId.CANNOT_EQUIP_ITEM_DUE_TO_BAD_CONDITION);<z>
;<z>
;<z>
;<z>
(Arrays.asList(items));<z>
;<z>
) abortAttack();<z>
if (getInventoryLimit() != oldInvLimit)<z>
new ExStorageMaxCount(this));<z>
.awt.event.ComponentEvent evt) {<z>
if (this.isVisible()) {<z>
setColumnWidths();<z>
displayPromptText();<z>
config, int[] attrib_list) {<z>
display, config, attrib_list);<z>
eglSurfaceId == 0) {<z>
.EGL_NO_SURFACE;<z>
;<z>
, Object data){<z>
.type = type;<z>
message;<z>
;<z>
Event evt) {<z>
);<z>
(receiver != null) {<z>
evt.getType()) {<z>
:<z>
getArg();<z>
getHeader(MAGIC_HEADER) != null) {<z>
.getSrc())))<z>
.receive(msg);<z>
{<z>
(msg.getSrc())))<z>
receive(msg);<z>
:<z>
View) evt.getArg());<z>
SUSPECT:<z>
) evt.getArg());<z>
.GET_STATE_OK:<z>
= (StateTransferResult) evt.getArg();<z>
);<z>
!= null) {<z>
= new ByteArrayInputStream(state);<z>
);<z>
ex) {<z>
);<z>
case Event.STATE_TRANSFER_INPUTSTREAM:<z>
.getArg();<z>
(is != null) {<z>
receiver.setState(is);<z>
Throwable t) {<z>
("Error while setting state", t);<z>
("failed calling setState() in state requester", t);<z>
.GET_APPLSTATE:<z>
= null;<z>
receiver != null) {<z>
output = new ByteArrayOutputStream(1024);<z>
getState(output);<z>
;<z>
{<z>
error("Error while getting state", e);<z>
": failed getting state from application", e);<z>
, 0L, tmpState);<z>
case Event.BLOCK:<z>
);<z>
if (dataReceiver != null)<z>
;<z>
;<z>
.UNBLOCK:<z>
();<z>
dataReceiver != null)<z>
unblock();<z>
null;<z>
<Vertex> list)<z>
i++)<z>
pathweight, i+1);<z>
NullCerts() throws Exception {<z>
separateServerThread) {<z>
true);<z>
;<z>
} else {<z>
(true);<z>
startServer(false);<z>
{<z>
.join();<z>
} else {<z>
;<z>
null) {<z>
);<z>
;<z>
clientException != null) {<z>
.print("Client Exception:");<z>
;<z>
void onCancelled()<z>
e(TAG, "onCancelled.");<z>
= getListener();<z>
listener != null)<z>
onCancelled();<z>
String username,String password) {<z>
,username,password);<z>
;<z>
;<z>
{<z>
myOuterRulesIds == null) {<z>
>>();<z>
{<z>
(id);<z>
outerInfo.getRuleId()));<z>
{<z>
if(caller == getInitOptNoTransform()) {<z>
return isDAbefore(v);<z>
, caller, v);<z>
Composite parent ) {<z>
.NONE);<z>
GridLayout(2, false);<z>
.setLayout(layout);<z>
new GridData();<z>
, SWT.NONE);<z>
setText(Messages.CRSChooser_keywordsLabel);<z>
.setLayoutData(gridData);<z>
.setToolTipText(Messages.CRSChooser_tooltip);<z>
SWT.NONE, true, false);<z>
.SINGLE | SWT.BORDER);<z>
);<z>
.CRSChooser_tooltip);<z>
, SWT.NONE, true, false);<z>
.horizontalSpan = 2;<z>
SWT.NONE);<z>
setText(Messages.CRSChooser_label_crsWKT);<z>
;<z>
FILL, true, true);<z>
= 2;<z>
H_SCROLL);<z>
!= null)<z>
setText(selectedCRS.toWKT());<z>
(gridData);<z>
ModifyListener(){<z>
public void modifyText( ModifyEvent e ) {<z>
(!keywordsText.isEnabled())<z>
setEnabled(true);<z>
});<z>
setFocus();<z>
composite;<z>
,<z>
) {<z>
return false;<z>
CREATOR = new Creator<RunningTaskInfo>() {<z>
createFromParcel(Parcel source) {<z>
RunningTaskInfo(source);<z>
public RunningTaskInfo[] newArray(int size) {<z>
;<z>
e) {<z>
final int button = e.getButton();<z>
button == MouseEvent.BUTTON1){<z>
== null){<z>
), false));<z>
BUTTON3 && feature != null){<z>
;<z>
newGeom = dialogDecoration.clipboardPanel.getGeometry();<z>
{<z>
, false);<z>
);<z>
public void actionPerformed(ActionEvent e) {<z>
;<z>
e.getActionCommand();<z>
)) {<z>
dispose();<z>
("Save to text file")) {<z>
);<z>
catch (Exception ex) {<z>
,<z>
JOptionPane.ERROR_MESSAGE);<z>
if (cmd.equals("Save changes")) {<z>
updateValueInFile();<z>
) {<z>
print();<z>
project, List<ModelProblem> problems,<z>
)<z>
.projectId =<z>
':' + project.getVersion()<z>
: "";<z>
getFile() : null;<z>
= project;<z>
= problems;<z>
this.dependencyResolutionResult = dependencyResolutionResult;<z>
static void updateIndexDoc(final IndexDocument d) throws IOException<z>
();<z>
d.toDocument());<z>
();<z>
d.close();<z>
public CodeSearchWidget(CodeSearchOracle oracle,<z>
final Commands commands)<z>
,<z>
,<z>
DefaultSuggestionDisplay());<z>
;<z>
= CodeSearchResources.INSTANCE;<z>
));<z>
().codeSearchWidget());<z>
getSpinnerTextBorderInsets(int fontSize) {<z>
;<z>
, textInsets.left,<z>
);<z>
private void generateLicence(PrintWriter out) {<z>
);<z>
(" * Licensed to the Apache Software Foundation (ASF) under one or more");<z>
" * contributor license agreements. See the NOTICE file distributed with");<z>
out.println(" * this work for additional information regarding copyright ownership.");<z>
(" * The ASF licenses this file to You under the Apache License, Version 2.0");<z>
.println(" * (the \"License\"); you may not use this file except in compliance with");<z>
;<z>
out.println(" *");<z>
;<z>
" *");<z>
);<z>
out.println(" * distributed under the License is distributed on an \"AS IS\" BASIS,");<z>
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.");<z>
println(" * See the License for the specific language governing permissions and");<z>
;<z>
(" */");<z>
byte[] screenVideoData) throws FlvEncodeException {<z>
byte[] flvData;<z>
encodeFlvTag(screenVideoData);<z>
} catch (IOException e) {<z>
;<z>
;<z>
()<z>
getTestId(), "project", "1.0" );<z>
failDownload( gav );<z>
File( localStorageDir, "nexus977tasks/1/nexus977tasks/project/1.0/project-1.0.jar" );<z>
().mkdirs();<z>
;<z>
failDownload( gav );<z>
new ScheduledServicePropertyResource();<z>
repo.setKey( "repositoryId" );<z>
.setValue( "g4" );<z>
, repo );<z>
;<z>
(<z>
NhinTargetSystemType targetSystem,<z>
) {<z>
;<z>
int[] value, boolean override) {<z>
;<z>
)) {<z>
, true), value, override);<z>
public void onDrawFrame(GL10 gl) {<z>
.GL_DITHER);<z>
GL10.GL_TEXTURE_ENV, GL10.GL_TEXTURE_ENV_MODE,<z>
;<z>
| GL10.GL_DEPTH_BUFFER_BIT);<z>
.GL_DEPTH_TEST);<z>
;<z>
GL10.GL_MODELVIEW);<z>
();<z>
0f, 1.0f, 0.0f);<z>
;<z>
.glEnableClientState(GL10.GL_TEXTURE_COORD_ARRAY);<z>
;<z>
, mTextureID);<z>
(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_WRAP_S,<z>
;<z>
GL10.GL_TEXTURE_WRAP_T,<z>
GL10.GL_REPEAT);<z>
uptimeMillis() % 4000L;<z>
(double) time) / 4000;<z>
2 * Math.PI);<z>
;<z>
.GL_MATRIX_PALETTE_OES);<z>
glMatrixMode(GL11Ext.GL_MATRIX_PALETTE_OES);<z>
gl;<z>
(0);<z>
gl11Ext.glLoadPaletteFromModelViewMatrixOES();<z>
0, 0, 1.0f);<z>
gl11Ext.glCurrentPaletteMatrixOES(1);<z>
gl11Ext.glLoadPaletteFromModelViewMatrixOES();<z>
;<z>
glDisable(GL11Ext.GL_MATRIX_PALETTE_OES);<z>
private DavUserPrincipal memberToResource(User user)<z>
{<z>
));<z>
.<z>
,<z>
path);<z>
, getResourceFactory());<z>
int convertMonthlyNameToMonthNumber(String monthName) {<z>
i < shortMonths.length; i++) {<z>
))<z>
;<z>
-1;<z>
int value, String name, String literal) {<z>
= value;<z>
;<z>
.literal = literal;<z>
Cluster<T>> clusters) {<z>
maxVariance = Double.NEGATIVE_INFINITY;<z>
;<z>
cluster : clusters) {<z>
)) {<z>
T center = cluster.getCenter();<z>
;<z>
{<z>
(center));<z>
();<z>
variance > maxVariance) {<z>
= variance;<z>
cluster;<z>
) {<z>
LocalizedFormats.EMPTY_CLUSTER_IN_K_MEANS);<z>
();<z>
()));<z>
get(String hashCode) {<z>
"+mediaType"))<z>
return MEDIA_TYPE_ASC;<z>
equals("-mediaType"))<z>
return MEDIA_TYPE_DESC;<z>
(hashCode.equals("+plays"))<z>
return PLAYS_ASC;<z>
)<z>
;<z>
hashCode.equals("+views"))<z>
;<z>
hashCode.equals("-views"))<z>
;<z>
equals("+duration"))<z>
return DURATION_ASC;<z>
)<z>
return DURATION_DESC;<z>
equals("+msDuration"))<z>
MS_DURATION_ASC;<z>
equals("-msDuration"))<z>
MS_DURATION_DESC;<z>
"+name"))<z>
;<z>
if (hashCode.equals("-name"))<z>
;<z>
.equals("+moderationCount"))<z>
;<z>
equals("-moderationCount"))<z>
MODERATION_COUNT_DESC;<z>
if (hashCode.equals("+createdAt"))<z>
return CREATED_AT_ASC;<z>
("-createdAt"))<z>
return CREATED_AT_DESC;<z>
"+updatedAt"))<z>
;<z>
(hashCode.equals("-updatedAt"))<z>
return UPDATED_AT_DESC;<z>
.equals("+rank"))<z>
;<z>
hashCode.equals("-rank"))<z>
;<z>
;<z>
nodes,<z>
MultiValuesMap<String, FrameworkSupportNode> groups) {<z>
));<z>
node == null) {<z>
;<z>
;<z>
(underlyingTypeId != null) {<z>
underlyingTypeId, myProviders);<z>
{<z>
underlyingTypeId);<z>
;<z>
;<z>
);<z>
;<z>
groupId = provider instanceof OldFrameworkSupportProviderWrapper<z>
null;<z>
groups.put(groupId, node);<z>
;<z>
String line) {<z>
"\\[[^\\[]*\\]";<z>
;<z>
m1 = p1.matcher(line);<z>
find()) {<z>
wordInfo = new WordInfo();<z>
();<z>
wordInfo.setWord(word);<z>
- 1);<z>
urlAndPos.split("#");<z>
trim();<z>
[1].trim());<z>
UrlInfo();<z>
.addAppearance(position);<z>
',');<z>
rTemp;<z>
index == -1) {<z>
m1.end());<z>
}else {<z>
(m1.end(), index);<z>
rInfo = rTemp.split(":");<z>
(rInfo[1]);<z>
;<z>
.setTf(tf);<z>
urlInfo.setIdf(idf);<z>
(url, urlInfo);<z>
1) {<z>
line = "";<z>
else {<z>
(index + 1);<z>
);<z>
m1.find()) {<z>
end() - 1);<z>
"#");<z>
= temp[0].trim();<z>
.trim());<z>
containsKey(url)) {<z>
url);<z>
.addAppearance(position);<z>
;<z>
{<z>
urlInfo = new UrlInfo();<z>
;<z>
line.indexOf(',');<z>
{<z>
m1.end());<z>
}else {<z>
, index);<z>
rInfo = rTemp.split(":");<z>
[1]);<z>
2]);<z>
;<z>
.setIdf(idf);<z>
(url, urlInfo);<z>
(index < 0) break;<z>
1);<z>
m1 = p1.matcher(line);<z>
);<z>
, Object arg1)<z>
exc = new DATA_CONVERSION(FRAGMENT_SIZE_DIV, cs);<z>
)<z>
t);<z>
)<z>
parameters = new Object[2];<z>
;<z>
1] = arg1;<z>
, parameters, ORBUtilSystemException.class, exc);<z>
;<z>
)<z>
( message );<z>
) ).append( LS );<z>
static void addToSerializePool(c_int re) {<z>
();<z>
{<z>
;<z>
);<z>
{<z>
re.allAttribs) {<z>
) {<z>
);<z>
else {<z>
);<z>
value), false);<z>
action) {<z>
final IWorkbenchPartSite site = targetPartSite();<z>
.getSelectionProvider().getSelection();<z>
;<z>
languages = LanguageFactory.supportedLanguages;<z>
String[] formats = {<z>
CPDCheckDialog(shell, languages, formats);<z>
sel instanceof IStructuredSelection) {<z>
(StructuredSelection) sel;<z>
;<z>
.hasNext()) {<z>
;<z>
{<z>
= (IAdaptable) obj;<z>
;<z>
{<z>
.warn("The selected object cannot adapt to a project");<z>
log.debug(" -> selected object : " + obj);<z>
} else {<z>
.detectCutAndPaste(project, dialog);<z>
{<z>
.warn("The selected object is not adaptable");<z>
" -> selected object : " + obj);<z>
void removeItem(final String absPath) {<z>
executeCallback(new VoidCallback() {<z>
throws Exception {<z>
().removeItem(absPath);<z>
});<z>
] annotations, Class... classes) throws JAXBException<z>
);<z>
context = new FastinfoSetContext(classes);<z>
return new JAXBContextWrapper(context, config);<z>
execute(ExecutionEvent event) throws ExecutionException {<z>
getActiveWorkbenchWindowChecked(event);<z>
(<z>
(),<z>
"$message$");<z>
return null;<z>
(EntityDeathEvent event) {<z>
Entity entity = event.getEntity();<z>
) {<z>
);<z>
());<z>
args)<z>
process(client, args);<z>
checksOk) {<z>
return false;<z>
0);<z>
, 1);<z>
);<z>
target == null) {<z>
false;<z>
(client, message);<z>
target.sendLine(String.format("SAIDPRIVATE %s %s",<z>
getName(), message));<z>
args, 0));<z>
return true;<z>
RecognitionException {<z>
{<z>
());<z>
(FOLLOW_ruleJvmUpperBoundAnded_in_entryRuleJvmUpperBoundAnded4241);<z>
ruleJvmUpperBoundAnded();<z>
._fsp--;<z>
.failed) return ;<z>
if ( state.backtracking==0 ) {<z>
(grammarAccess.getJvmUpperBoundAndedRule());<z>
return ;<z>
re) {<z>
);<z>
re);<z>
colorString)<z>
;<z>
if (c == null)<z>
Color.BLACK;<z>
;<z>
('#');<z>
;<z>
hexString(c.getGreen()));<z>
));<z>
sb.toString();<z>
newState)<z>
IOException {<z>
SystemBackupAgent.this,<z>
{ WALLPAPER_IMAGE, WALLPAPER_INFO },<z>
, WALLPAPER_INFO_KEY} ));<z>
"system_files", new WallpaperBackupHelper(SystemBackupAgent.this,<z>
[] { WALLPAPER_IMAGE },<z>
));<z>
, appVersionCode, newState);<z>
wallpaper = (WallpaperManagerService)ServiceManager.getService(<z>
.WALLPAPER_SERVICE);<z>
wallpaper.settingsRestored();<z>
IOException ex) {<z>
(TAG, "restore failed", ex);<z>
.delete();<z>
).delete();<z>
void mT__46() throws RecognitionException {<z>
T__46;<z>
DEFAULT_TOKEN_CHANNEL;<z>
match("or");<z>
.type = _type;<z>
;<z>
public long readLongElement(long startTag) throws ContentDecodingException {<z>
strVal = readUTF8Element(startTag);<z>
return Long.valueOf(strVal);<z>
} catch (NumberFormatException e) {<z>
+ startTag + ": " + strVal, e);<z>
final String seed) {<z>
Pattern p = Pattern.compile("(\\d*):(\\d*):(\\d*):(\\d*)");<z>
.matcher(seed);<z>
if (!m.matches()) {<z>
);<z>
);<z>
;<z>
]);<z>
splitSeed[2]);<z>
BigInteger(splitSeed[3]);<z>
);<z>
) {<z>
this.stereotypeQualifiedName = qualifiedName;<z>
= new ArrayList<PropertyRepresentation>();<z>
.setUMLStereotype(null);<z>
JSONObject getFields(final String resourceId) {<z>
) == 0<z>
{<z>
.info("Wrong resource id");<z>
null;<z>
resource = get(BIGML_URL + resourceId);<z>
(JSONObject) resource.get("object");<z>
(obj == null) {<z>
.get("error");<z>
resource.get("code") == HTTP_OK) {<z>
(MODEL_RE)) {<z>
.get("model");<z>
JSONObject) model.get("fields");<z>
else {<z>
get("fields");<z>
return null;<z>
String toolTipText) {<z>
0, 0));<z>
;<z>
;<z>
;<z>
;<z>
,<z>
;<z>
null) {<z>
);<z>
);<z>
() {<z>
public void actionPerformed(ActionEvent e) {<z>
{<z>
onCloseRequest();<z>
});<z>
List<MediaLinkType> getMediaLink() {<z>
null) {<z>
ArrayList<MediaLinkType>();<z>
.mediaLink;<z>
NodeTraversal t, Node n, Node parent) {<z>
) == Token.GETPROP) {<z>
connect(externNode, firstModule,<z>
), PROPERTY));<z>
ControlWrapper tx) throws SystemException<z>
);<z>
+name+" rollback");<z>
name) {<z>
appBase();<z>
= configBase();<z>
String baseName = getConfigFile(name);<z>
getDocBase(name);<z>
+ ".xml");<z>
())<z>
;<z>
;<z>
())<z>
;<z>
);<z>
())<z>
deployDirectory(name, dir, docBase);<z>
( Shell shell ) {<z>
new NewServerAction(shell, getServerManager());<z>
);<z>
action.run();<z>
{<z>
new XQuery(<z>
ctx);<z>
);<z>
namespace("fs", "http://www.example.com/filesystem");<z>
result(query);<z>
result = res;<z>
)<z>
) {<z>
"~");<z>
UnsupportedEncodingException ex) {<z>
new RuntimeException(ex);<z>
, byte[] abyIdentifier)<z>
(sOwnerIdentifier.length() == 0))<z>
);<z>
= sOwnerIdentifier;<z>
(abyIdentifier.length > 64))<z>
throw new ID3Exception("The identifier be a non-null byte array of length 0-64 bytes in UFID frame.");<z>
= abyIdentifier;<z>
throws SQLException<z>
);<z>
) );<z>
columnWasNull = wasNull();<z>
)<z>
; }<z>
return false; }<z>
; }<z>
; }<z>
}<z>
).intValue();<z>
( operator )<z>
== constant );<z>
constant );<z>
( column > constant );<z>
return ( column <= constant );<z>
return ( column < constant );<z>
SQLException( "Unknown comparison operator: " + operator );<z>
) {<z>
= b;<z>
id());<z>
selector("distributionApplyButtonClicked:"));<z>
public FlexoCSS getCalculatedCssSheet() {<z>
null) {<z>
) {<z>
().getCalculatedCssSheet();<z>
} else {<z>
return getProject().getCssSheet();<z>
{<z>
cssSheet;<z>
final QualifiedName resolvedName) {<z>
null) {<z>
;<z>
resolvedName;<z>
public boolean relative(int rows) throws SQLException {<z>
(rows);<z>
e) {<z>
e.getMessage());<z>
mode) {<z>
) {<z>
, editingContext.getEObject(), mode);<z>
, mode);<z>
ByteBuffer pixels) {<z>
);<z>
= caps.glMultiTexSubImage1DEXT;<z>
checkFunctionAddress(function_pointer);<z>
caps);<z>
width, 1, 1));<z>
pixels), function_pointer);<z>
){<z>
.createNamedQuery("SalarioBasico.findActivos", SalarioBasico.class)<z>
.setParameter("fecha", fecha)<z>
;<z>
, String src,<z>
long offset, long length) throws IOException {<z>
(isPermissionEnabled) {<z>
src, FsAction.READ);<z>
true);<z>
) {<z>
= host2DataNodeMap.getDatanodeByHost(<z>
;<z>
LocatedBlock b : blocks.getLocatedBlocks()) {<z>
b.getLocations());<z>
return blocks;<z>
(ObservableConversationThread thread) {<z>
for (Listener l : listeners) {<z>
;<z>
Context context,<z>
IccSmsInterfaceManager iccSmsInt) {<z>
context == null || fh == null<z>
ic == null || iccSmsInt == null) {<z>
new NullPointerException(<z>
;<z>
= ci;<z>
mContext = context;<z>
iccSmsInt;<z>
, fh);<z>
);<z>
);<z>
, MSG_ID_EVENT_NOTIFY, null);<z>
(this, MSG_ID_CALL_SETUP, null);<z>
, MSG_ID_SEND_SMS_RESULT, null);<z>
mIccRecords = ir;<z>
null);<z>
);<z>
;<z>
(this, MSG_ID_ICC_RECORDS_LOADED, null);<z>
isStkAppInstalled();<z>
"Running CAT service. STK app installed:" + mStkAppInstalled);<z>
public int hashCode() {<z>
;<z>
.quantityType.hashCode() : 0);<z>
.hashCode() : 0);<z>
.hashCode() : 0);<z>
return hash;<z>
name,<z>
field) {<z>
;<z>
.getCurrentLocale().isRTL()) {<z>
(row, 1, name);<z>
.setWidget(row, 0, field);<z>
).header());<z>
} else {<z>
setText(row, 0, name);<z>
field);<z>
.header());<z>
NodeUtil> getNodes(String namePrefix) {<z>
Lists.newArrayList();<z>
getChildren()) {<z>
).startsWith(namePrefix)) {<z>
child, mapper));<z>
nodes;<z>
throws InterruptedException {<z>
new NullPointerException();<z>
.lock();<z>
o))<z>
await();<z>
} finally {<z>
;<z>
void endVerbatim(XhtmlHandler.TagStack.TagContext context)<z>
().endDocument();<z>
PreserverListener) context<z>
);<z>
).onVerbatim(preserverListener.toString(),<z>
);<z>
property) {<z>
);<z>
(MissingPropertyException e) {<z>
);<z>
(Locator locator)<z>
{<z>
setDocumentLocator(locator);<z>
ClsAttributeTable readAttributes(BytePointer ptr) throws ClsFormatException {<z>
);<z>
attributes = new ClsAttributeTable();<z>
0) {<z>
attrName = readAttributeName(ptr);<z>
("Exceptions".equals(attrName)) {<z>
;<z>
"Signature".equals(attrName)) {<z>
);<z>
)) {<z>
attributes.sourceFile = readSourceFileAttribute(ptr);<z>
.equals(attrName)){<z>
;<z>
{<z>
readAnnotations(ptr);<z>
.equals(attrName)) {<z>
runtimeInvisibleAnnotations = readAnnotations(ptr);<z>
) {<z>
runtimeVisibleParameterAnnotations = readParameterAnnotations(ptr);<z>
("RuntimeInvisibleParameterAnnotations".equals(attrName)) {<z>
readParameterAnnotations(ptr);<z>
{<z>
bytes, ptr.offset + 6));<z>
(ptr);<z>
;<z>
DepthXMLStreamReader reader, QName endTag) {<z>
getDepth();<z>
);<z>
)) {<z>
.getName().equals(endTag)<z>
) == depth + 1) {<z>
return true;<z>
();<z>
false;<z>
(XMLStreamException e) {<z>
new RuntimeException("Couldn't parse stream.", e);<z>
accounting) {<z>
= getDatabase().getCurrentSession();<z>
;<z>
.getAttribute("transactionID"));<z>
row.getAttribute("quantity"));<z>
("typeName");<z>
);<z>
;<z>
"clientID"));<z>
("clientName");<z>
));<z>
("stationName");<z>
.getAttribute("transactionType"));<z>
;<z>
apiKey, stationId);<z>
getFactionStanding(apiKey, stationId);<z>
);<z>
double marketTax = 0.0;<z>
) {<z>
0.0005 * accounting;<z>
, transactionID);<z>
(transaction == null) {<z>
price;<z>
(isBuy) {<z>
();<z>
WalletTransaction();<z>
setTransactionId(transactionID);<z>
;<z>
(apiKey.getCharacterId());<z>
quantity);<z>
;<z>
.setTypeName(typeName);<z>
(typeId);<z>
);<z>
;<z>
(clientId);<z>
transaction.setClientName(clientName);<z>
(stationId);<z>
setStationName(stationName);<z>
);<z>
(transaction);<z>
true;<z>
catch (Exception e) {<z>
e);<z>
.setVisible(true);<z>
;<z>
] extractObjectClasses() {<z>
iterator();<z>
;<z>
.hasNext()) {<z>
.next();<z>
extractObjectClasses();<z>
objectClasses != null) {<z>
(classNames == null) {<z>
new ArrayList();<z>
{<z>
.add(objectClasses[i]);<z>
null) {<z>
return null;<z>
[classNames.size()];<z>
.toArray(returnValue);<z>
;<z>
protected List remove(int index) {<z>
);<z>
;<z>
= new ArrayList();<z>
, delete);<z>
{<z>
it = delete.iterator();<z>
)) {<z>
.next();<z>
_entries;<z>
{<z>
) {<z>
) + "WHERE ROWID=?";<z>
selectByRowId;<z>
SNode node) {<z>
);<z>
.isNotEmpty()) {<z>
append("<");<z>
()) {<z>
"parameter", true)) {<z>
.getSNode());<z>
true)).last()) {<z>
;<z>
append(">");<z>
par1GuiScreen)<z>
screenTitle = "Select world";<z>
;<z>
String[3];<z>
par1GuiScreen;<z>
(Netcdf netcdf, QuantityDB quantityDB, boolean charToText)<z>
;<z>
quantityDB = quantityDB;<z>
= charToText;<z>
new WeakHashMap();<z>
();<z>
;<z>
varToTextType = new WeakHashMap();<z>
= new WeakHashMap();<z>
;<z>
;<z>
, NSView controlView) {<z>
NSRect result = new NSRect();<z>
;<z>
;<z>
private void handleAccessibilityEnabledSettingChangedLocked() {<z>
(<z>
mContext.getContentResolver(),<z>
, 0) == 1;<z>
) {<z>
manageServicesLocked();<z>
{<z>
);<z>
();<z>
sendStateToClientsLocked();<z>
) {<z>
: ExecutionModeType.values()) {<z>
(v)) {<z>
return c;<z>
new IllegalArgumentException(v);<z>
twoLargestBonesRetainOrderDetectedEdges(Vector<DetectedEdge> edges){<z>
;<z>
){<z>
));<z>
.sort(temp3);<z>
;<z>
] twoLongest = new int[2];<z>
()-1).area){<z>
;<z>
] = counter;<z>
0;<z>
() > 1){<z>
[0]){<z>
++counter;<z>
] = counter;<z>
} else {<z>
1] = 0;<z>
twoLongest);<z>
return twoLongest;<z>
component ){<z>
.addFocusListener( focusListener );<z>
){<z>
component;<z>
( containerListener );<z>
); i<n; i++ ){<z>
);<z>
(Context c)<z>
(c);<z>
);<z>
(0))<z>
);<z>
);<z>
] getWorkingCopies(IModelElement element) {<z>
instanceof IMember) {<z>
);<z>
cu.isWorkingCopy()) {<z>
[] copies = getWorkingCopies();<z>
? 0 : copies.length;<z>
if (length > 0) {<z>
+ 1];<z>
0, newWorkingCopies, 0, length);<z>
= cu;<z>
return newWorkingCopies;<z>
new ISourceModule[] { cu };<z>
getWorkingCopies();<z>
public void autoComplete() {<z>
this.xmlPane.getDocument();<z>
xmlPane.getCaretPosition();<z>
);<z>
int openindex = text.lastIndexOf('<');<z>
closeindex = text.lastIndexOf('>');<z>
(openindex > closeindex) {<z>
text.substring(openindex);<z>
: null;<z>
trimmedText = text.trim();<z>
.context = TAG_CONTEXT;<z>
() > 0) {<z>
) );<z>
(quoteIndex > 0) {<z>
"=");<z>
()) ) {<z>
"\"", eqIndex);<z>
{<z>
);<z>
quoteIndex) {<z>
;<z>
;<z>
String attName = getIdentifierFromEnd(trimmedText);<z>
&& attName.length() > 0) {<z>
;<z>
toLowerCase().trim() );<z>
.context != ATTRIBUTE_VALUE_CONTEXT) {<z>
;<z>
containWhitespaces(text) ) {<z>
ATTRIBUTE_CONTEXT;<z>
text);<z>
defineAttributesMenu(elementName, identifier);<z>
;<z>
} else {<z>
context = TAG_CONTEXT;<z>
defineTagsMenu(identifier);<z>
1;<z>
{<z>
context = TAG_CONTEXT;<z>
"");<z>
.prefixLength = 0;<z>
);<z>
() > 0) {<z>
.removeAll();<z>
);<z>
list);<z>
add(scrollPane);<z>
);<z>
.grabFocus();<z>
;<z>
} catch (BadLocationException e) {<z>
);<z>
final boolean useClientCacheIfAvailable)<z>
()<z>
public void onSuccess(final PersonModelView response)<z>
GotPersonalInformationResponseEvent(response));<z>
}, useClientCacheIfAvailable);<z>
flushDb() {<z>
jredis.flushdb();<z>
Exception ex) {<z>
);<z>
) throws RecognitionException {<z>
keepStackSize();<z>
state.backtracking==0 ) {<z>
().getTypeJvmTypeReferenceParserRuleCall_1_1_0());<z>
);<z>
;<z>
state._fsp--;<z>
state.failed) return ;<z>
{<z>
.getTypeJvmTypeReferenceParserRuleCall_1_1_0());<z>
catch (RecognitionException re) {<z>
reportError(re);<z>
re);<z>
restoreStackSize(stackSize);<z>
{<z>
= new Container<ICPPASTCompositeTypeSpecifier>();<z>
.accept(<z>
) {<z>
true;<z>
) {<z>
if (declSpec instanceof ICPPASTCompositeTypeSpecifier) {<z>
.setObject((ICPPASTCompositeTypeSpecifier) declSpec);<z>
return PROCESS_ABORT;<z>
super.visit(declSpec);<z>
);<z>
getObject();<z>
abortLevel, CategorizedProblem problem) {<z>
abortLevel) {<z>
:<z>
);<z>
case AbortCompilationUnit :<z>
.compilationResult, problem);<z>
:<z>
AbortMethod(this.compilationResult, problem);<z>
;<z>
) {<z>
null) {<z>
BasicAttribute>();<z>
Date creationDate = getCreationDate();<z>
) {<z>
new BasicAttribute<z>
));<z>
.addElement(new BasicAttribute<z>
ALTERNATE_CREATION_DATE, creationDate));<z>
getLastModifiedDate();<z>
{<z>
.addElement(new BasicAttribute<z>
(LAST_MODIFIED, lastModifiedDate));<z>
new BasicAttribute<z>
));<z>
;<z>
name != null) {<z>
name));<z>
();<z>
{<z>
BasicAttribute(TYPE, resourceType));<z>
ALTERNATE_TYPE, resourceType));<z>
();<z>
0) {<z>
contentLength);<z>
new BasicAttribute(CONTENT_LENGTH, contentLengthLong));<z>
(new BasicAttribute(ALTERNATE_CONTENT_LENGTH, contentLengthLong));<z>
String etag = getETag();<z>
if (etag != null) {<z>
new BasicAttribute(ETAG, etag));<z>
));<z>
;<z>
} else {<z>
return attributes.getAll();<z>
node) {<z>
, editorContext);<z>
provider.setRole("statementList");<z>
.setNoTargetText("<no statementList>");<z>
editorCell;<z>
createEditorCell(editorContext);<z>
.setSubstituteInfo(provider.createDefaultSubstituteInfo());<z>
provider.getRoleAttribute();<z>
.getRoleAttributeClass();<z>
!= null) {<z>
();<z>
.getInstanceFromContext(opContext);<z>
attributeConcept, attributeKind, editorCell);<z>
editorCell;<z>
){<z>
.addEvidenceGenerator(<z>
)<z>
writer )<z>
writer.println( "Thread Pools" );<z>
.indent();<z>
List pools;<z>
{<z>
new ArrayList( busy_pools );<z>
){<z>
generateEvidence( writer );<z>
finally{<z>
;<z>
});<z>
final boolean jj_2_13(int i)<z>
= i;<z>
= token;<z>
();<z>
, i);<z>
return flag;<z>
Resolver = new ResolverBase(<z>
Function)<z>
resolve(<z>
[] args,<z>
,<z>
conversions)<z>
) {<z>
null;<z>
conversions)) {<z>
;<z>
++i) {<z>
(<z>
, Category.Hierarchy, conversions))<z>
return null;<z>
ArrayList<Integer>();<z>
=<z>
<Hierarchy>();<z>
, extractedOrdinals);<z>
parameterTypes = new int[args.length];<z>
] = Category.Set;<z>
fill(<z>
Hierarchy);<z>
.Set, parameterTypes);<z>
{<z>
);<z>
String value : valueOptions) {<z>
).add(value);<z>
;<z>
.a_regular_expression_used_when_creating_a_client_root_relative_path_that_will_be_used_for_component_materialization_based_on_the_full_depot_path_of_a_component);<z>
setToolTipText(Messages.the_replacement_string_used_when_creating_the_client_root_relative_path_that_will_be_used_for_component_materialization_based_on_the_full_depot_path_of_a_component);<z>
IPv4Range(byte[] networkNumber)<z>
if (networkNumber.length != 4)<z>
;<z>
4][2];<z>
boolean hostPortion = true;<z>
--)<z>
i];<z>
][1] = networkNumber[i];<z>
(hostPortion)<z>
(0))<z>
;<z>
[1] = u2s(254);<z>
= false;<z>
)<z>
trace = isTraceEnabled();<z>
);<z>
)<z>
if (trace)<z>
+ item.serial + " from the map going to remove it");<z>
item);<z>
isValid();<z>
();<z>
valid)<z>
object);<z>
return object;<z>
.onExpire(item.name, object);<z>
;<z>
;<z>
ModuleLoadException {<z>
fis;<z>
(moduleInfoFile);<z>
} catch (FileNotFoundException e) {<z>
"No module.xml file found at " + moduleInfoFile);<z>
ResourceRootFactory() {<z>
{<z>
loaderPath);<z>
.isDirectory()) {<z>
;<z>
{<z>
file, true);<z>
);<z>
), moduleIdentifier);<z>
{<z>
safeClose(fis);<z>
, int bufferId,<z>
, short outPort) {<z>
).getMessage(OFType.FLOW_MOD);<z>
setMatch(match);<z>
.LEARNING_SWITCH_COOKIE);<z>
setCommand(command);<z>
.IDLE_TIMEOUT_DEFAULT);<z>
;<z>
flowMod.setPriority(LearningSwitch.PRIORITY_DEFAULT);<z>
;<z>
: OFPort.OFPP_NONE.getValue());<z>
short) (1 << 0));<z>
));<z>
OFFlowMod.MINIMUM_LENGTH + OFActionOutput.MINIMUM_LENGTH));<z>
()) {<z>
"{} {} flow mod {}",<z>
) ? "deleting" : "adding", flowMod });<z>
counterStore.updatePktOutFMCounterStore(sw, flowMod);<z>
(flowMod, null);<z>
} catch (IOException e) {<z>
);<z>
void onResult(Attributes data) {<z>
.incrementAndGet();<z>
{<z>
;<z>
dos = null;<z>
(<z>
), UID.ImplicitVRLittleEndian);<z>
dos.writeDataset(null, data);<z>
} catch (IOException e1) {<z>
printStackTrace();<z>
} finally {<z>
close(dos);<z>
Tracker tracker, Connection.Factory factory)<z>
, 4, 4);<z>
.newConnection(tracker);<z>
) {<z>
display = new Display();<z>
);<z>
setSize(300, 300);<z>
);<z>
(shell);<z>
= shell.getBackground();<z>
(shell);<z>
});<z>
= dialog.open();<z>
{<z>
;<z>
= loader.load(fileName);<z>
imageDataArray.length > 1) {<z>
= new Thread("Animation") {<z>
run() {<z>
, loader.logicalScreenHeight);<z>
GC(offScreenImage);<z>
;<z>
, loader.logicalScreenHeight);<z>
int imageDataIndex = 0;<z>
[imageDataIndex];<z>
.dispose();<z>
= new Image(display, imageData);<z>
offScreenImageGC.drawImage(<z>
,<z>
,<z>
,<z>
,<z>
imageData.width,<z>
);<z>
;<z>
repeatCount > 0) {<z>
(imageData.disposalMethod) {<z>
.DM_FILL_BACKGROUND:<z>
Color bgColor = null;<z>
!= -1) {<z>
.backgroundPixel));<z>
;<z>
, imageData.height);<z>
!= null) bgColor.dispose();<z>
SWT.DM_FILL_PREVIOUS:<z>
.drawImage(<z>
.width,<z>
,<z>
x,<z>
,<z>
imageData.width,<z>
imageData.height);<z>
% imageDataArray.length;<z>
[imageDataIndex];<z>
);<z>
imageData);<z>
.drawImage(<z>
.width,<z>
,<z>
.x,<z>
imageData.y,<z>
imageData.width,<z>
;<z>
, 0);<z>
;<z>
ms += 30;<z>
10;<z>
.sleep(ms);<z>
{<z>
length - 1) repeatCount--;<z>
(SWTException ex) {<z>
System.out.println("There was an error animating the GIF");<z>
} finally {<z>
;<z>
) offScreenImageGC.dispose();<z>
image.dispose();<z>
animateThread.setDaemon(true);<z>
animateThread.start();<z>
ex) {<z>
;<z>
()) {<z>
.sleep();<z>
dispose();<z>
j, float f)<z>
(i, j, f);<z>
20, 0xffffff);<z>
, j, f);<z>
, int position, Type type) {<z>
null) {<z>
);<z>
{<z>
"type"));<z>
.get(constructor) == null) {<z>
<Integer, Type>());<z>
constructor).put(position, type);<z>
return this;<z>
int getFill(JComponent component) {<z>
) {<z>
;<z>
GridBagConstraints.HORIZONTAL;<z>
) {<z>
31).<z>
start).<z>
.<z>
);<z>
PersistenceMechanismException {<z>
resetRecordStore();<z>
} catch (InvalidImageDataException e) {<z>
();<z>
parameters)<z>
.action = action;<z>
parameters;<z>
boolean HandleReadCharEvent(NativePreviewEvent preview) {<z>
= preview.getNativeEvent();<z>
{<z>
return false;<z>
getKeyCode() != KEY_DOWN ) ) {<z>
return false;<z>
getKeyCode() == KEY_DOWN)) {<z>
return false;<z>
.getKeyCode();<z>
) event.getKeyCode();<z>
) {<z>
;<z>
"KeyCode "+key);<z>
== KEY_UP ) {<z>
129;<z>
("up");<z>
( key == KEY_DOWN ) {<z>
= 130;<z>
== KEY_LEFT ) {<z>
= 131;<z>
if ( key == KEY_RIGHT ) {<z>
keyCode = 132;<z>
if ( readMode == READMODES.READCHAR_TIMED ) {<z>
);<z>
null;<z>
;<z>
debug("trying to continue execution...1");<z>
();<z>
previewHandler = null;<z>
READMODES.ERROR;<z>
debug("Queueing");<z>
() {<z>
void execute() {<z>
debug("trying to continue execution...2");<z>
zop_read_char_continue(lastkey);<z>
.debug("trying to continue execution...3");<z>
;<z>
;<z>
return true;<z>
o)<z>
if(this == o)<z>
return true;<z>
instanceof AbstractAtom))<z>
;<z>
o;<z>
(atom.value);<z>
requestCode, int resultCode, Intent intent) {<z>
requestCode == PICK_REQUEST_CODE) {<z>
{<z>
;<z>
uri != null) {<z>
.toString();<z>
("file://")) {<z>
);<z>
;<z>
);<z>
getParent();<z>
() {<z>
XQuery query = new XQuery(<z>
;<z>
res = result(query);<z>
;<z>
true)<z>
> getParams()<z>
)<z>
this, TemplatePackage.TEMPLATE_FILE__PARAMS);<z>
;<z>
) throws IOException {<z>
final String name = original.getName();<z>
).getPhysicalFile();<z>
if (original.isDirectory()) {<z>
);<z>
()) {<z>
(file, destFile);<z>
{<z>
= new FileOutputStream(destFile);<z>
InputStream is = original.openStream();<z>
(is, os);<z>
} finally {<z>
os);<z>
{<z>
= "";<z>
;<z>
node == null) {<z>
;<z>
else {<z>
getNodeValue();<z>
return id;<z>
{<z>
if(logger != null) {<z>
error(msg);<z>
.println(msg);<z>
) throws DeploymentException {<z>
().size() == 1) {<z>
).get(0);<z>
, ElementSource.WEB_XML);<z>
);<z>
1) {<z>
DeploymentException(WebDeploymentMessageUtils.createMultipleConfigurationWebAppErrorMessage("session-config"));<z>
String encounter_table,<z>
String third_table) {<z>
;<z>
ENCOUNTER_TABLE = encounter_table;<z>
;<z>
() {<z>
getEventFiles().entrySet()) {<z>
;<z>
getValue();<z>
();<z>
);<z>
!= null) {<z>
;<z>
);<z>
final IOException e) {<z>
+ "' is not a file resource and cannot be saved. Nested exception: " + e, e);<z>
final Writer fileWriter;<z>
;<z>
IOException e) {<z>
+ "' could not be opened. Nested exception: " + e, e);<z>
stringWriter.toString());<z>
e) {<z>
file + "' could not be written to. Nested exception: " + e, e);<z>
fileWriter.close();<z>
{<z>
e, e);<z>
programmaticStoreFile;<z>
;<z>
) {<z>
());<z>
programmaticStoreFile.delete()) {<z>
warnf(this, "Attempted to delete %s, but failed.", programmaticStoreFile);<z>
final IOException e) {<z>
"Programmatic store resource '%s'; not attempting to delete an unused programmatic store file if it exists (since we can't test for it).", getProgrammaticStoreConfigResource());<z>
value) {<z>
) {<z>
case CENTER:<z>
if (value == null) {<z>
();<z>
else {<z>
GeocodePoint)value);<z>
:<z>
null) {<z>
;<z>
{<z>
value);<z>
{<z>
;<z>
, entityId);<z>
.setParameter("plain", plain);<z>
);<z>
();<z>
void rollWALWriter(<z>
controller,<z>
.protobuf.generated.AdminProtos.RollWALWriterRequest request,<z>
) {<z>
callMethod(<z>
9),<z>
.getDefaultInstance(),<z>
google.protobuf.RpcUtil.generalizeCallback(<z>
AdminProtos.RollWALWriterResponse.class,<z>
getDefaultInstance()));<z>
secure, long timeout) {<z>
.d(TAG, "connect to: " + device);<z>
) {<z>
.containsKey(device)) {<z>
, device, secure, timeout);<z>
.addListener(this);<z>
();<z>
(device, ct);<z>
{<z>
+", abort double connection");<z>
{<z>
(TAG, "Connection attempt to "+device+" already initiated, abort double connection");<z>
(){<z>
, "globalsatImport",<z>
("Import Data from Globalsat Datalogger DG100 into GPX layer."),<z>
tr("Globalsat Import")),<z>
), false);<z>
otherPath, IElementComparer comparer) {<z>
) {<z>
false;<z>
segments.length) {<z>
;<z>
i < segments.length; i++) {<z>
comparer == null) {<z>
segments[i])) {<z>
;<z>
{<z>
.segments[i])) {<z>
;<z>
return true;<z>
<Annotation> executePitchDetection() {<z>
= new Command("swipe_octave");<z>
(file.transcodedPath());<z>
= cmd.execute();<z>
.split("\n");<z>
String row : rows){<z>
.split("\\s+");<z>
1].equals("NaN")){<z>
valueOf(data[0]);<z>
[1]);<z>
(data[2]);<z>
strength);<z>
.add(a);<z>
e) {<z>
return annotations;<z>
next() {<z>
);<z>
()) {<z>
;<z>
Item currentItem = nextItem;<z>
;<z>
;<z>
rule__Number__Group_1_1__1() throws RecognitionException {<z>
;<z>
(FOLLOW_rule__Number__Group_1_1__1__Impl_in_rule__Number__Group_1_1__125453);<z>
();<z>
;<z>
failed) return ;<z>
RecognitionException re) {<z>
reportError(re);<z>
(input,re);<z>
stackSize);<z>
()<z>
null;<z>
.newInstance();<z>
.newTransformer();<z>
"UTF-8");<z>
.setOutputProperty(OutputKeys.METHOD, "xml");<z>
();<z>
StreamResult(sw));<z>
ret = sw.toString();<z>
) {<z>
e));<z>
ret;<z>
) {<z>
, 0,<z>
remaining() >> 3,<z>
> 3);<z>
;<z>
capacity();<z>
);<z>
int pos = this.position();<z>
pos <= cap);<z>
pos;<z>
, boolean enabled) {<z>
createLabel(parent, getLabel());<z>
);<z>
new TableWrapData();<z>
td.valign = TableWrapData.MIDDLE;<z>
label.setLayoutData(td);<z>
);<z>
= new TableWrapData(TableWrapData.FILL_GRAB);<z>
setLayoutData(td);<z>
.setEnabled(enabled);<z>
{<z>
;<z>
("default");<z>
);<z>
;<z>
));<z>
= provider.createEditorCell(editorContext);<z>
(provider.createDefaultSubstituteInfo());<z>
getRoleAttribute();<z>
Class attributeKind = provider.getRoleAttributeClass();<z>
null) {<z>
getOperationContext();<z>
(opContext);<z>
, attributeKind, editorCell);<z>
;<z>
() {<z>
.writeHeader(<z>
"doclet.Constructor_Detail"));<z>
kStringToCodepointFunc10() {<z>
final XQuery query = new XQuery(<z>
ctx);<z>
QT3Result res = result(query);<z>
;<z>
(true)<z>
thredds.filesystem.FileSystemProto.Attribute value) {<z>
attsBuilder_ == null) {<z>
{<z>
;<z>
);<z>
atts_.add(value);<z>
();<z>
else {<z>
addMessage(value);<z>
this;<z>
)<z>
, value );<z>
(String contextId) throws Exception {<z>
) < 6)<z>
return false;<z>
SmartWorks.CONTEXT_PREFIX_DEPARTMENT_SPACE)<z>
(SmartWorks.CONTEXT_PREFIX_GROUP_SPACE)<z>
.equals(SmartWorks.CONTEXT_PREFIX_USER_SPACE))<z>
;<z>
;<z>
container)<z>
return null;<z>
container.getRegistry();<z>
LookupNames.CACHE_ON);<z>
) return makeNoOpCache();<z>
= loadConfig(<z>
getConfigFileRelative(CACHE_CONFIG_FILE));<z>
makeNoOpCache();<z>
CacheServiceImpl(config,<z>
getRegistry().getLogger());<z>
;<z>
) {}<z>
cache;<z>
] strings) {<z>
name = name;<z>
;<z>
this.strings = strings;<z>
final Object o) {<z>
OIdentifiable)<z>
) o);<z>
o instanceof Proxy)<z>
Proxy) o));<z>
return super.containsValue(o);<z>
InvalidRequestException<z>
!= null)<z>
super_column));<z>
if (del.predicate != null)<z>
;<z>
.slice_range != null)<z>
("Deletion does not yet support SliceRange predicates.");<z>
del.super_column != null)<z>
cfName, del);<z>
.cassandra.exceptions.InvalidRequestException(msg);<z>
metadata.getDefaultValidator().isCommutative())<z>
System.currentTimeMillis();<z>
isSetTimestamp())<z>
InvalidRequestException("Deletion timestamp is not optional for non commutative column family " + metadata.cfName);<z>
callAccepted(final boolean accepted) {<z>
UiApplication.getUiApplication().invokeLater(<z>
{<z>
public void run() {<z>
if (accepted == true) {<z>
;<z>
getPendingFriends()-1);<z>
() == FriendsScreen.this) {<z>
this.refresh();<z>
else {<z>
Status.show("Unable to accept friend request");<z>
) {<z>
.partition = partition;<z>
partitionConfig = partition.getPartitionConfig();<z>
= partitionConfig.getConnectionConfigManager();<z>
synchronized void failedTask(TaskInProgress tip, TaskAttemptID taskid,<z>
state,<z>
{<z>
(tip.isMapTask(),<z>
, phase,<z>
;<z>
getTaskStatus(taskid);<z>
oldStatus == null<z>
)<z>
.getStartTime();<z>
.setStartTime(startTime);<z>
;<z>
);<z>
(tip, status);<z>
boolean isComplete = tip.isComplete();<z>
isComplete) {<z>
getTaskType(tip);<z>
(), taskType,<z>
), reason, taskid);<z>
RecognitionException {<z>
.LA(1) <= '9')<z>
1) <= 'F')<z>
) {<z>
();<z>
MismatchedSetException mse =<z>
new MismatchedSetException(null, input);<z>
mse);<z>
mse;<z>
} finally {<z>
BeforeGeneration( )<z>
);<z>
.getDevice( "dv.JPG" );<z>
ex )<z>
;<z>
cm = createPieChart( );<z>
new BufferedImage(<z>
);<z>
;<z>
g;<z>
setProperty( IDeviceRenderer.GRAPHICS_CONTEXT, g2d );<z>
genOutputFile( OUTPUT ) );<z>
;<z>
( ) );<z>
Generator gr = Generator.instance( );<z>
gcs = gr.build(<z>
( ),<z>
);<z>
( dRenderer, gcs );<z>
catch ( ChartException e )<z>
);<z>
(byte[] buffer, int eventLength,<z>
FormatDescriptionLogEvent descriptionEvent,<z>
ReplicatorException<z>
descriptionEvent,<z>
;<z>
y, int f) {<z>
f >= 0) : "negative time and cursor bug";<z>
(f);<z>
{<z>
++) {<z>
+ i);<z>
cached = true;<z>
(x, y, "m_cursor" + f);<z>
{<z>
OnSurveyFetchedListener() {<z>
) {<z>
"onSurveyFetched(" + success + ")");<z>
new Runnable() {<z>
) {<z>
"Survey fetch successful." : "Survey fetch failed.", Toast.LENGTH_SHORT);<z>
Gravity.CENTER, 0, 0);<z>
;<z>
);<z>
});<z>
;<z>
patchRetrieveRightBraceOrSemiColonPosition(ScriptManager sm) {<z>
)<z>
MethodTarget("org.eclipse.jdt.core.dom.ASTConverter", "retrieveRightBraceOrSemiColonPosition"))<z>
"org.eclipse.jdt.core.dom.ASTConverter", "retrieveRightBrace"))<z>
"int", "int"))<z>
.build());<z>
<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {<z>
if (itemPropertyDescriptors == null) {<z>
.getPropertyDescriptors(object);<z>
(object);<z>
return itemPropertyDescriptors;<z>
{<z>
(plugins);<z>
(plugins)<z>
{<z>
!= null;<z>
());<z>
file : files) {<z>
));<z>
(urls, parent);<z>
RepositoryCommit commit) {<z>
adapter.addHeader(commitHeader);<z>
getAuthor(commit);<z>
);<z>
commitCommitter = CommitUtils.getCommitter(commit);<z>
);<z>
getCommit().getMessage());<z>
) {<z>
.bindAuthor(commit, avatars, authorAvatar);<z>
(commitAuthor);<z>
StyledText();<z>
append(getString(string.authored));<z>
commitAuthorDate != null)<z>
commitAuthorDate);<z>
;<z>
);<z>
);<z>
(isDifferentCommitter(commitAuthor, commitAuthorDate,<z>
{<z>
.bindCommitter(commit, avatars, committerAvatar);<z>
setText(commitCommitter);<z>
();<z>
);<z>
)<z>
);<z>
(styledCommitter);<z>
ViewUtils.setGone(committerArea, false);<z>
committerArea, true);<z>
) {<z>
reconciler = new PresentationReconciler();<z>
;<z>
.setDamager(dr, IDocument.DEFAULT_CONTENT_TYPE);<z>
IDocument.DEFAULT_CONTENT_TYPE);<z>
);<z>
.HTML_STYLE_PARTITION);<z>
HtmlEditor.HTML_STYLE_PARTITION);<z>
ndr = new HtmlDamagerRepairer(new TextAttribute(<z>
);<z>
setDamager(ndr, HtmlEditor.HTML_COMMENT_PARTITION);<z>
);<z>
reconciler;<z>
> processed) {<z>
)) {<z>
;<z>
)) {<z>
Filter dependency = port.getSourceFilter();<z>
{<z>
false;<z>
return true;<z>
(Method method) {<z>
;<z>
= false;<z>
if (excludePatterns != null) {<z>
for (Pattern pattern : excludePatterns) {<z>
pattern)) {<z>
= true;<z>
(includePatterns != null) {<z>
{<z>
matches(pattern)) {<z>
true;<z>
== null) {<z>
excluded;<z>
{<z>
excluded;<z>
> findByU_G(<z>
, long groupId)<z>
liferay.portal.kernel.exception.SystemException {<z>
(userId, groupId);<z>
Properties validationContext)<z>
result = null;<z>
content == null )<z>
,<z>
SwordValidationInfo.MISSING_CONTENT,<z>
;<z>
return result;<z>
(String photoId) throws JinxException {<z>
.trim().isEmpty()) {<z>
("Photo ID is required.");<z>
<String, String>();<z>
params.put("method", "flickr.photos.geo.getPerms");<z>
getInstance().getApiKey());<z>
;<z>
);<z>
perms = new Perms();<z>
.getValueByXPath(doc, "/rsp/perms/@id"));<z>
.getValueByXPathAsBoolean(doc, "/rsp/perms/@ispublic"));<z>
doc, "/rsp/perms/@iscontact"));<z>
, "/rsp/perms/@isfriend"));<z>
doc, "/rsp/perms/@isfamily"));<z>
return perms;<z>
> getAlignmentscope() {<z>
alignmentscope == null) {<z>
ArrayList<String>();<z>
;<z>
() {<z>
= new StringBuffer();<z>
;<z>
value) {<z>
if (cnt > 0) {<z>
.append(",");<z>
(s);<z>
;<z>
res.toString();<z>
public void addPerson() {<z>
p = new Person();<z>
("Test1");<z>
);<z>
p);<z>
String getNewRoleStarSlotExpressionWithBackingSet(Role role, String theSet) {<z>
);<z>
.getOtherRole().getType());<z>
"new ");<z>
;<z>
append("(");<z>
.append(theSet);<z>
.append(", ");<z>
.append("(");<z>
.append(thisType);<z>
(")this, ");<z>
buf.append(getRelationSlotNameFor(role));<z>
;<z>
();<z>
{<z>
!= null) {<z>
);<z>
= codec.createOutputStream(compressedData);<z>
));<z>
);<z>
getLength()) {<z>
);<z>
;<z>
{<z>
;<z>
uncompressedData;<z>
} else {<z>
;<z>
storedData = uncompressedData;<z>
getCodecNameUTF8(codecName);<z>
new CRC32();<z>
);<z>
);<z>
)<z>
);<z>
node = null;<z>
.beginTx();<z>
( RelationshipDescription rel : description )<z>
;<z>
.success();<z>
tx.finish();<z>
;<z>
c)<z>
(this.service == null)<z>
.addServiceBindings(c);<z>
()<z>
converterId!=null)<z>
.createConverter(converterId);<z>
else if (converterValueExpression!=null)<z>
.getValue();<z>
valueExpression==null)<z>
return null;<z>
type = valueExpression.getType();<z>
type == null)<z>
null;<z>
class))<z>
;<z>
createConverter(type);<z>
request) {<z>
ModelAndView mav = new ModelAndView("/form/dynamic/dynamic-form-task-list");<z>
());<z>
>();<z>
())<z>
);<z>
)<z>
);<z>
.addAll(list);<z>
(list2);<z>
, tasks);<z>
return mav;<z>
AccountDashboardReviewInfo r) {<z>
.getAccounts());<z>
getOwner());<z>
name(o);<z>
);<z>
));<z>
.M.changesStartedBy(name));<z>
));<z>
.M.changesReviewedBy(name));<z>
getByOwner());<z>
.getForReview());<z>
;<z>
);<z>
(Object object)<z>
itemPropertyDescriptors.add<z>
.getRootAdapterFactory(),<z>
getResourceLocator(),<z>
),<z>
, "_UI_Node_name_feature", "_UI_Node_type"),<z>
.NODE__NAME,<z>
,<z>
);<z>
parseSetTerm() {<z>
);<z>
;<z>
lookahead = lookahead();<z>
= true;<z>
(!lookahead.equals("}")) {<z>
(!firstTime) {<z>
(",");<z>
();<z>
false;<z>
(parseExpression());<z>
();<z>
;<z>
params).substitute(Collections.EMPTY_MAP);<z>
generated.LoadBalancerProtos.LoadBalancerState buildPartial() {<z>
.LoadBalancerProtos.LoadBalancerState(this);<z>
from_bitField0_ = bitField0_;<z>
0;<z>
{<z>
to_bitField0_ |= 0x00000001;<z>
;<z>
bitField0_ = to_bitField0_;<z>
onBuilt();<z>
;<z>
throws MessageFormatException {<z>
= new ByteBufferInputStream(data);<z>
() < 23)<z>
;<z>
read();<z>
)in.read();<z>
>> 4);<z>
.read() & 0xFF);<z>
& 0xF;<z>
RUDPMessageImpl.MAX_DATA1_SIZE)<z>
+ data1Length);<z>
;<z>
in.read(data1);<z>
.flip();<z>
if (opcode == OpCode.OP_DATA) {<z>
(data1Length);<z>
in.skip(3);<z>
;<z>
.leb2int(in);<z>
impossible) {<z>
ErrorService.error(impossible);<z>
available())<z>
in.available());<z>
);<z>
() == 0;<z>
{<z>
:<z>
);<z>
:<z>
connectionID, sequenceNumber, data1, data2);<z>
:<z>
;<z>
OP_DATA:<z>
(connectionID, sequenceNumber, data1, data2);<z>
:<z>
connectionID, sequenceNumber, data1, data2);<z>
;<z>
void setTargetIOR(IOR targetIOR)<z>
targetIOR;<z>
);<z>
width, int height) {<z>
(appletClass);<z>
;<z>
(width);<z>
height);<z>
setCodeArchive(archive);<z>
theEnv){<z>
(theEnv.getPriorId()==null) {<z>
();<z>
{<z>
getPrior())){<z>
env.getId());<z>
==null)<z>
)+"]");<z>
public void release()<z>
released)<z>
released = true;<z>
exception = new libvlc_exception_t();<z>
(jvlc.getInstance(), exception);<z>
) {<z>
if (toTest instanceof EditPart) {<z>
) toTest).getModel();<z>
View) {<z>
) model;<z>
||<z>
)) != null ||<z>
eINSTANCE.getLineStyle()) != null;<z>
;<z>
(int level)<z>
LINE);<z>
;<z>
, String defaultName) {<z>
if ( annJoin == null ) {<z>
);<z>
false );<z>
) setSqlType( annJoin.columnDefinition() );<z>
setLogicalColumnName( annJoin.name() );<z>
() );<z>
( annJoin.unique() );<z>
);<z>
() );<z>
setReferencedColumn( annJoin.referencedColumnName() );<z>
);<z>
{<z>
;<z>
);<z>
();<z>
.isCarry() ? 1 : 0);<z>
is32bitOperand() ? 32 : 16);<z>
result);<z>
(2);<z>
String getResultSetName( Map options )<z>
!= null )<z>
(String) options.get( PARAM_RESULTSETNAME );<z>
null;<z>
cluster)<z>
= CLUSTER_RESOURCE.replace("{cluster}", cluster);<z>
).getAttributes(path);<z>
) {<z>
editor = settings.edit();<z>
);<z>
editor.commit();<z>
authorizeOperation.complited = false;<z>
onUpdate();<z>
public Contract() {<z>
Position();<z>
);<z>
;<z>
tkBook = new TimeKeepingBook();<z>
void setSources(RendererClass rc, File f) {<z>
;<z>
.mapJavatoSrc(f);<z>
.setOriSourceCode(readSource(srcFile));<z>
srcFile);<z>
VersionedProtocol proxy) {<z>
(proxy!=null) {<z>
;<z>
throws TException {<z>
int size = readI32();<z>
trans_.getBytesRemainingInBuffer() >= size) {<z>
(), size, "UTF-8");<z>
(size);<z>
s;<z>
UnsupportedEncodingException e) {<z>
;<z>
;<z>
jjMoveStringLiteralDfa1_6(long active1) {<z>
curChar = input_stream.readChar();<z>
e) {<z>
, active1);<z>
1;<z>
switch (curChar) {<z>
:<z>
(active1, 0x100000000000000L);<z>
0L, active1);<z>
() {<z>
size()]);<z>
jsons = new ArrayList();<z>
;<z>
) {<z>
.add<z>
.getRootAdapterFactory(),<z>
),<z>
("_UI_Index_qualifier_feature"),<z>
,<z>
Literals.INDEX__QUALIFIER,<z>
ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,<z>
null));<z>
boolean isWakeLock()<z>
) != 0;<z>
return bWakeLock;<z>
, String subscriptionId)<z>
throws XMPPException {<z>
,<z>
);<z>
Connection con)<z>
con);<z>
.setModified(false);<z>
Context context,<z>
,<z>
C value,<z>
event,<z>
C> valueUpdater) {<z>
lastContext = context;<z>
= parent;<z>
value;<z>
this.valueUpdater = valueUpdater;<z>
startEditing( context,<z>
;<z>
> context, ModelMenuItem modelMenuItem) throws IOException {<z>
= modelMenuItem.getTooltip(context);<z>
if (UtilValidate.isNotEmpty(tooltip)) {<z>
.append("<span class=\"");<z>
= modelMenuItem.getTooltipStyle();<z>
) {<z>
tooltipStyle);<z>
else {<z>
writer.append("tooltip");<z>
writer.append("\"");<z>
);<z>
writer.append("</span>");<z>
] par, vSniper v) {<z>
[1].equalsIgnoreCase("info")) {<z>
;<z>
+ "/b ts treetype");<z>
printTreeType(v.vm);<z>
; x++) {<z>
"bigtree")) {<z>
= TreeType.BIG_TREE;<z>
;<z>
.equals("birch")) {<z>
treeType = TreeType.BIRCH;<z>
(v.vm);<z>
("redwood")) {<z>
;<z>
.vm);<z>
"tallredwood")) {<z>
treeType = TreeType.TALL_REDWOOD;<z>
printTreeType(v.vm);<z>
.equals("tree")) {<z>
treeType = TreeType.TREE;<z>
;<z>
catch (NoSuchMethodException e) {<z>
.class,<z>
.class);<z>
{<z>
e);<z>
e) {<z>
String initCertDirs, String initDefaultCertDir, String initUserCertFileName,<z>
initUserKeyFileName, ProtectionParameter initProtectionParameter,<z>
String initProxyFileName) {<z>
initUserKeyFileName, initProtectionParameter);<z>
= initProxyFileName;<z>
(WaitingNdefMessage waitingNdefMessage) {<z>
;<z>
!= null)<z>
);<z>
protected void serveGetRenderParameters(<z>
resourceResponse)<z>
{<z>
.getAttribute(<z>
THEME_DISPLAY);<z>
JSONFactoryUtil.createJSONObject();<z>
String fileEntryURL = ParamUtil.getString(<z>
"fileEntryURL");<z>
gadgetSpec = ShindigUtil.getGadgetSpec(<z>
, true, true);<z>
.getModulePrefs();<z>
));<z>
= ShindigUtil.getModuleId(<z>
.getNamespace());<z>
, moduleId);<z>
;<z>
containsKey("pubsub-2");<z>
, requiresPubsub);<z>
boolean scrolling = modulePrefs.getScrolling();<z>
, scrolling);<z>
.getOwnerId(themeDisplay.getLayout());<z>
PortalUtil.getPortalURL(themeDisplay);<z>
.getCurrentURL(resourceRequest);<z>
ShindigUtil.createSecurityToken(<z>
, portalURL,<z>
currentURL);<z>
jsonObject.put("secureToken", secureToken);<z>
"specUrl", fileEntryURL);<z>
(resourceRequest, resourceResponse, jsonObject);<z>
public boolean isStale() {<z>
!isOpen()) {<z>
;<z>
)) {<z>
;<z>
(1);<z>
isEof();<z>
catch (SocketTimeoutException ex) {<z>
false;<z>
} catch (IOException ex) {<z>
return true;<z>
(final Account account) {<z>
blockedAccounts) {<z>
)) return;<z>
String host = this.getHosterName(account);<z>
ar = blockedAccounts.get(host);<z>
{<z>
>();<z>
(host, ar);<z>
);<z>
Member user) {<z>
)<z>
.id.iv_gravatar);<z>
80, 80);<z>
;<z>
tvName.setText(user.name);<z>
);<z>
StringUtils.isBlank(user.eMail)) {<z>
;<z>
.id.tv_website);<z>
(user.website)) {<z>
user.website);<z>
.id.tv_identification);<z>
isBlank(user.identification)) {<z>
identification);<z>
.tv_location);<z>
isBlank(user.internalPosts)) {<z>
tvLocation.setText(user.internalPosts);<z>
.id.tv_organization);<z>
)) {<z>
setText(user.organizationalUnit);<z>
tv_realname);<z>
realName)) {<z>
setText(user.realName);<z>
id.tv_birthday);<z>
user.birthday != null) {<z>
);<z>
;<z>
isBlank(user.address)) {<z>
;<z>
);<z>
this);<z>
static void transitionGrisuConfigDirs() {<z>
"user.home"), ".grisu.beta");<z>
, ".grisu");<z>
cache = new File(oldDir, "cache");<z>
deleteQuietly(cache);<z>
&& ! newDir.exists() ) {<z>
moveDirectory(oldDir, newDir);<z>
(IOException e) {<z>
("Trying to transition grisu config dir...");<z>
.info("Could not move "<z>
oldDir.toString()<z>
.toString()<z>
+ ". Please move that directory manually and restart your client.");<z>
() && newDir.exists()) {<z>
grisuConfig = new File(newDir, "grisu.config");<z>
(grisuConfig.exists()) {<z>
, new File(newDir,<z>
"grisu.config.bak"));<z>
;<z>
) {<z>
);<z>
);<z>
;<z>
{<z>
("Trying to transition grisu config dir...");<z>
info("Could not move "<z>
)<z>
()<z>
;<z>
, HttpServletResponse response) throws XServletException {<z>
getBundleEngine(getUser(request),<z>
);<z>
String bundleDefinition;<z>
;<z>
= bundleEngine.getDefinition(jobId);<z>
{<z>
, ex);<z>
return bundleDefinition;<z>
, InterruptedException {<z>
;<z>
()) {<z>
));<z>
waitFor("Press any key to continue");<z>
;<z>
;<z>
{<z>
writer.close();<z>
;<z>
exitValue() != 0) {<z>
info("Failed to stop JBoss");<z>
else {<z>
;<z>
() {<z>
!this.isADelegateColumnReference())<z>
false;<z>
null)<z>
;<z>
;<z>
{<z>
();<z>
for(KscReportDetail detail : m_kscReportDetails) {<z>
)) {<z>
.add(detail);<z>
;<z>
(byte[] program_class) {<z>
);<z>
_gdk_set_program_class(program_class);<z>
finally {<z>
lock.unlock();<z>
int numEdges) {<z>
.numNodes = numNodes;<z>
numEdges = numEdges;<z>
numNodes];<z>
[numNodes];<z>
nextNodes = new int[numNodes];<z>
[numNodes];<z>
;<z>
];<z>
= new boolean[numNodes];<z>
inChangedList = new boolean[numNodes];<z>
numEdges];<z>
heads = new int[2*numEdges];<z>
];<z>
numEdges];<z>
[2*numEdges];<z>
0; i < numNodes; i++) {<z>
] = NONE;<z>
parents[i] = NONE;<z>
] = NONE;<z>
] = 0;<z>
distances[i] = 0;<z>
[i] = false;<z>
[i] = false;<z>
i] = 0;<z>
++) {<z>
NONE;<z>
NONE;<z>
NONE;<z>
= 0;<z>
boolean matched) {<z>
path = context.path;<z>
context.length;<z>
this.pos = pos;<z>
;<z>
length) {<z>
;<z>
public String toString() {<z>
"org.apache.openjpa.persistence.compatible.EmbeddableAddress: " +<z>
+<z>
+ getLine2() +<z>
+<z>
() +<z>
() +<z>
getCountry() );<z>
String> allClassNames) {<z>
, testCaseElementCompilationUnit, allClassNames);<z>
testCaseElementCompilationUnit);<z>
;<z>
public String getGlossString() {<z>
if (getIsCookieEnabled(CookieAndContributorSource.GLOSSARY_COOKIE)) {<z>
"Hide Glossary Entries";<z>
} else {<z>
;<z>
getShippableQuantity(String shipGroupSeqId) {<z>
shippableQuantity = ZERO;<z>
GenericValue> validItems = getValidOrderItems(shipGroupSeqId);<z>
(validItems != null) {<z>
: validItems) {<z>
;<z>
false);<z>
GenericEntityException e) {<z>
.logError(e, "Problem getting Product from OrderItem; returning 0", module);<z>
return ZERO;<z>
{<z>
{<z>
).setScale(scale, rounding);<z>
shippableQuantity.setScale(scale, rounding);<z>
File updatablePoiDbFile) {<z>
new AmenityIndexRepositoryOdb();<z>
EMPTY_PROGRESS, updatablePoiDbFile);<z>
if (initialize) {<z>
amenityRepositories.add(odb);<z>
odb;<z>
true;<z>
SQLiteException e) {<z>
;<z>
() throws RecognitionException {<z>
String current = null;<z>
null;<z>
==0 ) {<z>
(grammarAccess.getIdOrSuperRule());<z>
);<z>
;<z>
state._fsp--;<z>
.failed) return current;<z>
backtracking==0 ) {<z>
current =iv_ruleIdOrSuper.getText();<z>
(state.failed) return current;<z>
{<z>
recover(input,re);<z>
);<z>
;<z>
(Attributes attribs) {<z>
attribs.getValue(IApiXmlConstants.ELEMENT_PROBLEM_MESSAGE_ARGUMENTS);<z>
String[] messages = null;<z>
) {<z>
"\\,");<z>
return messages;<z>
field) {<z>
) {<z>
case SUCCESS:<z>
return Long.valueOf(getSuccess());<z>
SEC:<z>
getSec();<z>
new IllegalStateException();<z>
org.apache.thrift.TException {<z>
TTupleProtocol iprot = (TTupleProtocol) prot;<z>
iprot.readBinary();<z>
struct.setRowIsSet(true);<z>
);<z>
(incoming.get(0)) {<z>
readI32());<z>
.size);<z>
; _i30 < _list29.size; ++_i30)<z>
;<z>
= new TColumn();<z>
);<z>
struct.columns.add(_elem31);<z>
.setColumnsIsSet(true);<z>
get(1)) {<z>
= iprot.readI64();<z>
struct.setTimestampIsSet(true);<z>
{<z>
());<z>
(true);<z>
(3)) {<z>
();<z>
);<z>
String> getPackages() {<z>
();<z>
_deploymentUnits.keySet());<z>
finally {<z>
().unlock();<z>
(long accelGroup) {<z>
MenuItem [] items = getItems ();<z>
items.length; i++) {<z>
= items[i];<z>
item.removeAccelerators (accelGroup);<z>
) {<z>
hasStartedProcess())<z>
;<z>
exitCode == null)<z>
;<z>
exitCode;<z>
context)<z>
IOException {<z>
.getRegistry()<z>
();<z>
();<z>
);<z>
= coder.readUnsignedShort();<z>
();<z>
() << Coder.TO_UPPER_BYTE)<z>
;<z>
int index;<z>
;<z>
0; i < argumentCount; i++) {<z>
coder.readByte();<z>
);<z>
readUnsignedShort();<z>
();<z>
length += actionsLength;<z>
= new ArrayList<Action>();<z>
bytesRead() < actionsLength) {<z>
(actions, coder, context);<z>
check(actionsLength);<z>
();<z>
, boolean longestOnly) {<z>
synchronized (featureMap) {<z>
getFeaturesMap(name);<z>
);<z>
names.iterator();<z>
))));<z>
ii = 0;<z>
{<z>
);<z>
{<z>
);<z>
} else {<z>
.addAll(subFeats);<z>
++;<z>
features;<z>
> mapSelect(ResultSet rs, int number) {<z>
sol = rs.nextSolution();<z>
>();<z>
hasNext(); ) {<z>
= varNames.next();<z>
(varName);<z>
.toString()));<z>
;<z>
{<z>
prim.BufferName}) {<z>
);<z>
this;<z>
);<z>
public void init()<z>
();<z>
public void release()<z>
target = null;<z>
value = null;<z>
(<z>
content)<z>
(content, false);<z>
)<z>
)<z>
newUrls[i]);<z>
public String generate(WebserviceCodeGenInfo wsCodeGenInfo) {<z>
.getQuery();<z>
null) {<z>
Arrays.asList(NULL_QUERY));<z>
();<z>
<String>();<z>
();<z>
StringBuffer codeBody = new StringBuffer();<z>
{<z>
, codeBody);<z>
{<z>
, packageName, javaImports, intermineImports, codeBody);<z>
(InvalidQueryException e) {<z>
;<z>
+ ";" + ENDL<z>
javaImports)<z>
intermineImports)<z>
.toString();<z>
) throws RecognitionException {<z>
;<z>
;<z>
rule__XAssignment__Group_1__1__Impl();<z>
._fsp--;<z>
;<z>
) {<z>
(re);<z>
recover(input,re);<z>
stackSize);<z>
Arrangement(XArrangement source, int viewIndex) {<z>
getHtml());<z>
) + viewIndex;<z>
,<z>
getMenuShortcutKeyMask())<z>
new ViewIcon(this, LARGE_ICON_SIZE);<z>
icon);<z>
ISourceViewer sourceViewer,String partition,Position position){<z>
= TextViewer.class.getDeclaredField("fVisibleDocument");<z>
true);<z>
sourceViewer);<z>
.getDeclaredField("fPresentationReconciler");<z>
);<z>
get(sourceViewer);<z>
getDamager(partition);<z>
.getDeclaredField("fScanner");<z>
;<z>
;<z>
position.getLength());<z>
;<z>
(token != null)<z>
.getData();<z>
{<z>
printStackTrace();<z>
null;<z>
T> toArrayList() {<z>
ArrayList<T>(size);<z>
head;<z>
{<z>
;<z>
;<z>
;<z>
{<z>
] dependencies = symbolTable.getBranchGraphDependencies(graphID);<z>
dependencies.length+1 ];<z>
;<z>
0] = readSingleBranchGraph( graphID );<z>
length; i++) {<z>
);<z>
.length; i++) {<z>
i].getSymbol().graphBuilt) {<z>
;<z>
().graphBuilt = true;<z>
states[i].getNode();<z>
;<z>
return ret;<z>
SGIORuntimeException e ) {<z>
( e.getMessage() );<z>
func_48081_b(int par1)<z>
null)<z>
ItemStack itemstack = stackList[par1];<z>
[par1] = null;<z>
return itemstack;<z>
return null;<z>
[] args) throws Exception {<z>
();<z>
addOutputOption();<z>
("trainingPercentage", "t", "percentage of the data to use as training set (default: " +<z>
String.valueOf(DEFAULT_TRAINING_PERCENTAGE));<z>
, "percentage of the data to use as probe set (default: " +<z>
, String.valueOf(DEFAULT_PROBE_PERCENTAGE));<z>
, String> parsedArgs = parseArguments(args);<z>
(parsedArgs.get("--trainingPercentage"));<z>
;<z>
tempDir = parsedArgs.get("--tempDir");<z>
, "markedPreferences");<z>
), "trainingSet");<z>
(getOutputPath(), "probeSet");<z>
.class, MarkPreferencesMapper.class,<z>
,<z>
class);<z>
, String.valueOf(trainingPercentage));<z>
.valueOf(probePercentage));<z>
;<z>
(markedPrefs, trainingSetPath, SequenceFileInputFormat.class,<z>
,<z>
TextOutputFormat.class);<z>
(PART_TO_USE, INTO_TRAINING_SET.toString());<z>
.waitForCompletion(true);<z>
probeSetPath, SequenceFileInputFormat.class,<z>
, Text.class,<z>
.class);<z>
INTO_PROBE_SET.toString());<z>
;<z>
;<z>
public static Connection createConnection(ConnectionFactory conFac,<z>
jmsSpec11, Boolean isQueue) throws JMSException {<z>
Connection connection = null;<z>
()) {<z>
"Topic") +<z>
"/" + pass + ")");<z>
tConFac = null;<z>
) conFac;<z>
connection = tConFac.createTopicConnection();<z>
;<z>
)<z>
shouldFind = "//*[@Id='inspectingContent']//ul[@Id='cssTest']/li";<z>
root());<z>
, is(equalTo(3)));<z>
"two")));<z>
;<z>
, int port, int uid) {<z>
+ port;<z>
;<z>
) {<z>
port, uid);<z>
, result);<z>
poll();<z>
return result;<z>
{<z>
{<z>
false;<z>
getConfigBean().getEnabledScopes();<z>
()){<z>
return false;<z>
scope)){<z>
true;<z>
).getDisabledScopes();<z>
(disabledScopes.contains(scope)){<z>
return false;<z>
return isEnabled(getParentScope(scope));<z>
)<z>
(this).<z>
("tuUpdateInfo", tuUpdateInfo).<z>
toString();<z>
(BigInteger serverB) throws CryptoException<z>
= SRP6Util.validatePublicValue(N, serverB);<z>
, A, B);<z>
;<z>
;<z>
{<z>
(index >> 6);<z>
(int)index & 0x3f;<z>
;<z>
^= bitmask;<z>
List<QuestItems> getAssassinSelectableReward()<z>
null)<z>
;<z>
assassinSelectableReward;<z>
SpatialArgs args) {<z>
();<z>
instanceof Rectangle || shape instanceof Circle)) {<z>
+<z>
) + "]");<z>
);<z>
bbox.getCrossesDateLine()) {<z>
);<z>
= null;<z>
spatial = null;<z>
();<z>
SpatialOperation.is( op,<z>
.BBoxWithin,<z>
) {<z>
);<z>
if( SpatialOperation.is( op,<z>
SpatialOperation.Intersects,<z>
.IsWithin ) ) {<z>
);<z>
getShape() instanceof Circle) {<z>
Circle)args.getShape();<z>
());<z>
vsf = new ValueSourceFilter(<z>
.getRadius() );<z>
( new MatchAllDocsQuery(), vsf );<z>
( op == SpatialOperation.IsDisjointTo ) {<z>
(bbox);<z>
) {<z>
);<z>
) {<z>
valueSource);<z>
shape.getCenter());<z>
valueSource);<z>
new BooleanQuery();<z>
,BooleanClause.Occur.MUST);<z>
Occur.MUST);<z>
return bq;<z>
waitUntil(int t)<z>
int t2;<z>
)<z>
);<z>
;<z>
(Activity activity) {<z>
!= null) {<z>
synchronized (mSync) {<z>
.size();<z>
) {<z>
= mWaitingActivities.get(i);<z>
;<z>
.getIntent())) {<z>
= activity;<z>
));<z>
activity.onDestroy();<z>
{<z>
mSync) {<z>
mActivityMonitors.size();<z>
) {<z>
mActivityMonitors.get(i);<z>
, activity, activity.getIntent());<z>
static ItemStack getOutput(ItemStack input){<z>
(input)){<z>
List l = getResult(input);<z>
) l.get(1));<z>
;<z>
;<z>
;<z>
{<z>
view == null ) {<z>
getCertView( );<z>
setPresenter( this );<z>
.view );<z>
);<z>
this.view ).showSearchResult( result );<z>
) throws Throwable<z>
, args);<z>
= new ConsumerApp();<z>
;<z>
.getPort();<z>
());<z>
.getDestination();<z>
, consumer.port, "tcp://mycompany.com/mysniffer");<z>
dname, consumer.dtype);<z>
addAsyncConsumer(subscribe, consumer);<z>
;<z>
();<z>
);<z>
+ ""));<z>
get()) + ""));<z>
nano2second = (1000 * 1000 * 1000);<z>
);<z>
consumer.sentMessages;<z>
nano2second;<z>
messagesPerSecond = 1 / timePerMsg;<z>
/ nano2second, timePerMsg, messagesPerSecond);<z>
System.out.println(result);<z>
{<z>
inError = true;<z>
null;<z>
{<z>
{<z>
init();<z>
cleanup();<z>
= false;<z>
fileQueue.take();<z>
if (filePath == null) {<z>
;<z>
;<z>
null;<z>
catch (Throwable e) {<z>
("Error in LocalToHdfsMover", e);<z>
inError = true;<z>
);<z>
;<z>
catch (Throwable e2) {<z>
, e2);<z>
getName() + " is exiting.");<z>
public synchronized CharsToNameCanonicalizer makeChild(final boolean canonicalize,<z>
boolean intern)<z>
[] symbols;<z>
Bucket[] buckets;<z>
final int size;<z>
int hashSeed;<z>
final int longestCollisionList;<z>
) {<z>
= _symbols;<z>
buckets = _buckets;<z>
;<z>
= _hashSeed;<z>
longestCollisionList = _longestCollisionList;<z>
canonicalize, intern,<z>
hashSeed, longestCollisionList);<z>
toString() {<z>
new StringBuilder();<z>
(getCursorId());<z>
(getCollection().getFullName());<z>
.append(getQuery());<z>
getKeysWanted() != null)<z>
.append(getKeysWanted());<z>
(_num);<z>
0)<z>
);<z>
_limit != 0)<z>
append(_limit);<z>
0)<z>
).append(_batchSize);<z>
);<z>
)<z>
);<z>
if (_readPref != null)<z>
) );<z>
return sb.toString();<z>
Dimension2D localDimension) {<z>
PNode n = this;<z>
n != null) {<z>
;<z>
parent;<z>
return localDimension;<z>
procDeleteFile(SMBSrvPacket smbPkt)<z>
SMBSrvException {<z>
checkPacketIsValid(1, 2) == false) {<z>
, SMBStatus.ErrSrv);<z>
());<z>
if ( vc == null) {<z>
, SMBStatus.SRVNonSpecificError, SMBStatus.ErrSrv);<z>
();<z>
(treeId);<z>
{<z>
SMBStatus.ErrDos);<z>
() == false) {<z>
);<z>
= smbPkt.getByteOffset();<z>
= smbPkt.getByteCount();<z>
buf = smbPkt.getBuffer();<z>
.isUnicode());<z>
if ( fileName == null) {<z>
.ErrDos);<z>
{<z>
, SMBStatus.DOSInvalidData, SMBStatus.ErrDos);<z>
))<z>
+ fileName);<z>
;<z>
netFile = null;<z>
).getInterface();<z>
fileName);<z>
ex) {<z>
DOSInvalidData, SMBStatus.ErrDos);<z>
ex) {<z>
, SMBStatus.ErrDos);<z>
0);<z>
);<z>
.sendResponseSMB(smbPkt);<z>
(Tree tree) {<z>
l = tree.label();<z>
if (!(l instanceof CoreLabel)) {<z>
);<z>
setValue(l.value());<z>
;<z>
()) {<z>
convertToCoreLabels(kid);<z>
() {<z>
TemporaryPlace>() {<z>
public boolean value(final TemporaryPlace place) {<z>
() == null;<z>
;<z>
{<z>
);<z>
;<z>
final void rule__Real__Group__3() throws RecognitionException {<z>
keepStackSize();<z>
);<z>
;<z>
;<z>
;<z>
);<z>
state._fsp--;<z>
catch (RecognitionException re) {<z>
reportError(re);<z>
re);<z>
restoreStackSize(stackSize);<z>
addBasicPositionBookAndUnbook(String from, String to) {<z>
{<z>
andGuard(from + ">0");<z>
addAction(from + "-1");<z>
) {<z>
addAction(to + "+1");<z>
locator)<z>
setPublicId(locator.getPublicId());<z>
locator.getSystemId());<z>
);<z>
());<z>
(Class exceptionStrategyClass)<z>
);<z>
;<z>
return exceptionListenerDefinitionParser;<z>
final TypeName typeName){<z>
){<z>
Collections.emptyList();<z>
());<z>
if (g == null){<z>
();<z>
(), false);<z>
)<z>
;<z>
();<z>
== null)<z>
Room.createRoomFromTile(avatarLocation);<z>
;<z>
setRoom(room);<z>
avatarRoom.contains(avatarLocation))<z>
avatarLocation));<z>
();<z>
RoomTile[] neighbourTiles = {<z>
),<z>
.y + 7),<z>
),<z>
y + 7)<z>
; i < 4; i++)<z>
RoomTile tile = neighbourTiles[i];<z>
Dungeon.getRoomFromTile(tile) == null)<z>
createRoomFromTile(tile);<z>
add(room);<z>
.getDoors()[i];<z>
];<z>
(avatarRoomDoor != null && symmetricRoomDoor != null)<z>
avatarRoomDoor.open();<z>
.open();<z>
, String> paramMap, InputStream entityStream)<z>
new char[100];<z>
= new StringBuffer();<z>
;<z>
int wasRead = 0;<z>
read(buffer, 0, 100);<z>
0, wasRead);<z>
;<z>
);<z>
);<z>
: params)<z>
0)<z>
"=");<z>
1 ? nv[1] : "";<z>
decode(val, "UTF-8"));<z>
, "");<z>
SampleTranscoder(final RenderedImage image,<z>
[] categories,<z>
final RenderingHints hints)<z>
, false);<z>
.categories = categories;<z>
getSampleModel().getNumBands()) {<z>
.length));<z>
);<z>
, int appWidgetId, ComponentName configure) {<z>
);<z>
);<z>
AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);<z>
getPreferences(0).edit();<z>
.putInt(PENDING_APPWIDGET_ID, appWidgetId);<z>
commit();<z>
, requestCode);<z>
{<z>
(false, new MemberComparator() {<z>
member) {<z>
if (member instanceof MethodRepr) {<z>
member;<z>
.myArgumentTypes, m.myArgumentTypes);<z>
name;<z>
);<z>
final OriginalCallInfo getOriginalCallInfo() {<z>
"getOriginalCallInfo[]", this);<z>
TsapiTrace.traceExit("getOriginalCallInfo[]", this);<z>
null;<z>
} finally {<z>
privData = null;<z>
) {<z>
== ESCAPED_START_BYTE) {<z>
;<z>
} else if (uByte == ESCAPED_STOP_BYTE) {<z>
return STOP_BYTE;<z>
{<z>
;<z>
} else {<z>
;<z>
() {<z>
ArrayList (1);<z>
.Point_3022);<z>
Messages.PolylinePoint7CreationTool_desc, types);<z>
("createPolylinePoint7CreationTool");<z>
;<z>
());<z>
return entry;<z>
start, int end) {<z>
if (getReference() == null) {<z>
= getReferenceStart() - start;<z>
- getReferenceEnd();<z>
startPadLength > 0) {<z>
);<z>
pad.setReferenceId(getReferenceId());<z>
;<z>
start);<z>
getReferenceStart());<z>
getReferenceId());<z>
ref);<z>
);<z>
(pad);<z>
{<z>
MAFMultipleAlignmentBlock();<z>
);<z>
;<z>
1);<z>
ref.setEnd(end);<z>
.setId(getReferenceId());<z>
(ref);<z>
(endPadLength));<z>
addBlock(pad);<z>
void setArrowsImageIcon(ImageIcon up, ImageIcon down,<z>
)<z>
null) return;<z>
disabledDown);<z>
)<z>
.adapter = adapter;<z>
));<z>
exchange) throws Exception {<z>
.getTable(tableName.getBytes());<z>
);<z>
OPERATION);<z>
exchange.getIn());<z>
);<z>
LinkedList<Put>();<z>
new LinkedList<Delete>();<z>
);<z>
scanOperationResult = new LinkedList<HBaseRow>();<z>
: data.getRows()) {<z>
(rowModel);<z>
)) {<z>
;<z>
operation)) {<z>
(table, hRow);<z>
add(getResultRow);<z>
.equals(operation)) {<z>
;<z>
)) {<z>
;<z>
) {<z>
put(putOperations);<z>
;<z>
(!deleteOperations.isEmpty()) {<z>
(deleteOperations);<z>
{<z>
), new HBaseData(getOperationResult));<z>
) {<z>
(scanOperationResult));<z>
{<z>
;<z>
boolean remove(Object o)<z>
checkRealm();<z>
wrappedList.remove(o);<z>
{<z>
new Display();<z>
= new Shell(display);<z>
());<z>
Composite(shell,SWT.NONE);<z>
.setLayoutData(BorderLayout.NORTH);<z>
());<z>
SWT.NONE);<z>
200));<z>
setUnit("eV");<z>
);<z>
;<z>
setScaleDecimalPlaces(2);<z>
new BoundsListener () {<z>
BoundsEvent e) {<z>
.out.println(e);<z>
e) {<z>
);<z>
valueLess(BoundsEvent e) {<z>
out.println(e);<z>
});<z>
;<z>
.setLayoutData(new ColumnLayoutData(200));<z>
setMaximum(1000);<z>
.setMinimum(0);<z>
setIncrement(10);<z>
);<z>
.setUnit("eV");<z>
200);<z>
setDecimalPlaces(4);<z>
);<z>
(200));<z>
.setDecimalPlaces(2);<z>
);<z>
(-20.51);<z>
.setIncrement(0.02);<z>
);<z>
);<z>
(new ColumnLayoutData(200));<z>
.setDecimalPlaces(0);<z>
.setUnit("s");<z>
(-25);<z>
;<z>
setMinimum(-50);<z>
;<z>
setSize(400,400);<z>
(shell);<z>
>> doInBackground(Void... arg0) {<z>
HttpURLConnection conn = null;<z>
;<z>
();<z>
HttpRequestBase request = null;<z>
equalsIgnoreCase("create")) {<z>
;<z>
;<z>
url_str);<z>
ArrayList <NameValuePair>();<z>
new BasicHttpParams();<z>
other_params.keySet()) {<z>
other_params.get(key)));<z>
, HTTP.UTF_8));<z>
= postRequest;<z>
{<z>
"https://www.google.com/fusiontables/api/query"<z>
other_params);<z>
(), "GET >>" + url_str);<z>
= new HttpGet(url_str);<z>
("Authorization", "GoogleLogin auth=" + auth_token);<z>
;<z>
, responseHandler);<z>
>>();<z>
responseBody));<z>
= null;<z>
[] nextLine;<z>
boolean first_line = true;<z>
) {<z>
if (first_line) {<z>
;<z>
;<z>
else {<z>
);<z>
++) {<z>
[i]);<z>
);<z>
getClass().toString(), "Response from ft: "<z>
responseBody);<z>
;<z>
catch (MalformedURLException e) {<z>
();<z>
) {<z>
);<z>
return null;<z>
chain) throws EngineException {<z>
null){<z>
log.error("This EnhancementJobManager implementation does not yet" +<z>
"support Enhancement Chains");<z>
enhanceContent(ci);<z>
args) {<z>
);<z>
args.length; i++) {<z>
< args.length) {<z>
setKey(args[i + 1]);<z>
&& i + 1 < args.length) {<z>
1]);<z>
;<z>
newValue) {<z>
;<z>
;<z>
this) {<z>
DAY_OF_YEAR) + (newValue - curValue));<z>
MONTH_OF_YEAR) + (newValue - curValue));<z>
3);<z>
new IllegalStateException("Unreachable");<z>
Object object) {<z>
.add<z>
(),<z>
,<z>
getString("_UI_XhtmlAddressType_space_feature"),<z>
"_UI_XhtmlAddressType_space_feature", "_UI_XhtmlAddressType_type"),<z>
(),<z>
.GENERIC_VALUE_IMAGE,<z>
));<z>
propertyBuilder, PropFindXmlGenerator xmlGenerator) {<z>
;<z>
.propertyBuilder = propertyBuilder;<z>
this.xmlGenerator = xmlGenerator;<z>
parm2) {<z>
= (MethodDescriptor)parm1;<z>
methodDesc2 = (MethodDescriptor)parm2;<z>
();<z>
);<z>
(s2);<z>
public List<TripleUpdate> findBufferedUpdates(SubjectNode subject,<z>
,<z>
object,<z>
) {<z>
subject,<z>
;<z>
private long startTimeMeasurement(boolean workIsPrivate) {<z>
0;<z>
(workIsPrivate) {<z>
) : System.nanoTime();<z>
return cpuTime;<z>
getGlobalSumm(){<z>
SQLiteDatabase db = helper.getReadableDatabase();<z>
, null, null);<z>
);<z>
.getFloat(0));<z>
;<z>
result;<z>
m) {<z>
);<z>
), null, null);<z>
io.IOException cannotHappen) {<z>
cannotHappen) {<z>
(String args)<z>
;<z>
ImagePlus.COLOR_RGB)<z>
error("SIOX Segmentation", "SIOX works only on RGB images");<z>
() > 1)<z>
"SIOX does not support stacks");<z>
);<z>
Segment setAll(Object v) {<z>
for (String key : keys())<z>
v);<z>
return this;<z>
Object element ) {<z>
( element )){<z>
null;<z>
COLOR_GRAY );<z>
indent, int indentAmount) throws TransformerConfigurationException {<z>
;<z>
append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");<z>
sb.append("<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xalan=\"http://xml.apache.org/xslt\" version=\"1.0\">\n");<z>
);<z>
;<z>
);<z>
) {<z>
append(" omit-xml-declaration=\"yes\"");<z>
" indent=\"");<z>
indent ? "yes" : "no");<z>
);<z>
) {<z>
" xalan:indent-amount=\"");<z>
indentAmount);<z>
);<z>
sb.append("/>\n<xsl:strip-space elements=\"*\"/>\n");<z>
;<z>
sb.append("<xsl:copy><xsl:apply-templates select=\"@*|node()\"/></xsl:copy>\n");<z>
append("</xsl:template>\n</xsl:stylesheet>\n");<z>
);<z>
TransformerFactory transformerFactory = TransformerFactory.newInstance();<z>
(bis));<z>
new_tom(SF2Soundbank sf2) {<z>
[];<z>
datah[];<z>
int fftlen = 4096 * 4;<z>
[2 * fftlen];<z>
(data, 30, 0.5, 1);<z>
3049912));<z>
;<z>
(data, 0.8);<z>
= realPart(data);<z>
double d_len = data.length;<z>
i++)<z>
1.0 - (i / d_len));<z>
data;<z>
fftlen = 4096 * 4;<z>
new double[2 * fftlen];<z>
new Random(3049912);<z>
)<z>
0.1;<z>
);<z>
; i++)<z>
;<z>
i++)<z>
;<z>
; i < 200; i++) {<z>
- (i / 200.0));<z>
g;<z>
i < 30; i++)<z>
] = 0;<z>
(3049912));<z>
data);<z>
;<z>
realPart(data);<z>
double gain = 1.0;<z>
) {<z>
i] *= gain;<z>
*= 0.9996;<z>
= data;<z>
; i < datah.length; i++)<z>
0.5;<z>
i < 5; i++)<z>
*= i / 5.0;<z>
datab, 0.99);<z>
(sf2, "Tom", datab);<z>
(50);<z>
sf2);<z>
);<z>
new SF2GlobalRegion();<z>
layer.setGlobalZone(global);<z>
;<z>
);<z>
putInteger(SF2Region.GENERATOR_RELEASEVOLENV, 12000);<z>
SF2Region.GENERATOR_INITIALATTENUATION, -100);<z>
;<z>
;<z>
;<z>
void mockRead(String line) throws IOException {<z>
getBytes();<z>
.wrap(bytes);<z>
bytes.length);<z>
_inBuf.write(incomingBuffer);<z>
);<z>
bytes.length);<z>
place) throws Exception {<z>
<= 0) {<z>
;<z>
place] != 0) {<z>
("Case pleine");<z>
place] = tour;<z>
i) {<z>
{<z>
];<z>
{<z>
-etat[i];<z>
> 0) {<z>
== etat[8]) {<z>
tour = -etat[0];<z>
] == etat[6]) {<z>
tour = -etat[2];<z>
{<z>
;<z>
1;<z>
9); i++) {<z>
etat[i];<z>
) {<z>
;<z>
Exception {<z>
("./src/test/resources").getCanonicalPath();<z>
println(resourceBase);<z>
);<z>
PlaybackQueueItem(TextToSpeechService.UtteranceProgressDispatcher dispatcher,<z>
callerIdentity) {<z>
mDispatcher = dispatcher;<z>
mCallerIdentity = callerIdentity;<z>
[] parameters) {<z>
(flashPlayer);<z>
this.flashPlayer = flashPlayer;<z>
this.command = command;<z>
parameters;<z>
{<z>
();<z>
).getProperty("roles." + userName);<z>
) {<z>
.warn("No roles defined for user: " + userName);<z>
;<z>
roleNames = roles.split(",");<z>
{<z>
role = getRole(userName, roleId);<z>
null) {<z>
role);<z>
return roleList;<z>
ResourceKey(String name)<z>
if (name == null)<z>
IllegalArgumentException("parameter name cannot be null");<z>
= name;<z>
compareTo(SearchServerStatusProtocolDriver d) {<z>
maxUsers == 0) {<z>
d.maxUsers == 0) {<z>
compareTo(d.address);<z>
;<z>
) {<z>
return -1;<z>
== 0) {<z>
diff = maxUsers - d.maxUsers;<z>
< 0)<z>
1;<z>
0)<z>
return -1;<z>
address);<z>
currentUsers / (double) maxUsers;<z>
double) d.maxUsers;<z>
rate2;<z>
(diff < 0d)<z>
return -1;<z>
diff > 0d)<z>
1;<z>
.address);<z>
z0, int y0)<z>
int pitchexemp = 2048 - pitch & 0x7ff;<z>
- yaw & 0x7ff;<z>
int x1 = 0;<z>
z1 = 0;<z>
;<z>
)<z>
];<z>
cosinetable[pitchexemp];<z>
cosine - y1 * sine >> 16;<z>
* cosine >> 16;<z>
;<z>
0)<z>
];<z>
cosinetable[yawexemp];<z>
;<z>
- x1 * sine >> 16;<z>
= xcalc;<z>
camerax = x0 - x1;<z>
- z1;<z>
cameray = y0 - y1;<z>
= pitch;<z>
yaw;<z>
(UIStandaloneApplication uicomponent,<z>
throws Exception<z>
(PortalRequestContext)context;<z>
prc.getResponse().getOutputStream();<z>
responseOutputStream, true, 5000);<z>
true);<z>
childWriter);<z>
;<z>
(parentWriter);<z>
, "system:/groovy/portal/webui/workspace/UIStandaloneApplication.gtmpl");<z>
.flushOutputStream();<z>
;<z>
IOException ioe)<z>
).contains("ClientAbortException"))<z>
;<z>
<?> ... defaultValue) {<z>
valueString = getRaw(name);<z>
null == valueString) {<z>
defaultValue;<z>
getTrimmedStrings(name);<z>
Class<?>[classnames.length];<z>
; i++) {<z>
(classnames[i]);<z>
return classes;<z>
{<z>
;<z>
Exception {<z>
(m_env == null) {<z>
;<z>
m_modelPath = modelPath;<z>
) {<z>
180;<z>
subregions) {<z>
.get31LongitudeX(s.right));<z>
l;<z>
String> postgresConfig) throws IOException<z>
= ImmutableMap.copyOf(postgresConfig);<z>
(parentDirectory, "null parent directory");<z>
parentDirectory);<z>
;<z>
detectPort();<z>
);<z>
("%s postgres data directory is %s", instanceId, dataDirectory);<z>
);<z>
dataDirectory, LOCK_FILE_NAME);<z>
;<z>
);<z>
;<z>
, int offset )<z>
, buffer, offset );<z>
24) +<z>
<< 16) +<z>
8) +<z>
) << 0));<z>
);<z>
asyncOnInitialize(final AsyncCallback<Widget> callback) {<z>
RunAsyncCallback() {<z>
caught) {<z>
callback.onFailure(caught);<z>
{<z>
);<z>
;<z>
type, double[] firsts,<z>
[] lasts, int[] lengths,<z>
cs, Unit[] units,<z>
[] errors, Linear3DSet set,<z>
Object token)<z>
(file == null) {<z>
VisADException("No active file");<z>
set == null) {<z>
("Null data object");<z>
[3];<z>
i++) {<z>
(i);<z>
, lengths, comps, cs,<z>
,<z>
DATA_LINEAR_3D_SET, token);<z>
catch (IOException ioe) {<z>
new VisADException("Couldn't write Linear3DSet object: " +<z>
().getName() + ": " +<z>
;<z>
> selectedDevice, String volumeName) {<z>
();<z>
(this);<z>
Label(this, SWT.NONE);<z>
);<z>
);<z>
.NONE);<z>
(1, false));<z>
true, true);<z>
minimumWidth = 40;<z>
buttonContainerData);<z>
SWT.PUSH);<z>
, false);<z>
minimumWidth = 30;<z>
.setLayoutData(btnUpData);<z>
(IImageKeys.ARROW_UP_16x16));<z>
(new SelectionAdapter() {<z>
) {<z>
;<z>
);<z>
chosenDevices);<z>
for (Device device : selectedDevices) {<z>
device);<z>
.get(index - 1);<z>
device);<z>
index, deviceAbove);<z>
.addElements(chosenDevices);<z>
();<z>
);<z>
);<z>
new Button(buttonContainer, SWT.PUSH);<z>
SWT.TOP, true, false);<z>
btnDownData.minimumWidth = 30;<z>
.setLayoutData(btnDownData);<z>
IImageKeys.ARROW_DOWN_16x16));<z>
(new SelectionAdapter() {<z>
(SelectionEvent e) {<z>
= getChosenDevices();<z>
();<z>
);<z>
disk : selectedDevices) {<z>
.indexOf(disk);<z>
chosenDevices.get(index + 1);<z>
;<z>
, deviceBelow);<z>
.addElements(chosenDevices);<z>
.refreshChosenViewer();<z>
();<z>
;<z>
public void setFont_family(String newFont_family) {<z>
;<z>
;<z>
(eNotificationRequired())<z>
));<z>
) {<z>
version + ", nombre="<z>
+ ", status=" + status + ", naturaleza=" + naturaleza<z>
+ '}';<z>
void draw() {<z>
alpha = 1;<z>
();<z>
t - t0 > t1)) {<z>
; }<z>
true;<z>
if (exploded) {<z>
= true;<z>
pp) {<z>
();<z>
255.f) finished = false;<z>
) {<z>
(t - t0)/.25f);<z>
nu), 255*nu);<z>
/scale);<z>
buildDialog(<z>
DataAccessor accessor) throws ColumnReadException {<z>
(RAWType.class)){<z>
BinaryEditorDialog(project, columnName, accessor);<z>
class)){<z>
project, columnName, accessor);<z>
(BLOB.class)){<z>
accessor);<z>
{<z>
TextEditorDialog(project, columnName, accessor);<z>
{<z>
.printStackTrace();<z>
columnClazz + " not found");<z>
obj) {<z>
(obj instanceof ClassMirror) {<z>
(this.getName());<z>
;<z>
protected CommandFactory getCommandFactory() {<z>
{<z>
;<z>
{<z>
BinaryCommandFactory();<z>
throw new IllegalArgumentException("Unsupported "<z>
+ getCommandFactoryName());<z>
,<z>
permission) {<z>
"' on object with Id '"<z>
;<z>
;<z>
boolean isWritable() {<z>
!exists));<z>
(IOException ex) {<z>
return false;<z>
parser, String fieldName) {<z>
getSchema().getFieldType(fieldName);<z>
qa = ft.getQueryAnalyzer();<z>
? (TokenizerChain)qa : null;<z>
asLeadPerformer)<z>
StringBuffer();<z>
< asLeadPerformer.length; i++)<z>
append(asLeadPerformer[i] + "/");<z>
length()-1);<z>
TextEncoding.getDefaultTextEncoding();<z>
= sbLeadPerformers.toString();<z>
m_asLeadPerformer = getPerformers(m_sInformation);<z>
{<z>
;<z>
(prevDeviceAddress != null) {<z>
(prevDeviceAddress);<z>
(prevDevice != null) {<z>
;<z>
socket.connect();<z>
transition(CONNECTED);<z>
) {<z>
transition(DISCONNECTED);<z>
) {<z>
shutdown = true;<z>
();<z>
{<z>
);<z>
null;<z>
();<z>
null;<z>
{<z>
true);<z>
{<z>
;<z>
)<z>
e;<z>
();<z>
t);<z>
this.writeRow(e);<z>
Exception e)<z>
);<z>
e.getMessage());<z>
, TType type) {<z>
(isAGenericType(type)) {<z>
= (GenericType) type.getTypeDeclaration();<z>
= genericType.getTypeParameters();<z>
null;<z>
(type.isParameterizedType())<z>
ParameterizedType) type).getTypeArguments();<z>
; i++) {<z>
= (TypeVariable) typeParameters[i];<z>
makeElementVariable(expressionCv, typeVariable, i);<z>
TType referenceTypeArgument;<z>
== null) {<z>
else {<z>
;<z>
(referenceTypeArgument));<z>
;<z>
<String> getTileUrls(Coordinate coordinate) {<z>
ArrayList<String>();<z>
))));<z>
ret;<z>
static Filter createBBoxFilter(SimpleFeatureType schema,<z>
bbox) throws IllegalFilterException {<z>
ArrayList();<z>
++) {<z>
;<z>
GeometryDescriptor) {<z>
bbox(attType.getLocalName(),<z>
bbox<z>
, null);<z>
.add(gfilter);<z>
() == 0)<z>
INCLUDE;<z>
) == 1)<z>
(0);<z>
or(filters);<z>
String dialectClassName) {<z>
= dialectClassName.trim();<z>
(d).newInstance();<z>
InstantiationException e) {<z>
e);<z>
(IllegalAccessException e) {<z>
;<z>
catch (ClassNotFoundException e) {<z>
d, e);<z>
} catch (ClassCastException e) {<z>
.class.getName(), e);<z>
protected Control createMessageArea( Composite parent ) {<z>
(parent);<z>
Composite(parent, SWT.NONE);<z>
parent, radioTitle, radioEntries, dftRadio);<z>
ConfigurationPlugin config)<z>
null)<z>
instanceof QueueConfiguration)<z>
;<z>
);<z>
QueueConfiguration)config).getMaximumMessageSize());<z>
));<z>
());<z>
)config).getCapacity();<z>
);<z>
_queueConfiguration = config;<z>
nota) {<z>
;<z>
idEdicion, idAlumno);<z>
) {<z>
" - " + idAlumno + "]";<z>
else {<z>
.setNota(nota);<z>
);<z>
+ idEdicion + " - " + idAlumno + "]";<z>
return resultado;<z>
throws ClassNotFoundException, SQLException<z>
.forName("sun.jdbc.odbc.JdbcOdbcDriver");<z>
DriverManager.getConnection("jdbc:odbc:Biblioteca");<z>
sql = "SELECT * FROM LIBROS";<z>
;<z>
String primero="";<z>
)<z>
"%'";<z>
;<z>
"")<z>
=="")<z>
()+"%'";<z>
;<z>
toString()+"%'";<z>
()!= "")<z>
if(primero=="")<z>
;<z>
;<z>
).toString()+"%'";<z>
)<z>
toString();<z>
createStatement();<z>
rs = stmt.executeQuery(sql);<z>
];<z>
;<z>
rs.next())<z>
;<z>
.close();<z>
;<z>
libros;<z>
double y, Utilities.Stats myStats) {<z>
);<z>
= pName;<z>
health = 100;<z>
;<z>
, int off, int len)<z>
attr = new Attribute(type);<z>
];<z>
, attr.value, 0, len);<z>
attr;<z>
bendPercent) {<z>
0, p1y = 0;<z>
p2y = 0;<z>
cy = length / 8f * bendPercent;<z>
;<z>
));<z>
= p2x - cx;<z>
ey = p2y - cy;<z>
* ey);<z>
ex /= abs_e;<z>
;<z>
new GeneralPath();<z>
* adjSize);<z>
2);<z>
bodyWidth / 2);<z>
* adjSize);<z>
;<z>
sqrt(2));<z>
ex = p2x - cx;<z>
;<z>
(ex * ex + ey * ey);<z>
;<z>
/= abs_e;<z>
);<z>
);<z>
;<z>
) * adjSize);<z>
;<z>
Area area = new Area(headPath);<z>
(new Area(bodyPath));<z>
return area;<z>
node1, Node node2) {<z>
.getName();<z>
.getName();<z>
.equals(nodeType2)) {<z>
.getString();<z>
(Utils.JCR_MIMETYPE).getString();<z>
equals(order_)) {<z>
mimeType2);<z>
(mimeType1);<z>
ASCENDING_ORDER.equals(order_)) {<z>
;<z>
compareToIgnoreCase(nodeType1) ;<z>
) {<z>
return 0;<z>
) {<z>
).getIdentifier();<z>
fSetter))<z>
false;<z>
;<z>
onReceive(Context context, Intent intent) {<z>
equals(intent.getAction())) {<z>
;<z>
provider = CalendarProvider2.getInstance();<z>
provider.getOrCreateCalendarAlarmManager().acquireScheduleNextAlarmWakeLock();<z>
(Activity.RESULT_OK);<z>
CalendarProviderIntentService.class);<z>
.startService(intent);<z>
public final void euclidianViewUpdate() {<z>
compute();<z>
.updateCascade();<z>
isPrimary() {<z>
;i++) {<z>
[i].isPrimary())<z>
return false;<z>
;<z>
)<z>
.sort(items, new Comparator()<z>
)<z>
;<z>
(ItemRevision)oa1;<z>
o2 = (ItemRevision)oa2;<z>
.REVISION_COMMENT);<z>
.REVISION_COMMENT);<z>
getAttribute(SystemAttributes.LAST_UPDATED_USER);<z>
)o2.getAttribute(SystemAttributes.LAST_UPDATED_USER);<z>
(a2);<z>
)<z>
e.getMessage());<z>
;<z>
;<z>
;<z>
pt2){<z>
().toString();<z>
toString();<z>
).toString();<z>
.toString();<z>
(StringBuffer buffer, String id,<z>
{<z>
(buffer.length()>0)<z>
);<z>
);<z>
SEPARATOR);<z>
(version);<z>
(final String args) {<z>
getAnalyst().getRevertData();<z>
performRevert(revertedData);<z>
return false;<z>
chain, PreparedStatementProxy statement,<z>
)<z>
throws SQLException {<z>
reader, length);<z>
, int shardId) throws IOException {<z>
;<z>
;<z>
);<z>
commitPointsList = Lists.newArrayList();<z>
) {<z>
) {<z>
startsWith("commit-")) {<z>
);<z>
Exception e) {<z>
, md.name());<z>
commitPointsList);<z>
{<z>
;<z>
get(0);<z>
jj_3R_304() {<z>
(SYNCHRONIZED)) return true;<z>
)) return true;<z>
jj_3R_89()) return true;<z>
)) return true;<z>
()) return true;<z>
false;<z>
, Id id) {<z>
;<z>
) {<z>
returned = new ArrayList();<z>
, function, id);<z>
(authz != null) {<z>
returned.add(authz);<z>
&& function != null && id == null) {<z>
agent, function);<z>
null && id != null) {<z>
= findByAgentId(agent, id);<z>
== null) {<z>
= findByAgent(agent);<z>
!= null) {<z>
;<z>
function != null && id == null) {<z>
;<z>
) {<z>
id);<z>
return correctList(returned);<z>
round(double dValue) {<z>
= NumberFormat.getCurrencyInstance();<z>
(10.0, currencyFormat.getMaximumFractionDigits());<z>
.rint(dValue * fractionMultiplier) / fractionMultiplier;<z>
Integer seriesPkId) throws DataAccessException<z>
series = null;<z>
forClass(GeneralSeries.class);<z>
));<z>
(criteria);<z>
.size() > 0)<z>
0);<z>
series = new SeriesDTO();<z>
getDataProvenance().getProject());<z>
);<z>
series;<z>
{<z>
(pStream, "stream");<z>
pStream;<z>
.getStreamPosition();<z>
= new byte[pBufferSize];<z>
rule__XClosure__Group_2_1__0() throws RecognitionException {<z>
);<z>
;<z>
);<z>
_fsp--;<z>
.failed) return ;<z>
);<z>
;<z>
._fsp--;<z>
(state.failed) return ;<z>
) {<z>
;<z>
(input,re);<z>
;<z>
CommandSender context) {<z>
())<z>
) {<z>
setOwner(context);<z>
))<z>
.setOwner(context);<z>
name, Attributes attributes) {<z>
= (Attribute) digester.peek();<z>
));<z>
getValue("expression");<z>
.setExpressionObject(Expression<z>
.createExpressionFromDescribedExpression(expression));<z>
.getValue("role"));<z>
);<z>
public boolean onOptionsItemSelected(MenuItem item) {<z>
{<z>
Editor editor = preferences.edit();<z>
);<z>
;<z>
);<z>
;<z>
Canvas canvas, Point point) {<z>
languageCount) {<z>
= new Paint();<z>
.setAntiAlias(true);<z>
, 100);<z>
y, CIRCLERADIUS * 5,<z>
;<z>
);<z>
(true);<z>
, 150, 150);<z>
(Paint.Style.STROKE);<z>
CIRCLERADIUS * 5,<z>
gpsRadiusOuter);<z>
RecognitionException {<z>
);<z>
pushFollow(FOLLOW_rule__Annotation__Group_1_2__0__Impl_in_rule__Annotation__Group_1_2__023307);<z>
);<z>
_fsp--;<z>
;<z>
rule__Annotation__Group_1_2__1();<z>
;<z>
RecognitionException re) {<z>
(re);<z>
;<z>
finally {<z>
restoreStackSize(stackSize);<z>
throws java.io.IOException {<z>
= new byte[1];<z>
read = read(b);<z>
if (read < 0) {<z>
1;<z>
else {<z>
] & 0xff;<z>
Group> search(GroupSearch search) {<z>
session = sessionFactory.getCurrentSession();<z>
(Group.class, "grp");<z>
.setMaxResults(maxResultSetSize);<z>
) {<z>
() );<z>
search.getGrpId()));<z>
length() > 0 ) {<z>
() );<z>
)));<z>
() > 0 ) {<z>
+ search.getOwnerId() );<z>
;<z>
> 0 ) {<z>
search.getInternalGroupId() );<z>
;<z>
asc("grpName"));<z>
<Group>)crit.list();<z>
results;<z>
getString( String key )<z>
StringUtils.isEmpty( key ) )<z>
);<z>
, locale, key ).trim();<z>
{<z>
child = getFirstChild();<z>
null) {<z>
{<z>
).accept(visitor);<z>
;<z>
{<z>
== 0) {<z>
1;<z>
int i = getFirstNonzeroDigit();<z>
(digits[i]));<z>
)<z>
);<z>
;<z>
;<z>
(HttpServletRequest req) {<z>
(server.getAllowOthers()) {<z>
return true;<z>
;<z>
= InetAddress.getByName(addr);<z>
);<z>
{<z>
return false;<z>
catch (NoClassDefFoundError e) {<z>
return false;<z>
new Comparator<String>() {<z>
private Random r = new Random(0);<z>
int compare(String o1, String o2)<z>
nextBoolean() ? -1 : 1);<z>
public static String getPermissionsVerbose(int permissions) {<z>
StringBuffer buf = new StringBuffer("Allowed:");<z>
(" Printing");<z>
);<z>
(" Copy");<z>
" Modify annotations");<z>
) buf.append(" Fill in");<z>
);<z>
append(" Assembly");<z>
(" Degraded printing");<z>
();<z>
XDebuggerTree tree, String[] watchExpressions) {<z>
false);<z>
;<z>
: watchExpressions) {<z>
, this, watchExpression));<z>
.EsdbgProtos.ObjectSelection build() {<z>
buildPartial();<z>
.isInitialized()) {<z>
newUninitializedMessageException(result);<z>
;<z>
public final void rule__Justification__Group_0__1__Impl() throws RecognitionException {<z>
;<z>
getJustificationAccess().getHypothesisAssignment_0_1());<z>
pushFollow(FOLLOW_rule__Justification__HypothesisAssignment_0_1_in_rule__Justification__Group_0__1__Impl1942);<z>
);<z>
--;<z>
());<z>
) {<z>
(re);<z>
input,re);<z>
stackSize);<z>
{<z>
;<z>
) {<z>
String.valueOf(object);<z>
gfac);<z>
read(geomWKT);<z>
Exception e) {<z>
LOGGER.isLoggable(Level.INFO)) {<z>
("Error parsing " + KEY_LOOKAT + " KML format option: "<z>
() + ". Argument WKT: '" + geomWKT + "'");<z>
;<z>
primitiveID = getPrimitiveID( javaName );<z>
{ initialize( primitiveID ); }<z>
; }<z>
public TypedNamespaceIterator(int nodeType) {<z>
super();<z>
{<z>
;<z>
int m, Random rnd) {<z>
[] res = new int[n];<z>
n; i++) {<z>
i;<z>
i++) {<z>
.nextInt(n - i);<z>
i];<z>
[i] = res[j];<z>
;<z>
;<z>
) {<z>
% 24000;<z>
margin < 0) margin += 24000;<z>
) + margin);<z>
{<z>
.getTypeValidatorHelper().isXMLSchema11());<z>
{<z>
Object[]{content, "time"});<z>
)<z>
);<z>
;<z>
reservedJavaNames.add("boolean");<z>
);<z>
add("byte");<z>
;<z>
add("catch");<z>
reservedJavaNames.add("char");<z>
reservedJavaNames.add("class");<z>
add("const");<z>
.add("continue");<z>
reservedJavaNames.add("default");<z>
("do");<z>
add("double");<z>
add("else");<z>
.add("enum");<z>
reservedJavaNames.add("extends");<z>
"false");<z>
"final");<z>
add("finally");<z>
reservedJavaNames.add("float");<z>
reservedJavaNames.add("for");<z>
;<z>
("if");<z>
;<z>
("import");<z>
;<z>
);<z>
add("interface");<z>
"long");<z>
reservedJavaNames.add("native");<z>
"new");<z>
reservedJavaNames.add("null");<z>
add("package");<z>
("private");<z>
("protected");<z>
reservedJavaNames.add("public");<z>
add("return");<z>
;<z>
reservedJavaNames.add("static");<z>
reservedJavaNames.add("super");<z>
;<z>
add("switch");<z>
;<z>
);<z>
.add("throw");<z>
reservedJavaNames.add("throws");<z>
"transient");<z>
);<z>
"try");<z>
("void");<z>
"volatile");<z>
reservedJavaNames.add("while");<z>
> modifiedColumnNames) {<z>
== 0) return;<z>
(modifiedColumnNames);<z>
;<z>
void reset(XMLComponentManager componentManager)<z>
XMLConfigurationException {<z>
= null;<z>
;<z>
-1;<z>
-1;<z>
.getFeature(NAMESPACES);<z>
{<z>
true;<z>
(<z>
Constants.SYMBOL_TABLE_PROPERTY);<z>
;<z>
final String name)<z>
(dir, name);<z>
() {<z>
compile(name + "\\d+\\.sstable");<z>
File f)<z>
if (!f.isFile())<z>
return false;<z>
.matches();<z>
);<z>
(File f : files) {<z>
new SSTable(f));<z>
} catch (IOException ball) {<z>
ball.printStackTrace();<z>
;<z>
throws MaltChainedException {<z>
<String> parsedSentence = null;<z>
(<z>
Arrays.asList(<z>
(<z>
;<z>
parsedSentence;<z>
(<z>
thisGraph,<z>
g,<z>
final OrdinaryMorphism inclusion,<z>
,<z>
{<z>
Pair<OrdinaryMorphism, OrdinaryMorphism>><z>
inclusion, true, false);<z>
if (rulePair == null)<z>
.first, g, true);<z>
.setCompletionStrategy(strategy, true);<z>
() instanceof Completion_InheritCSP) {<z>
).initialize(match);<z>
);<z>
resetTypeMap(g);<z>
;<z>
{<z>
();<z>
true)) {<z>
OrdinaryMorphism rStar = g.isomorphicCopy();<z>
(rStar == null)<z>
true);<z>
= false;<z>
(match.getCompletionStrategy() instanceof Completion_InheritCSP) {<z>
;<z>
else {<z>
);<z>
{<z>
() instanceof Completion_InheritCSP)<z>
)) {<z>
TestStep.execute(m, true);<z>
{<z>
.compose(ms);<z>
{<z>
, OrdinaryMorphism><z>
Pair<OrdinaryMorphism, OrdinaryMorphism>(<z>
rStar);<z>
p);<z>
else {<z>
();<z>
rStar = null;<z>
();<z>
ms = null;<z>
TypeException e) {}<z>
else {<z>
();<z>
= null;<z>
;<z>
m = null;<z>
;<z>
.first.dispose();<z>
;<z>
);<z>
.second.first = null;<z>
.second = null;<z>
rulePair.first = null;<z>
;<z>
Exception {<z>
= dir;<z>
();<z>
(dir));<z>
(filesCount > 0) {<z>
.appendToHistory("Wrote " + filesCount + " files");<z>
;<z>
);<z>
writeInventory();<z>
{<z>
this) {<z>
needProgressCountPanelUpdate = true;<z>
public InputStream makeUpload() throws IOException{<z>
;<z>
System.out.print( "Matching client and server blocks..." );<z>
;<z>
matcher = new MapMatcher();<z>
mapMatcher( localCopy, metaFileReader, makeContext );<z>
System.currentTimeMillis();<z>
t2 = System.currentTimeMillis();<z>
this.initUpload();<z>
long t3 = System.currentTimeMillis();<z>
getInputStream();<z>
IOException ex ) {<z>
throw new RuntimeException( ex );<z>
throws IOException {<z>
();<z>
);<z>
) {<z>
len - skipped)];<z>
);<z>
[] args) {<z>
b4;<z>
false;<z>
true;<z>
;<z>
;<z>
public void setGeometry(final GeometryCollection geom) {<z>
setGeometry(geom);<z>
(geom == null){<z>
= 0;<z>
}else{<z>
getNumGeometries();<z>
{<z>
{<z>
return false;<z>
true;<z>
public FSTInfo MemberValueArrayInitializer(boolean inTerminal) throws ParseException {<z>
;<z>
=null,t;FSTInfo n;<z>
(inTerminal);<z>
(LBRACE);<z>
n = MemberValue(true);<z>
n);<z>
while (true) {<z>
(2)) {<z>
} else {<z>
label_57;<z>
COMMA);<z>
n = MemberValue(true);<z>
;<z>
jj_ntk():jj_ntk) {<z>
case COMMA:<z>
jj_consume_token(COMMA);<z>
;<z>
jj_consume_token(RBRACE);<z>
,first,token);}<z>
Error("Missing return statement in function");<z>
{<z>
;<z>
(<z>
> enumerable1,<z>
> comparer)<z>
(<z>
(),<z>
comparer);<z>
() {<z>
i = bufferWidth * bufferHeight;<z>
< i; j++)<z>
j] = 0;<z>
parseTypeNumber(Reader reader) {<z>
reader.read();<z>
= (char)c;<z>
c == -1) {<z>
'(') {<z>
StringBuffer sb = new StringBuffer();<z>
{<z>
(char)c;<z>
) {<z>
toString());<z>
(NumberFormatException e) {<z>
if (ch == ',') {<z>
parseInt(sb.toString());<z>
catch (NumberFormatException e) {<z>
);<z>
(Character.isDigit(ch)) {<z>
);<z>
} else {<z>
(Character.isDigit(ch)) {<z>
StringBuffer sb = new StringBuffer();<z>
sb.append(ch);<z>
(1);<z>
) != -1) {<z>
ch = (char)c;<z>
) {<z>
ch);<z>
{<z>
.reset();<z>
sb.toString());<z>
NumberFormatException e) {<z>
catch (IOException e) {<z>
String getCasedType(ContainerType type) {<z>
1).toUpperCase();<z>
substring(1).toLowerCase();<z>
return s;<z>
public SQL92JDBCDataModel(DataSource dataSource) {<z>
this(dataSource,<z>
;<z>
] bytes) {<z>
(syntax) {<z>
.SYNTAX_INTEGER: {<z>
(bytes).intValue());<z>
SYNTAX_COUNTER32: {<z>
(bytes).longValue());<z>
SYNTAX_COUNTER64: {<z>
bytes).longValue());<z>
SYNTAX_TIMETICKS: {<z>
);<z>
{<z>
.longValue());<z>
SMIConstants.SYNTAX_IPADDRESS: {<z>
.getByAddress(bytes));<z>
catch (final UnknownHostException e) {<z>
));<z>
SYNTAX_OBJECT_IDENTIFIER: {<z>
));<z>
.SYNTAX_OCTET_STRING: {<z>
;<z>
: {<z>
Opaque(bytes);<z>
EXCEPTION_END_OF_MIB_VIEW: {<z>
m_value = Null.endOfMibView;<z>
case SMIConstants.EXCEPTION_NO_SUCH_INSTANCE: {<z>
= Null.noSuchInstance;<z>
: {<z>
m_value = Null.noSuchObject;<z>
.SYNTAX_NULL: {<z>
);<z>
IllegalArgumentException("invalid syntax "+syntax);<z>
null) {<z>
new IllegalArgumentException("value object created from syntax " + syntax + " is null");<z>
eUnset(int featureID) {<z>
featureID) {<z>
.CONSTRAINT_PROPERTY__BASE_PROPERTY:<z>
;<z>
super.eUnset(featureID);<z>
EObject currentModel) {<z>
);<z>
= currentModel;<z>
;<z>
void recordNullReference(LocalVariableBinding local,<z>
status) {<z>
this.nullCount == 0) {<z>
= new LocalVariableBinding[5];<z>
[5];<z>
nullCheckTypes = new int[5];<z>
.nullLocals.length) {<z>
System.arraycopy(this.nullLocals, 0,<z>
this.nullCount);<z>
this.nullReferences, 0,<z>
2], 0, this.nullCount);<z>
.arraycopy(this.nullCheckTypes, 0,<z>
0, this.nullCount);<z>
;<z>
= expression;<z>
nullCheckTypes[this.nullCount++] = status;<z>
doExecute() throws Exception<z>
), getContentId());<z>
, "" + contentVO.getRepositoryId()))<z>
);<z>
new AccessConstraintExceptionBuffer();<z>
("Content.contentId", "1000"));<z>
throwIfNotEmpty();<z>
))<z>
if(this.repositoryId == null)<z>
.getRepositoryId();<z>
;<z>
return "viewVersion";<z>
;<z>
true);<z>
;<z>
)<z>
();<z>
ce;<z>
)<z>
();<z>
.NONE;<z>
{<z>
title);<z>
lookup(Content.class);<z>
!= null) {<z>
(false);<z>
public void dump(OffHeapMemoryBuffer mem) {<z>
).bufferNumber);<z>
()));<z>
used()));<z>
).maxMemory()));<z>
).totalMemory()));<z>
));<z>
"************************************************");<z>
rule__XFeatureCall__Group_4_1_1_1__1() throws RecognitionException {<z>
keepStackSize();<z>
pushFollow(FOLLOW_rule__XFeatureCall__Group_4_1_1_1__1__Impl_in_rule__XFeatureCall__Group_4_1_1_1__119900);<z>
rule__XFeatureCall__Group_4_1_1_1__1__Impl();<z>
;<z>
.failed) return ;<z>
catch (RecognitionException re) {<z>
re);<z>
re);<z>
(stackSize);<z>
KeyEvent event) {<z>
android.os.Build.VERSION_CODES.ECLAIR<z>
keyCode == KeyEvent.KEYCODE_BACK<z>
) {<z>
;<z>
keyCode, event);<z>
public int compareTo(halt_args other) {<z>
(other.getClass())) {<z>
);<z>
0;<z>
halt_args typedOther = (halt_args)other;<z>
compareTo(typedOther.isSetTinfo());<z>
if (lastComparison != 0) {<z>
lastComparison;<z>
isSetTinfo()) {<z>
.tinfo);<z>
lastComparison != 0) {<z>
lastComparison;<z>
));<z>
if (lastComparison != 0) {<z>
return lastComparison;<z>
isSetCredentials()) {<z>
this.credentials, typedOther.credentials);<z>
(lastComparison != 0) {<z>
return lastComparison;<z>
.isSetLock());<z>
0) {<z>
return lastComparison;<z>
(isSetLock()) {<z>
lock, typedOther.lock);<z>
(lastComparison != 0) {<z>
;<z>
return 0;<z>
.equals(""))<z>
-1;<z>
);<z>
limit);<z>
1, limit);<z>
limit == -1)<z>
MAX_VALUE;<z>
limit;<z>
passFiles;<z>
);<z>
); i.hasNext(); ) {<z>
file = i.next();<z>
remove(); continue; }<z>
file);<z>
(file.endsWith("/"))<z>
()-1);<z>
.set(file);<z>
"passFiles = " + passFiles);<z>
public DeclareRolesAnnotationHandler(WebAppContext context)<z>
false);<z>
= context;<z>
, Schema outSchema, Schema copySchema) {<z>
(outSchema);<z>
.origField = origField;<z>
= destField;<z>
.copySchema = copySchema;<z>
text) {<z>
{<z>
run() {<z>
();<z>
;<z>
Nullable final XmlAttribute attribute) {<z>
== null) {<z>
"";<z>
attribute.getValueElement();<z>
{<z>
return "";<z>
);<z>
&& s.length() > 0) {<z>
() - 1) != '"') {<z>
"\"";<z>
) - 1) != '\'') {<z>
"'";<z>
;<z>
gamma) {<z>
result = true;<z>
blocks.size(); i++) {<z>
;<z>
= stmt.syntax;<z>
) {<z>
dump(ctx);<z>
continue;<z>
) {<z>
= false;<z>
, gamma)) {<z>
result = false;<z>
;<z>
render(<z>
, PortletConfig portletConfig,<z>
renderResponse)<z>
{<z>
ActionUtil.getEntry(renderRequest);<z>
.BLOGS_PINGBACK_ENABLED) {<z>
)renderRequest.getAttribute(<z>
.BLOGS_ENTRY);<z>
)) {<z>
response =<z>
(renderResponse);<z>
.addHeader(<z>
(renderRequest) +<z>
);<z>
(Exception e) {<z>
NoSuchEntryException ||<z>
e instanceof PrincipalException) {<z>
);<z>
;<z>
throw e;<z>
(<z>
"portlet.blogs.edit_entry"));<z>
.om.OMElement getOMElement (<z>
namespace.QName parentQName,<z>
.apache.axis2.databinding.ADBException{<z>
=<z>
parentQName){<z>
XMLStreamException {<z>
xmlWriter);<z>
impl.llom.OMSourcedElementImpl(<z>
);<z>
{<z>
;<z>
;<z>
== event.getOldCurrent()) return;<z>
(null);<z>
ManagementResourceRegistration registry) {<z>
{<z>
Storage.RUNTIME);<z>
{<z>
{<z>
ModelNode getModelDescription(Locale locale) {<z>
.getResourceBundle(locale);<z>
;<z>
;<z>
Player player)<z>
.doDrop(player);<z>
{<z>
FunctionDescriptor> preFunctions = action.getPreFunctions();<z>
(preFunctions != null) {<z>
FunctionDescriptor preFunction: preFunctions) {<z>
(preFunction, transientVars);<z>
executed = false;<z>
ConditionalResultDescriptor> conditionalResults = action.getConditionalResults();<z>
conditionalResults != null) {<z>
conditionalResult: conditionalResults) {<z>
), currentStepId)) {<z>
(conditionalResult, transientVars);<z>
) {<z>
;<z>
postFunctions = action.getPostFunctions();<z>
if (postFunctions != null) {<z>
) {<z>
executeFunction(postFunction, transientVars);<z>
)) {<z>
;<z>
void shutdownInstance() {<z>
;<z>
) {<z>
mBeanNames.map.clear();<z>
map.clear();<z>
, boolean startedWithKeyboard) {<z>
;<z>
== null) {<z>
));<z>
assertTrue(editorComp != null);<z>
;<z>
) {<z>
);<z>
!= null) {<z>
;<z>
) {<z>
.doWhenFocusSettlesDown(new Runnable() {<z>
{<z>
activate();<z>
});<z>
attachDefault(Restlet notMatchedRestlet) {<z>
.setNoRootResClHandler(notMatchedRestlet);<z>
notMatchedRestlet);<z>
setNoResMethodHandler(notMatchedRestlet);<z>
Node node) throws ELException {<z>
this);<z>
Exception e) {<z>
(ELException) e;<z>
instanceof FunctionMapperFactory) {<z>
;<z>
.varMapper instanceof VariableMapperFactory) {<z>
this.varMapper).create();<z>
id, long sel, NSPoint point) {<z>
{<z>
).height) return 1;<z>
, point);<z>
protected void animate(<z>
,<z>
final SpriteRender spriteRender,<z>
, final int delta<z>
0.5f;<z>
boundW = SCREEN_WIDTH - ballRadius;<z>
boundH = SCREEN_HEIGHT - ballRadius;<z>
= sprite.asArray();<z>
);<z>
++, r++ ) {<z>
;<z>
].x;<z>
+= dx * delta;<z>
x < ballRadius ) {<z>
;<z>
dx;<z>
{<z>
x = boundW;<z>
-dx;<z>
= dx;<z>
= x;<z>
r].x = x;<z>
sprites[b].dy;<z>
;<z>
* delta;<z>
< ballRadius ) {<z>
;<z>
dy = -dy;<z>
if ( y > boundH ) {<z>
y = boundH;<z>
-dy;<z>
.dy = dy;<z>
.y = y;<z>
y;<z>
sonarBaseDir) {<z>
) {<z>
);<z>
, "war/build-war.sh");<z>
;<z>
;<z>
public MustParamOracle(HCode hc) {<z>
(1);<z>
= method.paramsLength();<z>
; i++) {<z>
ov = new OracleVisitor(hc, i);<z>
paramNum = new Integer(i);<z>
hasNext(); ) {<z>
), paramNum);<z>
null : "temp can't be multiple params!";<z>
nx, int ny, int nz) {<z>
(<z>
ny + "," + nz + "].\n" +<z>
{<z>
.startDocument();<z>
Cinema>();<z>
Movie>();<z>
);<z>
String, MovieGenre>();<z>
>();<z>
>();<z>
= false;<z>
new StringBuilder();<z>
BindingDefinition bindingDefinition, FlexoModelObject owner, Duration aValue) {<z>
owner);<z>
null) {<z>
.clone();<z>
) {<z>
return Charset.isSupported(this.charset);<z>
} catch (IllegalCharsetNameException icne) {<z>
;<z>
false;<z>
, int index)<z>
(index > 0)<z>
);<z>
FrontendException {<z>
);<z>
currentPlan.getPredecessors(limit);<z>
preds.get(0);<z>
(pred instanceof LOForEach) {<z>
currentPlan.getPredecessors(pred)<z>
;<z>
;<z>
)!=null) {<z>
Operator>(<z>
(limit));<z>
) {<z>
for (Operator op : softPrepredecessors) {<z>
op, limit);<z>
);<z>
;<z>
if (softPrepredecessors!=null) {<z>
(Operator op : softPrepredecessors) {<z>
op, limit);<z>
limit.getLimitPlan() == null) {<z>
pred instanceof LOCross || pred instanceof LOUnion) {<z>
;<z>
ArrayList<Operator>();<z>
currentPlan<z>
(pred))<z>
add(prepredecessor);<z>
: nodesToProcess) {<z>
if (prepredecessor instanceof LOLimit) {<z>
prepredecessor;<z>
() < limit.getLimit() ? l<z>
: limit.getLimit());<z>
{<z>
((LogicalPlan) currentPlan, limit<z>
getLimit());<z>
insertBetween(prepredecessor, newLimit, pred);<z>
(pred instanceof LOSort) {<z>
pred;<z>
== -1)<z>
.setLimit(limit.getLimit());<z>
< limit.getLimit() ? sort<z>
);<z>
(limit);<z>
else if (pred instanceof LOLoad) {<z>
LOLoad load = (LOLoad) pred;<z>
) == -1)<z>
());<z>
() ? load<z>
));<z>
LOLimit) {<z>
beforeLimit = (LOLimit) pred;<z>
< limit.getLimit() ? beforeLimit<z>
)<z>
());<z>
;<z>
LOSplitOutput) {<z>
currentPlan.getPredecessors(pred);<z>
&& grandparants.size() != 0<z>
) {<z>
currentPlan<z>
(0));<z>
greatGrandparants != null<z>
size() != 0<z>
(0) instanceof LOSort) {<z>
);<z>
(), sort<z>
(), sort.getAscendingCols(),<z>
getUserFunc());<z>
);<z>
limit, newSort);<z>
private void actionMakeGraph() {<z>
) > 1) {<z>
makeGraph();<z>
;<z>
{<z>
, JMeterUtils<z>
),<z>
"aggregate_graph_no_values_to_graph"),<z>
;<z>
private static void loadDataSources( )<z>
] dataSources = ManifestExplorer.getInstance( )<z>
.getExtensionManifests( );<z>
)<z>
< dataSources.length; i++ )<z>
i];<z>
= new ODAExtensionElementDefn(<z>
(<z>
) );<z>
= null;<z>
null;<z>
;<z>
;<z>
)<z>
.length; j++ )<z>
ODAPropertyDefn(<z>
[j] );<z>
);<z>
!= null )<z>
= visibilities.keySet( )<z>
)<z>
( );<z>
addPropertyVisibility( key,<z>
key ) );<z>
.cacheOdaExtension(<z>
( ), cachedExtDefn );<z>
);<z>
catch ( MetaDataException e )<z>
assert false;<z>
InputStream input)<z>
io.IOException {<z>
;<z>
(builder.mergeDelimitedFrom(input)) {<z>
return builder.buildParsed();<z>
else {<z>
return null;<z>
)<z>
new ContainerNode();<z>
;<z>
)<z>
;<z>
false);<z>
(explanation);<z>
{<z>
subMenu = subMenu;<z>
lib.menu.MenuItem>();<z>
new HashMap<Integer, Boolean>();<z>
();<z>
() {<z>
;<z>
getDescriptorForType().hashCode();<z>
) {<z>
hash) + VERSION_FIELD_NUMBER;<z>
;<z>
hashCode();<z>
;<z>
(ActionEvent e) {<z>
Boolean.TRUE);<z>
actionPerformed(e);<z>
null);<z>
void close(PrintStream stderr) {<z>
;<z>
catch (IOException e) {<z>
.println("Unable to close connection: " + e);<z>
) throws IOException {<z>
.getBlockNumForWord(word);<z>
return null;<z>
= getIndexBlock(blockNum);<z>
word);<z>
protected boolean validateDestinationGroup() {<z>
validDestination()) {<z>
);<z>
return false;<z>
true;<z>
throws Exception {<z>
getPropertyName();<z>
name.equals(DynamicConfigBean.EXTERNAL_MUTABLE)) {<z>
;<z>
(name, value);<z>
toString());<z>
{<z>
(statusProvider == null) {<z>
NONE;<z>
(IStatus) statusProvider.getValidationStatus()<z>
);<z>
;<z>
{<z>
:<z>
NONE;<z>
:<z>
return IMessageProvider.NONE;<z>
:<z>
;<z>
WARNING:<z>
IMessageProvider.WARNING;<z>
case IStatus.ERROR:<z>
ERROR;<z>
, "incomplete switch statement");<z>
1;<z>
event) {<z>
ITaskOutput message = event.getMessage();<z>
((focusedTask != null)<z>
) {<z>
viewer.getFilters());<z>
;<z>
setItemCount(inputSize());<z>
public final void rule__XMultiplicativeExpression__Group_1_0__0__Impl() throws RecognitionException {<z>
();<z>
backtracking==0 ) {<z>
);<z>
FOLLOW_rule__XMultiplicativeExpression__Group_1_0_0__0_in_rule__XMultiplicativeExpression__Group_1_0__0__Impl11102);<z>
;<z>
--;<z>
state.failed) return ;<z>
state.backtracking==0 ) {<z>
));<z>
re) {<z>
;<z>
(input,re);<z>
(stackSize);<z>
void scrollByBlock(int direction) {<z>
(slider) {<z>
/ 10;<z>
getMinimum()) {<z>
= 1;<z>
POSITIVE_SCROLL : NEGATIVE_SCROLL);<z>
if (upperThumbSelected) {<z>
) slider).getUpperValue();<z>
setUpperValue(oldValue + delta);<z>
} else {<z>
.getValue();<z>
delta);<z>
CasteMinimumRestriction(String caste,<z>
restriction,<z>
)<z>
caste, 0, isFreebie);<z>
this.restriction = restriction;<z>
;<z>
] args) {<z>
"LolNo.admin") || sender.isOp()) {<z>
).equalsIgnoreCase("lolno")) {<z>
if (args.length == 1){<z>
.equals("status")) {<z>
printStatus(sender);<z>
return true;<z>
0].equals("help")) {<z>
;<z>
true;<z>
.equals("chat")) {<z>
;<z>
toggleConfig("LolNo.blocks.chat");<z>
printStatus(sender);<z>
;<z>
equals("part")) {<z>
;<z>
;<z>
;<z>
return true;<z>
[0].equals("blocks")) {<z>
!block_enabled;<z>
);<z>
);<z>
true;<z>
equals("commands")) {<z>
= !command_enabled;<z>
;<z>
);<z>
true;<z>
)) {<z>
).equalsIgnoreCase("mutedlist")) {<z>
("Muted users:");<z>
: mutedUsers) {<z>
) {<z>
(ChatColor.GRAY + " *- " + player);<z>
else {<z>
" - " + player);<z>
().equalsIgnoreCase("mute")) {<z>
.length == 1) {<z>
]) != null) {<z>
]);<z>
args[0] + " should be muted now");<z>
;<z>
"denytp")) {<z>
) {<z>
.isOnline()) {<z>
true);<z>
] + " has been denied teleport");<z>
true;<z>
.equalsIgnoreCase("unmute")) {<z>
{<z>
args[0]);<z>
args[0] + " has been unmuted");<z>
true;<z>
;<z>
{<z>
List<A>>() {<z>
@SuppressWarnings({"unchecked"})<z>
ConcurrentLinkedQueue<A> as) {<z>
]));<z>
{<z>
weblog = getActionWeblog();<z>
);<z>
.saveWeblog(weblog);<z>
.getWeblogger().flush();<z>
(weblog);<z>
;<z>
) {<z>
.getHandle(), ex);<z>
);<z>
return SUCCESS;<z>
public FeatureDescriptor getByName(String name) {<z>
: featureDescriptors )<z>
getName().equalsIgnoreCase(name) )<z>
;<z>
return null;<z>
int position) {<z>
) {<z>
return false;<z>
} else {<z>
;<z>
minUpperBound() {<z>
v = Double.MAX_VALUE;<z>
idx = 0;<z>
data.length; i++)<z>
) < v) {<z>
;<z>
getUpperBound();<z>
return idx;<z>
(Integer windowId) {<z>
);<z>
windowName;<z>
"return top.window.name;";<z>
null) {<z>
;<z>
{<z>
);<z>
(windowName.isEmpty()) {<z>
"operadriver-window" + (assignedWindowIds++);<z>
"';";<z>
{<z>
windowName = debugger.executeJavascript(script);<z>
else {<z>
script, windowId);<z>
windowName;<z>
int lengthLimit) {<z>
.length() > lengthLimit) {<z>
.rejectValue(fieldname, "motechmodule.string.maxlength",<z>
lengthLimit},<z>
);<z>
(Object col, Object key) {<z>
WyList) {<z>
(WyList) col;<z>
BigInteger index = (BigInteger) key;<z>
));<z>
(col instanceof WyMap) {<z>
WyMap d = (WyMap) col;<z>
);<z>
{<z>
= (String) col;<z>
;<z>
());<z>
private boolean ensureTarSourceIsValid() {<z>
TarFile specifiedFile = getSpecifiedTarSourceFile();<z>
( specifiedFile == null ) {<z>
TarImport_badFormat);<z>
false;<z>
());<z>
( RepositorySystemSession session,<z>
request )<z>
.getArtifact();<z>
=<z>
(), artifact.getVersion(),<z>
() );<z>
result = new ArtifactDescriptorResult( request );<z>
setArtifact( artifact );<z>
reader.parse( resourceName );<z>
);<z>
) );<z>
.getRepositories() );<z>
.getRelocations() );<z>
;<z>
Exception e )<z>
;<z>
(Object object)<z>
(<z>
).getRootAdapterFactory(), getResourceLocator(),<z>
"_UI_Group_inheritedGroups_feature"),<z>
"_UI_PropertyDescriptor_description", "_UI_Group_inheritedGroups_feature", "_UI_Group_type"),<z>
null, null, null));<z>
)<z>
WayTooHighFaultMsg, OneTwoThreeFaultMsg<z>
int guess = request.getGuess();<z>
name = request.getName();<z>
.getPerson();<z>
0) {<z>
.iface.ObjectFactory();<z>
factory.createIncorrectGuessFault();<z>
.setGuess(guess);<z>
String hint = "Try non-zero";<z>
setHint(hint);<z>
;<z>
exc;<z>
);<z>
createPerson();<z>
] names = name.split(" ");<z>
setFirstName(names[0]);<z>
2){<z>
);<z>
} else {<z>
names[1]);<z>
.setGreeting("Winner!");<z>
(inPerson);<z>
);<z>
);<z>
setPerson(person);<z>
response;<z>
protected boolean processTagDatasource(Element node) throws Throwable {<z>
);<z>
null;<z>
);<z>
objectMap != null)) {<z>
objectMap.get(id);<z>
(dataSource == null) {<z>
String) null);<z>
null) {<z>
.toString(findFiles(node));<z>
) null);<z>
, ATTR_TYPE, (String) null);<z>
== null)) {<z>
error(<z>
;<z>
if (dataObject != null) {<z>
().makeOneDataSource(dataObject, type,<z>
;<z>
{<z>
return error("Failed to create data source:" + dataObject<z>
type);<z>
{<z>
);<z>
obj =<z>
toObject(bundleXml);<z>
instanceof DataSource)) {<z>
("datasource bundle is not a DataSource:"<z>
().getName());<z>
) obj;<z>
catch (Exception exc) {<z>
("Error loading data source bundle: "<z>
bundle, exc);<z>
ATTR_TIMES)) {<z>
List timesList =<z>
node,<z>
;<z>
timesList);<z>
{<z>
ensList =<z>
.parseIntegerListString(applyMacros(node,<z>
, (String) null));<z>
instanceof GridDataSource) {<z>
GridDataSource) dataSource).setEnsembleSelection(ensList);<z>
dataSource.getDataSelection());<z>
;<z>
dataSource.setObjectProperties(properties);<z>
!= null) {<z>
.put(id, dataSource);<z>
= XmlUtil.getElements(node);<z>
++) {<z>
elements.item(childIdx);<z>
).equals(TAG_DISPLAY)) {<z>
{<z>
return false;<z>
;<z>
return true;<z>
public String getLegacyValue() {<z>
!= NODPI) {<z>
());<z>
return "";<z>
int par2)<z>
par1StatBase != null)<z>
if (!par1StatBase.isIndependent)<z>
, par2);<z>
() throws RecognitionException {<z>
keepStackSize();<z>
);<z>
);<z>
_fsp--;<z>
;<z>
re) {<z>
re);<z>
);<z>
(stackSize);<z>
[] getAccessibleConstructors(boolean includePrivate)<z>
) {<z>
cons = cl.getDeclaredConstructors();<z>
);<z>
return cons;<z>
SecurityException e) {<z>
.reportWarning("Could not access constructor " +<z>
() +<z>
" due to lack of privileges.");<z>
cl.getConstructors();<z>
private void calculateSize(final Container parent) {<z>
) {<z>
sizeKnown)<z>
final Dimension maskedButton = ((Diagram) parent)<z>
getHideMaskedArea();<z>
= maskedButton.height;<z>
.size.width = maskedButton.width;<z>
;<z>
rowNum++) {<z>
);<z>
rowHeight = 0;<z>
int rowWidth = 0;<z>
0;<z>
) {<z>
);<z>
= comp.getPreferredSize();<z>
put(comp, prefSize);<z>
compSpacing = ((SchemaLayoutConstraint) this.constraints<z>
get(comp)).getRelCount()<z>
RELATION_SPACING;<z>
.max(rowHeight, prefSize.height<z>
compSpacing * 2);<z>
* 2;<z>
compSpacing);<z>
Integer(rowSpacing));<z>
TABLE_PADDING * 2;<z>
Integer(rowHeight));<z>
rowHeight;<z>
) + 1)<z>
;<z>
Integer(rowWidth));<z>
);<z>
;<z>
document) {<z>
JS_DOC,<z>
,<z>
JS_MULTI_COMMENT,<z>
JS_STRING, IDocument.DEFAULT_CONTENT_TYPE };<z>
(<z>
(), types) {<z>
delayInitialization) {<z>
.connect(doc, delayInitialization);<z>
;<z>
(IJavaScriptPartitions.JS_PARTITIONING,<z>
partitioner);<z>
getProvider()<z>
IllegalAccessException,<z>
providerClass = null;<z>
;<z>
cnfe) {<z>
)) &&<z>
equals(SUN_PROVIDER_CLASS))) {<z>
) {<z>
warn(<z>
+<z>
" instead");<z>
;<z>
(<z>
)) {<z>
)) {<z>
_log.warn(<z>
"IBM JVM does not have " + SUN_PROVIDER_CLASS +<z>
;<z>
.forName(IBM_PROVIDER_CLASS);<z>
throw cnfe;<z>
(Provider)providerClass.newInstance();<z>
NotNull ASTNode node, @NotNull IElementType elementType) {<z>
;<z>
) {<z>
== elementType) {<z>
;<z>
;<z>
boolean extractMeasurements(Product product) {<z>
coordinatesFound = false;<z>
{<z>
return coordinatesFound;<z>
);<z>
();<z>
{<z>
(i);<z>
1, validMaskImage);<z>
(measurementExtracted && (exportSubScenes || exportKmz)) {<z>
.add(coordinate);<z>
IOException e) {<z>
e.getMessage());<z>
coordinatesFound = !matchedCoordinates.isEmpty();<z>
(coordinatesFound) {<z>
exportSubScenes) {<z>
(product, matchedCoordinates);<z>
e) {<z>
(Level.WARNING,<z>
e);<z>
exportKmz) {<z>
(Coordinate matchedCoordinate : matchedCoordinates) {<z>
);<z>
)) {<z>
.getLon(),<z>
.getLat());<z>
;<z>
knownKmzPlacemarks.add(coordinateName);<z>
finally {<z>
dispose();<z>
coordinatesFound;<z>
)<z>
ListValue(name);<z>
add(v);<z>
null, v.getList());<z>
;<z>
offset, int count) throws IOException {<z>
(buffer.length, offset, count);<z>
();<z>
if (bytesRemaining == 0) {<z>
-1;<z>
count, bytesRemaining));<z>
== -1) {<z>
unexpectedEndOfInput();<z>
);<z>
-= read;<z>
, read);<z>
) {<z>
true);<z>
read;<z>
editorContext, SNode node) {<z>
new PropertyCellProvider(node, editorContext);<z>
("workName");<z>
);<z>
;<z>
editorCell;<z>
editorCell = provider.createEditorCell(editorContext);<z>
.setCellId("property_workName");<z>
(editorCell).apply(editorCell);<z>
provider.createDefaultSubstituteInfo());<z>
;<z>
();<z>
!= null) {<z>
();<z>
.getInstanceFromContext(opContext);<z>
attributeConcept, attributeKind, editorCell);<z>
;<z>
public void startClassAnnotation(String annotationName)<z>
.getClassName());<z>
ann);<z>
init(WriteStream os)<z>
= os;<z>
init();<z>
req )<z>
;<z>
.param( "categoryKeys" ).asIntegerArray();<z>
( false );<z>
();<z>
;<z>
SQLException {<z>
"TargetURI");<z>
;<z>
(targetURI != null) {<z>
core.activity.Object();<z>
targetURI);<z>
.getString("TargetName"));<z>
setObjectTypeURI(rs.getString("TargetTypeURI"));<z>
build();<z>
public Cookie getCookie() {<z>
bestCookie = cookie;<z>
clientCookie != null) {<z>
clientCookie;<z>
return bestCookie;<z>
{<z>
;<z>
_classLoader = clazz.getClassLoader();<z>
PersistedModelLocalServiceRegistryUtil.register("com.liferay.wsrp.model.WSRPProducer",<z>
;<z>
ck,<z>
Coarbitrary<V> cv) {<z>
V>>() {<z>
SuppressWarnings({"UseOfObsoleteCollectionType"})<z>
, final Gen<B> g) {<z>
(m), g);<z>
{<z>
.getSelected();<z>
getFilteredList(selection, Node.class);<z>
.class);<z>
selection)) {<z>
JOptionPane.showMessageDialog(<z>
.parent,<z>
"The current selection cannot be used for splitting."),<z>
"Warning"),<z>
WARNING_MESSAGE<z>
null;<z>
.isEmpty()){<z>
0);<z>
()) {<z>
, Integer>();<z>
Node n : selectedNodes) {<z>
Way.class)) {<z>
isUsable()) {<z>
;<z>
{<z>
;<z>
= 0;<z>
w.getNodes()) {<z>
(wn)) {<z>
;<z>
null) ? 1 : old + 1);<z>
i++;<z>
isEmpty()) {<z>
Main.parent,<z>
trn("The selected node is not in the middle of any way.",<z>
size()),<z>
),<z>
.WARNING_MESSAGE);<z>
) {<z>
size())) {<z>
!= null) {<z>
,<z>
trn("There is more than one way using the node you selected. Please select the way also.",<z>
.size()),<z>
("Warning"),<z>
.WARNING_MESSAGE);<z>
;<z>
) {<z>
.showMessageDialog(Main.parent,<z>
tr("The selected nodes do not share the same way."),<z>
"Warning"),<z>
);<z>
null && !selectedNodes.isEmpty()) {<z>
(selectedNodes);<z>
removeAll(selectedWay.getNodes());<z>
{<z>
.parent,<z>
("The selected way does not contain the selected node.",<z>
size()),<z>
"Warning"),<z>
JOptionPane.WARNING_MESSAGE);<z>
);<z>
if (wayChunks != null) {<z>
;<z>
getCommand());<z>
;<z>
entryRuleExportAttribute() throws RecognitionException {<z>
0 ) {<z>
before(grammarAccess.getExportAttributeRule());<z>
(FollowSets000.FOLLOW_ruleExportAttribute_in_entryRuleExportAttribute1087);<z>
;<z>
state._fsp--;<z>
failed) return ;<z>
.backtracking==0 ) {<z>
;<z>
(state.failed) return ;<z>
(RecognitionException re) {<z>
reportError(re);<z>
input,re);<z>
VolcanicHammer(UUID ownerId) {<z>
);<z>
= 231;<z>
expansionSetCode = "8ED";<z>
() {<z>
new StringBuilder();<z>
();<z>
model.RatingsStats deleteRatingsStats(<z>
long statsId)<z>
liferay.portal.kernel.exception.PortalException,<z>
exception.SystemException {<z>
(statsId);<z>
(){<z>
+getPath());<z>
, Serializable> createParams(URL url) {<z>
= new JGrassServiceExtension();<z>
createParams(url);<z>
)<z>
;<z>
<String, Serializable>();<z>
.KEY, url);<z>
return params2;<z>
loading, final String message) {<z>
= loading;<z>
);<z>
&& (message != null)) {<z>
().setText(message);<z>
loading);<z>
, int style) {<z>
);<z>
LinkedList<EOQualifierEditor>();<z>
false);<z>
marginLeft = 0;<z>
0;<z>
layout.marginWidth = 0;<z>
.marginTop = 0;<z>
layout.marginBottom = 0;<z>
marginHeight = 0;<z>
0;<z>
verticalSpacing = 0;<z>
layout);<z>
bin) throws IOException {<z>
{<z>
;<z>
{<z>
.read(rowCol, bin);<z>
(Graphics g2) {<z>
= getWidth() / 2 + 1;<z>
/ 2 + 1;<z>
(null) != w)<z>
) != h)) {<z>
h);<z>
g = img.getGraphics();<z>
w / 32; x++) {<z>
y <= h / 32; y++)<z>
* 32, null);<z>
Graphics2D)) {<z>
(Graphics2D) g;<z>
1;<z>
0.0F, 0.0F),<z>
Color(553648127, true),<z>
true)));<z>
);<z>
;<z>
),<z>
(0.0F, gh),<z>
;<z>
, 0, w, gh);<z>
();<z>
);<z>
() {<z>
isSuppliedByLogicalTechnologyComponentsBusinessFilters,<z>
eResource()) {<z>
) {<z>
();) {<z>
;<z>
,<z>
, null, elem));<z>
);<z>
);<z>
void mouseDragged(MouseEvent e) {<z>
) {<z>
= true;<z>
ignoreDrag) {<z>
startDrag) {<z>
false;<z>
(e);<z>
else {<z>
(e);<z>
(final IAction action) {<z>
IStructuredSelection)) {<z>
IStructuredSelection) selection;<z>
size() != 1) {<z>
ssel.getFirstElement();<z>
null;<z>
element instanceof IMachineRoot)) {<z>
IMachineRoot) element;<z>
)) {<z>
if (abs == null) {<z>
abs.getRodinFile());<z>
(abs, basename);<z>
basename, ctx);<z>
);<z>
void importSWRLRulesAndOWLKnowledge() throws SWRLRuleEngineException<z>
);<z>
));<z>
());<z>
));<z>
static void createMainClass() {<z>
mstr;<z>
;<z>
outDir;<z>
++) {<z>
]]);<z>
[dirStackIndex[i]]);<z>
exists()) {<z>
{<z>
", but need to create a main program with the same path prefix. Please remove identifiers from the path prefix from your <useidsfile> and run again.");<z>
new Error();<z>
dirStackIndex[dirStackSize]-1];<z>
() - 5)) + ".java";<z>
.equals(newFileName)) {<z>
mFile.mkdirs()) {<z>
mFile.getPath());<z>
throw new Error();<z>
, origFileName);<z>
(new FileWriter(mFile));<z>
(IOException e) {<z>
"Could not create " + mFile.getPath());<z>
new Error();<z>
;<z>
;<z>
{<z>
dirStackSize; i++) {<z>
;<z>
;<z>
pname.substring(1) + ".");<z>
mstr.println("");<z>
origFileName.length() - 5));<z>
() - 5) + " {");<z>
"");<z>
;<z>
pname = "";<z>
; i < dirStackSize; i++) {<z>
;<z>
5)) + ".main(args);");<z>
" }");<z>
.println("");<z>
.println("}");<z>
);<z>
setPanFactor(float panFactor) {<z>
(panFactor > 1f)) {<z>
"should be: (0.0 <= panFactor <= 1.0)");<z>
panFactor;<z>
throws Exception {<z>
= event.getSource();<z>
(false);<z>
refresh();<z>
));<z>
)<z>
(file);<z>
( out );<z>
( FileNotFoundException e )<z>
printStackTrace();<z>
rule) {<z>
rule)<z>
;<z>
WorkManager.NotifyRule.class))<z>
true;<z>
MultiRule) {<z>
rule;<z>
;<z>
i < children.length; i++)<z>
[i]))<z>
;<z>
true;<z>
IResource))<z>
return false;<z>
) rule;<z>
)))<z>
false;<z>
));<z>
() {<z>
() {<z>
() {<z>
italicFont);<z>
setActionDisabled(downloadUpdateAction);<z>
;<z>
, MODE mode){<z>
;<z>
;<z>
c.getAll();<z>
;<z>
all.entrySet()){<z>
.getValue());<z>
;<z>
;<z>
.save();<z>
, HttpServletRequest request, List errors) {<z>
null) {<z>
{<z>
{<z>
setStatus("OK");<z>
"User ID is required.", account.getUsername());<z>
getPassword().equals(repeatedPassword)) {<z>
"Passwords did not match or were not provided. Matching passwords are required.");<z>
> 0) {<z>
) {<z>
add("Passwords did not match.");<z>
getFirstName());<z>
);<z>
this.account.getEmail());<z>
account.getPhone());<z>
this.account.getAddress1());<z>
;<z>
, this.account.getState());<z>
));<z>
, this.account.getCountry());<z>
public String toString() {<z>
());<z>
(int featureID)<z>
switch (featureID)<z>
:<z>
)null);<z>
.PROPERTY_DEFINITION__NAME:<z>
;<z>
CssExtDslPackage.PROPERTY_DEFINITION__RULE:<z>
)null);<z>
CssExtDslPackage.PROPERTY_DEFINITION__DEFAULT:<z>
(CSSDefaultValue)null);<z>
(featureID);<z>
) {<z>
name = name ;<z>
;<z>
baseVersion = version ;<z>
int kind) {<z>
.REMOVED) {<z>
get(path);<z>
.state.roots.get(path);<z>
, int par3)<z>
)<z>
true;<z>
par2, par3) < field_48109_aw * field_48109_aw;<z>
Atom.AcknowledgeMessage parseFrom(<z>
com.google.protobuf.ByteString data,<z>
.protobuf.ExtensionRegistryLite extensionRegistry)<z>
InvalidProtocolBufferException {<z>
, extensionRegistry)<z>
.buildParsed();<z>
{<z>
{<z>
count; i++) {<z>
== null) {<z>
deserialize(i);<z>
offsets = null;<z>
] args){<z>
.length != 1){<z>
System.out.println("Usage aee propertiesFile");<z>
System.exit(1);<z>
propertiesFile = args[0];<z>
;<z>
row, int column) {<z>
value == null){<z>
"";<z>
(value.toString());<z>
JavaType proxy,<z>
GwtProxyProperty> proxyFieldTypeMap,<z>
topLevelPackage) {<z>
resolveMethodsToWatch(this);<z>
) {<z>
:<z>
.put(new JavaSymbolName("setValue"),<z>
(proxy));<z>
case MOBILE_DETAILS_VIEW:<z>
watchedMethods.put(new JavaSymbolName("setValue"),<z>
);<z>
:<z>
) {<z>
() || property.isProxy()<z>
()<z>
property.isCollectionOfProxy()) {<z>
>();<z>
(<z>
,<z>
null,<z>
getValueType()));<z>
param);<z>
put(<z>
property<z>
;<z>
MOBILE_EDIT_VIEW:<z>
: proxyFieldTypeMap.values()) {<z>
property.isProxy()<z>
()<z>
)) {<z>
= new ArrayList<JavaType>();<z>
final JavaType param = new JavaType(<z>
COLLECTION.getFullyQualifiedTypeName(), 0,<z>
,<z>
);<z>
(param);<z>
watchedMethods.put(<z>
(property<z>
)), params);<z>
LIST_PLACE_RENDERER:<z>
values()) {<z>
()<z>
()<z>
isCollectionOfProxy()) {<z>
>();<z>
param = new JavaType(<z>
COLLECTION.getFullyQualifiedTypeName(), 0,<z>
,<z>
(property.getValueType()));<z>
;<z>
.put(<z>
property<z>
;<z>
put(new JavaSymbolName("render"), Collections<z>
(topLevelPackage<z>
.getFullyQualifiedPackageName()<z>
);<z>
:<z>
<JavaType>();<z>
add(new JavaType(topLevelPackage<z>
)<z>
+ ".client.scaffold.place.ProxyPlace"));<z>
JavaSymbolName("makeEditActivity"), params);<z>
);<z>
),<z>
));<z>
case EDIT_RENDERER:<z>
"render"),<z>
);<z>
createDialogArea(Composite parent) {<z>
) super.createDialogArea(parent);<z>
Composite(composite, SWT.NONE);<z>
new GridLayout();<z>
layout.marginHeight= 0;<z>
marginWidth= 0;<z>
= 2;<z>
);<z>
fKeyField.doFillIntoGrid(inner, 2);<z>
inner, 2);<z>
null));<z>
null), convertWidthInCharsToPixels(50));<z>
.getTextControl(null));<z>
(50));<z>
.postSetFocusOnDialogField(parent.getDisplay());<z>
(composite);<z>
;<z>
language) {<z>
;<z>
.getAssociatedFileType();<z>
myFileType == null) {<z>
);<z>
equals( Object other ) {<z>
instanceof TLongSet ) ) {<z>
false;<z>
= ( TLongSet ) other;<z>
size() ) {<z>
;<z>
0; ) {<z>
if ( _states[i] == FULL ) {<z>
_set[i] ) ) {<z>
;<z>
;<z>
getGuardedInvocation(LinkRequest request, final LinkerServices linkerServices)<z>
throws Exception {<z>
request.getCallSiteDescriptor();<z>
);<z>
)) {<z>
return null;<z>
;<z>
) {<z>
;<z>
request, linkerServices);<z>
throws Exception {<z>
);<z>
.equals("MessageRejected"))<z>
null;<z>
;<z>
e;<z>
) throws Exception {<z>
super.start(context);<z>
;<z>
{<z>
().get(name);<z>
null) {<z>
return null;<z>
else {<z>
(idx);<z>
) {<z>
{<z>
case Type.VOID: return RETURN;<z>
.BOOLEAN:<z>
CHAR:<z>
:<z>
Type.SHORT:<z>
return IRETURN;<z>
FLOAT: return FRETURN;<z>
LONG: return LRETURN;<z>
return DRETURN;<z>
ARRAY:<z>
: return ARETURN;<z>
Assert.fail("Bad Sort");<z>
return -1;<z>
)<z>
)<z>
= null;<z>
<AssignedToUser>... userLists) throws JSONException {<z>
getValue(Task.USER);<z>
(!TextUtils.isEmpty(assignedStr)) {<z>
assigned = new JSONObject(assignedStr);<z>
Task.USER_ID_EMAIL);<z>
optString("email");<z>
= 0;<z>
(ArrayList<AssignedToUser> userList : userLists) {<z>
i++) {<z>
i).user;<z>
if (user != null) {<z>
(user.optLong("id") == assignedId ||<z>
&&<z>
assignedEmail))))<z>
;<z>
index++;<z>
;<z>
;<z>
scope_AvmReferable(As3QueryOperator ctx, EObject initial,<z>
ref) {<z>
As3EPackage.eINSTANCE<z>
()<z>
{<z>
) ctx.eContainer();<z>
, delegateGetScope(ctx, ref));<z>
;<z>
) {<z>
str;<z>
(value) {<z>
case 11:<z>
"SE_ANSWER";<z>
4:<z>
;<z>
;<z>
;<z>
tracingStatistic) {<z>
(tracingStatistic.enable()) {<z>
(tracingStatistic);<z>
);<z>
{<z>
-1;<z>
arg0, int arg1, InterfaceSingerGenerale i1) {<z>
;<z>
super.setText(nomFichier);<z>
i1;<z>
SWT.NONE);<z>
(new FormLayout());<z>
;<z>
, SWT.HORIZONTAL);<z>
FormData();<z>
);<z>
.right = new FormAttachment(100);<z>
);<z>
;<z>
sashHorizontal = sashHorizontal;<z>
SWT.BORDER, i1);<z>
new FormData();<z>
new FormAttachment(0);<z>
FormAttachment(100);<z>
0);<z>
bottom = new FormAttachment(sashHorizontal);<z>
setLayoutData(textSyllabeData);<z>
BORDER, i1);<z>
FormData();<z>
melodieData.left = new FormAttachment(0);<z>
= new FormAttachment(100);<z>
;<z>
melodieData.bottom = new FormAttachment(100);<z>
);<z>
.addSelectionListener(new SelectionAdapter()<z>
public void widgetSelected(SelectionEvent event)<z>
;<z>
;<z>
});<z>
String type) {<z>
(type)) {<z>
sortUnits.get(type);<z>
));<z>
.put(type, proxySortUnit);<z>
= itemMap.get(type);<z>
deps = dependencyMap.get(type);<z>
>();<z>
(final Dependency d : deps) {<z>
getType().getFullyQualifiedName()));<z>
(type), items, sortUnitDependencies));<z>
proxySortUnit;<z>
boolean jj_2_1460(int xla) {<z>
jj_scanpos = token;<z>
{ return !jj_3_1460(); }<z>
LookaheadSuccess ls) { return true; }<z>
jj_save(1459, xla); }<z>
.awt.event.ActionEvent evt) {<z>
if (selectedApplicationProperty != null) {<z>
,<z>
getNameLastpart());<z>
()<z>
getUrlManager();<z>
())<z>
= "";<z>
item.getHandle() != null)<z>
;<z>
&& !"".equals(handle))<z>
);<z>
("sword.bundle.name");<z>
))<z>
swordBundle = "SWORD";<z>
)<z>
con = new Content();<z>
);<z>
bundles.length > 0)<z>
0].getBitstreams();<z>
i++)<z>
.getFormat();<z>
= "application/octet-stream";<z>
)<z>
bf.getMIMEType();<z>
con.setType(format);<z>
bss[i]);<z>
(bsLink);<z>
.setContent(con);<z>
Content();<z>
;<z>
setSource(HandleManager.getCanonicalForm(handle));<z>
.setContent(content);<z>
)<z>
SQLException e)<z>
);<z>
new DSpaceSWORDException(e);<z>
final void initSingleton() {<z>
isInit) {<z>
.class) {<z>
{<z>
true;<z>
initSingletonImpl();<z>
] getActionIds(KeyboardModifierGestureShortcut shortcut) {<z>
> map = getGesture2ListOfIds();<z>
<String>();<z>
entry : map.entrySet()) {<z>
(entry.getKey())) {<z>
);<z>
!= null) {<z>
;<z>
.length > 0) {<z>
) {<z>
) {<z>
(id);<z>
ArrayUtil.toStringArray(list));<z>
composite) {<z>
);<z>
;<z>
PreferencesMessages.DLTKEditorPreferencePage_insertSingleProposalsAutomatically;<z>
composite, label,<z>
2);<z>
obj) {<z>
this == obj)<z>
return true;<z>
(obj == null)<z>
false;<z>
)<z>
return false;<z>
ParsedField) obj;<z>
.equals(that.owner) &&<z>
name);<z>
) {<z>
new XQuery(<z>
ctx);<z>
query.baseURI("http://www.w3.org/fots/unparsed-text/");<z>
(query);<z>
result = res;<z>
assertBoolean(true)<z>
mouseEntered(final PInputEvent e) {<z>
{<z>
;<z>
Integer host,<z>
Double rpcProcessingTimeAvgTime, Double rpcProcessingTimeNumOps,<z>
Double rpcQueueTimeAvgTime, Double rpcQueueTimeNumOps,<z>
, Double getBuildVersionNumOps,<z>
getJobCountersNumOps,<z>
, Double getJobProfileNumOps,<z>
getJobStatusNumOps,<z>
Double getNewJobIdAvgTime, Double getNewJobIdNumOps,<z>
, Double getProtocolVersionNumOps,<z>
Double getSystemDirAvgTime, Double getSystemDirNumOps,<z>
Double getTaskCompletionEventsAvgTime,<z>
,<z>
,<z>
, Double heartbeatNumOps,<z>
Double killJobNumOps,<z>
Double submitJobNumOps) {<z>
timestamp;<z>
.host = host;<z>
this.rpcProcessingTimeAvgTime = rpcProcessingTimeAvgTime;<z>
= rpcProcessingTimeNumOps;<z>
rpcQueueTimeAvgTime = rpcQueueTimeAvgTime;<z>
this.rpcQueueTimeNumOps = rpcQueueTimeNumOps;<z>
= getBuildVersionAvgTime;<z>
.getBuildVersionNumOps = getBuildVersionNumOps;<z>
.getJobCountersAvgTime = getJobCountersAvgTime;<z>
= getJobCountersNumOps;<z>
.getJobProfileAvgTime = getJobProfileAvgTime;<z>
= getJobProfileNumOps;<z>
.getJobStatusAvgTime = getJobStatusAvgTime;<z>
.getJobStatusNumOps = getJobStatusNumOps;<z>
getNewJobIdAvgTime;<z>
.getNewJobIdNumOps = getNewJobIdNumOps;<z>
getProtocolVersionAvgTime = getProtocolVersionAvgTime;<z>
;<z>
= getSystemDirAvgTime;<z>
= getSystemDirNumOps;<z>
;<z>
;<z>
this.getTaskDiagnosticsAvgTime = getTaskDiagnosticsAvgTime;<z>
.getTaskDiagnosticsNumOps = getTaskDiagnosticsNumOps;<z>
this.heartbeatAvgTime = heartbeatAvgTime;<z>
heartbeatNumOps = heartbeatNumOps;<z>
;<z>
killJobNumOps;<z>
;<z>
this.submitJobNumOps = submitJobNumOps;<z>
jjMoveStringLiteralDfa0_AfterTagState() {<z>
curChar) {<z>
60:<z>
;<z>
);<z>
;<z>
){<z>
correct = false;<z>
H2Database.getLetterData(cardID);<z>
false;<z>
String letter = lo.getLetter();<z>
);<z>
0);<z>
(currentPosition)){<z>
true;<z>
;<z>
}else wrongGuesses++;<z>
return correct;<z>
node, int level) {<z>
.getLine(), level++);<z>
(DumpTree.Node child : node) {<z>
convertToTreeView(child, level));<z>
ret;<z>
{<z>
GL2 gl = gl1.getGL2();<z>
( GL.GL_COLOR_BUFFER_BIT );<z>
GL_ONE, GL.GL_ONE);<z>
;<z>
getArea().getMaxRadius());<z>
);<z>
GL_REPLACE);<z>
;<z>
( 1,1,1,1 );<z>
, -radius);<z>
(-radius, radius);<z>
( radius, radius);<z>
, -radius);<z>
;<z>
glBindTexture( GL.GL_TEXTURE_2D, 0 );<z>
();<z>
gl );<z>
) {<z>
(context.getPictogramElement())) {<z>
;<z>
);<z>
{<z>
cast,exp;<z>
.expressionPtr--;<z>
this.expressionPtr] =<z>
cast = new CastExpression(<z>
.expressionStack[this.expressionPtr+1] ,<z>
.expressionStack[this.expressionPtr]));<z>
expressionLengthPtr -- ;<z>
;<z>
.sourceEnd;<z>
] value, Annotation ann) {<z>
);<z>
, ann);<z>
()));<z>
null;<z>
(String tag) {<z>
NodeList nodes = document.getElementsByTagName(tag);<z>
);<z>
;<z>
{<z>
.size();<z>
STATE_NEXT_ELEMENT : STATE_ROOT;<z>
, null);<z>
stack.pop();<z>
status = nextState;<z>
STATE_START_OBJECT;<z>
if (size > 2) {<z>
STATE_NEXT_ELEMENT | STATE_ROOT;<z>
?> map(MapEntry...entries) {<z>
();<z>
key, entry.value);<z>
map;<z>
int getDeltaGlobalCodesize(Candidate candidate) {<z>
();<z>
{<z>
();<z>
null) {<z>
for (MethodInfo m : removed) {<z>
;<z>
size;<z>
boolean noheap, MemoryArea ma, Node out) {<z>
(out);<z>
(noheap) {<z>
(ma) {<z>
) {<z>
.process(id);<z>
{<z>
{<z>
() {<z>
);<z>
);<z>
t.join();<z>
int labely, Boolean drawExtras) {<z>
GraphPoint size = model.getSize();<z>
) size.x;<z>
;<z>
;<z>
== 0)<z>
color = defaultVertexColor;<z>
model.getColor());<z>
stroke;<z>
{<z>
().darker();<z>
getMark()) {<z>
;<z>
c2;<z>
;<z>
(color);<z>
setStroke(borderStroke);<z>
y, w, h);<z>
setColor(c2);<z>
, h - 1);<z>
(drawVertexLabels) {<z>
);<z>
.getLabel();<z>
{<z>
.y));<z>
ProxyServiceAdminClient(ConfigurationContext configCtx, String backendServerURL,<z>
) throws AxisFault {<z>
;<z>
= backendServerURL + "ProxyServiceAdmin";<z>
stub = new ProxyServiceAdminStub(configCtx, serviceURL);<z>
stub._getServiceClient();<z>
.getOptions();<z>
* 1000);<z>
);<z>
CONNECTION_TIMEOUT, 15 * 60 * 1000);<z>
;<z>
);<z>
(final String tx, final String rx,<z>
,<z>
rw) {<z>
;<z>
("ask-one");<z>
public void deleteAttachmentByFileByName(String attachmentName)<z>
).findElement(<z>
attachmentName<z>
();<z>
).click();<z>
By<z>
"//*[@class='xdialog-modal-container']/*[contains(@class, 'xdialog-box-confirmation')]"));<z>
xpath("//div[@id='attachmentscontent']//a[text()='" + attachmentName + "']"));<z>
waitUntilElementIsVisible(By.xpath("//div[@id='Attachmentspane']"));<z>
, Throwable cause)<z>
;<z>
String> getTemplateTypeNames() {<z>
templateTypeNames == null) {<z>
of();<z>
.templateTypeNames;<z>
static boolean mysqli_stmt_close(Env env,<z>
)<z>
)<z>
;<z>
close(env);<z>
getPatternLabel() {<z>
( pattern.boundName != null ) {<z>
+ "]";<z>
.factType;<z>
{<z>
value);<z>
setTimestamp(clock);<z>
ttl);<z>
return this;<z>
(ObjectInputStream in)<z>
{<z>
= in.readInt();<z>
.readUTF();<z>
(MarshalledObject) in.readObject();<z>
);<z>
.getString("rmi.log.75") + op<z>
+ ", " + mval.get());<z>
{<z>
name.equals("group")) {<z>
= (ActivationGroupID) mkey<z>
;<z>
Messages.getString("rmi.log.76",<z>
agid));<z>
ActivationGroupDesc) mval<z>
.get();<z>
ActivationGroupInfo(<z>
agid, agdesc);<z>
getString("rmi.log.77", agi));<z>
.put(agid, agi);<z>
, Messages.getString("rmi.log.78"));<z>
equals("object")) {<z>
("rmi.log.79"));<z>
get();<z>
));<z>
();<z>
);<z>
= adesc.getGroupID();<z>
("rmi.log.57", agid));<z>
=<z>
);<z>
getString("rmi.log.58", agi));<z>
put(aid, agid);<z>
registerObject(aid, adesc);<z>
Messages.getString("rmi.log.7D"));<z>
.getString("rmi.log.7E"));<z>
(op == REMOVE) {<z>
equals("object")) {<z>
.remove(mkey.get());<z>
) {<z>
get());<z>
, String> attrs) {<z>
) attrs.get("val")));<z>
true;<z>
Exception e) {<z>
false;<z>
(<z>
fname, String targetProviderKey) {<z>
), fname);<z>
activity == null) {<z>
, fname, targetProviderKey);<z>
getActivities().add(activity);<z>
activity;<z>
() {<z>
prime = 31;<z>
;<z>
().hashCode();<z>
return result;<z>
public HistoryPanel build(HistoryStrategy strategy)<z>
branchToolbarButton_,<z>
;<z>
= new LocationListener()<z>
)<z>
)<z>
;<z>
filteredLocation = locationFilter( location );<z>
if( filteredLocation != null )<z>
if( mStartNextSegment )<z>
mStartNextSegment = false;<z>
);<z>
( filteredLocation );<z>
String provider )<z>
equals( LocationManager.GPS_PROVIDER ) )<z>
.string.service_gpsdisabled );<z>
)<z>
);<z>
)<z>
&& provider.equals( LocationManager.GPS_PROVIDER ) )<z>
;<z>
true;<z>
provider.equals( LocationManager.NETWORK_PROVIDER ) )<z>
( R.string.service_dataenabled );<z>
, Bundle extras )<z>
OUT_OF_SERVICE )<z>
);<z>
) {<z>
getComponentParameterValue("importFiles");<z>
|| parameterValue.length() <= 0) {<z>
false;<z>
else {<z>
|| "3".equalsIgnoreCase(parameterValue)) {<z>
return true;<z>
} else {<z>
;<z>
throws BitstreamFilterException<z>
null)<z>
= props.getProperty("filename");<z>
(filenameRegex == null)<z>
("BitstreamFilter property 'filename' not found.");<z>
= Pattern.compile(filenameRegex);<z>
.matcher(bitstream.getName());<z>
();<z>
evaluate(InternalWorkingMemory workingMemory,<z>
extractor1,<z>
Object object1,<z>
,<z>
final Object object2) {<z>
extractor2.getValue( workingMemory,<z>
;<z>
== null ) {<z>
false;<z>
Collection) ) {<z>
+ object.getClass() );<z>
) object;<z>
,<z>
);<z>
.contains( value );<z>
)<z>
, int x, int y)<z>
, 36, 36, 27, 9 },<z>
0, 0 }, 8);<z>
x, y);<z>
= g.getColor();<z>
RED);<z>
fillPolygon(oct);<z>
);<z>
10, 4);<z>
);<z>
-y);<z>
Graphics g, int xAxisStart, int yAxisStart,<z>
int yAxisEnd, int speed, boolean isShortestWay) {<z>
isShortestWay) {<z>
CYAN);<z>
.setColor(Color.BLACK);<z>
;<z>
(GraphicalUtils.getSpeedWidth(speed)));<z>
+ RAD, yAxisEnd + RAD);<z>
) {<z>
)) {<z>
);<z>
getName());<z>
{<z>
|| compileTimeType == null)<z>
)) {<z>
this.binding.original();<z>
s) {<z>
() == ShapeType.EDGE_SHAPE) {<z>
final EdgeShape edge = (EdgeShape)s;<z>
m_nextEdge != null) {<z>
;<z>
) {<z>
.m_nextEdge = null;<z>
();<z>
getTile(ConveyorTile tile) throws GeoWebCacheException, IOException,<z>
getMimeType();<z>
;<z>
== null) {<z>
get(0);<z>
else {<z>
(!formats.contains(mime)) {<z>
IllegalArgumentException(mime.getFormat()<z>
));<z>
final String tileGridSetId = tile.getGridSetId();<z>
;<z>
gridSubset == null) {<z>
tileGridSetId);<z>
gridLoc = tile.getTileIndex();<z>
);<z>
.checkCoverage(gridLoc);<z>
returnTile;<z>
metaX;<z>
int metaY;<z>
) {<z>
);<z>
;<z>
else {<z>
metaX = metaY = 1;<z>
);<z>
(returnTile);<z>
returnTile;<z>
] getByteBlock() {<z>
{<z>
.addAndGet(blockSize);<z>
];<z>
;<z>
null;<z>
return b;<z>
getThumbnailIcon() {<z>
null) {<z>
(getThumbnail() != null) {<z>
));;<z>
thumbnailIcon;<z>
) throws CmdLineException {<z>
CmdLineImpl(args);<z>
new HashSet<OptionHandler>();<z>
argIndex = 0;<z>
() ) {<z>
.getCurrentToken();<z>
if( isOption(arg) ) {<z>
.indexOf('=')!=-1;<z>
findOptionHandler(arg) : findOptionByName(arg);<z>
{<z>
arg));<z>
);<z>
{<z>
argIndex >= arguments.size()) {<z>
Messages.NO_ARGUMENT_ALLOWED : Messages.TOO_MANY_ARGUMENTS;<z>
, msg.format(arg));<z>
);<z>
!currentOptionHandler.option.isMultiValued())<z>
argIndex++;<z>
parseArguments(cmdLine);<z>
;<z>
currentOptionHandler);<z>
options)<z>
contains(handler))<z>
.toString()));<z>
for (OptionHandler handler : arguments)<z>
.contains(handler))<z>
;<z>
resultList) {<z>
eINSTANCE.createCompleteSignatureCS();<z>
.setSimpleSignature(simpleSignatureCS);<z>
(resultList);<z>
return result;<z>
AppWidgetProviderInfo info,<z>
, int[] cellSpan, HolographicOutlineHelper holoOutlineHelper) {<z>
= holoOutlineHelper;<z>
id.widget_preview);<z>
maxWidth > -1) {<z>
image.setMaxWidth(maxWidth);<z>
);<z>
;<z>
) findViewById(R.id.widget_name);<z>
);<z>
) findViewById(R.id.widget_dims);<z>
null) {<z>
, cellSpan[1]));<z>
)<z>
isValid())<z>
(localConnectionPoint))<z>
localConnectionPoint.hashCode();<z>
isNew)<z>
localConnectionPoint);<z>
);<z>
AnActionEvent e) {<z>
();<z>
.PROJECT.getData(dataContext);<z>
presentation = e.getPresentation();<z>
.getData(dataContext);<z>
);<z>
showAction);<z>
showAction);<z>
resolve, boolean coreType) {<z>
(featureID) {<z>
CRITERIA__CONTEXT:<z>
getContext();<z>
.CRITERIA__ASSUMPTION:<z>
;<z>
.eGet(featureID, resolve, coreType);<z>
) throws LifecycleException {<z>
throw new LifecycleException("The server is already running! "<z>
;<z>
{<z>
in=new Integer(i);<z>
(in))<z>
Set) sccCache.get(in);<z>
scc.getSCC(i);<z>
new HashSet();<z>
();) {<z>
) nodeit.next();<z>
.get(gn);<z>
(r);<z>
);<z>
;<z>
, final int length) {<z>
-2;<z>
offset, idx);<z>
= 0;<z>
) ' ';<z>
;<z>
{<z>
= new LinkageError();<z>
.initCause(e);<z>
throw x;<z>
e) {<z>
protected void loadChildren()<z>
= true;<z>
null)<z>
E>>> vectorMap = CollectionMaps.createListMap(<z>
,<z>
Vector.class);<z>
>>) childValue;<z>
> path : vector)<z>
(path.getPathCount() > level)<z>
path.getPathComponent(level);<z>
(key, path);<z>
vectorMap.keySet())<z>
key);<z>
;<z>
)<z>
;<z>
+ 1, key, vector);<z>
setComparator(mostRecentComparator);<z>
if (mostRecentComparator == null || children == null)<z>
child);<z>
.binarySearch(children, child, mostRecentComparator);<z>
if (index < 0)<z>
child, -(index + 1));<z>
;<z>
= null;<z>
()<z>
)<z>
);<z>
NoSuchElementException e)<z>
-1;<z>
= true;<z>
-1);<z>
looksLikeController(IFile currentFile) {<z>
false;<z>
;<z>
.endsWith(CONTROLLER_FILE_SUFFIX)) return true;<z>
return false;<z>
> getMultiRules() {<z>
null) {<z>
;<z>
return multiRules;<z>
visitUnspecifiedValueExp(@NonNull UnspecifiedValueExp uv) {<z>
);<z>
) {<z>
" : ");<z>
);<z>
;<z>
WebloungeRequest request, WebloungeResponse response,<z>
throws ActionException {<z>
);<z>
+ "</h1>", response.getWriter());<z>
request, response, PAGELET_ID, null);<z>
SKIP_COMPOSER;<z>
(IOException e) {<z>
ActionException("Unable to send json response", e);<z>
private TryStatement tryStatement()<z>
TRY) codeBug();<z>
;<z>
= getAndResetJsDoc();<z>
lineno, finallyPos = -1;<z>
) != Token.LC) {<z>
"msg.no.brace.try");<z>
();<z>
int tryEnd = getNodeEnd(tryBlock);<z>
;<z>
false;<z>
peek = peekToken();<z>
{<z>
CATCH)) {<z>
.lineno;<z>
sawDefaultCatch) {<z>
("msg.catch.unreachable");<z>
1, guardPos = -1;<z>
, "msg.no.paren.catch"))<z>
lp = ts.tokenBeg;<z>
mustMatchToken(Token.NAME, "msg.bad.catchcond");<z>
();<z>
();<z>
inUseStrictDirective) {<z>
.equals(varNameString) ||<z>
))<z>
("msg.bad.id.strict", varNameString);<z>
;<z>
(Token.IF)) {<z>
;<z>
();<z>
} else {<z>
sawDefaultCatch = true;<z>
mustMatchToken(Token.RP, "msg.bad.catchcond"))<z>
.tokenBeg;<z>
);<z>
;<z>
tryEnd = getNodeEnd(catchBlock);<z>
CatchClause(catchPos);<z>
varName);<z>
setCatchCondition(catchCond);<z>
catchBlock);<z>
{<z>
setIfPosition(guardPos - catchPos);<z>
catchNode.setParens(lp, rp);<z>
.setLineno(catchLineNum);<z>
))<z>
tokenEnd;<z>
tryEnd - catchPos);<z>
null)<z>
= new ArrayList<CatchClause>();<z>
clauses.add(catchNode);<z>
if (peek != Token.FINALLY) {<z>
, "msg.try.no.catchfinally");<z>
AstNode finallyBlock = null;<z>
FINALLY)) {<z>
.tokenBeg;<z>
statement();<z>
getNodeEnd(finallyBlock);<z>
);<z>
setTryBlock(tryBlock);<z>
;<z>
;<z>
if (finallyPos != -1) {<z>
(finallyPos - tryPos);<z>
;<z>
(jsdocNode != null) {<z>
setJsDocNode(jsdocNode);<z>
return pn;<z>
) {<z>
(listener)) {<z>
mListeners.add(listener);<z>
void doLayout ()<z>
doLayout();<z>
();<z>
<File> newFiles) {<z>
);<z>
newFiles = newFiles;<z>
();<z>
();<z>
;<z>
V,E>,E> context) {<z>
> graph = context.graph;<z>
context.element;<z>
endpoints = graph.getEndpoints(e);<z>
if(endpoints != null) {<z>
equals(endpoints.getSecond());<z>
) {<z>
);<z>
;<z>
() {<z>
(<z>
ctx);<z>
result(query);<z>
res;<z>
(false)<z>
String getActiveProjectDir()<z>
if (workbenchContext_.getActiveProjectDir() != null)<z>
.getActiveProjectDir().getPath();<z>
return "";<z>
{<z>
());<z>
|| collection == null) {<z>
("Missing required endpoint configuration: database and/or collection");<z>
getDB(database);<z>
) {<z>
("Could not initialise MongoDbComponent. Database " + database + " does not exist.");<z>
)) {<z>
+ " and createCollection is false.");<z>
= db.getCollection(collection);<z>
LOG.info("MongoDb component initialised and endpoint bound to MongoDB collection with the following paramters. Address list: {}, Db: {}, Collection: {}",<z>
.getName()});<z>
private Comparator fileComparator = new Comparator() {<z>
b) {<z>
)a, (File)b);<z>
f1, File f2) {<z>
(f1, f2);<z>
, final String cover)<z>
name;<z>
;<z>
XmlPrimtiveAssertion getThrottlePolicy(Collection components) throws AxisFault {<z>
assertionName;<z>
(Object comp : components) {<z>
if (comp instanceof Policy) {<z>
comp;<z>
getAlternatives();<z>
hasNext(); ) {<z>
);<z>
(object instanceof List) {<z>
(List) object;<z>
: list) {<z>
(assertObj instanceof XmlPrimtiveAssertion) {<z>
XmlPrimtiveAssertion primitiveAssertion = (XmlPrimtiveAssertion)<z>
assertionName = primitiveAssertion.getName();<z>
assertionName.equals(<z>
.SERVICE_THROTTLE_ASSERTION_QNAME)<z>
.equals(<z>
) ||<z>
assertionName.equals(ThrottleConstants<z>
||<z>
.equals(ThrottleConstants<z>
.MEDIATOR_THROTTLE_ASSERTION_QNAME)) {<z>
()) {<z>
);<z>
policyToUpdate = policy;<z>
return primitiveAssertion;<z>
;<z>
(HttpPrincipal httpPrincipal,<z>
fileEntryId)<z>
PortalException,<z>
.kernel.exception.SystemException {<z>
class.getName(),<z>
);<z>
,<z>
);<z>
methodHandler);<z>
Exception e) {<z>
) {<z>
e;<z>
exception.SystemException) {<z>
.SystemException)e;<z>
.SystemException(e);<z>
SystemException se) {<z>
);<z>
throw se;<z>
(TagSet old, TagMatcher m) {<z>
)) {<z>
copy(old, m);<z>
;<z>
<ObjectId, Integer>();<z>
) {<z>
id = r.get();<z>
containsKey(id)) {<z>
r.flag);<z>
.newRefs) {<z>
);<z>
)) {<z>
(!byObj.containsKey(id)) {<z>
return false;<z>
;<z>
newRef : m.newRefs) {<z>
;<z>
containsKey(newRef.getName())) {<z>
id);<z>
= refs.size();<z>
(newRef, newFlag));<z>
{<z>
tag.refFlags.get(srcFlag)) {<z>
refFlags.set(newFlag);<z>
true;<z>
printReportString() {<z>
("java.version"));<z>
"java.vm.info"));<z>
.println("Please report this to the 6.370 devs, by posting to the forum\n"<z>
+ "or sporadic. Thanks!");<z>
public void processRejection(<z>
themeDisplay) {<z>
getClassNameId());<z>
i++) {<z>
requestInterpreter =<z>
.get(i);<z>
requestInterpreter.hasClassName(className)) {<z>
= requestInterpreter.processRejection(<z>
, themeDisplay);<z>
{<z>
InteractionEvent>> attention, InteractionContext temp) {<z>
) {<z>
attention.get(handle);<z>
InteractionEvent>();<z>
() > 1) {<z>
collapseEventsByHour(activityEvents);<z>
(activityEvents.size() == 1) {<z>
{<z>
);<z>
)) {<z>
: collapsedEvents) {<z>
);<z>
.clear();<z>
catch (Exception e) {<z>
.ID_PLUGIN,<z>
);<z>
res)<z>
.dqlns);<z>
"var", DQLRequest.varns);<z>
.rdfns);<z>
, DQLRequest.rdfsns);<z>
, DQLRequest.damlns);<z>
mapFile) {<z>
+ mapFile;<z>
OsmHandler();<z>
);<z>
onCreateLoader(int id, Bundle args) {<z>
;<z>
!= null) {<z>
.parse("https://api.del.icio.us/v1/json/posts/all").buildUpon()<z>
tag)<z>
()<z>
();<z>
setListShown(false);<z>
)), url);<z>
int featureID, boolean resolve, boolean coreType) {<z>
(featureID) {<z>
case EnvironmentPackage.NAMESPACE__OWNED_NAMESPACES:<z>
);<z>
EnvironmentPackage.NAMESPACE__OWNER:<z>
)<z>
;<z>
;<z>
NAMESPACE__NAME:<z>
();<z>
coreType);<z>
Player player, int itemId, int questId)<z>
;<z>
()<z>
== null) {<z>
new MacroPluginFactory();<z>
instance;<z>
int w, int h) {<z>
image.getTexture()) {<z>
null) {<z>
();<z>
= image.getTexture();<z>
);<z>
renderer.glBegin(GL_QUADS);<z>
;<z>
(), image.getTy0());<z>
.getY());<z>
image.getTx1();<z>
;<z>
);<z>
));<z>
= image.getTy1();<z>
+ w, y + h);<z>
);<z>
.getY());<z>
y + h);<z>
(image.getTx0(), ty1);<z>
));<z>
event, Game game) {<z>
)) {<z>
null;<z>
);<z>
(permanent != null) {<z>
sourceControllerId = permanent.getControllerId();<z>
else {<z>
));<z>
{<z>
.getControllerId();<z>
controllerId).contains(sourceControllerId)) {<z>
return true;<z>
false;<z>
(byte[] buffer)<z>
throws BadRequestException {<z>
= loadFields(buffer,3);<z>
1],fields[2]);<z>
) {<z>
new SingleOrderByOperandBuilder(builder, order) {<z>
DynamicOperand operand ) {<z>
.addOrdering(new LowerCase(operand));<z>
private PrivateKeyEntry getPrivateKeyEntry() throws Exception {<z>
debug("SamlCallbackHandler.getDefaultPrivKeyCert() -- Begin");<z>
null;<z>
PrivateKeyEntry pkEntry = null;<z>
client_key_alias = System.getProperty("CLIENT_KEY_ALIAS");<z>
if (client_key_alias != null) {<z>
getProperty("javax.net.ssl.keyStorePassword");<z>
) {<z>
,<z>
(password.toCharArray()));<z>
} catch (NoSuchAlgorithmException ex) {<z>
.error("Error initializing Private Key: " + ex);<z>
;<z>
} catch (KeyStoreException ex) {<z>
("Error initializing Private Key: " + ex);<z>
;<z>
(UnrecoverableEntryException ex) {<z>
"Error initializing Private Key: " + ex);<z>
);<z>
{<z>
.error("javax.net.ssl.keyStorePassword is not defined in domain.xml");<z>
{<z>
);<z>
"SamlCallbackHandler.getDefaultPrivKeyCert() -- End");<z>
return pkEntry;<z>
{<z>
= 0;<z>
) {<z>
2 > minimumPixelHeight) {<z>
()/2+1;<z>
)) {<z>
getHeight() + 1;<z>
< Page.DEFAULT_MINIMUM_HEIGHT * zoom) {<z>
.DEFAULT_MINIMUM_HEIGHT * zoom);<z>
(OutputStream output, ROIComponent component)<z>
output == null)<z>
);<z>
component);<z>
);<z>
)<z>
("Unable to close output file.");<z>
AppViewImpl getInstance() {<z>
{<z>
);<z>
instance;<z>
startFrom, char letter, boolean forceAdd) {<z>
i <= lastIndexUsed; i++) {<z>
.length) return -1;<z>
== letter) {<z>
;<z>
(!forceAdd) {<z>
-1;<z>
(letter);<z>
() throws IOException {<z>
in.close();<z>
;<z>
null;<z>
readRecordsCounter != null) {<z>
readRecordsCounter.increment(numRecordsRead);<z>
null) {<z>
decompressor.reset();<z>
decompressor);<z>
= null;<z>
()<z>
) {<z>
saveResumeData( true );<z>
}catch( Exception e ){<z>
(e));<z>
!assumedComplete ){<z>
();<z>
updateWidgetIds() {<z>
TAG, "Creating the list of play/pause widgets.");<z>
mWidgetIds == null) {<z>
();<z>
else {<z>
mWidgetIds.clear();<z>
.getInstance(this);<z>
ComponentName(this, Widget.class);<z>
;<z>
SharedPreferences prefs =<z>
);<z>
: widgetIds) {<z>
ACTION_PREF_PREFIX + id;<z>
-1);<z>
action_index ==<z>
.PLAY_PAUSE_ACTION) {<z>
;<z>
IEObjectConsumer inst) {<z>
(index) {<z>
inst);<z>
default: return null;<z>
latitude) {<z>
radToDeg(ProjectionMath.normalizeLatitude(latitude));<z>
(degrees < -80 || degrees > 84)<z>
return 0;<z>
)<z>
return 24;<z>
(degrees + 80) / 8 + 3;<z>
repository) {<z>
return new Validator() {<z>
monitor) throws CoreException {<z>
)) {<z>
.INVALID_SERVERURL));<z>
= null;<z>
null;<z>
= ClientFactory.createClient(repository);<z>
.checkClientConnection(monitor);<z>
(RedmineStatusException e) {<z>
{<z>
PLUGIN_ID, Messages.INVALID_CREDENTIALS));<z>
CoreException(e.getStatus());<z>
getRepositoryUrl();<z>
detectedVersion);<z>
);<z>
;<z>
);<z>
.PLUGIN_ID, msg));<z>
RedmineServerVersion detected) throws CoreException {<z>
plugin==null) {<z>
PLUGIN_ID, Messages.ERRMSG_CONNECTION_TEST_FAILED_UNKNOWN_VERSION));<z>
required.plugin)<0) {<z>
Messages.ERRMSG_CONNECTION_TEST_FAILED_WRONG_VERSION;<z>
;<z>
;<z>
void endAttribute(String qName, StringBuffer textBuffer) {<z>
("composite")) {<z>
;<z>
else {<z>
_elementAttributeHandler || _elementAttributeHandler.isEndAttribute(qName)) {<z>
;<z>
null;<z>
{<z>
qName, textBuffer);<z>
solution) {<z>
(NurseRoster) solution;<z>
employeeList = nurseRoster.getEmployeeList();<z>
shiftAssignmentList = new ArrayList<ShiftAssignment>(<z>
nurseRoster.getShiftAssignmentList());<z>
; it.hasNext(); ) {<z>
it.next();<z>
(nurseRoster, shiftAssignment)) {<z>
;<z>
, List<AssignmentSequence>> employeeToAssignmentSequenceListMap<z>
(employeeList.size());<z>
;<z>
) {<z>
put(employee,<z>
;<z>
) {<z>
);<z>
= employeeToAssignmentSequenceListMap.get(employee);<z>
{<z>
new AssignmentSequence(shiftAssignment);<z>
;<z>
{<z>
assignmentSequenceList<z>
);<z>
) {<z>
(shiftAssignment);<z>
} else {<z>
;<z>
assignmentSequenceList.add(assignmentSequence);<z>
ArrayList<Move>();<z>
) {<z>
.next();<z>
<AssignmentSequence> leftAssignmentSequenceList<z>
;<z>
.nextIndex());<z>
) {<z>
rightEmployeeIt.next();<z>
List<AssignmentSequence> rightAssignmentSequenceList<z>
get(rightEmployee);<z>
;<z>
leftAssignmentSequenceList) {<z>
;<z>
; leftIndex++) {<z>
(AssignmentSequence rightAssignmentSequence : rightAssignmentSequenceList) {<z>
();<z>
() - SWITCH_LENGTH; rightIndex++) {<z>
<Move>(SWITCH_LENGTH * 2);<z>
leftShiftAssignmentList<z>
leftIndex, leftIndex + SWITCH_LENGTH)) {<z>
(leftShiftAssignment, rightEmployee));<z>
: rightShiftAssignmentList<z>
)) {<z>
);<z>
;<z>
moveList;<z>
u) {<z>
return null;<z>
("/"))<z>
.length()-1);<z>
(":/"))<z>
"http://"+u;<z>
);<z>
public void create()<z>
();<z>
.addTraverseListener(new TraverseListener()<z>
void keyTraversed(TraverseEvent e)<z>
)<z>
time;<z>
);<z>
= e.widget;<z>
;<z>
doit;<z>
.keyCode;<z>
;<z>
= e.character;<z>
(SWT.KeyDown, e1);<z>
;<z>
);<z>
Set<HttpMethod> allowedMethods) {<z>
.getResponse().addHeader(<z>
""));<z>
().getMethod())) {<z>
.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED);<z>
) {<z>
(e);<z>
public static void initialize() {<z>
ShadeConfig.theme.isSet())<z>
;<z>
.getProperty( "theme" ) == null)<z>
= FALLBACK;<z>
java.util.Locale.ENGLISH ) );<z>
(IllegalArgumentException ignored) {<z>
{<z>
Color customColor = null;<z>
( "theme" ).trim() );<z>
NumberFormatException e) {<z>
0)<z>
getProperty( "theme" ).trim() );<z>
null) {<z>
).setBase( customColor );<z>
;<z>
FALLBACK;<z>
.set( theme.getLookAndFeel() );<z>
contains(Object o) {<z>
return false;<z>
(p)) {<z>
= p.item;<z>
isData) {<z>
&& o.equals(item))<z>
return true;<z>
else if (item == null)<z>
false;<z>
getStatementNode(ASTNode node) {<z>
node;<z>
!= null ) {<z>
{<z>
(StatementNode) current;<z>
.getParent();<z>
return null;<z>
boolean onEviction(String key, String exchangeId) {<z>
;<z>
);<z>
inProgress) {<z>
;<z>
;<z>
key);<z>
answer != null) {<z>
"timeout");<z>
;<z>
true;<z>
rsp) throws IOException {<z>
false;<z>
= req.getParams();<z>
required();<z>
required.get(CoreAdminParams.CORE);<z>
coreContainer.getCore(cname);<z>
core != null) {<z>
;<z>
(CoreAdminParams.INDEX_DIR);<z>
);<z>
[dirNames.length];<z>
) {<z>
(dirNames[i]);<z>
UpdateRequestProcessorChain processorChain =<z>
));<z>
req.getParams());<z>
processor =<z>
;<z>
;<z>
finally {<z>
core.close();<z>
doPersist;<z>
private DocumentHandler createContactDocumentHandler(<z>
, PoxPayloadOut> ctx, String inAuthority,<z>
String inItem) throws Exception {<z>
null;<z>
inAuthority, inItem, ui);<z>
<Object> getSencalendarOrSencalendaractive() {<z>
== null) {<z>
Object>();<z>
.sencalendarOrSencalendaractive;<z>
(String message) {<z>
())<z>
.getCookie();<z>
(cookie == null) {<z>
;<z>
else {<z>
.getUsername();<z>
equalsIgnoreCase("guest"))<z>
+ message);<z>
);<z>
GidrahMovement(Gidrah gidrah) {<z>
;<z>
.getFeature();<z>
);<z>
();<z>
getDiagonal();<z>
GidrahGameMapTopology(this);<z>
AStar(topology);<z>
(!feature.isGidlet()) {<z>
, occupiedY = gidrah.getTileY());<z>
, double endFraction)<z>
length()),<z>
+endFraction*length()));<z>
(final Object bean) throws Exception {<z>
(11);<z>
>(7));<z>
bean, weightedFields, -1);<z>
= expandFields(weightedFields);<z>
;<z>
), expandedFields, 0, ret);<z>
;<z>
getStreetGraphForRegion(double latFrom,<z>
lonTo) {<z>
if (!_enabled)<z>
"service disabled");<z>
(lonFrom, lonTo);<z>
, lonTo);<z>
min(latFrom, latTo);<z>
.max(latFrom, latTo);<z>
x1, x2, y1, y2);<z>
> vertices = _streetVertexIndexService.getVerticesForEnvelope(env);<z>
VertexBean>();<z>
: vertices)<z>
;<z>
: vertices) {<z>
= null;<z>
HasEdges) {<z>
) vertex;<z>
);<z>
else {<z>
_graphService.getGraph();<z>
vertex.getLabel());<z>
null)<z>
.getOutgoing();<z>
null) {<z>
= getVertexAsBean(beansByVertex, vertex);<z>
);<z>
edge : edges) {<z>
EdgeNarrative) {<z>
narrative = (EdgeNarrative) edge;<z>
;<z>
);<z>
;<z>
{<z>
new ArrayList<CoordinatePoint>();<z>
;<z>
);<z>
;<z>
(from);<z>
beansByVertex,<z>
()));<z>
Object>();<z>
(edge instanceof StreetEdge) {<z>
= (StreetEdge) edge;<z>
();<z>
)<z>
toLowerCase());<z>
(!tags.isEmpty())<z>
tags);<z>
);<z>
isEmpty())<z>
setOutgoing(edgeNarratives);<z>
());<z>
>(beans, false);<z>
max, int nstep){<z>
);<z>
[nstep];<z>
) {<z>
] = min + i*step;<z>
grid;<z>
{<z>
;<z>
= store.propertyNames();<z>
++) {<z>
;<z>
.add(string);<z>
return result;<z>
withTitle(String value)<z>
value);<z>
return this;<z>
throws Exception {<z>
(element, "item");<z>
];<z>
.size(); i ++) {<z>
;<z>
).trim();<z>
, A> __3() {<z>
) {<z>
v) {<z>
._3();<z>
(final RadComponent component) {<z>
(component);<z>
(parentValue == null) return 0;<z>
getField(myFieldName).getInt(parentValue);<z>
(Exception e) {<z>
throw new RuntimeException(e);<z>
